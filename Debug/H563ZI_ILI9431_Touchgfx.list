
H563ZI_ILI9431_Touchgfx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000024c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021ed8  0800024c  0800024c  0000124c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000021f8  08022124  08022124  00023124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000038da  0802431c  0802431c  0002531c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08027bf8  08027bf8  00028bf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000018  08027c10  08027c10  00028c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08027c28  08027c28  00029300  2**0
                  CONTENTS
  7 .ARM          00000000  08027c28  08027c28  00029300  2**0
                  CONTENTS
  8 .preinit_array 00000000  08027c28  08027c28  00029300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000018  08027c28  08027c28  00028c28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .fini_array   0000000c  08027c40  08027c40  00028c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .data         000000f4  20000000  08027c4c  00029000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000100  08027d40  00029100  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000200  08027e40  00029200  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00002c68  20000300  08027f40  00029300  2**2
                  ALLOC
 15 ._user_heap_stack 00000600  20002f68  08027f40  00029f68  2**0
                  ALLOC
 16 .ARM.attributes 00000036  00000000  00000000  00029300  2**0
                  CONTENTS, READONLY
 17 .debug_info   0007e148  00000000  00000000  00029336  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0000e74c  00000000  00000000  000a747e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000029c0  00000000  00000000  000b5bd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00001f03  00000000  00000000  000b8590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  0003af72  00000000  00000000  000ba493  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00033876  00000000  00000000  000f5405  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0015c39a  00000000  00000000  00128c7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  00285015  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000b980  00000000  00000000  002850d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 0000007e  00000000  00000000  00290a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800024c <__do_global_dtors_aux>:
 800024c:	b510      	push	{r4, lr}
 800024e:	4c05      	ldr	r4, [pc, #20]	@ (8000264 <__do_global_dtors_aux+0x18>)
 8000250:	7823      	ldrb	r3, [r4, #0]
 8000252:	b933      	cbnz	r3, 8000262 <__do_global_dtors_aux+0x16>
 8000254:	4b04      	ldr	r3, [pc, #16]	@ (8000268 <__do_global_dtors_aux+0x1c>)
 8000256:	b113      	cbz	r3, 800025e <__do_global_dtors_aux+0x12>
 8000258:	4804      	ldr	r0, [pc, #16]	@ (800026c <__do_global_dtors_aux+0x20>)
 800025a:	f3af 8000 	nop.w
 800025e:	2301      	movs	r3, #1
 8000260:	7023      	strb	r3, [r4, #0]
 8000262:	bd10      	pop	{r4, pc}
 8000264:	20000300 	.word	0x20000300
 8000268:	00000000 	.word	0x00000000
 800026c:	0802210c 	.word	0x0802210c

08000270 <frame_dummy>:
 8000270:	b508      	push	{r3, lr}
 8000272:	4b03      	ldr	r3, [pc, #12]	@ (8000280 <frame_dummy+0x10>)
 8000274:	b11b      	cbz	r3, 800027e <frame_dummy+0xe>
 8000276:	4903      	ldr	r1, [pc, #12]	@ (8000284 <frame_dummy+0x14>)
 8000278:	4803      	ldr	r0, [pc, #12]	@ (8000288 <frame_dummy+0x18>)
 800027a:	f3af 8000 	nop.w
 800027e:	bd08      	pop	{r3, pc}
 8000280:	00000000 	.word	0x00000000
 8000284:	20000304 	.word	0x20000304
 8000288:	0802210c 	.word	0x0802210c

0800028c <ILI9341_Init>:
static void DC_H(void);
static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 8000290:	f000 f99d 	bl	80005ce <ILI9341_Reset>
	ILI9341_SoftReset();
 8000294:	f000 f9ae 	bl	80005f4 <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 8000298:	20cb      	movs	r0, #203	@ 0xcb
 800029a:	f000 f9c5 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 800029e:	2039      	movs	r0, #57	@ 0x39
 80002a0:	f000 f9dc 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80002a4:	202c      	movs	r0, #44	@ 0x2c
 80002a6:	f000 f9d9 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002aa:	2000      	movs	r0, #0
 80002ac:	f000 f9d6 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80002b0:	2034      	movs	r0, #52	@ 0x34
 80002b2:	f000 f9d3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80002b6:	2002      	movs	r0, #2
 80002b8:	f000 f9d0 	bl	800065c <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80002bc:	20cf      	movs	r0, #207	@ 0xcf
 80002be:	f000 f9b3 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80002c2:	2000      	movs	r0, #0
 80002c4:	f000 f9ca 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80002c8:	20c1      	movs	r0, #193	@ 0xc1
 80002ca:	f000 f9c7 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80002ce:	2030      	movs	r0, #48	@ 0x30
 80002d0:	f000 f9c4 	bl	800065c <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80002d4:	20e8      	movs	r0, #232	@ 0xe8
 80002d6:	f000 f9a7 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80002da:	2085      	movs	r0, #133	@ 0x85
 80002dc:	f000 f9be 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002e0:	2000      	movs	r0, #0
 80002e2:	f000 f9bb 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 80002e6:	2078      	movs	r0, #120	@ 0x78
 80002e8:	f000 f9b8 	bl	800065c <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 80002ec:	20ea      	movs	r0, #234	@ 0xea
 80002ee:	f000 f99b 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80002f2:	2000      	movs	r0, #0
 80002f4:	f000 f9b2 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002f8:	2000      	movs	r0, #0
 80002fa:	f000 f9af 	bl	800065c <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 80002fe:	20ed      	movs	r0, #237	@ 0xed
 8000300:	f000 f992 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000304:	2064      	movs	r0, #100	@ 0x64
 8000306:	f000 f9a9 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800030a:	2003      	movs	r0, #3
 800030c:	f000 f9a6 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000310:	2012      	movs	r0, #18
 8000312:	f000 f9a3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 8000316:	2081      	movs	r0, #129	@ 0x81
 8000318:	f000 f9a0 	bl	800065c <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 800031c:	20f7      	movs	r0, #247	@ 0xf7
 800031e:	f000 f983 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000322:	2020      	movs	r0, #32
 8000324:	f000 f99a 	bl	800065c <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 8000328:	20c0      	movs	r0, #192	@ 0xc0
 800032a:	f000 f97d 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800032e:	2010      	movs	r0, #16
 8000330:	f000 f994 	bl	800065c <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000334:	20c1      	movs	r0, #193	@ 0xc1
 8000336:	f000 f977 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800033a:	2010      	movs	r0, #16
 800033c:	f000 f98e 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000340:	20c5      	movs	r0, #197	@ 0xc5
 8000342:	f000 f971 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 8000346:	203e      	movs	r0, #62	@ 0x3e
 8000348:	f000 f988 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 800034c:	2028      	movs	r0, #40	@ 0x28
 800034e:	f000 f985 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000352:	20c7      	movs	r0, #199	@ 0xc7
 8000354:	f000 f968 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 8000358:	2086      	movs	r0, #134	@ 0x86
 800035a:	f000 f97f 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 800035e:	2036      	movs	r0, #54	@ 0x36
 8000360:	f000 f962 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000364:	2048      	movs	r0, #72	@ 0x48
 8000366:	f000 f979 	bl	800065c <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800036a:	203a      	movs	r0, #58	@ 0x3a
 800036c:	f000 f95c 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000370:	2055      	movs	r0, #85	@ 0x55
 8000372:	f000 f973 	bl	800065c <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 8000376:	20b1      	movs	r0, #177	@ 0xb1
 8000378:	f000 f956 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800037c:	2000      	movs	r0, #0
 800037e:	f000 f96d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 8000382:	2018      	movs	r0, #24
 8000384:	f000 f96a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 8000388:	20b6      	movs	r0, #182	@ 0xb6
 800038a:	f000 f94d 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 800038e:	2008      	movs	r0, #8
 8000390:	f000 f964 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 8000394:	2082      	movs	r0, #130	@ 0x82
 8000396:	f000 f961 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 800039a:	2027      	movs	r0, #39	@ 0x27
 800039c:	f000 f95e 	bl	800065c <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80003a0:	20f2      	movs	r0, #242	@ 0xf2
 80003a2:	f000 f941 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003a6:	2000      	movs	r0, #0
 80003a8:	f000 f958 	bl	800065c <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80003ac:	2026      	movs	r0, #38	@ 0x26
 80003ae:	f000 f93b 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80003b2:	2001      	movs	r0, #1
 80003b4:	f000 f952 	bl	800065c <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80003b8:	20e0      	movs	r0, #224	@ 0xe0
 80003ba:	f000 f935 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80003be:	200f      	movs	r0, #15
 80003c0:	f000 f94c 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80003c4:	2031      	movs	r0, #49	@ 0x31
 80003c6:	f000 f949 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80003ca:	202b      	movs	r0, #43	@ 0x2b
 80003cc:	f000 f946 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80003d0:	200c      	movs	r0, #12
 80003d2:	f000 f943 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80003d6:	200e      	movs	r0, #14
 80003d8:	f000 f940 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 80003dc:	2008      	movs	r0, #8
 80003de:	f000 f93d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 80003e2:	204e      	movs	r0, #78	@ 0x4e
 80003e4:	f000 f93a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 80003e8:	20f1      	movs	r0, #241	@ 0xf1
 80003ea:	f000 f937 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 80003ee:	2037      	movs	r0, #55	@ 0x37
 80003f0:	f000 f934 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 80003f4:	2007      	movs	r0, #7
 80003f6:	f000 f931 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 80003fa:	2010      	movs	r0, #16
 80003fc:	f000 f92e 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000400:	2003      	movs	r0, #3
 8000402:	f000 f92b 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000406:	200e      	movs	r0, #14
 8000408:	f000 f928 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 800040c:	2009      	movs	r0, #9
 800040e:	f000 f925 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000412:	2000      	movs	r0, #0
 8000414:	f000 f922 	bl	800065c <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 8000418:	20e1      	movs	r0, #225	@ 0xe1
 800041a:	f000 f905 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800041e:	2000      	movs	r0, #0
 8000420:	f000 f91c 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000424:	200e      	movs	r0, #14
 8000426:	f000 f919 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800042a:	2014      	movs	r0, #20
 800042c:	f000 f916 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000430:	2003      	movs	r0, #3
 8000432:	f000 f913 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 8000436:	2011      	movs	r0, #17
 8000438:	f000 f910 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 800043c:	2007      	movs	r0, #7
 800043e:	f000 f90d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000442:	2031      	movs	r0, #49	@ 0x31
 8000444:	f000 f90a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 8000448:	20c1      	movs	r0, #193	@ 0xc1
 800044a:	f000 f907 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 800044e:	2048      	movs	r0, #72	@ 0x48
 8000450:	f000 f904 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000454:	2008      	movs	r0, #8
 8000456:	f000 f901 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800045a:	200f      	movs	r0, #15
 800045c:	f000 f8fe 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000460:	200c      	movs	r0, #12
 8000462:	f000 f8fb 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000466:	2031      	movs	r0, #49	@ 0x31
 8000468:	f000 f8f8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 800046c:	2036      	movs	r0, #54	@ 0x36
 800046e:	f000 f8f5 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000472:	200f      	movs	r0, #15
 8000474:	f000 f8f2 	bl	800065c <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 8000478:	2011      	movs	r0, #17
 800047a:	f000 f8d5 	bl	8000628 <LCD_WR_REG>

	HAL_Delay(120);
 800047e:	2078      	movs	r0, #120	@ 0x78
 8000480:	f000 ff56 	bl	8001330 <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 8000484:	2029      	movs	r0, #41	@ 0x29
 8000486:	f000 f8cf 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 800048a:	202c      	movs	r0, #44	@ 0x2c
 800048c:	f000 f8e6 	bl	800065c <LCD_WR_DATA>

	LCD_direction(ROTATE_270);
 8000490:	2003      	movs	r0, #3
 8000492:	f000 f8fd 	bl	8000690 <LCD_direction>

}
 8000496:	bf00      	nop
 8000498:	bd80      	pop	{r7, pc}

0800049a <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 800049a:	b590      	push	{r4, r7, lr}
 800049c:	b083      	sub	sp, #12
 800049e:	af00      	add	r7, sp, #0
 80004a0:	4604      	mov	r4, r0
 80004a2:	4608      	mov	r0, r1
 80004a4:	4611      	mov	r1, r2
 80004a6:	461a      	mov	r2, r3
 80004a8:	4623      	mov	r3, r4
 80004aa:	80fb      	strh	r3, [r7, #6]
 80004ac:	4603      	mov	r3, r0
 80004ae:	80bb      	strh	r3, [r7, #4]
 80004b0:	460b      	mov	r3, r1
 80004b2:	807b      	strh	r3, [r7, #2]
 80004b4:	4613      	mov	r3, r2
 80004b6:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80004b8:	202a      	movs	r0, #42	@ 0x2a
 80004ba:	f000 f8b5 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80004be:	88fb      	ldrh	r3, [r7, #6]
 80004c0:	0a1b      	lsrs	r3, r3, #8
 80004c2:	b29b      	uxth	r3, r3
 80004c4:	b2db      	uxtb	r3, r3
 80004c6:	4618      	mov	r0, r3
 80004c8:	f000 f8c8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80004cc:	88fb      	ldrh	r3, [r7, #6]
 80004ce:	b2db      	uxtb	r3, r3
 80004d0:	4618      	mov	r0, r3
 80004d2:	f000 f8c3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80004d6:	887b      	ldrh	r3, [r7, #2]
 80004d8:	0a1b      	lsrs	r3, r3, #8
 80004da:	b29b      	uxth	r3, r3
 80004dc:	b2db      	uxtb	r3, r3
 80004de:	4618      	mov	r0, r3
 80004e0:	f000 f8bc 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 80004e4:	887b      	ldrh	r3, [r7, #2]
 80004e6:	b2db      	uxtb	r3, r3
 80004e8:	4618      	mov	r0, r3
 80004ea:	f000 f8b7 	bl	800065c <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 80004ee:	202b      	movs	r0, #43	@ 0x2b
 80004f0:	f000 f89a 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 80004f4:	88bb      	ldrh	r3, [r7, #4]
 80004f6:	0a1b      	lsrs	r3, r3, #8
 80004f8:	b29b      	uxth	r3, r3
 80004fa:	b2db      	uxtb	r3, r3
 80004fc:	4618      	mov	r0, r3
 80004fe:	f000 f8ad 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000502:	88bb      	ldrh	r3, [r7, #4]
 8000504:	b2db      	uxtb	r3, r3
 8000506:	4618      	mov	r0, r3
 8000508:	f000 f8a8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 800050c:	883b      	ldrh	r3, [r7, #0]
 800050e:	0a1b      	lsrs	r3, r3, #8
 8000510:	b29b      	uxth	r3, r3
 8000512:	b2db      	uxtb	r3, r3
 8000514:	4618      	mov	r0, r3
 8000516:	f000 f8a1 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800051a:	883b      	ldrh	r3, [r7, #0]
 800051c:	b2db      	uxtb	r3, r3
 800051e:	4618      	mov	r0, r3
 8000520:	f000 f89c 	bl	800065c <LCD_WR_DATA>

}
 8000524:	bf00      	nop
 8000526:	370c      	adds	r7, #12
 8000528:	46bd      	mov	sp, r7
 800052a:	bd90      	pop	{r4, r7, pc}

0800052c <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 800052c:	b480      	push	{r7}
 800052e:	b085      	sub	sp, #20
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
 8000534:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 8000536:	e010      	b.n	800055a <ConvHL+0x2e>
		v = *(s+1);
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	785b      	ldrb	r3, [r3, #1]
 800053c:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	3301      	adds	r3, #1
 8000542:	687a      	ldr	r2, [r7, #4]
 8000544:	7812      	ldrb	r2, [r2, #0]
 8000546:	701a      	strb	r2, [r3, #0]
		*s = v;
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	7bfa      	ldrb	r2, [r7, #15]
 800054c:	701a      	strb	r2, [r3, #0]
		s += 2;
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	3302      	adds	r3, #2
 8000552:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000554:	683b      	ldr	r3, [r7, #0]
 8000556:	3b02      	subs	r3, #2
 8000558:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800055a:	683b      	ldr	r3, [r7, #0]
 800055c:	2b00      	cmp	r3, #0
 800055e:	dceb      	bgt.n	8000538 <ConvHL+0xc>
	}
}
 8000560:	bf00      	nop
 8000562:	bf00      	nop
 8000564:	3714      	adds	r7, #20
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
	...

08000570 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000570:	b580      	push	{r7, lr}
 8000572:	b082      	sub	sp, #8
 8000574:	af00      	add	r7, sp, #0
 8000576:	4603      	mov	r3, r0
 8000578:	603a      	str	r2, [r7, #0]
 800057a:	80fb      	strh	r3, [r7, #6]
 800057c:	460b      	mov	r3, r1
 800057e:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 8000580:	202c      	movs	r0, #44	@ 0x2c
 8000582:	f000 f851 	bl	8000628 <LCD_WR_REG>

	DC_H();
 8000586:	f000 f8e7 	bl	8000758 <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
	ConvHL(s, (int32_t)w*h*2);
 800058a:	88fb      	ldrh	r3, [r7, #6]
 800058c:	88ba      	ldrh	r2, [r7, #4]
 800058e:	fb02 f303 	mul.w	r3, r2, r3
 8000592:	005b      	lsls	r3, r3, #1
 8000594:	4619      	mov	r1, r3
 8000596:	6838      	ldr	r0, [r7, #0]
 8000598:	f7ff ffc8 	bl	800052c <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi1, (uint8_t*)s, w * h *2);
 800059c:	88fa      	ldrh	r2, [r7, #6]
 800059e:	88bb      	ldrh	r3, [r7, #4]
 80005a0:	fb12 f303 	smulbb	r3, r2, r3
 80005a4:	b29b      	uxth	r3, r3
 80005a6:	005b      	lsls	r3, r3, #1
 80005a8:	b29b      	uxth	r3, r3
 80005aa:	461a      	mov	r2, r3
 80005ac:	6839      	ldr	r1, [r7, #0]
 80005ae:	4803      	ldr	r0, [pc, #12]	@ (80005bc <ILI9341_DrawBitmap+0x4c>)
 80005b0:	f005 fd58 	bl	8006064 <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 80005b4:	bf00      	nop
 80005b6:	3708      	adds	r7, #8
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bd80      	pop	{r7, pc}
 80005bc:	20000340 	.word	0x20000340

080005c0 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80005c0:	b480      	push	{r7}
 80005c2:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 80005c4:	bf00      	nop
 80005c6:	46bd      	mov	sp, r7
 80005c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005cc:	4770      	bx	lr

080005ce <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80005ce:	b580      	push	{r7, lr}
 80005d0:	af00      	add	r7, sp, #0
	RESET_L();
 80005d2:	f000 f891 	bl	80006f8 <RESET_L>
	HAL_Delay(100);
 80005d6:	2064      	movs	r0, #100	@ 0x64
 80005d8:	f000 feaa 	bl	8001330 <HAL_Delay>
	RESET_H();
 80005dc:	f000 f898 	bl	8000710 <RESET_H>
	HAL_Delay(100);
 80005e0:	2064      	movs	r0, #100	@ 0x64
 80005e2:	f000 fea5 	bl	8001330 <HAL_Delay>
	CS_L();
 80005e6:	f000 f89f 	bl	8000728 <CS_L>
	LED_H();
 80005ea:	f000 f8c1 	bl	8000770 <LED_H>
}
 80005ee:	bf00      	nop
 80005f0:	bd80      	pop	{r7, pc}
	...

080005f4 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b082      	sub	sp, #8
 80005f8:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 80005fa:	2301      	movs	r3, #1
 80005fc:	71fb      	strb	r3, [r7, #7]
	DC_L();
 80005fe:	f000 f89f 	bl	8000740 <DC_L>
	if (HAL_SPI_Transmit(&hspi1, &cmd, 1, 1000) != HAL_OK) {
 8000602:	1df9      	adds	r1, r7, #7
 8000604:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000608:	2201      	movs	r2, #1
 800060a:	4806      	ldr	r0, [pc, #24]	@ (8000624 <ILI9341_SoftReset+0x30>)
 800060c:	f005 faf2 	bl	8005bf4 <HAL_SPI_Transmit>
 8000610:	4603      	mov	r3, r0
 8000612:	2b00      	cmp	r3, #0
 8000614:	d001      	beq.n	800061a <ILI9341_SoftReset+0x26>
		Error_Handler();
 8000616:	f000 facd 	bl	8000bb4 <Error_Handler>
	}
}
 800061a:	bf00      	nop
 800061c:	3708      	adds	r7, #8
 800061e:	46bd      	mov	sp, r7
 8000620:	bd80      	pop	{r7, pc}
 8000622:	bf00      	nop
 8000624:	20000340 	.word	0x20000340

08000628 <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 8000628:	b580      	push	{r7, lr}
 800062a:	b082      	sub	sp, #8
 800062c:	af00      	add	r7, sp, #0
 800062e:	4603      	mov	r3, r0
 8000630:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000632:	f000 f885 	bl	8000740 <DC_L>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 8000636:	1df9      	adds	r1, r7, #7
 8000638:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800063c:	2201      	movs	r2, #1
 800063e:	4806      	ldr	r0, [pc, #24]	@ (8000658 <LCD_WR_REG+0x30>)
 8000640:	f005 fad8 	bl	8005bf4 <HAL_SPI_Transmit>
 8000644:	4603      	mov	r3, r0
 8000646:	2b00      	cmp	r3, #0
 8000648:	d001      	beq.n	800064e <LCD_WR_REG+0x26>
		Error_Handler();
 800064a:	f000 fab3 	bl	8000bb4 <Error_Handler>
	}
}
 800064e:	bf00      	nop
 8000650:	3708      	adds	r7, #8
 8000652:	46bd      	mov	sp, r7
 8000654:	bd80      	pop	{r7, pc}
 8000656:	bf00      	nop
 8000658:	20000340 	.word	0x20000340

0800065c <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 800065c:	b580      	push	{r7, lr}
 800065e:	b082      	sub	sp, #8
 8000660:	af00      	add	r7, sp, #0
 8000662:	4603      	mov	r3, r0
 8000664:	71fb      	strb	r3, [r7, #7]
	DC_H();
 8000666:	f000 f877 	bl	8000758 <DC_H>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 800066a:	1df9      	adds	r1, r7, #7
 800066c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000670:	2201      	movs	r2, #1
 8000672:	4806      	ldr	r0, [pc, #24]	@ (800068c <LCD_WR_DATA+0x30>)
 8000674:	f005 fabe 	bl	8005bf4 <HAL_SPI_Transmit>
 8000678:	4603      	mov	r3, r0
 800067a:	2b00      	cmp	r3, #0
 800067c:	d001      	beq.n	8000682 <LCD_WR_DATA+0x26>
		Error_Handler();
 800067e:	f000 fa99 	bl	8000bb4 <Error_Handler>
	}
}
 8000682:	bf00      	nop
 8000684:	3708      	adds	r7, #8
 8000686:	46bd      	mov	sp, r7
 8000688:	bd80      	pop	{r7, pc}
 800068a:	bf00      	nop
 800068c:	20000340 	.word	0x20000340

08000690 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 8000690:	b580      	push	{r7, lr}
 8000692:	b082      	sub	sp, #8
 8000694:	af00      	add	r7, sp, #0
 8000696:	4603      	mov	r3, r0
 8000698:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 800069a:	79fb      	ldrb	r3, [r7, #7]
 800069c:	2b03      	cmp	r3, #3
 800069e:	d827      	bhi.n	80006f0 <LCD_direction+0x60>
 80006a0:	a201      	add	r2, pc, #4	@ (adr r2, 80006a8 <LCD_direction+0x18>)
 80006a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006a6:	bf00      	nop
 80006a8:	080006b9 	.word	0x080006b9
 80006ac:	080006c7 	.word	0x080006c7
 80006b0:	080006d5 	.word	0x080006d5
 80006b4:	080006e3 	.word	0x080006e3
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80006b8:	2036      	movs	r0, #54	@ 0x36
 80006ba:	f7ff ffb5 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80006be:	2048      	movs	r0, #72	@ 0x48
 80006c0:	f7ff ffcc 	bl	800065c <LCD_WR_DATA>
		break;
 80006c4:	e014      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80006c6:	2036      	movs	r0, #54	@ 0x36
 80006c8:	f7ff ffae 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80006cc:	2028      	movs	r0, #40	@ 0x28
 80006ce:	f7ff ffc5 	bl	800065c <LCD_WR_DATA>
		break;
 80006d2:	e00d      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80006d4:	2036      	movs	r0, #54	@ 0x36
 80006d6:	f7ff ffa7 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80006da:	2088      	movs	r0, #136	@ 0x88
 80006dc:	f7ff ffbe 	bl	800065c <LCD_WR_DATA>
		break;
 80006e0:	e006      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 80006e2:	2036      	movs	r0, #54	@ 0x36
 80006e4:	f7ff ffa0 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 80006e8:	20e8      	movs	r0, #232	@ 0xe8
 80006ea:	f7ff ffb7 	bl	800065c <LCD_WR_DATA>
		break;
 80006ee:	bf00      	nop
	}
}
 80006f0:	bf00      	nop
 80006f2:	3708      	adds	r7, #8
 80006f4:	46bd      	mov	sp, r7
 80006f6:	bd80      	pop	{r7, pc}

080006f8 <RESET_L>:

static void RESET_L(void)
{
 80006f8:	b580      	push	{r7, lr}
 80006fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 80006fc:	2200      	movs	r2, #0
 80006fe:	2108      	movs	r1, #8
 8000700:	4802      	ldr	r0, [pc, #8]	@ (800070c <RESET_L+0x14>)
 8000702:	f002 f8af 	bl	8002864 <HAL_GPIO_WritePin>
}
 8000706:	bf00      	nop
 8000708:	bd80      	pop	{r7, pc}
 800070a:	bf00      	nop
 800070c:	42020000 	.word	0x42020000

08000710 <RESET_H>:

static void RESET_H(void)
{
 8000710:	b580      	push	{r7, lr}
 8000712:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000714:	2201      	movs	r2, #1
 8000716:	2108      	movs	r1, #8
 8000718:	4802      	ldr	r0, [pc, #8]	@ (8000724 <RESET_H+0x14>)
 800071a:	f002 f8a3 	bl	8002864 <HAL_GPIO_WritePin>
}
 800071e:	bf00      	nop
 8000720:	bd80      	pop	{r7, pc}
 8000722:	bf00      	nop
 8000724:	42020000 	.word	0x42020000

08000728 <CS_L>:

static void CS_L(void)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin, GPIO_PIN_RESET);
 800072c:	2200      	movs	r2, #0
 800072e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000732:	4802      	ldr	r0, [pc, #8]	@ (800073c <CS_L+0x14>)
 8000734:	f002 f896 	bl	8002864 <HAL_GPIO_WritePin>
}
 8000738:	bf00      	nop
 800073a:	bd80      	pop	{r7, pc}
 800073c:	42020400 	.word	0x42020400

08000740 <DC_L>:

static void DC_L(void)
{
 8000740:	b580      	push	{r7, lr}
 8000742:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8000744:	2200      	movs	r2, #0
 8000746:	2101      	movs	r1, #1
 8000748:	4802      	ldr	r0, [pc, #8]	@ (8000754 <DC_L+0x14>)
 800074a:	f002 f88b 	bl	8002864 <HAL_GPIO_WritePin>
}
 800074e:	bf00      	nop
 8000750:	bd80      	pop	{r7, pc}
 8000752:	bf00      	nop
 8000754:	42020400 	.word	0x42020400

08000758 <DC_H>:

static void DC_H(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 800075c:	2201      	movs	r2, #1
 800075e:	2101      	movs	r1, #1
 8000760:	4802      	ldr	r0, [pc, #8]	@ (800076c <DC_H+0x14>)
 8000762:	f002 f87f 	bl	8002864 <HAL_GPIO_WritePin>
}
 8000766:	bf00      	nop
 8000768:	bd80      	pop	{r7, pc}
 800076a:	bf00      	nop
 800076c:	42020400 	.word	0x42020400

08000770 <LED_H>:

static void LED_H(void)
{
 8000770:	b480      	push	{r7}
 8000772:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8000774:	bf00      	nop
 8000776:	46bd      	mov	sp, r7
 8000778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800077c:	4770      	bx	lr
	...

08000780 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000784:	f000 fd8c 	bl	80012a0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000788:	f000 f816 	bl	80007b8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800078c:	f000 f96c 	bl	8000a68 <MX_GPIO_Init>
  MX_GPDMA1_Init();
 8000790:	f000 f8a6 	bl	80008e0 <MX_GPDMA1_Init>
  MX_SPI1_Init();
 8000794:	f000 f8c4 	bl	8000920 <MX_SPI1_Init>
  MX_CRC_Init();
 8000798:	f000 f880 	bl	800089c <MX_CRC_Init>
  MX_TIM2_Init();
 800079c:	f000 f916 	bl	80009cc <MX_TIM2_Init>
  MX_TouchGFX_Init();
 80007a0:	f007 f812 	bl	80077c8 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 80007a4:	4803      	ldr	r0, [pc, #12]	@ (80007b4 <main+0x34>)
 80007a6:	f006 f9ef 	bl	8006b88 <HAL_TIM_Base_Start_IT>
  ILI9341_Init();
 80007aa:	f7ff fd6f 	bl	800028c <ILI9341_Init>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80007ae:	f007 f813 	bl	80077d8 <MX_TouchGFX_Process>
 80007b2:	e7fc      	b.n	80007ae <main+0x2e>
 80007b4:	20000448 	.word	0x20000448

080007b8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b09c      	sub	sp, #112	@ 0x70
 80007bc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007be:	f107 0320 	add.w	r3, r7, #32
 80007c2:	2250      	movs	r2, #80	@ 0x50
 80007c4:	2100      	movs	r1, #0
 80007c6:	4618      	mov	r0, r3
 80007c8:	f020 fe75 	bl	80214b6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007cc:	f107 0308 	add.w	r3, r7, #8
 80007d0:	2200      	movs	r2, #0
 80007d2:	601a      	str	r2, [r3, #0]
 80007d4:	605a      	str	r2, [r3, #4]
 80007d6:	609a      	str	r2, [r3, #8]
 80007d8:	60da      	str	r2, [r3, #12]
 80007da:	611a      	str	r2, [r3, #16]
 80007dc:	615a      	str	r2, [r3, #20]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 80007de:	4b2d      	ldr	r3, [pc, #180]	@ (8000894 <SystemClock_Config+0xdc>)
 80007e0:	691b      	ldr	r3, [r3, #16]
 80007e2:	4a2c      	ldr	r2, [pc, #176]	@ (8000894 <SystemClock_Config+0xdc>)
 80007e4:	f043 0330 	orr.w	r3, r3, #48	@ 0x30
 80007e8:	6113      	str	r3, [r2, #16]
 80007ea:	4b2a      	ldr	r3, [pc, #168]	@ (8000894 <SystemClock_Config+0xdc>)
 80007ec:	691b      	ldr	r3, [r3, #16]
 80007ee:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80007f2:	607b      	str	r3, [r7, #4]
 80007f4:	687b      	ldr	r3, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80007f6:	bf00      	nop
 80007f8:	4b26      	ldr	r3, [pc, #152]	@ (8000894 <SystemClock_Config+0xdc>)
 80007fa:	695b      	ldr	r3, [r3, #20]
 80007fc:	f003 0308 	and.w	r3, r3, #8
 8000800:	2b08      	cmp	r3, #8
 8000802:	d1f9      	bne.n	80007f8 <SystemClock_Config+0x40>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000804:	2301      	movs	r3, #1
 8000806:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000808:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800080c:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800080e:	2302      	movs	r3, #2
 8000810:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLL1_SOURCE_HSE;
 8000812:	2303      	movs	r3, #3
 8000814:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000816:	2301      	movs	r3, #1
 8000818:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 62;
 800081a:	233e      	movs	r3, #62	@ 0x3e
 800081c:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 800081e:	2302      	movs	r3, #2
 8000820:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 10;
 8000822:	230a      	movs	r3, #10
 8000824:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000826:	2302      	movs	r3, #2
 8000828:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1_VCIRANGE_3;
 800082a:	230c      	movs	r3, #12
 800082c:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1_VCORANGE_WIDE;
 800082e:	2300      	movs	r3, #0
 8000830:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 4096;
 8000832:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000836:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000838:	f107 0320 	add.w	r3, r7, #32
 800083c:	4618      	mov	r0, r3
 800083e:	f002 f829 	bl	8002894 <HAL_RCC_OscConfig>
 8000842:	4603      	mov	r3, r0
 8000844:	2b00      	cmp	r3, #0
 8000846:	d001      	beq.n	800084c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000848:	f000 f9b4 	bl	8000bb4 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800084c:	231f      	movs	r3, #31
 800084e:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_PCLK3;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000850:	2303      	movs	r3, #3
 8000852:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000854:	2300      	movs	r3, #0
 8000856:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000858:	2300      	movs	r3, #0
 800085a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800085c:	2300      	movs	r3, #0
 800085e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 8000860:	2300      	movs	r3, #0
 8000862:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000864:	f107 0308 	add.w	r3, r7, #8
 8000868:	2105      	movs	r1, #5
 800086a:	4618      	mov	r0, r3
 800086c:	f002 fc4a 	bl	8003104 <HAL_RCC_ClockConfig>
 8000870:	4603      	mov	r3, r0
 8000872:	2b00      	cmp	r3, #0
 8000874:	d001      	beq.n	800087a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000876:	f000 f99d 	bl	8000bb4 <Error_Handler>
  }

  /** Configure the programming delay
  */
  __HAL_FLASH_SET_PROGRAM_DELAY(FLASH_PROGRAMMING_DELAY_2);
 800087a:	4b07      	ldr	r3, [pc, #28]	@ (8000898 <SystemClock_Config+0xe0>)
 800087c:	681b      	ldr	r3, [r3, #0]
 800087e:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8000882:	4a05      	ldr	r2, [pc, #20]	@ (8000898 <SystemClock_Config+0xe0>)
 8000884:	f043 0320 	orr.w	r3, r3, #32
 8000888:	6013      	str	r3, [r2, #0]
}
 800088a:	bf00      	nop
 800088c:	3770      	adds	r7, #112	@ 0x70
 800088e:	46bd      	mov	sp, r7
 8000890:	bd80      	pop	{r7, pc}
 8000892:	bf00      	nop
 8000894:	44020800 	.word	0x44020800
 8000898:	40022000 	.word	0x40022000

0800089c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800089c:	b580      	push	{r7, lr}
 800089e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80008a0:	4b0d      	ldr	r3, [pc, #52]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008a2:	4a0e      	ldr	r2, [pc, #56]	@ (80008dc <MX_CRC_Init+0x40>)
 80008a4:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008a6:	4b0c      	ldr	r3, [pc, #48]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008a8:	2200      	movs	r2, #0
 80008aa:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80008ac:	4b0a      	ldr	r3, [pc, #40]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008ae:	2200      	movs	r2, #0
 80008b0:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80008b2:	4b09      	ldr	r3, [pc, #36]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008b4:	2200      	movs	r2, #0
 80008b6:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80008b8:	4b07      	ldr	r3, [pc, #28]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008ba:	2200      	movs	r2, #0
 80008bc:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008be:	4b06      	ldr	r3, [pc, #24]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008c0:	2201      	movs	r2, #1
 80008c2:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80008c4:	4804      	ldr	r0, [pc, #16]	@ (80008d8 <MX_CRC_Init+0x3c>)
 80008c6:	f000 fe8f 	bl	80015e8 <HAL_CRC_Init>
 80008ca:	4603      	mov	r3, r0
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d001      	beq.n	80008d4 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80008d0:	f000 f970 	bl	8000bb4 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80008d4:	bf00      	nop
 80008d6:	bd80      	pop	{r7, pc}
 80008d8:	2000031c 	.word	0x2000031c
 80008dc:	40023000 	.word	0x40023000

080008e0 <MX_GPDMA1_Init>:
  * @brief GPDMA1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPDMA1_Init(void)
{
 80008e0:	b580      	push	{r7, lr}
 80008e2:	b082      	sub	sp, #8
 80008e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN GPDMA1_Init 0 */

  /* USER CODE END GPDMA1_Init 0 */

  /* Peripheral clock enable */
  __HAL_RCC_GPDMA1_CLK_ENABLE();
 80008e6:	4b0d      	ldr	r3, [pc, #52]	@ (800091c <MX_GPDMA1_Init+0x3c>)
 80008e8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80008ec:	4a0b      	ldr	r2, [pc, #44]	@ (800091c <MX_GPDMA1_Init+0x3c>)
 80008ee:	f043 0301 	orr.w	r3, r3, #1
 80008f2:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80008f6:	4b09      	ldr	r3, [pc, #36]	@ (800091c <MX_GPDMA1_Init+0x3c>)
 80008f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80008fc:	f003 0301 	and.w	r3, r3, #1
 8000900:	607b      	str	r3, [r7, #4]
 8000902:	687b      	ldr	r3, [r7, #4]

  /* GPDMA1 interrupt Init */
    HAL_NVIC_SetPriority(GPDMA1_Channel0_IRQn, 0, 0);
 8000904:	2200      	movs	r2, #0
 8000906:	2100      	movs	r1, #0
 8000908:	201b      	movs	r0, #27
 800090a:	f000 fded 	bl	80014e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA1_Channel0_IRQn);
 800090e:	201b      	movs	r0, #27
 8000910:	f000 fe04 	bl	800151c <HAL_NVIC_EnableIRQ>
  /* USER CODE END GPDMA1_Init 1 */
  /* USER CODE BEGIN GPDMA1_Init 2 */

  /* USER CODE END GPDMA1_Init 2 */

}
 8000914:	bf00      	nop
 8000916:	3708      	adds	r7, #8
 8000918:	46bd      	mov	sp, r7
 800091a:	bd80      	pop	{r7, pc}
 800091c:	44020c00 	.word	0x44020c00

08000920 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8000920:	b580      	push	{r7, lr}
 8000922:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000924:	4b27      	ldr	r3, [pc, #156]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000926:	4a28      	ldr	r2, [pc, #160]	@ (80009c8 <MX_SPI1_Init+0xa8>)
 8000928:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 800092a:	4b26      	ldr	r3, [pc, #152]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800092c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000930:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8000932:	4b24      	ldr	r3, [pc, #144]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000934:	2200      	movs	r2, #0
 8000936:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000938:	4b22      	ldr	r3, [pc, #136]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800093a:	2207      	movs	r2, #7
 800093c:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800093e:	4b21      	ldr	r3, [pc, #132]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000940:	2200      	movs	r2, #0
 8000942:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000944:	4b1f      	ldr	r3, [pc, #124]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000946:	2200      	movs	r2, #0
 8000948:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 800094a:	4b1e      	ldr	r3, [pc, #120]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800094c:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000950:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000952:	4b1c      	ldr	r3, [pc, #112]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000954:	2200      	movs	r2, #0
 8000956:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000958:	4b1a      	ldr	r3, [pc, #104]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800095a:	2200      	movs	r2, #0
 800095c:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800095e:	4b19      	ldr	r3, [pc, #100]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000960:	2200      	movs	r2, #0
 8000962:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000964:	4b17      	ldr	r3, [pc, #92]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000966:	2200      	movs	r2, #0
 8000968:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 0x7;
 800096a:	4b16      	ldr	r3, [pc, #88]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800096c:	2207      	movs	r2, #7
 800096e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000970:	4b14      	ldr	r3, [pc, #80]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000972:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000976:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000978:	4b12      	ldr	r3, [pc, #72]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800097a:	2200      	movs	r2, #0
 800097c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800097e:	4b11      	ldr	r3, [pc, #68]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000980:	2200      	movs	r2, #0
 8000982:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8000984:	4b0f      	ldr	r3, [pc, #60]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000986:	2200      	movs	r2, #0
 8000988:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 800098a:	4b0e      	ldr	r3, [pc, #56]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800098c:	2200      	movs	r2, #0
 800098e:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 8000990:	4b0c      	ldr	r3, [pc, #48]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000992:	2200      	movs	r2, #0
 8000994:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 8000996:	4b0b      	ldr	r3, [pc, #44]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 8000998:	2200      	movs	r2, #0
 800099a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 800099c:	4b09      	ldr	r3, [pc, #36]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 800099e:	2200      	movs	r2, #0
 80009a0:	659a      	str	r2, [r3, #88]	@ 0x58
  hspi1.Init.ReadyMasterManagement = SPI_RDY_MASTER_MANAGEMENT_INTERNALLY;
 80009a2:	4b08      	ldr	r3, [pc, #32]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 80009a4:	2200      	movs	r2, #0
 80009a6:	65da      	str	r2, [r3, #92]	@ 0x5c
  hspi1.Init.ReadyPolarity = SPI_RDY_POLARITY_HIGH;
 80009a8:	4b06      	ldr	r3, [pc, #24]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 80009aa:	2200      	movs	r2, #0
 80009ac:	661a      	str	r2, [r3, #96]	@ 0x60
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80009ae:	4805      	ldr	r0, [pc, #20]	@ (80009c4 <MX_SPI1_Init+0xa4>)
 80009b0:	f004 ffb0 	bl	8005914 <HAL_SPI_Init>
 80009b4:	4603      	mov	r3, r0
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	d001      	beq.n	80009be <MX_SPI1_Init+0x9e>
  {
    Error_Handler();
 80009ba:	f000 f8fb 	bl	8000bb4 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80009be:	bf00      	nop
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	20000340 	.word	0x20000340
 80009c8:	40013000 	.word	0x40013000

080009cc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b088      	sub	sp, #32
 80009d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80009d2:	f107 0310 	add.w	r3, r7, #16
 80009d6:	2200      	movs	r2, #0
 80009d8:	601a      	str	r2, [r3, #0]
 80009da:	605a      	str	r2, [r3, #4]
 80009dc:	609a      	str	r2, [r3, #8]
 80009de:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80009e0:	1d3b      	adds	r3, r7, #4
 80009e2:	2200      	movs	r2, #0
 80009e4:	601a      	str	r2, [r3, #0]
 80009e6:	605a      	str	r2, [r3, #4]
 80009e8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80009ea:	4b1e      	ldr	r3, [pc, #120]	@ (8000a64 <MX_TIM2_Init+0x98>)
 80009ec:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80009f0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 250-1;
 80009f2:	4b1c      	ldr	r3, [pc, #112]	@ (8000a64 <MX_TIM2_Init+0x98>)
 80009f4:	22f9      	movs	r2, #249	@ 0xf9
 80009f6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80009f8:	4b1a      	ldr	r3, [pc, #104]	@ (8000a64 <MX_TIM2_Init+0x98>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 49999;
 80009fe:	4b19      	ldr	r3, [pc, #100]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a00:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 8000a04:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a06:	4b17      	ldr	r3, [pc, #92]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a08:	2200      	movs	r2, #0
 8000a0a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a0c:	4b15      	ldr	r3, [pc, #84]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a0e:	2200      	movs	r2, #0
 8000a10:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000a12:	4814      	ldr	r0, [pc, #80]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a14:	f006 f861 	bl	8006ada <HAL_TIM_Base_Init>
 8000a18:	4603      	mov	r3, r0
 8000a1a:	2b00      	cmp	r3, #0
 8000a1c:	d001      	beq.n	8000a22 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8000a1e:	f000 f8c9 	bl	8000bb4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000a22:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a26:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000a28:	f107 0310 	add.w	r3, r7, #16
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	480d      	ldr	r0, [pc, #52]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a30:	f006 faa8 	bl	8006f84 <HAL_TIM_ConfigClockSource>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d001      	beq.n	8000a3e <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8000a3a:	f000 f8bb 	bl	8000bb4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a3e:	2300      	movs	r3, #0
 8000a40:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a42:	2300      	movs	r3, #0
 8000a44:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000a46:	1d3b      	adds	r3, r7, #4
 8000a48:	4619      	mov	r1, r3
 8000a4a:	4806      	ldr	r0, [pc, #24]	@ (8000a64 <MX_TIM2_Init+0x98>)
 8000a4c:	f006 fda6 	bl	800759c <HAL_TIMEx_MasterConfigSynchronization>
 8000a50:	4603      	mov	r3, r0
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d001      	beq.n	8000a5a <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8000a56:	f000 f8ad 	bl	8000bb4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000a5a:	bf00      	nop
 8000a5c:	3720      	adds	r7, #32
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	bd80      	pop	{r7, pc}
 8000a62:	bf00      	nop
 8000a64:	20000448 	.word	0x20000448

08000a68 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	b08a      	sub	sp, #40	@ 0x28
 8000a6c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a6e:	f107 0314 	add.w	r3, r7, #20
 8000a72:	2200      	movs	r2, #0
 8000a74:	601a      	str	r2, [r3, #0]
 8000a76:	605a      	str	r2, [r3, #4]
 8000a78:	609a      	str	r2, [r3, #8]
 8000a7a:	60da      	str	r2, [r3, #12]
 8000a7c:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a7e:	4b3d      	ldr	r3, [pc, #244]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000a80:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000a84:	4a3b      	ldr	r2, [pc, #236]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000a86:	f043 0320 	orr.w	r3, r3, #32
 8000a8a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000a8e:	4b39      	ldr	r3, [pc, #228]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000a90:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000a94:	f003 0320 	and.w	r3, r3, #32
 8000a98:	613b      	str	r3, [r7, #16]
 8000a9a:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000a9c:	4b35      	ldr	r3, [pc, #212]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000a9e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000aa2:	4a34      	ldr	r2, [pc, #208]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000aa4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000aa8:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000aac:	4b31      	ldr	r3, [pc, #196]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000aae:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ab2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000ab6:	60fb      	str	r3, [r7, #12]
 8000ab8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000aba:	4b2e      	ldr	r3, [pc, #184]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000abc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ac0:	4a2c      	ldr	r2, [pc, #176]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000ac2:	f043 0301 	orr.w	r3, r3, #1
 8000ac6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000aca:	4b2a      	ldr	r3, [pc, #168]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000acc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ad0:	f003 0301 	and.w	r3, r3, #1
 8000ad4:	60bb      	str	r3, [r7, #8]
 8000ad6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ad8:	4b26      	ldr	r3, [pc, #152]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000ada:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ade:	4a25      	ldr	r2, [pc, #148]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000ae0:	f043 0302 	orr.w	r3, r3, #2
 8000ae4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000ae8:	4b22      	ldr	r3, [pc, #136]	@ (8000b74 <MX_GPIO_Init+0x10c>)
 8000aea:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000aee:	f003 0302 	and.w	r3, r3, #2
 8000af2:	607b      	str	r3, [r7, #4]
 8000af4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8000af6:	2200      	movs	r2, #0
 8000af8:	2110      	movs	r1, #16
 8000afa:	481f      	ldr	r0, [pc, #124]	@ (8000b78 <MX_GPIO_Init+0x110>)
 8000afc:	f001 feb2 	bl	8002864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000b00:	2200      	movs	r2, #0
 8000b02:	2108      	movs	r1, #8
 8000b04:	481d      	ldr	r0, [pc, #116]	@ (8000b7c <MX_GPIO_Init+0x114>)
 8000b06:	f001 fead 	bl	8002864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DC_Pin|RESETB1_Pin|SPI1_NSS_Pin, GPIO_PIN_RESET);
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	f240 4103 	movw	r1, #1027	@ 0x403
 8000b10:	481b      	ldr	r0, [pc, #108]	@ (8000b80 <MX_GPIO_Init+0x118>)
 8000b12:	f001 fea7 	bl	8002864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000b16:	2310      	movs	r3, #16
 8000b18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b1a:	2301      	movs	r3, #1
 8000b1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b1e:	2300      	movs	r3, #0
 8000b20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b22:	2300      	movs	r3, #0
 8000b24:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000b26:	f107 0314 	add.w	r3, r7, #20
 8000b2a:	4619      	mov	r1, r3
 8000b2c:	4812      	ldr	r0, [pc, #72]	@ (8000b78 <MX_GPIO_Init+0x110>)
 8000b2e:	f001 fd3b 	bl	80025a8 <HAL_GPIO_Init>

  /*Configure GPIO pin : RESET_Pin */
  GPIO_InitStruct.Pin = RESET_Pin;
 8000b32:	2308      	movs	r3, #8
 8000b34:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b36:	2301      	movs	r3, #1
 8000b38:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b3e:	2300      	movs	r3, #0
 8000b40:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(RESET_GPIO_Port, &GPIO_InitStruct);
 8000b42:	f107 0314 	add.w	r3, r7, #20
 8000b46:	4619      	mov	r1, r3
 8000b48:	480c      	ldr	r0, [pc, #48]	@ (8000b7c <MX_GPIO_Init+0x114>)
 8000b4a:	f001 fd2d 	bl	80025a8 <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin RESETB1_Pin SPI1_NSS_Pin */
  GPIO_InitStruct.Pin = DC_Pin|RESETB1_Pin|SPI1_NSS_Pin;
 8000b4e:	f240 4303 	movw	r3, #1027	@ 0x403
 8000b52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b54:	2301      	movs	r3, #1
 8000b56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b58:	2300      	movs	r3, #0
 8000b5a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b60:	f107 0314 	add.w	r3, r7, #20
 8000b64:	4619      	mov	r1, r3
 8000b66:	4806      	ldr	r0, [pc, #24]	@ (8000b80 <MX_GPIO_Init+0x118>)
 8000b68:	f001 fd1e 	bl	80025a8 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000b6c:	bf00      	nop
 8000b6e:	3728      	adds	r7, #40	@ 0x28
 8000b70:	46bd      	mov	sp, r7
 8000b72:	bd80      	pop	{r7, pc}
 8000b74:	44020c00 	.word	0x44020c00
 8000b78:	42021400 	.word	0x42021400
 8000b7c:	42020000 	.word	0x42020000
 8000b80:	42020400 	.word	0x42020400

08000b84 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b082      	sub	sp, #8
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */
	extern void touchgfxSignalVSync(void);
		if (htim->Instance == TIM2)
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000b94:	d101      	bne.n	8000b9a <HAL_TIM_PeriodElapsedCallback+0x16>
		{
			touchgfxSignalVSync();
 8000b96:	f00b f819 	bl	800bbcc <touchgfxSignalVSync>
		}
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 8000b9a:	687b      	ldr	r3, [r7, #4]
 8000b9c:	681b      	ldr	r3, [r3, #0]
 8000b9e:	4a04      	ldr	r2, [pc, #16]	@ (8000bb0 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	d101      	bne.n	8000ba8 <HAL_TIM_PeriodElapsedCallback+0x24>
  {
    HAL_IncTick();
 8000ba4:	f000 fba4 	bl	80012f0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000ba8:	bf00      	nop
 8000baa:	3708      	adds	r7, #8
 8000bac:	46bd      	mov	sp, r7
 8000bae:	bd80      	pop	{r7, pc}
 8000bb0:	40001000 	.word	0x40001000

08000bb4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000bb4:	b480      	push	{r7}
 8000bb6:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000bb8:	b672      	cpsid	i
}
 8000bba:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000bbc:	bf00      	nop
 8000bbe:	e7fd      	b.n	8000bbc <Error_Handler+0x8>

08000bc0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000bc0:	b480      	push	{r7}
 8000bc2:	af00      	add	r7, sp, #0
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000bc4:	bf00      	nop
 8000bc6:	46bd      	mov	sp, r7
 8000bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bcc:	4770      	bx	lr
	...

08000bd0 <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000bd0:	b480      	push	{r7}
 8000bd2:	b085      	sub	sp, #20
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	4a0b      	ldr	r2, [pc, #44]	@ (8000c0c <HAL_CRC_MspInit+0x3c>)
 8000bde:	4293      	cmp	r3, r2
 8000be0:	d10e      	bne.n	8000c00 <HAL_CRC_MspInit+0x30>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000be2:	4b0b      	ldr	r3, [pc, #44]	@ (8000c10 <HAL_CRC_MspInit+0x40>)
 8000be4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000be8:	4a09      	ldr	r2, [pc, #36]	@ (8000c10 <HAL_CRC_MspInit+0x40>)
 8000bea:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000bee:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000bf2:	4b07      	ldr	r3, [pc, #28]	@ (8000c10 <HAL_CRC_MspInit+0x40>)
 8000bf4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000bf8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000bfc:	60fb      	str	r3, [r7, #12]
 8000bfe:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8000c00:	bf00      	nop
 8000c02:	3714      	adds	r7, #20
 8000c04:	46bd      	mov	sp, r7
 8000c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c0a:	4770      	bx	lr
 8000c0c:	40023000 	.word	0x40023000
 8000c10:	44020c00 	.word	0x44020c00

08000c14 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000c14:	b580      	push	{r7, lr}
 8000c16:	b0cc      	sub	sp, #304	@ 0x130
 8000c18:	af00      	add	r7, sp, #0
 8000c1a:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c1e:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000c22:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c24:	f507 738e 	add.w	r3, r7, #284	@ 0x11c
 8000c28:	2200      	movs	r2, #0
 8000c2a:	601a      	str	r2, [r3, #0]
 8000c2c:	605a      	str	r2, [r3, #4]
 8000c2e:	609a      	str	r2, [r3, #8]
 8000c30:	60da      	str	r2, [r3, #12]
 8000c32:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c34:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c38:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8000c3c:	4618      	mov	r0, r3
 8000c3e:	f44f 7384 	mov.w	r3, #264	@ 0x108
 8000c42:	461a      	mov	r2, r3
 8000c44:	2100      	movs	r1, #0
 8000c46:	f020 fc36 	bl	80214b6 <memset>
  if(hspi->Instance==SPI1)
 8000c4a:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c4e:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000c52:	681b      	ldr	r3, [r3, #0]
 8000c54:	681b      	ldr	r3, [r3, #0]
 8000c56:	4a5d      	ldr	r2, [pc, #372]	@ (8000dcc <HAL_SPI_MspInit+0x1b8>)
 8000c58:	4293      	cmp	r3, r2
 8000c5a:	f040 80b1 	bne.w	8000dc0 <HAL_SPI_MspInit+0x1ac>

    /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 8000c5e:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c62:	f5a3 7190 	sub.w	r1, r3, #288	@ 0x120
 8000c66:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000c6a:	f04f 0300 	mov.w	r3, #0
 8000c6e:	e9c1 2300 	strd	r2, r3, [r1]
    PeriphClkInitStruct.Spi1ClockSelection = RCC_SPI1CLKSOURCE_PLL1Q;
 8000c72:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c76:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8000c7a:	2200      	movs	r2, #0
 8000c7c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000c80:	f107 0310 	add.w	r3, r7, #16
 8000c84:	4618      	mov	r0, r3
 8000c86:	f002 fd8b 	bl	80037a0 <HAL_RCCEx_PeriphCLKConfig>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d001      	beq.n	8000c94 <HAL_SPI_MspInit+0x80>
    {
      Error_Handler();
 8000c90:	f7ff ff90 	bl	8000bb4 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000c94:	4b4e      	ldr	r3, [pc, #312]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000c96:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8000c9a:	4a4d      	ldr	r2, [pc, #308]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000c9c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000ca0:	f8c2 30a4 	str.w	r3, [r2, #164]	@ 0xa4
 8000ca4:	4b4a      	ldr	r3, [pc, #296]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000ca6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8000caa:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8000cae:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cb2:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8000cb6:	601a      	str	r2, [r3, #0]
 8000cb8:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cbc:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8000cc0:	681b      	ldr	r3, [r3, #0]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cc2:	4b43      	ldr	r3, [pc, #268]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000cc4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cc8:	4a41      	ldr	r2, [pc, #260]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000cca:	f043 0301 	orr.w	r3, r3, #1
 8000cce:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000cd2:	4b3f      	ldr	r3, [pc, #252]	@ (8000dd0 <HAL_SPI_MspInit+0x1bc>)
 8000cd4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000cd8:	f003 0201 	and.w	r2, r3, #1
 8000cdc:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000ce0:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8000ce4:	601a      	str	r2, [r3, #0]
 8000ce6:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cea:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8000cee:	681b      	ldr	r3, [r3, #0]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000cf0:	23e0      	movs	r3, #224	@ 0xe0
 8000cf2:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cf6:	2302      	movs	r3, #2
 8000cf8:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d02:	2303      	movs	r3, #3
 8000d04:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8000d08:	2305      	movs	r3, #5
 8000d0a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d0e:	f507 738e 	add.w	r3, r7, #284	@ 0x11c
 8000d12:	4619      	mov	r1, r3
 8000d14:	482f      	ldr	r0, [pc, #188]	@ (8000dd4 <HAL_SPI_MspInit+0x1c0>)
 8000d16:	f001 fc47 	bl	80025a8 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* GPDMA1_REQUEST_SPI1_TX Init */
    handle_GPDMA1_Channel0.Instance = GPDMA1_Channel0;
 8000d1a:	4b2f      	ldr	r3, [pc, #188]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d1c:	4a2f      	ldr	r2, [pc, #188]	@ (8000ddc <HAL_SPI_MspInit+0x1c8>)
 8000d1e:	601a      	str	r2, [r3, #0]
    handle_GPDMA1_Channel0.Init.Request = GPDMA1_REQUEST_SPI1_TX;
 8000d20:	4b2d      	ldr	r3, [pc, #180]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d22:	2207      	movs	r2, #7
 8000d24:	605a      	str	r2, [r3, #4]
    handle_GPDMA1_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000d26:	4b2c      	ldr	r3, [pc, #176]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	609a      	str	r2, [r3, #8]
    handle_GPDMA1_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000d2c:	4b2a      	ldr	r3, [pc, #168]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d2e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000d32:	60da      	str	r2, [r3, #12]
    handle_GPDMA1_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000d34:	4b28      	ldr	r3, [pc, #160]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d36:	2208      	movs	r2, #8
 8000d38:	611a      	str	r2, [r3, #16]
    handle_GPDMA1_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000d3a:	4b27      	ldr	r3, [pc, #156]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	615a      	str	r2, [r3, #20]
    handle_GPDMA1_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000d40:	4b25      	ldr	r3, [pc, #148]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	619a      	str	r2, [r3, #24]
    handle_GPDMA1_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_BYTE;
 8000d46:	4b24      	ldr	r3, [pc, #144]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d48:	2200      	movs	r2, #0
 8000d4a:	61da      	str	r2, [r3, #28]
    handle_GPDMA1_Channel0.Init.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 8000d4c:	4b22      	ldr	r3, [pc, #136]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d4e:	2200      	movs	r2, #0
 8000d50:	621a      	str	r2, [r3, #32]
    handle_GPDMA1_Channel0.Init.SrcBurstLength = 1;
 8000d52:	4b21      	ldr	r3, [pc, #132]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d54:	2201      	movs	r2, #1
 8000d56:	625a      	str	r2, [r3, #36]	@ 0x24
    handle_GPDMA1_Channel0.Init.DestBurstLength = 1;
 8000d58:	4b1f      	ldr	r3, [pc, #124]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d5a:	2201      	movs	r2, #1
 8000d5c:	629a      	str	r2, [r3, #40]	@ 0x28
    handle_GPDMA1_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT0;
 8000d5e:	4b1e      	ldr	r3, [pc, #120]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d60:	2200      	movs	r2, #0
 8000d62:	62da      	str	r2, [r3, #44]	@ 0x2c
    handle_GPDMA1_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000d64:	4b1c      	ldr	r3, [pc, #112]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d66:	2200      	movs	r2, #0
 8000d68:	631a      	str	r2, [r3, #48]	@ 0x30
    handle_GPDMA1_Channel0.Init.Mode = DMA_NORMAL;
 8000d6a:	4b1b      	ldr	r3, [pc, #108]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d6c:	2200      	movs	r2, #0
 8000d6e:	635a      	str	r2, [r3, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA1_Channel0) != HAL_OK)
 8000d70:	4819      	ldr	r0, [pc, #100]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d72:	f000 fd2b 	bl	80017cc <HAL_DMA_Init>
 8000d76:	4603      	mov	r3, r0
 8000d78:	2b00      	cmp	r3, #0
 8000d7a:	d001      	beq.n	8000d80 <HAL_SPI_MspInit+0x16c>
    {
      Error_Handler();
 8000d7c:	f7ff ff1a 	bl	8000bb4 <Error_Handler>
    }

    __HAL_LINKDMA(hspi, hdmatx, handle_GPDMA1_Channel0);
 8000d80:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000d84:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000d88:	681b      	ldr	r3, [r3, #0]
 8000d8a:	4a13      	ldr	r2, [pc, #76]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d8c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8000d90:	4a11      	ldr	r2, [pc, #68]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000d92:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000d96:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	65d3      	str	r3, [r2, #92]	@ 0x5c

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000d9e:	2110      	movs	r1, #16
 8000da0:	480d      	ldr	r0, [pc, #52]	@ (8000dd8 <HAL_SPI_MspInit+0x1c4>)
 8000da2:	f001 f851 	bl	8001e48 <HAL_DMA_ConfigChannelAttributes>
 8000da6:	4603      	mov	r3, r0
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	d001      	beq.n	8000db0 <HAL_SPI_MspInit+0x19c>
    {
      Error_Handler();
 8000dac:	f7ff ff02 	bl	8000bb4 <Error_Handler>
    }

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8000db0:	2200      	movs	r2, #0
 8000db2:	2100      	movs	r1, #0
 8000db4:	2037      	movs	r0, #55	@ 0x37
 8000db6:	f000 fb97 	bl	80014e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8000dba:	2037      	movs	r0, #55	@ 0x37
 8000dbc:	f000 fbae 	bl	800151c <HAL_NVIC_EnableIRQ>

    /* USER CODE END SPI1_MspInit 1 */

  }

}
 8000dc0:	bf00      	nop
 8000dc2:	f507 7798 	add.w	r7, r7, #304	@ 0x130
 8000dc6:	46bd      	mov	sp, r7
 8000dc8:	bd80      	pop	{r7, pc}
 8000dca:	bf00      	nop
 8000dcc:	40013000 	.word	0x40013000
 8000dd0:	44020c00 	.word	0x44020c00
 8000dd4:	42020000 	.word	0x42020000
 8000dd8:	200003d0 	.word	0x200003d0
 8000ddc:	40020050 	.word	0x40020050

08000de0 <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b084      	sub	sp, #16
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000df0:	d116      	bne.n	8000e20 <HAL_TIM_Base_MspInit+0x40>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000df2:	4b0d      	ldr	r3, [pc, #52]	@ (8000e28 <HAL_TIM_Base_MspInit+0x48>)
 8000df4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000df8:	4a0b      	ldr	r2, [pc, #44]	@ (8000e28 <HAL_TIM_Base_MspInit+0x48>)
 8000dfa:	f043 0301 	orr.w	r3, r3, #1
 8000dfe:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 8000e02:	4b09      	ldr	r3, [pc, #36]	@ (8000e28 <HAL_TIM_Base_MspInit+0x48>)
 8000e04:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e08:	f003 0301 	and.w	r3, r3, #1
 8000e0c:	60fb      	str	r3, [r7, #12]
 8000e0e:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000e10:	2200      	movs	r2, #0
 8000e12:	2100      	movs	r1, #0
 8000e14:	202d      	movs	r0, #45	@ 0x2d
 8000e16:	f000 fb67 	bl	80014e8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000e1a:	202d      	movs	r0, #45	@ 0x2d
 8000e1c:	f000 fb7e 	bl	800151c <HAL_NVIC_EnableIRQ>

    /* USER CODE END TIM2_MspInit 1 */

  }

}
 8000e20:	bf00      	nop
 8000e22:	3710      	adds	r7, #16
 8000e24:	46bd      	mov	sp, r7
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	44020c00 	.word	0x44020c00

08000e2c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b08e      	sub	sp, #56	@ 0x38
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000e34:	4b33      	ldr	r3, [pc, #204]	@ (8000f04 <HAL_InitTick+0xd8>)
 8000e36:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e3a:	4a32      	ldr	r2, [pc, #200]	@ (8000f04 <HAL_InitTick+0xd8>)
 8000e3c:	f043 0310 	orr.w	r3, r3, #16
 8000e40:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 8000e44:	4b2f      	ldr	r3, [pc, #188]	@ (8000f04 <HAL_InitTick+0xd8>)
 8000e46:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e4a:	f003 0310 	and.w	r3, r3, #16
 8000e4e:	60bb      	str	r3, [r7, #8]
 8000e50:	68bb      	ldr	r3, [r7, #8]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000e52:	f107 020c 	add.w	r2, r7, #12
 8000e56:	f107 0310 	add.w	r3, r7, #16
 8000e5a:	4611      	mov	r1, r2
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	f002 fc67 	bl	8003730 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8000e62:	69fb      	ldr	r3, [r7, #28]
 8000e64:	62fb      	str	r3, [r7, #44]	@ 0x2c
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8000e66:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d103      	bne.n	8000e74 <HAL_InitTick+0x48>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000e6c:	f002 fc4a 	bl	8003704 <HAL_RCC_GetPCLK1Freq>
 8000e70:	6378      	str	r0, [r7, #52]	@ 0x34
 8000e72:	e004      	b.n	8000e7e <HAL_InitTick+0x52>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8000e74:	f002 fc46 	bl	8003704 <HAL_RCC_GetPCLK1Freq>
 8000e78:	4603      	mov	r3, r0
 8000e7a:	005b      	lsls	r3, r3, #1
 8000e7c:	637b      	str	r3, [r7, #52]	@ 0x34
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 100KHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 100000U) - 1U);
 8000e7e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000e80:	095b      	lsrs	r3, r3, #5
 8000e82:	4a21      	ldr	r2, [pc, #132]	@ (8000f08 <HAL_InitTick+0xdc>)
 8000e84:	fba2 2303 	umull	r2, r3, r2, r3
 8000e88:	09db      	lsrs	r3, r3, #7
 8000e8a:	3b01      	subs	r3, #1
 8000e8c:	62bb      	str	r3, [r7, #40]	@ 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8000e8e:	4b1f      	ldr	r3, [pc, #124]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000e90:	4a1f      	ldr	r2, [pc, #124]	@ (8000f10 <HAL_InitTick+0xe4>)
 8000e92:	601a      	str	r2, [r3, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/100000 - 1) to have a 100KHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (100000U / 1000U) - 1U;
 8000e94:	4b1d      	ldr	r3, [pc, #116]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000e96:	2263      	movs	r2, #99	@ 0x63
 8000e98:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8000e9a:	4a1c      	ldr	r2, [pc, #112]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000e9c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000e9e:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 8000ea0:	4b1a      	ldr	r3, [pc, #104]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000ea2:	2200      	movs	r2, #0
 8000ea4:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ea6:	4b19      	ldr	r3, [pc, #100]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000ea8:	2200      	movs	r2, #0
 8000eaa:	609a      	str	r2, [r3, #8]

  status = HAL_TIM_Base_Init(&htim6);
 8000eac:	4817      	ldr	r0, [pc, #92]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000eae:	f005 fe14 	bl	8006ada <HAL_TIM_Base_Init>
 8000eb2:	4603      	mov	r3, r0
 8000eb4:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  if (status == HAL_OK)
 8000eb8:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000ebc:	2b00      	cmp	r3, #0
 8000ebe:	d118      	bne.n	8000ef2 <HAL_InitTick+0xc6>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8000ec0:	4812      	ldr	r0, [pc, #72]	@ (8000f0c <HAL_InitTick+0xe0>)
 8000ec2:	f005 fe61 	bl	8006b88 <HAL_TIM_Base_Start_IT>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
    if (status == HAL_OK)
 8000ecc:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d10e      	bne.n	8000ef2 <HAL_InitTick+0xc6>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	2b0f      	cmp	r3, #15
 8000ed8:	d808      	bhi.n	8000eec <HAL_InitTick+0xc0>
      {
        /* Enable the TIM6 global Interrupt */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8000eda:	2200      	movs	r2, #0
 8000edc:	6879      	ldr	r1, [r7, #4]
 8000ede:	2031      	movs	r0, #49	@ 0x31
 8000ee0:	f000 fb02 	bl	80014e8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000ee4:	4a0b      	ldr	r2, [pc, #44]	@ (8000f14 <HAL_InitTick+0xe8>)
 8000ee6:	687b      	ldr	r3, [r7, #4]
 8000ee8:	6013      	str	r3, [r2, #0]
 8000eea:	e002      	b.n	8000ef2 <HAL_InitTick+0xc6>
      }
      else
      {
        status = HAL_ERROR;
 8000eec:	2301      	movs	r3, #1
 8000eee:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
      }
    }
}

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8000ef2:	2031      	movs	r0, #49	@ 0x31
 8000ef4:	f000 fb12 	bl	800151c <HAL_NVIC_EnableIRQ>

  /* Return function status */
  return status;
 8000ef8:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
}
 8000efc:	4618      	mov	r0, r3
 8000efe:	3738      	adds	r7, #56	@ 0x38
 8000f00:	46bd      	mov	sp, r7
 8000f02:	bd80      	pop	{r7, pc}
 8000f04:	44020c00 	.word	0x44020c00
 8000f08:	0a7c5ac5 	.word	0x0a7c5ac5
 8000f0c:	20000494 	.word	0x20000494
 8000f10:	40001000 	.word	0x40001000
 8000f14:	20000008 	.word	0x20000008

08000f18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f18:	b480      	push	{r7}
 8000f1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000f1c:	bf00      	nop
 8000f1e:	e7fd      	b.n	8000f1c <NMI_Handler+0x4>

08000f20 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f20:	b480      	push	{r7}
 8000f22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f24:	bf00      	nop
 8000f26:	e7fd      	b.n	8000f24 <HardFault_Handler+0x4>

08000f28 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f28:	b480      	push	{r7}
 8000f2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f2c:	bf00      	nop
 8000f2e:	e7fd      	b.n	8000f2c <MemManage_Handler+0x4>

08000f30 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f30:	b480      	push	{r7}
 8000f32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f34:	bf00      	nop
 8000f36:	e7fd      	b.n	8000f34 <BusFault_Handler+0x4>

08000f38 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f38:	b480      	push	{r7}
 8000f3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f3c:	bf00      	nop
 8000f3e:	e7fd      	b.n	8000f3c <UsageFault_Handler+0x4>

08000f40 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f40:	b480      	push	{r7}
 8000f42:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f44:	bf00      	nop
 8000f46:	46bd      	mov	sp, r7
 8000f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f4c:	4770      	bx	lr

08000f4e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f4e:	b480      	push	{r7}
 8000f50:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f52:	bf00      	nop
 8000f54:	46bd      	mov	sp, r7
 8000f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f5a:	4770      	bx	lr

08000f5c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f60:	bf00      	nop
 8000f62:	46bd      	mov	sp, r7
 8000f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f68:	4770      	bx	lr

08000f6a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f6a:	b480      	push	{r7}
 8000f6c:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000f6e:	bf00      	nop
 8000f70:	46bd      	mov	sp, r7
 8000f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f76:	4770      	bx	lr

08000f78 <GPDMA1_Channel0_IRQHandler>:

/**
  * @brief This function handles GPDMA1 Channel 0 global interrupt.
  */
void GPDMA1_Channel0_IRQHandler(void)
{
 8000f78:	b580      	push	{r7, lr}
 8000f7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 0 */

  /* USER CODE END GPDMA1_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA1_Channel0);
 8000f7c:	4802      	ldr	r0, [pc, #8]	@ (8000f88 <GPDMA1_Channel0_IRQHandler+0x10>)
 8000f7e:	f000 fdf6 	bl	8001b6e <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN GPDMA1_Channel0_IRQn 1 */

  /* USER CODE END GPDMA1_Channel0_IRQn 1 */
}
 8000f82:	bf00      	nop
 8000f84:	bd80      	pop	{r7, pc}
 8000f86:	bf00      	nop
 8000f88:	200003d0 	.word	0x200003d0

08000f8c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000f8c:	b580      	push	{r7, lr}
 8000f8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000f90:	4802      	ldr	r0, [pc, #8]	@ (8000f9c <TIM2_IRQHandler+0x10>)
 8000f92:	f005 fea7 	bl	8006ce4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000f96:	bf00      	nop
 8000f98:	bd80      	pop	{r7, pc}
 8000f9a:	bf00      	nop
 8000f9c:	20000448 	.word	0x20000448

08000fa0 <TIM6_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt.
  */
void TIM6_IRQHandler(void)
{
 8000fa0:	b580      	push	{r7, lr}
 8000fa2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8000fa4:	4802      	ldr	r0, [pc, #8]	@ (8000fb0 <TIM6_IRQHandler+0x10>)
 8000fa6:	f005 fe9d 	bl	8006ce4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_IRQn 1 */

  /* USER CODE END TIM6_IRQn 1 */
}
 8000faa:	bf00      	nop
 8000fac:	bd80      	pop	{r7, pc}
 8000fae:	bf00      	nop
 8000fb0:	20000494 	.word	0x20000494

08000fb4 <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8000fb8:	4802      	ldr	r0, [pc, #8]	@ (8000fc4 <SPI1_IRQHandler+0x10>)
 8000fba:	f005 fa31 	bl	8006420 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8000fbe:	bf00      	nop
 8000fc0:	bd80      	pop	{r7, pc}
 8000fc2:	bf00      	nop
 8000fc4:	20000340 	.word	0x20000340

08000fc8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000fc8:	b480      	push	{r7}
 8000fca:	af00      	add	r7, sp, #0
  return 1;
 8000fcc:	2301      	movs	r3, #1
}
 8000fce:	4618      	mov	r0, r3
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd6:	4770      	bx	lr

08000fd8 <_kill>:

int _kill(int pid, int sig)
{
 8000fd8:	b580      	push	{r7, lr}
 8000fda:	b082      	sub	sp, #8
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	6078      	str	r0, [r7, #4]
 8000fe0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000fe2:	f020 fb0b 	bl	80215fc <__errno>
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	2216      	movs	r2, #22
 8000fea:	601a      	str	r2, [r3, #0]
  return -1;
 8000fec:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	3708      	adds	r7, #8
 8000ff4:	46bd      	mov	sp, r7
 8000ff6:	bd80      	pop	{r7, pc}

08000ff8 <_exit>:

void _exit (int status)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	b082      	sub	sp, #8
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001000:	f04f 31ff 	mov.w	r1, #4294967295
 8001004:	6878      	ldr	r0, [r7, #4]
 8001006:	f7ff ffe7 	bl	8000fd8 <_kill>
  while (1) {}    /* Make sure we hang here */
 800100a:	bf00      	nop
 800100c:	e7fd      	b.n	800100a <_exit+0x12>

0800100e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800100e:	b580      	push	{r7, lr}
 8001010:	b086      	sub	sp, #24
 8001012:	af00      	add	r7, sp, #0
 8001014:	60f8      	str	r0, [r7, #12]
 8001016:	60b9      	str	r1, [r7, #8]
 8001018:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800101a:	2300      	movs	r3, #0
 800101c:	617b      	str	r3, [r7, #20]
 800101e:	e00a      	b.n	8001036 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001020:	f3af 8000 	nop.w
 8001024:	4601      	mov	r1, r0
 8001026:	68bb      	ldr	r3, [r7, #8]
 8001028:	1c5a      	adds	r2, r3, #1
 800102a:	60ba      	str	r2, [r7, #8]
 800102c:	b2ca      	uxtb	r2, r1
 800102e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001030:	697b      	ldr	r3, [r7, #20]
 8001032:	3301      	adds	r3, #1
 8001034:	617b      	str	r3, [r7, #20]
 8001036:	697a      	ldr	r2, [r7, #20]
 8001038:	687b      	ldr	r3, [r7, #4]
 800103a:	429a      	cmp	r2, r3
 800103c:	dbf0      	blt.n	8001020 <_read+0x12>
  }

  return len;
 800103e:	687b      	ldr	r3, [r7, #4]
}
 8001040:	4618      	mov	r0, r3
 8001042:	3718      	adds	r7, #24
 8001044:	46bd      	mov	sp, r7
 8001046:	bd80      	pop	{r7, pc}

08001048 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	b086      	sub	sp, #24
 800104c:	af00      	add	r7, sp, #0
 800104e:	60f8      	str	r0, [r7, #12]
 8001050:	60b9      	str	r1, [r7, #8]
 8001052:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001054:	2300      	movs	r3, #0
 8001056:	617b      	str	r3, [r7, #20]
 8001058:	e009      	b.n	800106e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800105a:	68bb      	ldr	r3, [r7, #8]
 800105c:	1c5a      	adds	r2, r3, #1
 800105e:	60ba      	str	r2, [r7, #8]
 8001060:	781b      	ldrb	r3, [r3, #0]
 8001062:	4618      	mov	r0, r3
 8001064:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001068:	697b      	ldr	r3, [r7, #20]
 800106a:	3301      	adds	r3, #1
 800106c:	617b      	str	r3, [r7, #20]
 800106e:	697a      	ldr	r2, [r7, #20]
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	429a      	cmp	r2, r3
 8001074:	dbf1      	blt.n	800105a <_write+0x12>
  }
  return len;
 8001076:	687b      	ldr	r3, [r7, #4]
}
 8001078:	4618      	mov	r0, r3
 800107a:	3718      	adds	r7, #24
 800107c:	46bd      	mov	sp, r7
 800107e:	bd80      	pop	{r7, pc}

08001080 <_close>:

int _close(int file)
{
 8001080:	b480      	push	{r7}
 8001082:	b083      	sub	sp, #12
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001088:	f04f 33ff 	mov.w	r3, #4294967295
}
 800108c:	4618      	mov	r0, r3
 800108e:	370c      	adds	r7, #12
 8001090:	46bd      	mov	sp, r7
 8001092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001096:	4770      	bx	lr

08001098 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001098:	b480      	push	{r7}
 800109a:	b083      	sub	sp, #12
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
 80010a0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80010a2:	683b      	ldr	r3, [r7, #0]
 80010a4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80010a8:	605a      	str	r2, [r3, #4]
  return 0;
 80010aa:	2300      	movs	r3, #0
}
 80010ac:	4618      	mov	r0, r3
 80010ae:	370c      	adds	r7, #12
 80010b0:	46bd      	mov	sp, r7
 80010b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b6:	4770      	bx	lr

080010b8 <_isatty>:

int _isatty(int file)
{
 80010b8:	b480      	push	{r7}
 80010ba:	b083      	sub	sp, #12
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80010c0:	2301      	movs	r3, #1
}
 80010c2:	4618      	mov	r0, r3
 80010c4:	370c      	adds	r7, #12
 80010c6:	46bd      	mov	sp, r7
 80010c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010cc:	4770      	bx	lr

080010ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80010ce:	b480      	push	{r7}
 80010d0:	b085      	sub	sp, #20
 80010d2:	af00      	add	r7, sp, #0
 80010d4:	60f8      	str	r0, [r7, #12]
 80010d6:	60b9      	str	r1, [r7, #8]
 80010d8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80010da:	2300      	movs	r3, #0
}
 80010dc:	4618      	mov	r0, r3
 80010de:	3714      	adds	r7, #20
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr

080010e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80010e8:	b580      	push	{r7, lr}
 80010ea:	b086      	sub	sp, #24
 80010ec:	af00      	add	r7, sp, #0
 80010ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010f0:	4a14      	ldr	r2, [pc, #80]	@ (8001144 <_sbrk+0x5c>)
 80010f2:	4b15      	ldr	r3, [pc, #84]	@ (8001148 <_sbrk+0x60>)
 80010f4:	1ad3      	subs	r3, r2, r3
 80010f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80010f8:	697b      	ldr	r3, [r7, #20]
 80010fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010fc:	4b13      	ldr	r3, [pc, #76]	@ (800114c <_sbrk+0x64>)
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	2b00      	cmp	r3, #0
 8001102:	d102      	bne.n	800110a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001104:	4b11      	ldr	r3, [pc, #68]	@ (800114c <_sbrk+0x64>)
 8001106:	4a12      	ldr	r2, [pc, #72]	@ (8001150 <_sbrk+0x68>)
 8001108:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800110a:	4b10      	ldr	r3, [pc, #64]	@ (800114c <_sbrk+0x64>)
 800110c:	681a      	ldr	r2, [r3, #0]
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	4413      	add	r3, r2
 8001112:	693a      	ldr	r2, [r7, #16]
 8001114:	429a      	cmp	r2, r3
 8001116:	d207      	bcs.n	8001128 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001118:	f020 fa70 	bl	80215fc <__errno>
 800111c:	4603      	mov	r3, r0
 800111e:	220c      	movs	r2, #12
 8001120:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001122:	f04f 33ff 	mov.w	r3, #4294967295
 8001126:	e009      	b.n	800113c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001128:	4b08      	ldr	r3, [pc, #32]	@ (800114c <_sbrk+0x64>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800112e:	4b07      	ldr	r3, [pc, #28]	@ (800114c <_sbrk+0x64>)
 8001130:	681a      	ldr	r2, [r3, #0]
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	4413      	add	r3, r2
 8001136:	4a05      	ldr	r2, [pc, #20]	@ (800114c <_sbrk+0x64>)
 8001138:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800113a:	68fb      	ldr	r3, [r7, #12]
}
 800113c:	4618      	mov	r0, r3
 800113e:	3718      	adds	r7, #24
 8001140:	46bd      	mov	sp, r7
 8001142:	bd80      	pop	{r7, pc}
 8001144:	200a0000 	.word	0x200a0000
 8001148:	00000400 	.word	0x00000400
 800114c:	200004e0 	.word	0x200004e0
 8001150:	20002f68 	.word	0x20002f68

08001154 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8001154:	b480      	push	{r7}
 8001156:	b083      	sub	sp, #12
 8001158:	af00      	add	r7, sp, #0
  uint32_t reg_opsr;

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 800115a:	4b35      	ldr	r3, [pc, #212]	@ (8001230 <SystemInit+0xdc>)
 800115c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001160:	4a33      	ldr	r2, [pc, #204]	@ (8001230 <SystemInit+0xdc>)
 8001162:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001166:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR = RCC_CR_HSION;
 800116a:	4b32      	ldr	r3, [pc, #200]	@ (8001234 <SystemInit+0xe0>)
 800116c:	2201      	movs	r2, #1
 800116e:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 8001170:	4b30      	ldr	r3, [pc, #192]	@ (8001234 <SystemInit+0xe0>)
 8001172:	2200      	movs	r2, #0
 8001174:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 8001176:	4b2f      	ldr	r3, [pc, #188]	@ (8001234 <SystemInit+0xe0>)
 8001178:	2200      	movs	r2, #0
 800117a:	621a      	str	r2, [r3, #32]

  /* Reset HSEON, HSECSSON, HSEBYP, HSEEXT, HSIDIV, HSIKERON, CSION, CSIKERON, HSI48 and PLLxON bits */
#if defined(RCC_CR_PLL3ON)
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_HSECSSON | RCC_CR_HSEBYP | RCC_CR_HSEEXT | RCC_CR_HSIDIV | RCC_CR_HSIKERON | \
 800117c:	4b2d      	ldr	r3, [pc, #180]	@ (8001234 <SystemInit+0xe0>)
 800117e:	681a      	ldr	r2, [r3, #0]
 8001180:	492c      	ldr	r1, [pc, #176]	@ (8001234 <SystemInit+0xe0>)
 8001182:	4b2d      	ldr	r3, [pc, #180]	@ (8001238 <SystemInit+0xe4>)
 8001184:	4013      	ands	r3, r2
 8001186:	600b      	str	r3, [r1, #0]
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_HSECSSON | RCC_CR_HSEBYP | RCC_CR_HSEEXT | RCC_CR_HSIDIV | RCC_CR_HSIKERON | \
               RCC_CR_CSION | RCC_CR_CSIKERON |RCC_CR_HSI48ON | RCC_CR_PLL1ON | RCC_CR_PLL2ON);
#endif

  /* Reset PLLxCFGR register */
  RCC->PLL1CFGR = 0U;
 8001188:	4b2a      	ldr	r3, [pc, #168]	@ (8001234 <SystemInit+0xe0>)
 800118a:	2200      	movs	r2, #0
 800118c:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLL2CFGR = 0U;
 800118e:	4b29      	ldr	r3, [pc, #164]	@ (8001234 <SystemInit+0xe0>)
 8001190:	2200      	movs	r2, #0
 8001192:	62da      	str	r2, [r3, #44]	@ 0x2c
#if defined(RCC_CR_PLL3ON)
  RCC->PLL3CFGR = 0U;
 8001194:	4b27      	ldr	r3, [pc, #156]	@ (8001234 <SystemInit+0xe0>)
 8001196:	2200      	movs	r2, #0
 8001198:	631a      	str	r2, [r3, #48]	@ 0x30
#endif /* RCC_CR_PLL3ON */

  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280U;
 800119a:	4b26      	ldr	r3, [pc, #152]	@ (8001234 <SystemInit+0xe0>)
 800119c:	4a27      	ldr	r2, [pc, #156]	@ (800123c <SystemInit+0xe8>)
 800119e:	635a      	str	r2, [r3, #52]	@ 0x34
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000U;
 80011a0:	4b24      	ldr	r3, [pc, #144]	@ (8001234 <SystemInit+0xe0>)
 80011a2:	2200      	movs	r2, #0
 80011a4:	639a      	str	r2, [r3, #56]	@ 0x38
  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280U;
 80011a6:	4b23      	ldr	r3, [pc, #140]	@ (8001234 <SystemInit+0xe0>)
 80011a8:	4a24      	ldr	r2, [pc, #144]	@ (800123c <SystemInit+0xe8>)
 80011aa:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL2FRACR register */
  RCC->PLL2FRACR = 0x00000000U;
 80011ac:	4b21      	ldr	r3, [pc, #132]	@ (8001234 <SystemInit+0xe0>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	641a      	str	r2, [r3, #64]	@ 0x40
#if defined(RCC_CR_PLL3ON)
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280U;
 80011b2:	4b20      	ldr	r3, [pc, #128]	@ (8001234 <SystemInit+0xe0>)
 80011b4:	4a21      	ldr	r2, [pc, #132]	@ (800123c <SystemInit+0xe8>)
 80011b6:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000U;
 80011b8:	4b1e      	ldr	r3, [pc, #120]	@ (8001234 <SystemInit+0xe0>)
 80011ba:	2200      	movs	r2, #0
 80011bc:	649a      	str	r2, [r3, #72]	@ 0x48
#endif /* RCC_CR_PLL3ON */

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 80011be:	4b1d      	ldr	r3, [pc, #116]	@ (8001234 <SystemInit+0xe0>)
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	4a1c      	ldr	r2, [pc, #112]	@ (8001234 <SystemInit+0xe0>)
 80011c4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80011c8:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 80011ca:	4b1a      	ldr	r3, [pc, #104]	@ (8001234 <SystemInit+0xe0>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80011d0:	4b17      	ldr	r3, [pc, #92]	@ (8001230 <SystemInit+0xdc>)
 80011d2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 80011d6:	609a      	str	r2, [r3, #8]
  #endif /* VECT_TAB_SRAM */

  /* Check OPSR register to verify if there is an ongoing swap or option bytes update interrupted by a reset */
  reg_opsr = FLASH->OPSR & FLASH_OPSR_CODE_OP;
 80011d8:	4b19      	ldr	r3, [pc, #100]	@ (8001240 <SystemInit+0xec>)
 80011da:	699b      	ldr	r3, [r3, #24]
 80011dc:	f003 4360 	and.w	r3, r3, #3758096384	@ 0xe0000000
 80011e0:	607b      	str	r3, [r7, #4]
  if ((reg_opsr == FLASH_OPSR_CODE_OP) || (reg_opsr == (FLASH_OPSR_CODE_OP_2 | FLASH_OPSR_CODE_OP_1)))
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	f1b3 4f60 	cmp.w	r3, #3758096384	@ 0xe0000000
 80011e8:	d003      	beq.n	80011f2 <SystemInit+0x9e>
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 80011f0:	d117      	bne.n	8001222 <SystemInit+0xce>
  {
    /* Check FLASH Option Control Register access */
    if ((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != 0U)
 80011f2:	4b13      	ldr	r3, [pc, #76]	@ (8001240 <SystemInit+0xec>)
 80011f4:	69db      	ldr	r3, [r3, #28]
 80011f6:	f003 0301 	and.w	r3, r3, #1
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d005      	beq.n	800120a <SystemInit+0xb6>
    {
      /* Authorizes the Option Byte registers programming */
      FLASH->OPTKEYR = 0x08192A3BU;
 80011fe:	4b10      	ldr	r3, [pc, #64]	@ (8001240 <SystemInit+0xec>)
 8001200:	4a10      	ldr	r2, [pc, #64]	@ (8001244 <SystemInit+0xf0>)
 8001202:	60da      	str	r2, [r3, #12]
      FLASH->OPTKEYR = 0x4C5D6E7FU;
 8001204:	4b0e      	ldr	r3, [pc, #56]	@ (8001240 <SystemInit+0xec>)
 8001206:	4a10      	ldr	r2, [pc, #64]	@ (8001248 <SystemInit+0xf4>)
 8001208:	60da      	str	r2, [r3, #12]
    }
    /* Launch the option bytes change operation */
    FLASH->OPTCR |= FLASH_OPTCR_OPTSTART;
 800120a:	4b0d      	ldr	r3, [pc, #52]	@ (8001240 <SystemInit+0xec>)
 800120c:	69db      	ldr	r3, [r3, #28]
 800120e:	4a0c      	ldr	r2, [pc, #48]	@ (8001240 <SystemInit+0xec>)
 8001210:	f043 0302 	orr.w	r3, r3, #2
 8001214:	61d3      	str	r3, [r2, #28]

    /* Lock the FLASH Option Control Register access */
    FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 8001216:	4b0a      	ldr	r3, [pc, #40]	@ (8001240 <SystemInit+0xec>)
 8001218:	69db      	ldr	r3, [r3, #28]
 800121a:	4a09      	ldr	r2, [pc, #36]	@ (8001240 <SystemInit+0xec>)
 800121c:	f043 0301 	orr.w	r3, r3, #1
 8001220:	61d3      	str	r3, [r2, #28]
  }
}
 8001222:	bf00      	nop
 8001224:	370c      	adds	r7, #12
 8001226:	46bd      	mov	sp, r7
 8001228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122c:	4770      	bx	lr
 800122e:	bf00      	nop
 8001230:	e000ed00 	.word	0xe000ed00
 8001234:	44020c00 	.word	0x44020c00
 8001238:	eae2eae3 	.word	0xeae2eae3
 800123c:	01010280 	.word	0x01010280
 8001240:	40022000 	.word	0x40022000
 8001244:	08192a3b 	.word	0x08192a3b
 8001248:	4c5d6e7f 	.word	0x4c5d6e7f

0800124c <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800124c:	480d      	ldr	r0, [pc, #52]	@ (8001284 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800124e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001250:	f7ff ff80 	bl	8001154 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001254:	480c      	ldr	r0, [pc, #48]	@ (8001288 <LoopForever+0x6>)
  ldr r1, =_edata
 8001256:	490d      	ldr	r1, [pc, #52]	@ (800128c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001258:	4a0d      	ldr	r2, [pc, #52]	@ (8001290 <LoopForever+0xe>)
  movs r3, #0
 800125a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800125c:	e002      	b.n	8001264 <LoopCopyDataInit>

0800125e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800125e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001260:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001262:	3304      	adds	r3, #4

08001264 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001264:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001266:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001268:	d3f9      	bcc.n	800125e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800126a:	4a0a      	ldr	r2, [pc, #40]	@ (8001294 <LoopForever+0x12>)
  ldr r4, =_ebss
 800126c:	4c0a      	ldr	r4, [pc, #40]	@ (8001298 <LoopForever+0x16>)
  movs r3, #0
 800126e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001270:	e001      	b.n	8001276 <LoopFillZerobss>

08001272 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001272:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001274:	3204      	adds	r2, #4

08001276 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001276:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001278:	d3fb      	bcc.n	8001272 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800127a:	f020 f9c5 	bl	8021608 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800127e:	f7ff fa7f 	bl	8000780 <main>

08001282 <LoopForever>:

LoopForever:
    b LoopForever
 8001282:	e7fe      	b.n	8001282 <LoopForever>
  ldr   r0, =_estack
 8001284:	200a0000 	.word	0x200a0000
  ldr r0, =_sdata
 8001288:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800128c:	200000f4 	.word	0x200000f4
  ldr r2, =_sidata
 8001290:	08027c4c 	.word	0x08027c4c
  ldr r2, =_sbss
 8001294:	20000300 	.word	0x20000300
  ldr r4, =_ebss
 8001298:	20002f68 	.word	0x20002f68

0800129c <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800129c:	e7fe      	b.n	800129c <ADC1_IRQHandler>
	...

080012a0 <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80012a4:	2003      	movs	r0, #3
 80012a6:	f000 f914 	bl	80014d2 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80012aa:	f002 f8e3 	bl	8003474 <HAL_RCC_GetSysClockFreq>
 80012ae:	4602      	mov	r2, r0
 80012b0:	4b0c      	ldr	r3, [pc, #48]	@ (80012e4 <HAL_Init+0x44>)
 80012b2:	6a1b      	ldr	r3, [r3, #32]
 80012b4:	f003 030f 	and.w	r3, r3, #15
 80012b8:	490b      	ldr	r1, [pc, #44]	@ (80012e8 <HAL_Init+0x48>)
 80012ba:	5ccb      	ldrb	r3, [r1, r3]
 80012bc:	fa22 f303 	lsr.w	r3, r2, r3
 80012c0:	4a0a      	ldr	r2, [pc, #40]	@ (80012ec <HAL_Init+0x4c>)
 80012c2:	6013      	str	r3, [r2, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 80012c4:	2004      	movs	r0, #4
 80012c6:	f000 f937 	bl	8001538 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80012ca:	200f      	movs	r0, #15
 80012cc:	f7ff fdae 	bl	8000e2c <HAL_InitTick>
 80012d0:	4603      	mov	r3, r0
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d001      	beq.n	80012da <HAL_Init+0x3a>
  {
    return HAL_ERROR;
 80012d6:	2301      	movs	r3, #1
 80012d8:	e002      	b.n	80012e0 <HAL_Init+0x40>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80012da:	f7ff fc71 	bl	8000bc0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80012de:	2300      	movs	r3, #0
}
 80012e0:	4618      	mov	r0, r3
 80012e2:	bd80      	pop	{r7, pc}
 80012e4:	44020c00 	.word	0x44020c00
 80012e8:	080231b8 	.word	0x080231b8
 80012ec:	20000004 	.word	0x20000004

080012f0 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80012f0:	b480      	push	{r7}
 80012f2:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 80012f4:	4b06      	ldr	r3, [pc, #24]	@ (8001310 <HAL_IncTick+0x20>)
 80012f6:	781b      	ldrb	r3, [r3, #0]
 80012f8:	461a      	mov	r2, r3
 80012fa:	4b06      	ldr	r3, [pc, #24]	@ (8001314 <HAL_IncTick+0x24>)
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	4413      	add	r3, r2
 8001300:	4a04      	ldr	r2, [pc, #16]	@ (8001314 <HAL_IncTick+0x24>)
 8001302:	6013      	str	r3, [r2, #0]
}
 8001304:	bf00      	nop
 8001306:	46bd      	mov	sp, r7
 8001308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800130c:	4770      	bx	lr
 800130e:	bf00      	nop
 8001310:	2000000c 	.word	0x2000000c
 8001314:	200004e4 	.word	0x200004e4

08001318 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001318:	b480      	push	{r7}
 800131a:	af00      	add	r7, sp, #0
  return uwTick;
 800131c:	4b03      	ldr	r3, [pc, #12]	@ (800132c <HAL_GetTick+0x14>)
 800131e:	681b      	ldr	r3, [r3, #0]
}
 8001320:	4618      	mov	r0, r3
 8001322:	46bd      	mov	sp, r7
 8001324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001328:	4770      	bx	lr
 800132a:	bf00      	nop
 800132c:	200004e4 	.word	0x200004e4

08001330 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001330:	b580      	push	{r7, lr}
 8001332:	b084      	sub	sp, #16
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001338:	f7ff ffee 	bl	8001318 <HAL_GetTick>
 800133c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001342:	68fb      	ldr	r3, [r7, #12]
 8001344:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001348:	d005      	beq.n	8001356 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800134a:	4b0a      	ldr	r3, [pc, #40]	@ (8001374 <HAL_Delay+0x44>)
 800134c:	781b      	ldrb	r3, [r3, #0]
 800134e:	461a      	mov	r2, r3
 8001350:	68fb      	ldr	r3, [r7, #12]
 8001352:	4413      	add	r3, r2
 8001354:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001356:	bf00      	nop
 8001358:	f7ff ffde 	bl	8001318 <HAL_GetTick>
 800135c:	4602      	mov	r2, r0
 800135e:	68bb      	ldr	r3, [r7, #8]
 8001360:	1ad3      	subs	r3, r2, r3
 8001362:	68fa      	ldr	r2, [r7, #12]
 8001364:	429a      	cmp	r2, r3
 8001366:	d8f7      	bhi.n	8001358 <HAL_Delay+0x28>
  {
  }
}
 8001368:	bf00      	nop
 800136a:	bf00      	nop
 800136c:	3710      	adds	r7, #16
 800136e:	46bd      	mov	sp, r7
 8001370:	bd80      	pop	{r7, pc}
 8001372:	bf00      	nop
 8001374:	2000000c 	.word	0x2000000c

08001378 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001378:	b480      	push	{r7}
 800137a:	b085      	sub	sp, #20
 800137c:	af00      	add	r7, sp, #0
 800137e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	f003 0307 	and.w	r3, r3, #7
 8001386:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001388:	4b0c      	ldr	r3, [pc, #48]	@ (80013bc <__NVIC_SetPriorityGrouping+0x44>)
 800138a:	68db      	ldr	r3, [r3, #12]
 800138c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800138e:	68ba      	ldr	r2, [r7, #8]
 8001390:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001394:	4013      	ands	r3, r2
 8001396:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001398:	68fb      	ldr	r3, [r7, #12]
 800139a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800139c:	68bb      	ldr	r3, [r7, #8]
 800139e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80013a0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80013a4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80013a8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80013aa:	4a04      	ldr	r2, [pc, #16]	@ (80013bc <__NVIC_SetPriorityGrouping+0x44>)
 80013ac:	68bb      	ldr	r3, [r7, #8]
 80013ae:	60d3      	str	r3, [r2, #12]
}
 80013b0:	bf00      	nop
 80013b2:	3714      	adds	r7, #20
 80013b4:	46bd      	mov	sp, r7
 80013b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ba:	4770      	bx	lr
 80013bc:	e000ed00 	.word	0xe000ed00

080013c0 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80013c0:	b480      	push	{r7}
 80013c2:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80013c4:	4b04      	ldr	r3, [pc, #16]	@ (80013d8 <__NVIC_GetPriorityGrouping+0x18>)
 80013c6:	68db      	ldr	r3, [r3, #12]
 80013c8:	0a1b      	lsrs	r3, r3, #8
 80013ca:	f003 0307 	and.w	r3, r3, #7
}
 80013ce:	4618      	mov	r0, r3
 80013d0:	46bd      	mov	sp, r7
 80013d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d6:	4770      	bx	lr
 80013d8:	e000ed00 	.word	0xe000ed00

080013dc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80013dc:	b480      	push	{r7}
 80013de:	b083      	sub	sp, #12
 80013e0:	af00      	add	r7, sp, #0
 80013e2:	4603      	mov	r3, r0
 80013e4:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 80013e6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	db0b      	blt.n	8001406 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013ee:	88fb      	ldrh	r3, [r7, #6]
 80013f0:	f003 021f 	and.w	r2, r3, #31
 80013f4:	4907      	ldr	r1, [pc, #28]	@ (8001414 <__NVIC_EnableIRQ+0x38>)
 80013f6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80013fa:	095b      	lsrs	r3, r3, #5
 80013fc:	2001      	movs	r0, #1
 80013fe:	fa00 f202 	lsl.w	r2, r0, r2
 8001402:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001406:	bf00      	nop
 8001408:	370c      	adds	r7, #12
 800140a:	46bd      	mov	sp, r7
 800140c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001410:	4770      	bx	lr
 8001412:	bf00      	nop
 8001414:	e000e100 	.word	0xe000e100

08001418 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001418:	b480      	push	{r7}
 800141a:	b083      	sub	sp, #12
 800141c:	af00      	add	r7, sp, #0
 800141e:	4603      	mov	r3, r0
 8001420:	6039      	str	r1, [r7, #0]
 8001422:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001424:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001428:	2b00      	cmp	r3, #0
 800142a:	db0a      	blt.n	8001442 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800142c:	683b      	ldr	r3, [r7, #0]
 800142e:	b2da      	uxtb	r2, r3
 8001430:	490c      	ldr	r1, [pc, #48]	@ (8001464 <__NVIC_SetPriority+0x4c>)
 8001432:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001436:	0112      	lsls	r2, r2, #4
 8001438:	b2d2      	uxtb	r2, r2
 800143a:	440b      	add	r3, r1
 800143c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001440:	e00a      	b.n	8001458 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001442:	683b      	ldr	r3, [r7, #0]
 8001444:	b2da      	uxtb	r2, r3
 8001446:	4908      	ldr	r1, [pc, #32]	@ (8001468 <__NVIC_SetPriority+0x50>)
 8001448:	88fb      	ldrh	r3, [r7, #6]
 800144a:	f003 030f 	and.w	r3, r3, #15
 800144e:	3b04      	subs	r3, #4
 8001450:	0112      	lsls	r2, r2, #4
 8001452:	b2d2      	uxtb	r2, r2
 8001454:	440b      	add	r3, r1
 8001456:	761a      	strb	r2, [r3, #24]
}
 8001458:	bf00      	nop
 800145a:	370c      	adds	r7, #12
 800145c:	46bd      	mov	sp, r7
 800145e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001462:	4770      	bx	lr
 8001464:	e000e100 	.word	0xe000e100
 8001468:	e000ed00 	.word	0xe000ed00

0800146c <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800146c:	b480      	push	{r7}
 800146e:	b089      	sub	sp, #36	@ 0x24
 8001470:	af00      	add	r7, sp, #0
 8001472:	60f8      	str	r0, [r7, #12]
 8001474:	60b9      	str	r1, [r7, #8]
 8001476:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001478:	68fb      	ldr	r3, [r7, #12]
 800147a:	f003 0307 	and.w	r3, r3, #7
 800147e:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001480:	69fb      	ldr	r3, [r7, #28]
 8001482:	f1c3 0307 	rsb	r3, r3, #7
 8001486:	2b04      	cmp	r3, #4
 8001488:	bf28      	it	cs
 800148a:	2304      	movcs	r3, #4
 800148c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800148e:	69fb      	ldr	r3, [r7, #28]
 8001490:	3304      	adds	r3, #4
 8001492:	2b06      	cmp	r3, #6
 8001494:	d902      	bls.n	800149c <NVIC_EncodePriority+0x30>
 8001496:	69fb      	ldr	r3, [r7, #28]
 8001498:	3b03      	subs	r3, #3
 800149a:	e000      	b.n	800149e <NVIC_EncodePriority+0x32>
 800149c:	2300      	movs	r3, #0
 800149e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80014a0:	f04f 32ff 	mov.w	r2, #4294967295
 80014a4:	69bb      	ldr	r3, [r7, #24]
 80014a6:	fa02 f303 	lsl.w	r3, r2, r3
 80014aa:	43da      	mvns	r2, r3
 80014ac:	68bb      	ldr	r3, [r7, #8]
 80014ae:	401a      	ands	r2, r3
 80014b0:	697b      	ldr	r3, [r7, #20]
 80014b2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80014b4:	f04f 31ff 	mov.w	r1, #4294967295
 80014b8:	697b      	ldr	r3, [r7, #20]
 80014ba:	fa01 f303 	lsl.w	r3, r1, r3
 80014be:	43d9      	mvns	r1, r3
 80014c0:	687b      	ldr	r3, [r7, #4]
 80014c2:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80014c4:	4313      	orrs	r3, r2
         );
}
 80014c6:	4618      	mov	r0, r3
 80014c8:	3724      	adds	r7, #36	@ 0x24
 80014ca:	46bd      	mov	sp, r7
 80014cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d0:	4770      	bx	lr

080014d2 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80014d2:	b580      	push	{r7, lr}
 80014d4:	b082      	sub	sp, #8
 80014d6:	af00      	add	r7, sp, #0
 80014d8:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80014da:	6878      	ldr	r0, [r7, #4]
 80014dc:	f7ff ff4c 	bl	8001378 <__NVIC_SetPriorityGrouping>
}
 80014e0:	bf00      	nop
 80014e2:	3708      	adds	r7, #8
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bd80      	pop	{r7, pc}

080014e8 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b086      	sub	sp, #24
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	4603      	mov	r3, r0
 80014f0:	60b9      	str	r1, [r7, #8]
 80014f2:	607a      	str	r2, [r7, #4]
 80014f4:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 80014f6:	f7ff ff63 	bl	80013c0 <__NVIC_GetPriorityGrouping>
 80014fa:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80014fc:	687a      	ldr	r2, [r7, #4]
 80014fe:	68b9      	ldr	r1, [r7, #8]
 8001500:	6978      	ldr	r0, [r7, #20]
 8001502:	f7ff ffb3 	bl	800146c <NVIC_EncodePriority>
 8001506:	4602      	mov	r2, r0
 8001508:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800150c:	4611      	mov	r1, r2
 800150e:	4618      	mov	r0, r3
 8001510:	f7ff ff82 	bl	8001418 <__NVIC_SetPriority>
}
 8001514:	bf00      	nop
 8001516:	3718      	adds	r7, #24
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}

0800151c <HAL_NVIC_EnableIRQ>:
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate
  *          CMSIS device file (stm32h5xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800151c:	b580      	push	{r7, lr}
 800151e:	b082      	sub	sp, #8
 8001520:	af00      	add	r7, sp, #0
 8001522:	4603      	mov	r3, r0
 8001524:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001526:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800152a:	4618      	mov	r0, r3
 800152c:	f7ff ff56 	bl	80013dc <__NVIC_EnableIRQ>
}
 8001530:	bf00      	nop
 8001532:	3708      	adds	r7, #8
 8001534:	46bd      	mov	sp, r7
 8001536:	bd80      	pop	{r7, pc}

08001538 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8001538:	b480      	push	{r7}
 800153a:	b083      	sub	sp, #12
 800153c:	af00      	add	r7, sp, #0
 800153e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 8001540:	687b      	ldr	r3, [r7, #4]
 8001542:	2b04      	cmp	r3, #4
 8001544:	d844      	bhi.n	80015d0 <HAL_SYSTICK_CLKSourceConfig+0x98>
 8001546:	a201      	add	r2, pc, #4	@ (adr r2, 800154c <HAL_SYSTICK_CLKSourceConfig+0x14>)
 8001548:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800154c:	0800156f 	.word	0x0800156f
 8001550:	0800158d 	.word	0x0800158d
 8001554:	080015af 	.word	0x080015af
 8001558:	080015d1 	.word	0x080015d1
 800155c:	08001561 	.word	0x08001561
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 8001560:	4b1f      	ldr	r3, [pc, #124]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	4a1e      	ldr	r2, [pc, #120]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001566:	f043 0304 	orr.w	r3, r3, #4
 800156a:	6013      	str	r3, [r2, #0]
      break;
 800156c:	e031      	b.n	80015d2 <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 800156e:	4b1c      	ldr	r3, [pc, #112]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001570:	681b      	ldr	r3, [r3, #0]
 8001572:	4a1b      	ldr	r2, [pc, #108]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001574:	f023 0304 	bic.w	r3, r3, #4
 8001578:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, (0x00000000U));
 800157a:	4b1a      	ldr	r3, [pc, #104]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 800157c:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8001580:	4a18      	ldr	r2, [pc, #96]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001582:	f023 030c 	bic.w	r3, r3, #12
 8001586:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 800158a:	e022      	b.n	80015d2 <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSI as Systick clock source */
    case SYSTICK_CLKSOURCE_LSI:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 800158c:	4b14      	ldr	r3, [pc, #80]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	4a13      	ldr	r2, [pc, #76]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 8001592:	f023 0304 	bic.w	r3, r3, #4
 8001596:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, RCC_CCIPR4_SYSTICKSEL_0);
 8001598:	4b12      	ldr	r3, [pc, #72]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 800159a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800159e:	f023 030c 	bic.w	r3, r3, #12
 80015a2:	4a10      	ldr	r2, [pc, #64]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015a4:	f043 0304 	orr.w	r3, r3, #4
 80015a8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 80015ac:	e011      	b.n	80015d2 <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 80015ae:	4b0c      	ldr	r3, [pc, #48]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	4a0b      	ldr	r2, [pc, #44]	@ (80015e0 <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015b4:	f023 0304 	bic.w	r3, r3, #4
 80015b8:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, RCC_CCIPR4_SYSTICKSEL_1);
 80015ba:	4b0a      	ldr	r3, [pc, #40]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015bc:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80015c0:	f023 030c 	bic.w	r3, r3, #12
 80015c4:	4a07      	ldr	r2, [pc, #28]	@ (80015e4 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015c6:	f043 0308 	orr.w	r3, r3, #8
 80015ca:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 80015ce:	e000      	b.n	80015d2 <HAL_SYSTICK_CLKSourceConfig+0x9a>
    default:
      /* Nothing to do */
      break;
 80015d0:	bf00      	nop
  }
}
 80015d2:	bf00      	nop
 80015d4:	370c      	adds	r7, #12
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr
 80015de:	bf00      	nop
 80015e0:	e000e010 	.word	0xe000e010
 80015e4:	44020c00 	.word	0x44020c00

080015e8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d101      	bne.n	80015fa <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80015f6:	2301      	movs	r3, #1
 80015f8:	e054      	b.n	80016a4 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	7f5b      	ldrb	r3, [r3, #29]
 80015fe:	b2db      	uxtb	r3, r3
 8001600:	2b00      	cmp	r3, #0
 8001602:	d105      	bne.n	8001610 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	2200      	movs	r2, #0
 8001608:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800160a:	6878      	ldr	r0, [r7, #4]
 800160c:	f7ff fae0 	bl	8000bd0 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	2202      	movs	r2, #2
 8001614:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	791b      	ldrb	r3, [r3, #4]
 800161a:	2b00      	cmp	r3, #0
 800161c:	d10c      	bne.n	8001638 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	4a22      	ldr	r2, [pc, #136]	@ (80016ac <HAL_CRC_Init+0xc4>)
 8001624:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8001626:	687b      	ldr	r3, [r7, #4]
 8001628:	681b      	ldr	r3, [r3, #0]
 800162a:	689a      	ldr	r2, [r3, #8]
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	681b      	ldr	r3, [r3, #0]
 8001630:	f022 0218 	bic.w	r2, r2, #24
 8001634:	609a      	str	r2, [r3, #8]
 8001636:	e00c      	b.n	8001652 <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	6899      	ldr	r1, [r3, #8]
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	68db      	ldr	r3, [r3, #12]
 8001640:	461a      	mov	r2, r3
 8001642:	6878      	ldr	r0, [r7, #4]
 8001644:	f000 f834 	bl	80016b0 <HAL_CRCEx_Polynomial_Set>
 8001648:	4603      	mov	r3, r0
 800164a:	2b00      	cmp	r3, #0
 800164c:	d001      	beq.n	8001652 <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800164e:	2301      	movs	r3, #1
 8001650:	e028      	b.n	80016a4 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	795b      	ldrb	r3, [r3, #5]
 8001656:	2b00      	cmp	r3, #0
 8001658:	d105      	bne.n	8001666 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	f04f 32ff 	mov.w	r2, #4294967295
 8001662:	611a      	str	r2, [r3, #16]
 8001664:	e004      	b.n	8001670 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	687a      	ldr	r2, [r7, #4]
 800166c:	6912      	ldr	r2, [r2, #16]
 800166e:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	689b      	ldr	r3, [r3, #8]
 8001676:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	695a      	ldr	r2, [r3, #20]
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	430a      	orrs	r2, r1
 8001684:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8001686:	687b      	ldr	r3, [r7, #4]
 8001688:	681b      	ldr	r3, [r3, #0]
 800168a:	689b      	ldr	r3, [r3, #8]
 800168c:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	699a      	ldr	r2, [r3, #24]
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	430a      	orrs	r2, r1
 800169a:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	2201      	movs	r2, #1
 80016a0:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80016a2:	2300      	movs	r3, #0
}
 80016a4:	4618      	mov	r0, r3
 80016a6:	3708      	adds	r7, #8
 80016a8:	46bd      	mov	sp, r7
 80016aa:	bd80      	pop	{r7, pc}
 80016ac:	04c11db7 	.word	0x04c11db7

080016b0 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80016b0:	b480      	push	{r7}
 80016b2:	b087      	sub	sp, #28
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	60f8      	str	r0, [r7, #12]
 80016b8:	60b9      	str	r1, [r7, #8]
 80016ba:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80016bc:	2300      	movs	r3, #0
 80016be:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80016c0:	231f      	movs	r3, #31
 80016c2:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80016c4:	68bb      	ldr	r3, [r7, #8]
 80016c6:	f003 0301 	and.w	r3, r3, #1
 80016ca:	2b00      	cmp	r3, #0
 80016cc:	d102      	bne.n	80016d4 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 80016ce:	2301      	movs	r3, #1
 80016d0:	75fb      	strb	r3, [r7, #23]
 80016d2:	e063      	b.n	800179c <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80016d4:	bf00      	nop
 80016d6:	693b      	ldr	r3, [r7, #16]
 80016d8:	1e5a      	subs	r2, r3, #1
 80016da:	613a      	str	r2, [r7, #16]
 80016dc:	2b00      	cmp	r3, #0
 80016de:	d009      	beq.n	80016f4 <HAL_CRCEx_Polynomial_Set+0x44>
 80016e0:	693b      	ldr	r3, [r7, #16]
 80016e2:	f003 031f 	and.w	r3, r3, #31
 80016e6:	68ba      	ldr	r2, [r7, #8]
 80016e8:	fa22 f303 	lsr.w	r3, r2, r3
 80016ec:	f003 0301 	and.w	r3, r3, #1
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d0f0      	beq.n	80016d6 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	2b18      	cmp	r3, #24
 80016f8:	d846      	bhi.n	8001788 <HAL_CRCEx_Polynomial_Set+0xd8>
 80016fa:	a201      	add	r2, pc, #4	@ (adr r2, 8001700 <HAL_CRCEx_Polynomial_Set+0x50>)
 80016fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001700:	0800178f 	.word	0x0800178f
 8001704:	08001789 	.word	0x08001789
 8001708:	08001789 	.word	0x08001789
 800170c:	08001789 	.word	0x08001789
 8001710:	08001789 	.word	0x08001789
 8001714:	08001789 	.word	0x08001789
 8001718:	08001789 	.word	0x08001789
 800171c:	08001789 	.word	0x08001789
 8001720:	0800177d 	.word	0x0800177d
 8001724:	08001789 	.word	0x08001789
 8001728:	08001789 	.word	0x08001789
 800172c:	08001789 	.word	0x08001789
 8001730:	08001789 	.word	0x08001789
 8001734:	08001789 	.word	0x08001789
 8001738:	08001789 	.word	0x08001789
 800173c:	08001789 	.word	0x08001789
 8001740:	08001771 	.word	0x08001771
 8001744:	08001789 	.word	0x08001789
 8001748:	08001789 	.word	0x08001789
 800174c:	08001789 	.word	0x08001789
 8001750:	08001789 	.word	0x08001789
 8001754:	08001789 	.word	0x08001789
 8001758:	08001789 	.word	0x08001789
 800175c:	08001789 	.word	0x08001789
 8001760:	08001765 	.word	0x08001765
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8001764:	693b      	ldr	r3, [r7, #16]
 8001766:	2b06      	cmp	r3, #6
 8001768:	d913      	bls.n	8001792 <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 800176a:	2301      	movs	r3, #1
 800176c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800176e:	e010      	b.n	8001792 <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8001770:	693b      	ldr	r3, [r7, #16]
 8001772:	2b07      	cmp	r3, #7
 8001774:	d90f      	bls.n	8001796 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8001776:	2301      	movs	r3, #1
 8001778:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800177a:	e00c      	b.n	8001796 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 800177c:	693b      	ldr	r3, [r7, #16]
 800177e:	2b0f      	cmp	r3, #15
 8001780:	d90b      	bls.n	800179a <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 8001782:	2301      	movs	r3, #1
 8001784:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8001786:	e008      	b.n	800179a <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8001788:	2301      	movs	r3, #1
 800178a:	75fb      	strb	r3, [r7, #23]
        break;
 800178c:	e006      	b.n	800179c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800178e:	bf00      	nop
 8001790:	e004      	b.n	800179c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001792:	bf00      	nop
 8001794:	e002      	b.n	800179c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8001796:	bf00      	nop
 8001798:	e000      	b.n	800179c <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800179a:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 800179c:	7dfb      	ldrb	r3, [r7, #23]
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d10d      	bne.n	80017be <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80017a2:	68fb      	ldr	r3, [r7, #12]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	68ba      	ldr	r2, [r7, #8]
 80017a8:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80017aa:	68fb      	ldr	r3, [r7, #12]
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	689b      	ldr	r3, [r3, #8]
 80017b0:	f023 0118 	bic.w	r1, r3, #24
 80017b4:	68fb      	ldr	r3, [r7, #12]
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	687a      	ldr	r2, [r7, #4]
 80017ba:	430a      	orrs	r2, r1
 80017bc:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80017be:	7dfb      	ldrb	r3, [r7, #23]
}
 80017c0:	4618      	mov	r0, r3
 80017c2:	371c      	adds	r7, #28
 80017c4:	46bd      	mov	sp, r7
 80017c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ca:	4770      	bx	lr

080017cc <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	b084      	sub	sp, #16
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 80017d4:	f7ff fda0 	bl	8001318 <HAL_GetTick>
 80017d8:	60f8      	str	r0, [r7, #12]

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d101      	bne.n	80017e4 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 80017e0:	2301      	movs	r3, #1
 80017e2:	e0f0      	b.n	80019c6 <HAL_DMA_Init+0x1fa>
  if (hdma->Init.Mode == DMA_PFCTRL)
  {
    assert_param(IS_DMA_PFREQ_INSTANCE(hdma->Instance));
  }
  /* Check DMA channel instance */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	4a79      	ldr	r2, [pc, #484]	@ (80019d0 <HAL_DMA_Init+0x204>)
 80017ea:	4293      	cmp	r3, r2
 80017ec:	f000 809f 	beq.w	800192e <HAL_DMA_Init+0x162>
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	4a77      	ldr	r2, [pc, #476]	@ (80019d4 <HAL_DMA_Init+0x208>)
 80017f6:	4293      	cmp	r3, r2
 80017f8:	f000 8099 	beq.w	800192e <HAL_DMA_Init+0x162>
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	4a75      	ldr	r2, [pc, #468]	@ (80019d8 <HAL_DMA_Init+0x20c>)
 8001802:	4293      	cmp	r3, r2
 8001804:	f000 8093 	beq.w	800192e <HAL_DMA_Init+0x162>
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	4a73      	ldr	r2, [pc, #460]	@ (80019dc <HAL_DMA_Init+0x210>)
 800180e:	4293      	cmp	r3, r2
 8001810:	f000 808d 	beq.w	800192e <HAL_DMA_Init+0x162>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	4a71      	ldr	r2, [pc, #452]	@ (80019e0 <HAL_DMA_Init+0x214>)
 800181a:	4293      	cmp	r3, r2
 800181c:	f000 8087 	beq.w	800192e <HAL_DMA_Init+0x162>
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	4a6f      	ldr	r2, [pc, #444]	@ (80019e4 <HAL_DMA_Init+0x218>)
 8001826:	4293      	cmp	r3, r2
 8001828:	f000 8081 	beq.w	800192e <HAL_DMA_Init+0x162>
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	4a6d      	ldr	r2, [pc, #436]	@ (80019e8 <HAL_DMA_Init+0x21c>)
 8001832:	4293      	cmp	r3, r2
 8001834:	d07b      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	681b      	ldr	r3, [r3, #0]
 800183a:	4a6c      	ldr	r2, [pc, #432]	@ (80019ec <HAL_DMA_Init+0x220>)
 800183c:	4293      	cmp	r3, r2
 800183e:	d076      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	4a6a      	ldr	r2, [pc, #424]	@ (80019f0 <HAL_DMA_Init+0x224>)
 8001846:	4293      	cmp	r3, r2
 8001848:	d071      	beq.n	800192e <HAL_DMA_Init+0x162>
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	4a69      	ldr	r2, [pc, #420]	@ (80019f4 <HAL_DMA_Init+0x228>)
 8001850:	4293      	cmp	r3, r2
 8001852:	d06c      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	681b      	ldr	r3, [r3, #0]
 8001858:	4a67      	ldr	r2, [pc, #412]	@ (80019f8 <HAL_DMA_Init+0x22c>)
 800185a:	4293      	cmp	r3, r2
 800185c:	d067      	beq.n	800192e <HAL_DMA_Init+0x162>
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	4a66      	ldr	r2, [pc, #408]	@ (80019fc <HAL_DMA_Init+0x230>)
 8001864:	4293      	cmp	r3, r2
 8001866:	d062      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	4a64      	ldr	r2, [pc, #400]	@ (8001a00 <HAL_DMA_Init+0x234>)
 800186e:	4293      	cmp	r3, r2
 8001870:	d05d      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	4a63      	ldr	r2, [pc, #396]	@ (8001a04 <HAL_DMA_Init+0x238>)
 8001878:	4293      	cmp	r3, r2
 800187a:	d058      	beq.n	800192e <HAL_DMA_Init+0x162>
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	4a61      	ldr	r2, [pc, #388]	@ (8001a08 <HAL_DMA_Init+0x23c>)
 8001882:	4293      	cmp	r3, r2
 8001884:	d053      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	4a60      	ldr	r2, [pc, #384]	@ (8001a0c <HAL_DMA_Init+0x240>)
 800188c:	4293      	cmp	r3, r2
 800188e:	d04e      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	4a5e      	ldr	r2, [pc, #376]	@ (8001a10 <HAL_DMA_Init+0x244>)
 8001896:	4293      	cmp	r3, r2
 8001898:	d049      	beq.n	800192e <HAL_DMA_Init+0x162>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	4a5d      	ldr	r2, [pc, #372]	@ (8001a14 <HAL_DMA_Init+0x248>)
 80018a0:	4293      	cmp	r3, r2
 80018a2:	d044      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4a5b      	ldr	r2, [pc, #364]	@ (8001a18 <HAL_DMA_Init+0x24c>)
 80018aa:	4293      	cmp	r3, r2
 80018ac:	d03f      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	4a5a      	ldr	r2, [pc, #360]	@ (8001a1c <HAL_DMA_Init+0x250>)
 80018b4:	4293      	cmp	r3, r2
 80018b6:	d03a      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	4a58      	ldr	r2, [pc, #352]	@ (8001a20 <HAL_DMA_Init+0x254>)
 80018be:	4293      	cmp	r3, r2
 80018c0:	d035      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	4a57      	ldr	r2, [pc, #348]	@ (8001a24 <HAL_DMA_Init+0x258>)
 80018c8:	4293      	cmp	r3, r2
 80018ca:	d030      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4a55      	ldr	r2, [pc, #340]	@ (8001a28 <HAL_DMA_Init+0x25c>)
 80018d2:	4293      	cmp	r3, r2
 80018d4:	d02b      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a54      	ldr	r2, [pc, #336]	@ (8001a2c <HAL_DMA_Init+0x260>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d026      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a52      	ldr	r2, [pc, #328]	@ (8001a30 <HAL_DMA_Init+0x264>)
 80018e6:	4293      	cmp	r3, r2
 80018e8:	d021      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	4a51      	ldr	r2, [pc, #324]	@ (8001a34 <HAL_DMA_Init+0x268>)
 80018f0:	4293      	cmp	r3, r2
 80018f2:	d01c      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	4a4f      	ldr	r2, [pc, #316]	@ (8001a38 <HAL_DMA_Init+0x26c>)
 80018fa:	4293      	cmp	r3, r2
 80018fc:	d017      	beq.n	800192e <HAL_DMA_Init+0x162>
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	4a4e      	ldr	r2, [pc, #312]	@ (8001a3c <HAL_DMA_Init+0x270>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d012      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4a4c      	ldr	r2, [pc, #304]	@ (8001a40 <HAL_DMA_Init+0x274>)
 800190e:	4293      	cmp	r3, r2
 8001910:	d00d      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	681b      	ldr	r3, [r3, #0]
 8001916:	4a4b      	ldr	r2, [pc, #300]	@ (8001a44 <HAL_DMA_Init+0x278>)
 8001918:	4293      	cmp	r3, r2
 800191a:	d008      	beq.n	800192e <HAL_DMA_Init+0x162>
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	681b      	ldr	r3, [r3, #0]
 8001920:	4a49      	ldr	r2, [pc, #292]	@ (8001a48 <HAL_DMA_Init+0x27c>)
 8001922:	4293      	cmp	r3, r2
 8001924:	d003      	beq.n	800192e <HAL_DMA_Init+0x162>
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	4a48      	ldr	r2, [pc, #288]	@ (8001a4c <HAL_DMA_Init+0x280>)
 800192c:	4293      	cmp	r3, r2
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800192e:	687b      	ldr	r3, [r7, #4]
 8001930:	2200      	movs	r2, #0
 8001932:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

  /* Initialize the callbacks */
  if (hdma->State == HAL_DMA_STATE_RESET)
 8001936:	687b      	ldr	r3, [r7, #4]
 8001938:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 800193c:	b2db      	uxtb	r3, r3
 800193e:	2b00      	cmp	r3, #0
 8001940:	d10e      	bne.n	8001960 <HAL_DMA_Init+0x194>
  {
    /* Clean all callbacks */
    hdma->XferCpltCallback     = NULL;
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	2200      	movs	r2, #0
 8001946:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma->XferHalfCpltCallback = NULL;
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	2200      	movs	r2, #0
 800194c:	665a      	str	r2, [r3, #100]	@ 0x64
    hdma->XferErrorCallback    = NULL;
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	2200      	movs	r2, #0
 8001952:	669a      	str	r2, [r3, #104]	@ 0x68
    hdma->XferAbortCallback    = NULL;
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	2200      	movs	r2, #0
 8001958:	66da      	str	r2, [r3, #108]	@ 0x6c
    hdma->XferSuspendCallback  = NULL;
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	2200      	movs	r2, #0
 800195e:	671a      	str	r2, [r3, #112]	@ 0x70
  }

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	2202      	movs	r2, #2
 8001964:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	695a      	ldr	r2, [r3, #20]
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f042 0206 	orr.w	r2, r2, #6
 8001976:	615a      	str	r2, [r3, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 8001978:	e00f      	b.n	800199a <HAL_DMA_Init+0x1ce>
  {
    /* Check for the Timeout */
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 800197a:	f7ff fccd 	bl	8001318 <HAL_GetTick>
 800197e:	4602      	mov	r2, r0
 8001980:	68fb      	ldr	r3, [r7, #12]
 8001982:	1ad3      	subs	r3, r2, r3
 8001984:	2b05      	cmp	r3, #5
 8001986:	d908      	bls.n	800199a <HAL_DMA_Init+0x1ce>
    {
      /* Update the DMA channel error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001988:	687b      	ldr	r3, [r7, #4]
 800198a:	2210      	movs	r2, #16
 800198c:	659a      	str	r2, [r3, #88]	@ 0x58

      /* Update the DMA channel state */
      hdma->State = HAL_DMA_STATE_ERROR;
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	2203      	movs	r2, #3
 8001992:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

      return HAL_ERROR;
 8001996:	2301      	movs	r3, #1
 8001998:	e015      	b.n	80019c6 <HAL_DMA_Init+0x1fa>
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	695b      	ldr	r3, [r3, #20]
 80019a0:	f003 0301 	and.w	r3, r3, #1
 80019a4:	2b00      	cmp	r3, #0
 80019a6:	d1e8      	bne.n	800197a <HAL_DMA_Init+0x1ae>
    }
  }

  /* Initialize the DMA channel registers */
  DMA_Init(hdma);
 80019a8:	6878      	ldr	r0, [r7, #4]
 80019aa:	f000 faaf 	bl	8001f0c <DMA_Init>

  /* Update DMA channel operation mode */
  hdma->Mode = hdma->Init.Mode;
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Update the DMA channel error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	2200      	movs	r2, #0
 80019ba:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_READY;
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	2201      	movs	r2, #1
 80019c0:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

  return HAL_OK;
 80019c4:	2300      	movs	r3, #0
}
 80019c6:	4618      	mov	r0, r3
 80019c8:	3710      	adds	r7, #16
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bd80      	pop	{r7, pc}
 80019ce:	bf00      	nop
 80019d0:	40020050 	.word	0x40020050
 80019d4:	50020050 	.word	0x50020050
 80019d8:	400200d0 	.word	0x400200d0
 80019dc:	500200d0 	.word	0x500200d0
 80019e0:	40020150 	.word	0x40020150
 80019e4:	50020150 	.word	0x50020150
 80019e8:	400201d0 	.word	0x400201d0
 80019ec:	500201d0 	.word	0x500201d0
 80019f0:	40020250 	.word	0x40020250
 80019f4:	50020250 	.word	0x50020250
 80019f8:	400202d0 	.word	0x400202d0
 80019fc:	500202d0 	.word	0x500202d0
 8001a00:	40020350 	.word	0x40020350
 8001a04:	50020350 	.word	0x50020350
 8001a08:	400203d0 	.word	0x400203d0
 8001a0c:	500203d0 	.word	0x500203d0
 8001a10:	40021050 	.word	0x40021050
 8001a14:	50021050 	.word	0x50021050
 8001a18:	400210d0 	.word	0x400210d0
 8001a1c:	500210d0 	.word	0x500210d0
 8001a20:	40021150 	.word	0x40021150
 8001a24:	50021150 	.word	0x50021150
 8001a28:	400211d0 	.word	0x400211d0
 8001a2c:	500211d0 	.word	0x500211d0
 8001a30:	40021250 	.word	0x40021250
 8001a34:	50021250 	.word	0x50021250
 8001a38:	400212d0 	.word	0x400212d0
 8001a3c:	500212d0 	.word	0x500212d0
 8001a40:	40021350 	.word	0x40021350
 8001a44:	50021350 	.word	0x50021350
 8001a48:	400213d0 	.word	0x400213d0
 8001a4c:	500213d0 	.word	0x500213d0

08001a50 <HAL_DMA_Start_IT>:
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *const hdma,
                                   uint32_t SrcAddress,
                                   uint32_t DstAddress,
                                   uint32_t SrcDataSize)
{
 8001a50:	b580      	push	{r7, lr}
 8001a52:	b084      	sub	sp, #16
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	60f8      	str	r0, [r7, #12]
 8001a58:	60b9      	str	r1, [r7, #8]
 8001a5a:	607a      	str	r2, [r7, #4]
 8001a5c:	603b      	str	r3, [r7, #0]
  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001a5e:	68fb      	ldr	r3, [r7, #12]
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d101      	bne.n	8001a68 <HAL_DMA_Start_IT+0x18>
  {
    return HAL_ERROR;
 8001a64:	2301      	movs	r3, #1
 8001a66:	e055      	b.n	8001b14 <HAL_DMA_Start_IT+0xc4>
  }

  /* Check the DMA Mode is DMA_NORMAL */
  if (hdma->Mode != DMA_NORMAL)
 8001a68:	68fb      	ldr	r3, [r7, #12]
 8001a6a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001a6c:	2b00      	cmp	r3, #0
 8001a6e:	d001      	beq.n	8001a74 <HAL_DMA_Start_IT+0x24>
  {
    return HAL_ERROR;
 8001a70:	2301      	movs	r3, #1
 8001a72:	e04f      	b.n	8001b14 <HAL_DMA_Start_IT+0xc4>

  /* Check the parameters */
  assert_param(IS_DMA_BLOCK_SIZE(SrcDataSize));

  /* Process locked */
  __HAL_LOCK(hdma);
 8001a74:	68fb      	ldr	r3, [r7, #12]
 8001a76:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8001a7a:	2b01      	cmp	r3, #1
 8001a7c:	d101      	bne.n	8001a82 <HAL_DMA_Start_IT+0x32>
 8001a7e:	2302      	movs	r3, #2
 8001a80:	e048      	b.n	8001b14 <HAL_DMA_Start_IT+0xc4>
 8001a82:	68fb      	ldr	r3, [r7, #12]
 8001a84:	2201      	movs	r2, #1
 8001a86:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

  /* Check DMA channel state */
  if (hdma->State == HAL_DMA_STATE_READY)
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001a90:	b2db      	uxtb	r3, r3
 8001a92:	2b01      	cmp	r3, #1
 8001a94:	d136      	bne.n	8001b04 <HAL_DMA_Start_IT+0xb4>
  {
    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	2202      	movs	r2, #2
 8001a9a:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	659a      	str	r2, [r3, #88]	@ 0x58

    /* Configure the source address, destination address, the data size and clear flags */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, SrcDataSize);
 8001aa4:	683b      	ldr	r3, [r7, #0]
 8001aa6:	687a      	ldr	r2, [r7, #4]
 8001aa8:	68b9      	ldr	r1, [r7, #8]
 8001aaa:	68f8      	ldr	r0, [r7, #12]
 8001aac:	f000 fa08 	bl	8001ec0 <DMA_SetConfig>

    /* Enable common interrupts: Transfer Complete and Transfer Errors ITs */
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	695a      	ldr	r2, [r3, #20]
 8001ab6:	68fb      	ldr	r3, [r7, #12]
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	f442 42ba 	orr.w	r2, r2, #23808	@ 0x5d00
 8001abe:	615a      	str	r2, [r3, #20]

    /* Check half transfer complete callback */
    if (hdma->XferHalfCpltCallback != NULL)
 8001ac0:	68fb      	ldr	r3, [r7, #12]
 8001ac2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001ac4:	2b00      	cmp	r3, #0
 8001ac6:	d007      	beq.n	8001ad8 <HAL_DMA_Start_IT+0x88>
    {
      /* If Half Transfer complete callback is set, enable the corresponding IT */
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8001ac8:	68fb      	ldr	r3, [r7, #12]
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	695a      	ldr	r2, [r3, #20]
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001ad6:	615a      	str	r2, [r3, #20]
    }

    /* Check Half suspend callback */
    if (hdma->XferSuspendCallback != NULL)
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d007      	beq.n	8001af0 <HAL_DMA_Start_IT+0xa0>
    {
      /* If Transfer suspend callback is set, enable the corresponding IT */
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8001ae0:	68fb      	ldr	r3, [r7, #12]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	695a      	ldr	r2, [r3, #20]
 8001ae6:	68fb      	ldr	r3, [r7, #12]
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001aee:	615a      	str	r2, [r3, #20]
    }

    /* Enable DMA channel */
    __HAL_DMA_ENABLE(hdma);
 8001af0:	68fb      	ldr	r3, [r7, #12]
 8001af2:	681b      	ldr	r3, [r3, #0]
 8001af4:	695a      	ldr	r2, [r3, #20]
 8001af6:	68fb      	ldr	r3, [r7, #12]
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	f042 0201 	orr.w	r2, r2, #1
 8001afe:	615a      	str	r2, [r3, #20]
    __HAL_UNLOCK(hdma);

    return HAL_ERROR;
  }

  return HAL_OK;
 8001b00:	2300      	movs	r3, #0
 8001b02:	e007      	b.n	8001b14 <HAL_DMA_Start_IT+0xc4>
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	2240      	movs	r2, #64	@ 0x40
 8001b08:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8001b0a:	68fb      	ldr	r3, [r7, #12]
 8001b0c:	2200      	movs	r2, #0
 8001b0e:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 8001b12:	2301      	movs	r3, #1
}
 8001b14:	4618      	mov	r0, r3
 8001b16:	3710      	adds	r7, #16
 8001b18:	46bd      	mov	sp, r7
 8001b1a:	bd80      	pop	{r7, pc}

08001b1c <HAL_DMA_Abort_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *const hdma)
{
 8001b1c:	b480      	push	{r7}
 8001b1e:	b083      	sub	sp, #12
 8001b20:	af00      	add	r7, sp, #0
 8001b22:	6078      	str	r0, [r7, #4]
  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	2b00      	cmp	r3, #0
 8001b28:	d101      	bne.n	8001b2e <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 8001b2a:	2301      	movs	r3, #1
 8001b2c:	e019      	b.n	8001b62 <HAL_DMA_Abort_IT+0x46>
  }

  /* Check DMA channel state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001b34:	b2db      	uxtb	r3, r3
 8001b36:	2b02      	cmp	r3, #2
 8001b38:	d004      	beq.n	8001b44 <HAL_DMA_Abort_IT+0x28>
  {
    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	2220      	movs	r2, #32
 8001b3e:	659a      	str	r2, [r3, #88]	@ 0x58

    return HAL_ERROR;
 8001b40:	2301      	movs	r3, #1
 8001b42:	e00e      	b.n	8001b62 <HAL_DMA_Abort_IT+0x46>
  }
  else
  {
    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_ABORT;
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	2204      	movs	r2, #4
 8001b48:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Suspend the channel and activate suspend interrupt */
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8001b4c:	687b      	ldr	r3, [r7, #4]
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	695b      	ldr	r3, [r3, #20]
 8001b52:	687a      	ldr	r2, [r7, #4]
 8001b54:	6812      	ldr	r2, [r2, #0]
 8001b56:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001b5a:	f043 0304 	orr.w	r3, r3, #4
 8001b5e:	6153      	str	r3, [r2, #20]
  }

  return HAL_OK;
 8001b60:	2300      	movs	r3, #0
}
 8001b62:	4618      	mov	r0, r3
 8001b64:	370c      	adds	r7, #12
 8001b66:	46bd      	mov	sp, r7
 8001b68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b6c:	4770      	bx	lr

08001b6e <HAL_DMA_IRQHandler>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval None.
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *const hdma)
{
 8001b6e:	b580      	push	{r7, lr}
 8001b70:	b086      	sub	sp, #24
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	6078      	str	r0, [r7, #4]
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8001b7e:	f023 030f 	bic.w	r3, r3, #15
 8001b82:	617b      	str	r3, [r7, #20]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b8c:	3b50      	subs	r3, #80	@ 0x50
 8001b8e:	09db      	lsrs	r3, r3, #7
 8001b90:	f003 031f 	and.w	r3, r3, #31
 8001b94:	2201      	movs	r2, #1
 8001b96:	fa02 f303 	lsl.w	r3, r2, r3
 8001b9a:	613b      	str	r3, [r7, #16]
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 8001b9c:	697b      	ldr	r3, [r7, #20]
 8001b9e:	68db      	ldr	r3, [r3, #12]
 8001ba0:	693a      	ldr	r2, [r7, #16]
 8001ba2:	4013      	ands	r3, r2
 8001ba4:	60fb      	str	r3, [r7, #12]

  /* Global Interrupt Flag management *********************************************************************************/
#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  if ((global_active_flag_s == 0U) && (global_active_flag_ns == 0U))
#else
  if (global_active_flag_ns == 0U)
 8001ba6:	68fb      	ldr	r3, [r7, #12]
 8001ba8:	2b00      	cmp	r3, #0
 8001baa:	f000 813b 	beq.w	8001e24 <HAL_DMA_IRQHandler+0x2b6>
  {
    return; /* the global interrupt flag for the current channel is down , nothing to do */
  }

  /* Data Transfer Error Interrupt management *************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	681b      	ldr	r3, [r3, #0]
 8001bb2:	691b      	ldr	r3, [r3, #16]
 8001bb4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001bb8:	2b00      	cmp	r3, #0
 8001bba:	d011      	beq.n	8001be0 <HAL_DMA_IRQHandler+0x72>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	695b      	ldr	r3, [r3, #20]
 8001bc2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001bc6:	2b00      	cmp	r3, #0
 8001bc8:	d00a      	beq.n	8001be0 <HAL_DMA_IRQHandler+0x72>
    {
      /* Clear the transfer error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001bd2:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001bd8:	f043 0201 	orr.w	r2, r3, #1
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Update Linked-list Error Interrupt management ********************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U)
 8001be0:	687b      	ldr	r3, [r7, #4]
 8001be2:	681b      	ldr	r3, [r3, #0]
 8001be4:	691b      	ldr	r3, [r3, #16]
 8001be6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d011      	beq.n	8001c12 <HAL_DMA_IRQHandler+0xa4>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	695b      	ldr	r3, [r3, #20]
 8001bf4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d00a      	beq.n	8001c12 <HAL_DMA_IRQHandler+0xa4>
    {
      /* Clear the update linked-list error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001c04:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c0a:	f043 0202 	orr.w	r2, r3, #2
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* User Setting Error Interrupt management **************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U)
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	691b      	ldr	r3, [r3, #16]
 8001c18:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001c1c:	2b00      	cmp	r3, #0
 8001c1e:	d011      	beq.n	8001c44 <HAL_DMA_IRQHandler+0xd6>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	681b      	ldr	r3, [r3, #0]
 8001c24:	695b      	ldr	r3, [r3, #20]
 8001c26:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d00a      	beq.n	8001c44 <HAL_DMA_IRQHandler+0xd6>
    {
      /* Clear the user setting error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	681b      	ldr	r3, [r3, #0]
 8001c32:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c36:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c3c:	f043 0204 	orr.w	r2, r3, #4
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Trigger Overrun Interrupt management *****************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U)
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	691b      	ldr	r3, [r3, #16]
 8001c4a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d011      	beq.n	8001c76 <HAL_DMA_IRQHandler+0x108>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	695b      	ldr	r3, [r3, #20]
 8001c58:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c5c:	2b00      	cmp	r3, #0
 8001c5e:	d00a      	beq.n	8001c76 <HAL_DMA_IRQHandler+0x108>
    {
      /* Clear the trigger overrun flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001c68:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c6e:	f043 0208 	orr.w	r2, r3, #8
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Half Transfer Complete Interrupt management **********************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U)
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	691b      	ldr	r3, [r3, #16]
 8001c7c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001c80:	2b00      	cmp	r3, #0
 8001c82:	d013      	beq.n	8001cac <HAL_DMA_IRQHandler+0x13e>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	695b      	ldr	r3, [r3, #20]
 8001c8a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001c8e:	2b00      	cmp	r3, #0
 8001c90:	d00c      	beq.n	8001cac <HAL_DMA_IRQHandler+0x13e>
    {
      /* Clear the half transfer flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 8001c92:	687b      	ldr	r3, [r7, #4]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001c9a:	60da      	str	r2, [r3, #12]

      /* Check half transfer complete callback */
      if (hdma->XferHalfCpltCallback != NULL)
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001ca0:	2b00      	cmp	r3, #0
 8001ca2:	d003      	beq.n	8001cac <HAL_DMA_IRQHandler+0x13e>
      {
        /* Half transfer callback */
        hdma->XferHalfCpltCallback(hdma);
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001ca8:	6878      	ldr	r0, [r7, #4]
 8001caa:	4798      	blx	r3
      }
    }
  }

  /* Suspend Transfer Interrupt management ****************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U)
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	691b      	ldr	r3, [r3, #16]
 8001cb2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d04c      	beq.n	8001d54 <HAL_DMA_IRQHandler+0x1e6>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	695b      	ldr	r3, [r3, #20]
 8001cc0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	d045      	beq.n	8001d54 <HAL_DMA_IRQHandler+0x1e6>
    {
      /* Clear the block transfer complete flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001cd0:	60da      	str	r2, [r3, #12]

      /* Check DMA channel state */
      if (hdma->State == HAL_DMA_STATE_ABORT)
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001cd8:	b2db      	uxtb	r3, r3
 8001cda:	2b04      	cmp	r3, #4
 8001cdc:	d12e      	bne.n	8001d3c <HAL_DMA_IRQHandler+0x1ce>
      {
        /* Disable the suspend transfer interrupt */
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	695a      	ldr	r2, [r3, #20]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001cec:	615a      	str	r2, [r3, #20]

        /* Reset the channel internal state and reset the FIFO */
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	695a      	ldr	r2, [r3, #20]
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f042 0202 	orr.w	r2, r2, #2
 8001cfc:	615a      	str	r2, [r3, #20]

        /* Update the DMA channel state */
        hdma->State = HAL_DMA_STATE_READY;
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	2201      	movs	r2, #1
 8001d02:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

        /* Check DMA channel transfer mode */
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001d0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d007      	beq.n	8001d22 <HAL_DMA_IRQHandler+0x1b4>
        {
          /* Update the linked-list queue state */
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001d16:	2201      	movs	r2, #1
 8001d18:	731a      	strb	r2, [r3, #12]

          /* Clear remaining data size to ensure loading linked-list from memory next start */
          hdma->Instance->CBR1 = 0U;
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	2200      	movs	r2, #0
 8001d20:	649a      	str	r2, [r3, #72]	@ 0x48
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	2200      	movs	r2, #0
 8001d26:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

        /* Check transfer abort callback */
        if (hdma->XferAbortCallback != NULL)
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d07a      	beq.n	8001e28 <HAL_DMA_IRQHandler+0x2ba>
        {
          /* Transfer abort callback */
          hdma->XferAbortCallback(hdma);
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8001d36:	6878      	ldr	r0, [r7, #4]
 8001d38:	4798      	blx	r3
        }

        return;
 8001d3a:	e075      	b.n	8001e28 <HAL_DMA_IRQHandler+0x2ba>
      }
      else
      {
        /* Update the DMA channel state */
        hdma->State = HAL_DMA_STATE_SUSPEND;
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	2205      	movs	r2, #5
 8001d40:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

        /* Check transfer suspend callback */
        if (hdma->XferSuspendCallback != NULL)
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	d003      	beq.n	8001d54 <HAL_DMA_IRQHandler+0x1e6>
        {
          /* Transfer suspend callback */
          hdma->XferSuspendCallback(hdma);
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d50:	6878      	ldr	r0, [r7, #4]
 8001d52:	4798      	blx	r3
      }
    }
  }

  /* Transfer Complete Interrupt management ***************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U)
 8001d54:	687b      	ldr	r3, [r7, #4]
 8001d56:	681b      	ldr	r3, [r3, #0]
 8001d58:	691b      	ldr	r3, [r3, #16]
 8001d5a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	d039      	beq.n	8001dd6 <HAL_DMA_IRQHandler+0x268>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8001d62:	687b      	ldr	r3, [r7, #4]
 8001d64:	681b      	ldr	r3, [r3, #0]
 8001d66:	695b      	ldr	r3, [r3, #20]
 8001d68:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d032      	beq.n	8001dd6 <HAL_DMA_IRQHandler+0x268>
    {
      /* Check DMA channel transfer mode */
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001d74:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001d78:	2b00      	cmp	r3, #0
 8001d7a:	d012      	beq.n	8001da2 <HAL_DMA_IRQHandler+0x234>
      {
        /* If linked-list transfer */
        if (hdma->Instance->CLLR == 0U)
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d116      	bne.n	8001db4 <HAL_DMA_IRQHandler+0x246>
        {
          if (hdma->Instance->CBR1 == 0U)
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d111      	bne.n	8001db4 <HAL_DMA_IRQHandler+0x246>
          {
            /* Update the DMA channel state */
            hdma->State = HAL_DMA_STATE_READY;
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	2201      	movs	r2, #1
 8001d94:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

            /* Update the linked-list queue state */
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001d9c:	2201      	movs	r2, #1
 8001d9e:	731a      	strb	r2, [r3, #12]
 8001da0:	e008      	b.n	8001db4 <HAL_DMA_IRQHandler+0x246>
        }
      }
      else
      {
        /* If normal transfer */
        if (hdma->Instance->CBR1 == 0U)
 8001da2:	687b      	ldr	r3, [r7, #4]
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d103      	bne.n	8001db4 <HAL_DMA_IRQHandler+0x246>
        {
          /* Update the DMA channel state */
          hdma->State = HAL_DMA_STATE_READY;
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	2201      	movs	r2, #1
 8001db0:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
        }
      }

      /* Clear TC and HT transfer flags */
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	681b      	ldr	r3, [r3, #0]
 8001db8:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8001dbc:	60da      	str	r2, [r3, #12]

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	2200      	movs	r2, #0
 8001dc2:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

      /* Check transfer complete callback */
      if (hdma->XferCpltCallback != NULL)
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d003      	beq.n	8001dd6 <HAL_DMA_IRQHandler+0x268>
      {
        /* Channel Transfer Complete callback */
        hdma->XferCpltCallback(hdma);
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001dd2:	6878      	ldr	r0, [r7, #4]
 8001dd4:	4798      	blx	r3
      }
    }
  }

  /* Manage error case ************************************************************************************************/
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d025      	beq.n	8001e2a <HAL_DMA_IRQHandler+0x2bc>
  {
    /* Reset the channel internal state and reset the FIFO */
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	695a      	ldr	r2, [r3, #20]
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	f042 0202 	orr.w	r2, r2, #2
 8001dec:	615a      	str	r2, [r3, #20]

    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_READY;
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	2201      	movs	r2, #1
 8001df2:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Check DMA channel transfer mode */
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001dfa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d003      	beq.n	8001e0a <HAL_DMA_IRQHandler+0x29c>
    {
      /* Update the linked-list queue state */
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001e06:	2201      	movs	r2, #1
 8001e08:	731a      	strb	r2, [r3, #12]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

    /* Check transfer error callback */
    if (hdma->XferErrorCallback != NULL)
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d007      	beq.n	8001e2a <HAL_DMA_IRQHandler+0x2bc>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8001e1e:	6878      	ldr	r0, [r7, #4]
 8001e20:	4798      	blx	r3
 8001e22:	e002      	b.n	8001e2a <HAL_DMA_IRQHandler+0x2bc>
    return; /* the global interrupt flag for the current channel is down , nothing to do */
 8001e24:	bf00      	nop
 8001e26:	e000      	b.n	8001e2a <HAL_DMA_IRQHandler+0x2bc>
        return;
 8001e28:	bf00      	nop
    }
  }
}
 8001e2a:	3718      	adds	r7, #24
 8001e2c:	46bd      	mov	sp, r7
 8001e2e:	bd80      	pop	{r7, pc}

08001e30 <HAL_DMA_GetError>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval DMA Error Code.
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef const *const hdma)
{
 8001e30:	b480      	push	{r7}
 8001e32:	b083      	sub	sp, #12
 8001e34:	af00      	add	r7, sp, #0
 8001e36:	6078      	str	r0, [r7, #4]
  /* Return the DMA channel error code */
  return hdma->ErrorCode;
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	370c      	adds	r7, #12
 8001e40:	46bd      	mov	sp, r7
 8001e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e46:	4770      	bx	lr

08001e48 <HAL_DMA_ConfigChannelAttributes>:
  * @param  ChannelAttributes : Specifies the DMA channel secure/privilege attributes.
  *                             This parameter can be a one or a combination of @ref DMA_Channel_Attributes.
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_DMA_ConfigChannelAttributes(DMA_HandleTypeDef *const hdma, uint32_t ChannelAttributes)
{
 8001e48:	b480      	push	{r7}
 8001e4a:	b085      	sub	sp, #20
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
 8001e50:	6039      	str	r1, [r7, #0]
  DMA_TypeDef *p_dma_instance;
  uint32_t channel_idx;

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	2b00      	cmp	r3, #0
 8001e56:	d101      	bne.n	8001e5c <HAL_DMA_ConfigChannelAttributes+0x14>
  {
    return HAL_ERROR;
 8001e58:	2301      	movs	r3, #1
 8001e5a:	e02b      	b.n	8001eb4 <HAL_DMA_ConfigChannelAttributes+0x6c>

  /* Check the parameters */
  assert_param(IS_DMA_ATTRIBUTES(ChannelAttributes));

  /* Get DMA instance */
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	681b      	ldr	r3, [r3, #0]
 8001e60:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8001e64:	f023 030f 	bic.w	r3, r3, #15
 8001e68:	60fb      	str	r3, [r7, #12]

  /* Get channel index */
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e72:	3b50      	subs	r3, #80	@ 0x50
 8001e74:	09db      	lsrs	r3, r3, #7
 8001e76:	f003 031f 	and.w	r3, r3, #31
 8001e7a:	2201      	movs	r2, #1
 8001e7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001e80:	60bb      	str	r3, [r7, #8]

  /* Check DMA channel privilege attribute management */
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 8001e82:	683b      	ldr	r3, [r7, #0]
 8001e84:	f003 0310 	and.w	r3, r3, #16
 8001e88:	2b00      	cmp	r3, #0
 8001e8a:	d012      	beq.n	8001eb2 <HAL_DMA_ConfigChannelAttributes+0x6a>
  {
    /* Configure DMA channel privilege attribute */
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 8001e8c:	683b      	ldr	r3, [r7, #0]
 8001e8e:	f003 0311 	and.w	r3, r3, #17
 8001e92:	2b11      	cmp	r3, #17
 8001e94:	d106      	bne.n	8001ea4 <HAL_DMA_ConfigChannelAttributes+0x5c>
    {
      p_dma_instance->PRIVCFGR |= channel_idx;
 8001e96:	68fb      	ldr	r3, [r7, #12]
 8001e98:	685a      	ldr	r2, [r3, #4]
 8001e9a:	68bb      	ldr	r3, [r7, #8]
 8001e9c:	431a      	orrs	r2, r3
 8001e9e:	68fb      	ldr	r3, [r7, #12]
 8001ea0:	605a      	str	r2, [r3, #4]
 8001ea2:	e006      	b.n	8001eb2 <HAL_DMA_ConfigChannelAttributes+0x6a>
    }
    else
    {
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 8001ea4:	68fb      	ldr	r3, [r7, #12]
 8001ea6:	685a      	ldr	r2, [r3, #4]
 8001ea8:	68bb      	ldr	r3, [r7, #8]
 8001eaa:	43db      	mvns	r3, r3
 8001eac:	401a      	ands	r2, r3
 8001eae:	68fb      	ldr	r3, [r7, #12]
 8001eb0:	605a      	str	r2, [r3, #4]
      hdma->Instance->CTR1 &= (~DMA_CTR1_DSEC);
    }
  }
#endif /* (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */

  return HAL_OK;
 8001eb2:	2300      	movs	r3, #0
}
 8001eb4:	4618      	mov	r0, r3
 8001eb6:	3714      	adds	r7, #20
 8001eb8:	46bd      	mov	sp, r7
 8001eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ebe:	4770      	bx	lr

08001ec0 <DMA_SetConfig>:
  */
static void DMA_SetConfig(DMA_HandleTypeDef const *const hdma,
                          uint32_t SrcAddress,
                          uint32_t DstAddress,
                          uint32_t SrcDataSize)
{
 8001ec0:	b480      	push	{r7}
 8001ec2:	b085      	sub	sp, #20
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	60f8      	str	r0, [r7, #12]
 8001ec8:	60b9      	str	r1, [r7, #8]
 8001eca:	607a      	str	r2, [r7, #4]
 8001ecc:	603b      	str	r3, [r7, #0]
  /* Configure the DMA channel data size */
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8001ece:	68fb      	ldr	r3, [r7, #12]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ed4:	0c1b      	lsrs	r3, r3, #16
 8001ed6:	041b      	lsls	r3, r3, #16
 8001ed8:	683a      	ldr	r2, [r7, #0]
 8001eda:	b291      	uxth	r1, r2
 8001edc:	68fa      	ldr	r2, [r7, #12]
 8001ede:	6812      	ldr	r2, [r2, #0]
 8001ee0:	430b      	orrs	r3, r1
 8001ee2:	6493      	str	r3, [r2, #72]	@ 0x48

  /* Clear all interrupt flags */
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8001ee4:	68fb      	ldr	r3, [r7, #12]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 8001eec:	60da      	str	r2, [r3, #12]
                       DMA_FLAG_TO);

  /* Configure DMA channel source address */
  hdma->Instance->CSAR = SrcAddress;
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	68ba      	ldr	r2, [r7, #8]
 8001ef4:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Configure DMA channel destination address */
  hdma->Instance->CDAR = DstAddress;
 8001ef6:	68fb      	ldr	r3, [r7, #12]
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	687a      	ldr	r2, [r7, #4]
 8001efc:	651a      	str	r2, [r3, #80]	@ 0x50
}
 8001efe:	bf00      	nop
 8001f00:	3714      	adds	r7, #20
 8001f02:	46bd      	mov	sp, r7
 8001f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f08:	4770      	bx	lr
	...

08001f0c <DMA_Init>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval None.
  */
static void DMA_Init(DMA_HandleTypeDef const *const hdma)
{
 8001f0c:	b480      	push	{r7}
 8001f0e:	b085      	sub	sp, #20
 8001f10:	af00      	add	r7, sp, #0
 8001f12:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	6a1b      	ldr	r3, [r3, #32]
 8001f18:	60fb      	str	r3, [r7, #12]

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	695b      	ldr	r3, [r3, #20]
 8001f20:	f423 0143 	bic.w	r1, r3, #12779520	@ 0xc30000
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	68fa      	ldr	r2, [r7, #12]
 8001f2a:	430a      	orrs	r2, r1
 8001f2c:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	695a      	ldr	r2, [r3, #20]
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	69db      	ldr	r3, [r3, #28]
 8001f36:	431a      	orrs	r2, r3
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	691b      	ldr	r3, [r3, #16]
 8001f3c:	431a      	orrs	r2, r3
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	699b      	ldr	r3, [r3, #24]
 8001f42:	4313      	orrs	r3, r2
 8001f44:	60fb      	str	r3, [r7, #12]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	4a53      	ldr	r2, [pc, #332]	@ (8002098 <DMA_Init+0x18c>)
 8001f4c:	4293      	cmp	r3, r2
 8001f4e:	f000 80a0 	beq.w	8002092 <DMA_Init+0x186>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	4a51      	ldr	r2, [pc, #324]	@ (800209c <DMA_Init+0x190>)
 8001f58:	4293      	cmp	r3, r2
 8001f5a:	f000 809a 	beq.w	8002092 <DMA_Init+0x186>
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	4a4f      	ldr	r2, [pc, #316]	@ (80020a0 <DMA_Init+0x194>)
 8001f64:	4293      	cmp	r3, r2
 8001f66:	f000 8094 	beq.w	8002092 <DMA_Init+0x186>
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	4a4d      	ldr	r2, [pc, #308]	@ (80020a4 <DMA_Init+0x198>)
 8001f70:	4293      	cmp	r3, r2
 8001f72:	f000 808e 	beq.w	8002092 <DMA_Init+0x186>
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	4a4b      	ldr	r2, [pc, #300]	@ (80020a8 <DMA_Init+0x19c>)
 8001f7c:	4293      	cmp	r3, r2
 8001f7e:	f000 8088 	beq.w	8002092 <DMA_Init+0x186>
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	4a49      	ldr	r2, [pc, #292]	@ (80020ac <DMA_Init+0x1a0>)
 8001f88:	4293      	cmp	r3, r2
 8001f8a:	f000 8082 	beq.w	8002092 <DMA_Init+0x186>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4a47      	ldr	r2, [pc, #284]	@ (80020b0 <DMA_Init+0x1a4>)
 8001f94:	4293      	cmp	r3, r2
 8001f96:	d07c      	beq.n	8002092 <DMA_Init+0x186>
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	4a45      	ldr	r2, [pc, #276]	@ (80020b4 <DMA_Init+0x1a8>)
 8001f9e:	4293      	cmp	r3, r2
 8001fa0:	d077      	beq.n	8002092 <DMA_Init+0x186>
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	4a44      	ldr	r2, [pc, #272]	@ (80020b8 <DMA_Init+0x1ac>)
 8001fa8:	4293      	cmp	r3, r2
 8001faa:	d072      	beq.n	8002092 <DMA_Init+0x186>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	4a42      	ldr	r2, [pc, #264]	@ (80020bc <DMA_Init+0x1b0>)
 8001fb2:	4293      	cmp	r3, r2
 8001fb4:	d06d      	beq.n	8002092 <DMA_Init+0x186>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	4a41      	ldr	r2, [pc, #260]	@ (80020c0 <DMA_Init+0x1b4>)
 8001fbc:	4293      	cmp	r3, r2
 8001fbe:	d068      	beq.n	8002092 <DMA_Init+0x186>
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	4a3f      	ldr	r2, [pc, #252]	@ (80020c4 <DMA_Init+0x1b8>)
 8001fc6:	4293      	cmp	r3, r2
 8001fc8:	d063      	beq.n	8002092 <DMA_Init+0x186>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	4a3e      	ldr	r2, [pc, #248]	@ (80020c8 <DMA_Init+0x1bc>)
 8001fd0:	4293      	cmp	r3, r2
 8001fd2:	d05e      	beq.n	8002092 <DMA_Init+0x186>
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a3c      	ldr	r2, [pc, #240]	@ (80020cc <DMA_Init+0x1c0>)
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d059      	beq.n	8002092 <DMA_Init+0x186>
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	4a3b      	ldr	r2, [pc, #236]	@ (80020d0 <DMA_Init+0x1c4>)
 8001fe4:	4293      	cmp	r3, r2
 8001fe6:	d054      	beq.n	8002092 <DMA_Init+0x186>
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	4a39      	ldr	r2, [pc, #228]	@ (80020d4 <DMA_Init+0x1c8>)
 8001fee:	4293      	cmp	r3, r2
 8001ff0:	d04f      	beq.n	8002092 <DMA_Init+0x186>
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	4a38      	ldr	r2, [pc, #224]	@ (80020d8 <DMA_Init+0x1cc>)
 8001ff8:	4293      	cmp	r3, r2
 8001ffa:	d04a      	beq.n	8002092 <DMA_Init+0x186>
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4a36      	ldr	r2, [pc, #216]	@ (80020dc <DMA_Init+0x1d0>)
 8002002:	4293      	cmp	r3, r2
 8002004:	d045      	beq.n	8002092 <DMA_Init+0x186>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	4a35      	ldr	r2, [pc, #212]	@ (80020e0 <DMA_Init+0x1d4>)
 800200c:	4293      	cmp	r3, r2
 800200e:	d040      	beq.n	8002092 <DMA_Init+0x186>
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	4a33      	ldr	r2, [pc, #204]	@ (80020e4 <DMA_Init+0x1d8>)
 8002016:	4293      	cmp	r3, r2
 8002018:	d03b      	beq.n	8002092 <DMA_Init+0x186>
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	4a32      	ldr	r2, [pc, #200]	@ (80020e8 <DMA_Init+0x1dc>)
 8002020:	4293      	cmp	r3, r2
 8002022:	d036      	beq.n	8002092 <DMA_Init+0x186>
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	4a30      	ldr	r2, [pc, #192]	@ (80020ec <DMA_Init+0x1e0>)
 800202a:	4293      	cmp	r3, r2
 800202c:	d031      	beq.n	8002092 <DMA_Init+0x186>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	4a2f      	ldr	r2, [pc, #188]	@ (80020f0 <DMA_Init+0x1e4>)
 8002034:	4293      	cmp	r3, r2
 8002036:	d02c      	beq.n	8002092 <DMA_Init+0x186>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4a2d      	ldr	r2, [pc, #180]	@ (80020f4 <DMA_Init+0x1e8>)
 800203e:	4293      	cmp	r3, r2
 8002040:	d027      	beq.n	8002092 <DMA_Init+0x186>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	4a2c      	ldr	r2, [pc, #176]	@ (80020f8 <DMA_Init+0x1ec>)
 8002048:	4293      	cmp	r3, r2
 800204a:	d022      	beq.n	8002092 <DMA_Init+0x186>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	4a2a      	ldr	r2, [pc, #168]	@ (80020fc <DMA_Init+0x1f0>)
 8002052:	4293      	cmp	r3, r2
 8002054:	d01d      	beq.n	8002092 <DMA_Init+0x186>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	4a29      	ldr	r2, [pc, #164]	@ (8002100 <DMA_Init+0x1f4>)
 800205c:	4293      	cmp	r3, r2
 800205e:	d018      	beq.n	8002092 <DMA_Init+0x186>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4a27      	ldr	r2, [pc, #156]	@ (8002104 <DMA_Init+0x1f8>)
 8002066:	4293      	cmp	r3, r2
 8002068:	d013      	beq.n	8002092 <DMA_Init+0x186>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	4a26      	ldr	r2, [pc, #152]	@ (8002108 <DMA_Init+0x1fc>)
 8002070:	4293      	cmp	r3, r2
 8002072:	d00e      	beq.n	8002092 <DMA_Init+0x186>
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	4a24      	ldr	r2, [pc, #144]	@ (800210c <DMA_Init+0x200>)
 800207a:	4293      	cmp	r3, r2
 800207c:	d009      	beq.n	8002092 <DMA_Init+0x186>
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	4a23      	ldr	r2, [pc, #140]	@ (8002110 <DMA_Init+0x204>)
 8002084:	4293      	cmp	r3, r2
 8002086:	d004      	beq.n	8002092 <DMA_Init+0x186>
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	4a21      	ldr	r2, [pc, #132]	@ (8002114 <DMA_Init+0x208>)
 800208e:	4293      	cmp	r3, r2
 8002090:	d142      	bne.n	8002118 <DMA_Init+0x20c>
 8002092:	2301      	movs	r3, #1
 8002094:	e041      	b.n	800211a <DMA_Init+0x20e>
 8002096:	bf00      	nop
 8002098:	40020050 	.word	0x40020050
 800209c:	50020050 	.word	0x50020050
 80020a0:	400200d0 	.word	0x400200d0
 80020a4:	500200d0 	.word	0x500200d0
 80020a8:	40020150 	.word	0x40020150
 80020ac:	50020150 	.word	0x50020150
 80020b0:	400201d0 	.word	0x400201d0
 80020b4:	500201d0 	.word	0x500201d0
 80020b8:	40020250 	.word	0x40020250
 80020bc:	50020250 	.word	0x50020250
 80020c0:	400202d0 	.word	0x400202d0
 80020c4:	500202d0 	.word	0x500202d0
 80020c8:	40020350 	.word	0x40020350
 80020cc:	50020350 	.word	0x50020350
 80020d0:	400203d0 	.word	0x400203d0
 80020d4:	500203d0 	.word	0x500203d0
 80020d8:	40021050 	.word	0x40021050
 80020dc:	50021050 	.word	0x50021050
 80020e0:	400210d0 	.word	0x400210d0
 80020e4:	500210d0 	.word	0x500210d0
 80020e8:	40021150 	.word	0x40021150
 80020ec:	50021150 	.word	0x50021150
 80020f0:	400211d0 	.word	0x400211d0
 80020f4:	500211d0 	.word	0x500211d0
 80020f8:	40021250 	.word	0x40021250
 80020fc:	50021250 	.word	0x50021250
 8002100:	400212d0 	.word	0x400212d0
 8002104:	500212d0 	.word	0x500212d0
 8002108:	40021350 	.word	0x40021350
 800210c:	50021350 	.word	0x50021350
 8002110:	400213d0 	.word	0x400213d0
 8002114:	500213d0 	.word	0x500213d0
 8002118:	2300      	movs	r3, #0
 800211a:	2b00      	cmp	r3, #0
 800211c:	d012      	beq.n	8002144 <DMA_Init+0x238>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002126:	3b01      	subs	r3, #1
 8002128:	051b      	lsls	r3, r3, #20
 800212a:	f003 737c 	and.w	r3, r3, #66060288	@ 0x3f00000
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800212e:	431a      	orrs	r2, r3
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002134:	3b01      	subs	r3, #1
 8002136:	011b      	lsls	r3, r3, #4
 8002138:	f403 737c 	and.w	r3, r3, #1008	@ 0x3f0
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 800213c:	4313      	orrs	r3, r2
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800213e:	68fa      	ldr	r2, [r7, #12]
 8002140:	4313      	orrs	r3, r2
 8002142:	60fb      	str	r3, [r7, #12]
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
#if defined (DMA_CTR1_SSEC)
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800214a:	f003 2180 	and.w	r1, r3, #2147516416	@ 0x80008000
 800214e:	687b      	ldr	r3, [r7, #4]
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	68fa      	ldr	r2, [r7, #12]
 8002154:	430a      	orrs	r2, r1
 8002156:	641a      	str	r2, [r3, #64]	@ 0x40
#else
  WRITE_REG(hdma->Instance->CTR1, tmpreg);
#endif /* DMA_CTR1_SSEC */

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	689a      	ldr	r2, [r3, #8]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	685b      	ldr	r3, [r3, #4]
 8002160:	b2db      	uxtb	r3, r3
 8002162:	431a      	orrs	r2, r3
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002168:	4313      	orrs	r3, r2
 800216a:	60fb      	str	r3, [r7, #12]

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	68db      	ldr	r3, [r3, #12]
 8002170:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002174:	f040 80b0 	bne.w	80022d8 <DMA_Init+0x3cc>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	4a84      	ldr	r2, [pc, #528]	@ (8002390 <DMA_Init+0x484>)
 800217e:	4293      	cmp	r3, r2
 8002180:	f000 80a0 	beq.w	80022c4 <DMA_Init+0x3b8>
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	4a82      	ldr	r2, [pc, #520]	@ (8002394 <DMA_Init+0x488>)
 800218a:	4293      	cmp	r3, r2
 800218c:	f000 809a 	beq.w	80022c4 <DMA_Init+0x3b8>
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	4a80      	ldr	r2, [pc, #512]	@ (8002398 <DMA_Init+0x48c>)
 8002196:	4293      	cmp	r3, r2
 8002198:	f000 8094 	beq.w	80022c4 <DMA_Init+0x3b8>
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	4a7e      	ldr	r2, [pc, #504]	@ (800239c <DMA_Init+0x490>)
 80021a2:	4293      	cmp	r3, r2
 80021a4:	f000 808e 	beq.w	80022c4 <DMA_Init+0x3b8>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	4a7c      	ldr	r2, [pc, #496]	@ (80023a0 <DMA_Init+0x494>)
 80021ae:	4293      	cmp	r3, r2
 80021b0:	f000 8088 	beq.w	80022c4 <DMA_Init+0x3b8>
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	4a7a      	ldr	r2, [pc, #488]	@ (80023a4 <DMA_Init+0x498>)
 80021ba:	4293      	cmp	r3, r2
 80021bc:	f000 8082 	beq.w	80022c4 <DMA_Init+0x3b8>
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	4a78      	ldr	r2, [pc, #480]	@ (80023a8 <DMA_Init+0x49c>)
 80021c6:	4293      	cmp	r3, r2
 80021c8:	d07c      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	4a77      	ldr	r2, [pc, #476]	@ (80023ac <DMA_Init+0x4a0>)
 80021d0:	4293      	cmp	r3, r2
 80021d2:	d077      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	681b      	ldr	r3, [r3, #0]
 80021d8:	4a75      	ldr	r2, [pc, #468]	@ (80023b0 <DMA_Init+0x4a4>)
 80021da:	4293      	cmp	r3, r2
 80021dc:	d072      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	4a74      	ldr	r2, [pc, #464]	@ (80023b4 <DMA_Init+0x4a8>)
 80021e4:	4293      	cmp	r3, r2
 80021e6:	d06d      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	4a72      	ldr	r2, [pc, #456]	@ (80023b8 <DMA_Init+0x4ac>)
 80021ee:	4293      	cmp	r3, r2
 80021f0:	d068      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	4a71      	ldr	r2, [pc, #452]	@ (80023bc <DMA_Init+0x4b0>)
 80021f8:	4293      	cmp	r3, r2
 80021fa:	d063      	beq.n	80022c4 <DMA_Init+0x3b8>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4a6f      	ldr	r2, [pc, #444]	@ (80023c0 <DMA_Init+0x4b4>)
 8002202:	4293      	cmp	r3, r2
 8002204:	d05e      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	4a6e      	ldr	r2, [pc, #440]	@ (80023c4 <DMA_Init+0x4b8>)
 800220c:	4293      	cmp	r3, r2
 800220e:	d059      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	4a6c      	ldr	r2, [pc, #432]	@ (80023c8 <DMA_Init+0x4bc>)
 8002216:	4293      	cmp	r3, r2
 8002218:	d054      	beq.n	80022c4 <DMA_Init+0x3b8>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	4a6b      	ldr	r2, [pc, #428]	@ (80023cc <DMA_Init+0x4c0>)
 8002220:	4293      	cmp	r3, r2
 8002222:	d04f      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	4a69      	ldr	r2, [pc, #420]	@ (80023d0 <DMA_Init+0x4c4>)
 800222a:	4293      	cmp	r3, r2
 800222c:	d04a      	beq.n	80022c4 <DMA_Init+0x3b8>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4a68      	ldr	r2, [pc, #416]	@ (80023d4 <DMA_Init+0x4c8>)
 8002234:	4293      	cmp	r3, r2
 8002236:	d045      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4a66      	ldr	r2, [pc, #408]	@ (80023d8 <DMA_Init+0x4cc>)
 800223e:	4293      	cmp	r3, r2
 8002240:	d040      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	4a65      	ldr	r2, [pc, #404]	@ (80023dc <DMA_Init+0x4d0>)
 8002248:	4293      	cmp	r3, r2
 800224a:	d03b      	beq.n	80022c4 <DMA_Init+0x3b8>
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	4a63      	ldr	r2, [pc, #396]	@ (80023e0 <DMA_Init+0x4d4>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d036      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	4a62      	ldr	r2, [pc, #392]	@ (80023e4 <DMA_Init+0x4d8>)
 800225c:	4293      	cmp	r3, r2
 800225e:	d031      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4a60      	ldr	r2, [pc, #384]	@ (80023e8 <DMA_Init+0x4dc>)
 8002266:	4293      	cmp	r3, r2
 8002268:	d02c      	beq.n	80022c4 <DMA_Init+0x3b8>
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4a5f      	ldr	r2, [pc, #380]	@ (80023ec <DMA_Init+0x4e0>)
 8002270:	4293      	cmp	r3, r2
 8002272:	d027      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a5d      	ldr	r2, [pc, #372]	@ (80023f0 <DMA_Init+0x4e4>)
 800227a:	4293      	cmp	r3, r2
 800227c:	d022      	beq.n	80022c4 <DMA_Init+0x3b8>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4a5c      	ldr	r2, [pc, #368]	@ (80023f4 <DMA_Init+0x4e8>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d01d      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4a5a      	ldr	r2, [pc, #360]	@ (80023f8 <DMA_Init+0x4ec>)
 800228e:	4293      	cmp	r3, r2
 8002290:	d018      	beq.n	80022c4 <DMA_Init+0x3b8>
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	4a59      	ldr	r2, [pc, #356]	@ (80023fc <DMA_Init+0x4f0>)
 8002298:	4293      	cmp	r3, r2
 800229a:	d013      	beq.n	80022c4 <DMA_Init+0x3b8>
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	4a57      	ldr	r2, [pc, #348]	@ (8002400 <DMA_Init+0x4f4>)
 80022a2:	4293      	cmp	r3, r2
 80022a4:	d00e      	beq.n	80022c4 <DMA_Init+0x3b8>
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4a56      	ldr	r2, [pc, #344]	@ (8002404 <DMA_Init+0x4f8>)
 80022ac:	4293      	cmp	r3, r2
 80022ae:	d009      	beq.n	80022c4 <DMA_Init+0x3b8>
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	4a54      	ldr	r2, [pc, #336]	@ (8002408 <DMA_Init+0x4fc>)
 80022b6:	4293      	cmp	r3, r2
 80022b8:	d004      	beq.n	80022c4 <DMA_Init+0x3b8>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	4a53      	ldr	r2, [pc, #332]	@ (800240c <DMA_Init+0x500>)
 80022c0:	4293      	cmp	r3, r2
 80022c2:	d101      	bne.n	80022c8 <DMA_Init+0x3bc>
 80022c4:	2301      	movs	r3, #1
 80022c6:	e000      	b.n	80022ca <DMA_Init+0x3be>
 80022c8:	2300      	movs	r3, #0
 80022ca:	2b00      	cmp	r3, #0
 80022cc:	d00d      	beq.n	80022ea <DMA_Init+0x3de>
    {
      tmpreg |= DMA_CTR2_DREQ;
 80022ce:	68fb      	ldr	r3, [r7, #12]
 80022d0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80022d4:	60fb      	str	r3, [r7, #12]
 80022d6:	e008      	b.n	80022ea <DMA_Init+0x3de>
    }
  }
  /* Memory to Memory Transfer */
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	68db      	ldr	r3, [r3, #12]
 80022dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80022e0:	d103      	bne.n	80022ea <DMA_Init+0x3de>
  {
    tmpreg |= DMA_CTR2_SWREQ;
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80022e8:	60fb      	str	r3, [r7, #12]
  {
    /* Nothing to do */
  }

  /* Set DMA channel operation mode */
  tmpreg |= hdma->Init.Mode;
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80022ee:	68fa      	ldr	r2, [r7, #12]
 80022f0:	4313      	orrs	r3, r2
 80022f2:	60fb      	str	r3, [r7, #12]

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80022fa:	4b45      	ldr	r3, [pc, #276]	@ (8002410 <DMA_Init+0x504>)
 80022fc:	4013      	ands	r3, r2
 80022fe:	687a      	ldr	r2, [r7, #4]
 8002300:	6812      	ldr	r2, [r2, #0]
 8002302:	68f9      	ldr	r1, [r7, #12]
 8002304:	430b      	orrs	r3, r1
 8002306:	6453      	str	r3, [r2, #68]	@ 0x44
                                    DMA_CTR2_PFREQ | DMA_CTR2_BREQ  | DMA_CTR2_DREQ    | DMA_CTR2_SWREQ   |
                                    DMA_CTR2_REQSEL), tmpreg);


  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	2200      	movs	r2, #0
 800230e:	649a      	str	r2, [r3, #72]	@ 0x48

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	4a2a      	ldr	r2, [pc, #168]	@ (80023c0 <DMA_Init+0x4b4>)
 8002316:	4293      	cmp	r3, r2
 8002318:	d022      	beq.n	8002360 <DMA_Init+0x454>
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	4a29      	ldr	r2, [pc, #164]	@ (80023c4 <DMA_Init+0x4b8>)
 8002320:	4293      	cmp	r3, r2
 8002322:	d01d      	beq.n	8002360 <DMA_Init+0x454>
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	4a27      	ldr	r2, [pc, #156]	@ (80023c8 <DMA_Init+0x4bc>)
 800232a:	4293      	cmp	r3, r2
 800232c:	d018      	beq.n	8002360 <DMA_Init+0x454>
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	681b      	ldr	r3, [r3, #0]
 8002332:	4a26      	ldr	r2, [pc, #152]	@ (80023cc <DMA_Init+0x4c0>)
 8002334:	4293      	cmp	r3, r2
 8002336:	d013      	beq.n	8002360 <DMA_Init+0x454>
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	4a30      	ldr	r2, [pc, #192]	@ (8002400 <DMA_Init+0x4f4>)
 800233e:	4293      	cmp	r3, r2
 8002340:	d00e      	beq.n	8002360 <DMA_Init+0x454>
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	4a2f      	ldr	r2, [pc, #188]	@ (8002404 <DMA_Init+0x4f8>)
 8002348:	4293      	cmp	r3, r2
 800234a:	d009      	beq.n	8002360 <DMA_Init+0x454>
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	4a2d      	ldr	r2, [pc, #180]	@ (8002408 <DMA_Init+0x4fc>)
 8002352:	4293      	cmp	r3, r2
 8002354:	d004      	beq.n	8002360 <DMA_Init+0x454>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	4a2c      	ldr	r2, [pc, #176]	@ (800240c <DMA_Init+0x500>)
 800235c:	4293      	cmp	r3, r2
 800235e:	d101      	bne.n	8002364 <DMA_Init+0x458>
 8002360:	2301      	movs	r3, #1
 8002362:	e000      	b.n	8002366 <DMA_Init+0x45a>
 8002364:	2300      	movs	r3, #0
 8002366:	2b00      	cmp	r3, #0
 8002368:	d007      	beq.n	800237a <DMA_Init+0x46e>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	2200      	movs	r2, #0
 8002370:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	2200      	movs	r2, #0
 8002378:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	2200      	movs	r2, #0
 8002380:	67da      	str	r2, [r3, #124]	@ 0x7c
}
 8002382:	bf00      	nop
 8002384:	3714      	adds	r7, #20
 8002386:	46bd      	mov	sp, r7
 8002388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238c:	4770      	bx	lr
 800238e:	bf00      	nop
 8002390:	40020050 	.word	0x40020050
 8002394:	50020050 	.word	0x50020050
 8002398:	400200d0 	.word	0x400200d0
 800239c:	500200d0 	.word	0x500200d0
 80023a0:	40020150 	.word	0x40020150
 80023a4:	50020150 	.word	0x50020150
 80023a8:	400201d0 	.word	0x400201d0
 80023ac:	500201d0 	.word	0x500201d0
 80023b0:	40020250 	.word	0x40020250
 80023b4:	50020250 	.word	0x50020250
 80023b8:	400202d0 	.word	0x400202d0
 80023bc:	500202d0 	.word	0x500202d0
 80023c0:	40020350 	.word	0x40020350
 80023c4:	50020350 	.word	0x50020350
 80023c8:	400203d0 	.word	0x400203d0
 80023cc:	500203d0 	.word	0x500203d0
 80023d0:	40021050 	.word	0x40021050
 80023d4:	50021050 	.word	0x50021050
 80023d8:	400210d0 	.word	0x400210d0
 80023dc:	500210d0 	.word	0x500210d0
 80023e0:	40021150 	.word	0x40021150
 80023e4:	50021150 	.word	0x50021150
 80023e8:	400211d0 	.word	0x400211d0
 80023ec:	500211d0 	.word	0x500211d0
 80023f0:	40021250 	.word	0x40021250
 80023f4:	50021250 	.word	0x50021250
 80023f8:	400212d0 	.word	0x400212d0
 80023fc:	500212d0 	.word	0x500212d0
 8002400:	40021350 	.word	0x40021350
 8002404:	50021350 	.word	0x50021350
 8002408:	400213d0 	.word	0x400213d0
 800240c:	500213d0 	.word	0x500213d0
 8002410:	3cc02100 	.word	0x3cc02100

08002414 <HAL_DMAEx_List_Start_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMAEx_List_Start_IT(DMA_HandleTypeDef *const hdma)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	b086      	sub	sp, #24
 8002418:	af00      	add	r7, sp, #0
 800241a:	6078      	str	r0, [r7, #4]
  HAL_DMA_StateTypeDef dma_state;
  uint32_t ccr_value;
  uint32_t cllr_mask;

  /* Check the DMA peripheral handle and the linked-list queue parameters */
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	2b00      	cmp	r3, #0
 8002420:	d003      	beq.n	800242a <HAL_DMAEx_List_Start_IT+0x16>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002426:	2b00      	cmp	r3, #0
 8002428:	d101      	bne.n	800242e <HAL_DMAEx_List_Start_IT+0x1a>
  {
    return HAL_ERROR;
 800242a:	2301      	movs	r3, #1
 800242c:	e088      	b.n	8002540 <HAL_DMAEx_List_Start_IT+0x12c>
  }

  /* Check the DMA Mode is not DMA_NORMAL */
  if (hdma->Mode == DMA_NORMAL)
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002432:	2b00      	cmp	r3, #0
 8002434:	d101      	bne.n	800243a <HAL_DMAEx_List_Start_IT+0x26>
  {
    return HAL_ERROR;
 8002436:	2301      	movs	r3, #1
 8002438:	e082      	b.n	8002540 <HAL_DMAEx_List_Start_IT+0x12c>
  }

  /* Check DMA channel state */
  dma_state = hdma->State;
 800243a:	687b      	ldr	r3, [r7, #4]
 800243c:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8002440:	75fb      	strb	r3, [r7, #23]
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	681b      	ldr	r3, [r3, #0]
 8002446:	695b      	ldr	r3, [r3, #20]
 8002448:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800244c:	613b      	str	r3, [r7, #16]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 800244e:	7dfb      	ldrb	r3, [r7, #23]
 8002450:	2b01      	cmp	r3, #1
 8002452:	d005      	beq.n	8002460 <HAL_DMAEx_List_Start_IT+0x4c>
 8002454:	7dfb      	ldrb	r3, [r7, #23]
 8002456:	2b02      	cmp	r3, #2
 8002458:	d16a      	bne.n	8002530 <HAL_DMAEx_List_Start_IT+0x11c>
 800245a:	693b      	ldr	r3, [r7, #16]
 800245c:	2b00      	cmp	r3, #0
 800245e:	d067      	beq.n	8002530 <HAL_DMAEx_List_Start_IT+0x11c>
  {
    /* Check DMA channel state is ready */
    if (hdma->State == HAL_DMA_STATE_READY)
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8002466:	b2db      	uxtb	r3, r3
 8002468:	2b01      	cmp	r3, #1
 800246a:	d157      	bne.n	800251c <HAL_DMAEx_List_Start_IT+0x108>
    {
      /* Process locked */
      __HAL_LOCK(hdma);
 800246c:	687b      	ldr	r3, [r7, #4]
 800246e:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8002472:	2b01      	cmp	r3, #1
 8002474:	d101      	bne.n	800247a <HAL_DMAEx_List_Start_IT+0x66>
 8002476:	2302      	movs	r3, #2
 8002478:	e062      	b.n	8002540 <HAL_DMAEx_List_Start_IT+0x12c>
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	2201      	movs	r2, #1
 800247e:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

      /* Update the DMA channel and the queue states */
      hdma->State                  = HAL_DMA_STATE_BUSY;
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	2202      	movs	r2, #2
 8002486:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800248e:	2202      	movs	r2, #2
 8002490:	731a      	strb	r2, [r3, #12]

      /* Update the DMA channel and the queue error codes */
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	2200      	movs	r2, #0
 8002496:	659a      	str	r2, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 8002498:	687b      	ldr	r3, [r7, #4]
 800249a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800249c:	2200      	movs	r2, #0
 800249e:	611a      	str	r2, [r3, #16]

      /* Enable common interrupts: Transfer Complete and Transfer Errors ITs */
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	695a      	ldr	r2, [r3, #20]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f442 42ba 	orr.w	r2, r2, #23808	@ 0x5d00
 80024ae:	615a      	str	r2, [r3, #20]

      /* Check half transfer complete callback */
      if (hdma->XferHalfCpltCallback != NULL)
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d007      	beq.n	80024c8 <HAL_DMAEx_List_Start_IT+0xb4>
      {
        /* If half transfer complete callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	681b      	ldr	r3, [r3, #0]
 80024bc:	695a      	ldr	r2, [r3, #20]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80024c6:	615a      	str	r2, [r3, #20]
      }

      /* Check suspend callback */
      if (hdma->XferSuspendCallback != NULL)
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d007      	beq.n	80024e0 <HAL_DMAEx_List_Start_IT+0xcc>
      {
        /* If transfer suspend callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	695a      	ldr	r2, [r3, #20]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80024de:	615a      	str	r2, [r3, #20]
      }

      /* Get CLLR register mask and offset */
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	f107 010c 	add.w	r1, r7, #12
 80024ea:	2200      	movs	r2, #0
 80024ec:	4618      	mov	r0, r3
 80024ee:	f000 f82b 	bl	8002548 <DMA_List_GetCLLRNodeInfo>

      /* Update DMA registers for linked-list transfer */
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	4619      	mov	r1, r3
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681a      	ldr	r2, [r3, #0]
 80024fe:	0c0b      	lsrs	r3, r1, #16
 8002500:	041b      	lsls	r3, r3, #16
 8002502:	6013      	str	r3, [r2, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	461a      	mov	r2, r3
 800250c:	f64f 73fc 	movw	r3, #65532	@ 0xfffc
 8002510:	4013      	ands	r3, r2
 8002512:	68f9      	ldr	r1, [r7, #12]
 8002514:	687a      	ldr	r2, [r7, #4]
 8002516:	6812      	ldr	r2, [r2, #0]
 8002518:	430b      	orrs	r3, r1
 800251a:	67d3      	str	r3, [r2, #124]	@ 0x7c
    }

    /* Enable DMA channel */
    __HAL_DMA_ENABLE(hdma);
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681b      	ldr	r3, [r3, #0]
 8002520:	695a      	ldr	r2, [r3, #20]
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	f042 0201 	orr.w	r2, r2, #1
 800252a:	615a      	str	r2, [r3, #20]
    __HAL_UNLOCK(hdma);

    return HAL_ERROR;
  }

  return HAL_OK;
 800252c:	2300      	movs	r3, #0
 800252e:	e007      	b.n	8002540 <HAL_DMAEx_List_Start_IT+0x12c>
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	2240      	movs	r2, #64	@ 0x40
 8002534:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	2200      	movs	r2, #0
 800253a:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 800253e:	2301      	movs	r3, #1
}
 8002540:	4618      	mov	r0, r3
 8002542:	3718      	adds	r7, #24
 8002544:	46bd      	mov	sp, r7
 8002546:	bd80      	pop	{r7, pc}

08002548 <DMA_List_GetCLLRNodeInfo>:
  * @retval None.
  */
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
 8002548:	b480      	push	{r7}
 800254a:	b085      	sub	sp, #20
 800254c:	af00      	add	r7, sp, #0
 800254e:	60f8      	str	r0, [r7, #12]
 8002550:	60b9      	str	r1, [r7, #8]
 8002552:	607a      	str	r2, [r7, #4]
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	6a1b      	ldr	r3, [r3, #32]
 8002558:	f003 0302 	and.w	r3, r3, #2
 800255c:	2b00      	cmp	r3, #0
 800255e:	d00c      	beq.n	800257a <DMA_List_GetCLLRNodeInfo+0x32>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 8002560:	68bb      	ldr	r3, [r7, #8]
 8002562:	2b00      	cmp	r3, #0
 8002564:	d002      	beq.n	800256c <DMA_List_GetCLLRNodeInfo+0x24>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 8002566:	68bb      	ldr	r3, [r7, #8]
 8002568:	4a0d      	ldr	r2, [pc, #52]	@ (80025a0 <DMA_List_GetCLLRNodeInfo+0x58>)
 800256a:	601a      	str	r2, [r3, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	2b00      	cmp	r3, #0
 8002570:	d00f      	beq.n	8002592 <DMA_List_GetCLLRNodeInfo+0x4a>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2207      	movs	r2, #7
 8002576:	601a      	str	r2, [r3, #0]
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
    }
  }
}
 8002578:	e00b      	b.n	8002592 <DMA_List_GetCLLRNodeInfo+0x4a>
    if (cllr_mask != NULL)
 800257a:	68bb      	ldr	r3, [r7, #8]
 800257c:	2b00      	cmp	r3, #0
 800257e:	d002      	beq.n	8002586 <DMA_List_GetCLLRNodeInfo+0x3e>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 8002580:	68bb      	ldr	r3, [r7, #8]
 8002582:	4a08      	ldr	r2, [pc, #32]	@ (80025a4 <DMA_List_GetCLLRNodeInfo+0x5c>)
 8002584:	601a      	str	r2, [r3, #0]
    if (cllr_offset != NULL)
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	2b00      	cmp	r3, #0
 800258a:	d002      	beq.n	8002592 <DMA_List_GetCLLRNodeInfo+0x4a>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	2205      	movs	r2, #5
 8002590:	601a      	str	r2, [r3, #0]
}
 8002592:	bf00      	nop
 8002594:	3714      	adds	r7, #20
 8002596:	46bd      	mov	sp, r7
 8002598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800259c:	4770      	bx	lr
 800259e:	bf00      	nop
 80025a0:	fe010000 	.word	0xfe010000
 80025a4:	f8010000 	.word	0xf8010000

080025a8 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 80025a8:	b480      	push	{r7}
 80025aa:	b087      	sub	sp, #28
 80025ac:	af00      	add	r7, sp, #0
 80025ae:	6078      	str	r0, [r7, #4]
 80025b0:	6039      	str	r1, [r7, #0]
  uint32_t tmp;
  uint32_t iocurrent;
  uint32_t position = 0U;
 80025b2:	2300      	movs	r3, #0
 80025b4:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_PIN(pGPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(pGPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

  /* Configure the port pins */
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80025b6:	e142      	b.n	800283e <HAL_GPIO_Init+0x296>
  {
    /* Get current io position */
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 80025b8:	683b      	ldr	r3, [r7, #0]
 80025ba:	681a      	ldr	r2, [r3, #0]
 80025bc:	2101      	movs	r1, #1
 80025be:	693b      	ldr	r3, [r7, #16]
 80025c0:	fa01 f303 	lsl.w	r3, r1, r3
 80025c4:	4013      	ands	r3, r2
 80025c6:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0U)
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	f000 8134 	beq.w	8002838 <HAL_GPIO_Init+0x290>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80025d0:	683b      	ldr	r3, [r7, #0]
 80025d2:	685b      	ldr	r3, [r3, #4]
 80025d4:	2b02      	cmp	r3, #2
 80025d6:	d003      	beq.n	80025e0 <HAL_GPIO_Init+0x38>
 80025d8:	683b      	ldr	r3, [r7, #0]
 80025da:	685b      	ldr	r3, [r3, #4]
 80025dc:	2b12      	cmp	r3, #18
 80025de:	d125      	bne.n	800262c <HAL_GPIO_Init+0x84>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(pGPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        tmp = GPIOx->AFR[position >> 3U];
 80025e0:	693b      	ldr	r3, [r7, #16]
 80025e2:	08da      	lsrs	r2, r3, #3
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	3208      	adds	r2, #8
 80025e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80025ec:	617b      	str	r3, [r7, #20]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 80025ee:	693b      	ldr	r3, [r7, #16]
 80025f0:	f003 0307 	and.w	r3, r3, #7
 80025f4:	009b      	lsls	r3, r3, #2
 80025f6:	220f      	movs	r2, #15
 80025f8:	fa02 f303 	lsl.w	r3, r2, r3
 80025fc:	43db      	mvns	r3, r3
 80025fe:	697a      	ldr	r2, [r7, #20]
 8002600:	4013      	ands	r3, r2
 8002602:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8002604:	683b      	ldr	r3, [r7, #0]
 8002606:	691b      	ldr	r3, [r3, #16]
 8002608:	f003 020f 	and.w	r2, r3, #15
 800260c:	693b      	ldr	r3, [r7, #16]
 800260e:	f003 0307 	and.w	r3, r3, #7
 8002612:	009b      	lsls	r3, r3, #2
 8002614:	fa02 f303 	lsl.w	r3, r2, r3
 8002618:	697a      	ldr	r2, [r7, #20]
 800261a:	4313      	orrs	r3, r2
 800261c:	617b      	str	r3, [r7, #20]
        GPIOx->AFR[position >> 3U] = tmp;
 800261e:	693b      	ldr	r3, [r7, #16]
 8002620:	08da      	lsrs	r2, r3, #3
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	3208      	adds	r2, #8
 8002626:	6979      	ldr	r1, [r7, #20]
 8002628:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      tmp = GPIOx->MODER;
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	617b      	str	r3, [r7, #20]
      tmp &= ~(GPIO_MODER_MODE0 << (position * GPIO_MODER_MODE1_Pos));
 8002632:	693b      	ldr	r3, [r7, #16]
 8002634:	005b      	lsls	r3, r3, #1
 8002636:	2203      	movs	r2, #3
 8002638:	fa02 f303 	lsl.w	r3, r2, r3
 800263c:	43db      	mvns	r3, r3
 800263e:	697a      	ldr	r2, [r7, #20]
 8002640:	4013      	ands	r3, r2
 8002642:	617b      	str	r3, [r7, #20]
      tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (position * GPIO_MODER_MODE1_Pos));
 8002644:	683b      	ldr	r3, [r7, #0]
 8002646:	685b      	ldr	r3, [r3, #4]
 8002648:	f003 0203 	and.w	r2, r3, #3
 800264c:	693b      	ldr	r3, [r7, #16]
 800264e:	005b      	lsls	r3, r3, #1
 8002650:	fa02 f303 	lsl.w	r3, r2, r3
 8002654:	697a      	ldr	r2, [r7, #20]
 8002656:	4313      	orrs	r3, r2
 8002658:	617b      	str	r3, [r7, #20]
      GPIOx->MODER = tmp;
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	697a      	ldr	r2, [r7, #20]
 800265e:	601a      	str	r2, [r3, #0]

      /* In case of Output or Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002660:	683b      	ldr	r3, [r7, #0]
 8002662:	685b      	ldr	r3, [r3, #4]
 8002664:	2b01      	cmp	r3, #1
 8002666:	d00b      	beq.n	8002680 <HAL_GPIO_Init+0xd8>
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	685b      	ldr	r3, [r3, #4]
 800266c:	2b02      	cmp	r3, #2
 800266e:	d007      	beq.n	8002680 <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002670:	683b      	ldr	r3, [r7, #0]
 8002672:	685b      	ldr	r3, [r3, #4]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002674:	2b11      	cmp	r3, #17
 8002676:	d003      	beq.n	8002680 <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002678:	683b      	ldr	r3, [r7, #0]
 800267a:	685b      	ldr	r3, [r3, #4]
 800267c:	2b12      	cmp	r3, #18
 800267e:	d130      	bne.n	80026e2 <HAL_GPIO_Init+0x13a>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(pGPIO_Init->Speed));

        /* Configure the IO Speed */
        tmp = GPIOx->OSPEEDR;
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	689b      	ldr	r3, [r3, #8]
 8002684:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 8002686:	693b      	ldr	r3, [r7, #16]
 8002688:	005b      	lsls	r3, r3, #1
 800268a:	2203      	movs	r2, #3
 800268c:	fa02 f303 	lsl.w	r3, r2, r3
 8002690:	43db      	mvns	r3, r3
 8002692:	697a      	ldr	r2, [r7, #20]
 8002694:	4013      	ands	r3, r2
 8002696:	617b      	str	r3, [r7, #20]
        tmp |= (pGPIO_Init->Speed << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 8002698:	683b      	ldr	r3, [r7, #0]
 800269a:	68da      	ldr	r2, [r3, #12]
 800269c:	693b      	ldr	r3, [r7, #16]
 800269e:	005b      	lsls	r3, r3, #1
 80026a0:	fa02 f303 	lsl.w	r3, r2, r3
 80026a4:	697a      	ldr	r2, [r7, #20]
 80026a6:	4313      	orrs	r3, r2
 80026a8:	617b      	str	r3, [r7, #20]
        GPIOx->OSPEEDR = tmp;
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	697a      	ldr	r2, [r7, #20]
 80026ae:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        tmp = GPIOx->OTYPER;
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	685b      	ldr	r3, [r3, #4]
 80026b4:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OTYPER_OT0 << position) ;
 80026b6:	2201      	movs	r2, #1
 80026b8:	693b      	ldr	r3, [r7, #16]
 80026ba:	fa02 f303 	lsl.w	r3, r2, r3
 80026be:	43db      	mvns	r3, r3
 80026c0:	697a      	ldr	r2, [r7, #20]
 80026c2:	4013      	ands	r3, r2
 80026c4:	617b      	str	r3, [r7, #20]
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80026c6:	683b      	ldr	r3, [r7, #0]
 80026c8:	685b      	ldr	r3, [r3, #4]
 80026ca:	091b      	lsrs	r3, r3, #4
 80026cc:	f003 0201 	and.w	r2, r3, #1
 80026d0:	693b      	ldr	r3, [r7, #16]
 80026d2:	fa02 f303 	lsl.w	r3, r2, r3
 80026d6:	697a      	ldr	r2, [r7, #20]
 80026d8:	4313      	orrs	r3, r2
 80026da:	617b      	str	r3, [r7, #20]
        GPIOx->OTYPER = tmp;
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	697a      	ldr	r2, [r7, #20]
 80026e0:	605a      	str	r2, [r3, #4]
      }

      if (((pGPIO_Init->Mode & GPIO_MODE) != GPIO_MODE_ANALOG) ||
 80026e2:	683b      	ldr	r3, [r7, #0]
 80026e4:	685b      	ldr	r3, [r3, #4]
 80026e6:	f003 0303 	and.w	r3, r3, #3
 80026ea:	2b03      	cmp	r3, #3
 80026ec:	d109      	bne.n	8002702 <HAL_GPIO_Init+0x15a>
          (((pGPIO_Init->Mode & GPIO_MODE) == GPIO_MODE_ANALOG) && (pGPIO_Init->Pull != GPIO_PULLUP)))
 80026ee:	683b      	ldr	r3, [r7, #0]
 80026f0:	685b      	ldr	r3, [r3, #4]
 80026f2:	f003 0303 	and.w	r3, r3, #3
      if (((pGPIO_Init->Mode & GPIO_MODE) != GPIO_MODE_ANALOG) ||
 80026f6:	2b03      	cmp	r3, #3
 80026f8:	d11b      	bne.n	8002732 <HAL_GPIO_Init+0x18a>
          (((pGPIO_Init->Mode & GPIO_MODE) == GPIO_MODE_ANALOG) && (pGPIO_Init->Pull != GPIO_PULLUP)))
 80026fa:	683b      	ldr	r3, [r7, #0]
 80026fc:	689b      	ldr	r3, [r3, #8]
 80026fe:	2b01      	cmp	r3, #1
 8002700:	d017      	beq.n	8002732 <HAL_GPIO_Init+0x18a>
      {
        /* Check the Pull parameters */
        assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        tmp = GPIOx->PUPDR;
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	68db      	ldr	r3, [r3, #12]
 8002706:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (position * GPIO_PUPDR_PUPD1_Pos));
 8002708:	693b      	ldr	r3, [r7, #16]
 800270a:	005b      	lsls	r3, r3, #1
 800270c:	2203      	movs	r2, #3
 800270e:	fa02 f303 	lsl.w	r3, r2, r3
 8002712:	43db      	mvns	r3, r3
 8002714:	697a      	ldr	r2, [r7, #20]
 8002716:	4013      	ands	r3, r2
 8002718:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Pull) << (position * GPIO_PUPDR_PUPD1_Pos));
 800271a:	683b      	ldr	r3, [r7, #0]
 800271c:	689a      	ldr	r2, [r3, #8]
 800271e:	693b      	ldr	r3, [r7, #16]
 8002720:	005b      	lsls	r3, r3, #1
 8002722:	fa02 f303 	lsl.w	r3, r2, r3
 8002726:	697a      	ldr	r2, [r7, #20]
 8002728:	4313      	orrs	r3, r2
 800272a:	617b      	str	r3, [r7, #20]
        GPIOx->PUPDR = tmp;
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	697a      	ldr	r2, [r7, #20]
 8002730:	60da      	str	r2, [r3, #12]
      }

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8002732:	683b      	ldr	r3, [r7, #0]
 8002734:	685b      	ldr	r3, [r3, #4]
 8002736:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800273a:	2b00      	cmp	r3, #0
 800273c:	d07c      	beq.n	8002838 <HAL_GPIO_Init+0x290>
      {
        tmp = EXTI->EXTICR[position >> 2U];
 800273e:	4a47      	ldr	r2, [pc, #284]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 8002740:	693b      	ldr	r3, [r7, #16]
 8002742:	089b      	lsrs	r3, r3, #2
 8002744:	3318      	adds	r3, #24
 8002746:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800274a:	617b      	str	r3, [r7, #20]
        tmp &= ~((0x0FUL) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 800274c:	693b      	ldr	r3, [r7, #16]
 800274e:	f003 0303 	and.w	r3, r3, #3
 8002752:	00db      	lsls	r3, r3, #3
 8002754:	220f      	movs	r2, #15
 8002756:	fa02 f303 	lsl.w	r3, r2, r3
 800275a:	43db      	mvns	r3, r3
 800275c:	697a      	ldr	r2, [r7, #20]
 800275e:	4013      	ands	r3, r2
 8002760:	617b      	str	r3, [r7, #20]
        tmp |= (GPIO_GET_INDEX(GPIOx) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	0a9a      	lsrs	r2, r3, #10
 8002766:	4b3e      	ldr	r3, [pc, #248]	@ (8002860 <HAL_GPIO_Init+0x2b8>)
 8002768:	4013      	ands	r3, r2
 800276a:	693a      	ldr	r2, [r7, #16]
 800276c:	f002 0203 	and.w	r2, r2, #3
 8002770:	00d2      	lsls	r2, r2, #3
 8002772:	4093      	lsls	r3, r2
 8002774:	697a      	ldr	r2, [r7, #20]
 8002776:	4313      	orrs	r3, r2
 8002778:	617b      	str	r3, [r7, #20]
        EXTI->EXTICR[position >> 2U] = tmp;
 800277a:	4938      	ldr	r1, [pc, #224]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 800277c:	693b      	ldr	r3, [r7, #16]
 800277e:	089b      	lsrs	r3, r3, #2
 8002780:	3318      	adds	r3, #24
 8002782:	697a      	ldr	r2, [r7, #20]
 8002784:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 8002788:	4b34      	ldr	r3, [pc, #208]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	43db      	mvns	r3, r3
 8002792:	697a      	ldr	r2, [r7, #20]
 8002794:	4013      	ands	r3, r2
 8002796:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8002798:	683b      	ldr	r3, [r7, #0]
 800279a:	685b      	ldr	r3, [r3, #4]
 800279c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80027a0:	2b00      	cmp	r3, #0
 80027a2:	d003      	beq.n	80027ac <HAL_GPIO_Init+0x204>
        {
          tmp |= iocurrent;
 80027a4:	697a      	ldr	r2, [r7, #20]
 80027a6:	68fb      	ldr	r3, [r7, #12]
 80027a8:	4313      	orrs	r3, r2
 80027aa:	617b      	str	r3, [r7, #20]
        }
        EXTI->RTSR1 = tmp;
 80027ac:	4a2b      	ldr	r2, [pc, #172]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 80027ae:	697b      	ldr	r3, [r7, #20]
 80027b0:	6013      	str	r3, [r2, #0]

        tmp = EXTI->FTSR1;
 80027b2:	4b2a      	ldr	r3, [pc, #168]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 80027b4:	685b      	ldr	r3, [r3, #4]
 80027b6:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 80027b8:	68fb      	ldr	r3, [r7, #12]
 80027ba:	43db      	mvns	r3, r3
 80027bc:	697a      	ldr	r2, [r7, #20]
 80027be:	4013      	ands	r3, r2
 80027c0:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80027c2:	683b      	ldr	r3, [r7, #0]
 80027c4:	685b      	ldr	r3, [r3, #4]
 80027c6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	d003      	beq.n	80027d6 <HAL_GPIO_Init+0x22e>
        {
          tmp |= iocurrent;
 80027ce:	697a      	ldr	r2, [r7, #20]
 80027d0:	68fb      	ldr	r3, [r7, #12]
 80027d2:	4313      	orrs	r3, r2
 80027d4:	617b      	str	r3, [r7, #20]
        }
        EXTI->FTSR1 = tmp;
 80027d6:	4a21      	ldr	r2, [pc, #132]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 80027d8:	697b      	ldr	r3, [r7, #20]
 80027da:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        tmp = EXTI->EMR1;
 80027dc:	4b1f      	ldr	r3, [pc, #124]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 80027de:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80027e2:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	43db      	mvns	r3, r3
 80027e8:	697a      	ldr	r2, [r7, #20]
 80027ea:	4013      	ands	r3, r2
 80027ec:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80027ee:	683b      	ldr	r3, [r7, #0]
 80027f0:	685b      	ldr	r3, [r3, #4]
 80027f2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	d003      	beq.n	8002802 <HAL_GPIO_Init+0x25a>
        {
          tmp |= iocurrent;
 80027fa:	697a      	ldr	r2, [r7, #20]
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	4313      	orrs	r3, r2
 8002800:	617b      	str	r3, [r7, #20]
        }
        EXTI->EMR1 = tmp;
 8002802:	4a16      	ldr	r2, [pc, #88]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 8002804:	697b      	ldr	r3, [r7, #20]
 8002806:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84

        tmp = EXTI->IMR1;
 800280a:	4b14      	ldr	r3, [pc, #80]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 800280c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8002810:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	43db      	mvns	r3, r3
 8002816:	697a      	ldr	r2, [r7, #20]
 8002818:	4013      	ands	r3, r2
 800281a:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800281c:	683b      	ldr	r3, [r7, #0]
 800281e:	685b      	ldr	r3, [r3, #4]
 8002820:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002824:	2b00      	cmp	r3, #0
 8002826:	d003      	beq.n	8002830 <HAL_GPIO_Init+0x288>
        {
          tmp |= iocurrent;
 8002828:	697a      	ldr	r2, [r7, #20]
 800282a:	68fb      	ldr	r3, [r7, #12]
 800282c:	4313      	orrs	r3, r2
 800282e:	617b      	str	r3, [r7, #20]
        }
        EXTI->IMR1 = tmp;
 8002830:	4a0a      	ldr	r2, [pc, #40]	@ (800285c <HAL_GPIO_Init+0x2b4>)
 8002832:	697b      	ldr	r3, [r7, #20]
 8002834:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
      }
    }

    position++;
 8002838:	693b      	ldr	r3, [r7, #16]
 800283a:	3301      	adds	r3, #1
 800283c:	613b      	str	r3, [r7, #16]
  while (((pGPIO_Init->Pin) >> position) != 0U)
 800283e:	683b      	ldr	r3, [r7, #0]
 8002840:	681a      	ldr	r2, [r3, #0]
 8002842:	693b      	ldr	r3, [r7, #16]
 8002844:	fa22 f303 	lsr.w	r3, r2, r3
 8002848:	2b00      	cmp	r3, #0
 800284a:	f47f aeb5 	bne.w	80025b8 <HAL_GPIO_Init+0x10>
  }
}
 800284e:	bf00      	nop
 8002850:	bf00      	nop
 8002852:	371c      	adds	r7, #28
 8002854:	46bd      	mov	sp, r7
 8002856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285a:	4770      	bx	lr
 800285c:	44022000 	.word	0x44022000
 8002860:	002f7f7f 	.word	0x002f7f7f

08002864 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002864:	b480      	push	{r7}
 8002866:	b083      	sub	sp, #12
 8002868:	af00      	add	r7, sp, #0
 800286a:	6078      	str	r0, [r7, #4]
 800286c:	460b      	mov	r3, r1
 800286e:	807b      	strh	r3, [r7, #2]
 8002870:	4613      	mov	r3, r2
 8002872:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002874:	787b      	ldrb	r3, [r7, #1]
 8002876:	2b00      	cmp	r3, #0
 8002878:	d003      	beq.n	8002882 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 800287a:	887a      	ldrh	r2, [r7, #2]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8002880:	e002      	b.n	8002888 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8002882:	887a      	ldrh	r2, [r7, #2]
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002888:	bf00      	nop
 800288a:	370c      	adds	r7, #12
 800288c:	46bd      	mov	sp, r7
 800288e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002892:	4770      	bx	lr

08002894 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *pOscInitStruct)
{
 8002894:	b580      	push	{r7, lr}
 8002896:	b088      	sub	sp, #32
 8002898:	af00      	add	r7, sp, #0
 800289a:	6078      	str	r0, [r7, #4]
  uint32_t temp_pllckselr;
  uint32_t temp1_pllckcfg;
  uint32_t temp2_pllckcfg;

  /* Check Null pointer */
  if (pOscInitStruct == NULL)
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	2b00      	cmp	r3, #0
 80028a0:	d102      	bne.n	80028a8 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80028a2:	2301      	movs	r3, #1
 80028a4:	f000 bc28 	b.w	80030f8 <HAL_RCC_OscConfig+0x864>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(pOscInitStruct->OscillatorType));
  temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 80028a8:	4b94      	ldr	r3, [pc, #592]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80028aa:	69db      	ldr	r3, [r3, #28]
 80028ac:	f003 0318 	and.w	r3, r3, #24
 80028b0:	61fb      	str	r3, [r7, #28]
  temp_pllckselr = __HAL_RCC_GET_PLL1_OSCSOURCE();
 80028b2:	4b92      	ldr	r3, [pc, #584]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80028b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80028b6:	f003 0303 	and.w	r3, r3, #3
 80028ba:	61bb      	str	r3, [r7, #24]

  /*----------------------------- CSI Configuration --------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 80028bc:	687b      	ldr	r3, [r7, #4]
 80028be:	681b      	ldr	r3, [r3, #0]
 80028c0:	f003 0310 	and.w	r3, r3, #16
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d05b      	beq.n	8002980 <HAL_RCC_OscConfig+0xec>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(pOscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(pOscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not be disabled */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_CSI) ||
 80028c8:	69fb      	ldr	r3, [r7, #28]
 80028ca:	2b08      	cmp	r3, #8
 80028cc:	d005      	beq.n	80028da <HAL_RCC_OscConfig+0x46>
 80028ce:	69fb      	ldr	r3, [r7, #28]
 80028d0:	2b18      	cmp	r3, #24
 80028d2:	d114      	bne.n	80028fe <HAL_RCC_OscConfig+0x6a>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_CSI)))
 80028d4:	69bb      	ldr	r3, [r7, #24]
 80028d6:	2b02      	cmp	r3, #2
 80028d8:	d111      	bne.n	80028fe <HAL_RCC_OscConfig+0x6a>
    {
      if (pOscInitStruct->CSIState == RCC_CSI_OFF)
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	69db      	ldr	r3, [r3, #28]
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d102      	bne.n	80028e8 <HAL_RCC_OscConfig+0x54>
      {
        return HAL_ERROR;
 80028e2:	2301      	movs	r3, #1
 80028e4:	f000 bc08 	b.w	80030f8 <HAL_RCC_OscConfig+0x864>

      /* Otherwise, just the calibration and CSI is allowed */
      else
      {
        /* Adjusts the Internal Low-power oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->CSICalibrationValue);
 80028e8:	4b84      	ldr	r3, [pc, #528]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80028ea:	699b      	ldr	r3, [r3, #24]
 80028ec:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	6a1b      	ldr	r3, [r3, #32]
 80028f4:	041b      	lsls	r3, r3, #16
 80028f6:	4981      	ldr	r1, [pc, #516]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80028f8:	4313      	orrs	r3, r2
 80028fa:	618b      	str	r3, [r1, #24]
      if (pOscInitStruct->CSIState == RCC_CSI_OFF)
 80028fc:	e040      	b.n	8002980 <HAL_RCC_OscConfig+0xec>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((pOscInitStruct->CSIState) != RCC_CSI_OFF)
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	69db      	ldr	r3, [r3, #28]
 8002902:	2b00      	cmp	r3, #0
 8002904:	d023      	beq.n	800294e <HAL_RCC_OscConfig+0xba>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8002906:	4b7d      	ldr	r3, [pc, #500]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	4a7c      	ldr	r2, [pc, #496]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 800290c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002910:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002912:	f7fe fd01 	bl	8001318 <HAL_GetTick>
 8002916:	6178      	str	r0, [r7, #20]

        /* Wait till CSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 8002918:	e008      	b.n	800292c <HAL_RCC_OscConfig+0x98>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CSI_TIMEOUT_VALUE)
 800291a:	f7fe fcfd 	bl	8001318 <HAL_GetTick>
 800291e:	4602      	mov	r2, r0
 8002920:	697b      	ldr	r3, [r7, #20]
 8002922:	1ad3      	subs	r3, r2, r3
 8002924:	2b02      	cmp	r3, #2
 8002926:	d901      	bls.n	800292c <HAL_RCC_OscConfig+0x98>
          {
            return HAL_TIMEOUT;
 8002928:	2303      	movs	r3, #3
 800292a:	e3e5      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 800292c:	4b73      	ldr	r3, [pc, #460]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002934:	2b00      	cmp	r3, #0
 8002936:	d0f0      	beq.n	800291a <HAL_RCC_OscConfig+0x86>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->CSICalibrationValue);
 8002938:	4b70      	ldr	r3, [pc, #448]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 800293a:	699b      	ldr	r3, [r3, #24]
 800293c:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	6a1b      	ldr	r3, [r3, #32]
 8002944:	041b      	lsls	r3, r3, #16
 8002946:	496d      	ldr	r1, [pc, #436]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002948:	4313      	orrs	r3, r2
 800294a:	618b      	str	r3, [r1, #24]
 800294c:	e018      	b.n	8002980 <HAL_RCC_OscConfig+0xec>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 800294e:	4b6b      	ldr	r3, [pc, #428]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	4a6a      	ldr	r2, [pc, #424]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002954:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002958:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800295a:	f7fe fcdd 	bl	8001318 <HAL_GetTick>
 800295e:	6178      	str	r0, [r7, #20]

        /* Wait till CSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) != 0U)
 8002960:	e008      	b.n	8002974 <HAL_RCC_OscConfig+0xe0>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CSI_TIMEOUT_VALUE)
 8002962:	f7fe fcd9 	bl	8001318 <HAL_GetTick>
 8002966:	4602      	mov	r2, r0
 8002968:	697b      	ldr	r3, [r7, #20]
 800296a:	1ad3      	subs	r3, r2, r3
 800296c:	2b02      	cmp	r3, #2
 800296e:	d901      	bls.n	8002974 <HAL_RCC_OscConfig+0xe0>
          {
            return HAL_TIMEOUT;
 8002970:	2303      	movs	r3, #3
 8002972:	e3c1      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) != 0U)
 8002974:	4b61      	ldr	r3, [pc, #388]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800297c:	2b00      	cmp	r3, #0
 800297e:	d1f0      	bne.n	8002962 <HAL_RCC_OscConfig+0xce>
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	f003 0301 	and.w	r3, r3, #1
 8002988:	2b00      	cmp	r3, #0
 800298a:	f000 80a0 	beq.w	8002ace <HAL_RCC_OscConfig+0x23a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(pOscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 800298e:	69fb      	ldr	r3, [r7, #28]
 8002990:	2b10      	cmp	r3, #16
 8002992:	d005      	beq.n	80029a0 <HAL_RCC_OscConfig+0x10c>
 8002994:	69fb      	ldr	r3, [r7, #28]
 8002996:	2b18      	cmp	r3, #24
 8002998:	d109      	bne.n	80029ae <HAL_RCC_OscConfig+0x11a>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_HSE)))
 800299a:	69bb      	ldr	r3, [r7, #24]
 800299c:	2b03      	cmp	r3, #3
 800299e:	d106      	bne.n	80029ae <HAL_RCC_OscConfig+0x11a>
    {
      if (pOscInitStruct->HSEState == RCC_HSE_OFF)
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	685b      	ldr	r3, [r3, #4]
 80029a4:	2b00      	cmp	r3, #0
 80029a6:	f040 8092 	bne.w	8002ace <HAL_RCC_OscConfig+0x23a>
      {
        return HAL_ERROR;
 80029aa:	2301      	movs	r3, #1
 80029ac:	e3a4      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(pOscInitStruct->HSEState);
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	685b      	ldr	r3, [r3, #4]
 80029b2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80029b6:	d106      	bne.n	80029c6 <HAL_RCC_OscConfig+0x132>
 80029b8:	4b50      	ldr	r3, [pc, #320]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029ba:	681b      	ldr	r3, [r3, #0]
 80029bc:	4a4f      	ldr	r2, [pc, #316]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80029c2:	6013      	str	r3, [r2, #0]
 80029c4:	e058      	b.n	8002a78 <HAL_RCC_OscConfig+0x1e4>
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	685b      	ldr	r3, [r3, #4]
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	d112      	bne.n	80029f4 <HAL_RCC_OscConfig+0x160>
 80029ce:	4b4b      	ldr	r3, [pc, #300]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	4a4a      	ldr	r2, [pc, #296]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029d4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80029d8:	6013      	str	r3, [r2, #0]
 80029da:	4b48      	ldr	r3, [pc, #288]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029dc:	681b      	ldr	r3, [r3, #0]
 80029de:	4a47      	ldr	r2, [pc, #284]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029e0:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80029e4:	6013      	str	r3, [r2, #0]
 80029e6:	4b45      	ldr	r3, [pc, #276]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	4a44      	ldr	r2, [pc, #272]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 80029ec:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80029f0:	6013      	str	r3, [r2, #0]
 80029f2:	e041      	b.n	8002a78 <HAL_RCC_OscConfig+0x1e4>
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	685b      	ldr	r3, [r3, #4]
 80029f8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80029fc:	d112      	bne.n	8002a24 <HAL_RCC_OscConfig+0x190>
 80029fe:	4b3f      	ldr	r3, [pc, #252]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	4a3e      	ldr	r2, [pc, #248]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a04:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002a08:	6013      	str	r3, [r2, #0]
 8002a0a:	4b3c      	ldr	r3, [pc, #240]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	4a3b      	ldr	r2, [pc, #236]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a10:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002a14:	6013      	str	r3, [r2, #0]
 8002a16:	4b39      	ldr	r3, [pc, #228]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	4a38      	ldr	r2, [pc, #224]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a1c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a20:	6013      	str	r3, [r2, #0]
 8002a22:	e029      	b.n	8002a78 <HAL_RCC_OscConfig+0x1e4>
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	685b      	ldr	r3, [r3, #4]
 8002a28:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8002a2c:	d112      	bne.n	8002a54 <HAL_RCC_OscConfig+0x1c0>
 8002a2e:	4b33      	ldr	r3, [pc, #204]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	4a32      	ldr	r2, [pc, #200]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a34:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002a38:	6013      	str	r3, [r2, #0]
 8002a3a:	4b30      	ldr	r3, [pc, #192]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	4a2f      	ldr	r2, [pc, #188]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a40:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002a44:	6013      	str	r3, [r2, #0]
 8002a46:	4b2d      	ldr	r3, [pc, #180]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	4a2c      	ldr	r2, [pc, #176]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a4c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a50:	6013      	str	r3, [r2, #0]
 8002a52:	e011      	b.n	8002a78 <HAL_RCC_OscConfig+0x1e4>
 8002a54:	4b29      	ldr	r3, [pc, #164]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	4a28      	ldr	r2, [pc, #160]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a5a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002a5e:	6013      	str	r3, [r2, #0]
 8002a60:	4b26      	ldr	r3, [pc, #152]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	4a25      	ldr	r2, [pc, #148]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a66:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002a6a:	6013      	str	r3, [r2, #0]
 8002a6c:	4b23      	ldr	r3, [pc, #140]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	4a22      	ldr	r2, [pc, #136]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a72:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002a76:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (pOscInitStruct->HSEState != RCC_HSE_OFF)
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	685b      	ldr	r3, [r3, #4]
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d013      	beq.n	8002aa8 <HAL_RCC_OscConfig+0x214>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002a80:	f7fe fc4a 	bl	8001318 <HAL_GetTick>
 8002a84:	6178      	str	r0, [r7, #20]

        /* Wait till HSE is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002a86:	e008      	b.n	8002a9a <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002a88:	f7fe fc46 	bl	8001318 <HAL_GetTick>
 8002a8c:	4602      	mov	r2, r0
 8002a8e:	697b      	ldr	r3, [r7, #20]
 8002a90:	1ad3      	subs	r3, r2, r3
 8002a92:	2b64      	cmp	r3, #100	@ 0x64
 8002a94:	d901      	bls.n	8002a9a <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8002a96:	2303      	movs	r3, #3
 8002a98:	e32e      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002a9a:	4b18      	ldr	r3, [pc, #96]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	d0f0      	beq.n	8002a88 <HAL_RCC_OscConfig+0x1f4>
 8002aa6:	e012      	b.n	8002ace <HAL_RCC_OscConfig+0x23a>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002aa8:	f7fe fc36 	bl	8001318 <HAL_GetTick>
 8002aac:	6178      	str	r0, [r7, #20]

        /* Wait till HSE is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002aae:	e008      	b.n	8002ac2 <HAL_RCC_OscConfig+0x22e>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002ab0:	f7fe fc32 	bl	8001318 <HAL_GetTick>
 8002ab4:	4602      	mov	r2, r0
 8002ab6:	697b      	ldr	r3, [r7, #20]
 8002ab8:	1ad3      	subs	r3, r2, r3
 8002aba:	2b64      	cmp	r3, #100	@ 0x64
 8002abc:	d901      	bls.n	8002ac2 <HAL_RCC_OscConfig+0x22e>
          {
            return HAL_TIMEOUT;
 8002abe:	2303      	movs	r3, #3
 8002ac0:	e31a      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002ac2:	4b0e      	ldr	r3, [pc, #56]	@ (8002afc <HAL_RCC_OscConfig+0x268>)
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d1f0      	bne.n	8002ab0 <HAL_RCC_OscConfig+0x21c>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	f003 0302 	and.w	r3, r3, #2
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	f000 809a 	beq.w	8002c10 <HAL_RCC_OscConfig+0x37c>
    assert_param(IS_RCC_HSI(pOscInitStruct->HSIState));
    assert_param(IS_RCC_HSIDIV(pOscInitStruct->HSIDiv));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(pOscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8002adc:	69fb      	ldr	r3, [r7, #28]
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d005      	beq.n	8002aee <HAL_RCC_OscConfig+0x25a>
 8002ae2:	69fb      	ldr	r3, [r7, #28]
 8002ae4:	2b18      	cmp	r3, #24
 8002ae6:	d149      	bne.n	8002b7c <HAL_RCC_OscConfig+0x2e8>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_HSI)))
 8002ae8:	69bb      	ldr	r3, [r7, #24]
 8002aea:	2b01      	cmp	r3, #1
 8002aec:	d146      	bne.n	8002b7c <HAL_RCC_OscConfig+0x2e8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if (pOscInitStruct->HSIState == RCC_HSI_OFF)
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	68db      	ldr	r3, [r3, #12]
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d104      	bne.n	8002b00 <HAL_RCC_OscConfig+0x26c>
      {
        return HAL_ERROR;
 8002af6:	2301      	movs	r3, #1
 8002af8:	e2fe      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
 8002afa:	bf00      	nop
 8002afc:	44020c00 	.word	0x44020c00
      /* Otherwise, HSI calibration and division may be allowed */
      else
      {

        /* HSI division is allowed if HSI is used as system clock */
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002b00:	69fb      	ldr	r3, [r7, #28]
 8002b02:	2b00      	cmp	r3, #0
 8002b04:	d11c      	bne.n	8002b40 <HAL_RCC_OscConfig+0x2ac>
        {
          if (__HAL_RCC_GET_HSI_DIVIDER() != (pOscInitStruct->HSIDiv))
 8002b06:	4b9a      	ldr	r3, [pc, #616]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	f003 0218 	and.w	r2, r3, #24
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	691b      	ldr	r3, [r3, #16]
 8002b12:	429a      	cmp	r2, r3
 8002b14:	d014      	beq.n	8002b40 <HAL_RCC_OscConfig+0x2ac>
          {
            /* Adjust the HSI division factor */
            __HAL_RCC_HSI_DIVIDER_CONFIG(pOscInitStruct->HSIDiv);
 8002b16:	4b96      	ldr	r3, [pc, #600]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	f023 0218 	bic.w	r2, r3, #24
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	691b      	ldr	r3, [r3, #16]
 8002b22:	4993      	ldr	r1, [pc, #588]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b24:	4313      	orrs	r3, r2
 8002b26:	600b      	str	r3, [r1, #0]

            /* Update the SystemCoreClock global variable with new HSI value  */
            (void) HAL_RCC_GetHCLKFreq();
 8002b28:	f000 fdd0 	bl	80036cc <HAL_RCC_GetHCLKFreq>

            /* Configure the source of time base considering new system clocks settings*/
            if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8002b2c:	4b91      	ldr	r3, [pc, #580]	@ (8002d74 <HAL_RCC_OscConfig+0x4e0>)
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	4618      	mov	r0, r3
 8002b32:	f7fe f97b 	bl	8000e2c <HAL_InitTick>
 8002b36:	4603      	mov	r3, r0
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	d001      	beq.n	8002b40 <HAL_RCC_OscConfig+0x2ac>
            {
              return HAL_ERROR;
 8002b3c:	2301      	movs	r3, #1
 8002b3e:	e2db      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
            }
          }
        }

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002b40:	f7fe fbea 	bl	8001318 <HAL_GetTick>
 8002b44:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002b46:	e008      	b.n	8002b5a <HAL_RCC_OscConfig+0x2c6>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002b48:	f7fe fbe6 	bl	8001318 <HAL_GetTick>
 8002b4c:	4602      	mov	r2, r0
 8002b4e:	697b      	ldr	r3, [r7, #20]
 8002b50:	1ad3      	subs	r3, r2, r3
 8002b52:	2b02      	cmp	r3, #2
 8002b54:	d901      	bls.n	8002b5a <HAL_RCC_OscConfig+0x2c6>
          {
            return HAL_TIMEOUT;
 8002b56:	2303      	movs	r3, #3
 8002b58:	e2ce      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002b5a:	4b85      	ldr	r3, [pc, #532]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	f003 0302 	and.w	r3, r3, #2
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d0f0      	beq.n	8002b48 <HAL_RCC_OscConfig+0x2b4>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->HSICalibrationValue);
 8002b66:	4b82      	ldr	r3, [pc, #520]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b68:	691b      	ldr	r3, [r3, #16]
 8002b6a:	f423 02fe 	bic.w	r2, r3, #8323072	@ 0x7f0000
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	695b      	ldr	r3, [r3, #20]
 8002b72:	041b      	lsls	r3, r3, #16
 8002b74:	497e      	ldr	r1, [pc, #504]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b76:	4313      	orrs	r3, r2
 8002b78:	610b      	str	r3, [r1, #16]
      if (pOscInitStruct->HSIState == RCC_HSI_OFF)
 8002b7a:	e049      	b.n	8002c10 <HAL_RCC_OscConfig+0x37c>
      }
    }
    else
    {
      /* Check the HSI State */
      if (pOscInitStruct->HSIState != RCC_HSI_OFF)
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	68db      	ldr	r3, [r3, #12]
 8002b80:	2b00      	cmp	r3, #0
 8002b82:	d02c      	beq.n	8002bde <HAL_RCC_OscConfig+0x34a>
      {
        /* Adjust the HSI division factor */
        __HAL_RCC_HSI_DIVIDER_CONFIG(pOscInitStruct->HSIDiv);
 8002b84:	4b7a      	ldr	r3, [pc, #488]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	f023 0218 	bic.w	r2, r3, #24
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	691b      	ldr	r3, [r3, #16]
 8002b90:	4977      	ldr	r1, [pc, #476]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b92:	4313      	orrs	r3, r2
 8002b94:	600b      	str	r3, [r1, #0]

        /* Enable the HSI oscillator */
        __HAL_RCC_HSI_ENABLE();
 8002b96:	4b76      	ldr	r3, [pc, #472]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b98:	681b      	ldr	r3, [r3, #0]
 8002b9a:	4a75      	ldr	r2, [pc, #468]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002b9c:	f043 0301 	orr.w	r3, r3, #1
 8002ba0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002ba2:	f7fe fbb9 	bl	8001318 <HAL_GetTick>
 8002ba6:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002ba8:	e008      	b.n	8002bbc <HAL_RCC_OscConfig+0x328>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002baa:	f7fe fbb5 	bl	8001318 <HAL_GetTick>
 8002bae:	4602      	mov	r2, r0
 8002bb0:	697b      	ldr	r3, [r7, #20]
 8002bb2:	1ad3      	subs	r3, r2, r3
 8002bb4:	2b02      	cmp	r3, #2
 8002bb6:	d901      	bls.n	8002bbc <HAL_RCC_OscConfig+0x328>
          {
            return HAL_TIMEOUT;
 8002bb8:	2303      	movs	r3, #3
 8002bba:	e29d      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002bbc:	4b6c      	ldr	r3, [pc, #432]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f003 0302 	and.w	r3, r3, #2
 8002bc4:	2b00      	cmp	r3, #0
 8002bc6:	d0f0      	beq.n	8002baa <HAL_RCC_OscConfig+0x316>
          }
        }

        /* Adjust the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->HSICalibrationValue);
 8002bc8:	4b69      	ldr	r3, [pc, #420]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002bca:	691b      	ldr	r3, [r3, #16]
 8002bcc:	f423 02fe 	bic.w	r2, r3, #8323072	@ 0x7f0000
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	695b      	ldr	r3, [r3, #20]
 8002bd4:	041b      	lsls	r3, r3, #16
 8002bd6:	4966      	ldr	r1, [pc, #408]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002bd8:	4313      	orrs	r3, r2
 8002bda:	610b      	str	r3, [r1, #16]
 8002bdc:	e018      	b.n	8002c10 <HAL_RCC_OscConfig+0x37c>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002bde:	4b64      	ldr	r3, [pc, #400]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	4a63      	ldr	r2, [pc, #396]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002be4:	f023 0301 	bic.w	r3, r3, #1
 8002be8:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002bea:	f7fe fb95 	bl	8001318 <HAL_GetTick>
 8002bee:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002bf0:	e008      	b.n	8002c04 <HAL_RCC_OscConfig+0x370>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002bf2:	f7fe fb91 	bl	8001318 <HAL_GetTick>
 8002bf6:	4602      	mov	r2, r0
 8002bf8:	697b      	ldr	r3, [r7, #20]
 8002bfa:	1ad3      	subs	r3, r2, r3
 8002bfc:	2b02      	cmp	r3, #2
 8002bfe:	d901      	bls.n	8002c04 <HAL_RCC_OscConfig+0x370>
          {
            return HAL_TIMEOUT;
 8002c00:	2303      	movs	r3, #3
 8002c02:	e279      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002c04:	4b5a      	ldr	r3, [pc, #360]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	f003 0302 	and.w	r3, r3, #2
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d1f0      	bne.n	8002bf2 <HAL_RCC_OscConfig+0x35e>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f003 0308 	and.w	r3, r3, #8
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d03c      	beq.n	8002c96 <HAL_RCC_OscConfig+0x402>
    assert_param(IS_RCC_LSI(pOscInitStruct->LSIState));

    /* Update LSI configuration in Backup Domain control register    */

    /* Check the LSI State */
    if (pOscInitStruct->LSIState != RCC_LSI_OFF)
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	699b      	ldr	r3, [r3, #24]
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	d01c      	beq.n	8002c5e <HAL_RCC_OscConfig+0x3ca>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002c24:	4b52      	ldr	r3, [pc, #328]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c26:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002c2a:	4a51      	ldr	r2, [pc, #324]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c2c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002c30:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002c34:	f7fe fb70 	bl	8001318 <HAL_GetTick>
 8002c38:	6178      	str	r0, [r7, #20]

      /* Wait till LSI is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8002c3a:	e008      	b.n	8002c4e <HAL_RCC_OscConfig+0x3ba>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 8002c3c:	f7fe fb6c 	bl	8001318 <HAL_GetTick>
 8002c40:	4602      	mov	r2, r0
 8002c42:	697b      	ldr	r3, [r7, #20]
 8002c44:	1ad3      	subs	r3, r2, r3
 8002c46:	2b02      	cmp	r3, #2
 8002c48:	d901      	bls.n	8002c4e <HAL_RCC_OscConfig+0x3ba>
        {
          return HAL_TIMEOUT;
 8002c4a:	2303      	movs	r3, #3
 8002c4c:	e254      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8002c4e:	4b48      	ldr	r3, [pc, #288]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c50:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002c54:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002c58:	2b00      	cmp	r3, #0
 8002c5a:	d0ef      	beq.n	8002c3c <HAL_RCC_OscConfig+0x3a8>
 8002c5c:	e01b      	b.n	8002c96 <HAL_RCC_OscConfig+0x402>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002c5e:	4b44      	ldr	r3, [pc, #272]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c60:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002c64:	4a42      	ldr	r2, [pc, #264]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c66:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8002c6a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002c6e:	f7fe fb53 	bl	8001318 <HAL_GetTick>
 8002c72:	6178      	str	r0, [r7, #20]

      /* Wait till LSI is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8002c74:	e008      	b.n	8002c88 <HAL_RCC_OscConfig+0x3f4>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 8002c76:	f7fe fb4f 	bl	8001318 <HAL_GetTick>
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	697b      	ldr	r3, [r7, #20]
 8002c7e:	1ad3      	subs	r3, r2, r3
 8002c80:	2b02      	cmp	r3, #2
 8002c82:	d901      	bls.n	8002c88 <HAL_RCC_OscConfig+0x3f4>
        {
          return HAL_TIMEOUT;
 8002c84:	2303      	movs	r3, #3
 8002c86:	e237      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8002c88:	4b39      	ldr	r3, [pc, #228]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002c8a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002c8e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d1ef      	bne.n	8002c76 <HAL_RCC_OscConfig+0x3e2>
      }
    }

  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	f003 0304 	and.w	r3, r3, #4
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	f000 80d2 	beq.w	8002e48 <HAL_RCC_OscConfig+0x5b4>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(pOscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain */
    if (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002ca4:	4b34      	ldr	r3, [pc, #208]	@ (8002d78 <HAL_RCC_OscConfig+0x4e4>)
 8002ca6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ca8:	f003 0301 	and.w	r3, r3, #1
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	d118      	bne.n	8002ce2 <HAL_RCC_OscConfig+0x44e>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->DBPCR, PWR_DBPCR_DBP);
 8002cb0:	4b31      	ldr	r3, [pc, #196]	@ (8002d78 <HAL_RCC_OscConfig+0x4e4>)
 8002cb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002cb4:	4a30      	ldr	r2, [pc, #192]	@ (8002d78 <HAL_RCC_OscConfig+0x4e4>)
 8002cb6:	f043 0301 	orr.w	r3, r3, #1
 8002cba:	6253      	str	r3, [r2, #36]	@ 0x24

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002cbc:	f7fe fb2c 	bl	8001318 <HAL_GetTick>
 8002cc0:	6178      	str	r0, [r7, #20]

      while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002cc2:	e008      	b.n	8002cd6 <HAL_RCC_OscConfig+0x442>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002cc4:	f7fe fb28 	bl	8001318 <HAL_GetTick>
 8002cc8:	4602      	mov	r2, r0
 8002cca:	697b      	ldr	r3, [r7, #20]
 8002ccc:	1ad3      	subs	r3, r2, r3
 8002cce:	2b02      	cmp	r3, #2
 8002cd0:	d901      	bls.n	8002cd6 <HAL_RCC_OscConfig+0x442>
        {
          return HAL_TIMEOUT;
 8002cd2:	2303      	movs	r3, #3
 8002cd4:	e210      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002cd6:	4b28      	ldr	r3, [pc, #160]	@ (8002d78 <HAL_RCC_OscConfig+0x4e4>)
 8002cd8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002cda:	f003 0301 	and.w	r3, r3, #1
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d0f0      	beq.n	8002cc4 <HAL_RCC_OscConfig+0x430>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(pOscInitStruct->LSEState);
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	689b      	ldr	r3, [r3, #8]
 8002ce6:	2b01      	cmp	r3, #1
 8002ce8:	d108      	bne.n	8002cfc <HAL_RCC_OscConfig+0x468>
 8002cea:	4b21      	ldr	r3, [pc, #132]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002cec:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002cf0:	4a1f      	ldr	r2, [pc, #124]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002cf2:	f043 0301 	orr.w	r3, r3, #1
 8002cf6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002cfa:	e074      	b.n	8002de6 <HAL_RCC_OscConfig+0x552>
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	689b      	ldr	r3, [r3, #8]
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d118      	bne.n	8002d36 <HAL_RCC_OscConfig+0x4a2>
 8002d04:	4b1a      	ldr	r3, [pc, #104]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d06:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d0a:	4a19      	ldr	r2, [pc, #100]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d0c:	f023 0301 	bic.w	r3, r3, #1
 8002d10:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d14:	4b16      	ldr	r3, [pc, #88]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d16:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d1a:	4a15      	ldr	r2, [pc, #84]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d1c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002d20:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d24:	4b12      	ldr	r3, [pc, #72]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d26:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d2a:	4a11      	ldr	r2, [pc, #68]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d2c:	f023 0304 	bic.w	r3, r3, #4
 8002d30:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d34:	e057      	b.n	8002de6 <HAL_RCC_OscConfig+0x552>
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	689b      	ldr	r3, [r3, #8]
 8002d3a:	2b05      	cmp	r3, #5
 8002d3c:	d11e      	bne.n	8002d7c <HAL_RCC_OscConfig+0x4e8>
 8002d3e:	4b0c      	ldr	r3, [pc, #48]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d40:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d44:	4a0a      	ldr	r2, [pc, #40]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d46:	f043 0304 	orr.w	r3, r3, #4
 8002d4a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d4e:	4b08      	ldr	r3, [pc, #32]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d50:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d54:	4a06      	ldr	r2, [pc, #24]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d56:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002d5a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d5e:	4b04      	ldr	r3, [pc, #16]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d60:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d64:	4a02      	ldr	r2, [pc, #8]	@ (8002d70 <HAL_RCC_OscConfig+0x4dc>)
 8002d66:	f043 0301 	orr.w	r3, r3, #1
 8002d6a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d6e:	e03a      	b.n	8002de6 <HAL_RCC_OscConfig+0x552>
 8002d70:	44020c00 	.word	0x44020c00
 8002d74:	20000008 	.word	0x20000008
 8002d78:	44020800 	.word	0x44020800
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	689b      	ldr	r3, [r3, #8]
 8002d80:	2b85      	cmp	r3, #133	@ 0x85
 8002d82:	d118      	bne.n	8002db6 <HAL_RCC_OscConfig+0x522>
 8002d84:	4ba2      	ldr	r3, [pc, #648]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002d86:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d8a:	4aa1      	ldr	r2, [pc, #644]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002d8c:	f043 0304 	orr.w	r3, r3, #4
 8002d90:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d94:	4b9e      	ldr	r3, [pc, #632]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002d96:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d9a:	4a9d      	ldr	r2, [pc, #628]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002d9c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002da0:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002da4:	4b9a      	ldr	r3, [pc, #616]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002da6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002daa:	4a99      	ldr	r2, [pc, #612]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dac:	f043 0301 	orr.w	r3, r3, #1
 8002db0:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002db4:	e017      	b.n	8002de6 <HAL_RCC_OscConfig+0x552>
 8002db6:	4b96      	ldr	r3, [pc, #600]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002db8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002dbc:	4a94      	ldr	r2, [pc, #592]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dbe:	f023 0301 	bic.w	r3, r3, #1
 8002dc2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002dc6:	4b92      	ldr	r3, [pc, #584]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dc8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002dcc:	4a90      	ldr	r2, [pc, #576]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dce:	f023 0304 	bic.w	r3, r3, #4
 8002dd2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002dd6:	4b8e      	ldr	r3, [pc, #568]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dd8:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002ddc:	4a8c      	ldr	r2, [pc, #560]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002dde:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002de2:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

    /* Check the LSE State */
    if (pOscInitStruct->LSEState != RCC_LSE_OFF)
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	689b      	ldr	r3, [r3, #8]
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	d016      	beq.n	8002e1c <HAL_RCC_OscConfig+0x588>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002dee:	f7fe fa93 	bl	8001318 <HAL_GetTick>
 8002df2:	6178      	str	r0, [r7, #20]

      /* Wait till LSE is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002df4:	e00a      	b.n	8002e0c <HAL_RCC_OscConfig+0x578>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002df6:	f7fe fa8f 	bl	8001318 <HAL_GetTick>
 8002dfa:	4602      	mov	r2, r0
 8002dfc:	697b      	ldr	r3, [r7, #20]
 8002dfe:	1ad3      	subs	r3, r2, r3
 8002e00:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e04:	4293      	cmp	r3, r2
 8002e06:	d901      	bls.n	8002e0c <HAL_RCC_OscConfig+0x578>
        {
          return HAL_TIMEOUT;
 8002e08:	2303      	movs	r3, #3
 8002e0a:	e175      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002e0c:	4b80      	ldr	r3, [pc, #512]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e0e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e12:	f003 0302 	and.w	r3, r3, #2
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d0ed      	beq.n	8002df6 <HAL_RCC_OscConfig+0x562>
 8002e1a:	e015      	b.n	8002e48 <HAL_RCC_OscConfig+0x5b4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e1c:	f7fe fa7c 	bl	8001318 <HAL_GetTick>
 8002e20:	6178      	str	r0, [r7, #20]

      /* Wait till LSE is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002e22:	e00a      	b.n	8002e3a <HAL_RCC_OscConfig+0x5a6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002e24:	f7fe fa78 	bl	8001318 <HAL_GetTick>
 8002e28:	4602      	mov	r2, r0
 8002e2a:	697b      	ldr	r3, [r7, #20]
 8002e2c:	1ad3      	subs	r3, r2, r3
 8002e2e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e32:	4293      	cmp	r3, r2
 8002e34:	d901      	bls.n	8002e3a <HAL_RCC_OscConfig+0x5a6>
        {
          return HAL_TIMEOUT;
 8002e36:	2303      	movs	r3, #3
 8002e38:	e15e      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002e3a:	4b75      	ldr	r3, [pc, #468]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e3c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e40:	f003 0302 	and.w	r3, r3, #2
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d1ed      	bne.n	8002e24 <HAL_RCC_OscConfig+0x590>
      }
    }

  }
  /*------------------------------ HSI48 Configuration -----------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	f003 0320 	and.w	r3, r3, #32
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d036      	beq.n	8002ec2 <HAL_RCC_OscConfig+0x62e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(pOscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if (pOscInitStruct->HSI48State != RCC_HSI48_OFF)
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d019      	beq.n	8002e90 <HAL_RCC_OscConfig+0x5fc>
    {
      /* Enable the Internal High Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8002e5c:	4b6c      	ldr	r3, [pc, #432]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	4a6b      	ldr	r2, [pc, #428]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e62:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002e66:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e68:	f7fe fa56 	bl	8001318 <HAL_GetTick>
 8002e6c:	6178      	str	r0, [r7, #20]

      /* Wait till HSI48 is ready */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8002e6e:	e008      	b.n	8002e82 <HAL_RCC_OscConfig+0x5ee>
      {
        if ((HAL_GetTick() - tickstart) > RCC_HSI48_TIMEOUT_VALUE)
 8002e70:	f7fe fa52 	bl	8001318 <HAL_GetTick>
 8002e74:	4602      	mov	r2, r0
 8002e76:	697b      	ldr	r3, [r7, #20]
 8002e78:	1ad3      	subs	r3, r2, r3
 8002e7a:	2b02      	cmp	r3, #2
 8002e7c:	d901      	bls.n	8002e82 <HAL_RCC_OscConfig+0x5ee>
        {
          return HAL_TIMEOUT;
 8002e7e:	2303      	movs	r3, #3
 8002e80:	e13a      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8002e82:	4b63      	ldr	r3, [pc, #396]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d0f0      	beq.n	8002e70 <HAL_RCC_OscConfig+0x5dc>
 8002e8e:	e018      	b.n	8002ec2 <HAL_RCC_OscConfig+0x62e>
      }
    }
    else
    {
      /* Disable the Internal High Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8002e90:	4b5f      	ldr	r3, [pc, #380]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	4a5e      	ldr	r2, [pc, #376]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002e96:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002e9a:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e9c:	f7fe fa3c 	bl	8001318 <HAL_GetTick>
 8002ea0:	6178      	str	r0, [r7, #20]

      /* Wait till HSI48 is disabled */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8002ea2:	e008      	b.n	8002eb6 <HAL_RCC_OscConfig+0x622>
      {
        if ((HAL_GetTick() - tickstart) > RCC_HSI48_TIMEOUT_VALUE)
 8002ea4:	f7fe fa38 	bl	8001318 <HAL_GetTick>
 8002ea8:	4602      	mov	r2, r0
 8002eaa:	697b      	ldr	r3, [r7, #20]
 8002eac:	1ad3      	subs	r3, r2, r3
 8002eae:	2b02      	cmp	r3, #2
 8002eb0:	d901      	bls.n	8002eb6 <HAL_RCC_OscConfig+0x622>
        {
          return HAL_TIMEOUT;
 8002eb2:	2303      	movs	r3, #3
 8002eb4:	e120      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8002eb6:	4b56      	ldr	r3, [pc, #344]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002eb8:	681b      	ldr	r3, [r3, #0]
 8002eba:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002ebe:	2b00      	cmp	r3, #0
 8002ec0:	d1f0      	bne.n	8002ea4 <HAL_RCC_OscConfig+0x610>

  /*-------------------------------- PLL1 Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(pOscInitStruct->PLL.PLLState));

  if ((pOscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ec6:	2b00      	cmp	r3, #0
 8002ec8:	f000 8115 	beq.w	80030f6 <HAL_RCC_OscConfig+0x862>
  {
    /* Check if the PLL1 is used as system clock or not */
    if (temp_sysclksrc != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002ecc:	69fb      	ldr	r3, [r7, #28]
 8002ece:	2b18      	cmp	r3, #24
 8002ed0:	f000 80af 	beq.w	8003032 <HAL_RCC_OscConfig+0x79e>
    {
      if ((pOscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ed8:	2b02      	cmp	r3, #2
 8002eda:	f040 8086 	bne.w	8002fea <HAL_RCC_OscConfig+0x756>
        assert_param(IS_RCC_PLL1_DIVP_VALUE(pOscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLL1_DIVQ_VALUE(pOscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLL1_DIVR_VALUE(pOscInitStruct->PLL.PLLR));

        /* Disable the PLL1. */
        __HAL_RCC_PLL1_DISABLE();
 8002ede:	4b4c      	ldr	r3, [pc, #304]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	4a4b      	ldr	r2, [pc, #300]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002ee4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002ee8:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002eea:	f7fe fa15 	bl	8001318 <HAL_GetTick>
 8002eee:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8002ef0:	e008      	b.n	8002f04 <HAL_RCC_OscConfig+0x670>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 8002ef2:	f7fe fa11 	bl	8001318 <HAL_GetTick>
 8002ef6:	4602      	mov	r2, r0
 8002ef8:	697b      	ldr	r3, [r7, #20]
 8002efa:	1ad3      	subs	r3, r2, r3
 8002efc:	2b02      	cmp	r3, #2
 8002efe:	d901      	bls.n	8002f04 <HAL_RCC_OscConfig+0x670>
          {
            return HAL_TIMEOUT;
 8002f00:	2303      	movs	r3, #3
 8002f02:	e0f9      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8002f04:	4b42      	ldr	r3, [pc, #264]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	d1f0      	bne.n	8002ef2 <HAL_RCC_OscConfig+0x65e>
          }
        }

        /* Configure the PLL1 clock source, multiplication and division factors. */
        __HAL_RCC_PLL1_CONFIG(pOscInitStruct->PLL.PLLSource,
 8002f10:	4b3f      	ldr	r3, [pc, #252]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f14:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8002f18:	f023 0303 	bic.w	r3, r3, #3
 8002f1c:	687a      	ldr	r2, [r7, #4]
 8002f1e:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002f20:	687a      	ldr	r2, [r7, #4]
 8002f22:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002f24:	0212      	lsls	r2, r2, #8
 8002f26:	430a      	orrs	r2, r1
 8002f28:	4939      	ldr	r1, [pc, #228]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f2a:	4313      	orrs	r3, r2
 8002f2c:	628b      	str	r3, [r1, #40]	@ 0x28
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f32:	3b01      	subs	r3, #1
 8002f34:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002f3c:	3b01      	subs	r3, #1
 8002f3e:	025b      	lsls	r3, r3, #9
 8002f40:	b29b      	uxth	r3, r3
 8002f42:	431a      	orrs	r2, r3
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002f48:	3b01      	subs	r3, #1
 8002f4a:	041b      	lsls	r3, r3, #16
 8002f4c:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8002f50:	431a      	orrs	r2, r3
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f56:	3b01      	subs	r3, #1
 8002f58:	061b      	lsls	r3, r3, #24
 8002f5a:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8002f5e:	492c      	ldr	r1, [pc, #176]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f60:	4313      	orrs	r3, r2
 8002f62:	634b      	str	r3, [r1, #52]	@ 0x34
                              pOscInitStruct->PLL.PLLR);

        assert_param(IS_RCC_PLL1_FRACN_VALUE(pOscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_DISABLE();
 8002f64:	4b2a      	ldr	r3, [pc, #168]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f66:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f68:	4a29      	ldr	r2, [pc, #164]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f6a:	f023 0310 	bic.w	r3, r3, #16
 8002f6e:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Configure PLL  PLL1FRACN */
        __HAL_RCC_PLL1_FRACN_CONFIG(pOscInitStruct->PLL.PLLFRACN);
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002f74:	4a26      	ldr	r2, [pc, #152]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f76:	00db      	lsls	r3, r3, #3
 8002f78:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_ENABLE();
 8002f7a:	4b25      	ldr	r3, [pc, #148]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f7e:	4a24      	ldr	r2, [pc, #144]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f80:	f043 0310 	orr.w	r3, r3, #16
 8002f84:	6293      	str	r3, [r2, #40]	@ 0x28

        assert_param(IS_RCC_PLL1_VCIRGE_VALUE(pOscInitStruct->PLL.PLLRGE));

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL1_VCIRANGE(pOscInitStruct->PLL.PLLRGE) ;
 8002f86:	4b22      	ldr	r3, [pc, #136]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f8a:	f023 020c 	bic.w	r2, r3, #12
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f92:	491f      	ldr	r1, [pc, #124]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f94:	4313      	orrs	r3, r2
 8002f96:	628b      	str	r3, [r1, #40]	@ 0x28

        assert_param(IS_RCC_PLL1_VCORGE_VALUE(pOscInitStruct->PLL.PLLVCOSEL));

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL1_VCORANGE(pOscInitStruct->PLL.PLLVCOSEL) ;
 8002f98:	4b1d      	ldr	r3, [pc, #116]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002f9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f9c:	f023 0220 	bic.w	r2, r3, #32
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8002fa4:	491a      	ldr	r1, [pc, #104]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fa6:	4313      	orrs	r3, r2
 8002fa8:	628b      	str	r3, [r1, #40]	@ 0x28

        /* Enable PLL1 System Clock output. */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVP);
 8002faa:	4b19      	ldr	r3, [pc, #100]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fae:	4a18      	ldr	r2, [pc, #96]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fb0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002fb4:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Enable the PLL1. */
        __HAL_RCC_PLL1_ENABLE();
 8002fb6:	4b16      	ldr	r3, [pc, #88]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	4a15      	ldr	r2, [pc, #84]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fbc:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8002fc0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002fc2:	f7fe f9a9 	bl	8001318 <HAL_GetTick>
 8002fc6:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is ready */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8002fc8:	e008      	b.n	8002fdc <HAL_RCC_OscConfig+0x748>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 8002fca:	f7fe f9a5 	bl	8001318 <HAL_GetTick>
 8002fce:	4602      	mov	r2, r0
 8002fd0:	697b      	ldr	r3, [r7, #20]
 8002fd2:	1ad3      	subs	r3, r2, r3
 8002fd4:	2b02      	cmp	r3, #2
 8002fd6:	d901      	bls.n	8002fdc <HAL_RCC_OscConfig+0x748>
          {
            return HAL_TIMEOUT;
 8002fd8:	2303      	movs	r3, #3
 8002fda:	e08d      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8002fdc:	4b0c      	ldr	r3, [pc, #48]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fe4:	2b00      	cmp	r3, #0
 8002fe6:	d0f0      	beq.n	8002fca <HAL_RCC_OscConfig+0x736>
 8002fe8:	e085      	b.n	80030f6 <HAL_RCC_OscConfig+0x862>
        }
      }
      else
      {
        /* Disable the PLL1. */
        __HAL_RCC_PLL1_DISABLE();
 8002fea:	4b09      	ldr	r3, [pc, #36]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	4a08      	ldr	r2, [pc, #32]	@ (8003010 <HAL_RCC_OscConfig+0x77c>)
 8002ff0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002ff4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002ff6:	f7fe f98f 	bl	8001318 <HAL_GetTick>
 8002ffa:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8002ffc:	e00a      	b.n	8003014 <HAL_RCC_OscConfig+0x780>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 8002ffe:	f7fe f98b 	bl	8001318 <HAL_GetTick>
 8003002:	4602      	mov	r2, r0
 8003004:	697b      	ldr	r3, [r7, #20]
 8003006:	1ad3      	subs	r3, r2, r3
 8003008:	2b02      	cmp	r3, #2
 800300a:	d903      	bls.n	8003014 <HAL_RCC_OscConfig+0x780>
          {
            return HAL_TIMEOUT;
 800300c:	2303      	movs	r3, #3
 800300e:	e073      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
 8003010:	44020c00 	.word	0x44020c00
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8003014:	4b3a      	ldr	r3, [pc, #232]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800301c:	2b00      	cmp	r3, #0
 800301e:	d1ee      	bne.n	8002ffe <HAL_RCC_OscConfig+0x76a>
          }
        }

        /* Unselect PLL1 clock source and disable all PLL1 outputs to save power */
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 8003020:	4b37      	ldr	r3, [pc, #220]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 8003022:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003024:	4a36      	ldr	r2, [pc, #216]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 8003026:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 800302a:	f023 0303 	bic.w	r3, r3, #3
 800302e:	6293      	str	r3, [r2, #40]	@ 0x28
 8003030:	e061      	b.n	80030f6 <HAL_RCC_OscConfig+0x862>
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLL1CFGR;
 8003032:	4b33      	ldr	r3, [pc, #204]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 8003034:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003036:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8003038:	4b31      	ldr	r3, [pc, #196]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 800303a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800303c:	60fb      	str	r3, [r7, #12]
      if (((pOscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003042:	2b01      	cmp	r3, #1
 8003044:	d031      	beq.n	80030aa <HAL_RCC_OscConfig+0x816>
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pOscInitStruct->PLL.PLLSource) ||
 8003046:	693b      	ldr	r3, [r7, #16]
 8003048:	f003 0203 	and.w	r2, r3, #3
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
      if (((pOscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8003050:	429a      	cmp	r2, r3
 8003052:	d12a      	bne.n	80030aa <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 8003054:	693b      	ldr	r3, [r7, #16]
 8003056:	0a1b      	lsrs	r3, r3, #8
 8003058:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            RCC_PLL1CFGR_PLL1M_Pos) != (pOscInitStruct->PLL.PLLM)) ||
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pOscInitStruct->PLL.PLLSource) ||
 8003060:	429a      	cmp	r2, r3
 8003062:	d122      	bne.n	80030aa <HAL_RCC_OscConfig+0x816>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pOscInitStruct->PLL.PLLN - 1U)) ||
 8003064:	68fb      	ldr	r3, [r7, #12]
 8003066:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800306e:	3b01      	subs	r3, #1
            RCC_PLL1CFGR_PLL1M_Pos) != (pOscInitStruct->PLL.PLLM)) ||
 8003070:	429a      	cmp	r2, r3
 8003072:	d11a      	bne.n	80030aa <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	0a5b      	lsrs	r3, r3, #9
 8003078:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1P_Pos) != (pOscInitStruct->PLL.PLLP - 1U)) ||
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003080:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pOscInitStruct->PLL.PLLN - 1U)) ||
 8003082:	429a      	cmp	r2, r3
 8003084:	d111      	bne.n	80030aa <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 8003086:	68fb      	ldr	r3, [r7, #12]
 8003088:	0c1b      	lsrs	r3, r3, #16
 800308a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1Q_Pos) != (pOscInitStruct->PLL.PLLQ - 1U)) ||
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003092:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pOscInitStruct->PLL.PLLP - 1U)) ||
 8003094:	429a      	cmp	r2, r3
 8003096:	d108      	bne.n	80030aa <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	0e1b      	lsrs	r3, r3, #24
 800309c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1R_Pos) != (pOscInitStruct->PLL.PLLR - 1U)))
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80030a4:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pOscInitStruct->PLL.PLLQ - 1U)) ||
 80030a6:	429a      	cmp	r2, r3
 80030a8:	d001      	beq.n	80030ae <HAL_RCC_OscConfig+0x81a>
      {
        return HAL_ERROR;
 80030aa:	2301      	movs	r3, #1
 80030ac:	e024      	b.n	80030f8 <HAL_RCC_OscConfig+0x864>
      }

      /* FRACN1 on-the-fly value update */
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 80030ae:	4b14      	ldr	r3, [pc, #80]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80030b2:	08db      	lsrs	r3, r3, #3
 80030b4:	f3c3 020c 	ubfx	r2, r3, #0, #13
           RCC_PLL1FRACR_PLL1FRACN_Pos) != (pOscInitStruct->PLL.PLLFRACN))
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 80030bc:	429a      	cmp	r2, r3
 80030be:	d01a      	beq.n	80030f6 <HAL_RCC_OscConfig+0x862>
      {
        assert_param(IS_RCC_PLL1_FRACN_VALUE(pOscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_DISABLE();
 80030c0:	4b0f      	ldr	r3, [pc, #60]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80030c4:	4a0e      	ldr	r2, [pc, #56]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030c6:	f023 0310 	bic.w	r3, r3, #16
 80030ca:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80030cc:	f7fe f924 	bl	8001318 <HAL_GetTick>
 80030d0:	6178      	str	r0, [r7, #20]

        /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value
           will be taken into account. */
        while ((HAL_GetTick() - tickstart) < RCC_PLL_FRAC_WAIT_VALUE)
 80030d2:	bf00      	nop
 80030d4:	f7fe f920 	bl	8001318 <HAL_GetTick>
 80030d8:	4602      	mov	r2, r0
 80030da:	697b      	ldr	r3, [r7, #20]
 80030dc:	4293      	cmp	r3, r2
 80030de:	d0f9      	beq.n	80030d4 <HAL_RCC_OscConfig+0x840>
        {
        }

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLL1_FRACN_CONFIG(pOscInitStruct->PLL.PLLFRACN);
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80030e4:	4a06      	ldr	r2, [pc, #24]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030e6:	00db      	lsls	r3, r3, #3
 80030e8:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN to latch the new value. */
        __HAL_RCC_PLL1_FRACN_ENABLE();
 80030ea:	4b05      	ldr	r3, [pc, #20]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80030ee:	4a04      	ldr	r2, [pc, #16]	@ (8003100 <HAL_RCC_OscConfig+0x86c>)
 80030f0:	f043 0310 	orr.w	r3, r3, #16
 80030f4:	6293      	str	r3, [r2, #40]	@ 0x28
      }

    }
  }
  return HAL_OK;
 80030f6:	2300      	movs	r3, #0
}
 80030f8:	4618      	mov	r0, r3
 80030fa:	3720      	adds	r7, #32
 80030fc:	46bd      	mov	sp, r7
 80030fe:	bd80      	pop	{r7, pc}
 8003100:	44020c00 	.word	0x44020c00

08003104 <HAL_RCC_ClockConfig>:
  *         currently used as system clock source.
  *
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef  *pClkInitStruct, uint32_t FLatency)
{
 8003104:	b580      	push	{r7, lr}
 8003106:	b084      	sub	sp, #16
 8003108:	af00      	add	r7, sp, #0
 800310a:	6078      	str	r0, [r7, #4]
 800310c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;

  /* Check Null pointer */
  if (pClkInitStruct == NULL)
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	2b00      	cmp	r3, #0
 8003112:	d101      	bne.n	8003118 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003114:	2301      	movs	r3, #1
 8003116:	e19e      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8003118:	4b83      	ldr	r3, [pc, #524]	@ (8003328 <HAL_RCC_ClockConfig+0x224>)
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	f003 030f 	and.w	r3, r3, #15
 8003120:	683a      	ldr	r2, [r7, #0]
 8003122:	429a      	cmp	r2, r3
 8003124:	d910      	bls.n	8003148 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003126:	4b80      	ldr	r3, [pc, #512]	@ (8003328 <HAL_RCC_ClockConfig+0x224>)
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f023 020f 	bic.w	r2, r3, #15
 800312e:	497e      	ldr	r1, [pc, #504]	@ (8003328 <HAL_RCC_ClockConfig+0x224>)
 8003130:	683b      	ldr	r3, [r7, #0]
 8003132:	4313      	orrs	r3, r2
 8003134:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003136:	4b7c      	ldr	r3, [pc, #496]	@ (8003328 <HAL_RCC_ClockConfig+0x224>)
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	f003 030f 	and.w	r3, r3, #15
 800313e:	683a      	ldr	r2, [r7, #0]
 8003140:	429a      	cmp	r2, r3
 8003142:	d001      	beq.n	8003148 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8003144:	2301      	movs	r3, #1
 8003146:	e186      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
    }
  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	f003 0310 	and.w	r3, r3, #16
 8003150:	2b00      	cmp	r3, #0
 8003152:	d012      	beq.n	800317a <HAL_RCC_ClockConfig+0x76>
  {
    if ((pClkInitStruct->APB3CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE3) >> 8))
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	695a      	ldr	r2, [r3, #20]
 8003158:	4b74      	ldr	r3, [pc, #464]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 800315a:	6a1b      	ldr	r3, [r3, #32]
 800315c:	0a1b      	lsrs	r3, r3, #8
 800315e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003162:	429a      	cmp	r2, r3
 8003164:	d909      	bls.n	800317a <HAL_RCC_ClockConfig+0x76>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE3, ((pClkInitStruct->APB3CLKDivider) << 8));
 8003166:	4b71      	ldr	r3, [pc, #452]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003168:	6a1b      	ldr	r3, [r3, #32]
 800316a:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	695b      	ldr	r3, [r3, #20]
 8003172:	021b      	lsls	r3, r3, #8
 8003174:	496d      	ldr	r1, [pc, #436]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003176:	4313      	orrs	r3, r2
 8003178:	620b      	str	r3, [r1, #32]
    }
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	f003 0308 	and.w	r3, r3, #8
 8003182:	2b00      	cmp	r3, #0
 8003184:	d012      	beq.n	80031ac <HAL_RCC_ClockConfig+0xa8>
  {
    if ((pClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	691a      	ldr	r2, [r3, #16]
 800318a:	4b68      	ldr	r3, [pc, #416]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 800318c:	6a1b      	ldr	r3, [r3, #32]
 800318e:	091b      	lsrs	r3, r3, #4
 8003190:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003194:	429a      	cmp	r2, r3
 8003196:	d909      	bls.n	80031ac <HAL_RCC_ClockConfig+0xa8>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pClkInitStruct->APB2CLKDivider) << 4));
 8003198:	4b64      	ldr	r3, [pc, #400]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 800319a:	6a1b      	ldr	r3, [r3, #32]
 800319c:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	691b      	ldr	r3, [r3, #16]
 80031a4:	011b      	lsls	r3, r3, #4
 80031a6:	4961      	ldr	r1, [pc, #388]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031a8:	4313      	orrs	r3, r2
 80031aa:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	f003 0304 	and.w	r3, r3, #4
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d010      	beq.n	80031da <HAL_RCC_ClockConfig+0xd6>
  {
    if ((pClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	68da      	ldr	r2, [r3, #12]
 80031bc:	4b5b      	ldr	r3, [pc, #364]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031be:	6a1b      	ldr	r3, [r3, #32]
 80031c0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80031c4:	429a      	cmp	r2, r3
 80031c6:	d908      	bls.n	80031da <HAL_RCC_ClockConfig+0xd6>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pClkInitStruct->APB1CLKDivider);
 80031c8:	4b58      	ldr	r3, [pc, #352]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031ca:	6a1b      	ldr	r3, [r3, #32]
 80031cc:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	68db      	ldr	r3, [r3, #12]
 80031d4:	4955      	ldr	r1, [pc, #340]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031d6:	4313      	orrs	r3, r2
 80031d8:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	f003 0302 	and.w	r3, r3, #2
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d010      	beq.n	8003208 <HAL_RCC_ClockConfig+0x104>
  {
    if ((pClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	689a      	ldr	r2, [r3, #8]
 80031ea:	4b50      	ldr	r3, [pc, #320]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031ec:	6a1b      	ldr	r3, [r3, #32]
 80031ee:	f003 030f 	and.w	r3, r3, #15
 80031f2:	429a      	cmp	r2, r3
 80031f4:	d908      	bls.n	8003208 <HAL_RCC_ClockConfig+0x104>
    {
      assert_param(IS_RCC_HCLK(pClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pClkInitStruct->AHBCLKDivider);
 80031f6:	4b4d      	ldr	r3, [pc, #308]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80031f8:	6a1b      	ldr	r3, [r3, #32]
 80031fa:	f023 020f 	bic.w	r2, r3, #15
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	689b      	ldr	r3, [r3, #8]
 8003202:	494a      	ldr	r1, [pc, #296]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003204:	4313      	orrs	r3, r2
 8003206:	620b      	str	r3, [r1, #32]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	f003 0301 	and.w	r3, r3, #1
 8003210:	2b00      	cmp	r3, #0
 8003212:	f000 8093 	beq.w	800333c <HAL_RCC_ClockConfig+0x238>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(pClkInitStruct->SYSCLKSource));

    /* PLL is selected as System Clock Source */
    if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	685b      	ldr	r3, [r3, #4]
 800321a:	2b03      	cmp	r3, #3
 800321c:	d107      	bne.n	800322e <HAL_RCC_ClockConfig+0x12a>
    {
      /* Check the PLL ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 800321e:	4b43      	ldr	r3, [pc, #268]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003226:	2b00      	cmp	r3, #0
 8003228:	d121      	bne.n	800326e <HAL_RCC_ClockConfig+0x16a>
      {
        return HAL_ERROR;
 800322a:	2301      	movs	r3, #1
 800322c:	e113      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
      }
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	685b      	ldr	r3, [r3, #4]
 8003232:	2b02      	cmp	r3, #2
 8003234:	d107      	bne.n	8003246 <HAL_RCC_ClockConfig+0x142>
      {
        /* Check the HSE ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8003236:	4b3d      	ldr	r3, [pc, #244]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800323e:	2b00      	cmp	r3, #0
 8003240:	d115      	bne.n	800326e <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 8003242:	2301      	movs	r3, #1
 8003244:	e107      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
        }
      }
      /* CSI is selected as System Clock Source */
      else if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	685b      	ldr	r3, [r3, #4]
 800324a:	2b01      	cmp	r3, #1
 800324c:	d107      	bne.n	800325e <HAL_RCC_ClockConfig+0x15a>
      {
        /* Check the CSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 800324e:	4b37      	ldr	r3, [pc, #220]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003256:	2b00      	cmp	r3, #0
 8003258:	d109      	bne.n	800326e <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 800325a:	2301      	movs	r3, #1
 800325c:	e0fb      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800325e:	4b33      	ldr	r3, [pc, #204]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	f003 0302 	and.w	r3, r3, #2
 8003266:	2b00      	cmp	r3, #0
 8003268:	d101      	bne.n	800326e <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 800326a:	2301      	movs	r3, #1
 800326c:	e0f3      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
        }
      }
    }

    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pClkInitStruct->SYSCLKSource);
 800326e:	4b2f      	ldr	r3, [pc, #188]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003270:	69db      	ldr	r3, [r3, #28]
 8003272:	f023 0203 	bic.w	r2, r3, #3
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	685b      	ldr	r3, [r3, #4]
 800327a:	492c      	ldr	r1, [pc, #176]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 800327c:	4313      	orrs	r3, r2
 800327e:	61cb      	str	r3, [r1, #28]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8003280:	f7fe f84a 	bl	8001318 <HAL_GetTick>
 8003284:	60f8      	str	r0, [r7, #12]

    if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	685b      	ldr	r3, [r3, #4]
 800328a:	2b03      	cmp	r3, #3
 800328c:	d112      	bne.n	80032b4 <HAL_RCC_ClockConfig+0x1b0>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800328e:	e00a      	b.n	80032a6 <HAL_RCC_ClockConfig+0x1a2>
      {
        if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 8003290:	f7fe f842 	bl	8001318 <HAL_GetTick>
 8003294:	4602      	mov	r2, r0
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	1ad3      	subs	r3, r2, r3
 800329a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800329e:	4293      	cmp	r3, r2
 80032a0:	d901      	bls.n	80032a6 <HAL_RCC_ClockConfig+0x1a2>
        {
          return HAL_TIMEOUT;
 80032a2:	2303      	movs	r3, #3
 80032a4:	e0d7      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80032a6:	4b21      	ldr	r3, [pc, #132]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80032a8:	69db      	ldr	r3, [r3, #28]
 80032aa:	f003 0318 	and.w	r3, r3, #24
 80032ae:	2b18      	cmp	r3, #24
 80032b0:	d1ee      	bne.n	8003290 <HAL_RCC_ClockConfig+0x18c>
 80032b2:	e043      	b.n	800333c <HAL_RCC_ClockConfig+0x238>
        }
      }
    }
    else
    {
      if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	685b      	ldr	r3, [r3, #4]
 80032b8:	2b02      	cmp	r3, #2
 80032ba:	d112      	bne.n	80032e2 <HAL_RCC_ClockConfig+0x1de>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80032bc:	e00a      	b.n	80032d4 <HAL_RCC_ClockConfig+0x1d0>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 80032be:	f7fe f82b 	bl	8001318 <HAL_GetTick>
 80032c2:	4602      	mov	r2, r0
 80032c4:	68fb      	ldr	r3, [r7, #12]
 80032c6:	1ad3      	subs	r3, r2, r3
 80032c8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80032cc:	4293      	cmp	r3, r2
 80032ce:	d901      	bls.n	80032d4 <HAL_RCC_ClockConfig+0x1d0>
          {
            return HAL_TIMEOUT;
 80032d0:	2303      	movs	r3, #3
 80032d2:	e0c0      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80032d4:	4b15      	ldr	r3, [pc, #84]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 80032d6:	69db      	ldr	r3, [r3, #28]
 80032d8:	f003 0318 	and.w	r3, r3, #24
 80032dc:	2b10      	cmp	r3, #16
 80032de:	d1ee      	bne.n	80032be <HAL_RCC_ClockConfig+0x1ba>
 80032e0:	e02c      	b.n	800333c <HAL_RCC_ClockConfig+0x238>
          }
        }
      }
      else if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	685b      	ldr	r3, [r3, #4]
 80032e6:	2b01      	cmp	r3, #1
 80032e8:	d122      	bne.n	8003330 <HAL_RCC_ClockConfig+0x22c>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_CSI)
 80032ea:	e00a      	b.n	8003302 <HAL_RCC_ClockConfig+0x1fe>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 80032ec:	f7fe f814 	bl	8001318 <HAL_GetTick>
 80032f0:	4602      	mov	r2, r0
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	1ad3      	subs	r3, r2, r3
 80032f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80032fa:	4293      	cmp	r3, r2
 80032fc:	d901      	bls.n	8003302 <HAL_RCC_ClockConfig+0x1fe>
          {
            return HAL_TIMEOUT;
 80032fe:	2303      	movs	r3, #3
 8003300:	e0a9      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_CSI)
 8003302:	4b0a      	ldr	r3, [pc, #40]	@ (800332c <HAL_RCC_ClockConfig+0x228>)
 8003304:	69db      	ldr	r3, [r3, #28]
 8003306:	f003 0318 	and.w	r3, r3, #24
 800330a:	2b08      	cmp	r3, #8
 800330c:	d1ee      	bne.n	80032ec <HAL_RCC_ClockConfig+0x1e8>
 800330e:	e015      	b.n	800333c <HAL_RCC_ClockConfig+0x238>
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 8003310:	f7fe f802 	bl	8001318 <HAL_GetTick>
 8003314:	4602      	mov	r2, r0
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	1ad3      	subs	r3, r2, r3
 800331a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800331e:	4293      	cmp	r3, r2
 8003320:	d906      	bls.n	8003330 <HAL_RCC_ClockConfig+0x22c>
          {
            return HAL_TIMEOUT;
 8003322:	2303      	movs	r3, #3
 8003324:	e097      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
 8003326:	bf00      	nop
 8003328:	40022000 	.word	0x40022000
 800332c:	44020c00 	.word	0x44020c00
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003330:	4b4b      	ldr	r3, [pc, #300]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 8003332:	69db      	ldr	r3, [r3, #28]
 8003334:	f003 0318 	and.w	r3, r3, #24
 8003338:	2b00      	cmp	r3, #0
 800333a:	d1e9      	bne.n	8003310 <HAL_RCC_ClockConfig+0x20c>
    }
  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	f003 0302 	and.w	r3, r3, #2
 8003344:	2b00      	cmp	r3, #0
 8003346:	d010      	beq.n	800336a <HAL_RCC_ClockConfig+0x266>
  {
    if ((pClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	689a      	ldr	r2, [r3, #8]
 800334c:	4b44      	ldr	r3, [pc, #272]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 800334e:	6a1b      	ldr	r3, [r3, #32]
 8003350:	f003 030f 	and.w	r3, r3, #15
 8003354:	429a      	cmp	r2, r3
 8003356:	d208      	bcs.n	800336a <HAL_RCC_ClockConfig+0x266>
    {
      assert_param(IS_RCC_HCLK(pClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pClkInitStruct->AHBCLKDivider);
 8003358:	4b41      	ldr	r3, [pc, #260]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 800335a:	6a1b      	ldr	r3, [r3, #32]
 800335c:	f023 020f 	bic.w	r2, r3, #15
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	689b      	ldr	r3, [r3, #8]
 8003364:	493e      	ldr	r1, [pc, #248]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 8003366:	4313      	orrs	r3, r2
 8003368:	620b      	str	r3, [r1, #32]
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800336a:	4b3e      	ldr	r3, [pc, #248]	@ (8003464 <HAL_RCC_ClockConfig+0x360>)
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f003 030f 	and.w	r3, r3, #15
 8003372:	683a      	ldr	r2, [r7, #0]
 8003374:	429a      	cmp	r2, r3
 8003376:	d210      	bcs.n	800339a <HAL_RCC_ClockConfig+0x296>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003378:	4b3a      	ldr	r3, [pc, #232]	@ (8003464 <HAL_RCC_ClockConfig+0x360>)
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	f023 020f 	bic.w	r2, r3, #15
 8003380:	4938      	ldr	r1, [pc, #224]	@ (8003464 <HAL_RCC_ClockConfig+0x360>)
 8003382:	683b      	ldr	r3, [r7, #0]
 8003384:	4313      	orrs	r3, r2
 8003386:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003388:	4b36      	ldr	r3, [pc, #216]	@ (8003464 <HAL_RCC_ClockConfig+0x360>)
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	f003 030f 	and.w	r3, r3, #15
 8003390:	683a      	ldr	r2, [r7, #0]
 8003392:	429a      	cmp	r2, r3
 8003394:	d001      	beq.n	800339a <HAL_RCC_ClockConfig+0x296>
    {
      return HAL_ERROR;
 8003396:	2301      	movs	r3, #1
 8003398:	e05d      	b.n	8003456 <HAL_RCC_ClockConfig+0x352>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	f003 0304 	and.w	r3, r3, #4
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d010      	beq.n	80033c8 <HAL_RCC_ClockConfig+0x2c4>
  {
    if ((pClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	68da      	ldr	r2, [r3, #12]
 80033aa:	4b2d      	ldr	r3, [pc, #180]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033ac:	6a1b      	ldr	r3, [r3, #32]
 80033ae:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80033b2:	429a      	cmp	r2, r3
 80033b4:	d208      	bcs.n	80033c8 <HAL_RCC_ClockConfig+0x2c4>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pClkInitStruct->APB1CLKDivider);
 80033b6:	4b2a      	ldr	r3, [pc, #168]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033b8:	6a1b      	ldr	r3, [r3, #32]
 80033ba:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	68db      	ldr	r3, [r3, #12]
 80033c2:	4927      	ldr	r1, [pc, #156]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033c4:	4313      	orrs	r3, r2
 80033c6:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	f003 0308 	and.w	r3, r3, #8
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d012      	beq.n	80033fa <HAL_RCC_ClockConfig+0x2f6>
  {
    if ((pClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	691a      	ldr	r2, [r3, #16]
 80033d8:	4b21      	ldr	r3, [pc, #132]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033da:	6a1b      	ldr	r3, [r3, #32]
 80033dc:	091b      	lsrs	r3, r3, #4
 80033de:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80033e2:	429a      	cmp	r2, r3
 80033e4:	d209      	bcs.n	80033fa <HAL_RCC_ClockConfig+0x2f6>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pClkInitStruct->APB2CLKDivider) << 4));
 80033e6:	4b1e      	ldr	r3, [pc, #120]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033e8:	6a1b      	ldr	r3, [r3, #32]
 80033ea:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	691b      	ldr	r3, [r3, #16]
 80033f2:	011b      	lsls	r3, r3, #4
 80033f4:	491a      	ldr	r1, [pc, #104]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 80033f6:	4313      	orrs	r3, r2
 80033f8:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	681b      	ldr	r3, [r3, #0]
 80033fe:	f003 0310 	and.w	r3, r3, #16
 8003402:	2b00      	cmp	r3, #0
 8003404:	d012      	beq.n	800342c <HAL_RCC_ClockConfig+0x328>
  {
    if ((pClkInitStruct->APB3CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE3) >> 8))
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	695a      	ldr	r2, [r3, #20]
 800340a:	4b15      	ldr	r3, [pc, #84]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 800340c:	6a1b      	ldr	r3, [r3, #32]
 800340e:	0a1b      	lsrs	r3, r3, #8
 8003410:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003414:	429a      	cmp	r2, r3
 8003416:	d209      	bcs.n	800342c <HAL_RCC_ClockConfig+0x328>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE3, ((pClkInitStruct->APB3CLKDivider) << 8));
 8003418:	4b11      	ldr	r3, [pc, #68]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 800341a:	6a1b      	ldr	r3, [r3, #32]
 800341c:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	695b      	ldr	r3, [r3, #20]
 8003424:	021b      	lsls	r3, r3, #8
 8003426:	490e      	ldr	r1, [pc, #56]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 8003428:	4313      	orrs	r3, r2
 800342a:	620b      	str	r3, [r1, #32]
    }
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 800342c:	f000 f822 	bl	8003474 <HAL_RCC_GetSysClockFreq>
 8003430:	4602      	mov	r2, r0
 8003432:	4b0b      	ldr	r3, [pc, #44]	@ (8003460 <HAL_RCC_ClockConfig+0x35c>)
 8003434:	6a1b      	ldr	r3, [r3, #32]
 8003436:	f003 030f 	and.w	r3, r3, #15
 800343a:	490b      	ldr	r1, [pc, #44]	@ (8003468 <HAL_RCC_ClockConfig+0x364>)
 800343c:	5ccb      	ldrb	r3, [r1, r3]
 800343e:	fa22 f303 	lsr.w	r3, r2, r3
 8003442:	4a0a      	ldr	r2, [pc, #40]	@ (800346c <HAL_RCC_ClockConfig+0x368>)
 8003444:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 8003446:	4b0a      	ldr	r3, [pc, #40]	@ (8003470 <HAL_RCC_ClockConfig+0x36c>)
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	4618      	mov	r0, r3
 800344c:	f7fd fcee 	bl	8000e2c <HAL_InitTick>
 8003450:	4603      	mov	r3, r0
 8003452:	72fb      	strb	r3, [r7, #11]

  return halstatus;
 8003454:	7afb      	ldrb	r3, [r7, #11]
}
 8003456:	4618      	mov	r0, r3
 8003458:	3710      	adds	r7, #16
 800345a:	46bd      	mov	sp, r7
 800345c:	bd80      	pop	{r7, pc}
 800345e:	bf00      	nop
 8003460:	44020c00 	.word	0x44020c00
 8003464:	40022000 	.word	0x40022000
 8003468:	080231b8 	.word	0x080231b8
 800346c:	20000004 	.word	0x20000004
 8003470:	20000008 	.word	0x20000008

08003474 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003474:	b480      	push	{r7}
 8003476:	b089      	sub	sp, #36	@ 0x24
 8003478:	af00      	add	r7, sp, #0
  uint32_t sysclockfreq;
  uint32_t hsivalue;
  float_t fracn1;
  float_t pllvco;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_CSI)
 800347a:	4b8c      	ldr	r3, [pc, #560]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 800347c:	69db      	ldr	r3, [r3, #28]
 800347e:	f003 0318 	and.w	r3, r3, #24
 8003482:	2b08      	cmp	r3, #8
 8003484:	d102      	bne.n	800348c <HAL_RCC_GetSysClockFreq+0x18>
  {
    /* CSI used as system clock  source */
    sysclockfreq = CSI_VALUE;
 8003486:	4b8a      	ldr	r3, [pc, #552]	@ (80036b0 <HAL_RCC_GetSysClockFreq+0x23c>)
 8003488:	61fb      	str	r3, [r7, #28]
 800348a:	e107      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800348c:	4b87      	ldr	r3, [pc, #540]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 800348e:	69db      	ldr	r3, [r3, #28]
 8003490:	f003 0318 	and.w	r3, r3, #24
 8003494:	2b00      	cmp	r3, #0
 8003496:	d112      	bne.n	80034be <HAL_RCC_GetSysClockFreq+0x4a>
  {
    /* HSI used as system clock source */
    if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIVF) != 0U)
 8003498:	4b84      	ldr	r3, [pc, #528]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	f003 0320 	and.w	r3, r3, #32
 80034a0:	2b00      	cmp	r3, #0
 80034a2:	d009      	beq.n	80034b8 <HAL_RCC_GetSysClockFreq+0x44>
    {
      sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> RCC_CR_HSIDIV_Pos));
 80034a4:	4b81      	ldr	r3, [pc, #516]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	08db      	lsrs	r3, r3, #3
 80034aa:	f003 0303 	and.w	r3, r3, #3
 80034ae:	4a81      	ldr	r2, [pc, #516]	@ (80036b4 <HAL_RCC_GetSysClockFreq+0x240>)
 80034b0:	fa22 f303 	lsr.w	r3, r2, r3
 80034b4:	61fb      	str	r3, [r7, #28]
 80034b6:	e0f1      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
    }
    else
    {
      sysclockfreq = (uint32_t) HSI_VALUE;
 80034b8:	4b7e      	ldr	r3, [pc, #504]	@ (80036b4 <HAL_RCC_GetSysClockFreq+0x240>)
 80034ba:	61fb      	str	r3, [r7, #28]
 80034bc:	e0ee      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
    }
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80034be:	4b7b      	ldr	r3, [pc, #492]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034c0:	69db      	ldr	r3, [r3, #28]
 80034c2:	f003 0318 	and.w	r3, r3, #24
 80034c6:	2b10      	cmp	r3, #16
 80034c8:	d102      	bne.n	80034d0 <HAL_RCC_GetSysClockFreq+0x5c>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 80034ca:	4b7b      	ldr	r3, [pc, #492]	@ (80036b8 <HAL_RCC_GetSysClockFreq+0x244>)
 80034cc:	61fb      	str	r3, [r7, #28]
 80034ce:	e0e5      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
  }

  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80034d0:	4b76      	ldr	r3, [pc, #472]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034d2:	69db      	ldr	r3, [r3, #28]
 80034d4:	f003 0318 	and.w	r3, r3, #24
 80034d8:	2b18      	cmp	r3, #24
 80034da:	f040 80dd 	bne.w	8003698 <HAL_RCC_GetSysClockFreq+0x224>
    /* PLL used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 80034de:	4b73      	ldr	r3, [pc, #460]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034e2:	f003 0303 	and.w	r3, r3, #3
 80034e6:	617b      	str	r3, [r7, #20]
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos);
 80034e8:	4b70      	ldr	r3, [pc, #448]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034ec:	0a1b      	lsrs	r3, r3, #8
 80034ee:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80034f2:	613b      	str	r3, [r7, #16]
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 80034f4:	4b6d      	ldr	r3, [pc, #436]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80034f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80034f8:	091b      	lsrs	r3, r3, #4
 80034fa:	f003 0301 	and.w	r3, r3, #1
 80034fe:	60fb      	str	r3, [r7, #12]
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & \
 8003500:	4b6a      	ldr	r3, [pc, #424]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 8003502:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
                                               RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos));
 8003504:	08db      	lsrs	r3, r3, #3
 8003506:	f3c3 030c 	ubfx	r3, r3, #0, #13
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & \
 800350a:	68fa      	ldr	r2, [r7, #12]
 800350c:	fb02 f303 	mul.w	r3, r2, r3
 8003510:	ee07 3a90 	vmov	s15, r3
 8003514:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003518:	edc7 7a02 	vstr	s15, [r7, #8]

    if (pllm != 0U)
 800351c:	693b      	ldr	r3, [r7, #16]
 800351e:	2b00      	cmp	r3, #0
 8003520:	f000 80b7 	beq.w	8003692 <HAL_RCC_GetSysClockFreq+0x21e>
    {
      switch (pllsource)
 8003524:	697b      	ldr	r3, [r7, #20]
 8003526:	2b01      	cmp	r3, #1
 8003528:	d003      	beq.n	8003532 <HAL_RCC_GetSysClockFreq+0xbe>
 800352a:	697b      	ldr	r3, [r7, #20]
 800352c:	2b03      	cmp	r3, #3
 800352e:	d056      	beq.n	80035de <HAL_RCC_GetSysClockFreq+0x16a>
 8003530:	e077      	b.n	8003622 <HAL_RCC_GetSysClockFreq+0x1ae>
      {
        case RCC_PLL1_SOURCE_HSI:  /* HSI used as PLL1 clock source */

          if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIVF) != 0U)
 8003532:	4b5e      	ldr	r3, [pc, #376]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	f003 0320 	and.w	r3, r3, #32
 800353a:	2b00      	cmp	r3, #0
 800353c:	d02d      	beq.n	800359a <HAL_RCC_GetSysClockFreq+0x126>
          {
            hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> RCC_CR_HSIDIV_Pos));
 800353e:	4b5b      	ldr	r3, [pc, #364]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	08db      	lsrs	r3, r3, #3
 8003544:	f003 0303 	and.w	r3, r3, #3
 8003548:	4a5a      	ldr	r2, [pc, #360]	@ (80036b4 <HAL_RCC_GetSysClockFreq+0x240>)
 800354a:	fa22 f303 	lsr.w	r3, r2, r3
 800354e:	607b      	str	r3, [r7, #4]
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	ee07 3a90 	vmov	s15, r3
 8003556:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800355a:	693b      	ldr	r3, [r7, #16]
 800355c:	ee07 3a90 	vmov	s15, r3
 8003560:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003564:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003568:	4b50      	ldr	r3, [pc, #320]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 800356a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800356c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003570:	ee07 3a90 	vmov	s15, r3
 8003574:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                            (fracn1 / (float_t)0x2000) + (float_t)1);
 8003578:	ed97 6a02 	vldr	s12, [r7, #8]
 800357c:	eddf 5a4f 	vldr	s11, [pc, #316]	@ 80036bc <HAL_RCC_GetSysClockFreq+0x248>
 8003580:	eec6 7a25 	vdiv.f32	s15, s12, s11
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003584:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                            (fracn1 / (float_t)0x2000) + (float_t)1);
 8003588:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800358c:	ee77 7aa6 	vadd.f32	s15, s15, s13
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003590:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003594:	edc7 7a06 	vstr	s15, [r7, #24]
          {
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
          }

          break;
 8003598:	e065      	b.n	8003666 <HAL_RCC_GetSysClockFreq+0x1f2>
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800359a:	693b      	ldr	r3, [r7, #16]
 800359c:	ee07 3a90 	vmov	s15, r3
 80035a0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80035a4:	eddf 6a46 	vldr	s13, [pc, #280]	@ 80036c0 <HAL_RCC_GetSysClockFreq+0x24c>
 80035a8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80035ac:	4b3f      	ldr	r3, [pc, #252]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80035ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80035b0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80035b4:	ee07 3a90 	vmov	s15, r3
 80035b8:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
 80035bc:	ed97 6a02 	vldr	s12, [r7, #8]
 80035c0:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 80036bc <HAL_RCC_GetSysClockFreq+0x248>
 80035c4:	eec6 7a25 	vdiv.f32	s15, s12, s11
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035c8:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
 80035cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80035d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035d4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80035d8:	edc7 7a06 	vstr	s15, [r7, #24]
          break;
 80035dc:	e043      	b.n	8003666 <HAL_RCC_GetSysClockFreq+0x1f2>

        case RCC_PLL1_SOURCE_HSE:  /* HSE used as PLL1 clock source */
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035de:	693b      	ldr	r3, [r7, #16]
 80035e0:	ee07 3a90 	vmov	s15, r3
 80035e4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80035e8:	eddf 6a36 	vldr	s13, [pc, #216]	@ 80036c4 <HAL_RCC_GetSysClockFreq+0x250>
 80035ec:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80035f0:	4b2e      	ldr	r3, [pc, #184]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 80035f2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80035f4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80035f8:	ee07 3a90 	vmov	s15, r3
 80035fc:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 8003600:	ed97 6a02 	vldr	s12, [r7, #8]
 8003604:	eddf 5a2d 	vldr	s11, [pc, #180]	@ 80036bc <HAL_RCC_GetSysClockFreq+0x248>
 8003608:	eec6 7a25 	vdiv.f32	s15, s12, s11
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800360c:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 8003610:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8003614:	ee77 7aa6 	vadd.f32	s15, s15, s13
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003618:	ee67 7a27 	vmul.f32	s15, s14, s15
 800361c:	edc7 7a06 	vstr	s15, [r7, #24]

          break;
 8003620:	e021      	b.n	8003666 <HAL_RCC_GetSysClockFreq+0x1f2>

        case RCC_PLL1_SOURCE_CSI:  /* CSI used as PLL1 clock source */
        default:
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003622:	693b      	ldr	r3, [r7, #16]
 8003624:	ee07 3a90 	vmov	s15, r3
 8003628:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800362c:	eddf 6a26 	vldr	s13, [pc, #152]	@ 80036c8 <HAL_RCC_GetSysClockFreq+0x254>
 8003630:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003634:	4b1d      	ldr	r3, [pc, #116]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 8003636:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003638:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800363c:	ee07 3a90 	vmov	s15, r3
 8003640:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 8003644:	ed97 6a02 	vldr	s12, [r7, #8]
 8003648:	eddf 5a1c 	vldr	s11, [pc, #112]	@ 80036bc <HAL_RCC_GetSysClockFreq+0x248>
 800364c:	eec6 7a25 	vdiv.f32	s15, s12, s11
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003650:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 8003654:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8003658:	ee77 7aa6 	vadd.f32	s15, s15, s13
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800365c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003660:	edc7 7a06 	vstr	s15, [r7, #24]
          break;
 8003664:	bf00      	nop
      }

      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) + 1U) ;
 8003666:	4b11      	ldr	r3, [pc, #68]	@ (80036ac <HAL_RCC_GetSysClockFreq+0x238>)
 8003668:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800366a:	0a5b      	lsrs	r3, r3, #9
 800366c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003670:	3301      	adds	r3, #1
 8003672:	603b      	str	r3, [r7, #0]
      sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8003674:	683b      	ldr	r3, [r7, #0]
 8003676:	ee07 3a90 	vmov	s15, r3
 800367a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800367e:	edd7 6a06 	vldr	s13, [r7, #24]
 8003682:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003686:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800368a:	ee17 3a90 	vmov	r3, s15
 800368e:	61fb      	str	r3, [r7, #28]
 8003690:	e004      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
    }
    else
    {
      sysclockfreq = 0;
 8003692:	2300      	movs	r3, #0
 8003694:	61fb      	str	r3, [r7, #28]
 8003696:	e001      	b.n	800369c <HAL_RCC_GetSysClockFreq+0x228>
  }

  else
  {
    /* HSI is the default system clock source */
    sysclockfreq = (uint32_t) HSI_VALUE;
 8003698:	4b06      	ldr	r3, [pc, #24]	@ (80036b4 <HAL_RCC_GetSysClockFreq+0x240>)
 800369a:	61fb      	str	r3, [r7, #28]
  }

  return sysclockfreq;
 800369c:	69fb      	ldr	r3, [r7, #28]
}
 800369e:	4618      	mov	r0, r3
 80036a0:	3724      	adds	r7, #36	@ 0x24
 80036a2:	46bd      	mov	sp, r7
 80036a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a8:	4770      	bx	lr
 80036aa:	bf00      	nop
 80036ac:	44020c00 	.word	0x44020c00
 80036b0:	003d0900 	.word	0x003d0900
 80036b4:	03d09000 	.word	0x03d09000
 80036b8:	007a1200 	.word	0x007a1200
 80036bc:	46000000 	.word	0x46000000
 80036c0:	4c742400 	.word	0x4c742400
 80036c4:	4af42400 	.word	0x4af42400
 80036c8:	4a742400 	.word	0x4a742400

080036cc <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80036cc:	b580      	push	{r7, lr}
 80036ce:	af00      	add	r7, sp, #0

  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 80036d0:	f7ff fed0 	bl	8003474 <HAL_RCC_GetSysClockFreq>
 80036d4:	4602      	mov	r2, r0
 80036d6:	4b08      	ldr	r3, [pc, #32]	@ (80036f8 <HAL_RCC_GetHCLKFreq+0x2c>)
 80036d8:	6a1b      	ldr	r3, [r3, #32]
                                                                >> RCC_CFGR2_HPRE_Pos] & 0x1FU);
 80036da:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 80036de:	4907      	ldr	r1, [pc, #28]	@ (80036fc <HAL_RCC_GetHCLKFreq+0x30>)
 80036e0:	5ccb      	ldrb	r3, [r1, r3]
                                                                >> RCC_CFGR2_HPRE_Pos] & 0x1FU);
 80036e2:	f003 031f 	and.w	r3, r3, #31
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 80036e6:	fa22 f303 	lsr.w	r3, r2, r3
 80036ea:	4a05      	ldr	r2, [pc, #20]	@ (8003700 <HAL_RCC_GetHCLKFreq+0x34>)
 80036ec:	6013      	str	r3, [r2, #0]

  return SystemCoreClock;
 80036ee:	4b04      	ldr	r3, [pc, #16]	@ (8003700 <HAL_RCC_GetHCLKFreq+0x34>)
 80036f0:	681b      	ldr	r3, [r3, #0]
}
 80036f2:	4618      	mov	r0, r3
 80036f4:	bd80      	pop	{r7, pc}
 80036f6:	bf00      	nop
 80036f8:	44020c00 	.word	0x44020c00
 80036fc:	080231b8 	.word	0x080231b8
 8003700:	20000004 	.word	0x20000004

08003704 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003704:	b580      	push	{r7, lr}
 8003706:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]) & 0x1FU));
 8003708:	f7ff ffe0 	bl	80036cc <HAL_RCC_GetHCLKFreq>
 800370c:	4602      	mov	r2, r0
 800370e:	4b06      	ldr	r3, [pc, #24]	@ (8003728 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003710:	6a1b      	ldr	r3, [r3, #32]
 8003712:	091b      	lsrs	r3, r3, #4
 8003714:	f003 0307 	and.w	r3, r3, #7
 8003718:	4904      	ldr	r1, [pc, #16]	@ (800372c <HAL_RCC_GetPCLK1Freq+0x28>)
 800371a:	5ccb      	ldrb	r3, [r1, r3]
 800371c:	f003 031f 	and.w	r3, r3, #31
 8003720:	fa22 f303 	lsr.w	r3, r2, r3
}
 8003724:	4618      	mov	r0, r3
 8003726:	bd80      	pop	{r7, pc}
 8003728:	44020c00 	.word	0x44020c00
 800372c:	080231c8 	.word	0x080231c8

08003730 <HAL_RCC_GetClockConfig>:
  *         will be configured.
  * @param  pFLatency  Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *pClkInitStruct, uint32_t *pFLatency)
{
 8003730:	b480      	push	{r7}
 8003732:	b085      	sub	sp, #20
 8003734:	af00      	add	r7, sp, #0
 8003736:	6078      	str	r0, [r7, #4]
 8003738:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(pClkInitStruct != (void *)NULL);
  assert_param(pFLatency != (void *)NULL);

  /* Set all possible values for the Clock type parameter --------------------*/
  pClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2 | \
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	221f      	movs	r2, #31
 800373e:	601a      	str	r2, [r3, #0]
                              RCC_CLOCKTYPE_PCLK3;

  /* Get the SYSCLK configuration --------------------------------------------*/
  pClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 8003740:	4b15      	ldr	r3, [pc, #84]	@ (8003798 <HAL_RCC_GetClockConfig+0x68>)
 8003742:	69db      	ldr	r3, [r3, #28]
 8003744:	f003 0203 	and.w	r2, r3, #3
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  regval = RCC->CFGR2;
 800374c:	4b12      	ldr	r3, [pc, #72]	@ (8003798 <HAL_RCC_GetClockConfig+0x68>)
 800374e:	6a1b      	ldr	r3, [r3, #32]
 8003750:	60fb      	str	r3, [r7, #12]
  pClkInitStruct->AHBCLKDivider = (uint32_t)(regval & RCC_CFGR2_HPRE);
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	f003 020f 	and.w	r2, r3, #15
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  pClkInitStruct->APB1CLKDivider = (uint32_t)(regval & RCC_CFGR2_PPRE1);
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  pClkInitStruct->APB2CLKDivider = (uint32_t)((regval & RCC_CFGR2_PPRE2) >> 4);
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	091b      	lsrs	r3, r3, #4
 800376a:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	611a      	str	r2, [r3, #16]

  /* Get the APB3 configuration ----------------------------------------------*/
  pClkInitStruct->APB3CLKDivider = (uint32_t)((regval & RCC_CFGR2_PPRE3) >> 8);
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	0a1b      	lsrs	r3, r3, #8
 8003776:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	615a      	str	r2, [r3, #20]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800377e:	4b07      	ldr	r3, [pc, #28]	@ (800379c <HAL_RCC_GetClockConfig+0x6c>)
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	f003 020f 	and.w	r2, r3, #15
 8003786:	683b      	ldr	r3, [r7, #0]
 8003788:	601a      	str	r2, [r3, #0]
}
 800378a:	bf00      	nop
 800378c:	3714      	adds	r7, #20
 800378e:	46bd      	mov	sp, r7
 8003790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003794:	4770      	bx	lr
 8003796:	bf00      	nop
 8003798:	44020c00 	.word	0x44020c00
 800379c:	40022000 	.word	0x40022000

080037a0 <HAL_RCCEx_PeriphCLKConfig>:
  *  (*)   : For stm32h56xxx and stm32h57xxx family lines only.
  *  (**)  : For stm32h563xx and stm32h57xxx family lines only.
  *  (***) : For stm32h503xx family line only.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(const RCC_PeriphCLKInitTypeDef  *pPeriphClkInit)
{
 80037a0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80037a4:	b0d8      	sub	sp, #352	@ 0x160
 80037a6:	af00      	add	r7, sp, #0
 80037a8:	f8c7 014c 	str.w	r0, [r7, #332]	@ 0x14c
  uint32_t tmpregister;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 80037ac:	2300      	movs	r3, #0
 80037ae:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 80037b2:	2300      	movs	r3, #0
 80037b4:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(pPeriphClkInit->PeriphClockSelection));

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 80037b8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80037bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037c0:	f002 7480 	and.w	r4, r2, #16777216	@ 0x1000000
 80037c4:	2500      	movs	r5, #0
 80037c6:	ea54 0305 	orrs.w	r3, r4, r5
 80037ca:	d00b      	beq.n	80037e4 <HAL_RCCEx_PeriphCLKConfig+0x44>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(pPeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(pPeriphClkInit->CkperClockSelection);
 80037cc:	4bcd      	ldr	r3, [pc, #820]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80037ce:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80037d2:	f023 4140 	bic.w	r1, r3, #3221225472	@ 0xc0000000
 80037d6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80037da:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80037dc:	4ac9      	ldr	r2, [pc, #804]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80037de:	430b      	orrs	r3, r1
 80037e0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80037e4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80037e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037ec:	f002 0801 	and.w	r8, r2, #1
 80037f0:	f04f 0900 	mov.w	r9, #0
 80037f4:	ea58 0309 	orrs.w	r3, r8, r9
 80037f8:	d042      	beq.n	8003880 <HAL_RCCEx_PeriphCLKConfig+0xe0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(pPeriphClkInit->Usart1ClockSelection));

    switch (pPeriphClkInit->Usart1ClockSelection)
 80037fa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80037fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003800:	2b05      	cmp	r3, #5
 8003802:	d823      	bhi.n	800384c <HAL_RCCEx_PeriphCLKConfig+0xac>
 8003804:	a201      	add	r2, pc, #4	@ (adr r2, 800380c <HAL_RCCEx_PeriphCLKConfig+0x6c>)
 8003806:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800380a:	bf00      	nop
 800380c:	08003855 	.word	0x08003855
 8003810:	08003825 	.word	0x08003825
 8003814:	08003839 	.word	0x08003839
 8003818:	08003855 	.word	0x08003855
 800381c:	08003855 	.word	0x08003855
 8003820:	08003855 	.word	0x08003855
        /* USART1 clock source config set later after clock selection check */
        break;

      case RCC_USART1CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART1*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003824:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003828:	3308      	adds	r3, #8
 800382a:	4618      	mov	r0, r3
 800382c:	f001 ff42 	bl	80056b4 <RCCEx_PLL2_Config>
 8003830:	4603      	mov	r3, r0
 8003832:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART1 clock source config set later after clock selection check */
        break;
 8003836:	e00e      	b.n	8003856 <HAL_RCCEx_PeriphCLKConfig+0xb6>
#if defined(RCC_USART1CLKSOURCE_PLL3Q)
      case RCC_USART1CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART1*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003838:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800383c:	3330      	adds	r3, #48	@ 0x30
 800383e:	4618      	mov	r0, r3
 8003840:	f001 ffd0 	bl	80057e4 <RCCEx_PLL3_Config>
 8003844:	4603      	mov	r3, r0
 8003846:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART1 clock source config set later after clock selection check */
        break;
 800384a:	e004      	b.n	8003856 <HAL_RCCEx_PeriphCLKConfig+0xb6>
      case RCC_USART1CLKSOURCE_LSE:      /* LSE clock is used as source of USART1 clock*/
        /* USART1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800384c:	2301      	movs	r3, #1
 800384e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003852:	e000      	b.n	8003856 <HAL_RCCEx_PeriphCLKConfig+0xb6>
        break;
 8003854:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003856:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800385a:	2b00      	cmp	r3, #0
 800385c:	d10c      	bne.n	8003878 <HAL_RCCEx_PeriphCLKConfig+0xd8>
    {
      /* Set the source of USART1 clock*/
      __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 800385e:	4ba9      	ldr	r3, [pc, #676]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003860:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003864:	f023 0107 	bic.w	r1, r3, #7
 8003868:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800386c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800386e:	4aa5      	ldr	r2, [pc, #660]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003870:	430b      	orrs	r3, r1
 8003872:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003876:	e003      	b.n	8003880 <HAL_RCCEx_PeriphCLKConfig+0xe0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003878:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800387c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8003880:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003884:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003888:	f002 0a02 	and.w	sl, r2, #2
 800388c:	f04f 0b00 	mov.w	fp, #0
 8003890:	ea5a 030b 	orrs.w	r3, sl, fp
 8003894:	f000 8088 	beq.w	80039a8 <HAL_RCCEx_PeriphCLKConfig+0x208>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(pPeriphClkInit->Usart2ClockSelection));

    switch (pPeriphClkInit->Usart2ClockSelection)
 8003898:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800389c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800389e:	2b28      	cmp	r3, #40	@ 0x28
 80038a0:	d868      	bhi.n	8003974 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80038a2:	a201      	add	r2, pc, #4	@ (adr r2, 80038a8 <HAL_RCCEx_PeriphCLKConfig+0x108>)
 80038a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038a8:	0800397d 	.word	0x0800397d
 80038ac:	08003975 	.word	0x08003975
 80038b0:	08003975 	.word	0x08003975
 80038b4:	08003975 	.word	0x08003975
 80038b8:	08003975 	.word	0x08003975
 80038bc:	08003975 	.word	0x08003975
 80038c0:	08003975 	.word	0x08003975
 80038c4:	08003975 	.word	0x08003975
 80038c8:	0800394d 	.word	0x0800394d
 80038cc:	08003975 	.word	0x08003975
 80038d0:	08003975 	.word	0x08003975
 80038d4:	08003975 	.word	0x08003975
 80038d8:	08003975 	.word	0x08003975
 80038dc:	08003975 	.word	0x08003975
 80038e0:	08003975 	.word	0x08003975
 80038e4:	08003975 	.word	0x08003975
 80038e8:	08003961 	.word	0x08003961
 80038ec:	08003975 	.word	0x08003975
 80038f0:	08003975 	.word	0x08003975
 80038f4:	08003975 	.word	0x08003975
 80038f8:	08003975 	.word	0x08003975
 80038fc:	08003975 	.word	0x08003975
 8003900:	08003975 	.word	0x08003975
 8003904:	08003975 	.word	0x08003975
 8003908:	0800397d 	.word	0x0800397d
 800390c:	08003975 	.word	0x08003975
 8003910:	08003975 	.word	0x08003975
 8003914:	08003975 	.word	0x08003975
 8003918:	08003975 	.word	0x08003975
 800391c:	08003975 	.word	0x08003975
 8003920:	08003975 	.word	0x08003975
 8003924:	08003975 	.word	0x08003975
 8003928:	0800397d 	.word	0x0800397d
 800392c:	08003975 	.word	0x08003975
 8003930:	08003975 	.word	0x08003975
 8003934:	08003975 	.word	0x08003975
 8003938:	08003975 	.word	0x08003975
 800393c:	08003975 	.word	0x08003975
 8003940:	08003975 	.word	0x08003975
 8003944:	08003975 	.word	0x08003975
 8003948:	0800397d 	.word	0x0800397d
        /* USART2 clock source config set later after clock selection check */
        break;

      case RCC_USART2CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART2*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800394c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003950:	3308      	adds	r3, #8
 8003952:	4618      	mov	r0, r3
 8003954:	f001 feae 	bl	80056b4 <RCCEx_PLL2_Config>
 8003958:	4603      	mov	r3, r0
 800395a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART2 clock source config set later after clock selection check */
        break;
 800395e:	e00e      	b.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x1de>

#if defined(RCC_USART2CLKSOURCE_PLL3Q)
      case RCC_USART2CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART2*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003960:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003964:	3330      	adds	r3, #48	@ 0x30
 8003966:	4618      	mov	r0, r3
 8003968:	f001 ff3c 	bl	80057e4 <RCCEx_PLL3_Config>
 800396c:	4603      	mov	r3, r0
 800396e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART2 clock source config set later after clock selection check */
        break;
 8003972:	e004      	b.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x1de>
      case RCC_USART2CLKSOURCE_LSE:      /* LSE clock is used as source of USART2 clock*/
        /* USART2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003974:	2301      	movs	r3, #1
 8003976:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800397a:	e000      	b.n	800397e <HAL_RCCEx_PeriphCLKConfig+0x1de>
        break;
 800397c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800397e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003982:	2b00      	cmp	r3, #0
 8003984:	d10c      	bne.n	80039a0 <HAL_RCCEx_PeriphCLKConfig+0x200>
    {
      /* Set the source of USART2 clock*/
      __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 8003986:	4b5f      	ldr	r3, [pc, #380]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003988:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800398c:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 8003990:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003994:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003996:	4a5b      	ldr	r2, [pc, #364]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003998:	430b      	orrs	r3, r1
 800399a:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 800399e:	e003      	b.n	80039a8 <HAL_RCCEx_PeriphCLKConfig+0x208>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80039a0:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80039a4:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- USART3 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 80039a8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80039ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039b0:	f002 0304 	and.w	r3, r2, #4
 80039b4:	f8c7 3140 	str.w	r3, [r7, #320]	@ 0x140
 80039b8:	2300      	movs	r3, #0
 80039ba:	f8c7 3144 	str.w	r3, [r7, #324]	@ 0x144
 80039be:	e9d7 1250 	ldrd	r1, r2, [r7, #320]	@ 0x140
 80039c2:	460b      	mov	r3, r1
 80039c4:	4313      	orrs	r3, r2
 80039c6:	d04e      	beq.n	8003a66 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(pPeriphClkInit->Usart3ClockSelection));

    switch (pPeriphClkInit->Usart3ClockSelection)
 80039c8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80039cc:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80039ce:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80039d2:	d02c      	beq.n	8003a2e <HAL_RCCEx_PeriphCLKConfig+0x28e>
 80039d4:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 80039d8:	d825      	bhi.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x286>
 80039da:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80039de:	d028      	beq.n	8003a32 <HAL_RCCEx_PeriphCLKConfig+0x292>
 80039e0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80039e4:	d81f      	bhi.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x286>
 80039e6:	2bc0      	cmp	r3, #192	@ 0xc0
 80039e8:	d025      	beq.n	8003a36 <HAL_RCCEx_PeriphCLKConfig+0x296>
 80039ea:	2bc0      	cmp	r3, #192	@ 0xc0
 80039ec:	d81b      	bhi.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x286>
 80039ee:	2b80      	cmp	r3, #128	@ 0x80
 80039f0:	d00f      	beq.n	8003a12 <HAL_RCCEx_PeriphCLKConfig+0x272>
 80039f2:	2b80      	cmp	r3, #128	@ 0x80
 80039f4:	d817      	bhi.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x286>
 80039f6:	2b00      	cmp	r3, #0
 80039f8:	d01f      	beq.n	8003a3a <HAL_RCCEx_PeriphCLKConfig+0x29a>
 80039fa:	2b40      	cmp	r3, #64	@ 0x40
 80039fc:	d113      	bne.n	8003a26 <HAL_RCCEx_PeriphCLKConfig+0x286>
        /* USART3 clock source config set later after clock selection check */
        break;

      case RCC_USART3CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART3*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80039fe:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a02:	3308      	adds	r3, #8
 8003a04:	4618      	mov	r0, r3
 8003a06:	f001 fe55 	bl	80056b4 <RCCEx_PLL2_Config>
 8003a0a:	4603      	mov	r3, r0
 8003a0c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART3 clock source config set later after clock selection check */
        break;
 8003a10:	e014      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>

#if defined(RCC_USART3CLKSOURCE_PLL3Q)
      case RCC_USART3CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART3*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003a12:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a16:	3330      	adds	r3, #48	@ 0x30
 8003a18:	4618      	mov	r0, r3
 8003a1a:	f001 fee3 	bl	80057e4 <RCCEx_PLL3_Config>
 8003a1e:	4603      	mov	r3, r0
 8003a20:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART3 clock source config set later after clock selection check */
        break;
 8003a24:	e00a      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>
      case RCC_USART3CLKSOURCE_LSE:      /* LSE clock is used as source of USART3 clock*/
        /* USART3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003a26:	2301      	movs	r3, #1
 8003a28:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003a2c:	e006      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a2e:	bf00      	nop
 8003a30:	e004      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a32:	bf00      	nop
 8003a34:	e002      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a36:	bf00      	nop
 8003a38:	e000      	b.n	8003a3c <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a3a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003a3c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d10c      	bne.n	8003a5e <HAL_RCCEx_PeriphCLKConfig+0x2be>
    {
      /* Set the source of USART3 clock*/
      __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8003a44:	4b2f      	ldr	r3, [pc, #188]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003a46:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003a4a:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8003a4e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a52:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003a54:	4a2b      	ldr	r2, [pc, #172]	@ (8003b04 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003a56:	430b      	orrs	r3, r1
 8003a58:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003a5c:	e003      	b.n	8003a66 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003a5e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003a62:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(UART4)
  /*-------------------------- UART4 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8003a66:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a6e:	f002 0308 	and.w	r3, r2, #8
 8003a72:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 8003a76:	2300      	movs	r3, #0
 8003a78:	f8c7 313c 	str.w	r3, [r7, #316]	@ 0x13c
 8003a7c:	e9d7 124e 	ldrd	r1, r2, [r7, #312]	@ 0x138
 8003a80:	460b      	mov	r3, r1
 8003a82:	4313      	orrs	r3, r2
 8003a84:	d056      	beq.n	8003b34 <HAL_RCCEx_PeriphCLKConfig+0x394>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(pPeriphClkInit->Uart4ClockSelection));

    switch (pPeriphClkInit->Uart4ClockSelection)
 8003a86:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a8a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003a8c:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 8003a90:	d031      	beq.n	8003af6 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8003a92:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 8003a96:	d82a      	bhi.n	8003aee <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003a98:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003a9c:	d02d      	beq.n	8003afa <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8003a9e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003aa2:	d824      	bhi.n	8003aee <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003aa4:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8003aa8:	d029      	beq.n	8003afe <HAL_RCCEx_PeriphCLKConfig+0x35e>
 8003aaa:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8003aae:	d81e      	bhi.n	8003aee <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003ab0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003ab4:	d011      	beq.n	8003ada <HAL_RCCEx_PeriphCLKConfig+0x33a>
 8003ab6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003aba:	d818      	bhi.n	8003aee <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	d023      	beq.n	8003b08 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8003ac0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003ac4:	d113      	bne.n	8003aee <HAL_RCCEx_PeriphCLKConfig+0x34e>
        /* UART4 clock source config set later after clock selection check */
        break;

      case RCC_UART4CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART4*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003ac6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003aca:	3308      	adds	r3, #8
 8003acc:	4618      	mov	r0, r3
 8003ace:	f001 fdf1 	bl	80056b4 <RCCEx_PLL2_Config>
 8003ad2:	4603      	mov	r3, r0
 8003ad4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART4 clock source config set later after clock selection check */
        break;
 8003ad8:	e017      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>

      case RCC_UART4CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART4*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003ada:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ade:	3330      	adds	r3, #48	@ 0x30
 8003ae0:	4618      	mov	r0, r3
 8003ae2:	f001 fe7f 	bl	80057e4 <RCCEx_PLL3_Config>
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART4 clock source config set later after clock selection check */
        break;
 8003aec:	e00d      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>
      case RCC_UART4CLKSOURCE_LSE:      /* LSE clock is used as source of UART4 clock*/
        /* UART4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003aee:	2301      	movs	r3, #1
 8003af0:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003af4:	e009      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003af6:	bf00      	nop
 8003af8:	e007      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003afa:	bf00      	nop
 8003afc:	e005      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003afe:	bf00      	nop
 8003b00:	e003      	b.n	8003b0a <HAL_RCCEx_PeriphCLKConfig+0x36a>
 8003b02:	bf00      	nop
 8003b04:	44020c00 	.word	0x44020c00
        break;
 8003b08:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003b0a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d10c      	bne.n	8003b2c <HAL_RCCEx_PeriphCLKConfig+0x38c>
    {
      /* Set the source of UART4 clock*/
      __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 8003b12:	4bbb      	ldr	r3, [pc, #748]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003b14:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003b18:	f423 6160 	bic.w	r1, r3, #3584	@ 0xe00
 8003b1c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b20:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003b22:	4ab7      	ldr	r2, [pc, #732]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003b24:	430b      	orrs	r3, r1
 8003b26:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003b2a:	e003      	b.n	8003b34 <HAL_RCCEx_PeriphCLKConfig+0x394>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003b2c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003b30:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART4 */

#if defined(UART5)
  /*-------------------------- UART5 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8003b34:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b3c:	f002 0310 	and.w	r3, r2, #16
 8003b40:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 8003b44:	2300      	movs	r3, #0
 8003b46:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 8003b4a:	e9d7 124c 	ldrd	r1, r2, [r7, #304]	@ 0x130
 8003b4e:	460b      	mov	r3, r1
 8003b50:	4313      	orrs	r3, r2
 8003b52:	d053      	beq.n	8003bfc <HAL_RCCEx_PeriphCLKConfig+0x45c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(pPeriphClkInit->Uart5ClockSelection));

    switch (pPeriphClkInit->Uart5ClockSelection)
 8003b54:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b58:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003b5a:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8003b5e:	d031      	beq.n	8003bc4 <HAL_RCCEx_PeriphCLKConfig+0x424>
 8003b60:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8003b64:	d82a      	bhi.n	8003bbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003b66:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003b6a:	d02d      	beq.n	8003bc8 <HAL_RCCEx_PeriphCLKConfig+0x428>
 8003b6c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003b70:	d824      	bhi.n	8003bbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003b72:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8003b76:	d029      	beq.n	8003bcc <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8003b78:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8003b7c:	d81e      	bhi.n	8003bbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003b7e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003b82:	d011      	beq.n	8003ba8 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8003b84:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003b88:	d818      	bhi.n	8003bbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d020      	beq.n	8003bd0 <HAL_RCCEx_PeriphCLKConfig+0x430>
 8003b8e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003b92:	d113      	bne.n	8003bbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
        /* UART5 clock source config set later after clock selection check */
        break;

      case RCC_UART5CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART5*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003b94:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b98:	3308      	adds	r3, #8
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	f001 fd8a 	bl	80056b4 <RCCEx_PLL2_Config>
 8003ba0:	4603      	mov	r3, r0
 8003ba2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART5 clock source config set later after clock selection check */
        break;
 8003ba6:	e014      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>

      case RCC_UART5CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART5*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003ba8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003bac:	3330      	adds	r3, #48	@ 0x30
 8003bae:	4618      	mov	r0, r3
 8003bb0:	f001 fe18 	bl	80057e4 <RCCEx_PLL3_Config>
 8003bb4:	4603      	mov	r3, r0
 8003bb6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART5 clock source config set later after clock selection check */
        break;
 8003bba:	e00a      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>
      case RCC_UART5CLKSOURCE_LSE:      /* LSE clock is used as source of UART5 clock*/
        /* UART5 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003bbc:	2301      	movs	r3, #1
 8003bbe:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003bc2:	e006      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003bc4:	bf00      	nop
 8003bc6:	e004      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003bc8:	bf00      	nop
 8003bca:	e002      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003bcc:	bf00      	nop
 8003bce:	e000      	b.n	8003bd2 <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003bd0:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003bd2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d10c      	bne.n	8003bf4 <HAL_RCCEx_PeriphCLKConfig+0x454>
    {
      /* Set the source of UART5 clock*/
      __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 8003bda:	4b89      	ldr	r3, [pc, #548]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003bdc:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003be0:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8003be4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003be8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003bea:	4a85      	ldr	r2, [pc, #532]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003bec:	430b      	orrs	r3, r1
 8003bee:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003bf2:	e003      	b.n	8003bfc <HAL_RCCEx_PeriphCLKConfig+0x45c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003bf4:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003bf8:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART5 */

#if defined(USART6)
  /*-------------------------- USART6 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8003bfc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c04:	f002 0320 	and.w	r3, r2, #32
 8003c08:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 8003c12:	e9d7 124a 	ldrd	r1, r2, [r7, #296]	@ 0x128
 8003c16:	460b      	mov	r3, r1
 8003c18:	4313      	orrs	r3, r2
 8003c1a:	d053      	beq.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x524>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(pPeriphClkInit->Usart6ClockSelection));

    switch (pPeriphClkInit->Usart6ClockSelection)
 8003c1c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c22:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8003c26:	d031      	beq.n	8003c8c <HAL_RCCEx_PeriphCLKConfig+0x4ec>
 8003c28:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8003c2c:	d82a      	bhi.n	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c2e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8003c32:	d02d      	beq.n	8003c90 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8003c34:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8003c38:	d824      	bhi.n	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c3a:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8003c3e:	d029      	beq.n	8003c94 <HAL_RCCEx_PeriphCLKConfig+0x4f4>
 8003c40:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8003c44:	d81e      	bhi.n	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c46:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003c4a:	d011      	beq.n	8003c70 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8003c4c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003c50:	d818      	bhi.n	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d020      	beq.n	8003c98 <HAL_RCCEx_PeriphCLKConfig+0x4f8>
 8003c56:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003c5a:	d113      	bne.n	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        /* USART6 clock source config set later after clock selection check */
        break;

      case RCC_USART6CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART6*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003c5c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c60:	3308      	adds	r3, #8
 8003c62:	4618      	mov	r0, r3
 8003c64:	f001 fd26 	bl	80056b4 <RCCEx_PLL2_Config>
 8003c68:	4603      	mov	r3, r0
 8003c6a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART6 clock source config set later after clock selection check */
        break;
 8003c6e:	e014      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>

      case RCC_USART6CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART6*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003c70:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c74:	3330      	adds	r3, #48	@ 0x30
 8003c76:	4618      	mov	r0, r3
 8003c78:	f001 fdb4 	bl	80057e4 <RCCEx_PLL3_Config>
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART6 clock source config set later after clock selection check */
        break;
 8003c82:	e00a      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      case RCC_USART6CLKSOURCE_LSE:      /* LSE clock is used as source of USART6 clock*/
        /* USART6 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003c84:	2301      	movs	r3, #1
 8003c86:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003c8a:	e006      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003c8c:	bf00      	nop
 8003c8e:	e004      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003c90:	bf00      	nop
 8003c92:	e002      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003c94:	bf00      	nop
 8003c96:	e000      	b.n	8003c9a <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003c98:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003c9a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	d10c      	bne.n	8003cbc <HAL_RCCEx_PeriphCLKConfig+0x51c>
    {
      /* Set the source of USART6 clock*/
      __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8003ca2:	4b57      	ldr	r3, [pc, #348]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003ca4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003ca8:	f423 3160 	bic.w	r1, r3, #229376	@ 0x38000
 8003cac:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003cb0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003cb2:	4a53      	ldr	r2, [pc, #332]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003cb4:	430b      	orrs	r3, r1
 8003cb6:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003cba:	e003      	b.n	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x524>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003cbc:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003cc0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USART6 */

#if defined(UART7)
  /*-------------------------- UART7 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8003cc4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003cc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ccc:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8003cd0:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 8003cd4:	2300      	movs	r3, #0
 8003cd6:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 8003cda:	e9d7 1248 	ldrd	r1, r2, [r7, #288]	@ 0x120
 8003cde:	460b      	mov	r3, r1
 8003ce0:	4313      	orrs	r3, r2
 8003ce2:	d053      	beq.n	8003d8c <HAL_RCCEx_PeriphCLKConfig+0x5ec>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(pPeriphClkInit->Uart7ClockSelection));

    switch (pPeriphClkInit->Uart7ClockSelection)
 8003ce4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ce8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003cea:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8003cee:	d031      	beq.n	8003d54 <HAL_RCCEx_PeriphCLKConfig+0x5b4>
 8003cf0:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8003cf4:	d82a      	bhi.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003cf6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8003cfa:	d02d      	beq.n	8003d58 <HAL_RCCEx_PeriphCLKConfig+0x5b8>
 8003cfc:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8003d00:	d824      	bhi.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d02:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003d06:	d029      	beq.n	8003d5c <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 8003d08:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003d0c:	d81e      	bhi.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d0e:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8003d12:	d011      	beq.n	8003d38 <HAL_RCCEx_PeriphCLKConfig+0x598>
 8003d14:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8003d18:	d818      	bhi.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d1a:	2b00      	cmp	r3, #0
 8003d1c:	d020      	beq.n	8003d60 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8003d1e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8003d22:	d113      	bne.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        /* UART7 clock source config set later after clock selection check */
        break;

      case RCC_UART7CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART7*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003d24:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d28:	3308      	adds	r3, #8
 8003d2a:	4618      	mov	r0, r3
 8003d2c:	f001 fcc2 	bl	80056b4 <RCCEx_PLL2_Config>
 8003d30:	4603      	mov	r3, r0
 8003d32:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART7 clock source config set later after clock selection check */
        break;
 8003d36:	e014      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>

      case RCC_UART7CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART7*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003d38:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d3c:	3330      	adds	r3, #48	@ 0x30
 8003d3e:	4618      	mov	r0, r3
 8003d40:	f001 fd50 	bl	80057e4 <RCCEx_PLL3_Config>
 8003d44:	4603      	mov	r3, r0
 8003d46:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART7 clock source config set later after clock selection check */
        break;
 8003d4a:	e00a      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>
      case RCC_UART7CLKSOURCE_LSE:      /* LSE clock is used as source of UART7 clock*/
        /* UART7 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003d4c:	2301      	movs	r3, #1
 8003d4e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003d52:	e006      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003d54:	bf00      	nop
 8003d56:	e004      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003d58:	bf00      	nop
 8003d5a:	e002      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003d5c:	bf00      	nop
 8003d5e:	e000      	b.n	8003d62 <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003d60:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003d62:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003d66:	2b00      	cmp	r3, #0
 8003d68:	d10c      	bne.n	8003d84 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
    {
      /* Set the source of UART7 clock*/
      __HAL_RCC_UART7_CONFIG(pPeriphClkInit->Uart7ClockSelection);
 8003d6a:	4b25      	ldr	r3, [pc, #148]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003d6c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003d70:	f423 11e0 	bic.w	r1, r3, #1835008	@ 0x1c0000
 8003d74:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d78:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003d7a:	4a21      	ldr	r2, [pc, #132]	@ (8003e00 <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003d7c:	430b      	orrs	r3, r1
 8003d7e:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003d82:	e003      	b.n	8003d8c <HAL_RCCEx_PeriphCLKConfig+0x5ec>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003d84:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003d88:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART7 */

#if defined(UART8)
  /*-------------------------- UART8 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8003d8c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d94:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8003d98:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8003d9c:	2300      	movs	r3, #0
 8003d9e:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 8003da2:	e9d7 1246 	ldrd	r1, r2, [r7, #280]	@ 0x118
 8003da6:	460b      	mov	r3, r1
 8003da8:	4313      	orrs	r3, r2
 8003daa:	d055      	beq.n	8003e58 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(pPeriphClkInit->Uart8ClockSelection));

    switch (pPeriphClkInit->Uart8ClockSelection)
 8003dac:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003db0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003db2:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8003db6:	d033      	beq.n	8003e20 <HAL_RCCEx_PeriphCLKConfig+0x680>
 8003db8:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8003dbc:	d82c      	bhi.n	8003e18 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003dbe:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003dc2:	d02f      	beq.n	8003e24 <HAL_RCCEx_PeriphCLKConfig+0x684>
 8003dc4:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003dc8:	d826      	bhi.n	8003e18 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003dca:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8003dce:	d02b      	beq.n	8003e28 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8003dd0:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8003dd4:	d820      	bhi.n	8003e18 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003dd6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003dda:	d013      	beq.n	8003e04 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8003ddc:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003de0:	d81a      	bhi.n	8003e18 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d022      	beq.n	8003e2c <HAL_RCCEx_PeriphCLKConfig+0x68c>
 8003de6:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8003dea:	d115      	bne.n	8003e18 <HAL_RCCEx_PeriphCLKConfig+0x678>
        /* UART8 clock source config set later after clock selection check */
        break;

      case RCC_UART8CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART8*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003dec:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003df0:	3308      	adds	r3, #8
 8003df2:	4618      	mov	r0, r3
 8003df4:	f001 fc5e 	bl	80056b4 <RCCEx_PLL2_Config>
 8003df8:	4603      	mov	r3, r0
 8003dfa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART8 clock source config set later after clock selection check */
        break;
 8003dfe:	e016      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
 8003e00:	44020c00 	.word	0x44020c00

      case RCC_UART8CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART8*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003e04:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e08:	3330      	adds	r3, #48	@ 0x30
 8003e0a:	4618      	mov	r0, r3
 8003e0c:	f001 fcea 	bl	80057e4 <RCCEx_PLL3_Config>
 8003e10:	4603      	mov	r3, r0
 8003e12:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART8 clock source config set later after clock selection check */
        break;
 8003e16:	e00a      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
      case RCC_UART8CLKSOURCE_LSE:      /* LSE clock is used as source of UART8 clock*/
        /* UART8 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003e18:	2301      	movs	r3, #1
 8003e1a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003e1e:	e006      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e20:	bf00      	nop
 8003e22:	e004      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e24:	bf00      	nop
 8003e26:	e002      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e28:	bf00      	nop
 8003e2a:	e000      	b.n	8003e2e <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e2c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003e2e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003e32:	2b00      	cmp	r3, #0
 8003e34:	d10c      	bne.n	8003e50 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
    {
      /* Set the source of UART8 clock*/
      __HAL_RCC_UART8_CONFIG(pPeriphClkInit->Uart8ClockSelection);
 8003e36:	4bbb      	ldr	r3, [pc, #748]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003e38:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003e3c:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8003e40:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e44:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003e46:	4ab7      	ldr	r2, [pc, #732]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003e48:	430b      	orrs	r3, r1
 8003e4a:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003e4e:	e003      	b.n	8003e58 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003e50:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003e54:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART9 */

#if defined(UART9)
  /*-------------------------- UART9 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART9) == RCC_PERIPHCLK_UART9)
 8003e58:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e60:	f402 7380 	and.w	r3, r2, #256	@ 0x100
 8003e64:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 8003e68:	2300      	movs	r3, #0
 8003e6a:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
 8003e6e:	e9d7 1244 	ldrd	r1, r2, [r7, #272]	@ 0x110
 8003e72:	460b      	mov	r3, r1
 8003e74:	4313      	orrs	r3, r2
 8003e76:	d053      	beq.n	8003f20 <HAL_RCCEx_PeriphCLKConfig+0x780>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART9CLKSOURCE(pPeriphClkInit->Uart9ClockSelection));

    switch (pPeriphClkInit->Uart9ClockSelection)
 8003e78:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e7c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003e7e:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8003e82:	d031      	beq.n	8003ee8 <HAL_RCCEx_PeriphCLKConfig+0x748>
 8003e84:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8003e88:	d82a      	bhi.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003e8a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003e8e:	d02d      	beq.n	8003eec <HAL_RCCEx_PeriphCLKConfig+0x74c>
 8003e90:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003e94:	d824      	bhi.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003e96:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003e9a:	d029      	beq.n	8003ef0 <HAL_RCCEx_PeriphCLKConfig+0x750>
 8003e9c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003ea0:	d81e      	bhi.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003ea2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003ea6:	d011      	beq.n	8003ecc <HAL_RCCEx_PeriphCLKConfig+0x72c>
 8003ea8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003eac:	d818      	bhi.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d020      	beq.n	8003ef4 <HAL_RCCEx_PeriphCLKConfig+0x754>
 8003eb2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003eb6:	d113      	bne.n	8003ee0 <HAL_RCCEx_PeriphCLKConfig+0x740>
        /* UART9 clock source config set later after clock selection check */
        break;

      case RCC_UART9CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART9*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003eb8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ebc:	3308      	adds	r3, #8
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	f001 fbf8 	bl	80056b4 <RCCEx_PLL2_Config>
 8003ec4:	4603      	mov	r3, r0
 8003ec6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART9 clock source config set later after clock selection check */
        break;
 8003eca:	e014      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>

      case RCC_UART9CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART9*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003ecc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ed0:	3330      	adds	r3, #48	@ 0x30
 8003ed2:	4618      	mov	r0, r3
 8003ed4:	f001 fc86 	bl	80057e4 <RCCEx_PLL3_Config>
 8003ed8:	4603      	mov	r3, r0
 8003eda:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART9 clock source config set later after clock selection check */
        break;
 8003ede:	e00a      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>
      case RCC_UART9CLKSOURCE_LSE:      /* LSE clock is used as source of UART9 clock*/
        /* UART9 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003ee0:	2301      	movs	r3, #1
 8003ee2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003ee6:	e006      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003ee8:	bf00      	nop
 8003eea:	e004      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003eec:	bf00      	nop
 8003eee:	e002      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003ef0:	bf00      	nop
 8003ef2:	e000      	b.n	8003ef6 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003ef4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003ef6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003efa:	2b00      	cmp	r3, #0
 8003efc:	d10c      	bne.n	8003f18 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      /* Set the source of UART9 clock*/
      __HAL_RCC_UART9_CONFIG(pPeriphClkInit->Uart9ClockSelection);
 8003efe:	4b89      	ldr	r3, [pc, #548]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003f00:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003f04:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8003f08:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f0c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003f0e:	4a85      	ldr	r2, [pc, #532]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003f10:	430b      	orrs	r3, r1
 8003f12:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003f16:	e003      	b.n	8003f20 <HAL_RCCEx_PeriphCLKConfig+0x780>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003f18:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003f1c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART9 */

#if defined(USART10)
  /*-------------------------- USART10 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART10) == RCC_PERIPHCLK_USART10)
 8003f20:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f28:	f402 7300 	and.w	r3, r2, #512	@ 0x200
 8003f2c:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8003f30:	2300      	movs	r3, #0
 8003f32:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8003f36:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	@ 0x108
 8003f3a:	460b      	mov	r3, r1
 8003f3c:	4313      	orrs	r3, r2
 8003f3e:	d055      	beq.n	8003fec <HAL_RCCEx_PeriphCLKConfig+0x84c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART10CLKSOURCE(pPeriphClkInit->Usart10ClockSelection));

    switch (pPeriphClkInit->Usart10ClockSelection)
 8003f40:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f44:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003f48:	f1b3 5f20 	cmp.w	r3, #671088640	@ 0x28000000
 8003f4c:	d031      	beq.n	8003fb2 <HAL_RCCEx_PeriphCLKConfig+0x812>
 8003f4e:	f1b3 5f20 	cmp.w	r3, #671088640	@ 0x28000000
 8003f52:	d82a      	bhi.n	8003faa <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003f54:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003f58:	d02d      	beq.n	8003fb6 <HAL_RCCEx_PeriphCLKConfig+0x816>
 8003f5a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003f5e:	d824      	bhi.n	8003faa <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003f60:	f1b3 5fc0 	cmp.w	r3, #402653184	@ 0x18000000
 8003f64:	d029      	beq.n	8003fba <HAL_RCCEx_PeriphCLKConfig+0x81a>
 8003f66:	f1b3 5fc0 	cmp.w	r3, #402653184	@ 0x18000000
 8003f6a:	d81e      	bhi.n	8003faa <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003f6c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003f70:	d011      	beq.n	8003f96 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
 8003f72:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003f76:	d818      	bhi.n	8003faa <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d020      	beq.n	8003fbe <HAL_RCCEx_PeriphCLKConfig+0x81e>
 8003f7c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003f80:	d113      	bne.n	8003faa <HAL_RCCEx_PeriphCLKConfig+0x80a>
        /* USART10 clock source config set later after clock selection check */
        break;

      case RCC_USART10CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART10*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003f82:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f86:	3308      	adds	r3, #8
 8003f88:	4618      	mov	r0, r3
 8003f8a:	f001 fb93 	bl	80056b4 <RCCEx_PLL2_Config>
 8003f8e:	4603      	mov	r3, r0
 8003f90:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART10 clock source config set later after clock selection check */
        break;
 8003f94:	e014      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>

      case RCC_USART10CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART10*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003f96:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f9a:	3330      	adds	r3, #48	@ 0x30
 8003f9c:	4618      	mov	r0, r3
 8003f9e:	f001 fc21 	bl	80057e4 <RCCEx_PLL3_Config>
 8003fa2:	4603      	mov	r3, r0
 8003fa4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART10 clock source config set later after clock selection check */
        break;
 8003fa8:	e00a      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>
      case RCC_USART10CLKSOURCE_LSE:      /* LSE clock is used as source of USART10 clock*/
        /* USART10 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003faa:	2301      	movs	r3, #1
 8003fac:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003fb0:	e006      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8003fb2:	bf00      	nop
 8003fb4:	e004      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8003fb6:	bf00      	nop
 8003fb8:	e002      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8003fba:	bf00      	nop
 8003fbc:	e000      	b.n	8003fc0 <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8003fbe:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003fc0:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	d10d      	bne.n	8003fe4 <HAL_RCCEx_PeriphCLKConfig+0x844>
    {
      /* Set the source of USART10 clock*/
      __HAL_RCC_USART10_CONFIG(pPeriphClkInit->Usart10ClockSelection);
 8003fc8:	4b56      	ldr	r3, [pc, #344]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003fca:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003fce:	f023 5160 	bic.w	r1, r3, #939524096	@ 0x38000000
 8003fd2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003fd6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003fda:	4a52      	ldr	r2, [pc, #328]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003fdc:	430b      	orrs	r3, r1
 8003fde:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003fe2:	e003      	b.n	8003fec <HAL_RCCEx_PeriphCLKConfig+0x84c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003fe4:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003fe8:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USART10 */

#if defined(USART11)
  /*-------------------------- USART11 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART11) == RCC_PERIPHCLK_USART11)
 8003fec:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ff0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ff4:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 8003ff8:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8003ffc:	2300      	movs	r3, #0
 8003ffe:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8004002:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 8004006:	460b      	mov	r3, r1
 8004008:	4313      	orrs	r3, r2
 800400a:	d044      	beq.n	8004096 <HAL_RCCEx_PeriphCLKConfig+0x8f6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART11CLKSOURCE(pPeriphClkInit->Usart11ClockSelection));

    switch (pPeriphClkInit->Usart11ClockSelection)
 800400c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004010:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004014:	2b05      	cmp	r3, #5
 8004016:	d823      	bhi.n	8004060 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8004018:	a201      	add	r2, pc, #4	@ (adr r2, 8004020 <HAL_RCCEx_PeriphCLKConfig+0x880>)
 800401a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800401e:	bf00      	nop
 8004020:	08004069 	.word	0x08004069
 8004024:	08004039 	.word	0x08004039
 8004028:	0800404d 	.word	0x0800404d
 800402c:	08004069 	.word	0x08004069
 8004030:	08004069 	.word	0x08004069
 8004034:	08004069 	.word	0x08004069
        /* USART11 clock source config set later after clock selection check */
        break;

      case RCC_USART11CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART11*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004038:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800403c:	3308      	adds	r3, #8
 800403e:	4618      	mov	r0, r3
 8004040:	f001 fb38 	bl	80056b4 <RCCEx_PLL2_Config>
 8004044:	4603      	mov	r3, r0
 8004046:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART11 clock source config set later after clock selection check */
        break;
 800404a:	e00e      	b.n	800406a <HAL_RCCEx_PeriphCLKConfig+0x8ca>

      case RCC_USART11CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART11*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800404c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004050:	3330      	adds	r3, #48	@ 0x30
 8004052:	4618      	mov	r0, r3
 8004054:	f001 fbc6 	bl	80057e4 <RCCEx_PLL3_Config>
 8004058:	4603      	mov	r3, r0
 800405a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART11 clock source config set later after clock selection check */
        break;
 800405e:	e004      	b.n	800406a <HAL_RCCEx_PeriphCLKConfig+0x8ca>
      case RCC_USART11CLKSOURCE_LSE:      /* LSE clock is used as source of USART11 clock*/
        /* USART11 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004060:	2301      	movs	r3, #1
 8004062:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004066:	e000      	b.n	800406a <HAL_RCCEx_PeriphCLKConfig+0x8ca>
        break;
 8004068:	bf00      	nop
    }

    if (ret == HAL_OK)
 800406a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800406e:	2b00      	cmp	r3, #0
 8004070:	d10d      	bne.n	800408e <HAL_RCCEx_PeriphCLKConfig+0x8ee>
    {
      /* Set the source of USART11 clock*/
      __HAL_RCC_USART11_CONFIG(pPeriphClkInit->Usart11ClockSelection);
 8004072:	4b2c      	ldr	r3, [pc, #176]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8004074:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004078:	f023 0107 	bic.w	r1, r3, #7
 800407c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004080:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004084:	4a27      	ldr	r2, [pc, #156]	@ (8004124 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8004086:	430b      	orrs	r3, r1
 8004088:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 800408c:	e003      	b.n	8004096 <HAL_RCCEx_PeriphCLKConfig+0x8f6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800408e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004092:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /*USART11*/

#if defined(UART12)
  /*-------------------------- UART12 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART12) == RCC_PERIPHCLK_UART12)
 8004096:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800409a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800409e:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 80040a2:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80040a6:	2300      	movs	r3, #0
 80040a8:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80040ac:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 80040b0:	460b      	mov	r3, r1
 80040b2:	4313      	orrs	r3, r2
 80040b4:	d04f      	beq.n	8004156 <HAL_RCCEx_PeriphCLKConfig+0x9b6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART12CLKSOURCE(pPeriphClkInit->Uart12ClockSelection));

    switch (pPeriphClkInit->Uart12ClockSelection)
 80040b6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80040be:	2b50      	cmp	r3, #80	@ 0x50
 80040c0:	d029      	beq.n	8004116 <HAL_RCCEx_PeriphCLKConfig+0x976>
 80040c2:	2b50      	cmp	r3, #80	@ 0x50
 80040c4:	d823      	bhi.n	800410e <HAL_RCCEx_PeriphCLKConfig+0x96e>
 80040c6:	2b40      	cmp	r3, #64	@ 0x40
 80040c8:	d027      	beq.n	800411a <HAL_RCCEx_PeriphCLKConfig+0x97a>
 80040ca:	2b40      	cmp	r3, #64	@ 0x40
 80040cc:	d81f      	bhi.n	800410e <HAL_RCCEx_PeriphCLKConfig+0x96e>
 80040ce:	2b30      	cmp	r3, #48	@ 0x30
 80040d0:	d025      	beq.n	800411e <HAL_RCCEx_PeriphCLKConfig+0x97e>
 80040d2:	2b30      	cmp	r3, #48	@ 0x30
 80040d4:	d81b      	bhi.n	800410e <HAL_RCCEx_PeriphCLKConfig+0x96e>
 80040d6:	2b20      	cmp	r3, #32
 80040d8:	d00f      	beq.n	80040fa <HAL_RCCEx_PeriphCLKConfig+0x95a>
 80040da:	2b20      	cmp	r3, #32
 80040dc:	d817      	bhi.n	800410e <HAL_RCCEx_PeriphCLKConfig+0x96e>
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d022      	beq.n	8004128 <HAL_RCCEx_PeriphCLKConfig+0x988>
 80040e2:	2b10      	cmp	r3, #16
 80040e4:	d113      	bne.n	800410e <HAL_RCCEx_PeriphCLKConfig+0x96e>
        /* UART12 clock source config set later after clock selection check */
        break;

      case RCC_UART12CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART12*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80040e6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040ea:	3308      	adds	r3, #8
 80040ec:	4618      	mov	r0, r3
 80040ee:	f001 fae1 	bl	80056b4 <RCCEx_PLL2_Config>
 80040f2:	4603      	mov	r3, r0
 80040f4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART12 clock source config set later after clock selection check */
        break;
 80040f8:	e017      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>

      case RCC_UART12CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART12*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80040fa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040fe:	3330      	adds	r3, #48	@ 0x30
 8004100:	4618      	mov	r0, r3
 8004102:	f001 fb6f 	bl	80057e4 <RCCEx_PLL3_Config>
 8004106:	4603      	mov	r3, r0
 8004108:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART12 clock source config set later after clock selection check */
        break;
 800410c:	e00d      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>
      case RCC_UART12CLKSOURCE_LSE:      /* LSE clock is used as source of UART12 clock*/
        /* UART12 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800410e:	2301      	movs	r3, #1
 8004110:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004114:	e009      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 8004116:	bf00      	nop
 8004118:	e007      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 800411a:	bf00      	nop
 800411c:	e005      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 800411e:	bf00      	nop
 8004120:	e003      	b.n	800412a <HAL_RCCEx_PeriphCLKConfig+0x98a>
 8004122:	bf00      	nop
 8004124:	44020c00 	.word	0x44020c00
        break;
 8004128:	bf00      	nop
    }

    if (ret == HAL_OK)
 800412a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800412e:	2b00      	cmp	r3, #0
 8004130:	d10d      	bne.n	800414e <HAL_RCCEx_PeriphCLKConfig+0x9ae>
    {
      /* Set the source of UART12 clock*/
      __HAL_RCC_UART12_CONFIG(pPeriphClkInit->Uart12ClockSelection);
 8004132:	4baf      	ldr	r3, [pc, #700]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004134:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004138:	f023 0170 	bic.w	r1, r3, #112	@ 0x70
 800413c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004140:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004144:	4aaa      	ldr	r2, [pc, #680]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004146:	430b      	orrs	r3, r1
 8004148:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 800414c:	e003      	b.n	8004156 <HAL_RCCEx_PeriphCLKConfig+0x9b6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800414e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004152:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* UART12 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8004156:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800415a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800415e:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8004162:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8004166:	2300      	movs	r3, #0
 8004168:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800416c:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8004170:	460b      	mov	r3, r1
 8004172:	4313      	orrs	r3, r2
 8004174:	d055      	beq.n	8004222 <HAL_RCCEx_PeriphCLKConfig+0xa82>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(pPeriphClkInit->Lpuart1ClockSelection));

    switch (pPeriphClkInit->Lpuart1ClockSelection)
 8004176:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800417a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800417e:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8004182:	d031      	beq.n	80041e8 <HAL_RCCEx_PeriphCLKConfig+0xa48>
 8004184:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8004188:	d82a      	bhi.n	80041e0 <HAL_RCCEx_PeriphCLKConfig+0xa40>
 800418a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800418e:	d02d      	beq.n	80041ec <HAL_RCCEx_PeriphCLKConfig+0xa4c>
 8004190:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8004194:	d824      	bhi.n	80041e0 <HAL_RCCEx_PeriphCLKConfig+0xa40>
 8004196:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800419a:	d029      	beq.n	80041f0 <HAL_RCCEx_PeriphCLKConfig+0xa50>
 800419c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80041a0:	d81e      	bhi.n	80041e0 <HAL_RCCEx_PeriphCLKConfig+0xa40>
 80041a2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80041a6:	d011      	beq.n	80041cc <HAL_RCCEx_PeriphCLKConfig+0xa2c>
 80041a8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80041ac:	d818      	bhi.n	80041e0 <HAL_RCCEx_PeriphCLKConfig+0xa40>
 80041ae:	2b00      	cmp	r3, #0
 80041b0:	d020      	beq.n	80041f4 <HAL_RCCEx_PeriphCLKConfig+0xa54>
 80041b2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80041b6:	d113      	bne.n	80041e0 <HAL_RCCEx_PeriphCLKConfig+0xa40>
        /* LPUART1 clock source config set later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for LPUART1*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80041b8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80041bc:	3308      	adds	r3, #8
 80041be:	4618      	mov	r0, r3
 80041c0:	f001 fa78 	bl	80056b4 <RCCEx_PLL2_Config>
 80041c4:	4603      	mov	r3, r0
 80041c6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPUART1 clock source config set later after clock selection check */
        break;
 80041ca:	e014      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>

#if defined(RCC_LPUART1CLKSOURCE_PLL3Q)
      case RCC_LPUART1CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for LPUART1*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80041cc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80041d0:	3330      	adds	r3, #48	@ 0x30
 80041d2:	4618      	mov	r0, r3
 80041d4:	f001 fb06 	bl	80057e4 <RCCEx_PLL3_Config>
 80041d8:	4603      	mov	r3, r0
 80041da:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPUART1 clock source config set later after clock selection check */
        break;
 80041de:	e00a      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>
      case RCC_LPUART1CLKSOURCE_LSE:      /* LSE clock is used as source of LPUART1 clock*/
        /* LPUART1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80041e0:	2301      	movs	r3, #1
 80041e2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80041e6:	e006      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 80041e8:	bf00      	nop
 80041ea:	e004      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 80041ec:	bf00      	nop
 80041ee:	e002      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 80041f0:	bf00      	nop
 80041f2:	e000      	b.n	80041f6 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 80041f4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80041f6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80041fa:	2b00      	cmp	r3, #0
 80041fc:	d10d      	bne.n	800421a <HAL_RCCEx_PeriphCLKConfig+0xa7a>
    {
      /* Set the source of LPUART1 clock*/
      __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 80041fe:	4b7c      	ldr	r3, [pc, #496]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004200:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004204:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8004208:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800420c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8004210:	4a77      	ldr	r2, [pc, #476]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004212:	430b      	orrs	r3, r1
 8004214:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8004218:	e003      	b.n	8004222 <HAL_RCCEx_PeriphCLKConfig+0xa82>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800421a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800421e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8004222:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004226:	e9d3 2300 	ldrd	r2, r3, [r3]
 800422a:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 800422e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8004232:	2300      	movs	r3, #0
 8004234:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8004238:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 800423c:	460b      	mov	r3, r1
 800423e:	4313      	orrs	r3, r2
 8004240:	d03d      	beq.n	80042be <HAL_RCCEx_PeriphCLKConfig+0xb1e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(pPeriphClkInit->I2c1ClockSelection));

    switch (pPeriphClkInit->I2c1ClockSelection)
 8004242:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004246:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800424a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800424e:	d01b      	beq.n	8004288 <HAL_RCCEx_PeriphCLKConfig+0xae8>
 8004250:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004254:	d814      	bhi.n	8004280 <HAL_RCCEx_PeriphCLKConfig+0xae0>
 8004256:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800425a:	d017      	beq.n	800428c <HAL_RCCEx_PeriphCLKConfig+0xaec>
 800425c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004260:	d80e      	bhi.n	8004280 <HAL_RCCEx_PeriphCLKConfig+0xae0>
 8004262:	2b00      	cmp	r3, #0
 8004264:	d014      	beq.n	8004290 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
 8004266:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800426a:	d109      	bne.n	8004280 <HAL_RCCEx_PeriphCLKConfig+0xae0>
        break;

#if defined(RCC_I2C1CLKSOURCE_PLL3R)
      case RCC_I2C1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C1*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800426c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004270:	3330      	adds	r3, #48	@ 0x30
 8004272:	4618      	mov	r0, r3
 8004274:	f001 fab6 	bl	80057e4 <RCCEx_PLL3_Config>
 8004278:	4603      	mov	r3, r0
 800427a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I2C1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for I2C1*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I2C1CLKSOURCE_PLL3R */
        /* I2C1 clock source config set later after clock selection check */
        break;
 800427e:	e008      	b.n	8004292 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      case RCC_I2C1CLKSOURCE_CSI:      /* CSI clock is used as source of I2C1 clock*/
        /* I2C1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004280:	2301      	movs	r3, #1
 8004282:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004286:	e004      	b.n	8004292 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 8004288:	bf00      	nop
 800428a:	e002      	b.n	8004292 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 800428c:	bf00      	nop
 800428e:	e000      	b.n	8004292 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 8004290:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004292:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004296:	2b00      	cmp	r3, #0
 8004298:	d10d      	bne.n	80042b6 <HAL_RCCEx_PeriphCLKConfig+0xb16>
    {
      /* Set the source of I2C1 clock*/
      __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 800429a:	4b55      	ldr	r3, [pc, #340]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 800429c:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80042a0:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 80042a4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80042a8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042ac:	4a50      	ldr	r2, [pc, #320]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80042ae:	430b      	orrs	r3, r1
 80042b0:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 80042b4:	e003      	b.n	80042be <HAL_RCCEx_PeriphCLKConfig+0xb1e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80042b6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80042ba:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 80042be:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80042c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042c6:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 80042ca:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80042ce:	2300      	movs	r3, #0
 80042d0:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80042d4:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 80042d8:	460b      	mov	r3, r1
 80042da:	4313      	orrs	r3, r2
 80042dc:	d03d      	beq.n	800435a <HAL_RCCEx_PeriphCLKConfig+0xbba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(pPeriphClkInit->I2c2ClockSelection));

    switch (pPeriphClkInit->I2c2ClockSelection)
 80042de:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80042e2:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80042e6:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 80042ea:	d01b      	beq.n	8004324 <HAL_RCCEx_PeriphCLKConfig+0xb84>
 80042ec:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 80042f0:	d814      	bhi.n	800431c <HAL_RCCEx_PeriphCLKConfig+0xb7c>
 80042f2:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 80042f6:	d017      	beq.n	8004328 <HAL_RCCEx_PeriphCLKConfig+0xb88>
 80042f8:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 80042fc:	d80e      	bhi.n	800431c <HAL_RCCEx_PeriphCLKConfig+0xb7c>
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d014      	beq.n	800432c <HAL_RCCEx_PeriphCLKConfig+0xb8c>
 8004302:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004306:	d109      	bne.n	800431c <HAL_RCCEx_PeriphCLKConfig+0xb7c>
        break;

#if defined(RCC_I2C2CLKSOURCE_PLL3R)
      case RCC_I2C2CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C2*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004308:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800430c:	3330      	adds	r3, #48	@ 0x30
 800430e:	4618      	mov	r0, r3
 8004310:	f001 fa68 	bl	80057e4 <RCCEx_PLL3_Config>
 8004314:	4603      	mov	r3, r0
 8004316:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I2C2CLKSOURCE_PLL2R:  /* PLL32 is used as clock source for I2C2*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I2C2CLKSOURCE_PLL3R */
        /* I2C2 clock source config set later after clock selection check */
        break;
 800431a:	e008      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
      case RCC_I2C2CLKSOURCE_CSI:      /* CSI clock is used as source of I2C2 clock*/
        /* I2C2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800431c:	2301      	movs	r3, #1
 800431e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004322:	e004      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 8004324:	bf00      	nop
 8004326:	e002      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 8004328:	bf00      	nop
 800432a:	e000      	b.n	800432e <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 800432c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800432e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004332:	2b00      	cmp	r3, #0
 8004334:	d10d      	bne.n	8004352 <HAL_RCCEx_PeriphCLKConfig+0xbb2>
    {
      /* Set the source of I2C2 clock*/
      __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8004336:	4b2e      	ldr	r3, [pc, #184]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004338:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800433c:	f423 2140 	bic.w	r1, r3, #786432	@ 0xc0000
 8004340:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004344:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004348:	4a29      	ldr	r2, [pc, #164]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 800434a:	430b      	orrs	r3, r1
 800434c:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004350:	e003      	b.n	800435a <HAL_RCCEx_PeriphCLKConfig+0xbba>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004352:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004356:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(I2C3)
  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 800435a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800435e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004362:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 8004366:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800436a:	2300      	movs	r3, #0
 800436c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8004370:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8004374:	460b      	mov	r3, r1
 8004376:	4313      	orrs	r3, r2
 8004378:	d040      	beq.n	80043fc <HAL_RCCEx_PeriphCLKConfig+0xc5c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(pPeriphClkInit->I2c3ClockSelection));

    switch (pPeriphClkInit->I2c3ClockSelection)
 800437a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800437e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004382:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8004386:	d01b      	beq.n	80043c0 <HAL_RCCEx_PeriphCLKConfig+0xc20>
 8004388:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800438c:	d814      	bhi.n	80043b8 <HAL_RCCEx_PeriphCLKConfig+0xc18>
 800438e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004392:	d017      	beq.n	80043c4 <HAL_RCCEx_PeriphCLKConfig+0xc24>
 8004394:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004398:	d80e      	bhi.n	80043b8 <HAL_RCCEx_PeriphCLKConfig+0xc18>
 800439a:	2b00      	cmp	r3, #0
 800439c:	d014      	beq.n	80043c8 <HAL_RCCEx_PeriphCLKConfig+0xc28>
 800439e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80043a2:	d109      	bne.n	80043b8 <HAL_RCCEx_PeriphCLKConfig+0xc18>
        /* I2C3 clock source config set later after clock selection check */
        break;

      case RCC_I2C3CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C3*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80043a4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80043a8:	3330      	adds	r3, #48	@ 0x30
 80043aa:	4618      	mov	r0, r3
 80043ac:	f001 fa1a 	bl	80057e4 <RCCEx_PLL3_Config>
 80043b0:	4603      	mov	r3, r0
 80043b2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* I2C3 clock source config set later after clock selection check */
        break;
 80043b6:	e008      	b.n	80043ca <HAL_RCCEx_PeriphCLKConfig+0xc2a>
      case RCC_I2C3CLKSOURCE_CSI:      /* CSI clock is used as source of I2C3 clock*/
        /* I2C3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80043b8:	2301      	movs	r3, #1
 80043ba:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80043be:	e004      	b.n	80043ca <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 80043c0:	bf00      	nop
 80043c2:	e002      	b.n	80043ca <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 80043c4:	bf00      	nop
 80043c6:	e000      	b.n	80043ca <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 80043c8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80043ca:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80043ce:	2b00      	cmp	r3, #0
 80043d0:	d110      	bne.n	80043f4 <HAL_RCCEx_PeriphCLKConfig+0xc54>
    {
      /* Set the source of I2C3 clock*/
      __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 80043d2:	4b07      	ldr	r3, [pc, #28]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80043d4:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80043d8:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 80043dc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80043e0:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80043e4:	4a02      	ldr	r2, [pc, #8]	@ (80043f0 <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80043e6:	430b      	orrs	r3, r1
 80043e8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 80043ec:	e006      	b.n	80043fc <HAL_RCCEx_PeriphCLKConfig+0xc5c>
 80043ee:	bf00      	nop
 80043f0:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 80043f4:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80043f8:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* I2C3 */

#if defined(I2C4)
  /*-------------------------- I2C4 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80043fc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004400:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004404:	2100      	movs	r1, #0
 8004406:	f8c7 10d0 	str.w	r1, [r7, #208]	@ 0xd0
 800440a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800440e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004412:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 8004416:	460b      	mov	r3, r1
 8004418:	4313      	orrs	r3, r2
 800441a:	d03d      	beq.n	8004498 <HAL_RCCEx_PeriphCLKConfig+0xcf8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(pPeriphClkInit->I2c4ClockSelection));

    switch (pPeriphClkInit->I2c4ClockSelection)
 800441c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004420:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8004424:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8004428:	d01b      	beq.n	8004462 <HAL_RCCEx_PeriphCLKConfig+0xcc2>
 800442a:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800442e:	d814      	bhi.n	800445a <HAL_RCCEx_PeriphCLKConfig+0xcba>
 8004430:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004434:	d017      	beq.n	8004466 <HAL_RCCEx_PeriphCLKConfig+0xcc6>
 8004436:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800443a:	d80e      	bhi.n	800445a <HAL_RCCEx_PeriphCLKConfig+0xcba>
 800443c:	2b00      	cmp	r3, #0
 800443e:	d014      	beq.n	800446a <HAL_RCCEx_PeriphCLKConfig+0xcca>
 8004440:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004444:	d109      	bne.n	800445a <HAL_RCCEx_PeriphCLKConfig+0xcba>
        /* I2C4 clock source config set later after clock selection check */
        break;

      case RCC_I2C4CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C4*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004446:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800444a:	3330      	adds	r3, #48	@ 0x30
 800444c:	4618      	mov	r0, r3
 800444e:	f001 f9c9 	bl	80057e4 <RCCEx_PLL3_Config>
 8004452:	4603      	mov	r3, r0
 8004454:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* I2C4 clock source config set later after clock selection check */
        break;
 8004458:	e008      	b.n	800446c <HAL_RCCEx_PeriphCLKConfig+0xccc>
      case RCC_I2C4CLKSOURCE_CSI:      /* CSI clock is used as source of I2C4 clock*/
        /* I2C4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800445a:	2301      	movs	r3, #1
 800445c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004460:	e004      	b.n	800446c <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 8004462:	bf00      	nop
 8004464:	e002      	b.n	800446c <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 8004466:	bf00      	nop
 8004468:	e000      	b.n	800446c <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 800446a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800446c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004470:	2b00      	cmp	r3, #0
 8004472:	d10d      	bne.n	8004490 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
    {
      /* Set the source of I2C4 clock*/
      __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 8004474:	4bbe      	ldr	r3, [pc, #760]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004476:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800447a:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 800447e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004482:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8004486:	4aba      	ldr	r2, [pc, #744]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004488:	430b      	orrs	r3, r1
 800448a:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 800448e:	e003      	b.n	8004498 <HAL_RCCEx_PeriphCLKConfig+0xcf8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004490:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004494:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* I2C4 */

  /*-------------------------- I3C1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I3C1) == RCC_PERIPHCLK_I3C1)
 8004498:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800449c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044a0:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 80044a4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80044a8:	2300      	movs	r3, #0
 80044aa:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80044ae:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 80044b2:	460b      	mov	r3, r1
 80044b4:	4313      	orrs	r3, r2
 80044b6:	d035      	beq.n	8004524 <HAL_RCCEx_PeriphCLKConfig+0xd84>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I3C1CLKSOURCE(pPeriphClkInit->I3c1ClockSelection));

    switch (pPeriphClkInit->I3c1ClockSelection)
 80044b8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80044bc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80044c0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80044c4:	d015      	beq.n	80044f2 <HAL_RCCEx_PeriphCLKConfig+0xd52>
 80044c6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80044ca:	d80e      	bhi.n	80044ea <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d012      	beq.n	80044f6 <HAL_RCCEx_PeriphCLKConfig+0xd56>
 80044d0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80044d4:	d109      	bne.n	80044ea <HAL_RCCEx_PeriphCLKConfig+0xd4a>
        break;

#if defined(RCC_I3C1CLKSOURCE_PLL3R)
      case RCC_I3C1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I3C1*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80044d6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80044da:	3330      	adds	r3, #48	@ 0x30
 80044dc:	4618      	mov	r0, r3
 80044de:	f001 f981 	bl	80057e4 <RCCEx_PLL3_Config>
 80044e2:	4603      	mov	r3, r0
 80044e4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I3C1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for I3C1*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I3C1CLKSOURCE_PLL3R */
        /* I3C1 clock source config set later after clock selection check */
        break;
 80044e8:	e006      	b.n	80044f8 <HAL_RCCEx_PeriphCLKConfig+0xd58>
      case RCC_I3C1CLKSOURCE_HSI:      /* HSI clock is used as source of I3C1 clock*/
        /* I3C1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80044ea:	2301      	movs	r3, #1
 80044ec:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80044f0:	e002      	b.n	80044f8 <HAL_RCCEx_PeriphCLKConfig+0xd58>
        break;
 80044f2:	bf00      	nop
 80044f4:	e000      	b.n	80044f8 <HAL_RCCEx_PeriphCLKConfig+0xd58>
        break;
 80044f6:	bf00      	nop
    }

    if (ret == HAL_OK)
 80044f8:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	d10d      	bne.n	800451c <HAL_RCCEx_PeriphCLKConfig+0xd7c>
    {
      /* Set the source of I3C1 clock*/
      __HAL_RCC_I3C1_CONFIG(pPeriphClkInit->I3c1ClockSelection);
 8004500:	4b9b      	ldr	r3, [pc, #620]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004502:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004506:	f023 7140 	bic.w	r1, r3, #50331648	@ 0x3000000
 800450a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800450e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8004512:	4a97      	ldr	r2, [pc, #604]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004514:	430b      	orrs	r3, r1
 8004516:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 800451a:	e003      	b.n	8004524 <HAL_RCCEx_PeriphCLKConfig+0xd84>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800451c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004520:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* I3C2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8004524:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004528:	e9d3 2300 	ldrd	r2, r3, [r3]
 800452c:	2100      	movs	r1, #0
 800452e:	f8c7 10c0 	str.w	r1, [r7, #192]	@ 0xc0
 8004532:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004536:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800453a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800453e:	460b      	mov	r3, r1
 8004540:	4313      	orrs	r3, r2
 8004542:	d00e      	beq.n	8004562 <HAL_RCCEx_PeriphCLKConfig+0xdc2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(pPeriphClkInit->TimPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(pPeriphClkInit->TimPresSelection);
 8004544:	4b8a      	ldr	r3, [pc, #552]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004546:	69db      	ldr	r3, [r3, #28]
 8004548:	4a89      	ldr	r2, [pc, #548]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800454a:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800454e:	61d3      	str	r3, [r2, #28]
 8004550:	4b87      	ldr	r3, [pc, #540]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004552:	69d9      	ldr	r1, [r3, #28]
 8004554:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004558:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 800455c:	4a84      	ldr	r2, [pc, #528]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800455e:	430b      	orrs	r3, r1
 8004560:	61d3      	str	r3, [r2, #28]
  }

  /*-------------------------- LPTIM1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8004562:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004566:	e9d3 2300 	ldrd	r2, r3, [r3]
 800456a:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 800456e:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004572:	2300      	movs	r3, #0
 8004574:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8004578:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 800457c:	460b      	mov	r3, r1
 800457e:	4313      	orrs	r3, r2
 8004580:	d055      	beq.n	800462e <HAL_RCCEx_PeriphCLKConfig+0xe8e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(pPeriphClkInit->Lptim1ClockSelection));

    switch (pPeriphClkInit->Lptim1ClockSelection)
 8004582:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004586:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800458a:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 800458e:	d031      	beq.n	80045f4 <HAL_RCCEx_PeriphCLKConfig+0xe54>
 8004590:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8004594:	d82a      	bhi.n	80045ec <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 8004596:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800459a:	d02d      	beq.n	80045f8 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 800459c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80045a0:	d824      	bhi.n	80045ec <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 80045a2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80045a6:	d029      	beq.n	80045fc <HAL_RCCEx_PeriphCLKConfig+0xe5c>
 80045a8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80045ac:	d81e      	bhi.n	80045ec <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 80045ae:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045b2:	d011      	beq.n	80045d8 <HAL_RCCEx_PeriphCLKConfig+0xe38>
 80045b4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80045b8:	d818      	bhi.n	80045ec <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d020      	beq.n	8004600 <HAL_RCCEx_PeriphCLKConfig+0xe60>
 80045be:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80045c2:	d113      	bne.n	80045ec <HAL_RCCEx_PeriphCLKConfig+0xe4c>
        /* LPTIM1 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80045c4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80045c8:	3308      	adds	r3, #8
 80045ca:	4618      	mov	r0, r3
 80045cc:	f001 f872 	bl	80056b4 <RCCEx_PLL2_Config>
 80045d0:	4603      	mov	r3, r0
 80045d2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM1 clock source config set later after clock selection check */
        break;
 80045d6:	e014      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>

#if defined(RCC_LPTIM1CLKSOURCE_PLL3R)
      case RCC_LPTIM1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM1*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80045d8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80045dc:	3330      	adds	r3, #48	@ 0x30
 80045de:	4618      	mov	r0, r3
 80045e0:	f001 f900 	bl	80057e4 <RCCEx_PLL3_Config>
 80045e4:	4603      	mov	r3, r0
 80045e6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM1 clock source config set later after clock selection check */
        break;
 80045ea:	e00a      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>
      case RCC_LPTIM1CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM1 clock*/
        /* LPTIM1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80045ec:	2301      	movs	r3, #1
 80045ee:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80045f2:	e006      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 80045f4:	bf00      	nop
 80045f6:	e004      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 80045f8:	bf00      	nop
 80045fa:	e002      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 80045fc:	bf00      	nop
 80045fe:	e000      	b.n	8004602 <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 8004600:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004602:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004606:	2b00      	cmp	r3, #0
 8004608:	d10d      	bne.n	8004626 <HAL_RCCEx_PeriphCLKConfig+0xe86>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 800460a:	4b59      	ldr	r3, [pc, #356]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800460c:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004610:	f423 61e0 	bic.w	r1, r3, #1792	@ 0x700
 8004614:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004618:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800461c:	4a54      	ldr	r2, [pc, #336]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800461e:	430b      	orrs	r3, r1
 8004620:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 8004624:	e003      	b.n	800462e <HAL_RCCEx_PeriphCLKConfig+0xe8e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004626:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800462a:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- LPTIM2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 800462e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004632:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004636:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 800463a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800463e:	2300      	movs	r3, #0
 8004640:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004644:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 8004648:	460b      	mov	r3, r1
 800464a:	4313      	orrs	r3, r2
 800464c:	d055      	beq.n	80046fa <HAL_RCCEx_PeriphCLKConfig+0xf5a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM2CLK(pPeriphClkInit->Lptim2ClockSelection));

    switch (pPeriphClkInit->Lptim2ClockSelection)
 800464e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004652:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8004656:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 800465a:	d031      	beq.n	80046c0 <HAL_RCCEx_PeriphCLKConfig+0xf20>
 800465c:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8004660:	d82a      	bhi.n	80046b8 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 8004662:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004666:	d02d      	beq.n	80046c4 <HAL_RCCEx_PeriphCLKConfig+0xf24>
 8004668:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800466c:	d824      	bhi.n	80046b8 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 800466e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8004672:	d029      	beq.n	80046c8 <HAL_RCCEx_PeriphCLKConfig+0xf28>
 8004674:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8004678:	d81e      	bhi.n	80046b8 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 800467a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800467e:	d011      	beq.n	80046a4 <HAL_RCCEx_PeriphCLKConfig+0xf04>
 8004680:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004684:	d818      	bhi.n	80046b8 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 8004686:	2b00      	cmp	r3, #0
 8004688:	d020      	beq.n	80046cc <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 800468a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800468e:	d113      	bne.n	80046b8 <HAL_RCCEx_PeriphCLKConfig+0xf18>
        /* LPTIM2 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004690:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004694:	3308      	adds	r3, #8
 8004696:	4618      	mov	r0, r3
 8004698:	f001 f80c 	bl	80056b4 <RCCEx_PLL2_Config>
 800469c:	4603      	mov	r3, r0
 800469e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM2 clock source config set later after clock selection check */
        break;
 80046a2:	e014      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>

#if defined(RCC_LPTIM2CLKSOURCE_PLL3R)
      case RCC_LPTIM2CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM2*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80046a4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80046a8:	3330      	adds	r3, #48	@ 0x30
 80046aa:	4618      	mov	r0, r3
 80046ac:	f001 f89a 	bl	80057e4 <RCCEx_PLL3_Config>
 80046b0:	4603      	mov	r3, r0
 80046b2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM2 clock source config set later after clock selection check */
        break;
 80046b6:	e00a      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>
      case RCC_LPTIM2CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM2 clock*/
        /* LPTIM2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80046b8:	2301      	movs	r3, #1
 80046ba:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80046be:	e006      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 80046c0:	bf00      	nop
 80046c2:	e004      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 80046c4:	bf00      	nop
 80046c6:	e002      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 80046c8:	bf00      	nop
 80046ca:	e000      	b.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 80046cc:	bf00      	nop
    }

    if (ret == HAL_OK)
 80046ce:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d10d      	bne.n	80046f2 <HAL_RCCEx_PeriphCLKConfig+0xf52>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 80046d6:	4b26      	ldr	r3, [pc, #152]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80046d8:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80046dc:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 80046e0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80046e4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80046e8:	4a21      	ldr	r2, [pc, #132]	@ (8004770 <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80046ea:	430b      	orrs	r3, r1
 80046ec:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80046f0:	e003      	b.n	80046fa <HAL_RCCEx_PeriphCLKConfig+0xf5a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80046f2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80046f6:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(LPTIM3)
  /*-------------------------- LPTIM3 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM3) == RCC_PERIPHCLK_LPTIM3)
 80046fa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80046fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004702:	2100      	movs	r1, #0
 8004704:	f8c7 10a8 	str.w	r1, [r7, #168]	@ 0xa8
 8004708:	f003 0320 	and.w	r3, r3, #32
 800470c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004710:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8004714:	460b      	mov	r3, r1
 8004716:	4313      	orrs	r3, r2
 8004718:	d057      	beq.n	80047ca <HAL_RCCEx_PeriphCLKConfig+0x102a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM3CLK(pPeriphClkInit->Lptim3ClockSelection));

    switch (pPeriphClkInit->Lptim3ClockSelection)
 800471a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800471e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8004722:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004726:	d033      	beq.n	8004790 <HAL_RCCEx_PeriphCLKConfig+0xff0>
 8004728:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800472c:	d82c      	bhi.n	8004788 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 800472e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004732:	d02f      	beq.n	8004794 <HAL_RCCEx_PeriphCLKConfig+0xff4>
 8004734:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004738:	d826      	bhi.n	8004788 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 800473a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800473e:	d02b      	beq.n	8004798 <HAL_RCCEx_PeriphCLKConfig+0xff8>
 8004740:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004744:	d820      	bhi.n	8004788 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 8004746:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800474a:	d013      	beq.n	8004774 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 800474c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004750:	d81a      	bhi.n	8004788 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 8004752:	2b00      	cmp	r3, #0
 8004754:	d022      	beq.n	800479c <HAL_RCCEx_PeriphCLKConfig+0xffc>
 8004756:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800475a:	d115      	bne.n	8004788 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
        /* LPTIM3 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM3CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM3*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800475c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004760:	3308      	adds	r3, #8
 8004762:	4618      	mov	r0, r3
 8004764:	f000 ffa6 	bl	80056b4 <RCCEx_PLL2_Config>
 8004768:	4603      	mov	r3, r0
 800476a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM3 clock source config set later after clock selection check */
        break;
 800476e:	e016      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8004770:	44020c00 	.word	0x44020c00

      case RCC_LPTIM3CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM3*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004774:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004778:	3330      	adds	r3, #48	@ 0x30
 800477a:	4618      	mov	r0, r3
 800477c:	f001 f832 	bl	80057e4 <RCCEx_PLL3_Config>
 8004780:	4603      	mov	r3, r0
 8004782:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM3 clock source config set later after clock selection check */
        break;
 8004786:	e00a      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
      case RCC_LPTIM3CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM3 clock*/
        /* LPTIM3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004788:	2301      	movs	r3, #1
 800478a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800478e:	e006      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 8004790:	bf00      	nop
 8004792:	e004      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 8004794:	bf00      	nop
 8004796:	e002      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 8004798:	bf00      	nop
 800479a:	e000      	b.n	800479e <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 800479c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800479e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d10d      	bne.n	80047c2 <HAL_RCCEx_PeriphCLKConfig+0x1022>
    {
      /* Set the source of LPTIM3 clock*/
      __HAL_RCC_LPTIM3_CONFIG(pPeriphClkInit->Lptim3ClockSelection);
 80047a6:	4bbb      	ldr	r3, [pc, #748]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 80047a8:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80047ac:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 80047b0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80047b4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80047b8:	4ab6      	ldr	r2, [pc, #728]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 80047ba:	430b      	orrs	r3, r1
 80047bc:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80047c0:	e003      	b.n	80047ca <HAL_RCCEx_PeriphCLKConfig+0x102a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80047c2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80047c6:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM3 */

#if defined(LPTIM4)
  /*-------------------------- LPTIM4 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM4) == RCC_PERIPHCLK_LPTIM4)
 80047ca:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80047ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047d2:	2100      	movs	r1, #0
 80047d4:	f8c7 10a0 	str.w	r1, [r7, #160]	@ 0xa0
 80047d8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80047dc:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80047e0:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 80047e4:	460b      	mov	r3, r1
 80047e6:	4313      	orrs	r3, r2
 80047e8:	d055      	beq.n	8004896 <HAL_RCCEx_PeriphCLKConfig+0x10f6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM4CLK(pPeriphClkInit->Lptim4ClockSelection));

    switch (pPeriphClkInit->Lptim4ClockSelection)
 80047ea:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80047ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80047f2:	f5b3 0fa0 	cmp.w	r3, #5242880	@ 0x500000
 80047f6:	d031      	beq.n	800485c <HAL_RCCEx_PeriphCLKConfig+0x10bc>
 80047f8:	f5b3 0fa0 	cmp.w	r3, #5242880	@ 0x500000
 80047fc:	d82a      	bhi.n	8004854 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 80047fe:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004802:	d02d      	beq.n	8004860 <HAL_RCCEx_PeriphCLKConfig+0x10c0>
 8004804:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004808:	d824      	bhi.n	8004854 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 800480a:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800480e:	d029      	beq.n	8004864 <HAL_RCCEx_PeriphCLKConfig+0x10c4>
 8004810:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8004814:	d81e      	bhi.n	8004854 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 8004816:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800481a:	d011      	beq.n	8004840 <HAL_RCCEx_PeriphCLKConfig+0x10a0>
 800481c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004820:	d818      	bhi.n	8004854 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 8004822:	2b00      	cmp	r3, #0
 8004824:	d020      	beq.n	8004868 <HAL_RCCEx_PeriphCLKConfig+0x10c8>
 8004826:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800482a:	d113      	bne.n	8004854 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
        /* LPTIM4 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM4CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM4*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800482c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004830:	3308      	adds	r3, #8
 8004832:	4618      	mov	r0, r3
 8004834:	f000 ff3e 	bl	80056b4 <RCCEx_PLL2_Config>
 8004838:	4603      	mov	r3, r0
 800483a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM4 clock source config set later after clock selection check */
        break;
 800483e:	e014      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>

      case RCC_LPTIM4CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM4*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004840:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004844:	3330      	adds	r3, #48	@ 0x30
 8004846:	4618      	mov	r0, r3
 8004848:	f000 ffcc 	bl	80057e4 <RCCEx_PLL3_Config>
 800484c:	4603      	mov	r3, r0
 800484e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM4 clock source config set later after clock selection check */
        break;
 8004852:	e00a      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>
      case RCC_LPTIM4CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM4 clock*/
        /* LPTIM4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004854:	2301      	movs	r3, #1
 8004856:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800485a:	e006      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 800485c:	bf00      	nop
 800485e:	e004      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 8004860:	bf00      	nop
 8004862:	e002      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 8004864:	bf00      	nop
 8004866:	e000      	b.n	800486a <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 8004868:	bf00      	nop
    }

    if (ret == HAL_OK)
 800486a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800486e:	2b00      	cmp	r3, #0
 8004870:	d10d      	bne.n	800488e <HAL_RCCEx_PeriphCLKConfig+0x10ee>
    {
      /* Set the source of LPTIM4 clock*/
      __HAL_RCC_LPTIM4_CONFIG(pPeriphClkInit->Lptim4ClockSelection);
 8004872:	4b88      	ldr	r3, [pc, #544]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004874:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004878:	f423 01e0 	bic.w	r1, r3, #7340032	@ 0x700000
 800487c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004880:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8004884:	4a83      	ldr	r2, [pc, #524]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004886:	430b      	orrs	r3, r1
 8004888:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 800488c:	e003      	b.n	8004896 <HAL_RCCEx_PeriphCLKConfig+0x10f6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800488e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004892:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM4 */

#if defined(LPTIM5)
  /*-------------------------- LPTIM5 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM5) == RCC_PERIPHCLK_LPTIM5)
 8004896:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800489a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800489e:	2100      	movs	r1, #0
 80048a0:	f8c7 1098 	str.w	r1, [r7, #152]	@ 0x98
 80048a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80048a8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80048ac:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 80048b0:	460b      	mov	r3, r1
 80048b2:	4313      	orrs	r3, r2
 80048b4:	d055      	beq.n	8004962 <HAL_RCCEx_PeriphCLKConfig+0x11c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM5CLK(pPeriphClkInit->Lptim5ClockSelection));

    switch (pPeriphClkInit->Lptim5ClockSelection)
 80048b6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80048ba:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80048be:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 80048c2:	d031      	beq.n	8004928 <HAL_RCCEx_PeriphCLKConfig+0x1188>
 80048c4:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 80048c8:	d82a      	bhi.n	8004920 <HAL_RCCEx_PeriphCLKConfig+0x1180>
 80048ca:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80048ce:	d02d      	beq.n	800492c <HAL_RCCEx_PeriphCLKConfig+0x118c>
 80048d0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80048d4:	d824      	bhi.n	8004920 <HAL_RCCEx_PeriphCLKConfig+0x1180>
 80048d6:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80048da:	d029      	beq.n	8004930 <HAL_RCCEx_PeriphCLKConfig+0x1190>
 80048dc:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80048e0:	d81e      	bhi.n	8004920 <HAL_RCCEx_PeriphCLKConfig+0x1180>
 80048e2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80048e6:	d011      	beq.n	800490c <HAL_RCCEx_PeriphCLKConfig+0x116c>
 80048e8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80048ec:	d818      	bhi.n	8004920 <HAL_RCCEx_PeriphCLKConfig+0x1180>
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d020      	beq.n	8004934 <HAL_RCCEx_PeriphCLKConfig+0x1194>
 80048f2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80048f6:	d113      	bne.n	8004920 <HAL_RCCEx_PeriphCLKConfig+0x1180>
        /* LPTIM5 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM5CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM5*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80048f8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80048fc:	3308      	adds	r3, #8
 80048fe:	4618      	mov	r0, r3
 8004900:	f000 fed8 	bl	80056b4 <RCCEx_PLL2_Config>
 8004904:	4603      	mov	r3, r0
 8004906:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM5 clock source config set later after clock selection check */
        break;
 800490a:	e014      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>

      case RCC_LPTIM5CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM5*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800490c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004910:	3330      	adds	r3, #48	@ 0x30
 8004912:	4618      	mov	r0, r3
 8004914:	f000 ff66 	bl	80057e4 <RCCEx_PLL3_Config>
 8004918:	4603      	mov	r3, r0
 800491a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM5 clock source config set later after clock selection check */
        break;
 800491e:	e00a      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>
      case RCC_LPTIM5CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM5 clock*/
        /* LPTIM5 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004920:	2301      	movs	r3, #1
 8004922:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004926:	e006      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004928:	bf00      	nop
 800492a:	e004      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 800492c:	bf00      	nop
 800492e:	e002      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004930:	bf00      	nop
 8004932:	e000      	b.n	8004936 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004934:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004936:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800493a:	2b00      	cmp	r3, #0
 800493c:	d10d      	bne.n	800495a <HAL_RCCEx_PeriphCLKConfig+0x11ba>
    {
      /* Set the source of LPTIM5 clock*/
      __HAL_RCC_LPTIM5_CONFIG(pPeriphClkInit->Lptim5ClockSelection);
 800493e:	4b55      	ldr	r3, [pc, #340]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004940:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004944:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8004948:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800494c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8004950:	4a50      	ldr	r2, [pc, #320]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004952:	430b      	orrs	r3, r1
 8004954:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 8004958:	e003      	b.n	8004962 <HAL_RCCEx_PeriphCLKConfig+0x11c2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800495a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800495e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM5 */

#if defined(LPTIM6)
  /*-------------------------- LPTIM6 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM6) == RCC_PERIPHCLK_LPTIM6)
 8004962:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004966:	e9d3 2300 	ldrd	r2, r3, [r3]
 800496a:	2100      	movs	r1, #0
 800496c:	f8c7 1090 	str.w	r1, [r7, #144]	@ 0x90
 8004970:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004974:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8004978:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 800497c:	460b      	mov	r3, r1
 800497e:	4313      	orrs	r3, r2
 8004980:	d055      	beq.n	8004a2e <HAL_RCCEx_PeriphCLKConfig+0x128e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM6CLK(pPeriphClkInit->Lptim6ClockSelection));

    switch (pPeriphClkInit->Lptim6ClockSelection)
 8004982:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004986:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800498a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800498e:	d031      	beq.n	80049f4 <HAL_RCCEx_PeriphCLKConfig+0x1254>
 8004990:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8004994:	d82a      	bhi.n	80049ec <HAL_RCCEx_PeriphCLKConfig+0x124c>
 8004996:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800499a:	d02d      	beq.n	80049f8 <HAL_RCCEx_PeriphCLKConfig+0x1258>
 800499c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80049a0:	d824      	bhi.n	80049ec <HAL_RCCEx_PeriphCLKConfig+0x124c>
 80049a2:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80049a6:	d029      	beq.n	80049fc <HAL_RCCEx_PeriphCLKConfig+0x125c>
 80049a8:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80049ac:	d81e      	bhi.n	80049ec <HAL_RCCEx_PeriphCLKConfig+0x124c>
 80049ae:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80049b2:	d011      	beq.n	80049d8 <HAL_RCCEx_PeriphCLKConfig+0x1238>
 80049b4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80049b8:	d818      	bhi.n	80049ec <HAL_RCCEx_PeriphCLKConfig+0x124c>
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	d020      	beq.n	8004a00 <HAL_RCCEx_PeriphCLKConfig+0x1260>
 80049be:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80049c2:	d113      	bne.n	80049ec <HAL_RCCEx_PeriphCLKConfig+0x124c>
        /* LPTIM6 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM6CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM6*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80049c4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80049c8:	3308      	adds	r3, #8
 80049ca:	4618      	mov	r0, r3
 80049cc:	f000 fe72 	bl	80056b4 <RCCEx_PLL2_Config>
 80049d0:	4603      	mov	r3, r0
 80049d2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM6 clock source config set later after clock selection check */
        break;
 80049d6:	e014      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>

      case RCC_LPTIM6CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM6*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80049d8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80049dc:	3330      	adds	r3, #48	@ 0x30
 80049de:	4618      	mov	r0, r3
 80049e0:	f000 ff00 	bl	80057e4 <RCCEx_PLL3_Config>
 80049e4:	4603      	mov	r3, r0
 80049e6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM6 clock source config set later after clock selection check */
        break;
 80049ea:	e00a      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>
      case RCC_LPTIM6CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM6 clock*/
        /* LPTIM6 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80049ec:	2301      	movs	r3, #1
 80049ee:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80049f2:	e006      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 80049f4:	bf00      	nop
 80049f6:	e004      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 80049f8:	bf00      	nop
 80049fa:	e002      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 80049fc:	bf00      	nop
 80049fe:	e000      	b.n	8004a02 <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 8004a00:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004a02:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d10d      	bne.n	8004a26 <HAL_RCCEx_PeriphCLKConfig+0x1286>
    {
      /* Set the source of LPTIM6 clock*/
      __HAL_RCC_LPTIM6_CONFIG(pPeriphClkInit->Lptim6ClockSelection);
 8004a0a:	4b22      	ldr	r3, [pc, #136]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a0c:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004a10:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8004a14:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a18:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8004a1c:	4a1d      	ldr	r2, [pc, #116]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a1e:	430b      	orrs	r3, r1
 8004a20:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 8004a24:	e003      	b.n	8004a2e <HAL_RCCEx_PeriphCLKConfig+0x128e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004a26:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004a2a:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM6 */

#if defined(SAI1)
  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8004a2e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a36:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8004a3a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004a3e:	2300      	movs	r3, #0
 8004a40:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004a44:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8004a48:	460b      	mov	r3, r1
 8004a4a:	4313      	orrs	r3, r2
 8004a4c:	d055      	beq.n	8004afa <HAL_RCCEx_PeriphCLKConfig+0x135a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(pPeriphClkInit->Sai1ClockSelection));

    switch (pPeriphClkInit->Sai1ClockSelection)
 8004a4e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a52:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8004a56:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004a5a:	d035      	beq.n	8004ac8 <HAL_RCCEx_PeriphCLKConfig+0x1328>
 8004a5c:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004a60:	d82e      	bhi.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004a62:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004a66:	d031      	beq.n	8004acc <HAL_RCCEx_PeriphCLKConfig+0x132c>
 8004a68:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004a6c:	d828      	bhi.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004a6e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004a72:	d01b      	beq.n	8004aac <HAL_RCCEx_PeriphCLKConfig+0x130c>
 8004a74:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004a78:	d822      	bhi.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	d003      	beq.n	8004a86 <HAL_RCCEx_PeriphCLKConfig+0x12e6>
 8004a7e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004a82:	d009      	beq.n	8004a98 <HAL_RCCEx_PeriphCLKConfig+0x12f8>
 8004a84:	e01c      	b.n	8004ac0 <HAL_RCCEx_PeriphCLKConfig+0x1320>
    {
      case RCC_SAI1CLKSOURCE_PLL1Q:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004a86:	4b03      	ldr	r3, [pc, #12]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a88:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a8a:	4a02      	ldr	r2, [pc, #8]	@ (8004a94 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a8c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004a90:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004a92:	e01c      	b.n	8004ace <HAL_RCCEx_PeriphCLKConfig+0x132e>
 8004a94:	44020c00 	.word	0x44020c00

      case RCC_SAI1CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for SAI1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004a98:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a9c:	3308      	adds	r3, #8
 8004a9e:	4618      	mov	r0, r3
 8004aa0:	f000 fe08 	bl	80056b4 <RCCEx_PLL2_Config>
 8004aa4:	4603      	mov	r3, r0
 8004aa6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004aaa:	e010      	b.n	8004ace <HAL_RCCEx_PeriphCLKConfig+0x132e>

      case RCC_SAI1CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SAI1*/
        /* PLL3 P input clock, parameters M, N & P configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004aac:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ab0:	3330      	adds	r3, #48	@ 0x30
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	f000 fe96 	bl	80057e4 <RCCEx_PLL3_Config>
 8004ab8:	4603      	mov	r3, r0
 8004aba:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004abe:	e006      	b.n	8004ace <HAL_RCCEx_PeriphCLKConfig+0x132e>
      case RCC_SAI1CLKSOURCE_CLKP:      /* CLKP is used as source of SAI1 clock*/
        /* SAI1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004ac0:	2301      	movs	r3, #1
 8004ac2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004ac6:	e002      	b.n	8004ace <HAL_RCCEx_PeriphCLKConfig+0x132e>
        break;
 8004ac8:	bf00      	nop
 8004aca:	e000      	b.n	8004ace <HAL_RCCEx_PeriphCLKConfig+0x132e>
        break;
 8004acc:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004ace:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004ad2:	2b00      	cmp	r3, #0
 8004ad4:	d10d      	bne.n	8004af2 <HAL_RCCEx_PeriphCLKConfig+0x1352>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8004ad6:	4bc3      	ldr	r3, [pc, #780]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004ad8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004adc:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8004ae0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ae4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8004ae8:	4abe      	ldr	r2, [pc, #760]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004aea:	430b      	orrs	r3, r1
 8004aec:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004af0:	e003      	b.n	8004afa <HAL_RCCEx_PeriphCLKConfig+0x135a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004af2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004af6:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SAI1*/

#if defined(SAI2)
  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2)
 8004afa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004afe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b02:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8004b06:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004b0a:	2300      	movs	r3, #0
 8004b0c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004b10:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8004b14:	460b      	mov	r3, r1
 8004b16:	4313      	orrs	r3, r2
 8004b18:	d051      	beq.n	8004bbe <HAL_RCCEx_PeriphCLKConfig+0x141e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(pPeriphClkInit->Sai2ClockSelection));

    switch (pPeriphClkInit->Sai2ClockSelection)
 8004b1a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b1e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004b22:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004b26:	d033      	beq.n	8004b90 <HAL_RCCEx_PeriphCLKConfig+0x13f0>
 8004b28:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004b2c:	d82c      	bhi.n	8004b88 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004b2e:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004b32:	d02d      	beq.n	8004b90 <HAL_RCCEx_PeriphCLKConfig+0x13f0>
 8004b34:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004b38:	d826      	bhi.n	8004b88 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004b3a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004b3e:	d019      	beq.n	8004b74 <HAL_RCCEx_PeriphCLKConfig+0x13d4>
 8004b40:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004b44:	d820      	bhi.n	8004b88 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	d003      	beq.n	8004b52 <HAL_RCCEx_PeriphCLKConfig+0x13b2>
 8004b4a:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8004b4e:	d007      	beq.n	8004b60 <HAL_RCCEx_PeriphCLKConfig+0x13c0>
 8004b50:	e01a      	b.n	8004b88 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
    {
      case RCC_SAI2CLKSOURCE_PLL1Q:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004b52:	4ba4      	ldr	r3, [pc, #656]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004b54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b56:	4aa3      	ldr	r2, [pc, #652]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004b58:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004b5c:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004b5e:	e018      	b.n	8004b92 <HAL_RCCEx_PeriphCLKConfig+0x13f2>

      case RCC_SAI2CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SAI2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004b60:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b64:	3308      	adds	r3, #8
 8004b66:	4618      	mov	r0, r3
 8004b68:	f000 fda4 	bl	80056b4 <RCCEx_PLL2_Config>
 8004b6c:	4603      	mov	r3, r0
 8004b6e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004b72:	e00e      	b.n	8004b92 <HAL_RCCEx_PeriphCLKConfig+0x13f2>

      case RCC_SAI2CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SAI2*/
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004b74:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b78:	3330      	adds	r3, #48	@ 0x30
 8004b7a:	4618      	mov	r0, r3
 8004b7c:	f000 fe32 	bl	80057e4 <RCCEx_PLL3_Config>
 8004b80:	4603      	mov	r3, r0
 8004b82:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004b86:	e004      	b.n	8004b92 <HAL_RCCEx_PeriphCLKConfig+0x13f2>
      case RCC_SAI2CLKSOURCE_CLKP:      /* CLKP is used as source of SAI2 clock*/
        /* SAI2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004b88:	2301      	movs	r3, #1
 8004b8a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004b8e:	e000      	b.n	8004b92 <HAL_RCCEx_PeriphCLKConfig+0x13f2>
        break;
 8004b90:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004b92:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d10d      	bne.n	8004bb6 <HAL_RCCEx_PeriphCLKConfig+0x1416>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8004b9a:	4b92      	ldr	r3, [pc, #584]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004b9c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004ba0:	f423 1160 	bic.w	r1, r3, #3670016	@ 0x380000
 8004ba4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ba8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004bac:	4a8d      	ldr	r2, [pc, #564]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004bae:	430b      	orrs	r3, r1
 8004bb0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004bb4:	e003      	b.n	8004bbe <HAL_RCCEx_PeriphCLKConfig+0x141e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004bb6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004bba:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* SAI2*/

  /*-------------------------- ADCDAC clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 8004bbe:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004bc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004bc6:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 8004bca:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004bcc:	2300      	movs	r3, #0
 8004bce:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004bd0:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8004bd4:	460b      	mov	r3, r1
 8004bd6:	4313      	orrs	r3, r2
 8004bd8:	d032      	beq.n	8004c40 <HAL_RCCEx_PeriphCLKConfig+0x14a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCDACCLKSOURCE(pPeriphClkInit->AdcDacClockSelection));

    switch (pPeriphClkInit->AdcDacClockSelection)
 8004bda:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004bde:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8004be2:	2b05      	cmp	r3, #5
 8004be4:	d80f      	bhi.n	8004c06 <HAL_RCCEx_PeriphCLKConfig+0x1466>
 8004be6:	2b03      	cmp	r3, #3
 8004be8:	d211      	bcs.n	8004c0e <HAL_RCCEx_PeriphCLKConfig+0x146e>
 8004bea:	2b01      	cmp	r3, #1
 8004bec:	d911      	bls.n	8004c12 <HAL_RCCEx_PeriphCLKConfig+0x1472>
 8004bee:	2b02      	cmp	r3, #2
 8004bf0:	d109      	bne.n	8004c06 <HAL_RCCEx_PeriphCLKConfig+0x1466>
        /* ADCDAC clock source config set later after clock selection check */
        break;

      case RCC_ADCDACCLKSOURCE_PLL2R:
        /* PLL2 input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004bf2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004bf6:	3308      	adds	r3, #8
 8004bf8:	4618      	mov	r0, r3
 8004bfa:	f000 fd5b 	bl	80056b4 <RCCEx_PLL2_Config>
 8004bfe:	4603      	mov	r3, r0
 8004c00:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004c04:	e006      	b.n	8004c14 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        /* ADCDAC clock source configuration done later after clock selection check */
        break;


      default:
        ret = HAL_ERROR;
 8004c06:	2301      	movs	r3, #1
 8004c08:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004c0c:	e002      	b.n	8004c14 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        break;
 8004c0e:	bf00      	nop
 8004c10:	e000      	b.n	8004c14 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        break;
 8004c12:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004c14:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d10d      	bne.n	8004c38 <HAL_RCCEx_PeriphCLKConfig+0x1498>
    {
      /* Configure the ADCDAC interface clock source */
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8004c1c:	4b71      	ldr	r3, [pc, #452]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c1e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004c22:	f023 0107 	bic.w	r1, r3, #7
 8004c26:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c2a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8004c2e:	4a6d      	ldr	r2, [pc, #436]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c30:	430b      	orrs	r3, r1
 8004c32:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004c36:	e003      	b.n	8004c40 <HAL_RCCEx_PeriphCLKConfig+0x14a0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004c38:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c3c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- DAC low-power clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC_LP) == RCC_PERIPHCLK_DAC_LP)
 8004c40:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c48:	2100      	movs	r1, #0
 8004c4a:	6739      	str	r1, [r7, #112]	@ 0x70
 8004c4c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004c50:	677b      	str	r3, [r7, #116]	@ 0x74
 8004c52:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8004c56:	460b      	mov	r3, r1
 8004c58:	4313      	orrs	r3, r2
 8004c5a:	d024      	beq.n	8004ca6 <HAL_RCCEx_PeriphCLKConfig+0x1506>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DACLPCLKSOURCE(pPeriphClkInit->DacLowPowerClockSelection));

    switch (pPeriphClkInit->DacLowPowerClockSelection)
 8004c5c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c60:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004c64:	2b00      	cmp	r3, #0
 8004c66:	d005      	beq.n	8004c74 <HAL_RCCEx_PeriphCLKConfig+0x14d4>
 8004c68:	2b08      	cmp	r3, #8
 8004c6a:	d005      	beq.n	8004c78 <HAL_RCCEx_PeriphCLKConfig+0x14d8>
        /* LSI is used as clock source for DAC low-power clock */
        /* DAC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004c72:	e002      	b.n	8004c7a <HAL_RCCEx_PeriphCLKConfig+0x14da>
        break;
 8004c74:	bf00      	nop
 8004c76:	e000      	b.n	8004c7a <HAL_RCCEx_PeriphCLKConfig+0x14da>
        break;
 8004c78:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004c7a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c7e:	2b00      	cmp	r3, #0
 8004c80:	d10d      	bne.n	8004c9e <HAL_RCCEx_PeriphCLKConfig+0x14fe>
    {
      /* Configure the DAC low-power interface clock source */
      __HAL_RCC_DAC_LP_CONFIG(pPeriphClkInit->DacLowPowerClockSelection);
 8004c82:	4b58      	ldr	r3, [pc, #352]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c84:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004c88:	f023 0108 	bic.w	r1, r3, #8
 8004c8c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c90:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004c94:	4a53      	ldr	r2, [pc, #332]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c96:	430b      	orrs	r3, r1
 8004c98:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004c9c:	e003      	b.n	8004ca6 <HAL_RCCEx_PeriphCLKConfig+0x1506>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004c9e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004ca2:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- RTC clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8004ca6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004caa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cae:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8004cb2:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004cb8:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8004cbc:	460b      	mov	r3, r1
 8004cbe:	4313      	orrs	r3, r2
 8004cc0:	f000 80b9 	beq.w	8004e36 <HAL_RCCEx_PeriphCLKConfig+0x1696>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(pPeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->DBPCR, PWR_DBPCR_DBP);
 8004cc4:	4b48      	ldr	r3, [pc, #288]	@ (8004de8 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004cc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cc8:	4a47      	ldr	r2, [pc, #284]	@ (8004de8 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004cca:	f043 0301 	orr.w	r3, r3, #1
 8004cce:	6253      	str	r3, [r2, #36]	@ 0x24

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8004cd0:	f7fc fb22 	bl	8001318 <HAL_GetTick>
 8004cd4:	f8c7 0154 	str.w	r0, [r7, #340]	@ 0x154

    while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8004cd8:	e00b      	b.n	8004cf2 <HAL_RCCEx_PeriphCLKConfig+0x1552>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004cda:	f7fc fb1d 	bl	8001318 <HAL_GetTick>
 8004cde:	4602      	mov	r2, r0
 8004ce0:	f8d7 3154 	ldr.w	r3, [r7, #340]	@ 0x154
 8004ce4:	1ad3      	subs	r3, r2, r3
 8004ce6:	2b02      	cmp	r3, #2
 8004ce8:	d903      	bls.n	8004cf2 <HAL_RCCEx_PeriphCLKConfig+0x1552>
      {
        ret = HAL_TIMEOUT;
 8004cea:	2303      	movs	r3, #3
 8004cec:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004cf0:	e005      	b.n	8004cfe <HAL_RCCEx_PeriphCLKConfig+0x155e>
    while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8004cf2:	4b3d      	ldr	r3, [pc, #244]	@ (8004de8 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004cf4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cf6:	f003 0301 	and.w	r3, r3, #1
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d0ed      	beq.n	8004cda <HAL_RCCEx_PeriphCLKConfig+0x153a>
      }
    }

    if (ret == HAL_OK)
 8004cfe:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	f040 8093 	bne.w	8004e2e <HAL_RCCEx_PeriphCLKConfig+0x168e>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8004d08:	4b36      	ldr	r3, [pc, #216]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d0a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d0e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004d12:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c

      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8004d16:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d023      	beq.n	8004d66 <HAL_RCCEx_PeriphCLKConfig+0x15c6>
 8004d1e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004d22:	f8d3 20f8 	ldr.w	r2, [r3, #248]	@ 0xf8
 8004d26:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d2a:	4293      	cmp	r3, r2
 8004d2c:	d01b      	beq.n	8004d66 <HAL_RCCEx_PeriphCLKConfig+0x15c6>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8004d2e:	4b2d      	ldr	r3, [pc, #180]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d30:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d34:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d38:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8004d3c:	4b29      	ldr	r3, [pc, #164]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d3e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d42:	4a28      	ldr	r2, [pc, #160]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d44:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004d48:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 8004d4c:	4b25      	ldr	r3, [pc, #148]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d4e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d52:	4a24      	ldr	r2, [pc, #144]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d54:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004d58:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 8004d5c:	4a21      	ldr	r2, [pc, #132]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d5e:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d62:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8004d66:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d6a:	f003 0301 	and.w	r3, r3, #1
 8004d6e:	2b00      	cmp	r3, #0
 8004d70:	d019      	beq.n	8004da6 <HAL_RCCEx_PeriphCLKConfig+0x1606>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d72:	f7fc fad1 	bl	8001318 <HAL_GetTick>
 8004d76:	f8c7 0154 	str.w	r0, [r7, #340]	@ 0x154

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004d7a:	e00d      	b.n	8004d98 <HAL_RCCEx_PeriphCLKConfig+0x15f8>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004d7c:	f7fc facc 	bl	8001318 <HAL_GetTick>
 8004d80:	4602      	mov	r2, r0
 8004d82:	f8d7 3154 	ldr.w	r3, [r7, #340]	@ 0x154
 8004d86:	1ad2      	subs	r2, r2, r3
 8004d88:	f241 3388 	movw	r3, #5000	@ 0x1388
 8004d8c:	429a      	cmp	r2, r3
 8004d8e:	d903      	bls.n	8004d98 <HAL_RCCEx_PeriphCLKConfig+0x15f8>
          {
            ret = HAL_TIMEOUT;
 8004d90:	2303      	movs	r3, #3
 8004d92:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
            break;
 8004d96:	e006      	b.n	8004da6 <HAL_RCCEx_PeriphCLKConfig+0x1606>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004d98:	4b12      	ldr	r3, [pc, #72]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d9a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d9e:	f003 0302 	and.w	r3, r3, #2
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	d0ea      	beq.n	8004d7c <HAL_RCCEx_PeriphCLKConfig+0x15dc>
          }
        }
      }

      if (ret == HAL_OK)
 8004da6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d13a      	bne.n	8004e24 <HAL_RCCEx_PeriphCLKConfig+0x1684>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 8004dae:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004db2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004db6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004dba:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004dbe:	d115      	bne.n	8004dec <HAL_RCCEx_PeriphCLKConfig+0x164c>
 8004dc0:	4b08      	ldr	r3, [pc, #32]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004dc2:	69db      	ldr	r3, [r3, #28]
 8004dc4:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 8004dc8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004dcc:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004dd0:	091b      	lsrs	r3, r3, #4
 8004dd2:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8004dd6:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8004dda:	4a02      	ldr	r2, [pc, #8]	@ (8004de4 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004ddc:	430b      	orrs	r3, r1
 8004dde:	61d3      	str	r3, [r2, #28]
 8004de0:	e00a      	b.n	8004df8 <HAL_RCCEx_PeriphCLKConfig+0x1658>
 8004de2:	bf00      	nop
 8004de4:	44020c00 	.word	0x44020c00
 8004de8:	44020800 	.word	0x44020800
 8004dec:	4b9f      	ldr	r3, [pc, #636]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004dee:	69db      	ldr	r3, [r3, #28]
 8004df0:	4a9e      	ldr	r2, [pc, #632]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004df2:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8004df6:	61d3      	str	r3, [r2, #28]
 8004df8:	4b9c      	ldr	r3, [pc, #624]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004dfa:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004dfe:	4a9b      	ldr	r2, [pc, #620]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e00:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e04:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004e08:	4b98      	ldr	r3, [pc, #608]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e0a:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 8004e0e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e12:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004e16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e1a:	4a94      	ldr	r2, [pc, #592]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e1c:	430b      	orrs	r3, r1
 8004e1e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004e22:	e008      	b.n	8004e36 <HAL_RCCEx_PeriphCLKConfig+0x1696>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8004e24:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e28:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
 8004e2c:	e003      	b.n	8004e36 <HAL_RCCEx_PeriphCLKConfig+0x1696>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004e2e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e32:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*------------------------------ RNG Configuration -------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8004e36:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e3e:	f002 6380 	and.w	r3, r2, #67108864	@ 0x4000000
 8004e42:	663b      	str	r3, [r7, #96]	@ 0x60
 8004e44:	2300      	movs	r3, #0
 8004e46:	667b      	str	r3, [r7, #100]	@ 0x64
 8004e48:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8004e4c:	460b      	mov	r3, r1
 8004e4e:	4313      	orrs	r3, r2
 8004e50:	d035      	beq.n	8004ebe <HAL_RCCEx_PeriphCLKConfig+0x171e>
  {

    /* Check the parameters */
    assert_param(IS_RCC_RNGCLKSOURCE(pPeriphClkInit->RngClockSelection));

    switch (pPeriphClkInit->RngClockSelection)
 8004e52:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e56:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8004e5a:	2b30      	cmp	r3, #48	@ 0x30
 8004e5c:	d014      	beq.n	8004e88 <HAL_RCCEx_PeriphCLKConfig+0x16e8>
 8004e5e:	2b30      	cmp	r3, #48	@ 0x30
 8004e60:	d80e      	bhi.n	8004e80 <HAL_RCCEx_PeriphCLKConfig+0x16e0>
 8004e62:	2b20      	cmp	r3, #32
 8004e64:	d012      	beq.n	8004e8c <HAL_RCCEx_PeriphCLKConfig+0x16ec>
 8004e66:	2b20      	cmp	r3, #32
 8004e68:	d80a      	bhi.n	8004e80 <HAL_RCCEx_PeriphCLKConfig+0x16e0>
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	d010      	beq.n	8004e90 <HAL_RCCEx_PeriphCLKConfig+0x16f0>
 8004e6e:	2b10      	cmp	r3, #16
 8004e70:	d106      	bne.n	8004e80 <HAL_RCCEx_PeriphCLKConfig+0x16e0>
        /* RNG clock source configuration done later after clock selection check */
        break;

      case RCC_RNGCLKSOURCE_PLL1Q: /* PLL1 is used as clock source for RNG*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004e72:	4b7e      	ldr	r3, [pc, #504]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004e76:	4a7d      	ldr	r2, [pc, #500]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e78:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004e7c:	6293      	str	r3, [r2, #40]	@ 0x28
        /* RNG clock source configuration done later after clock selection check */
        break;
 8004e7e:	e008      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x16f2>

        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004e80:	2301      	movs	r3, #1
 8004e82:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004e86:	e004      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004e88:	bf00      	nop
 8004e8a:	e002      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004e8c:	bf00      	nop
 8004e8e:	e000      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004e90:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004e92:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e96:	2b00      	cmp	r3, #0
 8004e98:	d10d      	bne.n	8004eb6 <HAL_RCCEx_PeriphCLKConfig+0x1716>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8004e9a:	4b74      	ldr	r3, [pc, #464]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e9c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004ea0:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8004ea4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ea8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8004eac:	4a6f      	ldr	r2, [pc, #444]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004eae:	430b      	orrs	r3, r1
 8004eb0:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004eb4:	e003      	b.n	8004ebe <HAL_RCCEx_PeriphCLKConfig+0x171e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004eb6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004eba:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }

#if defined(SDMMC1)
  /*-------------------------- SDMMC1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8004ebe:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ec2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ec6:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8004eca:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004ecc:	2300      	movs	r3, #0
 8004ece:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004ed0:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 8004ed4:	460b      	mov	r3, r1
 8004ed6:	4313      	orrs	r3, r2
 8004ed8:	d033      	beq.n	8004f42 <HAL_RCCEx_PeriphCLKConfig+0x17a2>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(pPeriphClkInit->Sdmmc1ClockSelection));

    switch (pPeriphClkInit->Sdmmc1ClockSelection)
 8004eda:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ede:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	d002      	beq.n	8004eec <HAL_RCCEx_PeriphCLKConfig+0x174c>
 8004ee6:	2b40      	cmp	r3, #64	@ 0x40
 8004ee8:	d007      	beq.n	8004efa <HAL_RCCEx_PeriphCLKConfig+0x175a>
 8004eea:	e010      	b.n	8004f0e <HAL_RCCEx_PeriphCLKConfig+0x176e>
    {
      case RCC_SDMMC1CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SDMMC1 kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004eec:	4b5f      	ldr	r3, [pc, #380]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004eee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ef0:	4a5e      	ldr	r2, [pc, #376]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004ef2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004ef6:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SDMMC1 kernel clock source config set later after clock selection check */
        break;
 8004ef8:	e00d      	b.n	8004f16 <HAL_RCCEx_PeriphCLKConfig+0x1776>

      case RCC_SDMMC1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for SDMMC1 kernel clock*/
        /* PLL2R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004efa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004efe:	3308      	adds	r3, #8
 8004f00:	4618      	mov	r0, r3
 8004f02:	f000 fbd7 	bl	80056b4 <RCCEx_PLL2_Config>
 8004f06:	4603      	mov	r3, r0
 8004f08:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SDMMC1 kernel clock source config set later after clock selection check */
        break;
 8004f0c:	e003      	b.n	8004f16 <HAL_RCCEx_PeriphCLKConfig+0x1776>

      default:
        ret = HAL_ERROR;
 8004f0e:	2301      	movs	r3, #1
 8004f10:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004f14:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004f16:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f1a:	2b00      	cmp	r3, #0
 8004f1c:	d10d      	bne.n	8004f3a <HAL_RCCEx_PeriphCLKConfig+0x179a>
    {
      /* Configure the SDMMC1 clock source */
      __HAL_RCC_SDMMC1_CONFIG(pPeriphClkInit->Sdmmc1ClockSelection);
 8004f1e:	4b53      	ldr	r3, [pc, #332]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f20:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004f24:	f023 0140 	bic.w	r1, r3, #64	@ 0x40
 8004f28:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f2c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004f30:	4a4e      	ldr	r2, [pc, #312]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f32:	430b      	orrs	r3, r1
 8004f34:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004f38:	e003      	b.n	8004f42 <HAL_RCCEx_PeriphCLKConfig+0x17a2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004f3a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f3e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SDMMC1 */

#if defined(SDMMC2)
  /*-------------------------- SDMMC2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC2) == RCC_PERIPHCLK_SDMMC2)
 8004f42:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f4a:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8004f4e:	653b      	str	r3, [r7, #80]	@ 0x50
 8004f50:	2300      	movs	r3, #0
 8004f52:	657b      	str	r3, [r7, #84]	@ 0x54
 8004f54:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8004f58:	460b      	mov	r3, r1
 8004f5a:	4313      	orrs	r3, r2
 8004f5c:	d033      	beq.n	8004fc6 <HAL_RCCEx_PeriphCLKConfig+0x1826>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SDMMC2CLKSOURCE(pPeriphClkInit->Sdmmc2ClockSelection));

    switch (pPeriphClkInit->Sdmmc2ClockSelection)
 8004f5e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f62:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8004f66:	2b00      	cmp	r3, #0
 8004f68:	d002      	beq.n	8004f70 <HAL_RCCEx_PeriphCLKConfig+0x17d0>
 8004f6a:	2b80      	cmp	r3, #128	@ 0x80
 8004f6c:	d007      	beq.n	8004f7e <HAL_RCCEx_PeriphCLKConfig+0x17de>
 8004f6e:	e010      	b.n	8004f92 <HAL_RCCEx_PeriphCLKConfig+0x17f2>
    {
      case RCC_SDMMC2CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SDMMC2 kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004f70:	4b3e      	ldr	r3, [pc, #248]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004f74:	4a3d      	ldr	r2, [pc, #244]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f76:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004f7a:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SDMMC2 kernel clock source config set later after clock selection check */
        break;
 8004f7c:	e00d      	b.n	8004f9a <HAL_RCCEx_PeriphCLKConfig+0x17fa>

      case RCC_SDMMC2CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for SDMMC2 kernel clock*/
        /* PLL2R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004f7e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f82:	3308      	adds	r3, #8
 8004f84:	4618      	mov	r0, r3
 8004f86:	f000 fb95 	bl	80056b4 <RCCEx_PLL2_Config>
 8004f8a:	4603      	mov	r3, r0
 8004f8c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SDMMC2 kernel clock source config set later after clock selection check */
        break;
 8004f90:	e003      	b.n	8004f9a <HAL_RCCEx_PeriphCLKConfig+0x17fa>

      default:
        ret = HAL_ERROR;
 8004f92:	2301      	movs	r3, #1
 8004f94:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004f98:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004f9a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d10d      	bne.n	8004fbe <HAL_RCCEx_PeriphCLKConfig+0x181e>
    {
      /* Configure the SDMMC2 clock source */
      __HAL_RCC_SDMMC2_CONFIG(pPeriphClkInit->Sdmmc2ClockSelection);
 8004fa2:	4b32      	ldr	r3, [pc, #200]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004fa4:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004fa8:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8004fac:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fb0:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8004fb4:	4a2d      	ldr	r2, [pc, #180]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004fb6:	430b      	orrs	r3, r1
 8004fb8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004fbc:	e003      	b.n	8004fc6 <HAL_RCCEx_PeriphCLKConfig+0x1826>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004fbe:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004fc2:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }
#endif /* SDMMC2 */

  /*-------------------------- SPI1 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8004fc6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fce:	f002 6300 	and.w	r3, r2, #134217728	@ 0x8000000
 8004fd2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004fd4:	2300      	movs	r3, #0
 8004fd6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004fd8:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8004fdc:	460b      	mov	r3, r1
 8004fde:	4313      	orrs	r3, r2
 8004fe0:	d04a      	beq.n	8005078 <HAL_RCCEx_PeriphCLKConfig+0x18d8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI1CLKSOURCE(pPeriphClkInit->Spi1ClockSelection));

    switch (pPeriphClkInit->Spi1ClockSelection)
 8004fe2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fe6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004fea:	2b04      	cmp	r3, #4
 8004fec:	d827      	bhi.n	800503e <HAL_RCCEx_PeriphCLKConfig+0x189e>
 8004fee:	a201      	add	r2, pc, #4	@ (adr r2, 8004ff4 <HAL_RCCEx_PeriphCLKConfig+0x1854>)
 8004ff0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004ff4:	08005009 	.word	0x08005009
 8004ff8:	08005017 	.word	0x08005017
 8004ffc:	0800502b 	.word	0x0800502b
 8005000:	08005047 	.word	0x08005047
 8005004:	08005047 	.word	0x08005047
    {
      case RCC_SPI1CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI1 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005008:	4b18      	ldr	r3, [pc, #96]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 800500a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800500c:	4a17      	ldr	r2, [pc, #92]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 800500e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005012:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 8005014:	e018      	b.n	8005048 <HAL_RCCEx_PeriphCLKConfig+0x18a8>

      case RCC_SPI1CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005016:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800501a:	3308      	adds	r3, #8
 800501c:	4618      	mov	r0, r3
 800501e:	f000 fb49 	bl	80056b4 <RCCEx_PLL2_Config>
 8005022:	4603      	mov	r3, r0
 8005024:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 8005028:	e00e      	b.n	8005048 <HAL_RCCEx_PeriphCLKConfig+0x18a8>

#if defined(RCC_SPI1CLKSOURCE_PLL3P)
      case RCC_SPI1CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI1 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800502a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800502e:	3330      	adds	r3, #48	@ 0x30
 8005030:	4618      	mov	r0, r3
 8005032:	f000 fbd7 	bl	80057e4 <RCCEx_PLL3_Config>
 8005036:	4603      	mov	r3, r0
 8005038:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 800503c:	e004      	b.n	8005048 <HAL_RCCEx_PeriphCLKConfig+0x18a8>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1 clock */
        /* SPI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800503e:	2301      	movs	r3, #1
 8005040:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005044:	e000      	b.n	8005048 <HAL_RCCEx_PeriphCLKConfig+0x18a8>
        break;
 8005046:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005048:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800504c:	2b00      	cmp	r3, #0
 800504e:	d10f      	bne.n	8005070 <HAL_RCCEx_PeriphCLKConfig+0x18d0>
    {
      /* Configure the SPI1 clock source */
      __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 8005050:	4b06      	ldr	r3, [pc, #24]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8005052:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005056:	f023 0107 	bic.w	r1, r3, #7
 800505a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800505e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005062:	4a02      	ldr	r2, [pc, #8]	@ (800506c <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8005064:	430b      	orrs	r3, r1
 8005066:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800506a:	e005      	b.n	8005078 <HAL_RCCEx_PeriphCLKConfig+0x18d8>
 800506c:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005070:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005074:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- SPI2 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 8005078:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800507c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005080:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 8005084:	643b      	str	r3, [r7, #64]	@ 0x40
 8005086:	2300      	movs	r3, #0
 8005088:	647b      	str	r3, [r7, #68]	@ 0x44
 800508a:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 800508e:	460b      	mov	r3, r1
 8005090:	4313      	orrs	r3, r2
 8005092:	f000 8081 	beq.w	8005198 <HAL_RCCEx_PeriphCLKConfig+0x19f8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI2CLKSOURCE(pPeriphClkInit->Spi2ClockSelection));

    switch (pPeriphClkInit->Spi2ClockSelection)
 8005096:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800509a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800509e:	2b20      	cmp	r3, #32
 80050a0:	d85f      	bhi.n	8005162 <HAL_RCCEx_PeriphCLKConfig+0x19c2>
 80050a2:	a201      	add	r2, pc, #4	@ (adr r2, 80050a8 <HAL_RCCEx_PeriphCLKConfig+0x1908>)
 80050a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80050a8:	0800512d 	.word	0x0800512d
 80050ac:	08005163 	.word	0x08005163
 80050b0:	08005163 	.word	0x08005163
 80050b4:	08005163 	.word	0x08005163
 80050b8:	08005163 	.word	0x08005163
 80050bc:	08005163 	.word	0x08005163
 80050c0:	08005163 	.word	0x08005163
 80050c4:	08005163 	.word	0x08005163
 80050c8:	0800513b 	.word	0x0800513b
 80050cc:	08005163 	.word	0x08005163
 80050d0:	08005163 	.word	0x08005163
 80050d4:	08005163 	.word	0x08005163
 80050d8:	08005163 	.word	0x08005163
 80050dc:	08005163 	.word	0x08005163
 80050e0:	08005163 	.word	0x08005163
 80050e4:	08005163 	.word	0x08005163
 80050e8:	0800514f 	.word	0x0800514f
 80050ec:	08005163 	.word	0x08005163
 80050f0:	08005163 	.word	0x08005163
 80050f4:	08005163 	.word	0x08005163
 80050f8:	08005163 	.word	0x08005163
 80050fc:	08005163 	.word	0x08005163
 8005100:	08005163 	.word	0x08005163
 8005104:	08005163 	.word	0x08005163
 8005108:	0800516b 	.word	0x0800516b
 800510c:	08005163 	.word	0x08005163
 8005110:	08005163 	.word	0x08005163
 8005114:	08005163 	.word	0x08005163
 8005118:	08005163 	.word	0x08005163
 800511c:	08005163 	.word	0x08005163
 8005120:	08005163 	.word	0x08005163
 8005124:	08005163 	.word	0x08005163
 8005128:	0800516b 	.word	0x0800516b
    {
      case RCC_SPI2CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI2 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800512c:	4bab      	ldr	r3, [pc, #684]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800512e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005130:	4aaa      	ldr	r2, [pc, #680]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005132:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005136:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 8005138:	e018      	b.n	800516c <HAL_RCCEx_PeriphCLKConfig+0x19cc>

      case RCC_SPI2CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800513a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800513e:	3308      	adds	r3, #8
 8005140:	4618      	mov	r0, r3
 8005142:	f000 fab7 	bl	80056b4 <RCCEx_PLL2_Config>
 8005146:	4603      	mov	r3, r0
 8005148:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 800514c:	e00e      	b.n	800516c <HAL_RCCEx_PeriphCLKConfig+0x19cc>

#if defined(RCC_SPI2CLKSOURCE_PLL3P)
      case RCC_SPI2CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI2 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800514e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005152:	3330      	adds	r3, #48	@ 0x30
 8005154:	4618      	mov	r0, r3
 8005156:	f000 fb45 	bl	80057e4 <RCCEx_PLL3_Config>
 800515a:	4603      	mov	r3, r0
 800515c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 8005160:	e004      	b.n	800516c <HAL_RCCEx_PeriphCLKConfig+0x19cc>
        /* HSI, HSE, or CSI oscillator is used as source of SPI2 clock */
        /* SPI2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005162:	2301      	movs	r3, #1
 8005164:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005168:	e000      	b.n	800516c <HAL_RCCEx_PeriphCLKConfig+0x19cc>
        break;
 800516a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800516c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005170:	2b00      	cmp	r3, #0
 8005172:	d10d      	bne.n	8005190 <HAL_RCCEx_PeriphCLKConfig+0x19f0>
    {
      /* Configure the SPI2 clock source */
      __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 8005174:	4b99      	ldr	r3, [pc, #612]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005176:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800517a:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 800517e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005182:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005186:	4a95      	ldr	r2, [pc, #596]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005188:	430b      	orrs	r3, r1
 800518a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800518e:	e003      	b.n	8005198 <HAL_RCCEx_PeriphCLKConfig+0x19f8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005190:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005194:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- SPI3 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 8005198:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800519c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051a0:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 80051a4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80051a6:	2300      	movs	r3, #0
 80051a8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80051aa:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 80051ae:	460b      	mov	r3, r1
 80051b0:	4313      	orrs	r3, r2
 80051b2:	d04e      	beq.n	8005252 <HAL_RCCEx_PeriphCLKConfig+0x1ab2>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI3CLKSOURCE(pPeriphClkInit->Spi3ClockSelection));

    switch (pPeriphClkInit->Spi3ClockSelection)
 80051b4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80051b8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80051bc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80051c0:	d02e      	beq.n	8005220 <HAL_RCCEx_PeriphCLKConfig+0x1a80>
 80051c2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80051c6:	d827      	bhi.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 80051c8:	2bc0      	cmp	r3, #192	@ 0xc0
 80051ca:	d02b      	beq.n	8005224 <HAL_RCCEx_PeriphCLKConfig+0x1a84>
 80051cc:	2bc0      	cmp	r3, #192	@ 0xc0
 80051ce:	d823      	bhi.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 80051d0:	2b80      	cmp	r3, #128	@ 0x80
 80051d2:	d017      	beq.n	8005204 <HAL_RCCEx_PeriphCLKConfig+0x1a64>
 80051d4:	2b80      	cmp	r3, #128	@ 0x80
 80051d6:	d81f      	bhi.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 80051d8:	2b00      	cmp	r3, #0
 80051da:	d002      	beq.n	80051e2 <HAL_RCCEx_PeriphCLKConfig+0x1a42>
 80051dc:	2b40      	cmp	r3, #64	@ 0x40
 80051de:	d007      	beq.n	80051f0 <HAL_RCCEx_PeriphCLKConfig+0x1a50>
 80051e0:	e01a      	b.n	8005218 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
    {
      case RCC_SPI3CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI3 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80051e2:	4b7e      	ldr	r3, [pc, #504]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80051e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051e6:	4a7d      	ldr	r2, [pc, #500]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80051e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80051ec:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 80051ee:	e01a      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1a86>

      case RCC_SPI3CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI3*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80051f0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80051f4:	3308      	adds	r3, #8
 80051f6:	4618      	mov	r0, r3
 80051f8:	f000 fa5c 	bl	80056b4 <RCCEx_PLL2_Config>
 80051fc:	4603      	mov	r3, r0
 80051fe:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 8005202:	e010      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1a86>

#if defined(RCC_SPI3CLKSOURCE_PLL3P)
      case RCC_SPI3CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI3 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005204:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005208:	3330      	adds	r3, #48	@ 0x30
 800520a:	4618      	mov	r0, r3
 800520c:	f000 faea 	bl	80057e4 <RCCEx_PLL3_Config>
 8005210:	4603      	mov	r3, r0
 8005212:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 8005216:	e006      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        /* HSI, HSE, or CSI oscillator is used as source of SPI3 clock */
        /* SPI3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005218:	2301      	movs	r3, #1
 800521a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800521e:	e002      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        break;
 8005220:	bf00      	nop
 8005222:	e000      	b.n	8005226 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        break;
 8005224:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005226:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800522a:	2b00      	cmp	r3, #0
 800522c:	d10d      	bne.n	800524a <HAL_RCCEx_PeriphCLKConfig+0x1aaa>
    {
      /* Configure the SPI3 clock source */
      __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 800522e:	4b6b      	ldr	r3, [pc, #428]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005230:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005234:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8005238:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800523c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005240:	4a66      	ldr	r2, [pc, #408]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005242:	430b      	orrs	r3, r1
 8005244:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8005248:	e003      	b.n	8005252 <HAL_RCCEx_PeriphCLKConfig+0x1ab2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800524a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800524e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }

#if defined(SPI4)
  /*-------------------------- SPI4 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI4) == RCC_PERIPHCLK_SPI4)
 8005252:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005256:	e9d3 2300 	ldrd	r2, r3, [r3]
 800525a:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 800525e:	633b      	str	r3, [r7, #48]	@ 0x30
 8005260:	2300      	movs	r3, #0
 8005262:	637b      	str	r3, [r7, #52]	@ 0x34
 8005264:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 8005268:	460b      	mov	r3, r1
 800526a:	4313      	orrs	r3, r2
 800526c:	d055      	beq.n	800531a <HAL_RCCEx_PeriphCLKConfig+0x1b7a>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI4CLKSOURCE(pPeriphClkInit->Spi4ClockSelection));

    switch (pPeriphClkInit->Spi4ClockSelection)
 800526e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005272:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8005276:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 800527a:	d031      	beq.n	80052e0 <HAL_RCCEx_PeriphCLKConfig+0x1b40>
 800527c:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 8005280:	d82a      	bhi.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 8005282:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005286:	d02d      	beq.n	80052e4 <HAL_RCCEx_PeriphCLKConfig+0x1b44>
 8005288:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800528c:	d824      	bhi.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 800528e:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8005292:	d029      	beq.n	80052e8 <HAL_RCCEx_PeriphCLKConfig+0x1b48>
 8005294:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8005298:	d81e      	bhi.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 800529a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800529e:	d011      	beq.n	80052c4 <HAL_RCCEx_PeriphCLKConfig+0x1b24>
 80052a0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80052a4:	d818      	bhi.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	d020      	beq.n	80052ec <HAL_RCCEx_PeriphCLKConfig+0x1b4c>
 80052aa:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80052ae:	d113      	bne.n	80052d8 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
        /* SPI4 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI4CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI4*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80052b0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80052b4:	3308      	adds	r3, #8
 80052b6:	4618      	mov	r0, r3
 80052b8:	f000 f9fc 	bl	80056b4 <RCCEx_PLL2_Config>
 80052bc:	4603      	mov	r3, r0
 80052be:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI4 clock source configuration done later after clock selection check */
        break;
 80052c2:	e014      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>

      case RCC_SPI4CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI4 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80052c4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80052c8:	3330      	adds	r3, #48	@ 0x30
 80052ca:	4618      	mov	r0, r3
 80052cc:	f000 fa8a 	bl	80057e4 <RCCEx_PLL3_Config>
 80052d0:	4603      	mov	r3, r0
 80052d2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI4 clock source configuration done later after clock selection check */
        break;
 80052d6:	e00a      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        /*  HSE oscillator is used as source of SPI4 clock */
        /* SPI4 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80052d8:	2301      	movs	r3, #1
 80052da:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80052de:	e006      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 80052e0:	bf00      	nop
 80052e2:	e004      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 80052e4:	bf00      	nop
 80052e6:	e002      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 80052e8:	bf00      	nop
 80052ea:	e000      	b.n	80052ee <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 80052ec:	bf00      	nop
    }

    if (ret == HAL_OK)
 80052ee:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d10d      	bne.n	8005312 <HAL_RCCEx_PeriphCLKConfig+0x1b72>
    {
      /* Configure the SPI4 clock source */
      __HAL_RCC_SPI4_CONFIG(pPeriphClkInit->Spi4ClockSelection);
 80052f6:	4b39      	ldr	r3, [pc, #228]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80052f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80052fc:	f423 6160 	bic.w	r1, r3, #3584	@ 0xe00
 8005300:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005304:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8005308:	4a34      	ldr	r2, [pc, #208]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800530a:	430b      	orrs	r3, r1
 800530c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8005310:	e003      	b.n	800531a <HAL_RCCEx_PeriphCLKConfig+0x1b7a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005312:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005316:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI4 */

#if defined(SPI5)
  /*-------------------------- SPI5 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI5) == RCC_PERIPHCLK_SPI5)
 800531a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800531e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005322:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8005326:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005328:	2300      	movs	r3, #0
 800532a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800532c:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8005330:	460b      	mov	r3, r1
 8005332:	4313      	orrs	r3, r2
 8005334:	d058      	beq.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x1c48>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI5CLKSOURCE(pPeriphClkInit->Spi5ClockSelection));

    switch (pPeriphClkInit->Spi5ClockSelection)
 8005336:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800533a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800533e:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8005342:	d031      	beq.n	80053a8 <HAL_RCCEx_PeriphCLKConfig+0x1c08>
 8005344:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8005348:	d82a      	bhi.n	80053a0 <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 800534a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800534e:	d02d      	beq.n	80053ac <HAL_RCCEx_PeriphCLKConfig+0x1c0c>
 8005350:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005354:	d824      	bhi.n	80053a0 <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 8005356:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800535a:	d029      	beq.n	80053b0 <HAL_RCCEx_PeriphCLKConfig+0x1c10>
 800535c:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8005360:	d81e      	bhi.n	80053a0 <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 8005362:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005366:	d011      	beq.n	800538c <HAL_RCCEx_PeriphCLKConfig+0x1bec>
 8005368:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800536c:	d818      	bhi.n	80053a0 <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 800536e:	2b00      	cmp	r3, #0
 8005370:	d020      	beq.n	80053b4 <HAL_RCCEx_PeriphCLKConfig+0x1c14>
 8005372:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005376:	d113      	bne.n	80053a0 <HAL_RCCEx_PeriphCLKConfig+0x1c00>
        /* SPI5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI5CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI5*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005378:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800537c:	3308      	adds	r3, #8
 800537e:	4618      	mov	r0, r3
 8005380:	f000 f998 	bl	80056b4 <RCCEx_PLL2_Config>
 8005384:	4603      	mov	r3, r0
 8005386:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI5 clock source configuration done later after clock selection check */
        break;
 800538a:	e014      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>

      case RCC_SPI5CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI5 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800538c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005390:	3330      	adds	r3, #48	@ 0x30
 8005392:	4618      	mov	r0, r3
 8005394:	f000 fa26 	bl	80057e4 <RCCEx_PLL3_Config>
 8005398:	4603      	mov	r3, r0
 800539a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI5 clock source configuration done later after clock selection check */
        break;
 800539e:	e00a      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        /*  HSE oscillator is used as source of SPI5 clock */
        /* SPI5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80053a0:	2301      	movs	r3, #1
 80053a2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80053a6:	e006      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 80053a8:	bf00      	nop
 80053aa:	e004      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 80053ac:	bf00      	nop
 80053ae:	e002      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 80053b0:	bf00      	nop
 80053b2:	e000      	b.n	80053b6 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 80053b4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80053b6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80053ba:	2b00      	cmp	r3, #0
 80053bc:	d110      	bne.n	80053e0 <HAL_RCCEx_PeriphCLKConfig+0x1c40>
    {
      /* Configure the SPI5 clock source */
      __HAL_RCC_SPI5_CONFIG(pPeriphClkInit->Spi5ClockSelection);
 80053be:	4b07      	ldr	r3, [pc, #28]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80053c0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80053c4:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 80053c8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80053cc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80053d0:	4902      	ldr	r1, [pc, #8]	@ (80053dc <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80053d2:	4313      	orrs	r3, r2
 80053d4:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 80053d8:	e006      	b.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x1c48>
 80053da:	bf00      	nop
 80053dc:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 80053e0:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80053e4:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI5 */

#if defined(SPI6)
  /*-------------------------- SPI6 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 80053e8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80053ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80053f0:	2100      	movs	r1, #0
 80053f2:	6239      	str	r1, [r7, #32]
 80053f4:	f003 0301 	and.w	r3, r3, #1
 80053f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80053fa:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80053fe:	460b      	mov	r3, r1
 8005400:	4313      	orrs	r3, r2
 8005402:	d055      	beq.n	80054b0 <HAL_RCCEx_PeriphCLKConfig+0x1d10>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI6CLKSOURCE(pPeriphClkInit->Spi6ClockSelection));

    switch (pPeriphClkInit->Spi6ClockSelection)
 8005404:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005408:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800540c:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8005410:	d031      	beq.n	8005476 <HAL_RCCEx_PeriphCLKConfig+0x1cd6>
 8005412:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8005416:	d82a      	bhi.n	800546e <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005418:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800541c:	d02d      	beq.n	800547a <HAL_RCCEx_PeriphCLKConfig+0x1cda>
 800541e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005422:	d824      	bhi.n	800546e <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005424:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8005428:	d029      	beq.n	800547e <HAL_RCCEx_PeriphCLKConfig+0x1cde>
 800542a:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 800542e:	d81e      	bhi.n	800546e <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005430:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005434:	d011      	beq.n	800545a <HAL_RCCEx_PeriphCLKConfig+0x1cba>
 8005436:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800543a:	d818      	bhi.n	800546e <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 800543c:	2b00      	cmp	r3, #0
 800543e:	d020      	beq.n	8005482 <HAL_RCCEx_PeriphCLKConfig+0x1ce2>
 8005440:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005444:	d113      	bne.n	800546e <HAL_RCCEx_PeriphCLKConfig+0x1cce>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI6*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005446:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800544a:	3308      	adds	r3, #8
 800544c:	4618      	mov	r0, r3
 800544e:	f000 f931 	bl	80056b4 <RCCEx_PLL2_Config>
 8005452:	4603      	mov	r3, r0
 8005454:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 8005458:	e014      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>

      case RCC_SPI6CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI6 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800545a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800545e:	3330      	adds	r3, #48	@ 0x30
 8005460:	4618      	mov	r0, r3
 8005462:	f000 f9bf 	bl	80057e4 <RCCEx_PLL3_Config>
 8005466:	4603      	mov	r3, r0
 8005468:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 800546c:	e00a      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        /*  HSE oscillator is used as source of SPI6 clock */
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800546e:	2301      	movs	r3, #1
 8005470:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005474:	e006      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 8005476:	bf00      	nop
 8005478:	e004      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 800547a:	bf00      	nop
 800547c:	e002      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 800547e:	bf00      	nop
 8005480:	e000      	b.n	8005484 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 8005482:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005484:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005488:	2b00      	cmp	r3, #0
 800548a:	d10d      	bne.n	80054a8 <HAL_RCCEx_PeriphCLKConfig+0x1d08>
    {
      /* Configure the SPI6 clock source */
      __HAL_RCC_SPI6_CONFIG(pPeriphClkInit->Spi6ClockSelection);
 800548c:	4b88      	ldr	r3, [pc, #544]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 800548e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005492:	f423 3260 	bic.w	r2, r3, #229376	@ 0x38000
 8005496:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800549a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800549e:	4984      	ldr	r1, [pc, #528]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80054a0:	4313      	orrs	r3, r2
 80054a2:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 80054a6:	e003      	b.n	80054b0 <HAL_RCCEx_PeriphCLKConfig+0x1d10>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80054a8:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80054ac:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI6 */

#if defined(OCTOSPI1)
  /*-------------------------- OctoSPIx clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 80054b0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80054b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054b8:	2100      	movs	r1, #0
 80054ba:	61b9      	str	r1, [r7, #24]
 80054bc:	f003 0302 	and.w	r3, r3, #2
 80054c0:	61fb      	str	r3, [r7, #28]
 80054c2:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 80054c6:	460b      	mov	r3, r1
 80054c8:	4313      	orrs	r3, r2
 80054ca:	d03d      	beq.n	8005548 <HAL_RCCEx_PeriphCLKConfig+0x1da8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_OSPICLKSOURCE(pPeriphClkInit->OspiClockSelection));

    switch (pPeriphClkInit->OspiClockSelection)
 80054cc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80054d0:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80054d4:	2b03      	cmp	r3, #3
 80054d6:	d81c      	bhi.n	8005512 <HAL_RCCEx_PeriphCLKConfig+0x1d72>
 80054d8:	a201      	add	r2, pc, #4	@ (adr r2, 80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1d40>)
 80054da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054de:	bf00      	nop
 80054e0:	0800551b 	.word	0x0800551b
 80054e4:	080054f1 	.word	0x080054f1
 80054e8:	080054ff 	.word	0x080054ff
 80054ec:	0800551b 	.word	0x0800551b
        break;

      case RCC_OSPICLKSOURCE_PLL1Q:  /* PLL1 Q is used as clock source for OCTOSPI*/

        /* Enable PLL1 Q CLK output */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80054f0:	4b6f      	ldr	r3, [pc, #444]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80054f2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80054f4:	4a6e      	ldr	r2, [pc, #440]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80054f6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80054fa:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 80054fc:	e00e      	b.n	800551c <HAL_RCCEx_PeriphCLKConfig+0x1d7c>

      case RCC_OSPICLKSOURCE_PLL2R:  /* PLL2 is used as clock source for OCTOSPI*/
        /* PLL2 R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80054fe:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005502:	3308      	adds	r3, #8
 8005504:	4618      	mov	r0, r3
 8005506:	f000 f8d5 	bl	80056b4 <RCCEx_PLL2_Config>
 800550a:	4603      	mov	r3, r0
 800550c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* OCTOSPI clock source config set later after clock selection check */
        break;
 8005510:	e004      	b.n	800551c <HAL_RCCEx_PeriphCLKConfig+0x1d7c>
      case RCC_OSPICLKSOURCE_CLKP:  /* CLKP is used as source of OCTOSPI clock*/
        /* OCTOSPI clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005512:	2301      	movs	r3, #1
 8005514:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005518:	e000      	b.n	800551c <HAL_RCCEx_PeriphCLKConfig+0x1d7c>
        break;
 800551a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800551c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005520:	2b00      	cmp	r3, #0
 8005522:	d10d      	bne.n	8005540 <HAL_RCCEx_PeriphCLKConfig+0x1da0>
    {
      /* Configure the OctoSPI clock source */
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8005524:	4b62      	ldr	r3, [pc, #392]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005526:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800552a:	f023 0203 	bic.w	r2, r3, #3
 800552e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005532:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8005536:	495e      	ldr	r1, [pc, #376]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005538:	4313      	orrs	r3, r2
 800553a:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 800553e:	e003      	b.n	8005548 <HAL_RCCEx_PeriphCLKConfig+0x1da8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005540:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005544:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* OCTOSPI1*/

  /*-------------------------- FDCAN kernel clock source configuration -------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8005548:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800554c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005550:	2100      	movs	r1, #0
 8005552:	6139      	str	r1, [r7, #16]
 8005554:	f003 0304 	and.w	r3, r3, #4
 8005558:	617b      	str	r3, [r7, #20]
 800555a:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 800555e:	460b      	mov	r3, r1
 8005560:	4313      	orrs	r3, r2
 8005562:	d03a      	beq.n	80055da <HAL_RCCEx_PeriphCLKConfig+0x1e3a>
  {
    assert_param(IS_RCC_FDCANCLK(pPeriphClkInit->FdcanClockSelection));

    switch (pPeriphClkInit->FdcanClockSelection)
 8005564:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005568:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800556c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005570:	d00e      	beq.n	8005590 <HAL_RCCEx_PeriphCLKConfig+0x1df0>
 8005572:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8005576:	d815      	bhi.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1e04>
 8005578:	2b00      	cmp	r3, #0
 800557a:	d017      	beq.n	80055ac <HAL_RCCEx_PeriphCLKConfig+0x1e0c>
 800557c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005580:	d110      	bne.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1e04>
        /* FDCAN kernel clock source config set later after clock selection check */
        break;

      case RCC_FDCANCLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for FDCAN kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005582:	4b4b      	ldr	r3, [pc, #300]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005584:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005586:	4a4a      	ldr	r2, [pc, #296]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005588:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800558c:	6293      	str	r3, [r2, #40]	@ 0x28
        /* FDCAN kernel clock source config set later after clock selection check */
        break;
 800558e:	e00e      	b.n	80055ae <HAL_RCCEx_PeriphCLKConfig+0x1e0e>

      case RCC_FDCANCLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for FDCAN kernel clock*/
        /* PLL2Q input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005590:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005594:	3308      	adds	r3, #8
 8005596:	4618      	mov	r0, r3
 8005598:	f000 f88c 	bl	80056b4 <RCCEx_PLL2_Config>
 800559c:	4603      	mov	r3, r0
 800559e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* FDCAN kernel clock source config set later after clock selection check */
        break;
 80055a2:	e004      	b.n	80055ae <HAL_RCCEx_PeriphCLKConfig+0x1e0e>

      default:
        ret = HAL_ERROR;
 80055a4:	2301      	movs	r3, #1
 80055a6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80055aa:	e000      	b.n	80055ae <HAL_RCCEx_PeriphCLKConfig+0x1e0e>
        break;
 80055ac:	bf00      	nop
    }

    if (ret == HAL_OK)
 80055ae:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80055b2:	2b00      	cmp	r3, #0
 80055b4:	d10d      	bne.n	80055d2 <HAL_RCCEx_PeriphCLKConfig+0x1e32>
    {
      /* Set the source of FDCAN kernel clock*/
      __HAL_RCC_FDCAN_CONFIG(pPeriphClkInit->FdcanClockSelection);
 80055b6:	4b3e      	ldr	r3, [pc, #248]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80055b8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80055bc:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80055c0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055c4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80055c8:	4939      	ldr	r1, [pc, #228]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80055ca:	4313      	orrs	r3, r2
 80055cc:	f8c1 30e8 	str.w	r3, [r1, #232]	@ 0xe8
 80055d0:	e003      	b.n	80055da <HAL_RCCEx_PeriphCLKConfig+0x1e3a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80055d2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80055d6:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(USB_DRD_FS)
  /*------------------------------ USB Configuration -------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 80055da:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055e2:	2100      	movs	r1, #0
 80055e4:	60b9      	str	r1, [r7, #8]
 80055e6:	f003 0310 	and.w	r3, r3, #16
 80055ea:	60fb      	str	r3, [r7, #12]
 80055ec:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80055f0:	460b      	mov	r3, r1
 80055f2:	4313      	orrs	r3, r2
 80055f4:	d038      	beq.n	8005668 <HAL_RCCEx_PeriphCLKConfig+0x1ec8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_USBCLKSOURCE(pPeriphClkInit->UsbClockSelection));

    switch (pPeriphClkInit->UsbClockSelection)
 80055f6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055fa:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 80055fe:	2b30      	cmp	r3, #48	@ 0x30
 8005600:	d01b      	beq.n	800563a <HAL_RCCEx_PeriphCLKConfig+0x1e9a>
 8005602:	2b30      	cmp	r3, #48	@ 0x30
 8005604:	d815      	bhi.n	8005632 <HAL_RCCEx_PeriphCLKConfig+0x1e92>
 8005606:	2b10      	cmp	r3, #16
 8005608:	d002      	beq.n	8005610 <HAL_RCCEx_PeriphCLKConfig+0x1e70>
 800560a:	2b20      	cmp	r3, #32
 800560c:	d007      	beq.n	800561e <HAL_RCCEx_PeriphCLKConfig+0x1e7e>
 800560e:	e010      	b.n	8005632 <HAL_RCCEx_PeriphCLKConfig+0x1e92>
    {
      case RCC_USBCLKSOURCE_PLL1Q:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005610:	4b27      	ldr	r3, [pc, #156]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005612:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005614:	4a26      	ldr	r2, [pc, #152]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005616:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800561a:	6293      	str	r3, [r2, #40]	@ 0x28

        /* USB clock source configuration done later after clock selection check */
        break;
 800561c:	e00e      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x1e9c>

#if defined(RCC_USBCLKSOURCE_PLL3Q)
      case RCC_USBCLKSOURCE_PLL3Q: /* PLL3 is used as clock source for USB*/
        /* PLL3Q input clock, parameters M, N & Q configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800561e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005622:	3330      	adds	r3, #48	@ 0x30
 8005624:	4618      	mov	r0, r3
 8005626:	f000 f8dd 	bl	80057e4 <RCCEx_PLL3_Config>
 800562a:	4603      	mov	r3, r0
 800562c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_USBCLKSOURCE_PLL2Q: /* PLL2 is used as clock source for USB*/
        /* PLL2Q input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_USBCLKSOURCE_PLL3Q */
        /* USB clock source configuration done later after clock selection check */
        break;
 8005630:	e004      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x1e9c>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005632:	2301      	movs	r3, #1
 8005634:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005638:	e000      	b.n	800563c <HAL_RCCEx_PeriphCLKConfig+0x1e9c>
        break;
 800563a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800563c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005640:	2b00      	cmp	r3, #0
 8005642:	d10d      	bne.n	8005660 <HAL_RCCEx_PeriphCLKConfig+0x1ec0>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(pPeriphClkInit->UsbClockSelection);
 8005644:	4b1a      	ldr	r3, [pc, #104]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005646:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800564a:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 800564e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005652:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 8005656:	4916      	ldr	r1, [pc, #88]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005658:	4313      	orrs	r3, r2
 800565a:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 800565e:	e003      	b.n	8005668 <HAL_RCCEx_PeriphCLKConfig+0x1ec8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005660:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005664:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USB_DRD_FS */

#if defined(CEC)
  /*-------------------------- CEC clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8005668:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800566c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005670:	2100      	movs	r1, #0
 8005672:	6039      	str	r1, [r7, #0]
 8005674:	f003 0308 	and.w	r3, r3, #8
 8005678:	607b      	str	r3, [r7, #4]
 800567a:	e9d7 1200 	ldrd	r1, r2, [r7]
 800567e:	460b      	mov	r3, r1
 8005680:	4313      	orrs	r3, r2
 8005682:	d00c      	beq.n	800569e <HAL_RCCEx_PeriphCLKConfig+0x1efe>

    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(pPeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(pPeriphClkInit->CecClockSelection);
 8005684:	4b0a      	ldr	r3, [pc, #40]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005686:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800568a:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800568e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005692:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 8005696:	4906      	ldr	r1, [pc, #24]	@ (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005698:	4313      	orrs	r3, r2
 800569a:	f8c1 30e8 	str.w	r3, [r1, #232]	@ 0xe8

  }
#endif /* CEC */

  return status;
 800569e:	f897 315a 	ldrb.w	r3, [r7, #346]	@ 0x15a
}
 80056a2:	4618      	mov	r0, r3
 80056a4:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 80056a8:	46bd      	mov	sp, r7
 80056aa:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80056ae:	bf00      	nop
 80056b0:	44020c00 	.word	0x44020c00

080056b4 <RCCEx_PLL2_Config>:
  *         contains the configuration parameters M, N, FRACN, VCI/VCO ranges as well as PLL2 output clocks dividers
  * @note   PLL2 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 80056b4:	b580      	push	{r7, lr}
 80056b6:	b084      	sub	sp, #16
 80056b8:	af00      	add	r7, sp, #0
 80056ba:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLL2_VCIRGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2_VCORGE_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLL2_FRACN_VALUE(pll2->PLL2FRACN));

  /* Disable  PLL2. */
  __HAL_RCC_PLL2_DISABLE();
 80056bc:	4b48      	ldr	r3, [pc, #288]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	4a47      	ldr	r2, [pc, #284]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80056c2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80056c6:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80056c8:	f7fb fe26 	bl	8001318 <HAL_GetTick>
 80056cc:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL2 is disabled */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80056ce:	e008      	b.n	80056e2 <RCCEx_PLL2_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80056d0:	f7fb fe22 	bl	8001318 <HAL_GetTick>
 80056d4:	4602      	mov	r2, r0
 80056d6:	68fb      	ldr	r3, [r7, #12]
 80056d8:	1ad3      	subs	r3, r2, r3
 80056da:	2b02      	cmp	r3, #2
 80056dc:	d901      	bls.n	80056e2 <RCCEx_PLL2_Config+0x2e>
    {
      return HAL_TIMEOUT;
 80056de:	2303      	movs	r3, #3
 80056e0:	e07a      	b.n	80057d8 <RCCEx_PLL2_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 80056e2:	4b3f      	ldr	r3, [pc, #252]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	d1f0      	bne.n	80056d0 <RCCEx_PLL2_Config+0x1c>
    }
  }

  /* Configure PLL2 multiplication and division factors. */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 80056ee:	4b3c      	ldr	r3, [pc, #240]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80056f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056f2:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80056f6:	f023 0303 	bic.w	r3, r3, #3
 80056fa:	687a      	ldr	r2, [r7, #4]
 80056fc:	6811      	ldr	r1, [r2, #0]
 80056fe:	687a      	ldr	r2, [r7, #4]
 8005700:	6852      	ldr	r2, [r2, #4]
 8005702:	0212      	lsls	r2, r2, #8
 8005704:	430a      	orrs	r2, r1
 8005706:	4936      	ldr	r1, [pc, #216]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005708:	4313      	orrs	r3, r2
 800570a:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	689b      	ldr	r3, [r3, #8]
 8005710:	3b01      	subs	r3, #1
 8005712:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8005716:	687b      	ldr	r3, [r7, #4]
 8005718:	68db      	ldr	r3, [r3, #12]
 800571a:	3b01      	subs	r3, #1
 800571c:	025b      	lsls	r3, r3, #9
 800571e:	b29b      	uxth	r3, r3
 8005720:	431a      	orrs	r2, r3
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	691b      	ldr	r3, [r3, #16]
 8005726:	3b01      	subs	r3, #1
 8005728:	041b      	lsls	r3, r3, #16
 800572a:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800572e:	431a      	orrs	r2, r3
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	695b      	ldr	r3, [r3, #20]
 8005734:	3b01      	subs	r3, #1
 8005736:	061b      	lsls	r3, r3, #24
 8005738:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800573c:	4928      	ldr	r1, [pc, #160]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 800573e:	4313      	orrs	r3, r2
 8005740:	63cb      	str	r3, [r1, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 8005742:	4b27      	ldr	r3, [pc, #156]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005744:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005746:	f023 020c 	bic.w	r2, r3, #12
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	699b      	ldr	r3, [r3, #24]
 800574e:	4924      	ldr	r1, [pc, #144]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005750:	4313      	orrs	r3, r2
 8005752:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Select PLL2 output frequency range : VCO */
  __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL);
 8005754:	4b22      	ldr	r3, [pc, #136]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005756:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005758:	f023 0220 	bic.w	r2, r3, #32
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	69db      	ldr	r3, [r3, #28]
 8005760:	491f      	ldr	r1, [pc, #124]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005762:	4313      	orrs	r3, r2
 8005764:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2_CLKOUT_ENABLE(pll2->PLL2ClockOut);
 8005766:	4b1e      	ldr	r3, [pc, #120]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005768:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800576e:	491c      	ldr	r1, [pc, #112]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005770:	4313      	orrs	r3, r2
 8005772:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Disable PLL2FRACN . */
  __HAL_RCC_PLL2_FRACN_DISABLE();
 8005774:	4b1a      	ldr	r3, [pc, #104]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005776:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005778:	4a19      	ldr	r2, [pc, #100]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 800577a:	f023 0310 	bic.w	r3, r3, #16
 800577e:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2_FRACN_CONFIG(pll2->PLL2FRACN);
 8005780:	4b17      	ldr	r3, [pc, #92]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005782:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005784:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005788:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 800578c:	687a      	ldr	r2, [r7, #4]
 800578e:	6a12      	ldr	r2, [r2, #32]
 8005790:	00d2      	lsls	r2, r2, #3
 8005792:	4913      	ldr	r1, [pc, #76]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 8005794:	4313      	orrs	r3, r2
 8005796:	640b      	str	r3, [r1, #64]	@ 0x40

  /* Enable PLL2FRACN . */
  __HAL_RCC_PLL2_FRACN_ENABLE();
 8005798:	4b11      	ldr	r3, [pc, #68]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 800579a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800579c:	4a10      	ldr	r2, [pc, #64]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 800579e:	f043 0310 	orr.w	r3, r3, #16
 80057a2:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Enable  PLL2. */
  __HAL_RCC_PLL2_ENABLE();
 80057a4:	4b0e      	ldr	r3, [pc, #56]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	4a0d      	ldr	r2, [pc, #52]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80057aa:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80057ae:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80057b0:	f7fb fdb2 	bl	8001318 <HAL_GetTick>
 80057b4:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80057b6:	e008      	b.n	80057ca <RCCEx_PLL2_Config+0x116>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 80057b8:	f7fb fdae 	bl	8001318 <HAL_GetTick>
 80057bc:	4602      	mov	r2, r0
 80057be:	68fb      	ldr	r3, [r7, #12]
 80057c0:	1ad3      	subs	r3, r2, r3
 80057c2:	2b02      	cmp	r3, #2
 80057c4:	d901      	bls.n	80057ca <RCCEx_PLL2_Config+0x116>
    {
      return HAL_TIMEOUT;
 80057c6:	2303      	movs	r3, #3
 80057c8:	e006      	b.n	80057d8 <RCCEx_PLL2_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80057ca:	4b05      	ldr	r3, [pc, #20]	@ (80057e0 <RCCEx_PLL2_Config+0x12c>)
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80057d2:	2b00      	cmp	r3, #0
 80057d4:	d0f0      	beq.n	80057b8 <RCCEx_PLL2_Config+0x104>
    }
  }
  return HAL_OK;
 80057d6:	2300      	movs	r3, #0

}
 80057d8:	4618      	mov	r0, r3
 80057da:	3710      	adds	r7, #16
 80057dc:	46bd      	mov	sp, r7
 80057de:	bd80      	pop	{r7, pc}
 80057e0:	44020c00 	.word	0x44020c00

080057e4 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters M, N, FRACN, VCI/VCO ranges as well as PLL3 output clocks dividers
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status.
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 80057e4:	b580      	push	{r7, lr}
 80057e6:	b084      	sub	sp, #16
 80057e8:	af00      	add	r7, sp, #0
 80057ea:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLL3_VCIRGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3_VCORGE_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLL3_FRACN_VALUE(pll3->PLL3FRACN));

  /* Disable  PLL3. */
  __HAL_RCC_PLL3_DISABLE();
 80057ec:	4b48      	ldr	r3, [pc, #288]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80057ee:	681b      	ldr	r3, [r3, #0]
 80057f0:	4a47      	ldr	r2, [pc, #284]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80057f2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80057f6:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80057f8:	f7fb fd8e 	bl	8001318 <HAL_GetTick>
 80057fc:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL3 is disabled */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80057fe:	e008      	b.n	8005812 <RCCEx_PLL3_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8005800:	f7fb fd8a 	bl	8001318 <HAL_GetTick>
 8005804:	4602      	mov	r2, r0
 8005806:	68fb      	ldr	r3, [r7, #12]
 8005808:	1ad3      	subs	r3, r2, r3
 800580a:	2b02      	cmp	r3, #2
 800580c:	d901      	bls.n	8005812 <RCCEx_PLL3_Config+0x2e>
    {
      return HAL_TIMEOUT;
 800580e:	2303      	movs	r3, #3
 8005810:	e07a      	b.n	8005908 <RCCEx_PLL3_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8005812:	4b3f      	ldr	r3, [pc, #252]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005814:	681b      	ldr	r3, [r3, #0]
 8005816:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800581a:	2b00      	cmp	r3, #0
 800581c:	d1f0      	bne.n	8005800 <RCCEx_PLL3_Config+0x1c>
    }
  }

  /* Configure PLL3 multiplication and division factors. */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 800581e:	4b3c      	ldr	r3, [pc, #240]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005820:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005822:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005826:	f023 0303 	bic.w	r3, r3, #3
 800582a:	687a      	ldr	r2, [r7, #4]
 800582c:	6811      	ldr	r1, [r2, #0]
 800582e:	687a      	ldr	r2, [r7, #4]
 8005830:	6852      	ldr	r2, [r2, #4]
 8005832:	0212      	lsls	r2, r2, #8
 8005834:	430a      	orrs	r2, r1
 8005836:	4936      	ldr	r1, [pc, #216]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005838:	4313      	orrs	r3, r2
 800583a:	630b      	str	r3, [r1, #48]	@ 0x30
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	689b      	ldr	r3, [r3, #8]
 8005840:	3b01      	subs	r3, #1
 8005842:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	68db      	ldr	r3, [r3, #12]
 800584a:	3b01      	subs	r3, #1
 800584c:	025b      	lsls	r3, r3, #9
 800584e:	b29b      	uxth	r3, r3
 8005850:	431a      	orrs	r2, r3
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	691b      	ldr	r3, [r3, #16]
 8005856:	3b01      	subs	r3, #1
 8005858:	041b      	lsls	r3, r3, #16
 800585a:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800585e:	431a      	orrs	r2, r3
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	695b      	ldr	r3, [r3, #20]
 8005864:	3b01      	subs	r3, #1
 8005866:	061b      	lsls	r3, r3, #24
 8005868:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800586c:	4928      	ldr	r1, [pc, #160]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 800586e:	4313      	orrs	r3, r2
 8005870:	644b      	str	r3, [r1, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8005872:	4b27      	ldr	r3, [pc, #156]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005874:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005876:	f023 020c 	bic.w	r2, r3, #12
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	699b      	ldr	r3, [r3, #24]
 800587e:	4924      	ldr	r1, [pc, #144]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005880:	4313      	orrs	r3, r2
 8005882:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Select PLL3 output frequency range : VCO */
  __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL);
 8005884:	4b22      	ldr	r3, [pc, #136]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005886:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005888:	f023 0220 	bic.w	r2, r3, #32
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	69db      	ldr	r3, [r3, #28]
 8005890:	491f      	ldr	r1, [pc, #124]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005892:	4313      	orrs	r3, r2
 8005894:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3_CLKOUT_ENABLE(pll3->PLL3ClockOut);
 8005896:	4b1e      	ldr	r3, [pc, #120]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 8005898:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800589e:	491c      	ldr	r1, [pc, #112]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058a0:	4313      	orrs	r3, r2
 80058a2:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Disable PLL3FRACN . */
  __HAL_RCC_PLL3_FRACN_DISABLE();
 80058a4:	4b1a      	ldr	r3, [pc, #104]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058a8:	4a19      	ldr	r2, [pc, #100]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058aa:	f023 0310 	bic.w	r3, r3, #16
 80058ae:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3_FRACN_CONFIG(pll3->PLL3FRACN);
 80058b0:	4b17      	ldr	r3, [pc, #92]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058b2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80058b4:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80058b8:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80058bc:	687a      	ldr	r2, [r7, #4]
 80058be:	6a12      	ldr	r2, [r2, #32]
 80058c0:	00d2      	lsls	r2, r2, #3
 80058c2:	4913      	ldr	r1, [pc, #76]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058c4:	4313      	orrs	r3, r2
 80058c6:	648b      	str	r3, [r1, #72]	@ 0x48

  /* Enable PLL3FRACN . */
  __HAL_RCC_PLL3_FRACN_ENABLE();
 80058c8:	4b11      	ldr	r3, [pc, #68]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058cc:	4a10      	ldr	r2, [pc, #64]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058ce:	f043 0310 	orr.w	r3, r3, #16
 80058d2:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable  PLL3. */
  __HAL_RCC_PLL3_ENABLE();
 80058d4:	4b0e      	ldr	r3, [pc, #56]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	4a0d      	ldr	r2, [pc, #52]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058da:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80058de:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 80058e0:	f7fb fd1a 	bl	8001318 <HAL_GetTick>
 80058e4:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80058e6:	e008      	b.n	80058fa <RCCEx_PLL3_Config+0x116>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80058e8:	f7fb fd16 	bl	8001318 <HAL_GetTick>
 80058ec:	4602      	mov	r2, r0
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	1ad3      	subs	r3, r2, r3
 80058f2:	2b02      	cmp	r3, #2
 80058f4:	d901      	bls.n	80058fa <RCCEx_PLL3_Config+0x116>
    {
      return HAL_TIMEOUT;
 80058f6:	2303      	movs	r3, #3
 80058f8:	e006      	b.n	8005908 <RCCEx_PLL3_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80058fa:	4b05      	ldr	r3, [pc, #20]	@ (8005910 <RCCEx_PLL3_Config+0x12c>)
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8005902:	2b00      	cmp	r3, #0
 8005904:	d0f0      	beq.n	80058e8 <RCCEx_PLL3_Config+0x104>
    }
  }
  return HAL_OK;
 8005906:	2300      	movs	r3, #0
}
 8005908:	4618      	mov	r0, r3
 800590a:	3710      	adds	r7, #16
 800590c:	46bd      	mov	sp, r7
 800590e:	bd80      	pop	{r7, pc}
 8005910:	44020c00 	.word	0x44020c00

08005914 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005914:	b580      	push	{r7, lr}
 8005916:	b084      	sub	sp, #16
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	2b00      	cmp	r3, #0
 8005920:	d101      	bne.n	8005926 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005922:	2301      	movs	r3, #1
 8005924:	e162      	b.n	8005bec <HAL_SPI_Init+0x2d8>

  /* Check the parameters */
  assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
  assert_param(IS_SPI_MODE(hspi->Init.Mode));
  assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	4a70      	ldr	r2, [pc, #448]	@ (8005aec <HAL_SPI_Init+0x1d8>)
 800592c:	4293      	cmp	r3, r2
 800592e:	d018      	beq.n	8005962 <HAL_SPI_Init+0x4e>
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	4a6e      	ldr	r2, [pc, #440]	@ (8005af0 <HAL_SPI_Init+0x1dc>)
 8005936:	4293      	cmp	r3, r2
 8005938:	d013      	beq.n	8005962 <HAL_SPI_Init+0x4e>
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4a6d      	ldr	r2, [pc, #436]	@ (8005af4 <HAL_SPI_Init+0x1e0>)
 8005940:	4293      	cmp	r3, r2
 8005942:	d00e      	beq.n	8005962 <HAL_SPI_Init+0x4e>
 8005944:	687b      	ldr	r3, [r7, #4]
 8005946:	681b      	ldr	r3, [r3, #0]
 8005948:	4a6b      	ldr	r2, [pc, #428]	@ (8005af8 <HAL_SPI_Init+0x1e4>)
 800594a:	4293      	cmp	r3, r2
 800594c:	d009      	beq.n	8005962 <HAL_SPI_Init+0x4e>
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	681b      	ldr	r3, [r3, #0]
 8005952:	4a6a      	ldr	r2, [pc, #424]	@ (8005afc <HAL_SPI_Init+0x1e8>)
 8005954:	4293      	cmp	r3, r2
 8005956:	d004      	beq.n	8005962 <HAL_SPI_Init+0x4e>
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	4a68      	ldr	r2, [pc, #416]	@ (8005b00 <HAL_SPI_Init+0x1ec>)
 800595e:	4293      	cmp	r3, r2
 8005960:	e000      	b.n	8005964 <HAL_SPI_Init+0x50>
  {
    assert_param(IS_SPI_LIMITED_DATASIZE(hspi->Init.DataSize));
    assert_param(IS_SPI_LIMITED_FIFOTHRESHOLD(hspi->Init.FifoThreshold));
 8005962:	bf00      	nop
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	2200      	movs	r2, #0
 8005968:	629a      	str	r2, [r3, #40]	@ 0x28
  assert_param(IS_SPI_RDY_MASTER_MANAGEMENT(hspi->Init.ReadyMasterManagement));
  assert_param(IS_SPI_RDY_POLARITY(hspi->Init.ReadyPolarity));
  assert_param(IS_SPI_MASTER_RX_AUTOSUSP(hspi->Init.MasterReceiverAutoSusp));

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	681b      	ldr	r3, [r3, #0]
 800596e:	4a5f      	ldr	r2, [pc, #380]	@ (8005aec <HAL_SPI_Init+0x1d8>)
 8005970:	4293      	cmp	r3, r2
 8005972:	d018      	beq.n	80059a6 <HAL_SPI_Init+0x92>
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	681b      	ldr	r3, [r3, #0]
 8005978:	4a5d      	ldr	r2, [pc, #372]	@ (8005af0 <HAL_SPI_Init+0x1dc>)
 800597a:	4293      	cmp	r3, r2
 800597c:	d013      	beq.n	80059a6 <HAL_SPI_Init+0x92>
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	4a5c      	ldr	r2, [pc, #368]	@ (8005af4 <HAL_SPI_Init+0x1e0>)
 8005984:	4293      	cmp	r3, r2
 8005986:	d00e      	beq.n	80059a6 <HAL_SPI_Init+0x92>
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	681b      	ldr	r3, [r3, #0]
 800598c:	4a5a      	ldr	r2, [pc, #360]	@ (8005af8 <HAL_SPI_Init+0x1e4>)
 800598e:	4293      	cmp	r3, r2
 8005990:	d009      	beq.n	80059a6 <HAL_SPI_Init+0x92>
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	681b      	ldr	r3, [r3, #0]
 8005996:	4a59      	ldr	r2, [pc, #356]	@ (8005afc <HAL_SPI_Init+0x1e8>)
 8005998:	4293      	cmp	r3, r2
 800599a:	d004      	beq.n	80059a6 <HAL_SPI_Init+0x92>
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	4a57      	ldr	r2, [pc, #348]	@ (8005b00 <HAL_SPI_Init+0x1ec>)
 80059a2:	4293      	cmp	r3, r2
 80059a4:	d105      	bne.n	80059b2 <HAL_SPI_Init+0x9e>
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	68db      	ldr	r3, [r3, #12]
 80059aa:	2b0f      	cmp	r3, #15
 80059ac:	d901      	bls.n	80059b2 <HAL_SPI_Init+0x9e>
  {
    return HAL_ERROR;
 80059ae:	2301      	movs	r3, #1
 80059b0:	e11c      	b.n	8005bec <HAL_SPI_Init+0x2d8>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 80059b2:	6878      	ldr	r0, [r7, #4]
 80059b4:	f001 f876 	bl	8006aa4 <SPI_GetPacketSize>
 80059b8:	60f8      	str	r0, [r7, #12]
  if (((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	4a4b      	ldr	r2, [pc, #300]	@ (8005aec <HAL_SPI_Init+0x1d8>)
 80059c0:	4293      	cmp	r3, r2
 80059c2:	d018      	beq.n	80059f6 <HAL_SPI_Init+0xe2>
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	681b      	ldr	r3, [r3, #0]
 80059c8:	4a49      	ldr	r2, [pc, #292]	@ (8005af0 <HAL_SPI_Init+0x1dc>)
 80059ca:	4293      	cmp	r3, r2
 80059cc:	d013      	beq.n	80059f6 <HAL_SPI_Init+0xe2>
 80059ce:	687b      	ldr	r3, [r7, #4]
 80059d0:	681b      	ldr	r3, [r3, #0]
 80059d2:	4a48      	ldr	r2, [pc, #288]	@ (8005af4 <HAL_SPI_Init+0x1e0>)
 80059d4:	4293      	cmp	r3, r2
 80059d6:	d00e      	beq.n	80059f6 <HAL_SPI_Init+0xe2>
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	681b      	ldr	r3, [r3, #0]
 80059dc:	4a46      	ldr	r2, [pc, #280]	@ (8005af8 <HAL_SPI_Init+0x1e4>)
 80059de:	4293      	cmp	r3, r2
 80059e0:	d009      	beq.n	80059f6 <HAL_SPI_Init+0xe2>
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	4a45      	ldr	r2, [pc, #276]	@ (8005afc <HAL_SPI_Init+0x1e8>)
 80059e8:	4293      	cmp	r3, r2
 80059ea:	d004      	beq.n	80059f6 <HAL_SPI_Init+0xe2>
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	681b      	ldr	r3, [r3, #0]
 80059f0:	4a43      	ldr	r2, [pc, #268]	@ (8005b00 <HAL_SPI_Init+0x1ec>)
 80059f2:	4293      	cmp	r3, r2
 80059f4:	d102      	bne.n	80059fc <HAL_SPI_Init+0xe8>
 80059f6:	68fb      	ldr	r3, [r7, #12]
 80059f8:	2b08      	cmp	r3, #8
 80059fa:	d820      	bhi.n	8005a3e <HAL_SPI_Init+0x12a>
      ((IS_SPI_FULL_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	681b      	ldr	r3, [r3, #0]
  if (((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 8005a00:	4a40      	ldr	r2, [pc, #256]	@ (8005b04 <HAL_SPI_Init+0x1f0>)
 8005a02:	4293      	cmp	r3, r2
 8005a04:	d018      	beq.n	8005a38 <HAL_SPI_Init+0x124>
      ((IS_SPI_FULL_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	681b      	ldr	r3, [r3, #0]
 8005a0a:	4a3f      	ldr	r2, [pc, #252]	@ (8005b08 <HAL_SPI_Init+0x1f4>)
 8005a0c:	4293      	cmp	r3, r2
 8005a0e:	d013      	beq.n	8005a38 <HAL_SPI_Init+0x124>
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	681b      	ldr	r3, [r3, #0]
 8005a14:	4a3d      	ldr	r2, [pc, #244]	@ (8005b0c <HAL_SPI_Init+0x1f8>)
 8005a16:	4293      	cmp	r3, r2
 8005a18:	d00e      	beq.n	8005a38 <HAL_SPI_Init+0x124>
 8005a1a:	687b      	ldr	r3, [r7, #4]
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4a3c      	ldr	r2, [pc, #240]	@ (8005b10 <HAL_SPI_Init+0x1fc>)
 8005a20:	4293      	cmp	r3, r2
 8005a22:	d009      	beq.n	8005a38 <HAL_SPI_Init+0x124>
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	4a3a      	ldr	r2, [pc, #232]	@ (8005b14 <HAL_SPI_Init+0x200>)
 8005a2a:	4293      	cmp	r3, r2
 8005a2c:	d004      	beq.n	8005a38 <HAL_SPI_Init+0x124>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	4a39      	ldr	r2, [pc, #228]	@ (8005b18 <HAL_SPI_Init+0x204>)
 8005a34:	4293      	cmp	r3, r2
 8005a36:	d104      	bne.n	8005a42 <HAL_SPI_Init+0x12e>
 8005a38:	68fb      	ldr	r3, [r7, #12]
 8005a3a:	2b10      	cmp	r3, #16
 8005a3c:	d901      	bls.n	8005a42 <HAL_SPI_Init+0x12e>
  {
    return HAL_ERROR;
 8005a3e:	2301      	movs	r3, #1
 8005a40:	e0d4      	b.n	8005bec <HAL_SPI_Init+0x2d8>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8005a48:	b2db      	uxtb	r3, r3
 8005a4a:	2b00      	cmp	r3, #0
 8005a4c:	d106      	bne.n	8005a5c <HAL_SPI_Init+0x148>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	2200      	movs	r2, #0
 8005a52:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005a56:	6878      	ldr	r0, [r7, #4]
 8005a58:	f7fb f8dc 	bl	8000c14 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	2202      	movs	r2, #2
 8005a60:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	681a      	ldr	r2, [r3, #0]
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	f022 0201 	bic.w	r2, r2, #1
 8005a72:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	689b      	ldr	r3, [r3, #8]
 8005a7a:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 8005a7e:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	699b      	ldr	r3, [r3, #24]
 8005a84:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005a88:	d119      	bne.n	8005abe <HAL_SPI_Init+0x1aa>
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	685b      	ldr	r3, [r3, #4]
 8005a8e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005a92:	d103      	bne.n	8005a9c <HAL_SPI_Init+0x188>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 8005a98:	2b00      	cmp	r3, #0
 8005a9a:	d008      	beq.n	8005aae <HAL_SPI_Init+0x19a>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8005aa0:	2b00      	cmp	r3, #0
 8005aa2:	d10c      	bne.n	8005abe <HAL_SPI_Init+0x1aa>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 8005aa8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005aac:	d107      	bne.n	8005abe <HAL_SPI_Init+0x1aa>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	681a      	ldr	r2, [r3, #0]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005abc:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	685b      	ldr	r3, [r3, #4]
 8005ac2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d028      	beq.n	8005b1c <HAL_SPI_Init+0x208>
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	68db      	ldr	r3, [r3, #12]
 8005ace:	2b06      	cmp	r3, #6
 8005ad0:	d924      	bls.n	8005b1c <HAL_SPI_Init+0x208>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	681b      	ldr	r3, [r3, #0]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	430a      	orrs	r2, r1
 8005ae6:	601a      	str	r2, [r3, #0]
 8005ae8:	e020      	b.n	8005b2c <HAL_SPI_Init+0x218>
 8005aea:	bf00      	nop
 8005aec:	40014c00 	.word	0x40014c00
 8005af0:	50014c00 	.word	0x50014c00
 8005af4:	44002000 	.word	0x44002000
 8005af8:	54002000 	.word	0x54002000
 8005afc:	40015000 	.word	0x40015000
 8005b00:	50015000 	.word	0x50015000
 8005b04:	40013000 	.word	0x40013000
 8005b08:	50013000 	.word	0x50013000
 8005b0c:	40003800 	.word	0x40003800
 8005b10:	50003800 	.word	0x50003800
 8005b14:	40003c00 	.word	0x40003c00
 8005b18:	50003c00 	.word	0x50003c00
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	681a      	ldr	r2, [r3, #0]
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	681b      	ldr	r3, [r3, #0]
 8005b26:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005b2a:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	69da      	ldr	r2, [r3, #28]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005b34:	431a      	orrs	r2, r3
 8005b36:	68bb      	ldr	r3, [r7, #8]
 8005b38:	431a      	orrs	r2, r3
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b3e:	ea42 0103 	orr.w	r1, r2, r3
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	68da      	ldr	r2, [r3, #12]
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	430a      	orrs	r2, r1
 8005b4c:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005b56:	431a      	orrs	r2, r3
 8005b58:	687b      	ldr	r3, [r7, #4]
 8005b5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005b5c:	431a      	orrs	r2, r3
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	699b      	ldr	r3, [r3, #24]
 8005b62:	431a      	orrs	r2, r3
 8005b64:	687b      	ldr	r3, [r7, #4]
 8005b66:	691b      	ldr	r3, [r3, #16]
 8005b68:	431a      	orrs	r2, r3
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	695b      	ldr	r3, [r3, #20]
 8005b6e:	431a      	orrs	r2, r3
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	6a1b      	ldr	r3, [r3, #32]
 8005b74:	431a      	orrs	r2, r3
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	685b      	ldr	r3, [r3, #4]
 8005b7a:	431a      	orrs	r2, r3
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005b80:	431a      	orrs	r2, r3
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	689b      	ldr	r3, [r3, #8]
 8005b86:	431a      	orrs	r2, r3
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005b8c:	431a      	orrs	r2, r3
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b92:	431a      	orrs	r2, r3
 8005b94:	687b      	ldr	r3, [r7, #4]
 8005b96:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005b98:	ea42 0103 	orr.w	r1, r2, r3
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	430a      	orrs	r2, r1
 8005ba6:	60da      	str	r2, [r3, #12]
#endif /* USE_SPI_CRC */
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	681b      	ldr	r3, [r3, #0]
 8005bb2:	f022 0201 	bic.w	r2, r2, #1
 8005bb6:	651a      	str	r2, [r3, #80]	@ 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	685b      	ldr	r3, [r3, #4]
 8005bbc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bc0:	2b00      	cmp	r3, #0
 8005bc2:	d00a      	beq.n	8005bda <HAL_SPI_Init+0x2c6>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	68db      	ldr	r3, [r3, #12]
 8005bca:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	430a      	orrs	r2, r1
 8005bd8:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	2200      	movs	r2, #0
 8005bde:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->State     = HAL_SPI_STATE_READY;
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	2201      	movs	r2, #1
 8005be6:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  return HAL_OK;
 8005bea:	2300      	movs	r3, #0
}
 8005bec:	4618      	mov	r0, r3
 8005bee:	3710      	adds	r7, #16
 8005bf0:	46bd      	mov	sp, r7
 8005bf2:	bd80      	pop	{r7, pc}

08005bf4 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b088      	sub	sp, #32
 8005bf8:	af02      	add	r7, sp, #8
 8005bfa:	60f8      	str	r0, [r7, #12]
 8005bfc:	60b9      	str	r1, [r7, #8]
 8005bfe:	603b      	str	r3, [r7, #0]
 8005c00:	4613      	mov	r3, r2
 8005c02:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 8005c04:	68fb      	ldr	r3, [r7, #12]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	3320      	adds	r3, #32
 8005c0a:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Check transfer size parameter */
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	4a92      	ldr	r2, [pc, #584]	@ (8005e5c <HAL_SPI_Transmit+0x268>)
 8005c12:	4293      	cmp	r3, r2
 8005c14:	d012      	beq.n	8005c3c <HAL_SPI_Transmit+0x48>
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	4a91      	ldr	r2, [pc, #580]	@ (8005e60 <HAL_SPI_Transmit+0x26c>)
 8005c1c:	4293      	cmp	r3, r2
 8005c1e:	d00d      	beq.n	8005c3c <HAL_SPI_Transmit+0x48>
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	4a8f      	ldr	r2, [pc, #572]	@ (8005e64 <HAL_SPI_Transmit+0x270>)
 8005c26:	4293      	cmp	r3, r2
 8005c28:	d008      	beq.n	8005c3c <HAL_SPI_Transmit+0x48>
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	4a8e      	ldr	r2, [pc, #568]	@ (8005e68 <HAL_SPI_Transmit+0x274>)
 8005c30:	4293      	cmp	r3, r2
 8005c32:	d003      	beq.n	8005c3c <HAL_SPI_Transmit+0x48>
 8005c34:	68fb      	ldr	r3, [r7, #12]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	4a8c      	ldr	r2, [pc, #560]	@ (8005e6c <HAL_SPI_Transmit+0x278>)
 8005c3a:	4293      	cmp	r3, r2
  {
    assert_param(IS_SPI_TRANSFER_SIZE(Size));
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005c3c:	f7fb fb6c 	bl	8001318 <HAL_GetTick>
 8005c40:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005c42:	68fb      	ldr	r3, [r7, #12]
 8005c44:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8005c48:	b2db      	uxtb	r3, r3
 8005c4a:	2b01      	cmp	r3, #1
 8005c4c:	d001      	beq.n	8005c52 <HAL_SPI_Transmit+0x5e>
  {
    return HAL_BUSY;
 8005c4e:	2302      	movs	r3, #2
 8005c50:	e204      	b.n	800605c <HAL_SPI_Transmit+0x468>
  }

  if ((pData == NULL) || (Size == 0UL))
 8005c52:	68bb      	ldr	r3, [r7, #8]
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	d002      	beq.n	8005c5e <HAL_SPI_Transmit+0x6a>
 8005c58:	88fb      	ldrh	r3, [r7, #6]
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d101      	bne.n	8005c62 <HAL_SPI_Transmit+0x6e>
  {
    return HAL_ERROR;
 8005c5e:	2301      	movs	r3, #1
 8005c60:	e1fc      	b.n	800605c <HAL_SPI_Transmit+0x468>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 8005c68:	2b01      	cmp	r3, #1
 8005c6a:	d101      	bne.n	8005c70 <HAL_SPI_Transmit+0x7c>
 8005c6c:	2302      	movs	r3, #2
 8005c6e:	e1f5      	b.n	800605c <HAL_SPI_Transmit+0x468>
 8005c70:	68fb      	ldr	r3, [r7, #12]
 8005c72:	2201      	movs	r2, #1
 8005c74:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005c78:	68fb      	ldr	r3, [r7, #12]
 8005c7a:	2203      	movs	r2, #3
 8005c7c:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005c80:	68fb      	ldr	r3, [r7, #12]
 8005c82:	2200      	movs	r2, #0
 8005c84:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	68ba      	ldr	r2, [r7, #8]
 8005c8c:	665a      	str	r2, [r3, #100]	@ 0x64
  hspi->TxXferSize  = Size;
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	88fa      	ldrh	r2, [r7, #6]
 8005c92:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
  hspi->TxXferCount = Size;
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	88fa      	ldrh	r2, [r7, #6]
 8005c9a:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	2200      	movs	r2, #0
 8005ca2:	66da      	str	r2, [r3, #108]	@ 0x6c
  hspi->RxXferSize  = (uint16_t) 0UL;
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	2200      	movs	r2, #0
 8005ca8:	f8a3 2070 	strh.w	r2, [r3, #112]	@ 0x70
  hspi->RxXferCount = (uint16_t) 0UL;
 8005cac:	68fb      	ldr	r3, [r7, #12]
 8005cae:	2200      	movs	r2, #0
 8005cb0:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
  hspi->TxISR       = NULL;
 8005cb4:	68fb      	ldr	r3, [r7, #12]
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	67da      	str	r2, [r3, #124]	@ 0x7c
  hspi->RxISR       = NULL;
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	2200      	movs	r2, #0
 8005cbe:	679a      	str	r2, [r3, #120]	@ 0x78

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005cc0:	68fb      	ldr	r3, [r7, #12]
 8005cc2:	689b      	ldr	r3, [r3, #8]
 8005cc4:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 8005cc8:	d108      	bne.n	8005cdc <HAL_SPI_Transmit+0xe8>
  {
    SPI_1LINE_TX(hspi);
 8005cca:	68fb      	ldr	r3, [r7, #12]
 8005ccc:	681b      	ldr	r3, [r3, #0]
 8005cce:	681a      	ldr	r2, [r3, #0]
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005cd8:	601a      	str	r2, [r3, #0]
 8005cda:	e009      	b.n	8005cf0 <HAL_SPI_Transmit+0xfc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	68db      	ldr	r3, [r3, #12]
 8005ce2:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	681b      	ldr	r3, [r3, #0]
 8005cea:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8005cee:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	685b      	ldr	r3, [r3, #4]
 8005cf6:	0c1b      	lsrs	r3, r3, #16
 8005cf8:	041b      	lsls	r3, r3, #16
 8005cfa:	88f9      	ldrh	r1, [r7, #6]
 8005cfc:	68fa      	ldr	r2, [r7, #12]
 8005cfe:	6812      	ldr	r2, [r2, #0]
 8005d00:	430b      	orrs	r3, r1
 8005d02:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	681a      	ldr	r2, [r3, #0]
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	f042 0201 	orr.w	r2, r2, #1
 8005d12:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	685b      	ldr	r3, [r3, #4]
 8005d18:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005d1c:	d107      	bne.n	8005d2e <HAL_SPI_Transmit+0x13a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 8005d1e:	68fb      	ldr	r3, [r7, #12]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	681a      	ldr	r2, [r3, #0]
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005d2c:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if ((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (IS_SPI_FULL_INSTANCE(hspi->Instance)))
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	68db      	ldr	r3, [r3, #12]
 8005d32:	2b0f      	cmp	r3, #15
 8005d34:	d965      	bls.n	8005e02 <HAL_SPI_Transmit+0x20e>
 8005d36:	68fb      	ldr	r3, [r7, #12]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	4a4d      	ldr	r2, [pc, #308]	@ (8005e70 <HAL_SPI_Transmit+0x27c>)
 8005d3c:	4293      	cmp	r3, r2
 8005d3e:	d059      	beq.n	8005df4 <HAL_SPI_Transmit+0x200>
 8005d40:	68fb      	ldr	r3, [r7, #12]
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	4a4b      	ldr	r2, [pc, #300]	@ (8005e74 <HAL_SPI_Transmit+0x280>)
 8005d46:	4293      	cmp	r3, r2
 8005d48:	d054      	beq.n	8005df4 <HAL_SPI_Transmit+0x200>
 8005d4a:	68fb      	ldr	r3, [r7, #12]
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	4a4a      	ldr	r2, [pc, #296]	@ (8005e78 <HAL_SPI_Transmit+0x284>)
 8005d50:	4293      	cmp	r3, r2
 8005d52:	d04f      	beq.n	8005df4 <HAL_SPI_Transmit+0x200>
 8005d54:	68fb      	ldr	r3, [r7, #12]
 8005d56:	681b      	ldr	r3, [r3, #0]
 8005d58:	4a48      	ldr	r2, [pc, #288]	@ (8005e7c <HAL_SPI_Transmit+0x288>)
 8005d5a:	4293      	cmp	r3, r2
 8005d5c:	d04a      	beq.n	8005df4 <HAL_SPI_Transmit+0x200>
 8005d5e:	68fb      	ldr	r3, [r7, #12]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	4a47      	ldr	r2, [pc, #284]	@ (8005e80 <HAL_SPI_Transmit+0x28c>)
 8005d64:	4293      	cmp	r3, r2
 8005d66:	d045      	beq.n	8005df4 <HAL_SPI_Transmit+0x200>
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	681b      	ldr	r3, [r3, #0]
 8005d6c:	4a45      	ldr	r2, [pc, #276]	@ (8005e84 <HAL_SPI_Transmit+0x290>)
 8005d6e:	4293      	cmp	r3, r2
 8005d70:	d147      	bne.n	8005e02 <HAL_SPI_Transmit+0x20e>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8005d72:	e03f      	b.n	8005df4 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	695b      	ldr	r3, [r3, #20]
 8005d7a:	f003 0302 	and.w	r3, r3, #2
 8005d7e:	2b02      	cmp	r3, #2
 8005d80:	d114      	bne.n	8005dac <HAL_SPI_Transmit+0x1b8>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005d82:	68fb      	ldr	r3, [r7, #12]
 8005d84:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	6812      	ldr	r2, [r2, #0]
 8005d8c:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005d92:	1d1a      	adds	r2, r3, #4
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	665a      	str	r2, [r3, #100]	@ 0x64
        hspi->TxXferCount--;
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005d9e:	b29b      	uxth	r3, r3
 8005da0:	3b01      	subs	r3, #1
 8005da2:	b29a      	uxth	r2, r3
 8005da4:	68fb      	ldr	r3, [r7, #12]
 8005da6:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005daa:	e023      	b.n	8005df4 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005dac:	f7fb fab4 	bl	8001318 <HAL_GetTick>
 8005db0:	4602      	mov	r2, r0
 8005db2:	693b      	ldr	r3, [r7, #16]
 8005db4:	1ad3      	subs	r3, r2, r3
 8005db6:	683a      	ldr	r2, [r7, #0]
 8005db8:	429a      	cmp	r2, r3
 8005dba:	d803      	bhi.n	8005dc4 <HAL_SPI_Transmit+0x1d0>
 8005dbc:	683b      	ldr	r3, [r7, #0]
 8005dbe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005dc2:	d102      	bne.n	8005dca <HAL_SPI_Transmit+0x1d6>
 8005dc4:	683b      	ldr	r3, [r7, #0]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d114      	bne.n	8005df4 <HAL_SPI_Transmit+0x200>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8005dca:	68f8      	ldr	r0, [r7, #12]
 8005dcc:	f000 fd9c 	bl	8006908 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005dd6:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	2201      	movs	r2, #1
 8005de4:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	2200      	movs	r2, #0
 8005dec:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 8005df0:	2303      	movs	r3, #3
 8005df2:	e133      	b.n	800605c <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005dfa:	b29b      	uxth	r3, r3
 8005dfc:	2b00      	cmp	r3, #0
 8005dfe:	d1b9      	bne.n	8005d74 <HAL_SPI_Transmit+0x180>
  if ((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (IS_SPI_FULL_INSTANCE(hspi->Instance)))
 8005e00:	e106      	b.n	8006010 <HAL_SPI_Transmit+0x41c>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	68db      	ldr	r3, [r3, #12]
 8005e06:	2b07      	cmp	r3, #7
 8005e08:	f240 80fb 	bls.w	8006002 <HAL_SPI_Transmit+0x40e>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8005e0c:	e074      	b.n	8005ef8 <HAL_SPI_Transmit+0x304>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005e0e:	68fb      	ldr	r3, [r7, #12]
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	695b      	ldr	r3, [r3, #20]
 8005e14:	f003 0302 	and.w	r3, r3, #2
 8005e18:	2b02      	cmp	r3, #2
 8005e1a:	d149      	bne.n	8005eb0 <HAL_SPI_Transmit+0x2bc>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8005e1c:	68fb      	ldr	r3, [r7, #12]
 8005e1e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005e22:	b29b      	uxth	r3, r3
 8005e24:	2b01      	cmp	r3, #1
 8005e26:	d92f      	bls.n	8005e88 <HAL_SPI_Transmit+0x294>
 8005e28:	68fb      	ldr	r3, [r7, #12]
 8005e2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d02b      	beq.n	8005e88 <HAL_SPI_Transmit+0x294>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005e30:	68fb      	ldr	r3, [r7, #12]
 8005e32:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	6812      	ldr	r2, [r2, #0]
 8005e3a:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005e40:	1d1a      	adds	r2, r3, #4
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)2UL;
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005e4c:	b29b      	uxth	r3, r3
 8005e4e:	3b02      	subs	r3, #2
 8005e50:	b29a      	uxth	r2, r3
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005e58:	e04e      	b.n	8005ef8 <HAL_SPI_Transmit+0x304>
 8005e5a:	bf00      	nop
 8005e5c:	40014c00 	.word	0x40014c00
 8005e60:	50014c00 	.word	0x50014c00
 8005e64:	44002000 	.word	0x44002000
 8005e68:	54002000 	.word	0x54002000
 8005e6c:	40015000 	.word	0x40015000
 8005e70:	40013000 	.word	0x40013000
 8005e74:	50013000 	.word	0x50013000
 8005e78:	40003800 	.word	0x40003800
 8005e7c:	50003800 	.word	0x50003800
 8005e80:	40003c00 	.word	0x40003c00
 8005e84:	50003c00 	.word	0x50003c00
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8005e88:	68fb      	ldr	r3, [r7, #12]
 8005e8a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005e8c:	881a      	ldrh	r2, [r3, #0]
 8005e8e:	697b      	ldr	r3, [r7, #20]
 8005e90:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005e96:	1c9a      	adds	r2, r3, #2
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount--;
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005ea2:	b29b      	uxth	r3, r3
 8005ea4:	3b01      	subs	r3, #1
 8005ea6:	b29a      	uxth	r2, r3
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005eae:	e023      	b.n	8005ef8 <HAL_SPI_Transmit+0x304>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005eb0:	f7fb fa32 	bl	8001318 <HAL_GetTick>
 8005eb4:	4602      	mov	r2, r0
 8005eb6:	693b      	ldr	r3, [r7, #16]
 8005eb8:	1ad3      	subs	r3, r2, r3
 8005eba:	683a      	ldr	r2, [r7, #0]
 8005ebc:	429a      	cmp	r2, r3
 8005ebe:	d803      	bhi.n	8005ec8 <HAL_SPI_Transmit+0x2d4>
 8005ec0:	683b      	ldr	r3, [r7, #0]
 8005ec2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ec6:	d102      	bne.n	8005ece <HAL_SPI_Transmit+0x2da>
 8005ec8:	683b      	ldr	r3, [r7, #0]
 8005eca:	2b00      	cmp	r3, #0
 8005ecc:	d114      	bne.n	8005ef8 <HAL_SPI_Transmit+0x304>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8005ece:	68f8      	ldr	r0, [r7, #12]
 8005ed0:	f000 fd1a 	bl	8006908 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8005ed4:	68fb      	ldr	r3, [r7, #12]
 8005ed6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005eda:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005ede:	68fb      	ldr	r3, [r7, #12]
 8005ee0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 8005ee4:	68fb      	ldr	r3, [r7, #12]
 8005ee6:	2201      	movs	r2, #1
 8005ee8:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8005eec:	68fb      	ldr	r3, [r7, #12]
 8005eee:	2200      	movs	r2, #0
 8005ef0:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 8005ef4:	2303      	movs	r3, #3
 8005ef6:	e0b1      	b.n	800605c <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005efe:	b29b      	uxth	r3, r3
 8005f00:	2b00      	cmp	r3, #0
 8005f02:	d184      	bne.n	8005e0e <HAL_SPI_Transmit+0x21a>
 8005f04:	e084      	b.n	8006010 <HAL_SPI_Transmit+0x41c>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	695b      	ldr	r3, [r3, #20]
 8005f0c:	f003 0302 	and.w	r3, r3, #2
 8005f10:	2b02      	cmp	r3, #2
 8005f12:	d152      	bne.n	8005fba <HAL_SPI_Transmit+0x3c6>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f1a:	b29b      	uxth	r3, r3
 8005f1c:	2b03      	cmp	r3, #3
 8005f1e:	d918      	bls.n	8005f52 <HAL_SPI_Transmit+0x35e>
 8005f20:	68fb      	ldr	r3, [r7, #12]
 8005f22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005f24:	2b40      	cmp	r3, #64	@ 0x40
 8005f26:	d914      	bls.n	8005f52 <HAL_SPI_Transmit+0x35e>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	6812      	ldr	r2, [r2, #0]
 8005f32:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005f38:	1d1a      	adds	r2, r3, #4
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)4UL;
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f44:	b29b      	uxth	r3, r3
 8005f46:	3b04      	subs	r3, #4
 8005f48:	b29a      	uxth	r2, r3
 8005f4a:	68fb      	ldr	r3, [r7, #12]
 8005f4c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005f50:	e057      	b.n	8006002 <HAL_SPI_Transmit+0x40e>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f58:	b29b      	uxth	r3, r3
 8005f5a:	2b01      	cmp	r3, #1
 8005f5c:	d917      	bls.n	8005f8e <HAL_SPI_Transmit+0x39a>
 8005f5e:	68fb      	ldr	r3, [r7, #12]
 8005f60:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d013      	beq.n	8005f8e <HAL_SPI_Transmit+0x39a>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005f6a:	881a      	ldrh	r2, [r3, #0]
 8005f6c:	697b      	ldr	r3, [r7, #20]
 8005f6e:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005f74:	1c9a      	adds	r2, r3, #2
 8005f76:	68fb      	ldr	r3, [r7, #12]
 8005f78:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)2UL;
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f80:	b29b      	uxth	r3, r3
 8005f82:	3b02      	subs	r3, #2
 8005f84:	b29a      	uxth	r2, r3
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005f8c:	e039      	b.n	8006002 <HAL_SPI_Transmit+0x40e>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	3320      	adds	r3, #32
 8005f98:	7812      	ldrb	r2, [r2, #0]
 8005f9a:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005fa0:	1c5a      	adds	r2, r3, #1
 8005fa2:	68fb      	ldr	r3, [r7, #12]
 8005fa4:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount--;
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005fac:	b29b      	uxth	r3, r3
 8005fae:	3b01      	subs	r3, #1
 8005fb0:	b29a      	uxth	r2, r3
 8005fb2:	68fb      	ldr	r3, [r7, #12]
 8005fb4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005fb8:	e023      	b.n	8006002 <HAL_SPI_Transmit+0x40e>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005fba:	f7fb f9ad 	bl	8001318 <HAL_GetTick>
 8005fbe:	4602      	mov	r2, r0
 8005fc0:	693b      	ldr	r3, [r7, #16]
 8005fc2:	1ad3      	subs	r3, r2, r3
 8005fc4:	683a      	ldr	r2, [r7, #0]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	d803      	bhi.n	8005fd2 <HAL_SPI_Transmit+0x3de>
 8005fca:	683b      	ldr	r3, [r7, #0]
 8005fcc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fd0:	d102      	bne.n	8005fd8 <HAL_SPI_Transmit+0x3e4>
 8005fd2:	683b      	ldr	r3, [r7, #0]
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	d114      	bne.n	8006002 <HAL_SPI_Transmit+0x40e>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8005fd8:	68f8      	ldr	r0, [r7, #12]
 8005fda:	f000 fc95 	bl	8006908 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005fe4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005fe8:	68fb      	ldr	r3, [r7, #12]
 8005fea:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	2201      	movs	r2, #1
 8005ff2:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 8005ffe:	2303      	movs	r3, #3
 8006000:	e02c      	b.n	800605c <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006008:	b29b      	uxth	r3, r3
 800600a:	2b00      	cmp	r3, #0
 800600c:	f47f af7b 	bne.w	8005f06 <HAL_SPI_Transmit+0x312>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 8006010:	693b      	ldr	r3, [r7, #16]
 8006012:	9300      	str	r3, [sp, #0]
 8006014:	683b      	ldr	r3, [r7, #0]
 8006016:	2200      	movs	r2, #0
 8006018:	2108      	movs	r1, #8
 800601a:	68f8      	ldr	r0, [r7, #12]
 800601c:	f000 fd14 	bl	8006a48 <SPI_WaitOnFlagUntilTimeout>
 8006020:	4603      	mov	r3, r0
 8006022:	2b00      	cmp	r3, #0
 8006024:	d007      	beq.n	8006036 <HAL_SPI_Transmit+0x442>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006026:	68fb      	ldr	r3, [r7, #12]
 8006028:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800602c:	f043 0220 	orr.w	r2, r3, #32
 8006030:	68fb      	ldr	r3, [r7, #12]
 8006032:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 8006036:	68f8      	ldr	r0, [r7, #12]
 8006038:	f000 fc66 	bl	8006908 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	2201      	movs	r2, #1
 8006040:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	2200      	movs	r2, #0
 8006048:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006052:	2b00      	cmp	r3, #0
 8006054:	d001      	beq.n	800605a <HAL_SPI_Transmit+0x466>
  {
    return HAL_ERROR;
 8006056:	2301      	movs	r3, #1
 8006058:	e000      	b.n	800605c <HAL_SPI_Transmit+0x468>
  }
  else
  {
    return HAL_OK;
 800605a:	2300      	movs	r3, #0
  }
}
 800605c:	4618      	mov	r0, r3
 800605e:	3718      	adds	r7, #24
 8006060:	46bd      	mov	sp, r7
 8006062:	bd80      	pop	{r7, pc}

08006064 <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8006064:	b580      	push	{r7, lr}
 8006066:	b086      	sub	sp, #24
 8006068:	af00      	add	r7, sp, #0
 800606a:	60f8      	str	r0, [r7, #12]
 800606c:	60b9      	str	r1, [r7, #8]
 800606e:	4613      	mov	r3, r2
 8006070:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Check transfer size parameter */
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	4a87      	ldr	r2, [pc, #540]	@ (8006294 <HAL_SPI_Transmit_DMA+0x230>)
 8006078:	4293      	cmp	r3, r2
 800607a:	d012      	beq.n	80060a2 <HAL_SPI_Transmit_DMA+0x3e>
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	4a85      	ldr	r2, [pc, #532]	@ (8006298 <HAL_SPI_Transmit_DMA+0x234>)
 8006082:	4293      	cmp	r3, r2
 8006084:	d00d      	beq.n	80060a2 <HAL_SPI_Transmit_DMA+0x3e>
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	4a84      	ldr	r2, [pc, #528]	@ (800629c <HAL_SPI_Transmit_DMA+0x238>)
 800608c:	4293      	cmp	r3, r2
 800608e:	d008      	beq.n	80060a2 <HAL_SPI_Transmit_DMA+0x3e>
 8006090:	68fb      	ldr	r3, [r7, #12]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	4a82      	ldr	r2, [pc, #520]	@ (80062a0 <HAL_SPI_Transmit_DMA+0x23c>)
 8006096:	4293      	cmp	r3, r2
 8006098:	d003      	beq.n	80060a2 <HAL_SPI_Transmit_DMA+0x3e>
 800609a:	68fb      	ldr	r3, [r7, #12]
 800609c:	681b      	ldr	r3, [r3, #0]
 800609e:	4a81      	ldr	r2, [pc, #516]	@ (80062a4 <HAL_SPI_Transmit_DMA+0x240>)
 80060a0:	4293      	cmp	r3, r2
  else
  {
    assert_param(IS_SPI_TRANSFER_SIZE(Size));
  }

  if (hspi->State != HAL_SPI_STATE_READY)
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 80060a8:	b2db      	uxtb	r3, r3
 80060aa:	2b01      	cmp	r3, #1
 80060ac:	d001      	beq.n	80060b2 <HAL_SPI_Transmit_DMA+0x4e>
  {
    return HAL_BUSY;
 80060ae:	2302      	movs	r3, #2
 80060b0:	e1b2      	b.n	8006418 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  if ((pData == NULL) || (Size == 0UL))
 80060b2:	68bb      	ldr	r3, [r7, #8]
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d002      	beq.n	80060be <HAL_SPI_Transmit_DMA+0x5a>
 80060b8:	88fb      	ldrh	r3, [r7, #6]
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d101      	bne.n	80060c2 <HAL_SPI_Transmit_DMA+0x5e>
  {
    return HAL_ERROR;
 80060be:	2301      	movs	r3, #1
 80060c0:	e1aa      	b.n	8006418 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 80060c8:	2b01      	cmp	r3, #1
 80060ca:	d101      	bne.n	80060d0 <HAL_SPI_Transmit_DMA+0x6c>
 80060cc:	2302      	movs	r3, #2
 80060ce:	e1a3      	b.n	8006418 <HAL_SPI_Transmit_DMA+0x3b4>
 80060d0:	68fb      	ldr	r3, [r7, #12]
 80060d2:	2201      	movs	r2, #1
 80060d4:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	2203      	movs	r2, #3
 80060dc:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	2200      	movs	r2, #0
 80060e4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	68ba      	ldr	r2, [r7, #8]
 80060ec:	665a      	str	r2, [r3, #100]	@ 0x64
  hspi->TxXferSize  = Size;
 80060ee:	68fb      	ldr	r3, [r7, #12]
 80060f0:	88fa      	ldrh	r2, [r7, #6]
 80060f2:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
  hspi->TxXferCount = Size;
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	88fa      	ldrh	r2, [r7, #6]
 80060fa:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	2200      	movs	r2, #0
 8006102:	66da      	str	r2, [r3, #108]	@ 0x6c
  hspi->TxISR       = NULL;
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	2200      	movs	r2, #0
 8006108:	67da      	str	r2, [r3, #124]	@ 0x7c
  hspi->RxISR       = NULL;
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	2200      	movs	r2, #0
 800610e:	679a      	str	r2, [r3, #120]	@ 0x78
  hspi->RxXferSize  = (uint16_t)0UL;
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	2200      	movs	r2, #0
 8006114:	f8a3 2070 	strh.w	r2, [r3, #112]	@ 0x70
  hspi->RxXferCount = (uint16_t)0UL;
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	2200      	movs	r2, #0
 800611c:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	689b      	ldr	r3, [r3, #8]
 8006124:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 8006128:	d108      	bne.n	800613c <HAL_SPI_Transmit_DMA+0xd8>
  {
    SPI_1LINE_TX(hspi);
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	681b      	ldr	r3, [r3, #0]
 800612e:	681a      	ldr	r2, [r3, #0]
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006138:	601a      	str	r2, [r3, #0]
 800613a:	e009      	b.n	8006150 <HAL_SPI_Transmit_DMA+0xec>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	68db      	ldr	r3, [r3, #12]
 8006142:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800614e:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.SrcDataWidth !=  DMA_SRC_DATAWIDTH_WORD) && \
 8006150:	68fb      	ldr	r3, [r7, #12]
 8006152:	68db      	ldr	r3, [r3, #12]
 8006154:	2b0f      	cmp	r3, #15
 8006156:	d923      	bls.n	80061a0 <HAL_SPI_Transmit_DMA+0x13c>
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800615e:	699b      	ldr	r3, [r3, #24]
 8006160:	2b02      	cmp	r3, #2
 8006162:	d01d      	beq.n	80061a0 <HAL_SPI_Transmit_DMA+0x13c>
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 8006164:	68fb      	ldr	r3, [r7, #12]
 8006166:	681b      	ldr	r3, [r3, #0]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.SrcDataWidth !=  DMA_SRC_DATAWIDTH_WORD) && \
 8006168:	4a4f      	ldr	r2, [pc, #316]	@ (80062a8 <HAL_SPI_Transmit_DMA+0x244>)
 800616a:	4293      	cmp	r3, r2
 800616c:	d022      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	4a4e      	ldr	r2, [pc, #312]	@ (80062ac <HAL_SPI_Transmit_DMA+0x248>)
 8006174:	4293      	cmp	r3, r2
 8006176:	d01d      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	4a4c      	ldr	r2, [pc, #304]	@ (80062b0 <HAL_SPI_Transmit_DMA+0x24c>)
 800617e:	4293      	cmp	r3, r2
 8006180:	d018      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	4a4b      	ldr	r2, [pc, #300]	@ (80062b4 <HAL_SPI_Transmit_DMA+0x250>)
 8006188:	4293      	cmp	r3, r2
 800618a:	d013      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	4a49      	ldr	r2, [pc, #292]	@ (80062b8 <HAL_SPI_Transmit_DMA+0x254>)
 8006192:	4293      	cmp	r3, r2
 8006194:	d00e      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	4a48      	ldr	r2, [pc, #288]	@ (80062bc <HAL_SPI_Transmit_DMA+0x258>)
 800619c:	4293      	cmp	r3, r2
 800619e:	d009      	beq.n	80061b4 <HAL_SPI_Transmit_DMA+0x150>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT)  && (hspi->hdmatx->Init.SrcDataWidth ==  DMA_SRC_DATAWIDTH_BYTE)))
 80061a0:	68fb      	ldr	r3, [r7, #12]
 80061a2:	68db      	ldr	r3, [r3, #12]
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 80061a4:	2b07      	cmp	r3, #7
 80061a6:	d90b      	bls.n	80061c0 <HAL_SPI_Transmit_DMA+0x15c>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT)  && (hspi->hdmatx->Init.SrcDataWidth ==  DMA_SRC_DATAWIDTH_BYTE)))
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80061ae:	699b      	ldr	r3, [r3, #24]
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	d105      	bne.n	80061c0 <HAL_SPI_Transmit_DMA+0x15c>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	2200      	movs	r2, #0
 80061b8:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
    return HAL_ERROR;
 80061bc:	2301      	movs	r3, #1
 80061be:	e12b      	b.n	8006418 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	68db      	ldr	r3, [r3, #12]
 80061c4:	2b07      	cmp	r3, #7
 80061c6:	d820      	bhi.n	800620a <HAL_SPI_Transmit_DMA+0x1a6>
  {
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
 80061c8:	68fb      	ldr	r3, [r7, #12]
 80061ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80061ce:	699b      	ldr	r3, [r3, #24]
 80061d0:	2b01      	cmp	r3, #1
 80061d2:	d109      	bne.n	80061e8 <HAL_SPI_Transmit_DMA+0x184>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 80061da:	b29b      	uxth	r3, r3
 80061dc:	3301      	adds	r3, #1
 80061de:	105b      	asrs	r3, r3, #1
 80061e0:	b29a      	uxth	r2, r3
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    }
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 80061e8:	68fb      	ldr	r3, [r7, #12]
 80061ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80061ee:	699b      	ldr	r3, [r3, #24]
 80061f0:	2b02      	cmp	r3, #2
 80061f2:	d11e      	bne.n	8006232 <HAL_SPI_Transmit_DMA+0x1ce>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 80061f4:	68fb      	ldr	r3, [r7, #12]
 80061f6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 80061fa:	b29b      	uxth	r3, r3
 80061fc:	3303      	adds	r3, #3
 80061fe:	109b      	asrs	r3, r3, #2
 8006200:	b29a      	uxth	r2, r3
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8006208:	e013      	b.n	8006232 <HAL_SPI_Transmit_DMA+0x1ce>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	68db      	ldr	r3, [r3, #12]
 800620e:	2b0f      	cmp	r3, #15
 8006210:	d80f      	bhi.n	8006232 <HAL_SPI_Transmit_DMA+0x1ce>
  {
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006218:	699b      	ldr	r3, [r3, #24]
 800621a:	2b02      	cmp	r3, #2
 800621c:	d109      	bne.n	8006232 <HAL_SPI_Transmit_DMA+0x1ce>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006224:	b29b      	uxth	r3, r3
 8006226:	3301      	adds	r3, #1
 8006228:	105b      	asrs	r3, r3, #1
 800622a:	b29a      	uxth	r2, r3
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006238:	4a21      	ldr	r2, [pc, #132]	@ (80062c0 <HAL_SPI_Transmit_DMA+0x25c>)
 800623a:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006242:	4a20      	ldr	r2, [pc, #128]	@ (80062c4 <HAL_SPI_Transmit_DMA+0x260>)
 8006244:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800624c:	4a1e      	ldr	r2, [pc, #120]	@ (80062c8 <HAL_SPI_Transmit_DMA+0x264>)
 800624e:	669a      	str	r2, [r3, #104]	@ 0x68

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8006250:	68fb      	ldr	r3, [r7, #12]
 8006252:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006256:	2200      	movs	r2, #0
 8006258:	66da      	str	r2, [r3, #108]	@ 0x6c

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	681b      	ldr	r3, [r3, #0]
 800625e:	689a      	ldr	r2, [r3, #8]
 8006260:	68fb      	ldr	r3, [r7, #12]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8006268:	609a      	str	r2, [r3, #8]

  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	68db      	ldr	r3, [r3, #12]
 800626e:	2b07      	cmp	r3, #7
 8006270:	d804      	bhi.n	800627c <HAL_SPI_Transmit_DMA+0x218>
  {
    hspi->TxXferCount = Size;
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	88fa      	ldrh	r2, [r7, #6]
 8006276:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800627a:	e02d      	b.n	80062d8 <HAL_SPI_Transmit_DMA+0x274>
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	68db      	ldr	r3, [r3, #12]
 8006280:	2b0f      	cmp	r3, #15
 8006282:	d823      	bhi.n	80062cc <HAL_SPI_Transmit_DMA+0x268>
  {
    hspi->TxXferCount = Size * 2U;
 8006284:	88fb      	ldrh	r3, [r7, #6]
 8006286:	005b      	lsls	r3, r3, #1
 8006288:	b29a      	uxth	r2, r3
 800628a:	68fb      	ldr	r3, [r7, #12]
 800628c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8006290:	e022      	b.n	80062d8 <HAL_SPI_Transmit_DMA+0x274>
 8006292:	bf00      	nop
 8006294:	40014c00 	.word	0x40014c00
 8006298:	50014c00 	.word	0x50014c00
 800629c:	44002000 	.word	0x44002000
 80062a0:	54002000 	.word	0x54002000
 80062a4:	40015000 	.word	0x40015000
 80062a8:	40013000 	.word	0x40013000
 80062ac:	50013000 	.word	0x50013000
 80062b0:	40003800 	.word	0x40003800
 80062b4:	50003800 	.word	0x50003800
 80062b8:	40003c00 	.word	0x40003c00
 80062bc:	50003c00 	.word	0x50003c00
 80062c0:	08006873 	.word	0x08006873
 80062c4:	0800682d 	.word	0x0800682d
 80062c8:	0800688f 	.word	0x0800688f
  }
  else
  {
    hspi->TxXferCount = Size * 4U;
 80062cc:	88fb      	ldrh	r3, [r7, #6]
 80062ce:	009b      	lsls	r3, r3, #2
 80062d0:	b29a      	uxth	r2, r3
 80062d2:	68fb      	ldr	r3, [r7, #12]
 80062d4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  }

  /* Enable the Tx DMA Stream/Channel */
  if ((hspi->hdmatx->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80062de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80062e0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	d02d      	beq.n	8006344 <HAL_SPI_Transmit_DMA+0x2e0>
  {
    if (hspi->hdmatx->LinkedListQueue != NULL)
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80062ee:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d024      	beq.n	800633e <HAL_SPI_Transmit_DMA+0x2da>
    {
      /* Set DMA data size */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hspi->TxXferCount;
 80062f4:	68fb      	ldr	r3, [r7, #12]
 80062f6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 80062fa:	b29a      	uxth	r2, r3
 80062fc:	68fb      	ldr	r3, [r7, #12]
 80062fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006302:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	609a      	str	r2, [r3, #8]

      /* Set DMA source address */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hspi->pTxBuffPtr;
 8006308:	68fb      	ldr	r3, [r7, #12]
 800630a:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 800630c:	68fb      	ldr	r3, [r7, #12]
 800630e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006312:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	60da      	str	r2, [r3, #12]

      /* Set DMA destination address */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hspi->Instance->TXDR;
 8006318:	68fb      	ldr	r3, [r7, #12]
 800631a:	681b      	ldr	r3, [r3, #0]
 800631c:	f103 0220 	add.w	r2, r3, #32
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006326:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	611a      	str	r2, [r3, #16]

      status = HAL_DMAEx_List_Start_IT(hspi->hdmatx);
 800632c:	68fb      	ldr	r3, [r7, #12]
 800632e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006332:	4618      	mov	r0, r3
 8006334:	f7fc f86e 	bl	8002414 <HAL_DMAEx_List_Start_IT>
 8006338:	4603      	mov	r3, r0
 800633a:	75fb      	strb	r3, [r7, #23]
 800633c:	e014      	b.n	8006368 <HAL_SPI_Transmit_DMA+0x304>
    }
    else
    {
      status = HAL_ERROR;
 800633e:	2301      	movs	r3, #1
 8006340:	75fb      	strb	r3, [r7, #23]
 8006342:	e011      	b.n	8006368 <HAL_SPI_Transmit_DMA+0x304>
    }
  }
  else
  {
    status = HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 800634a:	68fb      	ldr	r3, [r7, #12]
 800634c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800634e:	4619      	mov	r1, r3
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	3320      	adds	r3, #32
 8006356:	461a      	mov	r2, r3
                              hspi->TxXferCount);
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800635e:	b29b      	uxth	r3, r3
    status = HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 8006360:	f7fb fb76 	bl	8001a50 <HAL_DMA_Start_IT>
 8006364:	4603      	mov	r3, r0
 8006366:	75fb      	strb	r3, [r7, #23]
  }

  /* Check status */
  if (status != HAL_OK)
 8006368:	7dfb      	ldrb	r3, [r7, #23]
 800636a:	2b00      	cmp	r3, #0
 800636c:	d011      	beq.n	8006392 <HAL_SPI_Transmit_DMA+0x32e>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006374:	f043 0210 	orr.w	r2, r3, #16
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    hspi->State = HAL_SPI_STATE_READY;
 800637e:	68fb      	ldr	r3, [r7, #12]
 8006380:	2201      	movs	r2, #1
 8006382:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	2200      	movs	r2, #0
 800638a:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

    return HAL_ERROR;
 800638e:	2301      	movs	r3, #1
 8006390:	e042      	b.n	8006418 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Mode == DMA_LINKEDLIST_CIRCULAR)
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006398:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800639a:	2b81      	cmp	r3, #129	@ 0x81
 800639c:	d108      	bne.n	80063b0 <HAL_SPI_Transmit_DMA+0x34c>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	685b      	ldr	r3, [r3, #4]
 80063a4:	68fa      	ldr	r2, [r7, #12]
 80063a6:	6812      	ldr	r2, [r2, #0]
 80063a8:	0c1b      	lsrs	r3, r3, #16
 80063aa:	041b      	lsls	r3, r3, #16
 80063ac:	6053      	str	r3, [r2, #4]
 80063ae:	e009      	b.n	80063c4 <HAL_SPI_Transmit_DMA+0x360>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	685b      	ldr	r3, [r3, #4]
 80063b6:	0c1b      	lsrs	r3, r3, #16
 80063b8:	041b      	lsls	r3, r3, #16
 80063ba:	88f9      	ldrh	r1, [r7, #6]
 80063bc:	68fa      	ldr	r2, [r7, #12]
 80063be:	6812      	ldr	r2, [r2, #0]
 80063c0:	430b      	orrs	r3, r1
 80063c2:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 80063c4:	68fb      	ldr	r3, [r7, #12]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	689a      	ldr	r2, [r3, #8]
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	681b      	ldr	r3, [r3, #0]
 80063ce:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80063d2:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	691a      	ldr	r2, [r3, #16]
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	f442 7248 	orr.w	r2, r2, #800	@ 0x320
 80063e2:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	681b      	ldr	r3, [r3, #0]
 80063e8:	681a      	ldr	r2, [r3, #0]
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	681b      	ldr	r3, [r3, #0]
 80063ee:	f042 0201 	orr.w	r2, r2, #1
 80063f2:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	685b      	ldr	r3, [r3, #4]
 80063f8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80063fc:	d107      	bne.n	800640e <HAL_SPI_Transmit_DMA+0x3aa>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	681a      	ldr	r2, [r3, #0]
 8006404:	68fb      	ldr	r3, [r7, #12]
 8006406:	681b      	ldr	r3, [r3, #0]
 8006408:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800640c:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800640e:	68fb      	ldr	r3, [r7, #12]
 8006410:	2200      	movs	r2, #0
 8006412:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  return HAL_OK;
 8006416:	2300      	movs	r3, #0
}
 8006418:	4618      	mov	r0, r3
 800641a:	3718      	adds	r7, #24
 800641c:	46bd      	mov	sp, r7
 800641e:	bd80      	pop	{r7, pc}

08006420 <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006420:	b580      	push	{r7, lr}
 8006422:	b08a      	sub	sp, #40	@ 0x28
 8006424:	af00      	add	r7, sp, #0
 8006426:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 8006428:	687b      	ldr	r3, [r7, #4]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	691b      	ldr	r3, [r3, #16]
 800642e:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 8006430:	687b      	ldr	r3, [r7, #4]
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	695b      	ldr	r3, [r3, #20]
 8006436:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 8006438:	6a3a      	ldr	r2, [r7, #32]
 800643a:	69fb      	ldr	r3, [r7, #28]
 800643c:	4013      	ands	r3, r2
 800643e:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	689b      	ldr	r3, [r3, #8]
 8006446:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 8006448:	2300      	movs	r3, #0
 800644a:	627b      	str	r3, [r7, #36]	@ 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8006452:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	3330      	adds	r3, #48	@ 0x30
 800645a:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 800645c:	69fb      	ldr	r3, [r7, #28]
 800645e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006462:	2b00      	cmp	r3, #0
 8006464:	d010      	beq.n	8006488 <HAL_SPI_IRQHandler+0x68>
 8006466:	6a3b      	ldr	r3, [r7, #32]
 8006468:	f003 0308 	and.w	r3, r3, #8
 800646c:	2b00      	cmp	r3, #0
 800646e:	d00b      	beq.n	8006488 <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	699a      	ldr	r2, [r3, #24]
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800647e:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 8006480:	6878      	ldr	r0, [r7, #4]
 8006482:	f000 f9c9 	bl	8006818 <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 8006486:	e19a      	b.n	80067be <HAL_SPI_IRQHandler+0x39e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 8006488:	69bb      	ldr	r3, [r7, #24]
 800648a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800648e:	2b00      	cmp	r3, #0
 8006490:	d113      	bne.n	80064ba <HAL_SPI_IRQHandler+0x9a>
 8006492:	69bb      	ldr	r3, [r7, #24]
 8006494:	f003 0320 	and.w	r3, r3, #32
 8006498:	2b00      	cmp	r3, #0
 800649a:	d10e      	bne.n	80064ba <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 800649c:	69bb      	ldr	r3, [r7, #24]
 800649e:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	d009      	beq.n	80064ba <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80064aa:	6878      	ldr	r0, [r7, #4]
 80064ac:	4798      	blx	r3
    hspi->RxISR(hspi);
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80064b2:	6878      	ldr	r0, [r7, #4]
 80064b4:	4798      	blx	r3
    handled = 1UL;
 80064b6:	2301      	movs	r3, #1
 80064b8:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 80064ba:	69bb      	ldr	r3, [r7, #24]
 80064bc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064c0:	2b00      	cmp	r3, #0
 80064c2:	d10f      	bne.n	80064e4 <HAL_SPI_IRQHandler+0xc4>
 80064c4:	69bb      	ldr	r3, [r7, #24]
 80064c6:	f003 0301 	and.w	r3, r3, #1
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d00a      	beq.n	80064e4 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 80064ce:	69bb      	ldr	r3, [r7, #24]
 80064d0:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 80064d4:	2b00      	cmp	r3, #0
 80064d6:	d105      	bne.n	80064e4 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 80064d8:	687b      	ldr	r3, [r7, #4]
 80064da:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80064dc:	6878      	ldr	r0, [r7, #4]
 80064de:	4798      	blx	r3
    handled = 1UL;
 80064e0:	2301      	movs	r3, #1
 80064e2:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 80064e4:	69bb      	ldr	r3, [r7, #24]
 80064e6:	f003 0320 	and.w	r3, r3, #32
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d10f      	bne.n	800650e <HAL_SPI_IRQHandler+0xee>
 80064ee:	69bb      	ldr	r3, [r7, #24]
 80064f0:	f003 0302 	and.w	r3, r3, #2
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	d00a      	beq.n	800650e <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 80064f8:	69bb      	ldr	r3, [r7, #24]
 80064fa:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d105      	bne.n	800650e <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006506:	6878      	ldr	r0, [r7, #4]
 8006508:	4798      	blx	r3
    handled = 1UL;
 800650a:	2301      	movs	r3, #1
 800650c:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  if (handled != 0UL)
 800650e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006510:	2b00      	cmp	r3, #0
 8006512:	f040 814f 	bne.w	80067b4 <HAL_SPI_IRQHandler+0x394>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 8006516:	69bb      	ldr	r3, [r7, #24]
 8006518:	f003 0308 	and.w	r3, r3, #8
 800651c:	2b00      	cmp	r3, #0
 800651e:	f000 808b 	beq.w	8006638 <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	699a      	ldr	r2, [r3, #24]
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	f042 0208 	orr.w	r2, r2, #8
 8006530:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	681b      	ldr	r3, [r3, #0]
 8006536:	699a      	ldr	r2, [r3, #24]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	681b      	ldr	r3, [r3, #0]
 800653c:	f042 0210 	orr.w	r2, r2, #16
 8006540:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	681b      	ldr	r3, [r3, #0]
 8006546:	699a      	ldr	r2, [r3, #24]
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006550:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	681b      	ldr	r3, [r3, #0]
 8006556:	691a      	ldr	r2, [r3, #16]
 8006558:	687b      	ldr	r3, [r7, #4]
 800655a:	681b      	ldr	r3, [r3, #0]
 800655c:	f022 0208 	bic.w	r2, r2, #8
 8006560:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	689b      	ldr	r3, [r3, #8]
 8006568:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800656c:	2b00      	cmp	r3, #0
 800656e:	d13d      	bne.n	80065ec <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 8006570:	e036      	b.n	80065e0 <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	68db      	ldr	r3, [r3, #12]
 8006576:	2b0f      	cmp	r3, #15
 8006578:	d90b      	bls.n	8006592 <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	681a      	ldr	r2, [r3, #0]
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006582:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8006584:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800658a:	1d1a      	adds	r2, r3, #4
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8006590:	e01d      	b.n	80065ce <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	68db      	ldr	r3, [r3, #12]
 8006596:	2b07      	cmp	r3, #7
 8006598:	d90b      	bls.n	80065b2 <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800659e:	68fa      	ldr	r2, [r7, #12]
 80065a0:	8812      	ldrh	r2, [r2, #0]
 80065a2:	b292      	uxth	r2, r2
 80065a4:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 80065a6:	687b      	ldr	r3, [r7, #4]
 80065a8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065aa:	1c9a      	adds	r2, r3, #2
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	66da      	str	r2, [r3, #108]	@ 0x6c
 80065b0:	e00d      	b.n	80065ce <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065be:	7812      	ldrb	r2, [r2, #0]
 80065c0:	b2d2      	uxtb	r2, r2
 80065c2:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065c8:	1c5a      	adds	r2, r3, #1
 80065ca:	687b      	ldr	r3, [r7, #4]
 80065cc:	66da      	str	r2, [r3, #108]	@ 0x6c
        }

        hspi->RxXferCount--;
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	f8b3 3072 	ldrh.w	r3, [r3, #114]	@ 0x72
 80065d4:	b29b      	uxth	r3, r3
 80065d6:	3b01      	subs	r3, #1
 80065d8:	b29a      	uxth	r2, r3
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
      while (hspi->RxXferCount != 0UL)
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	f8b3 3072 	ldrh.w	r3, [r3, #114]	@ 0x72
 80065e6:	b29b      	uxth	r3, r3
 80065e8:	2b00      	cmp	r3, #0
 80065ea:	d1c2      	bne.n	8006572 <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 80065ec:	6878      	ldr	r0, [r7, #4]
 80065ee:	f000 f98b 	bl	8006908 <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	2201      	movs	r2, #1
 80065f6:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80065fa:	687b      	ldr	r3, [r7, #4]
 80065fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006600:	2b00      	cmp	r3, #0
 8006602:	d003      	beq.n	800660c <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006604:	6878      	ldr	r0, [r7, #4]
 8006606:	f000 f8fd 	bl	8006804 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 800660a:	e0d8      	b.n	80067be <HAL_SPI_IRQHandler+0x39e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 800660c:	7cfb      	ldrb	r3, [r7, #19]
 800660e:	2b05      	cmp	r3, #5
 8006610:	d103      	bne.n	800661a <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 8006612:	6878      	ldr	r0, [r7, #4]
 8006614:	f000 f8e2 	bl	80067dc <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 8006618:	e0ce      	b.n	80067b8 <HAL_SPI_IRQHandler+0x398>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 800661a:	7cfb      	ldrb	r3, [r7, #19]
 800661c:	2b04      	cmp	r3, #4
 800661e:	d103      	bne.n	8006628 <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 8006620:	6878      	ldr	r0, [r7, #4]
 8006622:	f000 f8d1 	bl	80067c8 <HAL_SPI_RxCpltCallback>
    return;
 8006626:	e0c7      	b.n	80067b8 <HAL_SPI_IRQHandler+0x398>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 8006628:	7cfb      	ldrb	r3, [r7, #19]
 800662a:	2b03      	cmp	r3, #3
 800662c:	f040 80c4 	bne.w	80067b8 <HAL_SPI_IRQHandler+0x398>
      HAL_SPI_TxCpltCallback(hspi);
 8006630:	6878      	ldr	r0, [r7, #4]
 8006632:	f004 f81d 	bl	800a670 <HAL_SPI_TxCpltCallback>
    return;
 8006636:	e0bf      	b.n	80067b8 <HAL_SPI_IRQHandler+0x398>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 8006638:	69bb      	ldr	r3, [r7, #24]
 800663a:	f403 7358 	and.w	r3, r3, #864	@ 0x360
 800663e:	2b00      	cmp	r3, #0
 8006640:	f000 80bd 	beq.w	80067be <HAL_SPI_IRQHandler+0x39e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 8006644:	69bb      	ldr	r3, [r7, #24]
 8006646:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800664a:	2b00      	cmp	r3, #0
 800664c:	d00f      	beq.n	800666e <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006654:	f043 0204 	orr.w	r2, r3, #4
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	699a      	ldr	r2, [r3, #24]
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800666c:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 800666e:	69bb      	ldr	r3, [r7, #24]
 8006670:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006674:	2b00      	cmp	r3, #0
 8006676:	d00f      	beq.n	8006698 <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800667e:	f043 0201 	orr.w	r2, r3, #1
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	681b      	ldr	r3, [r3, #0]
 800668c:	699a      	ldr	r2, [r3, #24]
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	681b      	ldr	r3, [r3, #0]
 8006692:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006696:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 8006698:	69bb      	ldr	r3, [r7, #24]
 800669a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800669e:	2b00      	cmp	r3, #0
 80066a0:	d00f      	beq.n	80066c2 <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80066a8:	f043 0208 	orr.w	r2, r3, #8
 80066ac:	687b      	ldr	r3, [r7, #4]
 80066ae:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	699a      	ldr	r2, [r3, #24]
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	681b      	ldr	r3, [r3, #0]
 80066bc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80066c0:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 80066c2:	69bb      	ldr	r3, [r7, #24]
 80066c4:	f003 0320 	and.w	r3, r3, #32
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	d00f      	beq.n	80066ec <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80066d2:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 80066dc:	687b      	ldr	r3, [r7, #4]
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	699a      	ldr	r2, [r3, #24]
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	f042 0220 	orr.w	r2, r2, #32
 80066ea:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d062      	beq.n	80067bc <HAL_SPI_IRQHandler+0x39c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	681b      	ldr	r3, [r3, #0]
 80066fa:	681a      	ldr	r2, [r3, #0]
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	f022 0201 	bic.w	r2, r2, #1
 8006704:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	691b      	ldr	r3, [r3, #16]
 800670c:	687a      	ldr	r2, [r7, #4]
 800670e:	6812      	ldr	r2, [r2, #0]
 8006710:	f423 735a 	bic.w	r3, r3, #872	@ 0x368
 8006714:	f023 0303 	bic.w	r3, r3, #3
 8006718:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

#if defined(HAL_DMA_MODULE_ENABLED)
      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 800671a:	697b      	ldr	r3, [r7, #20]
 800671c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8006720:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8006724:	d13e      	bne.n	80067a4 <HAL_SPI_IRQHandler+0x384>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	681b      	ldr	r3, [r3, #0]
 800672a:	689a      	ldr	r2, [r3, #8]
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006734:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800673c:	2b00      	cmp	r3, #0
 800673e:	d015      	beq.n	800676c <HAL_SPI_IRQHandler+0x34c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006746:	4a1f      	ldr	r2, [pc, #124]	@ (80067c4 <HAL_SPI_IRQHandler+0x3a4>)
 8006748:	66da      	str	r2, [r3, #108]	@ 0x6c
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006750:	4618      	mov	r0, r3
 8006752:	f7fb f9e3 	bl	8001b1c <HAL_DMA_Abort_IT>
 8006756:	4603      	mov	r3, r0
 8006758:	2b00      	cmp	r3, #0
 800675a:	d007      	beq.n	800676c <HAL_SPI_IRQHandler+0x34c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006762:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006766:	687b      	ldr	r3, [r7, #4]
 8006768:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006772:	2b00      	cmp	r3, #0
 8006774:	d022      	beq.n	80067bc <HAL_SPI_IRQHandler+0x39c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800677c:	4a11      	ldr	r2, [pc, #68]	@ (80067c4 <HAL_SPI_IRQHandler+0x3a4>)
 800677e:	66da      	str	r2, [r3, #108]	@ 0x6c
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006786:	4618      	mov	r0, r3
 8006788:	f7fb f9c8 	bl	8001b1c <HAL_DMA_Abort_IT>
 800678c:	4603      	mov	r3, r0
 800678e:	2b00      	cmp	r3, #0
 8006790:	d014      	beq.n	80067bc <HAL_SPI_IRQHandler+0x39c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006798:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
#if defined(HAL_DMA_MODULE_ENABLED)
      }
#endif /* HAL_DMA_MODULE_ENABLED */
    }
    return;
 80067a2:	e00b      	b.n	80067bc <HAL_SPI_IRQHandler+0x39c>
        hspi->State = HAL_SPI_STATE_READY;
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	2201      	movs	r2, #1
 80067a8:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
        HAL_SPI_ErrorCallback(hspi);
 80067ac:	6878      	ldr	r0, [r7, #4]
 80067ae:	f000 f829 	bl	8006804 <HAL_SPI_ErrorCallback>
    return;
 80067b2:	e003      	b.n	80067bc <HAL_SPI_IRQHandler+0x39c>
    return;
 80067b4:	bf00      	nop
 80067b6:	e002      	b.n	80067be <HAL_SPI_IRQHandler+0x39e>
    return;
 80067b8:	bf00      	nop
 80067ba:	e000      	b.n	80067be <HAL_SPI_IRQHandler+0x39e>
    return;
 80067bc:	bf00      	nop
  }
}
 80067be:	3728      	adds	r7, #40	@ 0x28
 80067c0:	46bd      	mov	sp, r7
 80067c2:	bd80      	pop	{r7, pc}
 80067c4:	080068d5 	.word	0x080068d5

080067c8 <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 80067c8:	b480      	push	{r7}
 80067ca:	b083      	sub	sp, #12
 80067cc:	af00      	add	r7, sp, #0
 80067ce:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 80067d0:	bf00      	nop
 80067d2:	370c      	adds	r7, #12
 80067d4:	46bd      	mov	sp, r7
 80067d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067da:	4770      	bx	lr

080067dc <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 80067dc:	b480      	push	{r7}
 80067de:	b083      	sub	sp, #12
 80067e0:	af00      	add	r7, sp, #0
 80067e2:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 80067e4:	bf00      	nop
 80067e6:	370c      	adds	r7, #12
 80067e8:	46bd      	mov	sp, r7
 80067ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ee:	4770      	bx	lr

080067f0 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 80067f0:	b480      	push	{r7}
 80067f2:	b083      	sub	sp, #12
 80067f4:	af00      	add	r7, sp, #0
 80067f6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 80067f8:	bf00      	nop
 80067fa:	370c      	adds	r7, #12
 80067fc:	46bd      	mov	sp, r7
 80067fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006802:	4770      	bx	lr

08006804 <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006804:	b480      	push	{r7}
 8006806:	b083      	sub	sp, #12
 8006808:	af00      	add	r7, sp, #0
 800680a:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 800680c:	bf00      	nop
 800680e:	370c      	adds	r7, #12
 8006810:	46bd      	mov	sp, r7
 8006812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006816:	4770      	bx	lr

08006818 <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006818:	b480      	push	{r7}
 800681a:	b083      	sub	sp, #12
 800681c:	af00      	add	r7, sp, #0
 800681e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 8006820:	bf00      	nop
 8006822:	370c      	adds	r7, #12
 8006824:	46bd      	mov	sp, r7
 8006826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800682a:	4770      	bx	lr

0800682c <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 800682c:	b580      	push	{r7, lr}
 800682e:	b084      	sub	sp, #16
 8006830:	af00      	add	r7, sp, #0
 8006832:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006838:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 800683a:	68fb      	ldr	r3, [r7, #12]
 800683c:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8006840:	b2db      	uxtb	r3, r3
 8006842:	2b07      	cmp	r3, #7
 8006844:	d011      	beq.n	800686a <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Mode == DMA_LINKEDLIST_CIRCULAR)
 8006846:	68fb      	ldr	r3, [r7, #12]
 8006848:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800684c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800684e:	2b81      	cmp	r3, #129	@ 0x81
 8006850:	d103      	bne.n	800685a <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 8006852:	68f8      	ldr	r0, [r7, #12]
 8006854:	f003 ff0c 	bl	800a670 <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 8006858:	e007      	b.n	800686a <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 800685a:	68fb      	ldr	r3, [r7, #12]
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	691a      	ldr	r2, [r3, #16]
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	681b      	ldr	r3, [r3, #0]
 8006864:	f042 0208 	orr.w	r2, r2, #8
 8006868:	611a      	str	r2, [r3, #16]
}
 800686a:	bf00      	nop
 800686c:	3710      	adds	r7, #16
 800686e:	46bd      	mov	sp, r7
 8006870:	bd80      	pop	{r7, pc}

08006872 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006872:	b580      	push	{r7, lr}
 8006874:	b084      	sub	sp, #16
 8006876:	af00      	add	r7, sp, #0
 8006878:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800687e:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006880:	68f8      	ldr	r0, [r7, #12]
 8006882:	f7ff ffb5 	bl	80067f0 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006886:	bf00      	nop
 8006888:	3710      	adds	r7, #16
 800688a:	46bd      	mov	sp, r7
 800688c:	bd80      	pop	{r7, pc}

0800688e <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 800688e:	b580      	push	{r7, lr}
 8006890:	b084      	sub	sp, #16
 8006892:	af00      	add	r7, sp, #0
 8006894:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800689a:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 800689c:	6878      	ldr	r0, [r7, #4]
 800689e:	f7fb fac7 	bl	8001e30 <HAL_DMA_GetError>
 80068a2:	4603      	mov	r3, r0
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d011      	beq.n	80068cc <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 80068a8:	68f8      	ldr	r0, [r7, #12]
 80068aa:	f000 f82d 	bl	8006908 <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80068b4:	f043 0210 	orr.w	r2, r3, #16
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    hspi->State = HAL_SPI_STATE_READY;
 80068be:	68fb      	ldr	r3, [r7, #12]
 80068c0:	2201      	movs	r2, #1
 80068c2:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 80068c6:	68f8      	ldr	r0, [r7, #12]
 80068c8:	f7ff ff9c 	bl	8006804 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 80068cc:	bf00      	nop
 80068ce:	3710      	adds	r7, #16
 80068d0:	46bd      	mov	sp, r7
 80068d2:	bd80      	pop	{r7, pc}

080068d4 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 80068d4:	b580      	push	{r7, lr}
 80068d6:	b084      	sub	sp, #16
 80068d8:	af00      	add	r7, sp, #0
 80068da:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80068e0:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	2200      	movs	r2, #0
 80068e6:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
  hspi->TxXferCount = (uint16_t) 0UL;
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	2200      	movs	r2, #0
 80068ee:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 80068f2:	68fb      	ldr	r3, [r7, #12]
 80068f4:	2201      	movs	r2, #1
 80068f6:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 80068fa:	68f8      	ldr	r0, [r7, #12]
 80068fc:	f7ff ff82 	bl	8006804 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006900:	bf00      	nop
 8006902:	3710      	adds	r7, #16
 8006904:	46bd      	mov	sp, r7
 8006906:	bd80      	pop	{r7, pc}

08006908 <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 8006908:	b480      	push	{r7}
 800690a:	b085      	sub	sp, #20
 800690c:	af00      	add	r7, sp, #0
 800690e:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	695b      	ldr	r3, [r3, #20]
 8006916:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	681b      	ldr	r3, [r3, #0]
 800691c:	699a      	ldr	r2, [r3, #24]
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	f042 0208 	orr.w	r2, r2, #8
 8006926:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	699a      	ldr	r2, [r3, #24]
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	f042 0210 	orr.w	r2, r2, #16
 8006936:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	681a      	ldr	r2, [r3, #0]
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	f022 0201 	bic.w	r2, r2, #1
 8006946:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 8006948:	687b      	ldr	r3, [r7, #4]
 800694a:	681b      	ldr	r3, [r3, #0]
 800694c:	691b      	ldr	r3, [r3, #16]
 800694e:	687a      	ldr	r2, [r7, #4]
 8006950:	6812      	ldr	r2, [r2, #0]
 8006952:	f423 735b 	bic.w	r3, r3, #876	@ 0x36c
 8006956:	f023 0303 	bic.w	r3, r3, #3
 800695a:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	681b      	ldr	r3, [r3, #0]
 8006960:	689a      	ldr	r2, [r3, #8]
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800696a:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8006972:	b2db      	uxtb	r3, r3
 8006974:	2b04      	cmp	r3, #4
 8006976:	d014      	beq.n	80069a2 <SPI_CloseTransfer+0x9a>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	f003 0320 	and.w	r3, r3, #32
 800697e:	2b00      	cmp	r3, #0
 8006980:	d00f      	beq.n	80069a2 <SPI_CloseTransfer+0x9a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006988:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	699a      	ldr	r2, [r3, #24]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	f042 0220 	orr.w	r2, r2, #32
 80069a0:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 80069a8:	b2db      	uxtb	r3, r3
 80069aa:	2b03      	cmp	r3, #3
 80069ac:	d014      	beq.n	80069d8 <SPI_CloseTransfer+0xd0>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	d00f      	beq.n	80069d8 <SPI_CloseTransfer+0xd0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80069be:	f043 0204 	orr.w	r2, r3, #4
 80069c2:	687b      	ldr	r3, [r7, #4]
 80069c4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	699a      	ldr	r2, [r3, #24]
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069d6:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d00f      	beq.n	8006a02 <SPI_CloseTransfer+0xfa>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80069e8:	f043 0201 	orr.w	r2, r3, #1
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	699a      	ldr	r2, [r3, #24]
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006a00:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 8006a02:	68fb      	ldr	r3, [r7, #12]
 8006a04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d00f      	beq.n	8006a2c <SPI_CloseTransfer+0x124>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006a12:	f043 0208 	orr.w	r2, r3, #8
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	681b      	ldr	r3, [r3, #0]
 8006a20:	699a      	ldr	r2, [r3, #24]
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	681b      	ldr	r3, [r3, #0]
 8006a26:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006a2a:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	2200      	movs	r2, #0
 8006a30:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  hspi->RxXferCount = (uint16_t)0UL;
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	2200      	movs	r2, #0
 8006a38:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
}
 8006a3c:	bf00      	nop
 8006a3e:	3714      	adds	r7, #20
 8006a40:	46bd      	mov	sp, r7
 8006a42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a46:	4770      	bx	lr

08006a48 <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8006a48:	b580      	push	{r7, lr}
 8006a4a:	b084      	sub	sp, #16
 8006a4c:	af00      	add	r7, sp, #0
 8006a4e:	60f8      	str	r0, [r7, #12]
 8006a50:	60b9      	str	r1, [r7, #8]
 8006a52:	603b      	str	r3, [r7, #0]
 8006a54:	4613      	mov	r3, r2
 8006a56:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8006a58:	e010      	b.n	8006a7c <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006a5a:	f7fa fc5d 	bl	8001318 <HAL_GetTick>
 8006a5e:	4602      	mov	r2, r0
 8006a60:	69bb      	ldr	r3, [r7, #24]
 8006a62:	1ad3      	subs	r3, r2, r3
 8006a64:	683a      	ldr	r2, [r7, #0]
 8006a66:	429a      	cmp	r2, r3
 8006a68:	d803      	bhi.n	8006a72 <SPI_WaitOnFlagUntilTimeout+0x2a>
 8006a6a:	683b      	ldr	r3, [r7, #0]
 8006a6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a70:	d102      	bne.n	8006a78 <SPI_WaitOnFlagUntilTimeout+0x30>
 8006a72:	683b      	ldr	r3, [r7, #0]
 8006a74:	2b00      	cmp	r3, #0
 8006a76:	d101      	bne.n	8006a7c <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 8006a78:	2303      	movs	r3, #3
 8006a7a:	e00f      	b.n	8006a9c <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8006a7c:	68fb      	ldr	r3, [r7, #12]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	695a      	ldr	r2, [r3, #20]
 8006a82:	68bb      	ldr	r3, [r7, #8]
 8006a84:	4013      	ands	r3, r2
 8006a86:	68ba      	ldr	r2, [r7, #8]
 8006a88:	429a      	cmp	r2, r3
 8006a8a:	bf0c      	ite	eq
 8006a8c:	2301      	moveq	r3, #1
 8006a8e:	2300      	movne	r3, #0
 8006a90:	b2db      	uxtb	r3, r3
 8006a92:	461a      	mov	r2, r3
 8006a94:	79fb      	ldrb	r3, [r7, #7]
 8006a96:	429a      	cmp	r2, r3
 8006a98:	d0df      	beq.n	8006a5a <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 8006a9a:	2300      	movs	r3, #0
}
 8006a9c:	4618      	mov	r0, r3
 8006a9e:	3710      	adds	r7, #16
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}

08006aa4 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 8006aa4:	b480      	push	{r7}
 8006aa6:	b085      	sub	sp, #20
 8006aa8:	af00      	add	r7, sp, #0
 8006aaa:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006ab0:	095b      	lsrs	r3, r3, #5
 8006ab2:	3301      	adds	r3, #1
 8006ab4:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	68db      	ldr	r3, [r3, #12]
 8006aba:	3301      	adds	r3, #1
 8006abc:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 8006abe:	68bb      	ldr	r3, [r7, #8]
 8006ac0:	3307      	adds	r3, #7
 8006ac2:	08db      	lsrs	r3, r3, #3
 8006ac4:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 8006ac6:	68bb      	ldr	r3, [r7, #8]
 8006ac8:	68fa      	ldr	r2, [r7, #12]
 8006aca:	fb02 f303 	mul.w	r3, r2, r3
}
 8006ace:	4618      	mov	r0, r3
 8006ad0:	3714      	adds	r7, #20
 8006ad2:	46bd      	mov	sp, r7
 8006ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ad8:	4770      	bx	lr

08006ada <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006ada:	b580      	push	{r7, lr}
 8006adc:	b082      	sub	sp, #8
 8006ade:	af00      	add	r7, sp, #0
 8006ae0:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	2b00      	cmp	r3, #0
 8006ae6:	d101      	bne.n	8006aec <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006ae8:	2301      	movs	r3, #1
 8006aea:	e049      	b.n	8006b80 <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006af2:	b2db      	uxtb	r3, r3
 8006af4:	2b00      	cmp	r3, #0
 8006af6:	d106      	bne.n	8006b06 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	2200      	movs	r2, #0
 8006afc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006b00:	6878      	ldr	r0, [r7, #4]
 8006b02:	f7fa f96d 	bl	8000de0 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	2202      	movs	r2, #2
 8006b0a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	681a      	ldr	r2, [r3, #0]
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	3304      	adds	r3, #4
 8006b16:	4619      	mov	r1, r3
 8006b18:	4610      	mov	r0, r2
 8006b1a:	f000 fb79 	bl	8007210 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	2201      	movs	r2, #1
 8006b22:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	2201      	movs	r2, #1
 8006b2a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	2201      	movs	r2, #1
 8006b32:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	2201      	movs	r2, #1
 8006b3a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	2201      	movs	r2, #1
 8006b42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	2201      	movs	r2, #1
 8006b4a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	2201      	movs	r2, #1
 8006b52:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006b56:	687b      	ldr	r3, [r7, #4]
 8006b58:	2201      	movs	r2, #1
 8006b5a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	2201      	movs	r2, #1
 8006b62:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	2201      	movs	r2, #1
 8006b6a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	2201      	movs	r2, #1
 8006b72:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	2201      	movs	r2, #1
 8006b7a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006b7e:	2300      	movs	r3, #0
}
 8006b80:	4618      	mov	r0, r3
 8006b82:	3708      	adds	r7, #8
 8006b84:	46bd      	mov	sp, r7
 8006b86:	bd80      	pop	{r7, pc}

08006b88 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8006b88:	b480      	push	{r7}
 8006b8a:	b085      	sub	sp, #20
 8006b8c:	af00      	add	r7, sp, #0
 8006b8e:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b96:	b2db      	uxtb	r3, r3
 8006b98:	2b01      	cmp	r3, #1
 8006b9a:	d001      	beq.n	8006ba0 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006b9c:	2301      	movs	r3, #1
 8006b9e:	e07c      	b.n	8006c9a <HAL_TIM_Base_Start_IT+0x112>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	2202      	movs	r2, #2
 8006ba4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	68da      	ldr	r2, [r3, #12]
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	f042 0201 	orr.w	r2, r2, #1
 8006bb6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	4a3a      	ldr	r2, [pc, #232]	@ (8006ca8 <HAL_TIM_Base_Start_IT+0x120>)
 8006bbe:	4293      	cmp	r3, r2
 8006bc0:	d04a      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	681b      	ldr	r3, [r3, #0]
 8006bc6:	4a39      	ldr	r2, [pc, #228]	@ (8006cac <HAL_TIM_Base_Start_IT+0x124>)
 8006bc8:	4293      	cmp	r3, r2
 8006bca:	d045      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	681b      	ldr	r3, [r3, #0]
 8006bd0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006bd4:	d040      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006bde:	d03b      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	4a32      	ldr	r2, [pc, #200]	@ (8006cb0 <HAL_TIM_Base_Start_IT+0x128>)
 8006be6:	4293      	cmp	r3, r2
 8006be8:	d036      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	4a31      	ldr	r2, [pc, #196]	@ (8006cb4 <HAL_TIM_Base_Start_IT+0x12c>)
 8006bf0:	4293      	cmp	r3, r2
 8006bf2:	d031      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	4a2f      	ldr	r2, [pc, #188]	@ (8006cb8 <HAL_TIM_Base_Start_IT+0x130>)
 8006bfa:	4293      	cmp	r3, r2
 8006bfc:	d02c      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	4a2e      	ldr	r2, [pc, #184]	@ (8006cbc <HAL_TIM_Base_Start_IT+0x134>)
 8006c04:	4293      	cmp	r3, r2
 8006c06:	d027      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	4a2c      	ldr	r2, [pc, #176]	@ (8006cc0 <HAL_TIM_Base_Start_IT+0x138>)
 8006c0e:	4293      	cmp	r3, r2
 8006c10:	d022      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	681b      	ldr	r3, [r3, #0]
 8006c16:	4a2b      	ldr	r2, [pc, #172]	@ (8006cc4 <HAL_TIM_Base_Start_IT+0x13c>)
 8006c18:	4293      	cmp	r3, r2
 8006c1a:	d01d      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	4a29      	ldr	r2, [pc, #164]	@ (8006cc8 <HAL_TIM_Base_Start_IT+0x140>)
 8006c22:	4293      	cmp	r3, r2
 8006c24:	d018      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	4a28      	ldr	r2, [pc, #160]	@ (8006ccc <HAL_TIM_Base_Start_IT+0x144>)
 8006c2c:	4293      	cmp	r3, r2
 8006c2e:	d013      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	4a26      	ldr	r2, [pc, #152]	@ (8006cd0 <HAL_TIM_Base_Start_IT+0x148>)
 8006c36:	4293      	cmp	r3, r2
 8006c38:	d00e      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	681b      	ldr	r3, [r3, #0]
 8006c3e:	4a25      	ldr	r2, [pc, #148]	@ (8006cd4 <HAL_TIM_Base_Start_IT+0x14c>)
 8006c40:	4293      	cmp	r3, r2
 8006c42:	d009      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	681b      	ldr	r3, [r3, #0]
 8006c48:	4a23      	ldr	r2, [pc, #140]	@ (8006cd8 <HAL_TIM_Base_Start_IT+0x150>)
 8006c4a:	4293      	cmp	r3, r2
 8006c4c:	d004      	beq.n	8006c58 <HAL_TIM_Base_Start_IT+0xd0>
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	681b      	ldr	r3, [r3, #0]
 8006c52:	4a22      	ldr	r2, [pc, #136]	@ (8006cdc <HAL_TIM_Base_Start_IT+0x154>)
 8006c54:	4293      	cmp	r3, r2
 8006c56:	d115      	bne.n	8006c84 <HAL_TIM_Base_Start_IT+0xfc>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	689a      	ldr	r2, [r3, #8]
 8006c5e:	4b20      	ldr	r3, [pc, #128]	@ (8006ce0 <HAL_TIM_Base_Start_IT+0x158>)
 8006c60:	4013      	ands	r3, r2
 8006c62:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006c64:	68fb      	ldr	r3, [r7, #12]
 8006c66:	2b06      	cmp	r3, #6
 8006c68:	d015      	beq.n	8006c96 <HAL_TIM_Base_Start_IT+0x10e>
 8006c6a:	68fb      	ldr	r3, [r7, #12]
 8006c6c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006c70:	d011      	beq.n	8006c96 <HAL_TIM_Base_Start_IT+0x10e>
    {
      __HAL_TIM_ENABLE(htim);
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	681b      	ldr	r3, [r3, #0]
 8006c76:	681a      	ldr	r2, [r3, #0]
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	f042 0201 	orr.w	r2, r2, #1
 8006c80:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006c82:	e008      	b.n	8006c96 <HAL_TIM_Base_Start_IT+0x10e>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	681a      	ldr	r2, [r3, #0]
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	f042 0201 	orr.w	r2, r2, #1
 8006c92:	601a      	str	r2, [r3, #0]
 8006c94:	e000      	b.n	8006c98 <HAL_TIM_Base_Start_IT+0x110>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006c96:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 8006c98:	2300      	movs	r3, #0
}
 8006c9a:	4618      	mov	r0, r3
 8006c9c:	3714      	adds	r7, #20
 8006c9e:	46bd      	mov	sp, r7
 8006ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ca4:	4770      	bx	lr
 8006ca6:	bf00      	nop
 8006ca8:	40012c00 	.word	0x40012c00
 8006cac:	50012c00 	.word	0x50012c00
 8006cb0:	40000400 	.word	0x40000400
 8006cb4:	50000400 	.word	0x50000400
 8006cb8:	40000800 	.word	0x40000800
 8006cbc:	50000800 	.word	0x50000800
 8006cc0:	40000c00 	.word	0x40000c00
 8006cc4:	50000c00 	.word	0x50000c00
 8006cc8:	40013400 	.word	0x40013400
 8006ccc:	50013400 	.word	0x50013400
 8006cd0:	40001800 	.word	0x40001800
 8006cd4:	50001800 	.word	0x50001800
 8006cd8:	40014000 	.word	0x40014000
 8006cdc:	50014000 	.word	0x50014000
 8006ce0:	00010007 	.word	0x00010007

08006ce4 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006ce4:	b580      	push	{r7, lr}
 8006ce6:	b084      	sub	sp, #16
 8006ce8:	af00      	add	r7, sp, #0
 8006cea:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	68db      	ldr	r3, [r3, #12]
 8006cf2:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	691b      	ldr	r3, [r3, #16]
 8006cfa:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006cfc:	68bb      	ldr	r3, [r7, #8]
 8006cfe:	f003 0302 	and.w	r3, r3, #2
 8006d02:	2b00      	cmp	r3, #0
 8006d04:	d020      	beq.n	8006d48 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006d06:	68fb      	ldr	r3, [r7, #12]
 8006d08:	f003 0302 	and.w	r3, r3, #2
 8006d0c:	2b00      	cmp	r3, #0
 8006d0e:	d01b      	beq.n	8006d48 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	681b      	ldr	r3, [r3, #0]
 8006d14:	f06f 0202 	mvn.w	r2, #2
 8006d18:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	2201      	movs	r2, #1
 8006d1e:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	681b      	ldr	r3, [r3, #0]
 8006d24:	699b      	ldr	r3, [r3, #24]
 8006d26:	f003 0303 	and.w	r3, r3, #3
 8006d2a:	2b00      	cmp	r3, #0
 8006d2c:	d003      	beq.n	8006d36 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006d2e:	6878      	ldr	r0, [r7, #4]
 8006d30:	f000 fa50 	bl	80071d4 <HAL_TIM_IC_CaptureCallback>
 8006d34:	e005      	b.n	8006d42 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d36:	6878      	ldr	r0, [r7, #4]
 8006d38:	f000 fa42 	bl	80071c0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d3c:	6878      	ldr	r0, [r7, #4]
 8006d3e:	f000 fa53 	bl	80071e8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2200      	movs	r2, #0
 8006d46:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006d48:	68bb      	ldr	r3, [r7, #8]
 8006d4a:	f003 0304 	and.w	r3, r3, #4
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d020      	beq.n	8006d94 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	f003 0304 	and.w	r3, r3, #4
 8006d58:	2b00      	cmp	r3, #0
 8006d5a:	d01b      	beq.n	8006d94 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	681b      	ldr	r3, [r3, #0]
 8006d60:	f06f 0204 	mvn.w	r2, #4
 8006d64:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	2202      	movs	r2, #2
 8006d6a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	681b      	ldr	r3, [r3, #0]
 8006d70:	699b      	ldr	r3, [r3, #24]
 8006d72:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	d003      	beq.n	8006d82 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006d7a:	6878      	ldr	r0, [r7, #4]
 8006d7c:	f000 fa2a 	bl	80071d4 <HAL_TIM_IC_CaptureCallback>
 8006d80:	e005      	b.n	8006d8e <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d82:	6878      	ldr	r0, [r7, #4]
 8006d84:	f000 fa1c 	bl	80071c0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d88:	6878      	ldr	r0, [r7, #4]
 8006d8a:	f000 fa2d 	bl	80071e8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d8e:	687b      	ldr	r3, [r7, #4]
 8006d90:	2200      	movs	r2, #0
 8006d92:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006d94:	68bb      	ldr	r3, [r7, #8]
 8006d96:	f003 0308 	and.w	r3, r3, #8
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d020      	beq.n	8006de0 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	f003 0308 	and.w	r3, r3, #8
 8006da4:	2b00      	cmp	r3, #0
 8006da6:	d01b      	beq.n	8006de0 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	f06f 0208 	mvn.w	r2, #8
 8006db0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	2204      	movs	r2, #4
 8006db6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	69db      	ldr	r3, [r3, #28]
 8006dbe:	f003 0303 	and.w	r3, r3, #3
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d003      	beq.n	8006dce <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006dc6:	6878      	ldr	r0, [r7, #4]
 8006dc8:	f000 fa04 	bl	80071d4 <HAL_TIM_IC_CaptureCallback>
 8006dcc:	e005      	b.n	8006dda <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006dce:	6878      	ldr	r0, [r7, #4]
 8006dd0:	f000 f9f6 	bl	80071c0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006dd4:	6878      	ldr	r0, [r7, #4]
 8006dd6:	f000 fa07 	bl	80071e8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	2200      	movs	r2, #0
 8006dde:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006de0:	68bb      	ldr	r3, [r7, #8]
 8006de2:	f003 0310 	and.w	r3, r3, #16
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	d020      	beq.n	8006e2c <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006dea:	68fb      	ldr	r3, [r7, #12]
 8006dec:	f003 0310 	and.w	r3, r3, #16
 8006df0:	2b00      	cmp	r3, #0
 8006df2:	d01b      	beq.n	8006e2c <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	f06f 0210 	mvn.w	r2, #16
 8006dfc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	2208      	movs	r2, #8
 8006e02:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	69db      	ldr	r3, [r3, #28]
 8006e0a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e0e:	2b00      	cmp	r3, #0
 8006e10:	d003      	beq.n	8006e1a <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006e12:	6878      	ldr	r0, [r7, #4]
 8006e14:	f000 f9de 	bl	80071d4 <HAL_TIM_IC_CaptureCallback>
 8006e18:	e005      	b.n	8006e26 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e1a:	6878      	ldr	r0, [r7, #4]
 8006e1c:	f000 f9d0 	bl	80071c0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e20:	6878      	ldr	r0, [r7, #4]
 8006e22:	f000 f9e1 	bl	80071e8 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	2200      	movs	r2, #0
 8006e2a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006e2c:	68bb      	ldr	r3, [r7, #8]
 8006e2e:	f003 0301 	and.w	r3, r3, #1
 8006e32:	2b00      	cmp	r3, #0
 8006e34:	d00c      	beq.n	8006e50 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006e36:	68fb      	ldr	r3, [r7, #12]
 8006e38:	f003 0301 	and.w	r3, r3, #1
 8006e3c:	2b00      	cmp	r3, #0
 8006e3e:	d007      	beq.n	8006e50 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	681b      	ldr	r3, [r3, #0]
 8006e44:	f06f 0201 	mvn.w	r2, #1
 8006e48:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006e4a:	6878      	ldr	r0, [r7, #4]
 8006e4c:	f7f9 fe9a 	bl	8000b84 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8006e50:	68bb      	ldr	r3, [r7, #8]
 8006e52:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006e56:	2b00      	cmp	r3, #0
 8006e58:	d104      	bne.n	8006e64 <HAL_TIM_IRQHandler+0x180>
      ((itflag & (TIM_FLAG_SYSTEM_BREAK)) == (TIM_FLAG_SYSTEM_BREAK)))
 8006e5a:	68bb      	ldr	r3, [r7, #8]
 8006e5c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8006e60:	2b00      	cmp	r3, #0
 8006e62:	d00c      	beq.n	8006e7e <HAL_TIM_IRQHandler+0x19a>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006e64:	68fb      	ldr	r3, [r7, #12]
 8006e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d007      	beq.n	8006e7e <HAL_TIM_IRQHandler+0x19a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8006e76:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006e78:	6878      	ldr	r0, [r7, #4]
 8006e7a:	f000 fc69 	bl	8007750 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8006e7e:	68bb      	ldr	r3, [r7, #8]
 8006e80:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d00c      	beq.n	8006ea2 <HAL_TIM_IRQHandler+0x1be>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d007      	beq.n	8006ea2 <HAL_TIM_IRQHandler+0x1be>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8006e9a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8006e9c:	6878      	ldr	r0, [r7, #4]
 8006e9e:	f000 fc61 	bl	8007764 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006ea2:	68bb      	ldr	r3, [r7, #8]
 8006ea4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	d00c      	beq.n	8006ec6 <HAL_TIM_IRQHandler+0x1e2>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006eac:	68fb      	ldr	r3, [r7, #12]
 8006eae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	d007      	beq.n	8006ec6 <HAL_TIM_IRQHandler+0x1e2>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	681b      	ldr	r3, [r3, #0]
 8006eba:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006ebe:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006ec0:	6878      	ldr	r0, [r7, #4]
 8006ec2:	f000 f99b 	bl	80071fc <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006ec6:	68bb      	ldr	r3, [r7, #8]
 8006ec8:	f003 0320 	and.w	r3, r3, #32
 8006ecc:	2b00      	cmp	r3, #0
 8006ece:	d00c      	beq.n	8006eea <HAL_TIM_IRQHandler+0x206>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006ed0:	68fb      	ldr	r3, [r7, #12]
 8006ed2:	f003 0320 	and.w	r3, r3, #32
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d007      	beq.n	8006eea <HAL_TIM_IRQHandler+0x206>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	f06f 0220 	mvn.w	r2, #32
 8006ee2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006ee4:	6878      	ldr	r0, [r7, #4]
 8006ee6:	f000 fc29 	bl	800773c <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Encoder index event */
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8006eea:	68bb      	ldr	r3, [r7, #8]
 8006eec:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006ef0:	2b00      	cmp	r3, #0
 8006ef2:	d00c      	beq.n	8006f0e <HAL_TIM_IRQHandler+0x22a>
  {
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8006ef4:	68fb      	ldr	r3, [r7, #12]
 8006ef6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006efa:	2b00      	cmp	r3, #0
 8006efc:	d007      	beq.n	8006f0e <HAL_TIM_IRQHandler+0x22a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8006f06:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->EncoderIndexCallback(htim);
#else
      HAL_TIMEx_EncoderIndexCallback(htim);
 8006f08:	6878      	ldr	r0, [r7, #4]
 8006f0a:	f000 fc35 	bl	8007778 <HAL_TIMEx_EncoderIndexCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Direction change event */
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8006f0e:	68bb      	ldr	r3, [r7, #8]
 8006f10:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	d00c      	beq.n	8006f32 <HAL_TIM_IRQHandler+0x24e>
  {
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006f1e:	2b00      	cmp	r3, #0
 8006f20:	d007      	beq.n	8006f32 <HAL_TIM_IRQHandler+0x24e>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	681b      	ldr	r3, [r3, #0]
 8006f26:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8006f2a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->DirectionChangeCallback(htim);
#else
      HAL_TIMEx_DirectionChangeCallback(htim);
 8006f2c:	6878      	ldr	r0, [r7, #4]
 8006f2e:	f000 fc2d 	bl	800778c <HAL_TIMEx_DirectionChangeCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Index error event */
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8006f32:	68bb      	ldr	r3, [r7, #8]
 8006f34:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f38:	2b00      	cmp	r3, #0
 8006f3a:	d00c      	beq.n	8006f56 <HAL_TIM_IRQHandler+0x272>
  {
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8006f3c:	68fb      	ldr	r3, [r7, #12]
 8006f3e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d007      	beq.n	8006f56 <HAL_TIM_IRQHandler+0x272>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8006f4e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->IndexErrorCallback(htim);
#else
      HAL_TIMEx_IndexErrorCallback(htim);
 8006f50:	6878      	ldr	r0, [r7, #4]
 8006f52:	f000 fc25 	bl	80077a0 <HAL_TIMEx_IndexErrorCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Transition error event */
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8006f56:	68bb      	ldr	r3, [r7, #8]
 8006f58:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006f5c:	2b00      	cmp	r3, #0
 8006f5e:	d00c      	beq.n	8006f7a <HAL_TIM_IRQHandler+0x296>
  {
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8006f60:	68fb      	ldr	r3, [r7, #12]
 8006f62:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	d007      	beq.n	8006f7a <HAL_TIM_IRQHandler+0x296>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	681b      	ldr	r3, [r3, #0]
 8006f6e:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8006f72:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TransitionErrorCallback(htim);
#else
      HAL_TIMEx_TransitionErrorCallback(htim);
 8006f74:	6878      	ldr	r0, [r7, #4]
 8006f76:	f000 fc1d 	bl	80077b4 <HAL_TIMEx_TransitionErrorCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006f7a:	bf00      	nop
 8006f7c:	3710      	adds	r7, #16
 8006f7e:	46bd      	mov	sp, r7
 8006f80:	bd80      	pop	{r7, pc}
	...

08006f84 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8006f84:	b580      	push	{r7, lr}
 8006f86:	b084      	sub	sp, #16
 8006f88:	af00      	add	r7, sp, #0
 8006f8a:	6078      	str	r0, [r7, #4]
 8006f8c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8006f8e:	2300      	movs	r3, #0
 8006f90:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006f98:	2b01      	cmp	r3, #1
 8006f9a:	d101      	bne.n	8006fa0 <HAL_TIM_ConfigClockSource+0x1c>
 8006f9c:	2302      	movs	r3, #2
 8006f9e:	e0fe      	b.n	800719e <HAL_TIM_ConfigClockSource+0x21a>
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	2201      	movs	r2, #1
 8006fa4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	2202      	movs	r2, #2
 8006fac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	681b      	ldr	r3, [r3, #0]
 8006fb4:	689b      	ldr	r3, [r3, #8]
 8006fb6:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8006fb8:	68bb      	ldr	r3, [r7, #8]
 8006fba:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 8006fbe:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8006fc2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006fc4:	68bb      	ldr	r3, [r7, #8]
 8006fc6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006fca:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	681b      	ldr	r3, [r3, #0]
 8006fd0:	68ba      	ldr	r2, [r7, #8]
 8006fd2:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8006fd4:	683b      	ldr	r3, [r7, #0]
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8006fdc:	f000 80c9 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8006fe0:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8006fe4:	f200 80ce 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8006fe8:	4a6f      	ldr	r2, [pc, #444]	@ (80071a8 <HAL_TIM_ConfigClockSource+0x224>)
 8006fea:	4293      	cmp	r3, r2
 8006fec:	f000 80c1 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8006ff0:	4a6d      	ldr	r2, [pc, #436]	@ (80071a8 <HAL_TIM_ConfigClockSource+0x224>)
 8006ff2:	4293      	cmp	r3, r2
 8006ff4:	f200 80c6 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8006ff8:	4a6c      	ldr	r2, [pc, #432]	@ (80071ac <HAL_TIM_ConfigClockSource+0x228>)
 8006ffa:	4293      	cmp	r3, r2
 8006ffc:	f000 80b9 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007000:	4a6a      	ldr	r2, [pc, #424]	@ (80071ac <HAL_TIM_ConfigClockSource+0x228>)
 8007002:	4293      	cmp	r3, r2
 8007004:	f200 80be 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007008:	4a69      	ldr	r2, [pc, #420]	@ (80071b0 <HAL_TIM_ConfigClockSource+0x22c>)
 800700a:	4293      	cmp	r3, r2
 800700c:	f000 80b1 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007010:	4a67      	ldr	r2, [pc, #412]	@ (80071b0 <HAL_TIM_ConfigClockSource+0x22c>)
 8007012:	4293      	cmp	r3, r2
 8007014:	f200 80b6 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007018:	4a66      	ldr	r2, [pc, #408]	@ (80071b4 <HAL_TIM_ConfigClockSource+0x230>)
 800701a:	4293      	cmp	r3, r2
 800701c:	f000 80a9 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007020:	4a64      	ldr	r2, [pc, #400]	@ (80071b4 <HAL_TIM_ConfigClockSource+0x230>)
 8007022:	4293      	cmp	r3, r2
 8007024:	f200 80ae 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007028:	4a63      	ldr	r2, [pc, #396]	@ (80071b8 <HAL_TIM_ConfigClockSource+0x234>)
 800702a:	4293      	cmp	r3, r2
 800702c:	f000 80a1 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007030:	4a61      	ldr	r2, [pc, #388]	@ (80071b8 <HAL_TIM_ConfigClockSource+0x234>)
 8007032:	4293      	cmp	r3, r2
 8007034:	f200 80a6 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007038:	4a60      	ldr	r2, [pc, #384]	@ (80071bc <HAL_TIM_ConfigClockSource+0x238>)
 800703a:	4293      	cmp	r3, r2
 800703c:	f000 8099 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007040:	4a5e      	ldr	r2, [pc, #376]	@ (80071bc <HAL_TIM_ConfigClockSource+0x238>)
 8007042:	4293      	cmp	r3, r2
 8007044:	f200 809e 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007048:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 800704c:	f000 8091 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007050:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8007054:	f200 8096 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007058:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800705c:	f000 8089 	beq.w	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 8007060:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007064:	f200 808e 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007068:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800706c:	d03e      	beq.n	80070ec <HAL_TIM_ConfigClockSource+0x168>
 800706e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007072:	f200 8087 	bhi.w	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007076:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800707a:	f000 8086 	beq.w	800718a <HAL_TIM_ConfigClockSource+0x206>
 800707e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007082:	d87f      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007084:	2b70      	cmp	r3, #112	@ 0x70
 8007086:	d01a      	beq.n	80070be <HAL_TIM_ConfigClockSource+0x13a>
 8007088:	2b70      	cmp	r3, #112	@ 0x70
 800708a:	d87b      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 800708c:	2b60      	cmp	r3, #96	@ 0x60
 800708e:	d050      	beq.n	8007132 <HAL_TIM_ConfigClockSource+0x1ae>
 8007090:	2b60      	cmp	r3, #96	@ 0x60
 8007092:	d877      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 8007094:	2b50      	cmp	r3, #80	@ 0x50
 8007096:	d03c      	beq.n	8007112 <HAL_TIM_ConfigClockSource+0x18e>
 8007098:	2b50      	cmp	r3, #80	@ 0x50
 800709a:	d873      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 800709c:	2b40      	cmp	r3, #64	@ 0x40
 800709e:	d058      	beq.n	8007152 <HAL_TIM_ConfigClockSource+0x1ce>
 80070a0:	2b40      	cmp	r3, #64	@ 0x40
 80070a2:	d86f      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 80070a4:	2b30      	cmp	r3, #48	@ 0x30
 80070a6:	d064      	beq.n	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 80070a8:	2b30      	cmp	r3, #48	@ 0x30
 80070aa:	d86b      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 80070ac:	2b20      	cmp	r3, #32
 80070ae:	d060      	beq.n	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 80070b0:	2b20      	cmp	r3, #32
 80070b2:	d867      	bhi.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
 80070b4:	2b00      	cmp	r3, #0
 80070b6:	d05c      	beq.n	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 80070b8:	2b10      	cmp	r3, #16
 80070ba:	d05a      	beq.n	8007172 <HAL_TIM_ConfigClockSource+0x1ee>
 80070bc:	e062      	b.n	8007184 <HAL_TIM_ConfigClockSource+0x200>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80070c2:	683b      	ldr	r3, [r7, #0]
 80070c4:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80070c6:	683b      	ldr	r3, [r7, #0]
 80070c8:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80070ca:	683b      	ldr	r3, [r7, #0]
 80070cc:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80070ce:	f000 fa45 	bl	800755c <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	689b      	ldr	r3, [r3, #8]
 80070d8:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80070da:	68bb      	ldr	r3, [r7, #8]
 80070dc:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80070e0:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	68ba      	ldr	r2, [r7, #8]
 80070e8:	609a      	str	r2, [r3, #8]
      break;
 80070ea:	e04f      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80070f0:	683b      	ldr	r3, [r7, #0]
 80070f2:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80070f4:	683b      	ldr	r3, [r7, #0]
 80070f6:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80070f8:	683b      	ldr	r3, [r7, #0]
 80070fa:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80070fc:	f000 fa2e 	bl	800755c <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	689a      	ldr	r2, [r3, #8]
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800710e:	609a      	str	r2, [r3, #8]
      break;
 8007110:	e03c      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007116:	683b      	ldr	r3, [r7, #0]
 8007118:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800711a:	683b      	ldr	r3, [r7, #0]
 800711c:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800711e:	461a      	mov	r2, r3
 8007120:	f000 f9a0 	bl	8007464 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	2150      	movs	r1, #80	@ 0x50
 800712a:	4618      	mov	r0, r3
 800712c:	f000 f9f9 	bl	8007522 <TIM_ITRx_SetConfig>
      break;
 8007130:	e02c      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007136:	683b      	ldr	r3, [r7, #0]
 8007138:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800713a:	683b      	ldr	r3, [r7, #0]
 800713c:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800713e:	461a      	mov	r2, r3
 8007140:	f000 f9bf 	bl	80074c2 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	681b      	ldr	r3, [r3, #0]
 8007148:	2160      	movs	r1, #96	@ 0x60
 800714a:	4618      	mov	r0, r3
 800714c:	f000 f9e9 	bl	8007522 <TIM_ITRx_SetConfig>
      break;
 8007150:	e01c      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007156:	683b      	ldr	r3, [r7, #0]
 8007158:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800715a:	683b      	ldr	r3, [r7, #0]
 800715c:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800715e:	461a      	mov	r2, r3
 8007160:	f000 f980 	bl	8007464 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	2140      	movs	r1, #64	@ 0x40
 800716a:	4618      	mov	r0, r3
 800716c:	f000 f9d9 	bl	8007522 <TIM_ITRx_SetConfig>
      break;
 8007170:	e00c      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>
    case TIM_CLOCKSOURCE_ITR12:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_INSTANCE((htim->Instance), sClockSourceConfig->ClockSource));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	681a      	ldr	r2, [r3, #0]
 8007176:	683b      	ldr	r3, [r7, #0]
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	4619      	mov	r1, r3
 800717c:	4610      	mov	r0, r2
 800717e:	f000 f9d0 	bl	8007522 <TIM_ITRx_SetConfig>
      break;
 8007182:	e003      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>
    }

    default:
      status = HAL_ERROR;
 8007184:	2301      	movs	r3, #1
 8007186:	73fb      	strb	r3, [r7, #15]
      break;
 8007188:	e000      	b.n	800718c <HAL_TIM_ConfigClockSource+0x208>
      break;
 800718a:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	2201      	movs	r2, #1
 8007190:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007194:	687b      	ldr	r3, [r7, #4]
 8007196:	2200      	movs	r2, #0
 8007198:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 800719c:	7bfb      	ldrb	r3, [r7, #15]
}
 800719e:	4618      	mov	r0, r3
 80071a0:	3710      	adds	r7, #16
 80071a2:	46bd      	mov	sp, r7
 80071a4:	bd80      	pop	{r7, pc}
 80071a6:	bf00      	nop
 80071a8:	00100070 	.word	0x00100070
 80071ac:	00100060 	.word	0x00100060
 80071b0:	00100050 	.word	0x00100050
 80071b4:	00100040 	.word	0x00100040
 80071b8:	00100030 	.word	0x00100030
 80071bc:	00100020 	.word	0x00100020

080071c0 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80071c0:	b480      	push	{r7}
 80071c2:	b083      	sub	sp, #12
 80071c4:	af00      	add	r7, sp, #0
 80071c6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80071c8:	bf00      	nop
 80071ca:	370c      	adds	r7, #12
 80071cc:	46bd      	mov	sp, r7
 80071ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071d2:	4770      	bx	lr

080071d4 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80071d4:	b480      	push	{r7}
 80071d6:	b083      	sub	sp, #12
 80071d8:	af00      	add	r7, sp, #0
 80071da:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80071dc:	bf00      	nop
 80071de:	370c      	adds	r7, #12
 80071e0:	46bd      	mov	sp, r7
 80071e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e6:	4770      	bx	lr

080071e8 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80071e8:	b480      	push	{r7}
 80071ea:	b083      	sub	sp, #12
 80071ec:	af00      	add	r7, sp, #0
 80071ee:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80071f0:	bf00      	nop
 80071f2:	370c      	adds	r7, #12
 80071f4:	46bd      	mov	sp, r7
 80071f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071fa:	4770      	bx	lr

080071fc <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80071fc:	b480      	push	{r7}
 80071fe:	b083      	sub	sp, #12
 8007200:	af00      	add	r7, sp, #0
 8007202:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007204:	bf00      	nop
 8007206:	370c      	adds	r7, #12
 8007208:	46bd      	mov	sp, r7
 800720a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800720e:	4770      	bx	lr

08007210 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007210:	b480      	push	{r7}
 8007212:	b085      	sub	sp, #20
 8007214:	af00      	add	r7, sp, #0
 8007216:	6078      	str	r0, [r7, #4]
 8007218:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	4a7a      	ldr	r2, [pc, #488]	@ (800740c <TIM_Base_SetConfig+0x1fc>)
 8007224:	4293      	cmp	r3, r2
 8007226:	d02b      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	4a79      	ldr	r2, [pc, #484]	@ (8007410 <TIM_Base_SetConfig+0x200>)
 800722c:	4293      	cmp	r3, r2
 800722e:	d027      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007236:	d023      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800723e:	d01f      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	4a74      	ldr	r2, [pc, #464]	@ (8007414 <TIM_Base_SetConfig+0x204>)
 8007244:	4293      	cmp	r3, r2
 8007246:	d01b      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	4a73      	ldr	r2, [pc, #460]	@ (8007418 <TIM_Base_SetConfig+0x208>)
 800724c:	4293      	cmp	r3, r2
 800724e:	d017      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007250:	687b      	ldr	r3, [r7, #4]
 8007252:	4a72      	ldr	r2, [pc, #456]	@ (800741c <TIM_Base_SetConfig+0x20c>)
 8007254:	4293      	cmp	r3, r2
 8007256:	d013      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	4a71      	ldr	r2, [pc, #452]	@ (8007420 <TIM_Base_SetConfig+0x210>)
 800725c:	4293      	cmp	r3, r2
 800725e:	d00f      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	4a70      	ldr	r2, [pc, #448]	@ (8007424 <TIM_Base_SetConfig+0x214>)
 8007264:	4293      	cmp	r3, r2
 8007266:	d00b      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	4a6f      	ldr	r2, [pc, #444]	@ (8007428 <TIM_Base_SetConfig+0x218>)
 800726c:	4293      	cmp	r3, r2
 800726e:	d007      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	4a6e      	ldr	r2, [pc, #440]	@ (800742c <TIM_Base_SetConfig+0x21c>)
 8007274:	4293      	cmp	r3, r2
 8007276:	d003      	beq.n	8007280 <TIM_Base_SetConfig+0x70>
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	4a6d      	ldr	r2, [pc, #436]	@ (8007430 <TIM_Base_SetConfig+0x220>)
 800727c:	4293      	cmp	r3, r2
 800727e:	d108      	bne.n	8007292 <TIM_Base_SetConfig+0x82>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007280:	68fb      	ldr	r3, [r7, #12]
 8007282:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007286:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007288:	683b      	ldr	r3, [r7, #0]
 800728a:	685b      	ldr	r3, [r3, #4]
 800728c:	68fa      	ldr	r2, [r7, #12]
 800728e:	4313      	orrs	r3, r2
 8007290:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	4a5d      	ldr	r2, [pc, #372]	@ (800740c <TIM_Base_SetConfig+0x1fc>)
 8007296:	4293      	cmp	r3, r2
 8007298:	d05b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	4a5c      	ldr	r2, [pc, #368]	@ (8007410 <TIM_Base_SetConfig+0x200>)
 800729e:	4293      	cmp	r3, r2
 80072a0:	d057      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80072a8:	d053      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80072b0:	d04f      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	4a57      	ldr	r2, [pc, #348]	@ (8007414 <TIM_Base_SetConfig+0x204>)
 80072b6:	4293      	cmp	r3, r2
 80072b8:	d04b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	4a56      	ldr	r2, [pc, #344]	@ (8007418 <TIM_Base_SetConfig+0x208>)
 80072be:	4293      	cmp	r3, r2
 80072c0:	d047      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	4a55      	ldr	r2, [pc, #340]	@ (800741c <TIM_Base_SetConfig+0x20c>)
 80072c6:	4293      	cmp	r3, r2
 80072c8:	d043      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072ca:	687b      	ldr	r3, [r7, #4]
 80072cc:	4a54      	ldr	r2, [pc, #336]	@ (8007420 <TIM_Base_SetConfig+0x210>)
 80072ce:	4293      	cmp	r3, r2
 80072d0:	d03f      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	4a53      	ldr	r2, [pc, #332]	@ (8007424 <TIM_Base_SetConfig+0x214>)
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d03b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	4a52      	ldr	r2, [pc, #328]	@ (8007428 <TIM_Base_SetConfig+0x218>)
 80072de:	4293      	cmp	r3, r2
 80072e0:	d037      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	4a51      	ldr	r2, [pc, #324]	@ (800742c <TIM_Base_SetConfig+0x21c>)
 80072e6:	4293      	cmp	r3, r2
 80072e8:	d033      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	4a50      	ldr	r2, [pc, #320]	@ (8007430 <TIM_Base_SetConfig+0x220>)
 80072ee:	4293      	cmp	r3, r2
 80072f0:	d02f      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	4a4f      	ldr	r2, [pc, #316]	@ (8007434 <TIM_Base_SetConfig+0x224>)
 80072f6:	4293      	cmp	r3, r2
 80072f8:	d02b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	4a4e      	ldr	r2, [pc, #312]	@ (8007438 <TIM_Base_SetConfig+0x228>)
 80072fe:	4293      	cmp	r3, r2
 8007300:	d027      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	4a4d      	ldr	r2, [pc, #308]	@ (800743c <TIM_Base_SetConfig+0x22c>)
 8007306:	4293      	cmp	r3, r2
 8007308:	d023      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	4a4c      	ldr	r2, [pc, #304]	@ (8007440 <TIM_Base_SetConfig+0x230>)
 800730e:	4293      	cmp	r3, r2
 8007310:	d01f      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	4a4b      	ldr	r2, [pc, #300]	@ (8007444 <TIM_Base_SetConfig+0x234>)
 8007316:	4293      	cmp	r3, r2
 8007318:	d01b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	4a4a      	ldr	r2, [pc, #296]	@ (8007448 <TIM_Base_SetConfig+0x238>)
 800731e:	4293      	cmp	r3, r2
 8007320:	d017      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	4a49      	ldr	r2, [pc, #292]	@ (800744c <TIM_Base_SetConfig+0x23c>)
 8007326:	4293      	cmp	r3, r2
 8007328:	d013      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	4a48      	ldr	r2, [pc, #288]	@ (8007450 <TIM_Base_SetConfig+0x240>)
 800732e:	4293      	cmp	r3, r2
 8007330:	d00f      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	4a47      	ldr	r2, [pc, #284]	@ (8007454 <TIM_Base_SetConfig+0x244>)
 8007336:	4293      	cmp	r3, r2
 8007338:	d00b      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	4a46      	ldr	r2, [pc, #280]	@ (8007458 <TIM_Base_SetConfig+0x248>)
 800733e:	4293      	cmp	r3, r2
 8007340:	d007      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	4a45      	ldr	r2, [pc, #276]	@ (800745c <TIM_Base_SetConfig+0x24c>)
 8007346:	4293      	cmp	r3, r2
 8007348:	d003      	beq.n	8007352 <TIM_Base_SetConfig+0x142>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	4a44      	ldr	r2, [pc, #272]	@ (8007460 <TIM_Base_SetConfig+0x250>)
 800734e:	4293      	cmp	r3, r2
 8007350:	d108      	bne.n	8007364 <TIM_Base_SetConfig+0x154>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007352:	68fb      	ldr	r3, [r7, #12]
 8007354:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007358:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800735a:	683b      	ldr	r3, [r7, #0]
 800735c:	68db      	ldr	r3, [r3, #12]
 800735e:	68fa      	ldr	r2, [r7, #12]
 8007360:	4313      	orrs	r3, r2
 8007362:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007364:	68fb      	ldr	r3, [r7, #12]
 8007366:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800736a:	683b      	ldr	r3, [r7, #0]
 800736c:	695b      	ldr	r3, [r3, #20]
 800736e:	4313      	orrs	r3, r2
 8007370:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	68fa      	ldr	r2, [r7, #12]
 8007376:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007378:	683b      	ldr	r3, [r7, #0]
 800737a:	689a      	ldr	r2, [r3, #8]
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007380:	683b      	ldr	r3, [r7, #0]
 8007382:	681a      	ldr	r2, [r3, #0]
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	4a20      	ldr	r2, [pc, #128]	@ (800740c <TIM_Base_SetConfig+0x1fc>)
 800738c:	4293      	cmp	r3, r2
 800738e:	d023      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	4a1f      	ldr	r2, [pc, #124]	@ (8007410 <TIM_Base_SetConfig+0x200>)
 8007394:	4293      	cmp	r3, r2
 8007396:	d01f      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	4a24      	ldr	r2, [pc, #144]	@ (800742c <TIM_Base_SetConfig+0x21c>)
 800739c:	4293      	cmp	r3, r2
 800739e:	d01b      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	4a23      	ldr	r2, [pc, #140]	@ (8007430 <TIM_Base_SetConfig+0x220>)
 80073a4:	4293      	cmp	r3, r2
 80073a6:	d017      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	4a28      	ldr	r2, [pc, #160]	@ (800744c <TIM_Base_SetConfig+0x23c>)
 80073ac:	4293      	cmp	r3, r2
 80073ae:	d013      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	4a27      	ldr	r2, [pc, #156]	@ (8007450 <TIM_Base_SetConfig+0x240>)
 80073b4:	4293      	cmp	r3, r2
 80073b6:	d00f      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	4a26      	ldr	r2, [pc, #152]	@ (8007454 <TIM_Base_SetConfig+0x244>)
 80073bc:	4293      	cmp	r3, r2
 80073be:	d00b      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	4a25      	ldr	r2, [pc, #148]	@ (8007458 <TIM_Base_SetConfig+0x248>)
 80073c4:	4293      	cmp	r3, r2
 80073c6:	d007      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	4a24      	ldr	r2, [pc, #144]	@ (800745c <TIM_Base_SetConfig+0x24c>)
 80073cc:	4293      	cmp	r3, r2
 80073ce:	d003      	beq.n	80073d8 <TIM_Base_SetConfig+0x1c8>
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	4a23      	ldr	r2, [pc, #140]	@ (8007460 <TIM_Base_SetConfig+0x250>)
 80073d4:	4293      	cmp	r3, r2
 80073d6:	d103      	bne.n	80073e0 <TIM_Base_SetConfig+0x1d0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80073d8:	683b      	ldr	r3, [r7, #0]
 80073da:	691a      	ldr	r2, [r3, #16]
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	2201      	movs	r2, #1
 80073e4:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80073e6:	687b      	ldr	r3, [r7, #4]
 80073e8:	691b      	ldr	r3, [r3, #16]
 80073ea:	f003 0301 	and.w	r3, r3, #1
 80073ee:	2b01      	cmp	r3, #1
 80073f0:	d105      	bne.n	80073fe <TIM_Base_SetConfig+0x1ee>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	691b      	ldr	r3, [r3, #16]
 80073f6:	f023 0201 	bic.w	r2, r3, #1
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	611a      	str	r2, [r3, #16]
  }
}
 80073fe:	bf00      	nop
 8007400:	3714      	adds	r7, #20
 8007402:	46bd      	mov	sp, r7
 8007404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007408:	4770      	bx	lr
 800740a:	bf00      	nop
 800740c:	40012c00 	.word	0x40012c00
 8007410:	50012c00 	.word	0x50012c00
 8007414:	40000400 	.word	0x40000400
 8007418:	50000400 	.word	0x50000400
 800741c:	40000800 	.word	0x40000800
 8007420:	50000800 	.word	0x50000800
 8007424:	40000c00 	.word	0x40000c00
 8007428:	50000c00 	.word	0x50000c00
 800742c:	40013400 	.word	0x40013400
 8007430:	50013400 	.word	0x50013400
 8007434:	40001800 	.word	0x40001800
 8007438:	50001800 	.word	0x50001800
 800743c:	40001c00 	.word	0x40001c00
 8007440:	50001c00 	.word	0x50001c00
 8007444:	40002000 	.word	0x40002000
 8007448:	50002000 	.word	0x50002000
 800744c:	40014000 	.word	0x40014000
 8007450:	50014000 	.word	0x50014000
 8007454:	40014400 	.word	0x40014400
 8007458:	50014400 	.word	0x50014400
 800745c:	40014800 	.word	0x40014800
 8007460:	50014800 	.word	0x50014800

08007464 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007464:	b480      	push	{r7}
 8007466:	b087      	sub	sp, #28
 8007468:	af00      	add	r7, sp, #0
 800746a:	60f8      	str	r0, [r7, #12]
 800746c:	60b9      	str	r1, [r7, #8]
 800746e:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007470:	68fb      	ldr	r3, [r7, #12]
 8007472:	6a1b      	ldr	r3, [r3, #32]
 8007474:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	6a1b      	ldr	r3, [r3, #32]
 800747a:	f023 0201 	bic.w	r2, r3, #1
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007482:	68fb      	ldr	r3, [r7, #12]
 8007484:	699b      	ldr	r3, [r3, #24]
 8007486:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007488:	693b      	ldr	r3, [r7, #16]
 800748a:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800748e:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	011b      	lsls	r3, r3, #4
 8007494:	693a      	ldr	r2, [r7, #16]
 8007496:	4313      	orrs	r3, r2
 8007498:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800749a:	697b      	ldr	r3, [r7, #20]
 800749c:	f023 030a 	bic.w	r3, r3, #10
 80074a0:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 80074a2:	697a      	ldr	r2, [r7, #20]
 80074a4:	68bb      	ldr	r3, [r7, #8]
 80074a6:	4313      	orrs	r3, r2
 80074a8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80074aa:	68fb      	ldr	r3, [r7, #12]
 80074ac:	693a      	ldr	r2, [r7, #16]
 80074ae:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80074b0:	68fb      	ldr	r3, [r7, #12]
 80074b2:	697a      	ldr	r2, [r7, #20]
 80074b4:	621a      	str	r2, [r3, #32]
}
 80074b6:	bf00      	nop
 80074b8:	371c      	adds	r7, #28
 80074ba:	46bd      	mov	sp, r7
 80074bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074c0:	4770      	bx	lr

080074c2 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80074c2:	b480      	push	{r7}
 80074c4:	b087      	sub	sp, #28
 80074c6:	af00      	add	r7, sp, #0
 80074c8:	60f8      	str	r0, [r7, #12]
 80074ca:	60b9      	str	r1, [r7, #8]
 80074cc:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	6a1b      	ldr	r3, [r3, #32]
 80074d2:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80074d4:	68fb      	ldr	r3, [r7, #12]
 80074d6:	6a1b      	ldr	r3, [r3, #32]
 80074d8:	f023 0210 	bic.w	r2, r3, #16
 80074dc:	68fb      	ldr	r3, [r7, #12]
 80074de:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074e0:	68fb      	ldr	r3, [r7, #12]
 80074e2:	699b      	ldr	r3, [r3, #24]
 80074e4:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80074e6:	693b      	ldr	r3, [r7, #16]
 80074e8:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80074ec:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	031b      	lsls	r3, r3, #12
 80074f2:	693a      	ldr	r2, [r7, #16]
 80074f4:	4313      	orrs	r3, r2
 80074f6:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80074f8:	697b      	ldr	r3, [r7, #20]
 80074fa:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80074fe:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007500:	68bb      	ldr	r3, [r7, #8]
 8007502:	011b      	lsls	r3, r3, #4
 8007504:	697a      	ldr	r2, [r7, #20]
 8007506:	4313      	orrs	r3, r2
 8007508:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800750a:	68fb      	ldr	r3, [r7, #12]
 800750c:	693a      	ldr	r2, [r7, #16]
 800750e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	697a      	ldr	r2, [r7, #20]
 8007514:	621a      	str	r2, [r3, #32]
}
 8007516:	bf00      	nop
 8007518:	371c      	adds	r7, #28
 800751a:	46bd      	mov	sp, r7
 800751c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007520:	4770      	bx	lr

08007522 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007522:	b480      	push	{r7}
 8007524:	b085      	sub	sp, #20
 8007526:	af00      	add	r7, sp, #0
 8007528:	6078      	str	r0, [r7, #4]
 800752a:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	689b      	ldr	r3, [r3, #8]
 8007530:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007538:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800753c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800753e:	683a      	ldr	r2, [r7, #0]
 8007540:	68fb      	ldr	r3, [r7, #12]
 8007542:	4313      	orrs	r3, r2
 8007544:	f043 0307 	orr.w	r3, r3, #7
 8007548:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	68fa      	ldr	r2, [r7, #12]
 800754e:	609a      	str	r2, [r3, #8]
}
 8007550:	bf00      	nop
 8007552:	3714      	adds	r7, #20
 8007554:	46bd      	mov	sp, r7
 8007556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800755a:	4770      	bx	lr

0800755c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800755c:	b480      	push	{r7}
 800755e:	b087      	sub	sp, #28
 8007560:	af00      	add	r7, sp, #0
 8007562:	60f8      	str	r0, [r7, #12]
 8007564:	60b9      	str	r1, [r7, #8]
 8007566:	607a      	str	r2, [r7, #4]
 8007568:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	689b      	ldr	r3, [r3, #8]
 800756e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007570:	697b      	ldr	r3, [r7, #20]
 8007572:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007576:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007578:	683b      	ldr	r3, [r7, #0]
 800757a:	021a      	lsls	r2, r3, #8
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	431a      	orrs	r2, r3
 8007580:	68bb      	ldr	r3, [r7, #8]
 8007582:	4313      	orrs	r3, r2
 8007584:	697a      	ldr	r2, [r7, #20]
 8007586:	4313      	orrs	r3, r2
 8007588:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800758a:	68fb      	ldr	r3, [r7, #12]
 800758c:	697a      	ldr	r2, [r7, #20]
 800758e:	609a      	str	r2, [r3, #8]
}
 8007590:	bf00      	nop
 8007592:	371c      	adds	r7, #28
 8007594:	46bd      	mov	sp, r7
 8007596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759a:	4770      	bx	lr

0800759c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800759c:	b480      	push	{r7}
 800759e:	b085      	sub	sp, #20
 80075a0:	af00      	add	r7, sp, #0
 80075a2:	6078      	str	r0, [r7, #4]
 80075a4:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80075ac:	2b01      	cmp	r3, #1
 80075ae:	d101      	bne.n	80075b4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80075b0:	2302      	movs	r3, #2
 80075b2:	e0a1      	b.n	80076f8 <HAL_TIMEx_MasterConfigSynchronization+0x15c>
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	2201      	movs	r2, #1
 80075b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	2202      	movs	r2, #2
 80075c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	681b      	ldr	r3, [r3, #0]
 80075c8:	685b      	ldr	r3, [r3, #4]
 80075ca:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	689b      	ldr	r3, [r3, #8]
 80075d2:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 80075d4:	687b      	ldr	r3, [r7, #4]
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	4a4a      	ldr	r2, [pc, #296]	@ (8007704 <HAL_TIMEx_MasterConfigSynchronization+0x168>)
 80075da:	4293      	cmp	r3, r2
 80075dc:	d00e      	beq.n	80075fc <HAL_TIMEx_MasterConfigSynchronization+0x60>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	4a49      	ldr	r2, [pc, #292]	@ (8007708 <HAL_TIMEx_MasterConfigSynchronization+0x16c>)
 80075e4:	4293      	cmp	r3, r2
 80075e6:	d009      	beq.n	80075fc <HAL_TIMEx_MasterConfigSynchronization+0x60>
 80075e8:	687b      	ldr	r3, [r7, #4]
 80075ea:	681b      	ldr	r3, [r3, #0]
 80075ec:	4a47      	ldr	r2, [pc, #284]	@ (800770c <HAL_TIMEx_MasterConfigSynchronization+0x170>)
 80075ee:	4293      	cmp	r3, r2
 80075f0:	d004      	beq.n	80075fc <HAL_TIMEx_MasterConfigSynchronization+0x60>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	4a46      	ldr	r2, [pc, #280]	@ (8007710 <HAL_TIMEx_MasterConfigSynchronization+0x174>)
 80075f8:	4293      	cmp	r3, r2
 80075fa:	d108      	bne.n	800760e <HAL_TIMEx_MasterConfigSynchronization+0x72>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 80075fc:	68fb      	ldr	r3, [r7, #12]
 80075fe:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8007602:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8007604:	683b      	ldr	r3, [r7, #0]
 8007606:	685b      	ldr	r3, [r3, #4]
 8007608:	68fa      	ldr	r2, [r7, #12]
 800760a:	4313      	orrs	r3, r2
 800760c:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800760e:	68fb      	ldr	r3, [r7, #12]
 8007610:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8007614:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007618:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800761a:	683b      	ldr	r3, [r7, #0]
 800761c:	681b      	ldr	r3, [r3, #0]
 800761e:	68fa      	ldr	r2, [r7, #12]
 8007620:	4313      	orrs	r3, r2
 8007622:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	68fa      	ldr	r2, [r7, #12]
 800762a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	4a34      	ldr	r2, [pc, #208]	@ (8007704 <HAL_TIMEx_MasterConfigSynchronization+0x168>)
 8007632:	4293      	cmp	r3, r2
 8007634:	d04a      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007636:	687b      	ldr	r3, [r7, #4]
 8007638:	681b      	ldr	r3, [r3, #0]
 800763a:	4a33      	ldr	r2, [pc, #204]	@ (8007708 <HAL_TIMEx_MasterConfigSynchronization+0x16c>)
 800763c:	4293      	cmp	r3, r2
 800763e:	d045      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007648:	d040      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007652:	d03b      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	4a2e      	ldr	r2, [pc, #184]	@ (8007714 <HAL_TIMEx_MasterConfigSynchronization+0x178>)
 800765a:	4293      	cmp	r3, r2
 800765c:	d036      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	4a2d      	ldr	r2, [pc, #180]	@ (8007718 <HAL_TIMEx_MasterConfigSynchronization+0x17c>)
 8007664:	4293      	cmp	r3, r2
 8007666:	d031      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	4a2b      	ldr	r2, [pc, #172]	@ (800771c <HAL_TIMEx_MasterConfigSynchronization+0x180>)
 800766e:	4293      	cmp	r3, r2
 8007670:	d02c      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	4a2a      	ldr	r2, [pc, #168]	@ (8007720 <HAL_TIMEx_MasterConfigSynchronization+0x184>)
 8007678:	4293      	cmp	r3, r2
 800767a:	d027      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	4a28      	ldr	r2, [pc, #160]	@ (8007724 <HAL_TIMEx_MasterConfigSynchronization+0x188>)
 8007682:	4293      	cmp	r3, r2
 8007684:	d022      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	4a27      	ldr	r2, [pc, #156]	@ (8007728 <HAL_TIMEx_MasterConfigSynchronization+0x18c>)
 800768c:	4293      	cmp	r3, r2
 800768e:	d01d      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	4a1d      	ldr	r2, [pc, #116]	@ (800770c <HAL_TIMEx_MasterConfigSynchronization+0x170>)
 8007696:	4293      	cmp	r3, r2
 8007698:	d018      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	4a1c      	ldr	r2, [pc, #112]	@ (8007710 <HAL_TIMEx_MasterConfigSynchronization+0x174>)
 80076a0:	4293      	cmp	r3, r2
 80076a2:	d013      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	681b      	ldr	r3, [r3, #0]
 80076a8:	4a20      	ldr	r2, [pc, #128]	@ (800772c <HAL_TIMEx_MasterConfigSynchronization+0x190>)
 80076aa:	4293      	cmp	r3, r2
 80076ac:	d00e      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	4a1f      	ldr	r2, [pc, #124]	@ (8007730 <HAL_TIMEx_MasterConfigSynchronization+0x194>)
 80076b4:	4293      	cmp	r3, r2
 80076b6:	d009      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	4a1d      	ldr	r2, [pc, #116]	@ (8007734 <HAL_TIMEx_MasterConfigSynchronization+0x198>)
 80076be:	4293      	cmp	r3, r2
 80076c0:	d004      	beq.n	80076cc <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	681b      	ldr	r3, [r3, #0]
 80076c6:	4a1c      	ldr	r2, [pc, #112]	@ (8007738 <HAL_TIMEx_MasterConfigSynchronization+0x19c>)
 80076c8:	4293      	cmp	r3, r2
 80076ca:	d10c      	bne.n	80076e6 <HAL_TIMEx_MasterConfigSynchronization+0x14a>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80076cc:	68bb      	ldr	r3, [r7, #8]
 80076ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80076d2:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80076d4:	683b      	ldr	r3, [r7, #0]
 80076d6:	689b      	ldr	r3, [r3, #8]
 80076d8:	68ba      	ldr	r2, [r7, #8]
 80076da:	4313      	orrs	r3, r2
 80076dc:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	68ba      	ldr	r2, [r7, #8]
 80076e4:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	2201      	movs	r2, #1
 80076ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	2200      	movs	r2, #0
 80076f2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 80076f6:	2300      	movs	r3, #0
}
 80076f8:	4618      	mov	r0, r3
 80076fa:	3714      	adds	r7, #20
 80076fc:	46bd      	mov	sp, r7
 80076fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007702:	4770      	bx	lr
 8007704:	40012c00 	.word	0x40012c00
 8007708:	50012c00 	.word	0x50012c00
 800770c:	40013400 	.word	0x40013400
 8007710:	50013400 	.word	0x50013400
 8007714:	40000400 	.word	0x40000400
 8007718:	50000400 	.word	0x50000400
 800771c:	40000800 	.word	0x40000800
 8007720:	50000800 	.word	0x50000800
 8007724:	40000c00 	.word	0x40000c00
 8007728:	50000c00 	.word	0x50000c00
 800772c:	40001800 	.word	0x40001800
 8007730:	50001800 	.word	0x50001800
 8007734:	40014000 	.word	0x40014000
 8007738:	50014000 	.word	0x50014000

0800773c <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800773c:	b480      	push	{r7}
 800773e:	b083      	sub	sp, #12
 8007740:	af00      	add	r7, sp, #0
 8007742:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007744:	bf00      	nop
 8007746:	370c      	adds	r7, #12
 8007748:	46bd      	mov	sp, r7
 800774a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800774e:	4770      	bx	lr

08007750 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007750:	b480      	push	{r7}
 8007752:	b083      	sub	sp, #12
 8007754:	af00      	add	r7, sp, #0
 8007756:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007758:	bf00      	nop
 800775a:	370c      	adds	r7, #12
 800775c:	46bd      	mov	sp, r7
 800775e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007762:	4770      	bx	lr

08007764 <HAL_TIMEx_Break2Callback>:
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 8007764:	b480      	push	{r7}
 8007766:	b083      	sub	sp, #12
 8007768:	af00      	add	r7, sp, #0
 800776a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 800776c:	bf00      	nop
 800776e:	370c      	adds	r7, #12
 8007770:	46bd      	mov	sp, r7
 8007772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007776:	4770      	bx	lr

08007778 <HAL_TIMEx_EncoderIndexCallback>:
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
{
 8007778:	b480      	push	{r7}
 800777a:	b083      	sub	sp, #12
 800777c:	af00      	add	r7, sp, #0
 800777e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_EncoderIndexCallback could be implemented in the user file
   */
}
 8007780:	bf00      	nop
 8007782:	370c      	adds	r7, #12
 8007784:	46bd      	mov	sp, r7
 8007786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800778a:	4770      	bx	lr

0800778c <HAL_TIMEx_DirectionChangeCallback>:
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
{
 800778c:	b480      	push	{r7}
 800778e:	b083      	sub	sp, #12
 8007790:	af00      	add	r7, sp, #0
 8007792:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_DirectionChangeCallback could be implemented in the user file
   */
}
 8007794:	bf00      	nop
 8007796:	370c      	adds	r7, #12
 8007798:	46bd      	mov	sp, r7
 800779a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800779e:	4770      	bx	lr

080077a0 <HAL_TIMEx_IndexErrorCallback>:
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
{
 80077a0:	b480      	push	{r7}
 80077a2:	b083      	sub	sp, #12
 80077a4:	af00      	add	r7, sp, #0
 80077a6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_IndexErrorCallback could be implemented in the user file
   */
}
 80077a8:	bf00      	nop
 80077aa:	370c      	adds	r7, #12
 80077ac:	46bd      	mov	sp, r7
 80077ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b2:	4770      	bx	lr

080077b4 <HAL_TIMEx_TransitionErrorCallback>:
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
{
 80077b4:	b480      	push	{r7}
 80077b6:	b083      	sub	sp, #12
 80077b8:	af00      	add	r7, sp, #0
 80077ba:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_TransitionErrorCallback could be implemented in the user file
   */
}
 80077bc:	bf00      	nop
 80077be:	370c      	adds	r7, #12
 80077c0:	46bd      	mov	sp, r7
 80077c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077c6:	4770      	bx	lr

080077c8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80077c8:	b580      	push	{r7, lr}
 80077ca:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80077cc:	f003 fc3c 	bl	800b048 <touchgfx_components_init>
    touchgfx_init();
 80077d0:	f003 fc10 	bl	800aff4 <touchgfx_init>
}
 80077d4:	bf00      	nop
 80077d6:	bd80      	pop	{r7, pc}

080077d8 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 80077d8:	b580      	push	{r7, lr}
 80077da:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80077dc:	f003 fc3c 	bl	800b058 <touchgfx_taskEntry>
}
 80077e0:	bf00      	nop
 80077e2:	bd80      	pop	{r7, pc}

080077e4 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80077e4:	b480      	push	{r7}
 80077e6:	b083      	sub	sp, #12
 80077e8:	af00      	add	r7, sp, #0
 80077ea:	6078      	str	r0, [r7, #4]
    {
 80077ec:	4a04      	ldr	r2, [pc, #16]	@ (8007800 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	601a      	str	r2, [r3, #0]
    }
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	4618      	mov	r0, r3
 80077f6:	370c      	adds	r7, #12
 80077f8:	46bd      	mov	sp, r7
 80077fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fe:	4770      	bx	lr
 8007800:	080231ec 	.word	0x080231ec

08007804 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007804:	b580      	push	{r7, lr}
 8007806:	b082      	sub	sp, #8
 8007808:	af00      	add	r7, sp, #0
 800780a:	6078      	str	r0, [r7, #4]
    }
 800780c:	6878      	ldr	r0, [r7, #4]
 800780e:	f7ff ffe9 	bl	80077e4 <_ZN8touchgfx12FontProviderD1Ev>
 8007812:	2104      	movs	r1, #4
 8007814:	6878      	ldr	r0, [r7, #4]
 8007816:	f019 fc1a 	bl	802104e <_ZdlPvj>
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	4618      	mov	r0, r3
 800781e:	3708      	adds	r7, #8
 8007820:	46bd      	mov	sp, r7
 8007822:	bd80      	pop	{r7, pc}

08007824 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007824:	b580      	push	{r7, lr}
 8007826:	b082      	sub	sp, #8
 8007828:	af00      	add	r7, sp, #0
 800782a:	6078      	str	r0, [r7, #4]
 800782c:	460b      	mov	r3, r1
 800782e:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007830:	887b      	ldrh	r3, [r7, #2]
 8007832:	2b02      	cmp	r3, #2
 8007834:	d010      	beq.n	8007858 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8007836:	2b02      	cmp	r3, #2
 8007838:	dc13      	bgt.n	8007862 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800783a:	2b00      	cmp	r3, #0
 800783c:	d002      	beq.n	8007844 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800783e:	2b01      	cmp	r3, #1
 8007840:	d005      	beq.n	800784e <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8007842:	e00e      	b.n	8007862 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007844:	f002 f9ac 	bl	8009ba0 <_ZN17TypedTextDatabase8getFontsEv>
 8007848:	4603      	mov	r3, r0
 800784a:	681b      	ldr	r3, [r3, #0]
 800784c:	e00a      	b.n	8007864 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800784e:	f002 f9a7 	bl	8009ba0 <_ZN17TypedTextDatabase8getFontsEv>
 8007852:	4603      	mov	r3, r0
 8007854:	685b      	ldr	r3, [r3, #4]
 8007856:	e005      	b.n	8007864 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8007858:	f002 f9a2 	bl	8009ba0 <_ZN17TypedTextDatabase8getFontsEv>
 800785c:	4603      	mov	r3, r0
 800785e:	689b      	ldr	r3, [r3, #8]
 8007860:	e000      	b.n	8007864 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8007862:	2300      	movs	r3, #0
    }
}
 8007864:	4618      	mov	r0, r3
 8007866:	3708      	adds	r7, #8
 8007868:	46bd      	mov	sp, r7
 800786a:	bd80      	pop	{r7, pc}

0800786c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_80_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800786c:	b580      	push	{r7, lr}
 800786e:	b082      	sub	sp, #8
 8007870:	af00      	add	r7, sp, #0
 8007872:	6078      	str	r0, [r7, #4]
 8007874:	4a05      	ldr	r2, [pc, #20]	@ (800788c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	601a      	str	r2, [r3, #0]
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	4618      	mov	r0, r3
 800787e:	f7ff ffb1 	bl	80077e4 <_ZN8touchgfx12FontProviderD1Ev>
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	4618      	mov	r0, r3
 8007886:	3708      	adds	r7, #8
 8007888:	46bd      	mov	sp, r7
 800788a:	bd80      	pop	{r7, pc}
 800788c:	080231d8 	.word	0x080231d8

08007890 <_ZN23ApplicationFontProviderD0Ev>:
 8007890:	b580      	push	{r7, lr}
 8007892:	b082      	sub	sp, #8
 8007894:	af00      	add	r7, sp, #0
 8007896:	6078      	str	r0, [r7, #4]
 8007898:	6878      	ldr	r0, [r7, #4]
 800789a:	f7ff ffe7 	bl	800786c <_ZN23ApplicationFontProviderD1Ev>
 800789e:	2104      	movs	r1, #4
 80078a0:	6878      	ldr	r0, [r7, #4]
 80078a2:	f019 fbd4 	bl	802104e <_ZdlPvj>
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	4618      	mov	r0, r3
 80078aa:	3708      	adds	r7, #8
 80078ac:	46bd      	mov	sp, r7
 80078ae:	bd80      	pop	{r7, pc}

080078b0 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 80078b0:	b480      	push	{r7}
 80078b2:	b083      	sub	sp, #12
 80078b4:	af00      	add	r7, sp, #0
 80078b6:	6078      	str	r0, [r7, #4]
    {
 80078b8:	4a04      	ldr	r2, [pc, #16]	@ (80078cc <_ZN8touchgfx4FontD1Ev+0x1c>)
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	601a      	str	r2, [r3, #0]
    }
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	4618      	mov	r0, r3
 80078c2:	370c      	adds	r7, #12
 80078c4:	46bd      	mov	sp, r7
 80078c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ca:	4770      	bx	lr
 80078cc:	08023534 	.word	0x08023534

080078d0 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 80078d0:	b580      	push	{r7, lr}
 80078d2:	b082      	sub	sp, #8
 80078d4:	af00      	add	r7, sp, #0
 80078d6:	6078      	str	r0, [r7, #4]
    }
 80078d8:	6878      	ldr	r0, [r7, #4]
 80078da:	f7ff ffe9 	bl	80078b0 <_ZN8touchgfx4FontD1Ev>
 80078de:	2114      	movs	r1, #20
 80078e0:	6878      	ldr	r0, [r7, #4]
 80078e2:	f019 fbb4 	bl	802104e <_ZdlPvj>
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	4618      	mov	r0, r3
 80078ea:	3708      	adds	r7, #8
 80078ec:	46bd      	mov	sp, r7
 80078ee:	bd80      	pop	{r7, pc}

080078f0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80078f0:	b590      	push	{r4, r7, lr}
 80078f2:	b087      	sub	sp, #28
 80078f4:	af00      	add	r7, sp, #0
 80078f6:	6078      	str	r0, [r7, #4]
 80078f8:	460b      	mov	r3, r1
 80078fa:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80078fc:	887b      	ldrh	r3, [r7, #2]
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d101      	bne.n	8007906 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8007902:	2300      	movs	r3, #0
 8007904:	e010      	b.n	8007928 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8007906:	2300      	movs	r3, #0
 8007908:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800790a:	2300      	movs	r3, #0
 800790c:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	3308      	adds	r3, #8
 8007914:	681c      	ldr	r4, [r3, #0]
 8007916:	f107 030f 	add.w	r3, r7, #15
 800791a:	f107 0210 	add.w	r2, r7, #16
 800791e:	8879      	ldrh	r1, [r7, #2]
 8007920:	6878      	ldr	r0, [r7, #4]
 8007922:	47a0      	blx	r4
 8007924:	6178      	str	r0, [r7, #20]
        return glyph;
 8007926:	697b      	ldr	r3, [r7, #20]
    }
 8007928:	4618      	mov	r0, r3
 800792a:	371c      	adds	r7, #28
 800792c:	46bd      	mov	sp, r7
 800792e:	bd90      	pop	{r4, r7, pc}

08007930 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007930:	b480      	push	{r7}
 8007932:	b083      	sub	sp, #12
 8007934:	af00      	add	r7, sp, #0
 8007936:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	89db      	ldrh	r3, [r3, #14]
    }
 800793c:	4618      	mov	r0, r3
 800793e:	370c      	adds	r7, #12
 8007940:	46bd      	mov	sp, r7
 8007942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007946:	4770      	bx	lr

08007948 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007948:	b480      	push	{r7}
 800794a:	b083      	sub	sp, #12
 800794c:	af00      	add	r7, sp, #0
 800794e:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	8a1b      	ldrh	r3, [r3, #16]
    }
 8007954:	4618      	mov	r0, r3
 8007956:	370c      	adds	r7, #12
 8007958:	46bd      	mov	sp, r7
 800795a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795e:	4770      	bx	lr

08007960 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8007960:	b480      	push	{r7}
 8007962:	b083      	sub	sp, #12
 8007964:	af00      	add	r7, sp, #0
 8007966:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	88db      	ldrh	r3, [r3, #6]
    }
 800796c:	4618      	mov	r0, r3
 800796e:	370c      	adds	r7, #12
 8007970:	46bd      	mov	sp, r7
 8007972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007976:	4770      	bx	lr

08007978 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8007978:	b480      	push	{r7}
 800797a:	b083      	sub	sp, #12
 800797c:	af00      	add	r7, sp, #0
 800797e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	889b      	ldrh	r3, [r3, #4]
    }
 8007984:	4618      	mov	r0, r3
 8007986:	370c      	adds	r7, #12
 8007988:	46bd      	mov	sp, r7
 800798a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800798e:	4770      	bx	lr

08007990 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8007990:	b480      	push	{r7}
 8007992:	b083      	sub	sp, #12
 8007994:	af00      	add	r7, sp, #0
 8007996:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007998:	687b      	ldr	r3, [r7, #4]
 800799a:	7a9b      	ldrb	r3, [r3, #10]
 800799c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80079a0:	b2db      	uxtb	r3, r3
    }
 80079a2:	4618      	mov	r0, r3
 80079a4:	370c      	adds	r7, #12
 80079a6:	46bd      	mov	sp, r7
 80079a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ac:	4770      	bx	lr

080079ae <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 80079ae:	b480      	push	{r7}
 80079b0:	b083      	sub	sp, #12
 80079b2:	af00      	add	r7, sp, #0
 80079b4:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	7a9b      	ldrb	r3, [r3, #10]
 80079ba:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80079be:	b2db      	uxtb	r3, r3
    }
 80079c0:	4618      	mov	r0, r3
 80079c2:	370c      	adds	r7, #12
 80079c4:	46bd      	mov	sp, r7
 80079c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ca:	4770      	bx	lr

080079cc <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 80079cc:	b480      	push	{r7}
 80079ce:	b083      	sub	sp, #12
 80079d0:	af00      	add	r7, sp, #0
 80079d2:	6078      	str	r0, [r7, #4]
    {
        return false;
 80079d4:	2300      	movs	r3, #0
    }
 80079d6:	4618      	mov	r0, r3
 80079d8:	370c      	adds	r7, #12
 80079da:	46bd      	mov	sp, r7
 80079dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079e0:	4770      	bx	lr

080079e2 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 80079e2:	b480      	push	{r7}
 80079e4:	b083      	sub	sp, #12
 80079e6:	af00      	add	r7, sp, #0
 80079e8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80079ea:	f04f 0300 	mov.w	r3, #0
 80079ee:	ee07 3a90 	vmov	s15, r3
    }
 80079f2:	eeb0 0a67 	vmov.f32	s0, s15
 80079f6:	370c      	adds	r7, #12
 80079f8:	46bd      	mov	sp, r7
 80079fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079fe:	4770      	bx	lr

08007a00 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8007a00:	b580      	push	{r7, lr}
 8007a02:	b082      	sub	sp, #8
 8007a04:	af00      	add	r7, sp, #0
 8007a06:	6078      	str	r0, [r7, #4]
 8007a08:	4a05      	ldr	r2, [pc, #20]	@ (8007a20 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	601a      	str	r2, [r3, #0]
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	4618      	mov	r0, r3
 8007a12:	f7ff ff4d 	bl	80078b0 <_ZN8touchgfx4FontD1Ev>
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	4618      	mov	r0, r3
 8007a1a:	3708      	adds	r7, #8
 8007a1c:	46bd      	mov	sp, r7
 8007a1e:	bd80      	pop	{r7, pc}
 8007a20:	08023ee4 	.word	0x08023ee4

08007a24 <_ZN8touchgfx9ConstFontD0Ev>:
 8007a24:	b580      	push	{r7, lr}
 8007a26:	b082      	sub	sp, #8
 8007a28:	af00      	add	r7, sp, #0
 8007a2a:	6078      	str	r0, [r7, #4]
 8007a2c:	6878      	ldr	r0, [r7, #4]
 8007a2e:	f7ff ffe7 	bl	8007a00 <_ZN8touchgfx9ConstFontD1Ev>
 8007a32:	211c      	movs	r1, #28
 8007a34:	6878      	ldr	r0, [r7, #4]
 8007a36:	f019 fb0a 	bl	802104e <_ZdlPvj>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	4618      	mov	r0, r3
 8007a3e:	3708      	adds	r7, #8
 8007a40:	46bd      	mov	sp, r7
 8007a42:	bd80      	pop	{r7, pc}

08007a44 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8007a44:	b580      	push	{r7, lr}
 8007a46:	b082      	sub	sp, #8
 8007a48:	af00      	add	r7, sp, #0
 8007a4a:	6078      	str	r0, [r7, #4]
 8007a4c:	4a05      	ldr	r2, [pc, #20]	@ (8007a64 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	601a      	str	r2, [r3, #0]
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	4618      	mov	r0, r3
 8007a56:	f7ff ffd3 	bl	8007a00 <_ZN8touchgfx9ConstFontD1Ev>
 8007a5a:	687b      	ldr	r3, [r7, #4]
 8007a5c:	4618      	mov	r0, r3
 8007a5e:	3708      	adds	r7, #8
 8007a60:	46bd      	mov	sp, r7
 8007a62:	bd80      	pop	{r7, pc}
 8007a64:	08023210 	.word	0x08023210

08007a68 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8007a68:	b580      	push	{r7, lr}
 8007a6a:	b082      	sub	sp, #8
 8007a6c:	af00      	add	r7, sp, #0
 8007a6e:	6078      	str	r0, [r7, #4]
 8007a70:	6878      	ldr	r0, [r7, #4]
 8007a72:	f7ff ffe7 	bl	8007a44 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007a76:	212c      	movs	r1, #44	@ 0x2c
 8007a78:	6878      	ldr	r0, [r7, #4]
 8007a7a:	f019 fae8 	bl	802104e <_ZdlPvj>
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	4618      	mov	r0, r3
 8007a82:	3708      	adds	r7, #8
 8007a84:	46bd      	mov	sp, r7
 8007a86:	bd80      	pop	{r7, pc}

08007a88 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8007a88:	b480      	push	{r7}
 8007a8a:	af00      	add	r7, sp, #0
    {
        return instance;
 8007a8c:	4b03      	ldr	r3, [pc, #12]	@ (8007a9c <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8007a8e:	681b      	ldr	r3, [r3, #0]
    }
 8007a90:	4618      	mov	r0, r3
 8007a92:	46bd      	mov	sp, r7
 8007a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a98:	4770      	bx	lr
 8007a9a:	bf00      	nop
 8007a9c:	20002230 	.word	0x20002230

08007aa0 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8007aa0:	b480      	push	{r7}
 8007aa2:	b083      	sub	sp, #12
 8007aa4:	af00      	add	r7, sp, #0
 8007aa6:	6078      	str	r0, [r7, #4]
    {
 8007aa8:	4a04      	ldr	r2, [pc, #16]	@ (8007abc <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	601a      	str	r2, [r3, #0]
    }
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	4618      	mov	r0, r3
 8007ab2:	370c      	adds	r7, #12
 8007ab4:	46bd      	mov	sp, r7
 8007ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aba:	4770      	bx	lr
 8007abc:	08023200 	.word	0x08023200

08007ac0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8007ac0:	b580      	push	{r7, lr}
 8007ac2:	b082      	sub	sp, #8
 8007ac4:	af00      	add	r7, sp, #0
 8007ac6:	6078      	str	r0, [r7, #4]
    }
 8007ac8:	6878      	ldr	r0, [r7, #4]
 8007aca:	f7ff ffe9 	bl	8007aa0 <_ZN8touchgfx9TypedTextD1Ev>
 8007ace:	2108      	movs	r1, #8
 8007ad0:	6878      	ldr	r0, [r7, #4]
 8007ad2:	f019 fabc 	bl	802104e <_ZdlPvj>
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	4618      	mov	r0, r3
 8007ada:	3708      	adds	r7, #8
 8007adc:	46bd      	mov	sp, r7
 8007ade:	bd80      	pop	{r7, pc}

08007ae0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8007ae0:	b480      	push	{r7}
 8007ae2:	b083      	sub	sp, #12
 8007ae4:	af00      	add	r7, sp, #0
 8007ae6:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8007aec:	4618      	mov	r0, r3
 8007aee:	370c      	adds	r7, #12
 8007af0:	46bd      	mov	sp, r7
 8007af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007af6:	4770      	bx	lr

08007af8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8007af8:	b480      	push	{r7}
 8007afa:	b083      	sub	sp, #12
 8007afc:	af00      	add	r7, sp, #0
 8007afe:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8007b04:	4618      	mov	r0, r3
 8007b06:	370c      	adds	r7, #12
 8007b08:	46bd      	mov	sp, r7
 8007b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b0e:	4770      	bx	lr

08007b10 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <math.h>
#include <stddef.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8007b10:	b580      	push	{r7, lr}
 8007b12:	b08e      	sub	sp, #56	@ 0x38
 8007b14:	af0a      	add	r7, sp, #40	@ 0x28
 8007b16:	60f8      	str	r0, [r7, #12]
 8007b18:	60b9      	str	r1, [r7, #8]
 8007b1a:	4611      	mov	r1, r2
 8007b1c:	461a      	mov	r2, r3
 8007b1e:	460b      	mov	r3, r1
 8007b20:	80fb      	strh	r3, [r7, #6]
 8007b22:	4613      	mov	r3, r2
 8007b24:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8007b26:	68f8      	ldr	r0, [r7, #12]
 8007b28:	88b9      	ldrh	r1, [r7, #4]
 8007b2a:	88fa      	ldrh	r2, [r7, #6]
 8007b2c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8007b30:	9308      	str	r3, [sp, #32]
 8007b32:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8007b34:	9307      	str	r3, [sp, #28]
 8007b36:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8007b3a:	9306      	str	r3, [sp, #24]
 8007b3c:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8007b40:	9305      	str	r3, [sp, #20]
 8007b42:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8007b46:	9304      	str	r3, [sp, #16]
 8007b48:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8007b4c:	9303      	str	r3, [sp, #12]
 8007b4e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8007b52:	9302      	str	r3, [sp, #8]
 8007b54:	7f3b      	ldrb	r3, [r7, #28]
 8007b56:	9301      	str	r3, [sp, #4]
 8007b58:	8b3b      	ldrh	r3, [r7, #24]
 8007b5a:	9300      	str	r3, [sp, #0]
 8007b5c:	460b      	mov	r3, r1
 8007b5e:	68b9      	ldr	r1, [r7, #8]
 8007b60:	f009 f814 	bl	8010b8c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8007b64:	4a09      	ldr	r2, [pc, #36]	@ (8007b8c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8007b66:	68fb      	ldr	r3, [r7, #12]
 8007b68:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8007b6a:	68fb      	ldr	r3, [r7, #12]
 8007b6c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007b6e:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8007b70:	68fb      	ldr	r3, [r7, #12]
 8007b72:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8007b74:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007b7a:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8007b7c:	68fb      	ldr	r3, [r7, #12]
 8007b7e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007b80:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8007b82:	68fb      	ldr	r3, [r7, #12]
 8007b84:	4618      	mov	r0, r3
 8007b86:	3710      	adds	r7, #16
 8007b88:	46bd      	mov	sp, r7
 8007b8a:	bd80      	pop	{r7, pc}
 8007b8c:	08023210 	.word	0x08023210

08007b90 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8007b90:	b480      	push	{r7}
 8007b92:	b087      	sub	sp, #28
 8007b94:	af00      	add	r7, sp, #0
 8007b96:	6078      	str	r0, [r7, #4]
 8007b98:	6039      	str	r1, [r7, #0]
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
 8007b9a:	683b      	ldr	r3, [r7, #0]
 8007b9c:	617b      	str	r3, [r7, #20]
    uint32_t offset = dataOffset[0];
 8007b9e:	697b      	ldr	r3, [r7, #20]
 8007ba0:	881b      	ldrh	r3, [r3, #0]
 8007ba2:	b29b      	uxth	r3, r3
 8007ba4:	613b      	str	r3, [r7, #16]
    offset |= dataOffset[1] << 16;
 8007ba6:	697b      	ldr	r3, [r7, #20]
 8007ba8:	3302      	adds	r3, #2
 8007baa:	881b      	ldrh	r3, [r3, #0]
 8007bac:	b29b      	uxth	r3, r3
 8007bae:	041b      	lsls	r3, r3, #16
 8007bb0:	461a      	mov	r2, r3
 8007bb2:	693b      	ldr	r3, [r7, #16]
 8007bb4:	4313      	orrs	r3, r2
 8007bb6:	613b      	str	r3, [r7, #16]

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	69db      	ldr	r3, [r3, #28]
 8007bbc:	60fb      	str	r3, [r7, #12]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8007bbe:	683b      	ldr	r3, [r7, #0]
 8007bc0:	889b      	ldrh	r3, [r3, #4]
 8007bc2:	0adb      	lsrs	r3, r3, #11
 8007bc4:	b29b      	uxth	r3, r3
 8007bc6:	009b      	lsls	r3, r3, #2
 8007bc8:	68fa      	ldr	r2, [r7, #12]
 8007bca:	4413      	add	r3, r2
 8007bcc:	681b      	ldr	r3, [r3, #0]
 8007bce:	60bb      	str	r3, [r7, #8]
    return pixels + offset;
 8007bd0:	68ba      	ldr	r2, [r7, #8]
 8007bd2:	693b      	ldr	r3, [r7, #16]
 8007bd4:	4413      	add	r3, r2
}
 8007bd6:	4618      	mov	r0, r3
 8007bd8:	371c      	adds	r7, #28
 8007bda:	46bd      	mov	sp, r7
 8007bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be0:	4770      	bx	lr

08007be2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8007be2:	b480      	push	{r7}
 8007be4:	b089      	sub	sp, #36	@ 0x24
 8007be6:	af00      	add	r7, sp, #0
 8007be8:	60f8      	str	r0, [r7, #12]
 8007bea:	460b      	mov	r3, r1
 8007bec:	607a      	str	r2, [r7, #4]
 8007bee:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	2b00      	cmp	r3, #0
 8007bf4:	d003      	beq.n	8007bfe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	7b1b      	ldrb	r3, [r3, #12]
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d101      	bne.n	8007c02 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8007bfe:	2300      	movs	r3, #0
 8007c00:	e031      	b.n	8007c66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8007c02:	68fb      	ldr	r3, [r7, #12]
 8007c04:	6a1a      	ldr	r2, [r3, #32]
 8007c06:	687b      	ldr	r3, [r7, #4]
 8007c08:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8007c0a:	697b      	ldr	r3, [r7, #20]
 8007c0c:	7b5b      	ldrb	r3, [r3, #13]
 8007c0e:	021b      	lsls	r3, r3, #8
 8007c10:	b21b      	sxth	r3, r3
 8007c12:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007c16:	b219      	sxth	r1, r3
 8007c18:	697b      	ldr	r3, [r7, #20]
 8007c1a:	7adb      	ldrb	r3, [r3, #11]
 8007c1c:	b21b      	sxth	r3, r3
 8007c1e:	430b      	orrs	r3, r1
 8007c20:	b21b      	sxth	r3, r3
 8007c22:	b29b      	uxth	r3, r3
 8007c24:	009b      	lsls	r3, r3, #2
 8007c26:	4413      	add	r3, r2
 8007c28:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	7b1b      	ldrb	r3, [r3, #12]
 8007c2e:	837b      	strh	r3, [r7, #26]
 8007c30:	e013      	b.n	8007c5a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8007c32:	69fb      	ldr	r3, [r7, #28]
 8007c34:	881b      	ldrh	r3, [r3, #0]
 8007c36:	897a      	ldrh	r2, [r7, #10]
 8007c38:	429a      	cmp	r2, r3
 8007c3a:	d103      	bne.n	8007c44 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8007c3c:	69fb      	ldr	r3, [r7, #28]
 8007c3e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8007c42:	e010      	b.n	8007c66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8007c44:	69fb      	ldr	r3, [r7, #28]
 8007c46:	881b      	ldrh	r3, [r3, #0]
 8007c48:	897a      	ldrh	r2, [r7, #10]
 8007c4a:	429a      	cmp	r2, r3
 8007c4c:	d309      	bcc.n	8007c62 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8007c4e:	8b7b      	ldrh	r3, [r7, #26]
 8007c50:	3b01      	subs	r3, #1
 8007c52:	837b      	strh	r3, [r7, #26]
 8007c54:	69fb      	ldr	r3, [r7, #28]
 8007c56:	3304      	adds	r3, #4
 8007c58:	61fb      	str	r3, [r7, #28]
 8007c5a:	8b7b      	ldrh	r3, [r7, #26]
 8007c5c:	2b00      	cmp	r3, #0
 8007c5e:	d1e8      	bne.n	8007c32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8007c60:	e000      	b.n	8007c64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8007c62:	bf00      	nop
        }
    }
    return 0;
 8007c64:	2300      	movs	r3, #0
}
 8007c66:	4618      	mov	r0, r3
 8007c68:	3724      	adds	r7, #36	@ 0x24
 8007c6a:	46bd      	mov	sp, r7
 8007c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c70:	4770      	bx	lr
	...

08007c74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c74:	b580      	push	{r7, lr}
 8007c76:	af00      	add	r7, sp, #0
 8007c78:	4801      	ldr	r0, [pc, #4]	@ (8007c80 <__tcf_0+0xc>)
 8007c7a:	f7ff fee3 	bl	8007a44 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007c7e:	bd80      	pop	{r7, pc}
 8007c80:	200004e8 	.word	0x200004e8

08007c84 <_Z23getFont_verdana_10_4bppv>:
{
 8007c84:	b580      	push	{r7, lr}
 8007c86:	b08e      	sub	sp, #56	@ 0x38
 8007c88:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c8a:	4b20      	ldr	r3, [pc, #128]	@ (8007d0c <_Z23getFont_verdana_10_4bppv+0x88>)
 8007c8c:	e8d3 3faf 	lda	r3, [r3]
 8007c90:	f003 0301 	and.w	r3, r3, #1
 8007c94:	2b00      	cmp	r3, #0
 8007c96:	bf0c      	ite	eq
 8007c98:	2301      	moveq	r3, #1
 8007c9a:	2300      	movne	r3, #0
 8007c9c:	b2db      	uxtb	r3, r3
 8007c9e:	2b00      	cmp	r3, #0
 8007ca0:	d030      	beq.n	8007d04 <_Z23getFont_verdana_10_4bppv+0x80>
 8007ca2:	481a      	ldr	r0, [pc, #104]	@ (8007d0c <_Z23getFont_verdana_10_4bppv+0x88>)
 8007ca4:	f019 f9d5 	bl	8021052 <__cxa_guard_acquire>
 8007ca8:	4603      	mov	r3, r0
 8007caa:	2b00      	cmp	r3, #0
 8007cac:	bf14      	ite	ne
 8007cae:	2301      	movne	r3, #1
 8007cb0:	2300      	moveq	r3, #0
 8007cb2:	b2db      	uxtb	r3, r3
 8007cb4:	2b00      	cmp	r3, #0
 8007cb6:	d025      	beq.n	8007d04 <_Z23getFont_verdana_10_4bppv+0x80>
 8007cb8:	2300      	movs	r3, #0
 8007cba:	930c      	str	r3, [sp, #48]	@ 0x30
 8007cbc:	2300      	movs	r3, #0
 8007cbe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007cc0:	2300      	movs	r3, #0
 8007cc2:	930a      	str	r3, [sp, #40]	@ 0x28
 8007cc4:	233f      	movs	r3, #63	@ 0x3f
 8007cc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8007cc8:	4b11      	ldr	r3, [pc, #68]	@ (8007d10 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8007cca:	9308      	str	r3, [sp, #32]
 8007ccc:	4b11      	ldr	r3, [pc, #68]	@ (8007d14 <_Z23getFont_verdana_10_4bppv+0x90>)
 8007cce:	9307      	str	r3, [sp, #28]
 8007cd0:	2300      	movs	r3, #0
 8007cd2:	9306      	str	r3, [sp, #24]
 8007cd4:	2300      	movs	r3, #0
 8007cd6:	9305      	str	r3, [sp, #20]
 8007cd8:	2301      	movs	r3, #1
 8007cda:	9304      	str	r3, [sp, #16]
 8007cdc:	2304      	movs	r3, #4
 8007cde:	9303      	str	r3, [sp, #12]
 8007ce0:	2300      	movs	r3, #0
 8007ce2:	9302      	str	r3, [sp, #8]
 8007ce4:	2300      	movs	r3, #0
 8007ce6:	9301      	str	r3, [sp, #4]
 8007ce8:	230a      	movs	r3, #10
 8007cea:	9300      	str	r3, [sp, #0]
 8007cec:	230a      	movs	r3, #10
 8007cee:	2201      	movs	r2, #1
 8007cf0:	4909      	ldr	r1, [pc, #36]	@ (8007d18 <_Z23getFont_verdana_10_4bppv+0x94>)
 8007cf2:	480a      	ldr	r0, [pc, #40]	@ (8007d1c <_Z23getFont_verdana_10_4bppv+0x98>)
 8007cf4:	f7ff ff0c 	bl	8007b10 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cf8:	4809      	ldr	r0, [pc, #36]	@ (8007d20 <_Z23getFont_verdana_10_4bppv+0x9c>)
 8007cfa:	f019 f9f3 	bl	80210e4 <atexit>
 8007cfe:	4803      	ldr	r0, [pc, #12]	@ (8007d0c <_Z23getFont_verdana_10_4bppv+0x88>)
 8007d00:	f019 f9b3 	bl	802106a <__cxa_guard_release>
    return verdana_10_4bpp;
 8007d04:	4b05      	ldr	r3, [pc, #20]	@ (8007d1c <_Z23getFont_verdana_10_4bppv+0x98>)
}
 8007d06:	4618      	mov	r0, r3
 8007d08:	46bd      	mov	sp, r7
 8007d0a:	bd80      	pop	{r7, pc}
 8007d0c:	20000514 	.word	0x20000514
 8007d10:	08027bf8 	.word	0x08027bf8
 8007d14:	08027c04 	.word	0x08027c04
 8007d18:	08027ab0 	.word	0x08027ab0
 8007d1c:	200004e8 	.word	0x200004e8
 8007d20:	08007c75 	.word	0x08007c75

08007d24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007d24:	b580      	push	{r7, lr}
 8007d26:	af00      	add	r7, sp, #0
 8007d28:	4801      	ldr	r0, [pc, #4]	@ (8007d30 <__tcf_0+0xc>)
 8007d2a:	f7ff fe8b 	bl	8007a44 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007d2e:	bd80      	pop	{r7, pc}
 8007d30:	20000518 	.word	0x20000518

08007d34 <_Z23getFont_verdana_20_4bppv>:
{
 8007d34:	b580      	push	{r7, lr}
 8007d36:	b08e      	sub	sp, #56	@ 0x38
 8007d38:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007d3a:	4b20      	ldr	r3, [pc, #128]	@ (8007dbc <_Z23getFont_verdana_20_4bppv+0x88>)
 8007d3c:	e8d3 3faf 	lda	r3, [r3]
 8007d40:	f003 0301 	and.w	r3, r3, #1
 8007d44:	2b00      	cmp	r3, #0
 8007d46:	bf0c      	ite	eq
 8007d48:	2301      	moveq	r3, #1
 8007d4a:	2300      	movne	r3, #0
 8007d4c:	b2db      	uxtb	r3, r3
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d030      	beq.n	8007db4 <_Z23getFont_verdana_20_4bppv+0x80>
 8007d52:	481a      	ldr	r0, [pc, #104]	@ (8007dbc <_Z23getFont_verdana_20_4bppv+0x88>)
 8007d54:	f019 f97d 	bl	8021052 <__cxa_guard_acquire>
 8007d58:	4603      	mov	r3, r0
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	bf14      	ite	ne
 8007d5e:	2301      	movne	r3, #1
 8007d60:	2300      	moveq	r3, #0
 8007d62:	b2db      	uxtb	r3, r3
 8007d64:	2b00      	cmp	r3, #0
 8007d66:	d025      	beq.n	8007db4 <_Z23getFont_verdana_20_4bppv+0x80>
 8007d68:	2300      	movs	r3, #0
 8007d6a:	930c      	str	r3, [sp, #48]	@ 0x30
 8007d6c:	2300      	movs	r3, #0
 8007d6e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007d70:	2300      	movs	r3, #0
 8007d72:	930a      	str	r3, [sp, #40]	@ 0x28
 8007d74:	233f      	movs	r3, #63	@ 0x3f
 8007d76:	9309      	str	r3, [sp, #36]	@ 0x24
 8007d78:	4b11      	ldr	r3, [pc, #68]	@ (8007dc0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 8007d7a:	9308      	str	r3, [sp, #32]
 8007d7c:	4b11      	ldr	r3, [pc, #68]	@ (8007dc4 <_Z23getFont_verdana_20_4bppv+0x90>)
 8007d7e:	9307      	str	r3, [sp, #28]
 8007d80:	2300      	movs	r3, #0
 8007d82:	9306      	str	r3, [sp, #24]
 8007d84:	2300      	movs	r3, #0
 8007d86:	9305      	str	r3, [sp, #20]
 8007d88:	2301      	movs	r3, #1
 8007d8a:	9304      	str	r3, [sp, #16]
 8007d8c:	2304      	movs	r3, #4
 8007d8e:	9303      	str	r3, [sp, #12]
 8007d90:	2300      	movs	r3, #0
 8007d92:	9302      	str	r3, [sp, #8]
 8007d94:	2300      	movs	r3, #0
 8007d96:	9301      	str	r3, [sp, #4]
 8007d98:	2314      	movs	r3, #20
 8007d9a:	9300      	str	r3, [sp, #0]
 8007d9c:	2314      	movs	r3, #20
 8007d9e:	220b      	movs	r2, #11
 8007da0:	4909      	ldr	r1, [pc, #36]	@ (8007dc8 <_Z23getFont_verdana_20_4bppv+0x94>)
 8007da2:	480a      	ldr	r0, [pc, #40]	@ (8007dcc <_Z23getFont_verdana_20_4bppv+0x98>)
 8007da4:	f7ff feb4 	bl	8007b10 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007da8:	4809      	ldr	r0, [pc, #36]	@ (8007dd0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 8007daa:	f019 f99b 	bl	80210e4 <atexit>
 8007dae:	4803      	ldr	r0, [pc, #12]	@ (8007dbc <_Z23getFont_verdana_20_4bppv+0x88>)
 8007db0:	f019 f95b 	bl	802106a <__cxa_guard_release>
    return verdana_20_4bpp;
 8007db4:	4b05      	ldr	r3, [pc, #20]	@ (8007dcc <_Z23getFont_verdana_20_4bppv+0x98>)
}
 8007db6:	4618      	mov	r0, r3
 8007db8:	46bd      	mov	sp, r7
 8007dba:	bd80      	pop	{r7, pc}
 8007dbc:	20000544 	.word	0x20000544
 8007dc0:	08027bfc 	.word	0x08027bfc
 8007dc4:	08027c08 	.word	0x08027c08
 8007dc8:	08027ac0 	.word	0x08027ac0
 8007dcc:	20000518 	.word	0x20000518
 8007dd0:	08007d25 	.word	0x08007d25

08007dd4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_80_4bpp();

touchgfx::GeneratedFont& getFont_verdana_80_4bpp()
{
    static touchgfx::GeneratedFont verdana_80_4bpp(glyphs_verdana_80_4bpp, 11, 81, 80, 0, 0, 4, 1, 0, 0, unicodes_verdana_80_4bpp, kerning_verdana_80_4bpp, 63, 0, 0, 0);
 8007dd4:	b580      	push	{r7, lr}
 8007dd6:	af00      	add	r7, sp, #0
 8007dd8:	4801      	ldr	r0, [pc, #4]	@ (8007de0 <__tcf_0+0xc>)
 8007dda:	f7ff fe33 	bl	8007a44 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007dde:	bd80      	pop	{r7, pc}
 8007de0:	20000548 	.word	0x20000548

08007de4 <_Z23getFont_verdana_80_4bppv>:
{
 8007de4:	b580      	push	{r7, lr}
 8007de6:	b08e      	sub	sp, #56	@ 0x38
 8007de8:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_80_4bpp(glyphs_verdana_80_4bpp, 11, 81, 80, 0, 0, 4, 1, 0, 0, unicodes_verdana_80_4bpp, kerning_verdana_80_4bpp, 63, 0, 0, 0);
 8007dea:	4b20      	ldr	r3, [pc, #128]	@ (8007e6c <_Z23getFont_verdana_80_4bppv+0x88>)
 8007dec:	e8d3 3faf 	lda	r3, [r3]
 8007df0:	f003 0301 	and.w	r3, r3, #1
 8007df4:	2b00      	cmp	r3, #0
 8007df6:	bf0c      	ite	eq
 8007df8:	2301      	moveq	r3, #1
 8007dfa:	2300      	movne	r3, #0
 8007dfc:	b2db      	uxtb	r3, r3
 8007dfe:	2b00      	cmp	r3, #0
 8007e00:	d030      	beq.n	8007e64 <_Z23getFont_verdana_80_4bppv+0x80>
 8007e02:	481a      	ldr	r0, [pc, #104]	@ (8007e6c <_Z23getFont_verdana_80_4bppv+0x88>)
 8007e04:	f019 f925 	bl	8021052 <__cxa_guard_acquire>
 8007e08:	4603      	mov	r3, r0
 8007e0a:	2b00      	cmp	r3, #0
 8007e0c:	bf14      	ite	ne
 8007e0e:	2301      	movne	r3, #1
 8007e10:	2300      	moveq	r3, #0
 8007e12:	b2db      	uxtb	r3, r3
 8007e14:	2b00      	cmp	r3, #0
 8007e16:	d025      	beq.n	8007e64 <_Z23getFont_verdana_80_4bppv+0x80>
 8007e18:	2300      	movs	r3, #0
 8007e1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8007e1c:	2300      	movs	r3, #0
 8007e1e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007e20:	2300      	movs	r3, #0
 8007e22:	930a      	str	r3, [sp, #40]	@ 0x28
 8007e24:	233f      	movs	r3, #63	@ 0x3f
 8007e26:	9309      	str	r3, [sp, #36]	@ 0x24
 8007e28:	4b11      	ldr	r3, [pc, #68]	@ (8007e70 <_Z23getFont_verdana_80_4bppv+0x8c>)
 8007e2a:	9308      	str	r3, [sp, #32]
 8007e2c:	4b11      	ldr	r3, [pc, #68]	@ (8007e74 <_Z23getFont_verdana_80_4bppv+0x90>)
 8007e2e:	9307      	str	r3, [sp, #28]
 8007e30:	2300      	movs	r3, #0
 8007e32:	9306      	str	r3, [sp, #24]
 8007e34:	2300      	movs	r3, #0
 8007e36:	9305      	str	r3, [sp, #20]
 8007e38:	2301      	movs	r3, #1
 8007e3a:	9304      	str	r3, [sp, #16]
 8007e3c:	2304      	movs	r3, #4
 8007e3e:	9303      	str	r3, [sp, #12]
 8007e40:	2300      	movs	r3, #0
 8007e42:	9302      	str	r3, [sp, #8]
 8007e44:	2300      	movs	r3, #0
 8007e46:	9301      	str	r3, [sp, #4]
 8007e48:	2350      	movs	r3, #80	@ 0x50
 8007e4a:	9300      	str	r3, [sp, #0]
 8007e4c:	2351      	movs	r3, #81	@ 0x51
 8007e4e:	220b      	movs	r2, #11
 8007e50:	4909      	ldr	r1, [pc, #36]	@ (8007e78 <_Z23getFont_verdana_80_4bppv+0x94>)
 8007e52:	480a      	ldr	r0, [pc, #40]	@ (8007e7c <_Z23getFont_verdana_80_4bppv+0x98>)
 8007e54:	f7ff fe5c 	bl	8007b10 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e58:	4809      	ldr	r0, [pc, #36]	@ (8007e80 <_Z23getFont_verdana_80_4bppv+0x9c>)
 8007e5a:	f019 f943 	bl	80210e4 <atexit>
 8007e5e:	4803      	ldr	r0, [pc, #12]	@ (8007e6c <_Z23getFont_verdana_80_4bppv+0x88>)
 8007e60:	f019 f903 	bl	802106a <__cxa_guard_release>
    return verdana_80_4bpp;
 8007e64:	4b05      	ldr	r3, [pc, #20]	@ (8007e7c <_Z23getFont_verdana_80_4bppv+0x98>)
}
 8007e66:	4618      	mov	r0, r3
 8007e68:	46bd      	mov	sp, r7
 8007e6a:	bd80      	pop	{r7, pc}
 8007e6c:	20000574 	.word	0x20000574
 8007e70:	08027c00 	.word	0x08027c00
 8007e74:	08027c0c 	.word	0x08027c0c
 8007e78:	08027b5c 	.word	0x08027b5c
 8007e7c:	20000548 	.word	0x20000548
 8007e80:	08007dd5 	.word	0x08007dd5

08007e84 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8007e84:	b480      	push	{r7}
 8007e86:	b083      	sub	sp, #12
 8007e88:	af00      	add	r7, sp, #0
 8007e8a:	6078      	str	r0, [r7, #4]
 8007e8c:	6039      	str	r1, [r7, #0]
 8007e8e:	683b      	ldr	r3, [r7, #0]
 8007e90:	4618      	mov	r0, r3
 8007e92:	370c      	adds	r7, #12
 8007e94:	46bd      	mov	sp, r7
 8007e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e9a:	4770      	bx	lr

08007e9c <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007e9c:	b480      	push	{r7}
 8007e9e:	b083      	sub	sp, #12
 8007ea0:	af00      	add	r7, sp, #0
 8007ea2:	6078      	str	r0, [r7, #4]
 8007ea4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007ea6:	bf00      	nop
 8007ea8:	370c      	adds	r7, #12
 8007eaa:	46bd      	mov	sp, r7
 8007eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eb0:	4770      	bx	lr

08007eb2 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8007eb2:	b480      	push	{r7}
 8007eb4:	b083      	sub	sp, #12
 8007eb6:	af00      	add	r7, sp, #0
 8007eb8:	6078      	str	r0, [r7, #4]
 8007eba:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007ebc:	bf00      	nop
 8007ebe:	370c      	adds	r7, #12
 8007ec0:	46bd      	mov	sp, r7
 8007ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ec6:	4770      	bx	lr

08007ec8 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8007ec8:	b480      	push	{r7}
 8007eca:	b083      	sub	sp, #12
 8007ecc:	af00      	add	r7, sp, #0
 8007ece:	6078      	str	r0, [r7, #4]
 8007ed0:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007ed2:	bf00      	nop
 8007ed4:	370c      	adds	r7, #12
 8007ed6:	46bd      	mov	sp, r7
 8007ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007edc:	4770      	bx	lr

08007ede <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8007ede:	b480      	push	{r7}
 8007ee0:	b083      	sub	sp, #12
 8007ee2:	af00      	add	r7, sp, #0
 8007ee4:	6078      	str	r0, [r7, #4]
 8007ee6:	460b      	mov	r3, r1
 8007ee8:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 8007eea:	bf00      	nop
 8007eec:	370c      	adds	r7, #12
 8007eee:	46bd      	mov	sp, r7
 8007ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef4:	4770      	bx	lr

08007ef6 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8007ef6:	b480      	push	{r7}
 8007ef8:	b083      	sub	sp, #12
 8007efa:	af00      	add	r7, sp, #0
 8007efc:	6078      	str	r0, [r7, #4]
    {
    }
 8007efe:	bf00      	nop
 8007f00:	370c      	adds	r7, #12
 8007f02:	46bd      	mov	sp, r7
 8007f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f08:	4770      	bx	lr

08007f0a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8007f0a:	b480      	push	{r7}
 8007f0c:	b083      	sub	sp, #12
 8007f0e:	af00      	add	r7, sp, #0
 8007f10:	6078      	str	r0, [r7, #4]
    {
    }
 8007f12:	bf00      	nop
 8007f14:	370c      	adds	r7, #12
 8007f16:	46bd      	mov	sp, r7
 8007f18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f1c:	4770      	bx	lr
	...

08007f20 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8007f20:	b480      	push	{r7}
 8007f22:	b083      	sub	sp, #12
 8007f24:	af00      	add	r7, sp, #0
 8007f26:	6078      	str	r0, [r7, #4]
    {
 8007f28:	4a04      	ldr	r2, [pc, #16]	@ (8007f3c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	601a      	str	r2, [r3, #0]
    }
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	4618      	mov	r0, r3
 8007f32:	370c      	adds	r7, #12
 8007f34:	46bd      	mov	sp, r7
 8007f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f3a:	4770      	bx	lr
 8007f3c:	08023398 	.word	0x08023398

08007f40 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8007f40:	b580      	push	{r7, lr}
 8007f42:	b082      	sub	sp, #8
 8007f44:	af00      	add	r7, sp, #0
 8007f46:	6078      	str	r0, [r7, #4]
    }
 8007f48:	6878      	ldr	r0, [r7, #4]
 8007f4a:	f7ff ffe9 	bl	8007f20 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007f4e:	2104      	movs	r1, #4
 8007f50:	6878      	ldr	r0, [r7, #4]
 8007f52:	f019 f87c 	bl	802104e <_ZdlPvj>
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	4618      	mov	r0, r3
 8007f5a:	3708      	adds	r7, #8
 8007f5c:	46bd      	mov	sp, r7
 8007f5e:	bd80      	pop	{r7, pc}

08007f60 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8007f60:	b480      	push	{r7}
 8007f62:	b083      	sub	sp, #12
 8007f64:	af00      	add	r7, sp, #0
 8007f66:	6078      	str	r0, [r7, #4]
    {
    }
 8007f68:	bf00      	nop
 8007f6a:	370c      	adds	r7, #12
 8007f6c:	46bd      	mov	sp, r7
 8007f6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f72:	4770      	bx	lr

08007f74 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8007f74:	b480      	push	{r7}
 8007f76:	b083      	sub	sp, #12
 8007f78:	af00      	add	r7, sp, #0
 8007f7a:	6078      	str	r0, [r7, #4]
 8007f7c:	460b      	mov	r3, r1
 8007f7e:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 8007f80:	bf00      	nop
 8007f82:	370c      	adds	r7, #12
 8007f84:	46bd      	mov	sp, r7
 8007f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f8a:	4770      	bx	lr

08007f8c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8007f8c:	b480      	push	{r7}
 8007f8e:	b083      	sub	sp, #12
 8007f90:	af00      	add	r7, sp, #0
 8007f92:	6078      	str	r0, [r7, #4]
 8007f94:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	683a      	ldr	r2, [r7, #0]
 8007f9a:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 8007f9e:	6810      	ldr	r0, [r2, #0]
 8007fa0:	6851      	ldr	r1, [r2, #4]
 8007fa2:	c303      	stmia	r3!, {r0, r1}
    }
 8007fa4:	bf00      	nop
 8007fa6:	370c      	adds	r7, #12
 8007fa8:	46bd      	mov	sp, r7
 8007faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fae:	4770      	bx	lr

08007fb0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8007fb0:	b580      	push	{r7, lr}
 8007fb2:	b082      	sub	sp, #8
 8007fb4:	af00      	add	r7, sp, #0
 8007fb6:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8007fb8:	687b      	ldr	r3, [r7, #4]
 8007fba:	3304      	adds	r3, #4
 8007fbc:	4618      	mov	r0, r3
 8007fbe:	f007 fbaa 	bl	800f716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 8007fc2:	bf00      	nop
 8007fc4:	3708      	adds	r7, #8
 8007fc6:	46bd      	mov	sp, r7
 8007fc8:	bd80      	pop	{r7, pc}
	...

08007fcc <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8007fcc:	b480      	push	{r7}
 8007fce:	b083      	sub	sp, #12
 8007fd0:	af00      	add	r7, sp, #0
 8007fd2:	6078      	str	r0, [r7, #4]
    {
 8007fd4:	4a04      	ldr	r2, [pc, #16]	@ (8007fe8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	601a      	str	r2, [r3, #0]
    }
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	4618      	mov	r0, r3
 8007fde:	370c      	adds	r7, #12
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe6:	4770      	bx	lr
 8007fe8:	08023380 	.word	0x08023380

08007fec <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8007fec:	b580      	push	{r7, lr}
 8007fee:	b082      	sub	sp, #8
 8007ff0:	af00      	add	r7, sp, #0
 8007ff2:	6078      	str	r0, [r7, #4]
    }
 8007ff4:	6878      	ldr	r0, [r7, #4]
 8007ff6:	f7ff ffe9 	bl	8007fcc <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8007ffa:	2104      	movs	r1, #4
 8007ffc:	6878      	ldr	r0, [r7, #4]
 8007ffe:	f019 f826 	bl	802104e <_ZdlPvj>
 8008002:	687b      	ldr	r3, [r7, #4]
 8008004:	4618      	mov	r0, r3
 8008006:	3708      	adds	r7, #8
 8008008:	46bd      	mov	sp, r7
 800800a:	bd80      	pop	{r7, pc}

0800800c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800800c:	b480      	push	{r7}
 800800e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8008010:	4b0b      	ldr	r3, [pc, #44]	@ (8008040 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008012:	681b      	ldr	r3, [r3, #0]
 8008014:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8008018:	2b00      	cmp	r3, #0
 800801a:	d008      	beq.n	800802e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800801c:	4b08      	ldr	r3, [pc, #32]	@ (8008040 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800801e:	681b      	ldr	r3, [r3, #0]
 8008020:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008022:	2b00      	cmp	r3, #0
 8008024:	d003      	beq.n	800802e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8008026:	4b06      	ldr	r3, [pc, #24]	@ (8008040 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008028:	681b      	ldr	r3, [r3, #0]
 800802a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800802c:	e002      	b.n	8008034 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800802e:	4b04      	ldr	r3, [pc, #16]	@ (8008040 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008030:	681b      	ldr	r3, [r3, #0]
 8008032:	689b      	ldr	r3, [r3, #8]
    }
 8008034:	4618      	mov	r0, r3
 8008036:	46bd      	mov	sp, r7
 8008038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800803c:	4770      	bx	lr
 800803e:	bf00      	nop
 8008040:	20002230 	.word	0x20002230

08008044 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8008044:	b480      	push	{r7}
 8008046:	b083      	sub	sp, #12
 8008048:	af00      	add	r7, sp, #0
 800804a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800804c:	4a07      	ldr	r2, [pc, #28]	@ (800806c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800804e:	687b      	ldr	r3, [r7, #4]
 8008050:	601a      	str	r2, [r3, #0]
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	2200      	movs	r2, #0
 8008056:	605a      	str	r2, [r3, #4]
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	2200      	movs	r2, #0
 800805c:	721a      	strb	r2, [r3, #8]
    {
    }
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	4618      	mov	r0, r3
 8008062:	370c      	adds	r7, #12
 8008064:	46bd      	mov	sp, r7
 8008066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800806a:	4770      	bx	lr
 800806c:	0802335c 	.word	0x0802335c

08008070 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8008070:	b480      	push	{r7}
 8008072:	b083      	sub	sp, #12
 8008074:	af00      	add	r7, sp, #0
 8008076:	6078      	str	r0, [r7, #4]
    {
 8008078:	4a04      	ldr	r2, [pc, #16]	@ (800808c <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	601a      	str	r2, [r3, #0]
    }
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	4618      	mov	r0, r3
 8008082:	370c      	adds	r7, #12
 8008084:	46bd      	mov	sp, r7
 8008086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808a:	4770      	bx	lr
 800808c:	0802335c 	.word	0x0802335c

08008090 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008090:	b580      	push	{r7, lr}
 8008092:	b082      	sub	sp, #8
 8008094:	af00      	add	r7, sp, #0
 8008096:	6078      	str	r0, [r7, #4]
    }
 8008098:	6878      	ldr	r0, [r7, #4]
 800809a:	f7ff ffe9 	bl	8008070 <_ZN8touchgfx10TransitionD1Ev>
 800809e:	210c      	movs	r1, #12
 80080a0:	6878      	ldr	r0, [r7, #4]
 80080a2:	f018 ffd4 	bl	802104e <_ZdlPvj>
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	4618      	mov	r0, r3
 80080aa:	3708      	adds	r7, #8
 80080ac:	46bd      	mov	sp, r7
 80080ae:	bd80      	pop	{r7, pc}

080080b0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 80080b0:	b480      	push	{r7}
 80080b2:	b083      	sub	sp, #12
 80080b4:	af00      	add	r7, sp, #0
 80080b6:	6078      	str	r0, [r7, #4]
    {
    }
 80080b8:	bf00      	nop
 80080ba:	370c      	adds	r7, #12
 80080bc:	46bd      	mov	sp, r7
 80080be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080c2:	4770      	bx	lr

080080c4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 80080c4:	b480      	push	{r7}
 80080c6:	b083      	sub	sp, #12
 80080c8:	af00      	add	r7, sp, #0
 80080ca:	6078      	str	r0, [r7, #4]
    {
    }
 80080cc:	bf00      	nop
 80080ce:	370c      	adds	r7, #12
 80080d0:	46bd      	mov	sp, r7
 80080d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080d6:	4770      	bx	lr

080080d8 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 80080d8:	b480      	push	{r7}
 80080da:	b083      	sub	sp, #12
 80080dc:	af00      	add	r7, sp, #0
 80080de:	6078      	str	r0, [r7, #4]
    {
    }
 80080e0:	bf00      	nop
 80080e2:	370c      	adds	r7, #12
 80080e4:	46bd      	mov	sp, r7
 80080e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080ea:	4770      	bx	lr

080080ec <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 80080ec:	b580      	push	{r7, lr}
 80080ee:	b082      	sub	sp, #8
 80080f0:	af00      	add	r7, sp, #0
 80080f2:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 80080f4:	f007 faea 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 80080f8:	4603      	mov	r3, r0
 80080fa:	681a      	ldr	r2, [r3, #0]
 80080fc:	323c      	adds	r2, #60	@ 0x3c
 80080fe:	6812      	ldr	r2, [r2, #0]
 8008100:	4618      	mov	r0, r3
 8008102:	4790      	blx	r2
    }
 8008104:	bf00      	nop
 8008106:	3708      	adds	r7, #8
 8008108:	46bd      	mov	sp, r7
 800810a:	bd80      	pop	{r7, pc}

0800810c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800810c:	b480      	push	{r7}
 800810e:	b083      	sub	sp, #12
 8008110:	af00      	add	r7, sp, #0
 8008112:	6078      	str	r0, [r7, #4]
 8008114:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	683a      	ldr	r2, [r7, #0]
 800811a:	605a      	str	r2, [r3, #4]
    }
 800811c:	bf00      	nop
 800811e:	370c      	adds	r7, #12
 8008120:	46bd      	mov	sp, r7
 8008122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008126:	4770      	bx	lr

08008128 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008128:	b580      	push	{r7, lr}
 800812a:	b082      	sub	sp, #8
 800812c:	af00      	add	r7, sp, #0
 800812e:	6078      	str	r0, [r7, #4]
 8008130:	4a05      	ldr	r2, [pc, #20]	@ (8008148 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8008132:	687b      	ldr	r3, [r7, #4]
 8008134:	601a      	str	r2, [r3, #0]
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	4618      	mov	r0, r3
 800813a:	f7ff fef1 	bl	8007f20 <_ZN8touchgfx15UIEventListenerD1Ev>
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	4618      	mov	r0, r3
 8008142:	3708      	adds	r7, #8
 8008144:	46bd      	mov	sp, r7
 8008146:	bd80      	pop	{r7, pc}
 8008148:	08023e28 	.word	0x08023e28

0800814c <_ZN8touchgfx11ApplicationD0Ev>:
 800814c:	b580      	push	{r7, lr}
 800814e:	b082      	sub	sp, #8
 8008150:	af00      	add	r7, sp, #0
 8008152:	6078      	str	r0, [r7, #4]
 8008154:	6878      	ldr	r0, [r7, #4]
 8008156:	f7ff ffe7 	bl	8008128 <_ZN8touchgfx11ApplicationD1Ev>
 800815a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800815e:	6878      	ldr	r0, [r7, #4]
 8008160:	f018 ff75 	bl	802104e <_ZdlPvj>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	4618      	mov	r0, r3
 8008168:	3708      	adds	r7, #8
 800816a:	46bd      	mov	sp, r7
 800816c:	bd80      	pop	{r7, pc}
	...

08008170 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8008170:	b580      	push	{r7, lr}
 8008172:	b082      	sub	sp, #8
 8008174:	af00      	add	r7, sp, #0
 8008176:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	4618      	mov	r0, r3
 800817c:	f007 fb68 	bl	800f850 <_ZN8touchgfx11ApplicationC1Ev>
 8008180:	4a09      	ldr	r2, [pc, #36]	@ (80081a8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8008186:	687b      	ldr	r3, [r7, #4]
 8008188:	2200      	movs	r2, #0
 800818a:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	2200      	movs	r2, #0
 8008192:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	4a04      	ldr	r2, [pc, #16]	@ (80081ac <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800819a:	6013      	str	r3, [r2, #0]
    }
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	4618      	mov	r0, r3
 80081a0:	3708      	adds	r7, #8
 80081a2:	46bd      	mov	sp, r7
 80081a4:	bd80      	pop	{r7, pc}
 80081a6:	bf00      	nop
 80081a8:	08023308 	.word	0x08023308
 80081ac:	2000227c 	.word	0x2000227c

080081b0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80081b0:	b580      	push	{r7, lr}
 80081b2:	b082      	sub	sp, #8
 80081b4:	af00      	add	r7, sp, #0
 80081b6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80081b8:	6878      	ldr	r0, [r7, #4]
 80081ba:	f000 f804 	bl	80081c6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80081be:	bf00      	nop
 80081c0:	3708      	adds	r7, #8
 80081c2:	46bd      	mov	sp, r7
 80081c4:	bd80      	pop	{r7, pc}

080081c6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80081c6:	b580      	push	{r7, lr}
 80081c8:	b082      	sub	sp, #8
 80081ca:	af00      	add	r7, sp, #0
 80081cc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80081d4:	2b00      	cmp	r3, #0
 80081d6:	d00f      	beq.n	80081f8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80081e4:	681b      	ldr	r3, [r3, #0]
 80081e6:	330c      	adds	r3, #12
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	4610      	mov	r0, r2
 80081ec:	4798      	blx	r3
 80081ee:	4603      	mov	r3, r0
 80081f0:	2b00      	cmp	r3, #0
 80081f2:	d001      	beq.n	80081f8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80081f4:	2301      	movs	r3, #1
 80081f6:	e000      	b.n	80081fa <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80081f8:	2300      	movs	r3, #0
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d00e      	beq.n	800821c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	3308      	adds	r3, #8
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	4610      	mov	r0, r2
 8008212:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	2200      	movs	r2, #0
 8008218:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800821c:	bf00      	nop
 800821e:	3708      	adds	r7, #8
 8008220:	46bd      	mov	sp, r7
 8008222:	bd80      	pop	{r7, pc}

08008224 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8008224:	b480      	push	{r7}
 8008226:	b083      	sub	sp, #12
 8008228:	af00      	add	r7, sp, #0
 800822a:	6078      	str	r0, [r7, #4]
 800822c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	683a      	ldr	r2, [r7, #0]
 8008232:	601a      	str	r2, [r3, #0]
    }
 8008234:	bf00      	nop
 8008236:	370c      	adds	r7, #12
 8008238:	46bd      	mov	sp, r7
 800823a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800823e:	4770      	bx	lr

08008240 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8008240:	b580      	push	{r7, lr}
 8008242:	b082      	sub	sp, #8
 8008244:	af00      	add	r7, sp, #0
 8008246:	6078      	str	r0, [r7, #4]
 8008248:	4a05      	ldr	r2, [pc, #20]	@ (8008260 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	601a      	str	r2, [r3, #0]
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	4618      	mov	r0, r3
 8008252:	f7ff ff69 	bl	8008128 <_ZN8touchgfx11ApplicationD1Ev>
 8008256:	687b      	ldr	r3, [r7, #4]
 8008258:	4618      	mov	r0, r3
 800825a:	3708      	adds	r7, #8
 800825c:	46bd      	mov	sp, r7
 800825e:	bd80      	pop	{r7, pc}
 8008260:	08023308 	.word	0x08023308

08008264 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8008264:	b580      	push	{r7, lr}
 8008266:	b082      	sub	sp, #8
 8008268:	af00      	add	r7, sp, #0
 800826a:	6078      	str	r0, [r7, #4]
 800826c:	6878      	ldr	r0, [r7, #4]
 800826e:	f7ff ffe7 	bl	8008240 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008272:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8008276:	6878      	ldr	r0, [r7, #4]
 8008278:	f018 fee9 	bl	802104e <_ZdlPvj>
 800827c:	687b      	ldr	r3, [r7, #4]
 800827e:	4618      	mov	r0, r3
 8008280:	3708      	adds	r7, #8
 8008282:	46bd      	mov	sp, r7
 8008284:	bd80      	pop	{r7, pc}
	...

08008288 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008288:	b580      	push	{r7, lr}
 800828a:	b082      	sub	sp, #8
 800828c:	af00      	add	r7, sp, #0
 800828e:	6078      	str	r0, [r7, #4]
 8008290:	4a08      	ldr	r2, [pc, #32]	@ (80082b4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008292:	687b      	ldr	r3, [r7, #4]
 8008294:	601a      	str	r2, [r3, #0]
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800829c:	4618      	mov	r0, r3
 800829e:	f000 fad3 	bl	8008848 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	4618      	mov	r0, r3
 80082a6:	f7ff ffcb 	bl	8008240 <_ZN8touchgfx14MVPApplicationD1Ev>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	4618      	mov	r0, r3
 80082ae:	3708      	adds	r7, #8
 80082b0:	46bd      	mov	sp, r7
 80082b2:	bd80      	pop	{r7, pc}
 80082b4:	0802329c 	.word	0x0802329c

080082b8 <_ZN23FrontendApplicationBaseD0Ev>:
 80082b8:	b580      	push	{r7, lr}
 80082ba:	b082      	sub	sp, #8
 80082bc:	af00      	add	r7, sp, #0
 80082be:	6078      	str	r0, [r7, #4]
 80082c0:	6878      	ldr	r0, [r7, #4]
 80082c2:	f7ff ffe1 	bl	8008288 <_ZN23FrontendApplicationBaseD1Ev>
 80082c6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80082ca:	6878      	ldr	r0, [r7, #4]
 80082cc:	f018 febf 	bl	802104e <_ZdlPvj>
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	4618      	mov	r0, r3
 80082d4:	3708      	adds	r7, #8
 80082d6:	46bd      	mov	sp, r7
 80082d8:	bd80      	pop	{r7, pc}

080082da <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 80082da:	b580      	push	{r7, lr}
 80082dc:	b082      	sub	sp, #8
 80082de:	af00      	add	r7, sp, #0
 80082e0:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 80082e2:	6878      	ldr	r0, [r7, #4]
 80082e4:	f000 f888 	bl	80083f8 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 80082e8:	bf00      	nop
 80082ea:	3708      	adds	r7, #8
 80082ec:	46bd      	mov	sp, r7
 80082ee:	bd80      	pop	{r7, pc}

080082f0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 80082f0:	b480      	push	{r7}
 80082f2:	b083      	sub	sp, #12
 80082f4:	af00      	add	r7, sp, #0
 80082f6:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80082f8:	687b      	ldr	r3, [r7, #4]
 80082fa:	2201      	movs	r2, #1
 80082fc:	721a      	strb	r2, [r3, #8]
    }
 80082fe:	bf00      	nop
 8008300:	370c      	adds	r7, #12
 8008302:	46bd      	mov	sp, r7
 8008304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008308:	4770      	bx	lr

0800830a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800830a:	b480      	push	{r7}
 800830c:	b083      	sub	sp, #12
 800830e:	af00      	add	r7, sp, #0
 8008310:	6078      	str	r0, [r7, #4]
 8008312:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008314:	687b      	ldr	r3, [r7, #4]
 8008316:	683a      	ldr	r2, [r7, #0]
 8008318:	605a      	str	r2, [r3, #4]
    }
 800831a:	bf00      	nop
 800831c:	370c      	adds	r7, #12
 800831e:	46bd      	mov	sp, r7
 8008320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008324:	4770      	bx	lr
	...

08008328 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008328:	b580      	push	{r7, lr}
 800832a:	b084      	sub	sp, #16
 800832c:	af00      	add	r7, sp, #0
 800832e:	60f8      	str	r0, [r7, #12]
 8008330:	60b9      	str	r1, [r7, #8]
 8008332:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008334:	68fb      	ldr	r3, [r7, #12]
 8008336:	4618      	mov	r0, r3
 8008338:	f7ff ff1a 	bl	8008170 <_ZN8touchgfx14MVPApplicationC1Ev>
 800833c:	4a19      	ldr	r2, [pc, #100]	@ (80083a4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 800833e:	68fb      	ldr	r3, [r7, #12]
 8008340:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8008342:	68fb      	ldr	r3, [r7, #12]
 8008344:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008348:	4618      	mov	r0, r3
 800834a:	f000 f8ab 	bl	80084a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800834e:	68fb      	ldr	r3, [r7, #12]
 8008350:	687a      	ldr	r2, [r7, #4]
 8008352:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8008356:	68fb      	ldr	r3, [r7, #12]
 8008358:	68ba      	ldr	r2, [r7, #8]
 800835a:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800835e:	f7ff fb93 	bl	8007a88 <_ZN8touchgfx3HAL11getInstanceEv>
 8008362:	4603      	mov	r3, r0
 8008364:	681a      	ldr	r2, [r3, #0]
 8008366:	3208      	adds	r2, #8
 8008368:	6812      	ldr	r2, [r2, #0]
 800836a:	2100      	movs	r1, #0
 800836c:	4618      	mov	r0, r3
 800836e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008370:	2000      	movs	r0, #0
 8008372:	f001 fb9d 	bl	8009ab0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008376:	f7ff fe49 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800837a:	4603      	mov	r3, r0
 800837c:	4618      	mov	r0, r3
 800837e:	f011 fad4 	bl	801992a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8008382:	f7ff fe43 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 8008386:	4603      	mov	r3, r0
 8008388:	4618      	mov	r0, r3
 800838a:	f011 fb45 	bl	8019a18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800838e:	f7ff fe3d 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 8008392:	4603      	mov	r3, r0
 8008394:	4618      	mov	r0, r3
 8008396:	f011 fb4b 	bl	8019a30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800839a:	68fb      	ldr	r3, [r7, #12]
 800839c:	4618      	mov	r0, r3
 800839e:	3710      	adds	r7, #16
 80083a0:	46bd      	mov	sp, r7
 80083a2:	bd80      	pop	{r7, pc}
 80083a4:	0802329c 	.word	0x0802329c

080083a8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 80083a8:	b480      	push	{r7}
 80083aa:	b083      	sub	sp, #12
 80083ac:	af00      	add	r7, sp, #0
 80083ae:	6078      	str	r0, [r7, #4]
 80083b0:	6039      	str	r1, [r7, #0]
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	4618      	mov	r0, r3
 80083b6:	370c      	adds	r7, #12
 80083b8:	46bd      	mov	sp, r7
 80083ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083be:	4770      	bx	lr

080083c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80083c0:	b580      	push	{r7, lr}
 80083c2:	b082      	sub	sp, #8
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	6078      	str	r0, [r7, #4]
 80083c8:	6039      	str	r1, [r7, #0]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	683a      	ldr	r2, [r7, #0]
 80083ce:	4611      	mov	r1, r2
 80083d0:	4618      	mov	r0, r3
 80083d2:	f7ff ffe9 	bl	80083a8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 80083d6:	683b      	ldr	r3, [r7, #0]
 80083d8:	685a      	ldr	r2, [r3, #4]
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	605a      	str	r2, [r3, #4]
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	683a      	ldr	r2, [r7, #0]
 80083e2:	3308      	adds	r3, #8
 80083e4:	3208      	adds	r2, #8
 80083e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80083ea:	e883 0003 	stmia.w	r3, {r0, r1}
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	4618      	mov	r0, r3
 80083f2:	3708      	adds	r7, #8
 80083f4:	46bd      	mov	sp, r7
 80083f6:	bd80      	pop	{r7, pc}

080083f8 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 80083f8:	b590      	push	{r4, r7, lr}
 80083fa:	b089      	sub	sp, #36	@ 0x24
 80083fc:	af00      	add	r7, sp, #0
 80083fe:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008406:	4b10      	ldr	r3, [pc, #64]	@ (8008448 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 8008408:	61bb      	str	r3, [r7, #24]
 800840a:	2300      	movs	r3, #0
 800840c:	61fb      	str	r3, [r7, #28]
 800840e:	f107 0008 	add.w	r0, r7, #8
 8008412:	f107 0318 	add.w	r3, r7, #24
 8008416:	cb0c      	ldmia	r3, {r2, r3}
 8008418:	6879      	ldr	r1, [r7, #4]
 800841a:	f000 f85f 	bl	80084dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800841e:	f107 0308 	add.w	r3, r7, #8
 8008422:	4619      	mov	r1, r3
 8008424:	4620      	mov	r0, r4
 8008426:	f7ff ffcb 	bl	80083c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800842a:	f107 0308 	add.w	r3, r7, #8
 800842e:	4618      	mov	r0, r3
 8008430:	f000 fa0a 	bl	8008848 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008440:	bf00      	nop
 8008442:	3724      	adds	r7, #36	@ 0x24
 8008444:	46bd      	mov	sp, r7
 8008446:	bd90      	pop	{r4, r7, pc}
 8008448:	0800844d 	.word	0x0800844d

0800844c <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 800844c:	b580      	push	{r7, lr}
 800844e:	b084      	sub	sp, #16
 8008450:	af02      	add	r7, sp, #8
 8008452:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008454:	687b      	ldr	r3, [r7, #4]
 8008456:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008460:	461a      	mov	r2, r3
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008468:	9300      	str	r3, [sp, #0]
 800846a:	4b04      	ldr	r3, [pc, #16]	@ (800847c <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 800846c:	4804      	ldr	r0, [pc, #16]	@ (8008480 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 800846e:	f000 f867 	bl	8008540 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008472:	bf00      	nop
 8008474:	3708      	adds	r7, #8
 8008476:	46bd      	mov	sp, r7
 8008478:	bd80      	pop	{r7, pc}
 800847a:	bf00      	nop
 800847c:	20002270 	.word	0x20002270
 8008480:	2000226c 	.word	0x2000226c

08008484 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008484:	b480      	push	{r7}
 8008486:	b083      	sub	sp, #12
 8008488:	af00      	add	r7, sp, #0
 800848a:	6078      	str	r0, [r7, #4]
 800848c:	4a04      	ldr	r2, [pc, #16]	@ (80084a0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800848e:	687b      	ldr	r3, [r7, #4]
 8008490:	601a      	str	r2, [r3, #0]
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	4618      	mov	r0, r3
 8008496:	370c      	adds	r7, #12
 8008498:	46bd      	mov	sp, r7
 800849a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800849e:	4770      	bx	lr
 80084a0:	08023380 	.word	0x08023380

080084a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 80084a4:	b580      	push	{r7, lr}
 80084a6:	b082      	sub	sp, #8
 80084a8:	af00      	add	r7, sp, #0
 80084aa:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	4618      	mov	r0, r3
 80084b0:	f7ff ffe8 	bl	8008484 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80084b4:	4a08      	ldr	r2, [pc, #32]	@ (80084d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	601a      	str	r2, [r3, #0]
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	2200      	movs	r2, #0
 80084be:	605a      	str	r2, [r3, #4]
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	2200      	movs	r2, #0
 80084c4:	609a      	str	r2, [r3, #8]
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	2200      	movs	r2, #0
 80084ca:	60da      	str	r2, [r3, #12]
    {
    }
 80084cc:	687b      	ldr	r3, [r7, #4]
 80084ce:	4618      	mov	r0, r3
 80084d0:	3708      	adds	r7, #8
 80084d2:	46bd      	mov	sp, r7
 80084d4:	bd80      	pop	{r7, pc}
 80084d6:	bf00      	nop
 80084d8:	080232f0 	.word	0x080232f0

080084dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 80084dc:	b580      	push	{r7, lr}
 80084de:	b084      	sub	sp, #16
 80084e0:	af00      	add	r7, sp, #0
 80084e2:	60f8      	str	r0, [r7, #12]
 80084e4:	60b9      	str	r1, [r7, #8]
 80084e6:	4639      	mov	r1, r7
 80084e8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 80084ec:	68fb      	ldr	r3, [r7, #12]
 80084ee:	4618      	mov	r0, r3
 80084f0:	f7ff ffc8 	bl	8008484 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80084f4:	4a08      	ldr	r2, [pc, #32]	@ (8008518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	601a      	str	r2, [r3, #0]
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	68ba      	ldr	r2, [r7, #8]
 80084fe:	605a      	str	r2, [r3, #4]
 8008500:	68fb      	ldr	r3, [r7, #12]
 8008502:	3308      	adds	r3, #8
 8008504:	463a      	mov	r2, r7
 8008506:	e892 0003 	ldmia.w	r2, {r0, r1}
 800850a:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800850e:	68fb      	ldr	r3, [r7, #12]
 8008510:	4618      	mov	r0, r3
 8008512:	3710      	adds	r7, #16
 8008514:	46bd      	mov	sp, r7
 8008516:	bd80      	pop	{r7, pc}
 8008518:	080232f0 	.word	0x080232f0

0800851c <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800851c:	b580      	push	{r7, lr}
 800851e:	b082      	sub	sp, #8
 8008520:	af00      	add	r7, sp, #0
 8008522:	6078      	str	r0, [r7, #4]
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	4618      	mov	r0, r3
 8008528:	f7ff fd8c 	bl	8008044 <_ZN8touchgfx10TransitionC1Ev>
 800852c:	4a03      	ldr	r2, [pc, #12]	@ (800853c <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	601a      	str	r2, [r3, #0]
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	4618      	mov	r0, r3
 8008536:	3708      	adds	r7, #8
 8008538:	46bd      	mov	sp, r7
 800853a:	bd80      	pop	{r7, pc}
 800853c:	08023278 	.word	0x08023278

08008540 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008540:	b590      	push	{r4, r7, lr}
 8008542:	b08f      	sub	sp, #60	@ 0x3c
 8008544:	af00      	add	r7, sp, #0
 8008546:	60f8      	str	r0, [r7, #12]
 8008548:	60b9      	str	r1, [r7, #8]
 800854a:	607a      	str	r2, [r7, #4]
 800854c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800854e:	687b      	ldr	r3, [r7, #4]
 8008550:	689a      	ldr	r2, [r3, #8]
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	689b      	ldr	r3, [r3, #8]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	3320      	adds	r3, #32
 800855a:	681b      	ldr	r3, [r3, #0]
 800855c:	4610      	mov	r0, r2
 800855e:	4798      	blx	r3
 8008560:	4603      	mov	r3, r0
 8008562:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 8008566:	d205      	bcs.n	8008574 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008568:	4b7d      	ldr	r3, [pc, #500]	@ (8008760 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800856a:	4a7e      	ldr	r2, [pc, #504]	@ (8008764 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800856c:	21a3      	movs	r1, #163	@ 0xa3
 800856e:	487e      	ldr	r0, [pc, #504]	@ (8008768 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008570:	f018 fd9a 	bl	80210a8 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008574:	687b      	ldr	r3, [r7, #4]
 8008576:	685a      	ldr	r2, [r3, #4]
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	685b      	ldr	r3, [r3, #4]
 800857c:	681b      	ldr	r3, [r3, #0]
 800857e:	3320      	adds	r3, #32
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	4610      	mov	r0, r2
 8008584:	4798      	blx	r3
 8008586:	4603      	mov	r3, r0
 8008588:	2b0f      	cmp	r3, #15
 800858a:	d805      	bhi.n	8008598 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800858c:	4b77      	ldr	r3, [pc, #476]	@ (800876c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800858e:	4a75      	ldr	r2, [pc, #468]	@ (8008764 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008590:	21a4      	movs	r1, #164	@ 0xa4
 8008592:	4875      	ldr	r0, [pc, #468]	@ (8008768 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008594:	f018 fd88 	bl	80210a8 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	68da      	ldr	r2, [r3, #12]
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	68db      	ldr	r3, [r3, #12]
 80085a0:	681b      	ldr	r3, [r3, #0]
 80085a2:	3320      	adds	r3, #32
 80085a4:	681b      	ldr	r3, [r3, #0]
 80085a6:	4610      	mov	r0, r2
 80085a8:	4798      	blx	r3
 80085aa:	4603      	mov	r3, r0
 80085ac:	2b0b      	cmp	r3, #11
 80085ae:	d805      	bhi.n	80085bc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 80085b0:	4b6f      	ldr	r3, [pc, #444]	@ (8008770 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80085b2:	4a6c      	ldr	r2, [pc, #432]	@ (8008764 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80085b4:	21a5      	movs	r1, #165	@ 0xa5
 80085b6:	486c      	ldr	r0, [pc, #432]	@ (8008768 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80085b8:	f018 fd76 	bl	80210a8 <__assert_func>
 80085bc:	68fb      	ldr	r3, [r7, #12]
 80085be:	62bb      	str	r3, [r7, #40]	@ 0x28
 80085c0:	68bb      	ldr	r3, [r7, #8]
 80085c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80085c4:	683b      	ldr	r3, [r7, #0]
 80085c6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80085c8:	f007 f880 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 80085cc:	4603      	mov	r3, r0
 80085ce:	4618      	mov	r0, r3
 80085d0:	f7ff fcee 	bl	8007fb0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80085d4:	6a3b      	ldr	r3, [r7, #32]
 80085d6:	681b      	ldr	r3, [r3, #0]
 80085d8:	2b00      	cmp	r3, #0
 80085da:	d008      	beq.n	80085ee <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80085dc:	6a3b      	ldr	r3, [r7, #32]
 80085de:	681a      	ldr	r2, [r3, #0]
 80085e0:	6a3b      	ldr	r3, [r7, #32]
 80085e2:	681b      	ldr	r3, [r3, #0]
 80085e4:	681b      	ldr	r3, [r3, #0]
 80085e6:	330c      	adds	r3, #12
 80085e8:	681b      	ldr	r3, [r3, #0]
 80085ea:	4610      	mov	r0, r2
 80085ec:	4798      	blx	r3
    if (*currentTrans)
 80085ee:	6a3b      	ldr	r3, [r7, #32]
 80085f0:	681b      	ldr	r3, [r3, #0]
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d007      	beq.n	8008606 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 80085f6:	6a3b      	ldr	r3, [r7, #32]
 80085f8:	681a      	ldr	r2, [r3, #0]
 80085fa:	6a3b      	ldr	r3, [r7, #32]
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	4610      	mov	r0, r2
 8008604:	4798      	blx	r3
    if (*currentScreen)
 8008606:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008608:	681b      	ldr	r3, [r3, #0]
 800860a:	2b00      	cmp	r3, #0
 800860c:	d008      	beq.n	8008620 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800860e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008610:	681a      	ldr	r2, [r3, #0]
 8008612:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	681b      	ldr	r3, [r3, #0]
 8008618:	3314      	adds	r3, #20
 800861a:	681b      	ldr	r3, [r3, #0]
 800861c:	4610      	mov	r0, r2
 800861e:	4798      	blx	r3
    if (*currentPresenter)
 8008620:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008622:	681b      	ldr	r3, [r3, #0]
 8008624:	2b00      	cmp	r3, #0
 8008626:	d008      	beq.n	800863a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008628:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800862a:	681a      	ldr	r2, [r3, #0]
 800862c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800862e:	681b      	ldr	r3, [r3, #0]
 8008630:	681b      	ldr	r3, [r3, #0]
 8008632:	3304      	adds	r3, #4
 8008634:	681b      	ldr	r3, [r3, #0]
 8008636:	4610      	mov	r0, r2
 8008638:	4798      	blx	r3
    if (*currentScreen)
 800863a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	2b00      	cmp	r3, #0
 8008640:	d007      	beq.n	8008652 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008642:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008644:	681a      	ldr	r2, [r3, #0]
 8008646:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	681b      	ldr	r3, [r3, #0]
 800864e:	4610      	mov	r0, r2
 8008650:	4798      	blx	r3
    if (*currentPresenter)
 8008652:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008654:	681b      	ldr	r3, [r3, #0]
 8008656:	2b00      	cmp	r3, #0
 8008658:	d008      	beq.n	800866c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800865a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800865c:	681a      	ldr	r2, [r3, #0]
 800865e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008660:	681b      	ldr	r3, [r3, #0]
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	3308      	adds	r3, #8
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	4610      	mov	r0, r2
 800866a:	4798      	blx	r3
}
 800866c:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	68db      	ldr	r3, [r3, #12]
 8008672:	2100      	movs	r1, #0
 8008674:	4618      	mov	r0, r3
 8008676:	f000 f87d 	bl	8008774 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800867a:	4603      	mov	r3, r0
 800867c:	4619      	mov	r1, r3
 800867e:	200c      	movs	r0, #12
 8008680:	f7ff fc00 	bl	8007e84 <_ZnwjPv>
 8008684:	4604      	mov	r4, r0
 8008686:	4620      	mov	r0, r4
 8008688:	f7ff ff48 	bl	800851c <_ZN8touchgfx12NoTransitionC1Ev>
 800868c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	689b      	ldr	r3, [r3, #8]
 8008692:	2100      	movs	r1, #0
 8008694:	4618      	mov	r0, r3
 8008696:	f000 f880 	bl	800879a <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800869a:	4603      	mov	r3, r0
 800869c:	4619      	mov	r1, r3
 800869e:	f44f 70aa 	mov.w	r0, #340	@ 0x154
 80086a2:	f7ff fbef 	bl	8007e84 <_ZnwjPv>
 80086a6:	4604      	mov	r4, r0
 80086a8:	4620      	mov	r0, r4
 80086aa:	f001 fc15 	bl	8009ed8 <_ZN10screenViewC1Ev>
 80086ae:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	685b      	ldr	r3, [r3, #4]
 80086b4:	2100      	movs	r1, #0
 80086b6:	4618      	mov	r0, r3
 80086b8:	f000 f882 	bl	80087c0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 80086bc:	4603      	mov	r3, r0
 80086be:	4619      	mov	r1, r3
 80086c0:	2010      	movs	r0, #16
 80086c2:	f7ff fbdf 	bl	8007e84 <_ZnwjPv>
 80086c6:	4604      	mov	r4, r0
 80086c8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80086ca:	4620      	mov	r0, r4
 80086cc:	f001 fbac 	bl	8009e28 <_ZN15screenPresenterC1ER10screenView>
 80086d0:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80086d2:	683b      	ldr	r3, [r7, #0]
 80086d4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80086d6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80086d8:	68bb      	ldr	r3, [r7, #8]
 80086da:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80086dc:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80086de:	68fb      	ldr	r3, [r7, #12]
 80086e0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80086e2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 80086e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80086e6:	2b00      	cmp	r3, #0
 80086e8:	d002      	beq.n	80086f0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 80086ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80086ec:	3304      	adds	r3, #4
 80086ee:	e000      	b.n	80086f2 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 80086f0:	2300      	movs	r3, #0
 80086f2:	4619      	mov	r1, r3
 80086f4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80086f6:	f7ff fd95 	bl	8008224 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80086fa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80086fc:	3304      	adds	r3, #4
 80086fe:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008700:	4618      	mov	r0, r3
 8008702:	f7ff fe02 	bl	800830a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008706:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008708:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800870a:	4618      	mov	r0, r3
 800870c:	f000 f86b 	bl	80087e6 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 8008710:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008712:	61fb      	str	r3, [r7, #28]
 8008714:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008716:	61bb      	str	r3, [r7, #24]
 8008718:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800871a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800871c:	69fb      	ldr	r3, [r7, #28]
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	330c      	adds	r3, #12
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	69f8      	ldr	r0, [r7, #28]
 8008726:	4798      	blx	r3
    newPresenter->activate();
 8008728:	69bb      	ldr	r3, [r7, #24]
 800872a:	681b      	ldr	r3, [r3, #0]
 800872c:	681b      	ldr	r3, [r3, #0]
 800872e:	69b8      	ldr	r0, [r7, #24]
 8008730:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008732:	6979      	ldr	r1, [r7, #20]
 8008734:	69f8      	ldr	r0, [r7, #28]
 8008736:	f008 fdc7 	bl	80112c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800873a:	697b      	ldr	r3, [r7, #20]
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	3310      	adds	r3, #16
 8008740:	681b      	ldr	r3, [r3, #0]
 8008742:	6978      	ldr	r0, [r7, #20]
 8008744:	4798      	blx	r3
    newTransition->invalidate();
 8008746:	697b      	ldr	r3, [r7, #20]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	3314      	adds	r3, #20
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	6978      	ldr	r0, [r7, #20]
 8008750:	4798      	blx	r3
}
 8008752:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8008754:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008756:	4618      	mov	r0, r3
 8008758:	373c      	adds	r7, #60	@ 0x3c
 800875a:	46bd      	mov	sp, r7
 800875c:	bd90      	pop	{r4, r7, pc}
 800875e:	bf00      	nop
 8008760:	08022124 	.word	0x08022124
 8008764:	080221b4 	.word	0x080221b4
 8008768:	08022284 	.word	0x08022284
 800876c:	080222c8 	.word	0x080222c8
 8008770:	0802236c 	.word	0x0802236c

08008774 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8008774:	b580      	push	{r7, lr}
 8008776:	b082      	sub	sp, #8
 8008778:	af00      	add	r7, sp, #0
 800877a:	6078      	str	r0, [r7, #4]
 800877c:	460b      	mov	r3, r1
 800877e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008780:	687b      	ldr	r3, [r7, #4]
 8008782:	681b      	ldr	r3, [r3, #0]
 8008784:	3324      	adds	r3, #36	@ 0x24
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	887a      	ldrh	r2, [r7, #2]
 800878a:	4611      	mov	r1, r2
 800878c:	6878      	ldr	r0, [r7, #4]
 800878e:	4798      	blx	r3
 8008790:	4603      	mov	r3, r0
    }
 8008792:	4618      	mov	r0, r3
 8008794:	3708      	adds	r7, #8
 8008796:	46bd      	mov	sp, r7
 8008798:	bd80      	pop	{r7, pc}

0800879a <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 800879a:	b580      	push	{r7, lr}
 800879c:	b082      	sub	sp, #8
 800879e:	af00      	add	r7, sp, #0
 80087a0:	6078      	str	r0, [r7, #4]
 80087a2:	460b      	mov	r3, r1
 80087a4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	681b      	ldr	r3, [r3, #0]
 80087aa:	3324      	adds	r3, #36	@ 0x24
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	887a      	ldrh	r2, [r7, #2]
 80087b0:	4611      	mov	r1, r2
 80087b2:	6878      	ldr	r0, [r7, #4]
 80087b4:	4798      	blx	r3
 80087b6:	4603      	mov	r3, r0
    }
 80087b8:	4618      	mov	r0, r3
 80087ba:	3708      	adds	r7, #8
 80087bc:	46bd      	mov	sp, r7
 80087be:	bd80      	pop	{r7, pc}

080087c0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 80087c0:	b580      	push	{r7, lr}
 80087c2:	b082      	sub	sp, #8
 80087c4:	af00      	add	r7, sp, #0
 80087c6:	6078      	str	r0, [r7, #4]
 80087c8:	460b      	mov	r3, r1
 80087ca:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	3324      	adds	r3, #36	@ 0x24
 80087d2:	681b      	ldr	r3, [r3, #0]
 80087d4:	887a      	ldrh	r2, [r7, #2]
 80087d6:	4611      	mov	r1, r2
 80087d8:	6878      	ldr	r0, [r7, #4]
 80087da:	4798      	blx	r3
 80087dc:	4603      	mov	r3, r0
    }
 80087de:	4618      	mov	r0, r3
 80087e0:	3708      	adds	r7, #8
 80087e2:	46bd      	mov	sp, r7
 80087e4:	bd80      	pop	{r7, pc}

080087e6 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 80087e6:	b480      	push	{r7}
 80087e8:	b083      	sub	sp, #12
 80087ea:	af00      	add	r7, sp, #0
 80087ec:	6078      	str	r0, [r7, #4]
 80087ee:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	683a      	ldr	r2, [r7, #0]
 80087f4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80087f6:	bf00      	nop
 80087f8:	370c      	adds	r7, #12
 80087fa:	46bd      	mov	sp, r7
 80087fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008800:	4770      	bx	lr
	...

08008804 <_ZN8touchgfx12NoTransitionD1Ev>:
 8008804:	b580      	push	{r7, lr}
 8008806:	b082      	sub	sp, #8
 8008808:	af00      	add	r7, sp, #0
 800880a:	6078      	str	r0, [r7, #4]
 800880c:	4a05      	ldr	r2, [pc, #20]	@ (8008824 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800880e:	687b      	ldr	r3, [r7, #4]
 8008810:	601a      	str	r2, [r3, #0]
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	4618      	mov	r0, r3
 8008816:	f7ff fc2b 	bl	8008070 <_ZN8touchgfx10TransitionD1Ev>
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	4618      	mov	r0, r3
 800881e:	3708      	adds	r7, #8
 8008820:	46bd      	mov	sp, r7
 8008822:	bd80      	pop	{r7, pc}
 8008824:	08023278 	.word	0x08023278

08008828 <_ZN8touchgfx12NoTransitionD0Ev>:
 8008828:	b580      	push	{r7, lr}
 800882a:	b082      	sub	sp, #8
 800882c:	af00      	add	r7, sp, #0
 800882e:	6078      	str	r0, [r7, #4]
 8008830:	6878      	ldr	r0, [r7, #4]
 8008832:	f7ff ffe7 	bl	8008804 <_ZN8touchgfx12NoTransitionD1Ev>
 8008836:	210c      	movs	r1, #12
 8008838:	6878      	ldr	r0, [r7, #4]
 800883a:	f018 fc08 	bl	802104e <_ZdlPvj>
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	4618      	mov	r0, r3
 8008842:	3708      	adds	r7, #8
 8008844:	46bd      	mov	sp, r7
 8008846:	bd80      	pop	{r7, pc}

08008848 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008848:	b580      	push	{r7, lr}
 800884a:	b082      	sub	sp, #8
 800884c:	af00      	add	r7, sp, #0
 800884e:	6078      	str	r0, [r7, #4]
 8008850:	4a05      	ldr	r2, [pc, #20]	@ (8008868 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008852:	687b      	ldr	r3, [r7, #4]
 8008854:	601a      	str	r2, [r3, #0]
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	4618      	mov	r0, r3
 800885a:	f7ff fbb7 	bl	8007fcc <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	4618      	mov	r0, r3
 8008862:	3708      	adds	r7, #8
 8008864:	46bd      	mov	sp, r7
 8008866:	bd80      	pop	{r7, pc}
 8008868:	080232f0 	.word	0x080232f0

0800886c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800886c:	b580      	push	{r7, lr}
 800886e:	b082      	sub	sp, #8
 8008870:	af00      	add	r7, sp, #0
 8008872:	6078      	str	r0, [r7, #4]
 8008874:	6878      	ldr	r0, [r7, #4]
 8008876:	f7ff ffe7 	bl	8008848 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800887a:	2110      	movs	r1, #16
 800887c:	6878      	ldr	r0, [r7, #4]
 800887e:	f018 fbe6 	bl	802104e <_ZdlPvj>
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	4618      	mov	r0, r3
 8008886:	3708      	adds	r7, #8
 8008888:	46bd      	mov	sp, r7
 800888a:	bd80      	pop	{r7, pc}

0800888c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800888c:	b580      	push	{r7, lr}
 800888e:	b082      	sub	sp, #8
 8008890:	af00      	add	r7, sp, #0
 8008892:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	685b      	ldr	r3, [r3, #4]
 8008898:	687a      	ldr	r2, [r7, #4]
 800889a:	68d2      	ldr	r2, [r2, #12]
 800889c:	1052      	asrs	r2, r2, #1
 800889e:	1899      	adds	r1, r3, r2
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	68db      	ldr	r3, [r3, #12]
 80088a4:	f003 0301 	and.w	r3, r3, #1
 80088a8:	2b00      	cmp	r3, #0
 80088aa:	d102      	bne.n	80088b2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80088ac:	687b      	ldr	r3, [r7, #4]
 80088ae:	689b      	ldr	r3, [r3, #8]
 80088b0:	e00a      	b.n	80088c8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	685b      	ldr	r3, [r3, #4]
 80088b6:	687a      	ldr	r2, [r7, #4]
 80088b8:	68d2      	ldr	r2, [r2, #12]
 80088ba:	1052      	asrs	r2, r2, #1
 80088bc:	4413      	add	r3, r2
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	687a      	ldr	r2, [r7, #4]
 80088c2:	6892      	ldr	r2, [r2, #8]
 80088c4:	4413      	add	r3, r2
 80088c6:	681b      	ldr	r3, [r3, #0]
 80088c8:	4608      	mov	r0, r1
 80088ca:	4798      	blx	r3
    }
 80088cc:	bf00      	nop
 80088ce:	3708      	adds	r7, #8
 80088d0:	46bd      	mov	sp, r7
 80088d2:	bd80      	pop	{r7, pc}

080088d4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80088d4:	b480      	push	{r7}
 80088d6:	b083      	sub	sp, #12
 80088d8:	af00      	add	r7, sp, #0
 80088da:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	685b      	ldr	r3, [r3, #4]
 80088e0:	2b00      	cmp	r3, #0
 80088e2:	d010      	beq.n	8008906 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	689b      	ldr	r3, [r3, #8]
 80088e8:	2b00      	cmp	r3, #0
 80088ea:	d107      	bne.n	80088fc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	68db      	ldr	r3, [r3, #12]
 80088f0:	f003 0301 	and.w	r3, r3, #1
 80088f4:	2b00      	cmp	r3, #0
 80088f6:	d101      	bne.n	80088fc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80088f8:	2301      	movs	r3, #1
 80088fa:	e000      	b.n	80088fe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80088fc:	2300      	movs	r3, #0
 80088fe:	2b01      	cmp	r3, #1
 8008900:	d001      	beq.n	8008906 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008902:	2301      	movs	r3, #1
 8008904:	e000      	b.n	8008908 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8008906:	2300      	movs	r3, #0
    }
 8008908:	4618      	mov	r0, r3
 800890a:	370c      	adds	r7, #12
 800890c:	46bd      	mov	sp, r7
 800890e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008912:	4770      	bx	lr

08008914 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8008914:	b480      	push	{r7}
 8008916:	b083      	sub	sp, #12
 8008918:	af00      	add	r7, sp, #0
 800891a:	6078      	str	r0, [r7, #4]
 800891c:	6039      	str	r1, [r7, #0]
        : color(col)
 800891e:	687b      	ldr	r3, [r7, #4]
 8008920:	683a      	ldr	r2, [r7, #0]
 8008922:	601a      	str	r2, [r3, #0]
    {
    }
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	4618      	mov	r0, r3
 8008928:	370c      	adds	r7, #12
 800892a:	46bd      	mov	sp, r7
 800892c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008930:	4770      	bx	lr

08008932 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8008932:	b480      	push	{r7}
 8008934:	b083      	sub	sp, #12
 8008936:	af00      	add	r7, sp, #0
 8008938:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	2200      	movs	r2, #0
 800893e:	801a      	strh	r2, [r3, #0]
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	2200      	movs	r2, #0
 8008944:	805a      	strh	r2, [r3, #2]
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	2200      	movs	r2, #0
 800894a:	809a      	strh	r2, [r3, #4]
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	2200      	movs	r2, #0
 8008950:	80da      	strh	r2, [r3, #6]
    {
    }
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	4618      	mov	r0, r3
 8008956:	370c      	adds	r7, #12
 8008958:	46bd      	mov	sp, r7
 800895a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800895e:	4770      	bx	lr

08008960 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8008960:	b480      	push	{r7}
 8008962:	b085      	sub	sp, #20
 8008964:	af00      	add	r7, sp, #0
 8008966:	60f8      	str	r0, [r7, #12]
 8008968:	4608      	mov	r0, r1
 800896a:	4611      	mov	r1, r2
 800896c:	461a      	mov	r2, r3
 800896e:	4603      	mov	r3, r0
 8008970:	817b      	strh	r3, [r7, #10]
 8008972:	460b      	mov	r3, r1
 8008974:	813b      	strh	r3, [r7, #8]
 8008976:	4613      	mov	r3, r2
 8008978:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800897a:	68fb      	ldr	r3, [r7, #12]
 800897c:	897a      	ldrh	r2, [r7, #10]
 800897e:	801a      	strh	r2, [r3, #0]
 8008980:	68fb      	ldr	r3, [r7, #12]
 8008982:	893a      	ldrh	r2, [r7, #8]
 8008984:	805a      	strh	r2, [r3, #2]
 8008986:	68fb      	ldr	r3, [r7, #12]
 8008988:	88fa      	ldrh	r2, [r7, #6]
 800898a:	809a      	strh	r2, [r3, #4]
 800898c:	68fb      	ldr	r3, [r7, #12]
 800898e:	8b3a      	ldrh	r2, [r7, #24]
 8008990:	80da      	strh	r2, [r3, #6]
    {
    }
 8008992:	68fb      	ldr	r3, [r7, #12]
 8008994:	4618      	mov	r0, r3
 8008996:	3714      	adds	r7, #20
 8008998:	46bd      	mov	sp, r7
 800899a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800899e:	4770      	bx	lr

080089a0 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80089a0:	b580      	push	{r7, lr}
 80089a2:	b082      	sub	sp, #8
 80089a4:	af00      	add	r7, sp, #0
 80089a6:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80089a8:	4a14      	ldr	r2, [pc, #80]	@ (80089fc <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	601a      	str	r2, [r3, #0]
        : rect(),
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	3304      	adds	r3, #4
 80089b2:	4618      	mov	r0, r3
 80089b4:	f7ff ffbd 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	330c      	adds	r3, #12
 80089bc:	4618      	mov	r0, r3
 80089be:	f7ff ffb8 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 80089c2:	687b      	ldr	r3, [r7, #4]
 80089c4:	2200      	movs	r2, #0
 80089c6:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	2200      	movs	r2, #0
 80089cc:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	2200      	movs	r2, #0
 80089d2:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	2200      	movs	r2, #0
 80089d8:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	2200      	movs	r2, #0
 80089de:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	2200      	movs	r2, #0
 80089e4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	2201      	movs	r2, #1
 80089ec:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 80089f0:	687b      	ldr	r3, [r7, #4]
 80089f2:	4618      	mov	r0, r3
 80089f4:	3708      	adds	r7, #8
 80089f6:	46bd      	mov	sp, r7
 80089f8:	bd80      	pop	{r7, pc}
 80089fa:	bf00      	nop
 80089fc:	08023e7c 	.word	0x08023e7c

08008a00 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8008a00:	b480      	push	{r7}
 8008a02:	b083      	sub	sp, #12
 8008a04:	af00      	add	r7, sp, #0
 8008a06:	6078      	str	r0, [r7, #4]
    {
 8008a08:	4a04      	ldr	r2, [pc, #16]	@ (8008a1c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	601a      	str	r2, [r3, #0]
    }
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	4618      	mov	r0, r3
 8008a12:	370c      	adds	r7, #12
 8008a14:	46bd      	mov	sp, r7
 8008a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a1a:	4770      	bx	lr
 8008a1c:	08023e7c 	.word	0x08023e7c

08008a20 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8008a20:	b580      	push	{r7, lr}
 8008a22:	b082      	sub	sp, #8
 8008a24:	af00      	add	r7, sp, #0
 8008a26:	6078      	str	r0, [r7, #4]
    }
 8008a28:	6878      	ldr	r0, [r7, #4]
 8008a2a:	f7ff ffe9 	bl	8008a00 <_ZN8touchgfx8DrawableD1Ev>
 8008a2e:	2128      	movs	r1, #40	@ 0x28
 8008a30:	6878      	ldr	r0, [r7, #4]
 8008a32:	f018 fb0c 	bl	802104e <_ZdlPvj>
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	4618      	mov	r0, r3
 8008a3a:	3708      	adds	r7, #8
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	bd80      	pop	{r7, pc}

08008a40 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8008a40:	b580      	push	{r7, lr}
 8008a42:	b082      	sub	sp, #8
 8008a44:	af00      	add	r7, sp, #0
 8008a46:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8008a4e:	2b00      	cmp	r3, #0
 8008a50:	d005      	beq.n	8008a5e <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8008a52:	687b      	ldr	r3, [r7, #4]
 8008a54:	681b      	ldr	r3, [r3, #0]
 8008a56:	3314      	adds	r3, #20
 8008a58:	681b      	ldr	r3, [r3, #0]
 8008a5a:	6878      	ldr	r0, [r7, #4]
 8008a5c:	4798      	blx	r3
        }
    }
 8008a5e:	bf00      	nop
 8008a60:	3708      	adds	r7, #8
 8008a62:	46bd      	mov	sp, r7
 8008a64:	bd80      	pop	{r7, pc}

08008a66 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8008a66:	b480      	push	{r7}
 8008a68:	b083      	sub	sp, #12
 8008a6a:	af00      	add	r7, sp, #0
 8008a6c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8008a6e:	2300      	movs	r3, #0
    }
 8008a70:	4618      	mov	r0, r3
 8008a72:	370c      	adds	r7, #12
 8008a74:	46bd      	mov	sp, r7
 8008a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a7a:	4770      	bx	lr

08008a7c <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8008a7c:	b580      	push	{r7, lr}
 8008a7e:	b084      	sub	sp, #16
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	60f8      	str	r0, [r7, #12]
 8008a84:	4608      	mov	r0, r1
 8008a86:	4611      	mov	r1, r2
 8008a88:	461a      	mov	r2, r3
 8008a8a:	4603      	mov	r3, r0
 8008a8c:	817b      	strh	r3, [r7, #10]
 8008a8e:	460b      	mov	r3, r1
 8008a90:	813b      	strh	r3, [r7, #8]
 8008a92:	4613      	mov	r3, r2
 8008a94:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8008a96:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008a9a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8008a9e:	4619      	mov	r1, r3
 8008aa0:	68f8      	ldr	r0, [r7, #12]
 8008aa2:	f000 f82a 	bl	8008afa <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8008aa6:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8008aaa:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8008aae:	4619      	mov	r1, r3
 8008ab0:	68f8      	ldr	r0, [r7, #12]
 8008ab2:	f000 f87e 	bl	8008bb2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8008ab6:	bf00      	nop
 8008ab8:	3710      	adds	r7, #16
 8008aba:	46bd      	mov	sp, r7
 8008abc:	bd80      	pop	{r7, pc}

08008abe <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8008abe:	b480      	push	{r7}
 8008ac0:	b083      	sub	sp, #12
 8008ac2:	af00      	add	r7, sp, #0
 8008ac4:	6078      	str	r0, [r7, #4]
 8008ac6:	460b      	mov	r3, r1
 8008ac8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8008aca:	687b      	ldr	r3, [r7, #4]
 8008acc:	887a      	ldrh	r2, [r7, #2]
 8008ace:	809a      	strh	r2, [r3, #4]
    }
 8008ad0:	bf00      	nop
 8008ad2:	370c      	adds	r7, #12
 8008ad4:	46bd      	mov	sp, r7
 8008ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ada:	4770      	bx	lr

08008adc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8008adc:	b480      	push	{r7}
 8008ade:	b083      	sub	sp, #12
 8008ae0:	af00      	add	r7, sp, #0
 8008ae2:	6078      	str	r0, [r7, #4]
 8008ae4:	460b      	mov	r3, r1
 8008ae6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	887a      	ldrh	r2, [r7, #2]
 8008aec:	80da      	strh	r2, [r3, #6]
    }
 8008aee:	bf00      	nop
 8008af0:	370c      	adds	r7, #12
 8008af2:	46bd      	mov	sp, r7
 8008af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008af8:	4770      	bx	lr

08008afa <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8008afa:	b580      	push	{r7, lr}
 8008afc:	b082      	sub	sp, #8
 8008afe:	af00      	add	r7, sp, #0
 8008b00:	6078      	str	r0, [r7, #4]
 8008b02:	460b      	mov	r3, r1
 8008b04:	807b      	strh	r3, [r7, #2]
 8008b06:	4613      	mov	r3, r2
 8008b08:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	681b      	ldr	r3, [r3, #0]
 8008b0e:	3330      	adds	r3, #48	@ 0x30
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008b16:	4611      	mov	r1, r2
 8008b18:	6878      	ldr	r0, [r7, #4]
 8008b1a:	4798      	blx	r3
        setY(y);
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	3334      	adds	r3, #52	@ 0x34
 8008b22:	681b      	ldr	r3, [r3, #0]
 8008b24:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008b28:	4611      	mov	r1, r2
 8008b2a:	6878      	ldr	r0, [r7, #4]
 8008b2c:	4798      	blx	r3
    }
 8008b2e:	bf00      	nop
 8008b30:	3708      	adds	r7, #8
 8008b32:	46bd      	mov	sp, r7
 8008b34:	bd80      	pop	{r7, pc}

08008b36 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8008b36:	b480      	push	{r7}
 8008b38:	b083      	sub	sp, #12
 8008b3a:	af00      	add	r7, sp, #0
 8008b3c:	6078      	str	r0, [r7, #4]
 8008b3e:	460b      	mov	r3, r1
 8008b40:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	887a      	ldrh	r2, [r7, #2]
 8008b46:	811a      	strh	r2, [r3, #8]
    }
 8008b48:	bf00      	nop
 8008b4a:	370c      	adds	r7, #12
 8008b4c:	46bd      	mov	sp, r7
 8008b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b52:	4770      	bx	lr

08008b54 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8008b54:	b480      	push	{r7}
 8008b56:	b083      	sub	sp, #12
 8008b58:	af00      	add	r7, sp, #0
 8008b5a:	6078      	str	r0, [r7, #4]
 8008b5c:	460b      	mov	r3, r1
 8008b5e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	887a      	ldrh	r2, [r7, #2]
 8008b64:	815a      	strh	r2, [r3, #10]
    }
 8008b66:	bf00      	nop
 8008b68:	370c      	adds	r7, #12
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b70:	4770      	bx	lr

08008b72 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8008b72:	b480      	push	{r7}
 8008b74:	b083      	sub	sp, #12
 8008b76:	af00      	add	r7, sp, #0
 8008b78:	6078      	str	r0, [r7, #4]
    {
    }
 8008b7a:	bf00      	nop
 8008b7c:	370c      	adds	r7, #12
 8008b7e:	46bd      	mov	sp, r7
 8008b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b84:	4770      	bx	lr

08008b86 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008b86:	b480      	push	{r7}
 8008b88:	b083      	sub	sp, #12
 8008b8a:	af00      	add	r7, sp, #0
 8008b8c:	6078      	str	r0, [r7, #4]
 8008b8e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008b90:	bf00      	nop
 8008b92:	370c      	adds	r7, #12
 8008b94:	46bd      	mov	sp, r7
 8008b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b9a:	4770      	bx	lr

08008b9c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008b9c:	b480      	push	{r7}
 8008b9e:	b083      	sub	sp, #12
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	6078      	str	r0, [r7, #4]
 8008ba4:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008ba6:	bf00      	nop
 8008ba8:	370c      	adds	r7, #12
 8008baa:	46bd      	mov	sp, r7
 8008bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bb0:	4770      	bx	lr

08008bb2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8008bb2:	b580      	push	{r7, lr}
 8008bb4:	b082      	sub	sp, #8
 8008bb6:	af00      	add	r7, sp, #0
 8008bb8:	6078      	str	r0, [r7, #4]
 8008bba:	460b      	mov	r3, r1
 8008bbc:	807b      	strh	r3, [r7, #2]
 8008bbe:	4613      	mov	r3, r2
 8008bc0:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8008bc2:	687b      	ldr	r3, [r7, #4]
 8008bc4:	681b      	ldr	r3, [r3, #0]
 8008bc6:	3338      	adds	r3, #56	@ 0x38
 8008bc8:	681b      	ldr	r3, [r3, #0]
 8008bca:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008bce:	4611      	mov	r1, r2
 8008bd0:	6878      	ldr	r0, [r7, #4]
 8008bd2:	4798      	blx	r3
        setHeight(height);
 8008bd4:	687b      	ldr	r3, [r7, #4]
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	333c      	adds	r3, #60	@ 0x3c
 8008bda:	681b      	ldr	r3, [r3, #0]
 8008bdc:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008be0:	4611      	mov	r1, r2
 8008be2:	6878      	ldr	r0, [r7, #4]
 8008be4:	4798      	blx	r3
    }
 8008be6:	bf00      	nop
 8008be8:	3708      	adds	r7, #8
 8008bea:	46bd      	mov	sp, r7
 8008bec:	bd80      	pop	{r7, pc}

08008bee <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008bee:	b480      	push	{r7}
 8008bf0:	b083      	sub	sp, #12
 8008bf2:	af00      	add	r7, sp, #0
 8008bf4:	6078      	str	r0, [r7, #4]
 8008bf6:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008bf8:	bf00      	nop
 8008bfa:	370c      	adds	r7, #12
 8008bfc:	46bd      	mov	sp, r7
 8008bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c02:	4770      	bx	lr

08008c04 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8008c04:	b480      	push	{r7}
 8008c06:	b083      	sub	sp, #12
 8008c08:	af00      	add	r7, sp, #0
 8008c0a:	6078      	str	r0, [r7, #4]
    {
    }
 8008c0c:	bf00      	nop
 8008c0e:	370c      	adds	r7, #12
 8008c10:	46bd      	mov	sp, r7
 8008c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c16:	4770      	bx	lr

08008c18 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8008c18:	b480      	push	{r7}
 8008c1a:	b083      	sub	sp, #12
 8008c1c:	af00      	add	r7, sp, #0
 8008c1e:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8008c20:	687b      	ldr	r3, [r7, #4]
 8008c22:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8008c26:	4618      	mov	r0, r3
 8008c28:	370c      	adds	r7, #12
 8008c2a:	46bd      	mov	sp, r7
 8008c2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c30:	4770      	bx	lr

08008c32 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8008c32:	b480      	push	{r7}
 8008c34:	b083      	sub	sp, #12
 8008c36:	af00      	add	r7, sp, #0
 8008c38:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8008c40:	4618      	mov	r0, r3
 8008c42:	370c      	adds	r7, #12
 8008c44:	46bd      	mov	sp, r7
 8008c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c4a:	4770      	bx	lr

08008c4c <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8008c4c:	b580      	push	{r7, lr}
 8008c4e:	b082      	sub	sp, #8
 8008c50:	af00      	add	r7, sp, #0
 8008c52:	6078      	str	r0, [r7, #4]
 8008c54:	460b      	mov	r3, r1
 8008c56:	807b      	strh	r3, [r7, #2]
 8008c58:	4613      	mov	r3, r2
 8008c5a:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	3354      	adds	r3, #84	@ 0x54
 8008c62:	681b      	ldr	r3, [r3, #0]
 8008c64:	8879      	ldrh	r1, [r7, #2]
 8008c66:	687a      	ldr	r2, [r7, #4]
 8008c68:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8008c6c:	b292      	uxth	r2, r2
 8008c6e:	1a8a      	subs	r2, r1, r2
 8008c70:	b292      	uxth	r2, r2
 8008c72:	b210      	sxth	r0, r2
 8008c74:	8839      	ldrh	r1, [r7, #0]
 8008c76:	687a      	ldr	r2, [r7, #4]
 8008c78:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8008c7c:	b292      	uxth	r2, r2
 8008c7e:	1a8a      	subs	r2, r1, r2
 8008c80:	b292      	uxth	r2, r2
 8008c82:	b212      	sxth	r2, r2
 8008c84:	4601      	mov	r1, r0
 8008c86:	6878      	ldr	r0, [r7, #4]
 8008c88:	4798      	blx	r3
    }
 8008c8a:	bf00      	nop
 8008c8c:	3708      	adds	r7, #8
 8008c8e:	46bd      	mov	sp, r7
 8008c90:	bd80      	pop	{r7, pc}

08008c92 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8008c92:	b480      	push	{r7}
 8008c94:	b083      	sub	sp, #12
 8008c96:	af00      	add	r7, sp, #0
 8008c98:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8008ca0:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8008ca8:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8008caa:	687b      	ldr	r3, [r7, #4]
 8008cac:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8008cb0:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 8008cb2:	bf00      	nop
 8008cb4:	370c      	adds	r7, #12
 8008cb6:	46bd      	mov	sp, r7
 8008cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cbc:	4770      	bx	lr

08008cbe <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8008cbe:	b580      	push	{r7, lr}
 8008cc0:	b084      	sub	sp, #16
 8008cc2:	af00      	add	r7, sp, #0
 8008cc4:	60f8      	str	r0, [r7, #12]
 8008cc6:	60b9      	str	r1, [r7, #8]
 8008cc8:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8008cca:	68f8      	ldr	r0, [r7, #12]
 8008ccc:	f7ff ffe1 	bl	8008c92 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	681a      	ldr	r2, [r3, #0]
 8008cd4:	68fb      	ldr	r3, [r7, #12]
 8008cd6:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8008cd8:	687b      	ldr	r3, [r7, #4]
 8008cda:	68fa      	ldr	r2, [r7, #12]
 8008cdc:	601a      	str	r2, [r3, #0]
    }
 8008cde:	bf00      	nop
 8008ce0:	3710      	adds	r7, #16
 8008ce2:	46bd      	mov	sp, r7
 8008ce4:	bd80      	pop	{r7, pc}

08008ce6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8008ce6:	b580      	push	{r7, lr}
 8008ce8:	b084      	sub	sp, #16
 8008cea:	af00      	add	r7, sp, #0
 8008cec:	60f8      	str	r0, [r7, #12]
 8008cee:	607b      	str	r3, [r7, #4]
 8008cf0:	460b      	mov	r3, r1
 8008cf2:	817b      	strh	r3, [r7, #10]
 8008cf4:	4613      	mov	r3, r2
 8008cf6:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8008cf8:	68fb      	ldr	r3, [r7, #12]
 8008cfa:	4618      	mov	r0, r3
 8008cfc:	f7ff ff8c 	bl	8008c18 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8008d00:	4603      	mov	r3, r0
 8008d02:	2b00      	cmp	r3, #0
 8008d04:	d008      	beq.n	8008d18 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008d06:	68fb      	ldr	r3, [r7, #12]
 8008d08:	4618      	mov	r0, r3
 8008d0a:	f7ff ff92 	bl	8008c32 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8008d0e:	4603      	mov	r3, r0
 8008d10:	2b00      	cmp	r3, #0
 8008d12:	d001      	beq.n	8008d18 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008d14:	2301      	movs	r3, #1
 8008d16:	e000      	b.n	8008d1a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8008d18:	2300      	movs	r3, #0
 8008d1a:	2b00      	cmp	r3, #0
 8008d1c:	d002      	beq.n	8008d24 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8008d1e:	68fa      	ldr	r2, [r7, #12]
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	601a      	str	r2, [r3, #0]
        }
    }
 8008d24:	bf00      	nop
 8008d26:	3710      	adds	r7, #16
 8008d28:	46bd      	mov	sp, r7
 8008d2a:	bd80      	pop	{r7, pc}

08008d2c <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8008d2c:	b580      	push	{r7, lr}
 8008d2e:	b082      	sub	sp, #8
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	6078      	str	r0, [r7, #4]
    {
 8008d34:	4a06      	ldr	r2, [pc, #24]	@ (8008d50 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8008d36:	687b      	ldr	r3, [r7, #4]
 8008d38:	601a      	str	r2, [r3, #0]
    }
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	3304      	adds	r3, #4
 8008d3e:	4618      	mov	r0, r3
 8008d40:	f000 fd24 	bl	800978c <_ZN8touchgfx9ContainerD1Ev>
 8008d44:	687b      	ldr	r3, [r7, #4]
 8008d46:	4618      	mov	r0, r3
 8008d48:	3708      	adds	r7, #8
 8008d4a:	46bd      	mov	sp, r7
 8008d4c:	bd80      	pop	{r7, pc}
 8008d4e:	bf00      	nop
 8008d50:	08023f88 	.word	0x08023f88

08008d54 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8008d54:	b580      	push	{r7, lr}
 8008d56:	b082      	sub	sp, #8
 8008d58:	af00      	add	r7, sp, #0
 8008d5a:	6078      	str	r0, [r7, #4]
    }
 8008d5c:	6878      	ldr	r0, [r7, #4]
 8008d5e:	f7ff ffe5 	bl	8008d2c <_ZN8touchgfx6ScreenD1Ev>
 8008d62:	213c      	movs	r1, #60	@ 0x3c
 8008d64:	6878      	ldr	r0, [r7, #4]
 8008d66:	f018 f972 	bl	802104e <_ZdlPvj>
 8008d6a:	687b      	ldr	r3, [r7, #4]
 8008d6c:	4618      	mov	r0, r3
 8008d6e:	3708      	adds	r7, #8
 8008d70:	46bd      	mov	sp, r7
 8008d72:	bd80      	pop	{r7, pc}

08008d74 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8008d74:	b480      	push	{r7}
 8008d76:	b083      	sub	sp, #12
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
    {
    }
 8008d7c:	bf00      	nop
 8008d7e:	370c      	adds	r7, #12
 8008d80:	46bd      	mov	sp, r7
 8008d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d86:	4770      	bx	lr

08008d88 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8008d88:	b480      	push	{r7}
 8008d8a:	b083      	sub	sp, #12
 8008d8c:	af00      	add	r7, sp, #0
 8008d8e:	6078      	str	r0, [r7, #4]
    {
    }
 8008d90:	bf00      	nop
 8008d92:	370c      	adds	r7, #12
 8008d94:	46bd      	mov	sp, r7
 8008d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d9a:	4770      	bx	lr

08008d9c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8008d9c:	b480      	push	{r7}
 8008d9e:	b083      	sub	sp, #12
 8008da0:	af00      	add	r7, sp, #0
 8008da2:	6078      	str	r0, [r7, #4]
    {
    }
 8008da4:	bf00      	nop
 8008da6:	370c      	adds	r7, #12
 8008da8:	46bd      	mov	sp, r7
 8008daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dae:	4770      	bx	lr

08008db0 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8008db0:	b480      	push	{r7}
 8008db2:	b083      	sub	sp, #12
 8008db4:	af00      	add	r7, sp, #0
 8008db6:	6078      	str	r0, [r7, #4]
    {
    }
 8008db8:	bf00      	nop
 8008dba:	370c      	adds	r7, #12
 8008dbc:	46bd      	mov	sp, r7
 8008dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dc2:	4770      	bx	lr

08008dc4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8008dc4:	b480      	push	{r7}
 8008dc6:	b083      	sub	sp, #12
 8008dc8:	af00      	add	r7, sp, #0
 8008dca:	6078      	str	r0, [r7, #4]
 8008dcc:	460b      	mov	r3, r1
 8008dce:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8008dd0:	bf00      	nop
 8008dd2:	370c      	adds	r7, #12
 8008dd4:	46bd      	mov	sp, r7
 8008dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dda:	4770      	bx	lr

08008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8008ddc:	b580      	push	{r7, lr}
 8008dde:	b082      	sub	sp, #8
 8008de0:	af00      	add	r7, sp, #0
 8008de2:	6078      	str	r0, [r7, #4]
 8008de4:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	3304      	adds	r3, #4
 8008dea:	6839      	ldr	r1, [r7, #0]
 8008dec:	4618      	mov	r0, r3
 8008dee:	f003 f9af 	bl	800c150 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8008df2:	bf00      	nop
 8008df4:	3708      	adds	r7, #8
 8008df6:	46bd      	mov	sp, r7
 8008df8:	bd80      	pop	{r7, pc}
	...

08008dfc <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8008dfc:	b580      	push	{r7, lr}
 8008dfe:	b082      	sub	sp, #8
 8008e00:	af00      	add	r7, sp, #0
 8008e02:	6078      	str	r0, [r7, #4]
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	4618      	mov	r0, r3
 8008e08:	f7ff fdca 	bl	80089a0 <_ZN8touchgfx8DrawableC1Ev>
 8008e0c:	4a03      	ldr	r2, [pc, #12]	@ (8008e1c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	601a      	str	r2, [r3, #0]
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	4618      	mov	r0, r3
 8008e16:	3708      	adds	r7, #8
 8008e18:	46bd      	mov	sp, r7
 8008e1a:	bd80      	pop	{r7, pc}
 8008e1c:	080234b8 	.word	0x080234b8

08008e20 <_ZN8touchgfx6WidgetD1Ev>:
 8008e20:	b580      	push	{r7, lr}
 8008e22:	b082      	sub	sp, #8
 8008e24:	af00      	add	r7, sp, #0
 8008e26:	6078      	str	r0, [r7, #4]
 8008e28:	4a05      	ldr	r2, [pc, #20]	@ (8008e40 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8008e2a:	687b      	ldr	r3, [r7, #4]
 8008e2c:	601a      	str	r2, [r3, #0]
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	4618      	mov	r0, r3
 8008e32:	f7ff fde5 	bl	8008a00 <_ZN8touchgfx8DrawableD1Ev>
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	4618      	mov	r0, r3
 8008e3a:	3708      	adds	r7, #8
 8008e3c:	46bd      	mov	sp, r7
 8008e3e:	bd80      	pop	{r7, pc}
 8008e40:	080234b8 	.word	0x080234b8

08008e44 <_ZN8touchgfx6WidgetD0Ev>:
 8008e44:	b580      	push	{r7, lr}
 8008e46:	b082      	sub	sp, #8
 8008e48:	af00      	add	r7, sp, #0
 8008e4a:	6078      	str	r0, [r7, #4]
 8008e4c:	6878      	ldr	r0, [r7, #4]
 8008e4e:	f7ff ffe7 	bl	8008e20 <_ZN8touchgfx6WidgetD1Ev>
 8008e52:	2128      	movs	r1, #40	@ 0x28
 8008e54:	6878      	ldr	r0, [r7, #4]
 8008e56:	f018 f8fa 	bl	802104e <_ZdlPvj>
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	4618      	mov	r0, r3
 8008e5e:	3708      	adds	r7, #8
 8008e60:	46bd      	mov	sp, r7
 8008e62:	bd80      	pop	{r7, pc}

08008e64 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b082      	sub	sp, #8
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	4618      	mov	r0, r3
 8008e70:	2326      	movs	r3, #38	@ 0x26
 8008e72:	461a      	mov	r2, r3
 8008e74:	2100      	movs	r1, #0
 8008e76:	f018 fb1e 	bl	80214b6 <memset>
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	4618      	mov	r0, r3
 8008e7e:	f7ff ffbd 	bl	8008dfc <_ZN8touchgfx6WidgetC1Ev>
 8008e82:	4a09      	ldr	r2, [pc, #36]	@ (8008ea8 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	601a      	str	r2, [r3, #0]
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	22ff      	movs	r2, #255	@ 0xff
 8008e8c:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	3328      	adds	r3, #40	@ 0x28
 8008e94:	2100      	movs	r1, #0
 8008e96:	4618      	mov	r0, r3
 8008e98:	f7ff fd3c 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	4618      	mov	r0, r3
 8008ea0:	3708      	adds	r7, #8
 8008ea2:	46bd      	mov	sp, r7
 8008ea4:	bd80      	pop	{r7, pc}
 8008ea6:	bf00      	nop
 8008ea8:	08023cd8 	.word	0x08023cd8

08008eac <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8008eac:	b480      	push	{r7}
 8008eae:	b083      	sub	sp, #12
 8008eb0:	af00      	add	r7, sp, #0
 8008eb2:	6078      	str	r0, [r7, #4]
 8008eb4:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	683a      	ldr	r2, [r7, #0]
 8008eba:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8008ebc:	bf00      	nop
 8008ebe:	370c      	adds	r7, #12
 8008ec0:	46bd      	mov	sp, r7
 8008ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ec6:	4770      	bx	lr

08008ec8 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8008ec8:	b480      	push	{r7}
 8008eca:	b083      	sub	sp, #12
 8008ecc:	af00      	add	r7, sp, #0
 8008ece:	6078      	str	r0, [r7, #4]
 8008ed0:	460b      	mov	r3, r1
 8008ed2:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8008ed4:	4a06      	ldr	r2, [pc, #24]	@ (8008ef0 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8008ed6:	687b      	ldr	r3, [r7, #4]
 8008ed8:	601a      	str	r2, [r3, #0]
 8008eda:	687b      	ldr	r3, [r7, #4]
 8008edc:	887a      	ldrh	r2, [r7, #2]
 8008ede:	809a      	strh	r2, [r3, #4]
    }
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	4618      	mov	r0, r3
 8008ee4:	370c      	adds	r7, #12
 8008ee6:	46bd      	mov	sp, r7
 8008ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008eec:	4770      	bx	lr
 8008eee:	bf00      	nop
 8008ef0:	08023200 	.word	0x08023200

08008ef4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8008ef4:	b580      	push	{r7, lr}
 8008ef6:	b082      	sub	sp, #8
 8008ef8:	af00      	add	r7, sp, #0
 8008efa:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	4618      	mov	r0, r3
 8008f00:	2326      	movs	r3, #38	@ 0x26
 8008f02:	461a      	mov	r2, r3
 8008f04:	2100      	movs	r1, #0
 8008f06:	f018 fad6 	bl	80214b6 <memset>
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	4618      	mov	r0, r3
 8008f0e:	f7ff ff75 	bl	8008dfc <_ZN8touchgfx6WidgetC1Ev>
 8008f12:	4a16      	ldr	r2, [pc, #88]	@ (8008f6c <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8008f14:	687b      	ldr	r3, [r7, #4]
 8008f16:	601a      	str	r2, [r3, #0]
 8008f18:	687b      	ldr	r3, [r7, #4]
 8008f1a:	3328      	adds	r3, #40	@ 0x28
 8008f1c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8008f20:	4618      	mov	r0, r3
 8008f22:	f7ff ffd1 	bl	8008ec8 <_ZN8touchgfx9TypedTextC1Et>
 8008f26:	687b      	ldr	r3, [r7, #4]
 8008f28:	3330      	adds	r3, #48	@ 0x30
 8008f2a:	2100      	movs	r1, #0
 8008f2c:	4618      	mov	r0, r3
 8008f2e:	f7ff fcf1 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	2200      	movs	r2, #0
 8008f36:	869a      	strh	r2, [r3, #52]	@ 0x34
 8008f38:	687b      	ldr	r3, [r7, #4]
 8008f3a:	22ff      	movs	r2, #255	@ 0xff
 8008f3c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 8008f40:	687b      	ldr	r3, [r7, #4]
 8008f42:	2200      	movs	r2, #0
 8008f44:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	2200      	movs	r2, #0
 8008f4c:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	2200      	movs	r2, #0
 8008f54:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	333c      	adds	r3, #60	@ 0x3c
 8008f5c:	4618      	mov	r0, r3
 8008f5e:	f000 f8f0 	bl	8009142 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	4618      	mov	r0, r3
 8008f66:	3708      	adds	r7, #8
 8008f68:	46bd      	mov	sp, r7
 8008f6a:	bd80      	pop	{r7, pc}
 8008f6c:	08023c48 	.word	0x08023c48

08008f70 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 8008f70:	b590      	push	{r4, r7, lr}
 8008f72:	b087      	sub	sp, #28
 8008f74:	af00      	add	r7, sp, #0
 8008f76:	6178      	str	r0, [r7, #20]
 8008f78:	460b      	mov	r3, r1
 8008f7a:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8008f7c:	697b      	ldr	r3, [r7, #20]
 8008f7e:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8008f82:	4611      	mov	r1, r2
 8008f84:	4618      	mov	r0, r3
 8008f86:	f7ff fdd6 	bl	8008b36 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 8008f8a:	697b      	ldr	r3, [r7, #20]
 8008f8c:	681b      	ldr	r3, [r3, #0]
 8008f8e:	3384      	adds	r3, #132	@ 0x84
 8008f90:	681b      	ldr	r3, [r3, #0]
 8008f92:	697c      	ldr	r4, [r7, #20]
 8008f94:	463a      	mov	r2, r7
 8008f96:	6979      	ldr	r1, [r7, #20]
 8008f98:	4610      	mov	r0, r2
 8008f9a:	4798      	blx	r3
 8008f9c:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8008fa0:	463a      	mov	r2, r7
 8008fa2:	ca07      	ldmia	r2, {r0, r1, r2}
 8008fa4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8008fa8:	bf00      	nop
 8008faa:	371c      	adds	r7, #28
 8008fac:	46bd      	mov	sp, r7
 8008fae:	bd90      	pop	{r4, r7, pc}

08008fb0 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8008fb0:	b590      	push	{r4, r7, lr}
 8008fb2:	b087      	sub	sp, #28
 8008fb4:	af00      	add	r7, sp, #0
 8008fb6:	6178      	str	r0, [r7, #20]
 8008fb8:	460b      	mov	r3, r1
 8008fba:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8008fbc:	697b      	ldr	r3, [r7, #20]
 8008fbe:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8008fc2:	4611      	mov	r1, r2
 8008fc4:	4618      	mov	r0, r3
 8008fc6:	f7ff fdc5 	bl	8008b54 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8008fca:	697b      	ldr	r3, [r7, #20]
 8008fcc:	681b      	ldr	r3, [r3, #0]
 8008fce:	3384      	adds	r3, #132	@ 0x84
 8008fd0:	681b      	ldr	r3, [r3, #0]
 8008fd2:	697c      	ldr	r4, [r7, #20]
 8008fd4:	463a      	mov	r2, r7
 8008fd6:	6979      	ldr	r1, [r7, #20]
 8008fd8:	4610      	mov	r0, r2
 8008fda:	4798      	blx	r3
 8008fdc:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8008fe0:	463a      	mov	r2, r7
 8008fe2:	ca07      	ldmia	r2, {r0, r1, r2}
 8008fe4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8008fe8:	bf00      	nop
 8008fea:	371c      	adds	r7, #28
 8008fec:	46bd      	mov	sp, r7
 8008fee:	bd90      	pop	{r4, r7, pc}

08008ff0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8008ff0:	b580      	push	{r7, lr}
 8008ff2:	b082      	sub	sp, #8
 8008ff4:	af00      	add	r7, sp, #0
 8008ff6:	6078      	str	r0, [r7, #4]
 8008ff8:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8008ffa:	6878      	ldr	r0, [r7, #4]
 8008ffc:	f7ff fc99 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
    }
 8009000:	6878      	ldr	r0, [r7, #4]
 8009002:	3708      	adds	r7, #8
 8009004:	46bd      	mov	sp, r7
 8009006:	bd80      	pop	{r7, pc}

08009008 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8009008:	b480      	push	{r7}
 800900a:	b083      	sub	sp, #12
 800900c:	af00      	add	r7, sp, #0
 800900e:	6078      	str	r0, [r7, #4]
 8009010:	460b      	mov	r3, r1
 8009012:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009014:	687b      	ldr	r3, [r7, #4]
 8009016:	78fa      	ldrb	r2, [r7, #3]
 8009018:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 800901c:	bf00      	nop
 800901e:	370c      	adds	r7, #12
 8009020:	46bd      	mov	sp, r7
 8009022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009026:	4770      	bx	lr

08009028 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8009028:	b5f0      	push	{r4, r5, r6, r7, lr}
 800902a:	b085      	sub	sp, #20
 800902c:	af00      	add	r7, sp, #0
 800902e:	6078      	str	r0, [r7, #4]
 8009030:	460b      	mov	r3, r1
 8009032:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009034:	687e      	ldr	r6, [r7, #4]
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	681b      	ldr	r3, [r3, #0]
 800903a:	3334      	adds	r3, #52	@ 0x34
 800903c:	681c      	ldr	r4, [r3, #0]
 800903e:	887d      	ldrh	r5, [r7, #2]
 8009040:	6878      	ldr	r0, [r7, #4]
 8009042:	f000 f867 	bl	8009114 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8009046:	4603      	mov	r3, r0
 8009048:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800904a:	4b1c      	ldr	r3, [pc, #112]	@ (80090bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800904c:	681b      	ldr	r3, [r3, #0]
 800904e:	2b00      	cmp	r3, #0
 8009050:	d105      	bne.n	800905e <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009052:	4b1b      	ldr	r3, [pc, #108]	@ (80090c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009054:	4a1b      	ldr	r2, [pc, #108]	@ (80090c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009056:	216c      	movs	r1, #108	@ 0x6c
 8009058:	481b      	ldr	r0, [pc, #108]	@ (80090c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800905a:	f018 f825 	bl	80210a8 <__assert_func>
 800905e:	68fb      	ldr	r3, [r7, #12]
 8009060:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009062:	68bb      	ldr	r3, [r7, #8]
 8009064:	889a      	ldrh	r2, [r3, #4]
 8009066:	4b19      	ldr	r3, [pc, #100]	@ (80090cc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 8009068:	881b      	ldrh	r3, [r3, #0]
 800906a:	429a      	cmp	r2, r3
 800906c:	bf34      	ite	cc
 800906e:	2301      	movcc	r3, #1
 8009070:	2300      	movcs	r3, #0
 8009072:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009074:	2b00      	cmp	r3, #0
 8009076:	d105      	bne.n	8009084 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 8009078:	4b15      	ldr	r3, [pc, #84]	@ (80090d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800907a:	4a12      	ldr	r2, [pc, #72]	@ (80090c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800907c:	216d      	movs	r1, #109	@ 0x6d
 800907e:	4812      	ldr	r0, [pc, #72]	@ (80090c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009080:	f018 f812 	bl	80210a8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009084:	4b13      	ldr	r3, [pc, #76]	@ (80090d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 8009086:	681a      	ldr	r2, [r3, #0]
 8009088:	4b0c      	ldr	r3, [pc, #48]	@ (80090bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800908a:	6819      	ldr	r1, [r3, #0]
 800908c:	68fb      	ldr	r3, [r7, #12]
 800908e:	889b      	ldrh	r3, [r3, #4]
 8009090:	005b      	lsls	r3, r3, #1
 8009092:	440b      	add	r3, r1
 8009094:	781b      	ldrb	r3, [r3, #0]
 8009096:	009b      	lsls	r3, r3, #2
 8009098:	4413      	add	r3, r2
 800909a:	681b      	ldr	r3, [r3, #0]
 800909c:	681a      	ldr	r2, [r3, #0]
 800909e:	3230      	adds	r2, #48	@ 0x30
 80090a0:	6812      	ldr	r2, [r2, #0]
 80090a2:	4618      	mov	r0, r3
 80090a4:	4790      	blx	r2
 80090a6:	4603      	mov	r3, r0
 80090a8:	1aeb      	subs	r3, r5, r3
 80090aa:	b29b      	uxth	r3, r3
 80090ac:	b21b      	sxth	r3, r3
 80090ae:	4619      	mov	r1, r3
 80090b0:	4630      	mov	r0, r6
 80090b2:	47a0      	blx	r4
    }
 80090b4:	bf00      	nop
 80090b6:	3714      	adds	r7, #20
 80090b8:	46bd      	mov	sp, r7
 80090ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80090bc:	20002280 	.word	0x20002280
 80090c0:	08022410 	.word	0x08022410
 80090c4:	08022454 	.word	0x08022454
 80090c8:	08022490 	.word	0x08022490
 80090cc:	20002284 	.word	0x20002284
 80090d0:	080224d4 	.word	0x080224d4
 80090d4:	20002288 	.word	0x20002288

080090d8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80090d8:	b580      	push	{r7, lr}
 80090da:	b082      	sub	sp, #8
 80090dc:	af00      	add	r7, sp, #0
 80090de:	6078      	str	r0, [r7, #4]
 80090e0:	460b      	mov	r3, r1
 80090e2:	807b      	strh	r3, [r7, #2]
 80090e4:	4613      	mov	r3, r2
 80090e6:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80090e8:	687a      	ldr	r2, [r7, #4]
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	3330      	adds	r3, #48	@ 0x30
 80090f0:	681b      	ldr	r3, [r3, #0]
 80090f2:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 80090f6:	4610      	mov	r0, r2
 80090f8:	4798      	blx	r3
        setBaselineY(baselineY);
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	681b      	ldr	r3, [r3, #0]
 80090fe:	3364      	adds	r3, #100	@ 0x64
 8009100:	681b      	ldr	r3, [r3, #0]
 8009102:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009106:	4611      	mov	r1, r2
 8009108:	6878      	ldr	r0, [r7, #4]
 800910a:	4798      	blx	r3
    }
 800910c:	bf00      	nop
 800910e:	3708      	adds	r7, #8
 8009110:	46bd      	mov	sp, r7
 8009112:	bd80      	pop	{r7, pc}

08009114 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8009114:	b480      	push	{r7}
 8009116:	b083      	sub	sp, #12
 8009118:	af00      	add	r7, sp, #0
 800911a:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	3328      	adds	r3, #40	@ 0x28
    }
 8009120:	4618      	mov	r0, r3
 8009122:	370c      	adds	r7, #12
 8009124:	46bd      	mov	sp, r7
 8009126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912a:	4770      	bx	lr

0800912c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800912c:	b480      	push	{r7}
 800912e:	b083      	sub	sp, #12
 8009130:	af00      	add	r7, sp, #0
 8009132:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009134:	2300      	movs	r3, #0
    }
 8009136:	4618      	mov	r0, r3
 8009138:	370c      	adds	r7, #12
 800913a:	46bd      	mov	sp, r7
 800913c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009140:	4770      	bx	lr

08009142 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 8009142:	b580      	push	{r7, lr}
 8009144:	b084      	sub	sp, #16
 8009146:	af02      	add	r7, sp, #8
 8009148:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800914a:	6878      	ldr	r0, [r7, #4]
 800914c:	f04f 33ff 	mov.w	r3, #4294967295
 8009150:	9300      	str	r3, [sp, #0]
 8009152:	f04f 33ff 	mov.w	r3, #4294967295
 8009156:	2200      	movs	r2, #0
 8009158:	2100      	movs	r1, #0
 800915a:	f7ff fc01 	bl	8008960 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800915e:	687b      	ldr	r3, [r7, #4]
 8009160:	2200      	movs	r2, #0
 8009162:	609a      	str	r2, [r3, #8]
        {
        }
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	4618      	mov	r0, r3
 8009168:	3708      	adds	r7, #8
 800916a:	46bd      	mov	sp, r7
 800916c:	bd80      	pop	{r7, pc}
	...

08009170 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009170:	b580      	push	{r7, lr}
 8009172:	b082      	sub	sp, #8
 8009174:	af00      	add	r7, sp, #0
 8009176:	6078      	str	r0, [r7, #4]
 8009178:	4a08      	ldr	r2, [pc, #32]	@ (800919c <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	601a      	str	r2, [r3, #0]
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	3328      	adds	r3, #40	@ 0x28
 8009182:	4618      	mov	r0, r3
 8009184:	f7fe fc8c 	bl	8007aa0 <_ZN8touchgfx9TypedTextD1Ev>
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	4618      	mov	r0, r3
 800918c:	f7ff fe48 	bl	8008e20 <_ZN8touchgfx6WidgetD1Ev>
 8009190:	687b      	ldr	r3, [r7, #4]
 8009192:	4618      	mov	r0, r3
 8009194:	3708      	adds	r7, #8
 8009196:	46bd      	mov	sp, r7
 8009198:	bd80      	pop	{r7, pc}
 800919a:	bf00      	nop
 800919c:	08023c48 	.word	0x08023c48

080091a0 <_ZN8touchgfx8TextAreaD0Ev>:
 80091a0:	b580      	push	{r7, lr}
 80091a2:	b082      	sub	sp, #8
 80091a4:	af00      	add	r7, sp, #0
 80091a6:	6078      	str	r0, [r7, #4]
 80091a8:	6878      	ldr	r0, [r7, #4]
 80091aa:	f7ff ffe1 	bl	8009170 <_ZN8touchgfx8TextAreaD1Ev>
 80091ae:	2148      	movs	r1, #72	@ 0x48
 80091b0:	6878      	ldr	r0, [r7, #4]
 80091b2:	f017 ff4c 	bl	802104e <_ZdlPvj>
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	4618      	mov	r0, r3
 80091ba:	3708      	adds	r7, #8
 80091bc:	46bd      	mov	sp, r7
 80091be:	bd80      	pop	{r7, pc}

080091c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 80091c0:	b580      	push	{r7, lr}
 80091c2:	b082      	sub	sp, #8
 80091c4:	af00      	add	r7, sp, #0
 80091c6:	6078      	str	r0, [r7, #4]
        : TextArea()
 80091c8:	687b      	ldr	r3, [r7, #4]
 80091ca:	4618      	mov	r0, r3
 80091cc:	f7ff fe92 	bl	8008ef4 <_ZN8touchgfx8TextAreaC1Ev>
 80091d0:	4a03      	ldr	r2, [pc, #12]	@ (80091e0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	601a      	str	r2, [r3, #0]
    {
    }
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	4618      	mov	r0, r3
 80091da:	3708      	adds	r7, #8
 80091dc:	46bd      	mov	sp, r7
 80091de:	bd80      	pop	{r7, pc}
 80091e0:	08023d40 	.word	0x08023d40

080091e4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 80091e4:	b580      	push	{r7, lr}
 80091e6:	b082      	sub	sp, #8
 80091e8:	af00      	add	r7, sp, #0
 80091ea:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 80091ec:	687b      	ldr	r3, [r7, #4]
 80091ee:	4618      	mov	r0, r3
 80091f0:	f7ff fc26 	bl	8008a40 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80091f4:	bf00      	nop
 80091f6:	3708      	adds	r7, #8
 80091f8:	46bd      	mov	sp, r7
 80091fa:	bd80      	pop	{r7, pc}

080091fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 80091fc:	b580      	push	{r7, lr}
 80091fe:	b082      	sub	sp, #8
 8009200:	af00      	add	r7, sp, #0
 8009202:	6078      	str	r0, [r7, #4]
 8009204:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 8009206:	6878      	ldr	r0, [r7, #4]
 8009208:	f7ff ff9b 	bl	8009142 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800920c:	6878      	ldr	r0, [r7, #4]
 800920e:	3708      	adds	r7, #8
 8009210:	46bd      	mov	sp, r7
 8009212:	bd80      	pop	{r7, pc}

08009214 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8009214:	b580      	push	{r7, lr}
 8009216:	b082      	sub	sp, #8
 8009218:	af00      	add	r7, sp, #0
 800921a:	6078      	str	r0, [r7, #4]
 800921c:	4a05      	ldr	r2, [pc, #20]	@ (8009234 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	601a      	str	r2, [r3, #0]
 8009222:	687b      	ldr	r3, [r7, #4]
 8009224:	4618      	mov	r0, r3
 8009226:	f7ff ffa3 	bl	8009170 <_ZN8touchgfx8TextAreaD1Ev>
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	4618      	mov	r0, r3
 800922e:	3708      	adds	r7, #8
 8009230:	46bd      	mov	sp, r7
 8009232:	bd80      	pop	{r7, pc}
 8009234:	08023d40 	.word	0x08023d40

08009238 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8009238:	b580      	push	{r7, lr}
 800923a:	b082      	sub	sp, #8
 800923c:	af00      	add	r7, sp, #0
 800923e:	6078      	str	r0, [r7, #4]
 8009240:	6878      	ldr	r0, [r7, #4]
 8009242:	f7ff ffe7 	bl	8009214 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8009246:	2148      	movs	r1, #72	@ 0x48
 8009248:	6878      	ldr	r0, [r7, #4]
 800924a:	f017 ff00 	bl	802104e <_ZdlPvj>
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	4618      	mov	r0, r3
 8009252:	3708      	adds	r7, #8
 8009254:	46bd      	mov	sp, r7
 8009256:	bd80      	pop	{r7, pc}

08009258 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 8009258:	b580      	push	{r7, lr}
 800925a:	b082      	sub	sp, #8
 800925c:	af00      	add	r7, sp, #0
 800925e:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	4618      	mov	r0, r3
 8009264:	f7ff ffac 	bl	80091c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 8009268:	4a05      	ldr	r2, [pc, #20]	@ (8009280 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	601a      	str	r2, [r3, #0]
 800926e:	687b      	ldr	r3, [r7, #4]
 8009270:	2200      	movs	r2, #0
 8009272:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	4618      	mov	r0, r3
 8009278:	3708      	adds	r7, #8
 800927a:	46bd      	mov	sp, r7
 800927c:	bd80      	pop	{r7, pc}
 800927e:	bf00      	nop
 8009280:	08023428 	.word	0x08023428

08009284 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 8009284:	b480      	push	{r7}
 8009286:	b083      	sub	sp, #12
 8009288:	af00      	add	r7, sp, #0
 800928a:	6078      	str	r0, [r7, #4]
 800928c:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800928e:	687b      	ldr	r3, [r7, #4]
 8009290:	683a      	ldr	r2, [r7, #0]
 8009292:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 8009294:	bf00      	nop
 8009296:	370c      	adds	r7, #12
 8009298:	46bd      	mov	sp, r7
 800929a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800929e:	4770      	bx	lr

080092a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 80092a0:	b480      	push	{r7}
 80092a2:	b083      	sub	sp, #12
 80092a4:	af00      	add	r7, sp, #0
 80092a6:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 80092a8:	687b      	ldr	r3, [r7, #4]
 80092aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 80092ac:	4618      	mov	r0, r3
 80092ae:	370c      	adds	r7, #12
 80092b0:	46bd      	mov	sp, r7
 80092b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092b6:	4770      	bx	lr

080092b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 80092b8:	b580      	push	{r7, lr}
 80092ba:	b082      	sub	sp, #8
 80092bc:	af00      	add	r7, sp, #0
 80092be:	6078      	str	r0, [r7, #4]
 80092c0:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 80092c2:	6839      	ldr	r1, [r7, #0]
 80092c4:	6878      	ldr	r0, [r7, #4]
 80092c6:	f7ff ffdd 	bl	8009284 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 80092ca:	bf00      	nop
 80092cc:	3708      	adds	r7, #8
 80092ce:	46bd      	mov	sp, r7
 80092d0:	bd80      	pop	{r7, pc}
	...

080092d4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 80092d4:	b580      	push	{r7, lr}
 80092d6:	b082      	sub	sp, #8
 80092d8:	af00      	add	r7, sp, #0
 80092da:	6078      	str	r0, [r7, #4]
 80092dc:	4a05      	ldr	r2, [pc, #20]	@ (80092f4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	601a      	str	r2, [r3, #0]
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	4618      	mov	r0, r3
 80092e6:	f7ff fd21 	bl	8008d2c <_ZN8touchgfx6ScreenD1Ev>
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	4618      	mov	r0, r3
 80092ee:	3708      	adds	r7, #8
 80092f0:	46bd      	mov	sp, r7
 80092f2:	bd80      	pop	{r7, pc}
 80092f4:	080233f4 	.word	0x080233f4

080092f8 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 80092f8:	b580      	push	{r7, lr}
 80092fa:	b082      	sub	sp, #8
 80092fc:	af00      	add	r7, sp, #0
 80092fe:	6078      	str	r0, [r7, #4]
 8009300:	6878      	ldr	r0, [r7, #4]
 8009302:	f7ff ffe7 	bl	80092d4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8009306:	2140      	movs	r1, #64	@ 0x40
 8009308:	6878      	ldr	r0, [r7, #4]
 800930a:	f017 fea0 	bl	802104e <_ZdlPvj>
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	4618      	mov	r0, r3
 8009312:	3708      	adds	r7, #8
 8009314:	46bd      	mov	sp, r7
 8009316:	bd80      	pop	{r7, pc}

08009318 <_ZN14screenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase()
 8009318:	b590      	push	{r4, r7, lr}
 800931a:	b09d      	sub	sp, #116	@ 0x74
 800931c:	af02      	add	r7, sp, #8
 800931e:	6178      	str	r0, [r7, #20]
 8009320:	697b      	ldr	r3, [r7, #20]
 8009322:	4618      	mov	r0, r3
 8009324:	f000 f9fa 	bl	800971c <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 8009328:	4acf      	ldr	r2, [pc, #828]	@ (8009668 <_ZN14screenViewBaseC1Ev+0x350>)
 800932a:	697b      	ldr	r3, [r7, #20]
 800932c:	601a      	str	r2, [r3, #0]
 800932e:	697b      	ldr	r3, [r7, #20]
 8009330:	3340      	adds	r3, #64	@ 0x40
 8009332:	4618      	mov	r0, r3
 8009334:	f7ff fd96 	bl	8008e64 <_ZN8touchgfx3BoxC1Ev>
 8009338:	697b      	ldr	r3, [r7, #20]
 800933a:	336c      	adds	r3, #108	@ 0x6c
 800933c:	4618      	mov	r0, r3
 800933e:	f7ff fd91 	bl	8008e64 <_ZN8touchgfx3BoxC1Ev>
 8009342:	697b      	ldr	r3, [r7, #20]
 8009344:	3398      	adds	r3, #152	@ 0x98
 8009346:	4618      	mov	r0, r3
 8009348:	f7ff ff86 	bl	8009258 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800934c:	697b      	ldr	r3, [r7, #20]
 800934e:	33e4      	adds	r3, #228	@ 0xe4
 8009350:	4618      	mov	r0, r3
 8009352:	f7ff fd87 	bl	8008e64 <_ZN8touchgfx3BoxC1Ev>
 8009356:	697b      	ldr	r3, [r7, #20]
 8009358:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800935c:	4618      	mov	r0, r3
 800935e:	f7ff fd81 	bl	8008e64 <_ZN8touchgfx3BoxC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 8009362:	697b      	ldr	r3, [r7, #20]
 8009364:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 8009368:	23f0      	movs	r3, #240	@ 0xf0
 800936a:	9300      	str	r3, [sp, #0]
 800936c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009370:	2200      	movs	r2, #0
 8009372:	2100      	movs	r1, #0
 8009374:	f7ff fb82 	bl	8008a7c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8009378:	697b      	ldr	r3, [r7, #20]
 800937a:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800937e:	2300      	movs	r3, #0
 8009380:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
 8009384:	2300      	movs	r3, #0
 8009386:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
 800938a:	2300      	movs	r3, #0
 800938c:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8009390:	f897 3049 	ldrb.w	r3, [r7, #73]	@ 0x49
 8009394:	041a      	lsls	r2, r3, #16
 8009396:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 800939a:	021b      	lsls	r3, r3, #8
 800939c:	431a      	orrs	r2, r3
 800939e:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 80093a2:	4313      	orrs	r3, r2
 80093a4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 80093a8:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 80093ac:	4611      	mov	r1, r2
 80093ae:	4618      	mov	r0, r3
 80093b0:	f7ff fab0 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 80093b4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80093b6:	4619      	mov	r1, r3
 80093b8:	4620      	mov	r0, r4
 80093ba:	f7ff fd77 	bl	8008eac <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 80093be:	697a      	ldr	r2, [r7, #20]
 80093c0:	697b      	ldr	r3, [r7, #20]
 80093c2:	3340      	adds	r3, #64	@ 0x40
 80093c4:	4619      	mov	r1, r3
 80093c6:	4610      	mov	r0, r2
 80093c8:	f7ff fd08 	bl	8008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 320, 240);
 80093cc:	697b      	ldr	r3, [r7, #20]
 80093ce:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 80093d2:	23f0      	movs	r3, #240	@ 0xf0
 80093d4:	9300      	str	r3, [sp, #0]
 80093d6:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80093da:	2200      	movs	r2, #0
 80093dc:	2100      	movs	r1, #0
 80093de:	f7ff fb4d 	bl	8008a7c <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 80093e2:	697b      	ldr	r3, [r7, #20]
 80093e4:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 80093e8:	23ff      	movs	r3, #255	@ 0xff
 80093ea:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 80093ee:	23ff      	movs	r3, #255	@ 0xff
 80093f0:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
 80093f4:	23ff      	movs	r3, #255	@ 0xff
 80093f6:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
 80093fa:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 80093fe:	041a      	lsls	r2, r3, #16
 8009400:	f897 304b 	ldrb.w	r3, [r7, #75]	@ 0x4b
 8009404:	021b      	lsls	r3, r3, #8
 8009406:	431a      	orrs	r2, r3
 8009408:	f897 304a 	ldrb.w	r3, [r7, #74]	@ 0x4a
 800940c:	4313      	orrs	r3, r2
 800940e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009412:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8009416:	4611      	mov	r1, r2
 8009418:	4618      	mov	r0, r3
 800941a:	f7ff fa7b 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 800941e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009420:	4619      	mov	r1, r3
 8009422:	4620      	mov	r0, r4
 8009424:	f7ff fd42 	bl	8008eac <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 8009428:	697a      	ldr	r2, [r7, #20]
 800942a:	697b      	ldr	r3, [r7, #20]
 800942c:	336c      	adds	r3, #108	@ 0x6c
 800942e:	4619      	mov	r1, r3
 8009430:	4610      	mov	r0, r2
 8009432:	f7ff fcd3 	bl	8008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setPosition(10, 76, 301, 88);
 8009436:	697b      	ldr	r3, [r7, #20]
 8009438:	f103 0098 	add.w	r0, r3, #152	@ 0x98
 800943c:	2358      	movs	r3, #88	@ 0x58
 800943e:	9300      	str	r3, [sp, #0]
 8009440:	f240 132d 	movw	r3, #301	@ 0x12d
 8009444:	224c      	movs	r2, #76	@ 0x4c
 8009446:	210a      	movs	r1, #10
 8009448:	f7ff fb18 	bl	8008a7c <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800944c:	697b      	ldr	r3, [r7, #20]
 800944e:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009452:	2300      	movs	r3, #0
 8009454:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8009458:	2300      	movs	r3, #0
 800945a:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 800945e:	2300      	movs	r3, #0
 8009460:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8009464:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8009468:	041a      	lsls	r2, r3, #16
 800946a:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 800946e:	021b      	lsls	r3, r3, #8
 8009470:	431a      	orrs	r2, r3
 8009472:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8009476:	4313      	orrs	r3, r2
 8009478:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800947c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8009480:	4611      	mov	r1, r2
 8009482:	4618      	mov	r0, r3
 8009484:	f7ff fa46 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 8009488:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800948a:	653c      	str	r4, [r7, #80]	@ 0x50
 800948c:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800948e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009490:	69fa      	ldr	r2, [r7, #28]
 8009492:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009494:	bf00      	nop
    textArea1.setLinespacing(0);
 8009496:	697b      	ldr	r3, [r7, #20]
 8009498:	3398      	adds	r3, #152	@ 0x98
 800949a:	65bb      	str	r3, [r7, #88]	@ 0x58
 800949c:	2300      	movs	r3, #0
 800949e:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
        linespace = space;
 80094a2:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80094a4:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 80094a8:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 80094aa:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80094ac:	681b      	ldr	r3, [r3, #0]
 80094ae:	3384      	adds	r3, #132	@ 0x84
 80094b0:	681b      	ldr	r3, [r3, #0]
 80094b2:	6dbc      	ldr	r4, [r7, #88]	@ 0x58
 80094b4:	463a      	mov	r2, r7
 80094b6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 80094b8:	4610      	mov	r0, r2
 80094ba:	4798      	blx	r3
 80094bc:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 80094c0:	463a      	mov	r2, r7
 80094c2:	ca07      	ldmia	r2, {r0, r1, r2}
 80094c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 80094c8:	bf00      	nop
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y9WY).getText());
 80094ca:	697b      	ldr	r3, [r7, #20]
 80094cc:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 80094d0:	f107 0320 	add.w	r3, r7, #32
 80094d4:	2100      	movs	r1, #0
 80094d6:	4618      	mov	r0, r3
 80094d8:	f7ff fcf6 	bl	8008ec8 <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80094dc:	4b63      	ldr	r3, [pc, #396]	@ (800966c <_ZN14screenViewBaseC1Ev+0x354>)
 80094de:	681b      	ldr	r3, [r3, #0]
 80094e0:	2b00      	cmp	r3, #0
 80094e2:	d105      	bne.n	80094f0 <_ZN14screenViewBaseC1Ev+0x1d8>
 80094e4:	4b62      	ldr	r3, [pc, #392]	@ (8009670 <_ZN14screenViewBaseC1Ev+0x358>)
 80094e6:	4a63      	ldr	r2, [pc, #396]	@ (8009674 <_ZN14screenViewBaseC1Ev+0x35c>)
 80094e8:	2160      	movs	r1, #96	@ 0x60
 80094ea:	4863      	ldr	r0, [pc, #396]	@ (8009678 <_ZN14screenViewBaseC1Ev+0x360>)
 80094ec:	f017 fddc 	bl	80210a8 <__assert_func>
 80094f0:	f107 0320 	add.w	r3, r7, #32
 80094f4:	65fb      	str	r3, [r7, #92]	@ 0x5c
        return typedTextId < numberOfTypedTexts;
 80094f6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80094f8:	889a      	ldrh	r2, [r3, #4]
 80094fa:	4b60      	ldr	r3, [pc, #384]	@ (800967c <_ZN14screenViewBaseC1Ev+0x364>)
 80094fc:	881b      	ldrh	r3, [r3, #0]
 80094fe:	429a      	cmp	r2, r3
 8009500:	bf34      	ite	cc
 8009502:	2301      	movcc	r3, #1
 8009504:	2300      	movcs	r3, #0
 8009506:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009508:	2b00      	cmp	r3, #0
 800950a:	d105      	bne.n	8009518 <_ZN14screenViewBaseC1Ev+0x200>
 800950c:	4b5c      	ldr	r3, [pc, #368]	@ (8009680 <_ZN14screenViewBaseC1Ev+0x368>)
 800950e:	4a59      	ldr	r2, [pc, #356]	@ (8009674 <_ZN14screenViewBaseC1Ev+0x35c>)
 8009510:	2161      	movs	r1, #97	@ 0x61
 8009512:	4859      	ldr	r0, [pc, #356]	@ (8009678 <_ZN14screenViewBaseC1Ev+0x360>)
 8009514:	f017 fdc8 	bl	80210a8 <__assert_func>
        return texts->getText(typedTextId);
 8009518:	4b5a      	ldr	r3, [pc, #360]	@ (8009684 <_ZN14screenViewBaseC1Ev+0x36c>)
 800951a:	681b      	ldr	r3, [r3, #0]
 800951c:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800951e:	4611      	mov	r1, r2
 8009520:	4618      	mov	r0, r3
 8009522:	f000 fb1b 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 8009526:	4603      	mov	r3, r0
 8009528:	bf00      	nop
 800952a:	4a57      	ldr	r2, [pc, #348]	@ (8009688 <_ZN14screenViewBaseC1Ev+0x370>)
 800952c:	210a      	movs	r1, #10
 800952e:	4620      	mov	r0, r4
 8009530:	f009 f9cb 	bl	80128ca <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8009534:	f107 0320 	add.w	r3, r7, #32
 8009538:	4618      	mov	r0, r3
 800953a:	f7fe fab1 	bl	8007aa0 <_ZN8touchgfx9TypedTextD1Ev>
    textArea1.setWildcard(textArea1Buffer);
 800953e:	697b      	ldr	r3, [r7, #20]
 8009540:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 8009544:	697b      	ldr	r3, [r7, #20]
 8009546:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800954a:	4619      	mov	r1, r3
 800954c:	4610      	mov	r0, r2
 800954e:	f7ff feb3 	bl	80092b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1IKV));
 8009552:	697b      	ldr	r3, [r7, #20]
 8009554:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009558:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800955c:	2101      	movs	r1, #1
 800955e:	4618      	mov	r0, r3
 8009560:	f7ff fcb2 	bl	8008ec8 <_ZN8touchgfx9TypedTextC1Et>
 8009564:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009568:	4619      	mov	r1, r3
 800956a:	4620      	mov	r0, r4
 800956c:	f004 fb18 	bl	800dba0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009570:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009574:	4618      	mov	r0, r3
 8009576:	f7fe fa93 	bl	8007aa0 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800957a:	697a      	ldr	r2, [r7, #20]
 800957c:	697b      	ldr	r3, [r7, #20]
 800957e:	3398      	adds	r3, #152	@ 0x98
 8009580:	4619      	mov	r1, r3
 8009582:	4610      	mov	r0, r2
 8009584:	f7ff fc2a 	bl	8008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2.setPosition(0, 0, 320, 50);
 8009588:	697b      	ldr	r3, [r7, #20]
 800958a:	f103 00e4 	add.w	r0, r3, #228	@ 0xe4
 800958e:	2332      	movs	r3, #50	@ 0x32
 8009590:	9300      	str	r3, [sp, #0]
 8009592:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009596:	2200      	movs	r2, #0
 8009598:	2100      	movs	r1, #0
 800959a:	f7ff fa6f 	bl	8008a7c <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setColor(touchgfx::Color::getColorFromRGB(24, 214, 62));
 800959e:	697b      	ldr	r3, [r7, #20]
 80095a0:	f103 04e4 	add.w	r4, r3, #228	@ 0xe4
 80095a4:	2318      	movs	r3, #24
 80095a6:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 80095aa:	23d6      	movs	r3, #214	@ 0xd6
 80095ac:	f887 3063 	strb.w	r3, [r7, #99]	@ 0x63
 80095b0:	233e      	movs	r3, #62	@ 0x3e
 80095b2:	f887 3062 	strb.w	r3, [r7, #98]	@ 0x62
 80095b6:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 80095ba:	041a      	lsls	r2, r3, #16
 80095bc:	f897 3063 	ldrb.w	r3, [r7, #99]	@ 0x63
 80095c0:	021b      	lsls	r3, r3, #8
 80095c2:	431a      	orrs	r2, r3
 80095c4:	f897 3062 	ldrb.w	r3, [r7, #98]	@ 0x62
 80095c8:	4313      	orrs	r3, r2
 80095ca:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 80095ce:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 80095d2:	4611      	mov	r1, r2
 80095d4:	4618      	mov	r0, r3
 80095d6:	f7ff f99d 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 80095da:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80095dc:	4619      	mov	r1, r3
 80095de:	4620      	mov	r0, r4
 80095e0:	f7ff fc64 	bl	8008eac <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2);
 80095e4:	697a      	ldr	r2, [r7, #20]
 80095e6:	697b      	ldr	r3, [r7, #20]
 80095e8:	33e4      	adds	r3, #228	@ 0xe4
 80095ea:	4619      	mov	r1, r3
 80095ec:	4610      	mov	r0, r2
 80095ee:	f7ff fbf5 	bl	8008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2_1.setPosition(0, 190, 320, 50);
 80095f2:	697b      	ldr	r3, [r7, #20]
 80095f4:	f503 7088 	add.w	r0, r3, #272	@ 0x110
 80095f8:	2332      	movs	r3, #50	@ 0x32
 80095fa:	9300      	str	r3, [sp, #0]
 80095fc:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009600:	22be      	movs	r2, #190	@ 0xbe
 8009602:	2100      	movs	r1, #0
 8009604:	f7ff fa3a 	bl	8008a7c <_ZN8touchgfx8Drawable11setPositionEssss>
    box2_1.setColor(touchgfx::Color::getColorFromRGB(25, 125, 212));
 8009608:	697b      	ldr	r3, [r7, #20]
 800960a:	f503 7488 	add.w	r4, r3, #272	@ 0x110
 800960e:	2319      	movs	r3, #25
 8009610:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 8009614:	237d      	movs	r3, #125	@ 0x7d
 8009616:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
 800961a:	23d4      	movs	r3, #212	@ 0xd4
 800961c:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
 8009620:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8009624:	041a      	lsls	r2, r3, #16
 8009626:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 800962a:	021b      	lsls	r3, r3, #8
 800962c:	431a      	orrs	r2, r3
 800962e:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 8009632:	4313      	orrs	r3, r2
 8009634:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009638:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800963c:	4611      	mov	r1, r2
 800963e:	4618      	mov	r0, r3
 8009640:	f7ff f968 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 8009644:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009646:	4619      	mov	r1, r3
 8009648:	4620      	mov	r0, r4
 800964a:	f7ff fc2f 	bl	8008eac <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2_1);
 800964e:	697a      	ldr	r2, [r7, #20]
 8009650:	697b      	ldr	r3, [r7, #20]
 8009652:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 8009656:	4619      	mov	r1, r3
 8009658:	4610      	mov	r0, r2
 800965a:	f7ff fbbf 	bl	8008ddc <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800965e:	697b      	ldr	r3, [r7, #20]
 8009660:	4618      	mov	r0, r3
 8009662:	376c      	adds	r7, #108	@ 0x6c
 8009664:	46bd      	mov	sp, r7
 8009666:	bd90      	pop	{r4, r7, pc}
 8009668:	080233c0 	.word	0x080233c0
 800966c:	20002280 	.word	0x20002280
 8009670:	08022410 	.word	0x08022410
 8009674:	08022514 	.word	0x08022514
 8009678:	08022490 	.word	0x08022490
 800967c:	20002284 	.word	0x20002284
 8009680:	080224d4 	.word	0x080224d4
 8009684:	2000228c 	.word	0x2000228c
 8009688:	08022560 	.word	0x08022560

0800968c <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 800968c:	b580      	push	{r7, lr}
 800968e:	b082      	sub	sp, #8
 8009690:	af00      	add	r7, sp, #0
 8009692:	6078      	str	r0, [r7, #4]
 8009694:	4a12      	ldr	r2, [pc, #72]	@ (80096e0 <_ZN14screenViewBaseD1Ev+0x54>)
 8009696:	687b      	ldr	r3, [r7, #4]
 8009698:	601a      	str	r2, [r3, #0]
{

}
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 80096a0:	4618      	mov	r0, r3
 80096a2:	f000 f895 	bl	80097d0 <_ZN8touchgfx3BoxD1Ev>
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	33e4      	adds	r3, #228	@ 0xe4
 80096aa:	4618      	mov	r0, r3
 80096ac:	f000 f890 	bl	80097d0 <_ZN8touchgfx3BoxD1Ev>
 80096b0:	687b      	ldr	r3, [r7, #4]
 80096b2:	3398      	adds	r3, #152	@ 0x98
 80096b4:	4618      	mov	r0, r3
 80096b6:	f000 f847 	bl	8009748 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 80096ba:	687b      	ldr	r3, [r7, #4]
 80096bc:	336c      	adds	r3, #108	@ 0x6c
 80096be:	4618      	mov	r0, r3
 80096c0:	f000 f886 	bl	80097d0 <_ZN8touchgfx3BoxD1Ev>
 80096c4:	687b      	ldr	r3, [r7, #4]
 80096c6:	3340      	adds	r3, #64	@ 0x40
 80096c8:	4618      	mov	r0, r3
 80096ca:	f000 f881 	bl	80097d0 <_ZN8touchgfx3BoxD1Ev>
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	4618      	mov	r0, r3
 80096d2:	f7ff fdff 	bl	80092d4 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	4618      	mov	r0, r3
 80096da:	3708      	adds	r7, #8
 80096dc:	46bd      	mov	sp, r7
 80096de:	bd80      	pop	{r7, pc}
 80096e0:	080233c0 	.word	0x080233c0

080096e4 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 80096e4:	b580      	push	{r7, lr}
 80096e6:	b082      	sub	sp, #8
 80096e8:	af00      	add	r7, sp, #0
 80096ea:	6078      	str	r0, [r7, #4]
}
 80096ec:	6878      	ldr	r0, [r7, #4]
 80096ee:	f7ff ffcd 	bl	800968c <_ZN14screenViewBaseD1Ev>
 80096f2:	f44f 71a8 	mov.w	r1, #336	@ 0x150
 80096f6:	6878      	ldr	r0, [r7, #4]
 80096f8:	f017 fca9 	bl	802104e <_ZdlPvj>
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	4618      	mov	r0, r3
 8009700:	3708      	adds	r7, #8
 8009702:	46bd      	mov	sp, r7
 8009704:	bd80      	pop	{r7, pc}

08009706 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 8009706:	b480      	push	{r7}
 8009708:	b083      	sub	sp, #12
 800970a:	af00      	add	r7, sp, #0
 800970c:	6078      	str	r0, [r7, #4]

}
 800970e:	bf00      	nop
 8009710:	370c      	adds	r7, #12
 8009712:	46bd      	mov	sp, r7
 8009714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009718:	4770      	bx	lr
	...

0800971c <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800971c:	b580      	push	{r7, lr}
 800971e:	b082      	sub	sp, #8
 8009720:	af00      	add	r7, sp, #0
 8009722:	6078      	str	r0, [r7, #4]
        : presenter(0)
 8009724:	687b      	ldr	r3, [r7, #4]
 8009726:	4618      	mov	r0, r3
 8009728:	f007 fc22 	bl	8010f70 <_ZN8touchgfx6ScreenC1Ev>
 800972c:	4a05      	ldr	r2, [pc, #20]	@ (8009744 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800972e:	687b      	ldr	r3, [r7, #4]
 8009730:	601a      	str	r2, [r3, #0]
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	2200      	movs	r2, #0
 8009736:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	4618      	mov	r0, r3
 800973c:	3708      	adds	r7, #8
 800973e:	46bd      	mov	sp, r7
 8009740:	bd80      	pop	{r7, pc}
 8009742:	bf00      	nop
 8009744:	080233f4 	.word	0x080233f4

08009748 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8009748:	b580      	push	{r7, lr}
 800974a:	b082      	sub	sp, #8
 800974c:	af00      	add	r7, sp, #0
 800974e:	6078      	str	r0, [r7, #4]
 8009750:	4a05      	ldr	r2, [pc, #20]	@ (8009768 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	601a      	str	r2, [r3, #0]
 8009756:	687b      	ldr	r3, [r7, #4]
 8009758:	4618      	mov	r0, r3
 800975a:	f7ff fd5b 	bl	8009214 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	4618      	mov	r0, r3
 8009762:	3708      	adds	r7, #8
 8009764:	46bd      	mov	sp, r7
 8009766:	bd80      	pop	{r7, pc}
 8009768:	08023428 	.word	0x08023428

0800976c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800976c:	b580      	push	{r7, lr}
 800976e:	b082      	sub	sp, #8
 8009770:	af00      	add	r7, sp, #0
 8009772:	6078      	str	r0, [r7, #4]
 8009774:	6878      	ldr	r0, [r7, #4]
 8009776:	f7ff ffe7 	bl	8009748 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800977a:	214c      	movs	r1, #76	@ 0x4c
 800977c:	6878      	ldr	r0, [r7, #4]
 800977e:	f017 fc66 	bl	802104e <_ZdlPvj>
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	4618      	mov	r0, r3
 8009786:	3708      	adds	r7, #8
 8009788:	46bd      	mov	sp, r7
 800978a:	bd80      	pop	{r7, pc}

0800978c <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800978c:	b580      	push	{r7, lr}
 800978e:	b082      	sub	sp, #8
 8009790:	af00      	add	r7, sp, #0
 8009792:	6078      	str	r0, [r7, #4]
 8009794:	4a05      	ldr	r2, [pc, #20]	@ (80097ac <_ZN8touchgfx9ContainerD1Ev+0x20>)
 8009796:	687b      	ldr	r3, [r7, #4]
 8009798:	601a      	str	r2, [r3, #0]
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	4618      	mov	r0, r3
 800979e:	f7ff f92f 	bl	8008a00 <_ZN8touchgfx8DrawableD1Ev>
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	4618      	mov	r0, r3
 80097a6:	3708      	adds	r7, #8
 80097a8:	46bd      	mov	sp, r7
 80097aa:	bd80      	pop	{r7, pc}
 80097ac:	08023a4c 	.word	0x08023a4c

080097b0 <_ZN8touchgfx9ContainerD0Ev>:
 80097b0:	b580      	push	{r7, lr}
 80097b2:	b082      	sub	sp, #8
 80097b4:	af00      	add	r7, sp, #0
 80097b6:	6078      	str	r0, [r7, #4]
 80097b8:	6878      	ldr	r0, [r7, #4]
 80097ba:	f7ff ffe7 	bl	800978c <_ZN8touchgfx9ContainerD1Ev>
 80097be:	212c      	movs	r1, #44	@ 0x2c
 80097c0:	6878      	ldr	r0, [r7, #4]
 80097c2:	f017 fc44 	bl	802104e <_ZdlPvj>
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	4618      	mov	r0, r3
 80097ca:	3708      	adds	r7, #8
 80097cc:	46bd      	mov	sp, r7
 80097ce:	bd80      	pop	{r7, pc}

080097d0 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 80097d0:	b580      	push	{r7, lr}
 80097d2:	b082      	sub	sp, #8
 80097d4:	af00      	add	r7, sp, #0
 80097d6:	6078      	str	r0, [r7, #4]
 80097d8:	4a05      	ldr	r2, [pc, #20]	@ (80097f0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	601a      	str	r2, [r3, #0]
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	4618      	mov	r0, r3
 80097e2:	f7ff fb1d 	bl	8008e20 <_ZN8touchgfx6WidgetD1Ev>
 80097e6:	687b      	ldr	r3, [r7, #4]
 80097e8:	4618      	mov	r0, r3
 80097ea:	3708      	adds	r7, #8
 80097ec:	46bd      	mov	sp, r7
 80097ee:	bd80      	pop	{r7, pc}
 80097f0:	08023cd8 	.word	0x08023cd8

080097f4 <_ZN8touchgfx3BoxD0Ev>:
 80097f4:	b580      	push	{r7, lr}
 80097f6:	b082      	sub	sp, #8
 80097f8:	af00      	add	r7, sp, #0
 80097fa:	6078      	str	r0, [r7, #4]
 80097fc:	6878      	ldr	r0, [r7, #4]
 80097fe:	f7ff ffe7 	bl	80097d0 <_ZN8touchgfx3BoxD1Ev>
 8009802:	212c      	movs	r1, #44	@ 0x2c
 8009804:	6878      	ldr	r0, [r7, #4]
 8009806:	f017 fc22 	bl	802104e <_ZdlPvj>
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	4618      	mov	r0, r3
 800980e:	3708      	adds	r7, #8
 8009810:	46bd      	mov	sp, r7
 8009812:	bd80      	pop	{r7, pc}

08009814 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8009814:	b480      	push	{r7}
 8009816:	af00      	add	r7, sp, #0
    return bitmap_database;
 8009818:	4b02      	ldr	r3, [pc, #8]	@ (8009824 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800981a:	4618      	mov	r0, r3
 800981c:	46bd      	mov	sp, r7
 800981e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009822:	4770      	bx	lr
 8009824:	08023518 	.word	0x08023518

08009828 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8009828:	b480      	push	{r7}
 800982a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800982c:	2301      	movs	r3, #1
}
 800982e:	4618      	mov	r0, r3
 8009830:	46bd      	mov	sp, r7
 8009832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009836:	4770      	bx	lr

08009838 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 8009838:	b480      	push	{r7}
 800983a:	b085      	sub	sp, #20
 800983c:	af00      	add	r7, sp, #0
 800983e:	60f8      	str	r0, [r7, #12]
 8009840:	460b      	mov	r3, r1
 8009842:	607a      	str	r2, [r7, #4]
 8009844:	817b      	strh	r3, [r7, #10]
        return 0;
 8009846:	2300      	movs	r3, #0
    }
 8009848:	4618      	mov	r0, r3
 800984a:	3714      	adds	r7, #20
 800984c:	46bd      	mov	sp, r7
 800984e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009852:	4770      	bx	lr

08009854 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 8009854:	b480      	push	{r7}
 8009856:	b083      	sub	sp, #12
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
        return 0;
 800985c:	2300      	movs	r3, #0
    }
 800985e:	4618      	mov	r0, r3
 8009860:	370c      	adds	r7, #12
 8009862:	46bd      	mov	sp, r7
 8009864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009868:	4770      	bx	lr

0800986a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800986a:	b480      	push	{r7}
 800986c:	b083      	sub	sp, #12
 800986e:	af00      	add	r7, sp, #0
 8009870:	6078      	str	r0, [r7, #4]
        return 0;
 8009872:	2300      	movs	r3, #0
    }
 8009874:	4618      	mov	r0, r3
 8009876:	370c      	adds	r7, #12
 8009878:	46bd      	mov	sp, r7
 800987a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800987e:	4770      	bx	lr

08009880 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8009880:	b480      	push	{r7}
 8009882:	b085      	sub	sp, #20
 8009884:	af00      	add	r7, sp, #0
 8009886:	60f8      	str	r0, [r7, #12]
 8009888:	60b9      	str	r1, [r7, #8]
 800988a:	4613      	mov	r3, r2
 800988c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800988e:	4a07      	ldr	r2, [pc, #28]	@ (80098ac <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8009890:	68fb      	ldr	r3, [r7, #12]
 8009892:	6013      	str	r3, [r2, #0]
        fonts = f;
 8009894:	4a06      	ldr	r2, [pc, #24]	@ (80098b0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8009896:	68bb      	ldr	r3, [r7, #8]
 8009898:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800989a:	4a06      	ldr	r2, [pc, #24]	@ (80098b4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800989c:	88fb      	ldrh	r3, [r7, #6]
 800989e:	8013      	strh	r3, [r2, #0]
    }
 80098a0:	bf00      	nop
 80098a2:	3714      	adds	r7, #20
 80098a4:	46bd      	mov	sp, r7
 80098a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098aa:	4770      	bx	lr
 80098ac:	20002280 	.word	0x20002280
 80098b0:	20002288 	.word	0x20002288
 80098b4:	20002284 	.word	0x20002284

080098b8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80098b8:	b40e      	push	{r1, r2, r3}
 80098ba:	b580      	push	{r7, lr}
 80098bc:	b085      	sub	sp, #20
 80098be:	af00      	add	r7, sp, #0
 80098c0:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 80098c2:	f107 0320 	add.w	r3, r7, #32
 80098c6:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80098c8:	68bb      	ldr	r3, [r7, #8]
 80098ca:	69fa      	ldr	r2, [r7, #28]
 80098cc:	2100      	movs	r1, #0
 80098ce:	6878      	ldr	r0, [r7, #4]
 80098d0:	f006 ff84 	bl	80107dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 80098d4:	4603      	mov	r3, r0
 80098d6:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 80098d8:	89fb      	ldrh	r3, [r7, #14]
}
 80098da:	4618      	mov	r0, r3
 80098dc:	3714      	adds	r7, #20
 80098de:	46bd      	mov	sp, r7
 80098e0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80098e4:	b003      	add	sp, #12
 80098e6:	4770      	bx	lr

080098e8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80098e8:	b40c      	push	{r2, r3}
 80098ea:	b580      	push	{r7, lr}
 80098ec:	b084      	sub	sp, #16
 80098ee:	af00      	add	r7, sp, #0
 80098f0:	6078      	str	r0, [r7, #4]
 80098f2:	460b      	mov	r3, r1
 80098f4:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 80098f6:	f107 031c 	add.w	r3, r7, #28
 80098fa:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80098fc:	78f9      	ldrb	r1, [r7, #3]
 80098fe:	68bb      	ldr	r3, [r7, #8]
 8009900:	69ba      	ldr	r2, [r7, #24]
 8009902:	6878      	ldr	r0, [r7, #4]
 8009904:	f006 ff6a 	bl	80107dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 8009908:	4603      	mov	r3, r0
 800990a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800990c:	89fb      	ldrh	r3, [r7, #14]
}
 800990e:	4618      	mov	r0, r3
 8009910:	3710      	adds	r7, #16
 8009912:	46bd      	mov	sp, r7
 8009914:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8009918:	b002      	add	sp, #8
 800991a:	4770      	bx	lr

0800991c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800991c:	b580      	push	{r7, lr}
 800991e:	b08a      	sub	sp, #40	@ 0x28
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
 8009924:	460b      	mov	r3, r1
 8009926:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 8009928:	687b      	ldr	r3, [r7, #4]
 800992a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800992c:	2b00      	cmp	r3, #0
 800992e:	d016      	beq.n	800995e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	3322      	adds	r3, #34	@ 0x22
 8009934:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8009936:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009938:	8adb      	ldrh	r3, [r3, #22]
 800993a:	2b00      	cmp	r3, #0
 800993c:	d105      	bne.n	800994a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800993e:	4b43      	ldr	r3, [pc, #268]	@ (8009a4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8009940:	4a43      	ldr	r2, [pc, #268]	@ (8009a50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8009942:	21c5      	movs	r1, #197	@ 0xc5
 8009944:	4843      	ldr	r0, [pc, #268]	@ (8009a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8009946:	f017 fbaf 	bl	80210a8 <__assert_func>
            return buffer[pos];
 800994a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800994c:	8a9b      	ldrh	r3, [r3, #20]
 800994e:	461a      	mov	r2, r3
 8009950:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009952:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8009956:	2b00      	cmp	r3, #0
 8009958:	d001      	beq.n	800995e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800995a:	2301      	movs	r3, #1
 800995c:	e000      	b.n	8009960 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800995e:	2300      	movs	r3, #0
 8009960:	2b00      	cmp	r3, #0
 8009962:	d06a      	beq.n	8009a3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 8009964:	6878      	ldr	r0, [r7, #4]
 8009966:	f008 fa08 	bl	8011d7a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800996a:	687b      	ldr	r3, [r7, #4]
 800996c:	3322      	adds	r3, #34	@ 0x22
 800996e:	623b      	str	r3, [r7, #32]
 8009970:	2301      	movs	r3, #1
 8009972:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8009974:	6a3b      	ldr	r3, [r7, #32]
 8009976:	8adb      	ldrh	r3, [r3, #22]
 8009978:	8bfa      	ldrh	r2, [r7, #30]
 800997a:	429a      	cmp	r2, r3
 800997c:	d305      	bcc.n	800998a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800997e:	4b36      	ldr	r3, [pc, #216]	@ (8009a58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 8009980:	4a36      	ldr	r2, [pc, #216]	@ (8009a5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 8009982:	21cb      	movs	r1, #203	@ 0xcb
 8009984:	4833      	ldr	r0, [pc, #204]	@ (8009a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 8009986:	f017 fb8f 	bl	80210a8 <__assert_func>
            const uint16_t index = pos + offset;
 800998a:	6a3b      	ldr	r3, [r7, #32]
 800998c:	8a9a      	ldrh	r2, [r3, #20]
 800998e:	8bfb      	ldrh	r3, [r7, #30]
 8009990:	4413      	add	r3, r2
 8009992:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 8009994:	8bbb      	ldrh	r3, [r7, #28]
 8009996:	2b09      	cmp	r3, #9
 8009998:	d801      	bhi.n	800999e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800999a:	8bbb      	ldrh	r3, [r7, #28]
 800999c:	e001      	b.n	80099a2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800999e:	8bbb      	ldrh	r3, [r7, #28]
 80099a0:	3b0a      	subs	r3, #10
 80099a2:	6a3a      	ldr	r2, [r7, #32]
 80099a4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80099a8:	f640 123f 	movw	r2, #2367	@ 0x93f
 80099ac:	4293      	cmp	r3, r2
 80099ae:	bf0c      	ite	eq
 80099b0:	2301      	moveq	r3, #1
 80099b2:	2300      	movne	r3, #0
 80099b4:	b2db      	uxtb	r3, r3
 80099b6:	2b00      	cmp	r3, #0
 80099b8:	d03f      	beq.n	8009a3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	3322      	adds	r3, #34	@ 0x22
 80099be:	687a      	ldr	r2, [r7, #4]
 80099c0:	3222      	adds	r2, #34	@ 0x22
 80099c2:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 80099c4:	68ba      	ldr	r2, [r7, #8]
 80099c6:	8ad2      	ldrh	r2, [r2, #22]
 80099c8:	2a00      	cmp	r2, #0
 80099ca:	d105      	bne.n	80099d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 80099cc:	4b1f      	ldr	r3, [pc, #124]	@ (8009a4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 80099ce:	4a20      	ldr	r2, [pc, #128]	@ (8009a50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 80099d0:	21c5      	movs	r1, #197	@ 0xc5
 80099d2:	4820      	ldr	r0, [pc, #128]	@ (8009a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80099d4:	f017 fb68 	bl	80210a8 <__assert_func>
            return buffer[pos];
 80099d8:	68ba      	ldr	r2, [r7, #8]
 80099da:	8a92      	ldrh	r2, [r2, #20]
 80099dc:	4611      	mov	r1, r2
 80099de:	68ba      	ldr	r2, [r7, #8]
 80099e0:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 80099e4:	613b      	str	r3, [r7, #16]
 80099e6:	4613      	mov	r3, r2
 80099e8:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 80099ea:	693b      	ldr	r3, [r7, #16]
 80099ec:	8adb      	ldrh	r3, [r3, #22]
 80099ee:	2b01      	cmp	r3, #1
 80099f0:	d806      	bhi.n	8009a00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 80099f2:	4b1b      	ldr	r3, [pc, #108]	@ (8009a60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 80099f4:	4a1b      	ldr	r2, [pc, #108]	@ (8009a64 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 80099f6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 80099fa:	4816      	ldr	r0, [pc, #88]	@ (8009a54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80099fc:	f017 fb54 	bl	80210a8 <__assert_func>
            const uint16_t index = pos + 1;
 8009a00:	693b      	ldr	r3, [r7, #16]
 8009a02:	8a9b      	ldrh	r3, [r3, #20]
 8009a04:	3301      	adds	r3, #1
 8009a06:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 8009a08:	89bb      	ldrh	r3, [r7, #12]
 8009a0a:	2b09      	cmp	r3, #9
 8009a0c:	d801      	bhi.n	8009a12 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 8009a0e:	89bb      	ldrh	r3, [r7, #12]
 8009a10:	e000      	b.n	8009a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 8009a12:	2300      	movs	r3, #0
 8009a14:	693a      	ldr	r2, [r7, #16]
 8009a16:	89f9      	ldrh	r1, [r7, #14]
 8009a18:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 8009a1c:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	3322      	adds	r3, #34	@ 0x22
 8009a22:	61bb      	str	r3, [r7, #24]
 8009a24:	f640 133f 	movw	r3, #2367	@ 0x93f
 8009a28:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 8009a2a:	69bb      	ldr	r3, [r7, #24]
 8009a2c:	8a9b      	ldrh	r3, [r3, #20]
 8009a2e:	4619      	mov	r1, r3
 8009a30:	69bb      	ldr	r3, [r7, #24]
 8009a32:	8afa      	ldrh	r2, [r7, #22]
 8009a34:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 8009a38:	bf00      	nop
        }
    }
    return getNextChar();
 8009a3a:	6878      	ldr	r0, [r7, #4]
 8009a3c:	f008 f8a0 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009a40:	4603      	mov	r3, r0
}
 8009a42:	4618      	mov	r0, r3
 8009a44:	3728      	adds	r7, #40	@ 0x28
 8009a46:	46bd      	mov	sp, r7
 8009a48:	bd80      	pop	{r7, pc}
 8009a4a:	bf00      	nop
 8009a4c:	08022564 	.word	0x08022564
 8009a50:	08022570 	.word	0x08022570
 8009a54:	0802261c 	.word	0x0802261c
 8009a58:	08022664 	.word	0x08022664
 8009a5c:	08022674 	.word	0x08022674
 8009a60:	08022748 	.word	0x08022748
 8009a64:	08022754 	.word	0x08022754

08009a68 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8009a68:	b580      	push	{r7, lr}
 8009a6a:	b082      	sub	sp, #8
 8009a6c:	af00      	add	r7, sp, #0
 8009a6e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 8009a70:	6878      	ldr	r0, [r7, #4]
 8009a72:	f008 f84c 	bl	8011b0e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 8009a76:	bf00      	nop
 8009a78:	3708      	adds	r7, #8
 8009a7a:	46bd      	mov	sp, r7
 8009a7c:	bd80      	pop	{r7, pc}

08009a7e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8009a7e:	b580      	push	{r7, lr}
 8009a80:	b088      	sub	sp, #32
 8009a82:	af02      	add	r7, sp, #8
 8009a84:	60f8      	str	r0, [r7, #12]
 8009a86:	1d38      	adds	r0, r7, #4
 8009a88:	e880 0006 	stmia.w	r0, {r1, r2}
 8009a8c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 8009a8e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009a92:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8009a94:	1d39      	adds	r1, r7, #4
 8009a96:	697b      	ldr	r3, [r7, #20]
 8009a98:	9301      	str	r3, [sp, #4]
 8009a9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009a9c:	9300      	str	r3, [sp, #0]
 8009a9e:	6a3b      	ldr	r3, [r7, #32]
 8009aa0:	683a      	ldr	r2, [r7, #0]
 8009aa2:	68f8      	ldr	r0, [r7, #12]
 8009aa4:	f005 f9ba 	bl	800ee1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8009aa8:	bf00      	nop
 8009aaa:	3718      	adds	r7, #24
 8009aac:	46bd      	mov	sp, r7
 8009aae:	bd80      	pop	{r7, pc}

08009ab0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009ab0:	b590      	push	{r4, r7, lr}
 8009ab2:	b085      	sub	sp, #20
 8009ab4:	af00      	add	r7, sp, #0
 8009ab6:	4603      	mov	r3, r0
 8009ab8:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8009aba:	2300      	movs	r3, #0
 8009abc:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009abe:	88fb      	ldrh	r3, [r7, #6]
 8009ac0:	2b00      	cmp	r3, #0
 8009ac2:	d127      	bne.n	8009b14 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8009ac4:	88fb      	ldrh	r3, [r7, #6]
 8009ac6:	4a1e      	ldr	r2, [pc, #120]	@ (8009b40 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009ac8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009acc:	2b00      	cmp	r3, #0
 8009ace:	d016      	beq.n	8009afe <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8009ad0:	88fb      	ldrh	r3, [r7, #6]
 8009ad2:	4a1b      	ldr	r2, [pc, #108]	@ (8009b40 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8009ad4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009ad8:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8009ada:	68bb      	ldr	r3, [r7, #8]
 8009adc:	681b      	ldr	r3, [r3, #0]
 8009ade:	68ba      	ldr	r2, [r7, #8]
 8009ae0:	4413      	add	r3, r2
 8009ae2:	4a18      	ldr	r2, [pc, #96]	@ (8009b44 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009ae4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8009ae6:	68bb      	ldr	r3, [r7, #8]
 8009ae8:	685b      	ldr	r3, [r3, #4]
 8009aea:	68ba      	ldr	r2, [r7, #8]
 8009aec:	4413      	add	r3, r2
 8009aee:	4a16      	ldr	r2, [pc, #88]	@ (8009b48 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009af0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8009af2:	68bb      	ldr	r3, [r7, #8]
 8009af4:	689b      	ldr	r3, [r3, #8]
 8009af6:	68ba      	ldr	r2, [r7, #8]
 8009af8:	4413      	add	r3, r2
 8009afa:	60fb      	str	r3, [r7, #12]
 8009afc:	e00a      	b.n	8009b14 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8009afe:	4b11      	ldr	r3, [pc, #68]	@ (8009b44 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8009b00:	4a12      	ldr	r2, [pc, #72]	@ (8009b4c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8009b02:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8009b04:	4a12      	ldr	r2, [pc, #72]	@ (8009b50 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8009b06:	4b10      	ldr	r3, [pc, #64]	@ (8009b48 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8009b08:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8009b0a:	88fb      	ldrh	r3, [r7, #6]
 8009b0c:	4a11      	ldr	r2, [pc, #68]	@ (8009b54 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8009b0e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009b12:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8009b14:	68fb      	ldr	r3, [r7, #12]
 8009b16:	2b00      	cmp	r3, #0
 8009b18:	d00d      	beq.n	8009b36 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8009b1a:	4a0f      	ldr	r2, [pc, #60]	@ (8009b58 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8009b1c:	88fb      	ldrh	r3, [r7, #6]
 8009b1e:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8009b20:	f000 f83e 	bl	8009ba0 <_ZN17TypedTextDatabase8getFontsEv>
 8009b24:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8009b26:	f000 f833 	bl	8009b90 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8009b2a:	4603      	mov	r3, r0
 8009b2c:	461a      	mov	r2, r3
 8009b2e:	4621      	mov	r1, r4
 8009b30:	68f8      	ldr	r0, [r7, #12]
 8009b32:	f7ff fea5 	bl	8009880 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8009b36:	bf00      	nop
 8009b38:	3714      	adds	r7, #20
 8009b3a:	46bd      	mov	sp, r7
 8009b3c:	bd90      	pop	{r4, r7, pc}
 8009b3e:	bf00      	nop
 8009b40:	20000578 	.word	0x20000578
 8009b44:	20000580 	.word	0x20000580
 8009b48:	20000584 	.word	0x20000584
 8009b4c:	08027c18 	.word	0x08027c18
 8009b50:	08027c10 	.word	0x08027c10
 8009b54:	08027c24 	.word	0x08027c24
 8009b58:	2000057c 	.word	0x2000057c

08009b5c <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8009b5c:	b480      	push	{r7}
 8009b5e:	b083      	sub	sp, #12
 8009b60:	af00      	add	r7, sp, #0
 8009b62:	6078      	str	r0, [r7, #4]
 8009b64:	460b      	mov	r3, r1
 8009b66:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8009b68:	4b07      	ldr	r3, [pc, #28]	@ (8009b88 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8009b6a:	681a      	ldr	r2, [r3, #0]
 8009b6c:	4b07      	ldr	r3, [pc, #28]	@ (8009b8c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8009b6e:	6819      	ldr	r1, [r3, #0]
 8009b70:	887b      	ldrh	r3, [r7, #2]
 8009b72:	009b      	lsls	r3, r3, #2
 8009b74:	440b      	add	r3, r1
 8009b76:	681b      	ldr	r3, [r3, #0]
 8009b78:	005b      	lsls	r3, r3, #1
 8009b7a:	4413      	add	r3, r2
}
 8009b7c:	4618      	mov	r0, r3
 8009b7e:	370c      	adds	r7, #12
 8009b80:	46bd      	mov	sp, r7
 8009b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b86:	4770      	bx	lr
 8009b88:	20000580 	.word	0x20000580
 8009b8c:	20000584 	.word	0x20000584

08009b90 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8009b90:	b480      	push	{r7}
 8009b92:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8009b94:	2302      	movs	r3, #2
}
 8009b96:	4618      	mov	r0, r3
 8009b98:	46bd      	mov	sp, r7
 8009b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b9e:	4770      	bx	lr

08009ba0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8009ba0:	b480      	push	{r7}
 8009ba2:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 8009ba4:	4b02      	ldr	r3, [pc, #8]	@ (8009bb0 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8009ba6:	4618      	mov	r0, r3
 8009ba8:	46bd      	mov	sp, r7
 8009baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bae:	4770      	bx	lr
 8009bb0:	20000588 	.word	0x20000588

08009bb4 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8009bb4:	b580      	push	{r7, lr}
 8009bb6:	b082      	sub	sp, #8
 8009bb8:	af00      	add	r7, sp, #0
 8009bba:	6078      	str	r0, [r7, #4]
 8009bbc:	6039      	str	r1, [r7, #0]
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	2b01      	cmp	r3, #1
 8009bc2:	d113      	bne.n	8009bec <_Z41__static_initialization_and_destruction_0ii+0x38>
 8009bc4:	683b      	ldr	r3, [r7, #0]
 8009bc6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009bca:	4293      	cmp	r3, r2
 8009bcc:	d10e      	bne.n	8009bec <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8009bce:	f7fe f8b1 	bl	8007d34 <_Z23getFont_verdana_20_4bppv>
 8009bd2:	4603      	mov	r3, r0
};
 8009bd4:	4a07      	ldr	r2, [pc, #28]	@ (8009bf4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009bd6:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_80_4bpp()),
 8009bd8:	f7fe f904 	bl	8007de4 <_Z23getFont_verdana_80_4bppv>
 8009bdc:	4603      	mov	r3, r0
};
 8009bde:	4a05      	ldr	r2, [pc, #20]	@ (8009bf4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009be0:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 8009be2:	f7fe f84f 	bl	8007c84 <_Z23getFont_verdana_10_4bppv>
 8009be6:	4603      	mov	r3, r0
};
 8009be8:	4a02      	ldr	r2, [pc, #8]	@ (8009bf4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8009bea:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 8009bec:	bf00      	nop
 8009bee:	3708      	adds	r7, #8
 8009bf0:	46bd      	mov	sp, r7
 8009bf2:	bd80      	pop	{r7, pc}
 8009bf4:	20000588 	.word	0x20000588

08009bf8 <_GLOBAL__sub_I_touchgfx_fonts>:
 8009bf8:	b580      	push	{r7, lr}
 8009bfa:	af00      	add	r7, sp, #0
 8009bfc:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009c00:	2001      	movs	r0, #1
 8009c02:	f7ff ffd7 	bl	8009bb4 <_Z41__static_initialization_and_destruction_0ii>
 8009c06:	bd80      	pop	{r7, pc}

08009c08 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009c08:	b580      	push	{r7, lr}
 8009c0a:	b082      	sub	sp, #8
 8009c0c:	af00      	add	r7, sp, #0
 8009c0e:	6078      	str	r0, [r7, #4]
 8009c10:	4a05      	ldr	r2, [pc, #20]	@ (8009c28 <_ZN19FrontendApplicationD1Ev+0x20>)
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	601a      	str	r2, [r3, #0]
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	4618      	mov	r0, r3
 8009c1a:	f7fe fb35 	bl	8008288 <_ZN23FrontendApplicationBaseD1Ev>
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	4618      	mov	r0, r3
 8009c22:	3708      	adds	r7, #8
 8009c24:	46bd      	mov	sp, r7
 8009c26:	bd80      	pop	{r7, pc}
 8009c28:	08023598 	.word	0x08023598

08009c2c <_ZN19FrontendApplicationD0Ev>:
 8009c2c:	b580      	push	{r7, lr}
 8009c2e:	b082      	sub	sp, #8
 8009c30:	af00      	add	r7, sp, #0
 8009c32:	6078      	str	r0, [r7, #4]
 8009c34:	6878      	ldr	r0, [r7, #4]
 8009c36:	f7ff ffe7 	bl	8009c08 <_ZN19FrontendApplicationD1Ev>
 8009c3a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8009c3e:	6878      	ldr	r0, [r7, #4]
 8009c40:	f017 fa05 	bl	802104e <_ZdlPvj>
 8009c44:	687b      	ldr	r3, [r7, #4]
 8009c46:	4618      	mov	r0, r3
 8009c48:	3708      	adds	r7, #8
 8009c4a:	46bd      	mov	sp, r7
 8009c4c:	bd80      	pop	{r7, pc}

08009c4e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009c4e:	b580      	push	{r7, lr}
 8009c50:	b082      	sub	sp, #8
 8009c52:	af00      	add	r7, sp, #0
 8009c54:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8009c5c:	4618      	mov	r0, r3
 8009c5e:	f000 f82d 	bl	8009cbc <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	4618      	mov	r0, r3
 8009c66:	f005 fdb3 	bl	800f7d0 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8009c6a:	bf00      	nop
 8009c6c:	3708      	adds	r7, #8
 8009c6e:	46bd      	mov	sp, r7
 8009c70:	bd80      	pop	{r7, pc}
	...

08009c74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009c74:	b580      	push	{r7, lr}
 8009c76:	b084      	sub	sp, #16
 8009c78:	af00      	add	r7, sp, #0
 8009c7a:	60f8      	str	r0, [r7, #12]
 8009c7c:	60b9      	str	r1, [r7, #8]
 8009c7e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8009c80:	68fb      	ldr	r3, [r7, #12]
 8009c82:	687a      	ldr	r2, [r7, #4]
 8009c84:	68b9      	ldr	r1, [r7, #8]
 8009c86:	4618      	mov	r0, r3
 8009c88:	f7fe fb4e 	bl	8008328 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009c8c:	4a03      	ldr	r2, [pc, #12]	@ (8009c9c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8009c8e:	68fb      	ldr	r3, [r7, #12]
 8009c90:	601a      	str	r2, [r3, #0]
{

}
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	4618      	mov	r0, r3
 8009c96:	3710      	adds	r7, #16
 8009c98:	46bd      	mov	sp, r7
 8009c9a:	bd80      	pop	{r7, pc}
 8009c9c:	08023598 	.word	0x08023598

08009ca0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009ca0:	b480      	push	{r7}
 8009ca2:	b083      	sub	sp, #12
 8009ca4:	af00      	add	r7, sp, #0
 8009ca6:	6078      	str	r0, [r7, #4]
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	2200      	movs	r2, #0
 8009cac:	601a      	str	r2, [r3, #0]
{

}
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	370c      	adds	r7, #12
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cba:	4770      	bx	lr

08009cbc <_ZN5Model4tickEv>:

void Model::tick()
{
 8009cbc:	b480      	push	{r7}
 8009cbe:	b083      	sub	sp, #12
 8009cc0:	af00      	add	r7, sp, #0
 8009cc2:	6078      	str	r0, [r7, #4]

}
 8009cc4:	bf00      	nop
 8009cc6:	370c      	adds	r7, #12
 8009cc8:	46bd      	mov	sp, r7
 8009cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cce:	4770      	bx	lr

08009cd0 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8009cd0:	b480      	push	{r7}
 8009cd2:	b083      	sub	sp, #12
 8009cd4:	af00      	add	r7, sp, #0
 8009cd6:	6078      	str	r0, [r7, #4]
    {
    }
 8009cd8:	bf00      	nop
 8009cda:	370c      	adds	r7, #12
 8009cdc:	46bd      	mov	sp, r7
 8009cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ce2:	4770      	bx	lr

08009ce4 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8009ce4:	b480      	push	{r7}
 8009ce6:	b083      	sub	sp, #12
 8009ce8:	af00      	add	r7, sp, #0
 8009cea:	6078      	str	r0, [r7, #4]
    {
    }
 8009cec:	bf00      	nop
 8009cee:	370c      	adds	r7, #12
 8009cf0:	46bd      	mov	sp, r7
 8009cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf6:	4770      	bx	lr

08009cf8 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 8009cf8:	b480      	push	{r7}
 8009cfa:	b083      	sub	sp, #12
 8009cfc:	af00      	add	r7, sp, #0
 8009cfe:	6078      	str	r0, [r7, #4]
    {
 8009d00:	4a04      	ldr	r2, [pc, #16]	@ (8009d14 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	601a      	str	r2, [r3, #0]
    }
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	4618      	mov	r0, r3
 8009d0a:	370c      	adds	r7, #12
 8009d0c:	46bd      	mov	sp, r7
 8009d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d12:	4770      	bx	lr
 8009d14:	08023624 	.word	0x08023624

08009d18 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8009d18:	b580      	push	{r7, lr}
 8009d1a:	b082      	sub	sp, #8
 8009d1c:	af00      	add	r7, sp, #0
 8009d1e:	6078      	str	r0, [r7, #4]
    }
 8009d20:	6878      	ldr	r0, [r7, #4]
 8009d22:	f7ff ffe9 	bl	8009cf8 <_ZN8touchgfx9PresenterD1Ev>
 8009d26:	2104      	movs	r1, #4
 8009d28:	6878      	ldr	r0, [r7, #4]
 8009d2a:	f017 f990 	bl	802104e <_ZdlPvj>
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	4618      	mov	r0, r3
 8009d32:	3708      	adds	r7, #8
 8009d34:	46bd      	mov	sp, r7
 8009d36:	bd80      	pop	{r7, pc}

08009d38 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 8009d38:	b480      	push	{r7}
 8009d3a:	b083      	sub	sp, #12
 8009d3c:	af00      	add	r7, sp, #0
 8009d3e:	6078      	str	r0, [r7, #4]
    {
 8009d40:	4a04      	ldr	r2, [pc, #16]	@ (8009d54 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	601a      	str	r2, [r3, #0]
    }
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	4618      	mov	r0, r3
 8009d4a:	370c      	adds	r7, #12
 8009d4c:	46bd      	mov	sp, r7
 8009d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d52:	4770      	bx	lr
 8009d54:	08023624 	.word	0x08023624

08009d58 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8009d58:	b480      	push	{r7}
 8009d5a:	b083      	sub	sp, #12
 8009d5c:	af00      	add	r7, sp, #0
 8009d5e:	6078      	str	r0, [r7, #4]
 8009d60:	4a06      	ldr	r2, [pc, #24]	@ (8009d7c <_ZN13ModelListenerC1Ev+0x24>)
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	601a      	str	r2, [r3, #0]
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	2200      	movs	r2, #0
 8009d6a:	605a      	str	r2, [r3, #4]
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	4618      	mov	r0, r3
 8009d70:	370c      	adds	r7, #12
 8009d72:	46bd      	mov	sp, r7
 8009d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d78:	4770      	bx	lr
 8009d7a:	bf00      	nop
 8009d7c:	08023614 	.word	0x08023614

08009d80 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8009d80:	b480      	push	{r7}
 8009d82:	b083      	sub	sp, #12
 8009d84:	af00      	add	r7, sp, #0
 8009d86:	6078      	str	r0, [r7, #4]
 8009d88:	4a04      	ldr	r2, [pc, #16]	@ (8009d9c <_ZN13ModelListenerD1Ev+0x1c>)
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	601a      	str	r2, [r3, #0]
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	4618      	mov	r0, r3
 8009d92:	370c      	adds	r7, #12
 8009d94:	46bd      	mov	sp, r7
 8009d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9a:	4770      	bx	lr
 8009d9c:	08023614 	.word	0x08023614

08009da0 <_ZN13ModelListenerD0Ev>:
 8009da0:	b580      	push	{r7, lr}
 8009da2:	b082      	sub	sp, #8
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
 8009da8:	6878      	ldr	r0, [r7, #4]
 8009daa:	f7ff ffe9 	bl	8009d80 <_ZN13ModelListenerD1Ev>
 8009dae:	2108      	movs	r1, #8
 8009db0:	6878      	ldr	r0, [r7, #4]
 8009db2:	f017 f94c 	bl	802104e <_ZdlPvj>
 8009db6:	687b      	ldr	r3, [r7, #4]
 8009db8:	4618      	mov	r0, r3
 8009dba:	3708      	adds	r7, #8
 8009dbc:	46bd      	mov	sp, r7
 8009dbe:	bd80      	pop	{r7, pc}

08009dc0 <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 8009dc0:	b580      	push	{r7, lr}
 8009dc2:	b082      	sub	sp, #8
 8009dc4:	af00      	add	r7, sp, #0
 8009dc6:	6078      	str	r0, [r7, #4]
 8009dc8:	4a09      	ldr	r2, [pc, #36]	@ (8009df0 <_ZN15screenPresenterD1Ev+0x30>)
 8009dca:	687b      	ldr	r3, [r7, #4]
 8009dcc:	601a      	str	r2, [r3, #0]
 8009dce:	4a09      	ldr	r2, [pc, #36]	@ (8009df4 <_ZN15screenPresenterD1Ev+0x34>)
 8009dd0:	687b      	ldr	r3, [r7, #4]
 8009dd2:	605a      	str	r2, [r3, #4]
 8009dd4:	687b      	ldr	r3, [r7, #4]
 8009dd6:	3304      	adds	r3, #4
 8009dd8:	4618      	mov	r0, r3
 8009dda:	f7ff ffd1 	bl	8009d80 <_ZN13ModelListenerD1Ev>
 8009dde:	687b      	ldr	r3, [r7, #4]
 8009de0:	4618      	mov	r0, r3
 8009de2:	f7ff ff89 	bl	8009cf8 <_ZN8touchgfx9PresenterD1Ev>
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	4618      	mov	r0, r3
 8009dea:	3708      	adds	r7, #8
 8009dec:	46bd      	mov	sp, r7
 8009dee:	bd80      	pop	{r7, pc}
 8009df0:	080235ec 	.word	0x080235ec
 8009df4:	08023604 	.word	0x08023604

08009df8 <_ZThn4_N15screenPresenterD1Ev>:
 8009df8:	f1a0 0004 	sub.w	r0, r0, #4
 8009dfc:	e7e0      	b.n	8009dc0 <_ZN15screenPresenterD1Ev>
 8009dfe:	bf00      	nop

08009e00 <_ZN15screenPresenterD0Ev>:
 8009e00:	b580      	push	{r7, lr}
 8009e02:	b082      	sub	sp, #8
 8009e04:	af00      	add	r7, sp, #0
 8009e06:	6078      	str	r0, [r7, #4]
 8009e08:	6878      	ldr	r0, [r7, #4]
 8009e0a:	f7ff ffd9 	bl	8009dc0 <_ZN15screenPresenterD1Ev>
 8009e0e:	2110      	movs	r1, #16
 8009e10:	6878      	ldr	r0, [r7, #4]
 8009e12:	f017 f91c 	bl	802104e <_ZdlPvj>
 8009e16:	687b      	ldr	r3, [r7, #4]
 8009e18:	4618      	mov	r0, r3
 8009e1a:	3708      	adds	r7, #8
 8009e1c:	46bd      	mov	sp, r7
 8009e1e:	bd80      	pop	{r7, pc}

08009e20 <_ZThn4_N15screenPresenterD0Ev>:
 8009e20:	f1a0 0004 	sub.w	r0, r0, #4
 8009e24:	e7ec      	b.n	8009e00 <_ZN15screenPresenterD0Ev>
	...

08009e28 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 8009e28:	b580      	push	{r7, lr}
 8009e2a:	b082      	sub	sp, #8
 8009e2c:	af00      	add	r7, sp, #0
 8009e2e:	6078      	str	r0, [r7, #4]
 8009e30:	6039      	str	r1, [r7, #0]
    : view(v)
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	4618      	mov	r0, r3
 8009e36:	f7ff ff7f 	bl	8009d38 <_ZN8touchgfx9PresenterC1Ev>
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	3304      	adds	r3, #4
 8009e3e:	4618      	mov	r0, r3
 8009e40:	f7ff ff8a 	bl	8009d58 <_ZN13ModelListenerC1Ev>
 8009e44:	4a06      	ldr	r2, [pc, #24]	@ (8009e60 <_ZN15screenPresenterC1ER10screenView+0x38>)
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	601a      	str	r2, [r3, #0]
 8009e4a:	4a06      	ldr	r2, [pc, #24]	@ (8009e64 <_ZN15screenPresenterC1ER10screenView+0x3c>)
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	605a      	str	r2, [r3, #4]
 8009e50:	687b      	ldr	r3, [r7, #4]
 8009e52:	683a      	ldr	r2, [r7, #0]
 8009e54:	60da      	str	r2, [r3, #12]
{

}
 8009e56:	687b      	ldr	r3, [r7, #4]
 8009e58:	4618      	mov	r0, r3
 8009e5a:	3708      	adds	r7, #8
 8009e5c:	46bd      	mov	sp, r7
 8009e5e:	bd80      	pop	{r7, pc}
 8009e60:	080235ec 	.word	0x080235ec
 8009e64:	08023604 	.word	0x08023604

08009e68 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 8009e68:	b480      	push	{r7}
 8009e6a:	b083      	sub	sp, #12
 8009e6c:	af00      	add	r7, sp, #0
 8009e6e:	6078      	str	r0, [r7, #4]

}
 8009e70:	bf00      	nop
 8009e72:	370c      	adds	r7, #12
 8009e74:	46bd      	mov	sp, r7
 8009e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e7a:	4770      	bx	lr

08009e7c <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 8009e7c:	b480      	push	{r7}
 8009e7e:	b083      	sub	sp, #12
 8009e80:	af00      	add	r7, sp, #0
 8009e82:	6078      	str	r0, [r7, #4]

}
 8009e84:	bf00      	nop
 8009e86:	370c      	adds	r7, #12
 8009e88:	46bd      	mov	sp, r7
 8009e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e8e:	4770      	bx	lr

08009e90 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 8009e90:	b580      	push	{r7, lr}
 8009e92:	b082      	sub	sp, #8
 8009e94:	af00      	add	r7, sp, #0
 8009e96:	6078      	str	r0, [r7, #4]
 8009e98:	4a05      	ldr	r2, [pc, #20]	@ (8009eb0 <_ZN10screenViewD1Ev+0x20>)
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	601a      	str	r2, [r3, #0]
 8009e9e:	687b      	ldr	r3, [r7, #4]
 8009ea0:	4618      	mov	r0, r3
 8009ea2:	f7ff fbf3 	bl	800968c <_ZN14screenViewBaseD1Ev>
 8009ea6:	687b      	ldr	r3, [r7, #4]
 8009ea8:	4618      	mov	r0, r3
 8009eaa:	3708      	adds	r7, #8
 8009eac:	46bd      	mov	sp, r7
 8009eae:	bd80      	pop	{r7, pc}
 8009eb0:	0802363c 	.word	0x0802363c

08009eb4 <_ZN10screenViewD0Ev>:
 8009eb4:	b580      	push	{r7, lr}
 8009eb6:	b082      	sub	sp, #8
 8009eb8:	af00      	add	r7, sp, #0
 8009eba:	6078      	str	r0, [r7, #4]
 8009ebc:	6878      	ldr	r0, [r7, #4]
 8009ebe:	f7ff ffe7 	bl	8009e90 <_ZN10screenViewD1Ev>
 8009ec2:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 8009ec6:	6878      	ldr	r0, [r7, #4]
 8009ec8:	f017 f8c1 	bl	802104e <_ZdlPvj>
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	4618      	mov	r0, r3
 8009ed0:	3708      	adds	r7, #8
 8009ed2:	46bd      	mov	sp, r7
 8009ed4:	bd80      	pop	{r7, pc}
	...

08009ed8 <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 8009ed8:	b580      	push	{r7, lr}
 8009eda:	b082      	sub	sp, #8
 8009edc:	af00      	add	r7, sp, #0
 8009ede:	6078      	str	r0, [r7, #4]
 8009ee0:	687b      	ldr	r3, [r7, #4]
 8009ee2:	4618      	mov	r0, r3
 8009ee4:	f7ff fa18 	bl	8009318 <_ZN14screenViewBaseC1Ev>
 8009ee8:	4a03      	ldr	r2, [pc, #12]	@ (8009ef8 <_ZN10screenViewC1Ev+0x20>)
 8009eea:	687b      	ldr	r3, [r7, #4]
 8009eec:	601a      	str	r2, [r3, #0]
{

}
 8009eee:	687b      	ldr	r3, [r7, #4]
 8009ef0:	4618      	mov	r0, r3
 8009ef2:	3708      	adds	r7, #8
 8009ef4:	46bd      	mov	sp, r7
 8009ef6:	bd80      	pop	{r7, pc}
 8009ef8:	0802363c 	.word	0x0802363c

08009efc <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 8009efc:	b580      	push	{r7, lr}
 8009efe:	b082      	sub	sp, #8
 8009f00:	af00      	add	r7, sp, #0
 8009f02:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 8009f04:	687b      	ldr	r3, [r7, #4]
 8009f06:	4618      	mov	r0, r3
 8009f08:	f7ff fbfd 	bl	8009706 <_ZN14screenViewBase11setupScreenEv>
}
 8009f0c:	bf00      	nop
 8009f0e:	3708      	adds	r7, #8
 8009f10:	46bd      	mov	sp, r7
 8009f12:	bd80      	pop	{r7, pc}

08009f14 <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 8009f14:	b580      	push	{r7, lr}
 8009f16:	b082      	sub	sp, #8
 8009f18:	af00      	add	r7, sp, #0
 8009f1a:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	4618      	mov	r0, r3
 8009f20:	f7fe ff3c 	bl	8008d9c <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8009f24:	bf00      	nop
 8009f26:	3708      	adds	r7, #8
 8009f28:	46bd      	mov	sp, r7
 8009f2a:	bd80      	pop	{r7, pc}

08009f2c <_ZN10screenView15handleTickEventEv>:

void screenView::handleTickEvent()
{
 8009f2c:	b580      	push	{r7, lr}
 8009f2e:	b082      	sub	sp, #8
 8009f30:	af00      	add	r7, sp, #0
 8009f32:	6078      	str	r0, [r7, #4]
	counter++;
 8009f34:	687b      	ldr	r3, [r7, #4]
 8009f36:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8009f3a:	1c5a      	adds	r2, r3, #1
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
	//Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y9WY).getText());
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 8009f42:	687b      	ldr	r3, [r7, #4]
 8009f44:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8009f4e:	4a0b      	ldr	r2, [pc, #44]	@ (8009f7c <_ZN10screenView15handleTickEventEv+0x50>)
 8009f50:	210a      	movs	r1, #10
 8009f52:	f008 fcba 	bl	80128ca <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8009f56:	687b      	ldr	r3, [r7, #4]
 8009f58:	3398      	adds	r3, #152	@ 0x98
 8009f5a:	4618      	mov	r0, r3
 8009f5c:	f006 fd68 	bl	8010a30 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(counter == 100000)
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 8009f66:	4a06      	ldr	r2, [pc, #24]	@ (8009f80 <_ZN10screenView15handleTickEventEv+0x54>)
 8009f68:	4293      	cmp	r3, r2
 8009f6a:	d103      	bne.n	8009f74 <_ZN10screenView15handleTickEventEv+0x48>
	{
		counter = 0;
 8009f6c:	687b      	ldr	r3, [r7, #4]
 8009f6e:	2200      	movs	r2, #0
 8009f70:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
	}
}
 8009f74:	bf00      	nop
 8009f76:	3708      	adds	r7, #8
 8009f78:	46bd      	mov	sp, r7
 8009f7a:	bd80      	pop	{r7, pc}
 8009f7c:	08022808 	.word	0x08022808
 8009f80:	000186a0 	.word	0x000186a0

08009f84 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 8009f84:	b480      	push	{r7}
 8009f86:	b083      	sub	sp, #12
 8009f88:	af00      	add	r7, sp, #0
 8009f8a:	6078      	str	r0, [r7, #4]
    {
 8009f8c:	4a04      	ldr	r2, [pc, #16]	@ (8009fa0 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	601a      	str	r2, [r3, #0]
    }
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	4618      	mov	r0, r3
 8009f96:	370c      	adds	r7, #12
 8009f98:	46bd      	mov	sp, r7
 8009f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f9e:	4770      	bx	lr
 8009fa0:	08023688 	.word	0x08023688

08009fa4 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8009fa4:	b580      	push	{r7, lr}
 8009fa6:	b082      	sub	sp, #8
 8009fa8:	af00      	add	r7, sp, #0
 8009faa:	6078      	str	r0, [r7, #4]
    }
 8009fac:	6878      	ldr	r0, [r7, #4]
 8009fae:	f7ff ffe9 	bl	8009f84 <_ZN8touchgfx15TouchControllerD1Ev>
 8009fb2:	2104      	movs	r1, #4
 8009fb4:	6878      	ldr	r0, [r7, #4]
 8009fb6:	f017 f84a 	bl	802104e <_ZdlPvj>
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	4618      	mov	r0, r3
 8009fbe:	3708      	adds	r7, #8
 8009fc0:	46bd      	mov	sp, r7
 8009fc2:	bd80      	pop	{r7, pc}

08009fc4 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 8009fc4:	b480      	push	{r7}
 8009fc6:	b083      	sub	sp, #12
 8009fc8:	af00      	add	r7, sp, #0
 8009fca:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8009fcc:	bf00      	nop
 8009fce:	370c      	adds	r7, #12
 8009fd0:	46bd      	mov	sp, r7
 8009fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fd6:	4770      	bx	lr

08009fd8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8009fd8:	b480      	push	{r7}
 8009fda:	b085      	sub	sp, #20
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	60f8      	str	r0, [r7, #12]
 8009fe0:	60b9      	str	r1, [r7, #8]
 8009fe2:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 8009fe4:	2300      	movs	r3, #0
}
 8009fe6:	4618      	mov	r0, r3
 8009fe8:	3714      	adds	r7, #20
 8009fea:	46bd      	mov	sp, r7
 8009fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ff0:	4770      	bx	lr
	...

08009ff4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8009ff4:	b580      	push	{r7, lr}
 8009ff6:	b082      	sub	sp, #8
 8009ff8:	af00      	add	r7, sp, #0
 8009ffa:	6078      	str	r0, [r7, #4]
 8009ffc:	4a05      	ldr	r2, [pc, #20]	@ (800a014 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	601a      	str	r2, [r3, #0]
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	4618      	mov	r0, r3
 800a006:	f7ff ffbd 	bl	8009f84 <_ZN8touchgfx15TouchControllerD1Ev>
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	4618      	mov	r0, r3
 800a00e:	3708      	adds	r7, #8
 800a010:	46bd      	mov	sp, r7
 800a012:	bd80      	pop	{r7, pc}
 800a014:	08023670 	.word	0x08023670

0800a018 <_ZN20STM32TouchControllerD0Ev>:
 800a018:	b580      	push	{r7, lr}
 800a01a:	b082      	sub	sp, #8
 800a01c:	af00      	add	r7, sp, #0
 800a01e:	6078      	str	r0, [r7, #4]
 800a020:	6878      	ldr	r0, [r7, #4]
 800a022:	f7ff ffe7 	bl	8009ff4 <_ZN20STM32TouchControllerD1Ev>
 800a026:	2104      	movs	r1, #4
 800a028:	6878      	ldr	r0, [r7, #4]
 800a02a:	f017 f810 	bl	802104e <_ZdlPvj>
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	4618      	mov	r0, r3
 800a032:	3708      	adds	r7, #8
 800a034:	46bd      	mov	sp, r7
 800a036:	bd80      	pop	{r7, pc}

0800a038 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800a038:	b480      	push	{r7}
 800a03a:	af00      	add	r7, sp, #0

}
 800a03c:	bf00      	nop
 800a03e:	46bd      	mov	sp, r7
 800a040:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a044:	4770      	bx	lr
	...

0800a048 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800a048:	b480      	push	{r7}
 800a04a:	b083      	sub	sp, #12
 800a04c:	af00      	add	r7, sp, #0
 800a04e:	4603      	mov	r3, r0
 800a050:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800a052:	79fb      	ldrb	r3, [r7, #7]
 800a054:	2b03      	cmp	r3, #3
 800a056:	d80c      	bhi.n	800a072 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800a058:	a201      	add	r2, pc, #4	@ (adr r2, 800a060 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800a05a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a05e:	bf00      	nop
 800a060:	0800a071 	.word	0x0800a071
 800a064:	0800a071 	.word	0x0800a071
 800a068:	0800a071 	.word	0x0800a071
 800a06c:	0800a071 	.word	0x0800a071
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800a070:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800a072:	bf00      	nop
 800a074:	370c      	adds	r7, #12
 800a076:	46bd      	mov	sp, r7
 800a078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a07c:	4770      	bx	lr
 800a07e:	bf00      	nop

0800a080 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800a080:	b480      	push	{r7}
 800a082:	b083      	sub	sp, #12
 800a084:	af00      	add	r7, sp, #0
 800a086:	4603      	mov	r3, r0
 800a088:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800a08a:	79fb      	ldrb	r3, [r7, #7]
 800a08c:	2b03      	cmp	r3, #3
 800a08e:	d80c      	bhi.n	800a0aa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800a090:	a201      	add	r2, pc, #4	@ (adr r2, 800a098 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800a092:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a096:	bf00      	nop
 800a098:	0800a0a9 	.word	0x0800a0a9
 800a09c:	0800a0a9 	.word	0x0800a0a9
 800a0a0:	0800a0a9 	.word	0x0800a0a9
 800a0a4:	0800a0a9 	.word	0x0800a0a9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800a0a8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800a0aa:	bf00      	nop
 800a0ac:	370c      	adds	r7, #12
 800a0ae:	46bd      	mov	sp, r7
 800a0b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0b4:	4770      	bx	lr
 800a0b6:	bf00      	nop

0800a0b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800a0b8:	b480      	push	{r7}
 800a0ba:	b083      	sub	sp, #12
 800a0bc:	af00      	add	r7, sp, #0
 800a0be:	4603      	mov	r3, r0
 800a0c0:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800a0c2:	79fb      	ldrb	r3, [r7, #7]
 800a0c4:	2b03      	cmp	r3, #3
 800a0c6:	d80c      	bhi.n	800a0e2 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800a0c8:	a201      	add	r2, pc, #4	@ (adr r2, 800a0d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800a0ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a0ce:	bf00      	nop
 800a0d0:	0800a0e1 	.word	0x0800a0e1
 800a0d4:	0800a0e1 	.word	0x0800a0e1
 800a0d8:	0800a0e1 	.word	0x0800a0e1
 800a0dc:	0800a0e1 	.word	0x0800a0e1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800a0e0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800a0e2:	bf00      	nop
 800a0e4:	370c      	adds	r7, #12
 800a0e6:	46bd      	mov	sp, r7
 800a0e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ec:	4770      	bx	lr
 800a0ee:	bf00      	nop

0800a0f0 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800a0f0:	b480      	push	{r7}
 800a0f2:	b083      	sub	sp, #12
 800a0f4:	af00      	add	r7, sp, #0
 800a0f6:	6078      	str	r0, [r7, #4]
    {
 800a0f8:	4a04      	ldr	r2, [pc, #16]	@ (800a10c <_ZN8touchgfx3HALD1Ev+0x1c>)
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	601a      	str	r2, [r3, #0]
    }
 800a0fe:	687b      	ldr	r3, [r7, #4]
 800a100:	4618      	mov	r0, r3
 800a102:	370c      	adds	r7, #12
 800a104:	46bd      	mov	sp, r7
 800a106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a10a:	4770      	bx	lr
 800a10c:	08023ae8 	.word	0x08023ae8

0800a110 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800a110:	b580      	push	{r7, lr}
 800a112:	b082      	sub	sp, #8
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
    }
 800a118:	6878      	ldr	r0, [r7, #4]
 800a11a:	f7ff ffe9 	bl	800a0f0 <_ZN8touchgfx3HALD1Ev>
 800a11e:	2184      	movs	r1, #132	@ 0x84
 800a120:	6878      	ldr	r0, [r7, #4]
 800a122:	f016 ff94 	bl	802104e <_ZdlPvj>
 800a126:	687b      	ldr	r3, [r7, #4]
 800a128:	4618      	mov	r0, r3
 800a12a:	3708      	adds	r7, #8
 800a12c:	46bd      	mov	sp, r7
 800a12e:	bd80      	pop	{r7, pc}

0800a130 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800a130:	b480      	push	{r7}
 800a132:	b083      	sub	sp, #12
 800a134:	af00      	add	r7, sp, #0
 800a136:	6078      	str	r0, [r7, #4]
 800a138:	460b      	mov	r3, r1
 800a13a:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800a13c:	687b      	ldr	r3, [r7, #4]
 800a13e:	78fa      	ldrb	r2, [r7, #3]
 800a140:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	2201      	movs	r2, #1
 800a148:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800a14c:	bf00      	nop
 800a14e:	370c      	adds	r7, #12
 800a150:	46bd      	mov	sp, r7
 800a152:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a156:	4770      	bx	lr

0800a158 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800a158:	b580      	push	{r7, lr}
 800a15a:	b082      	sub	sp, #8
 800a15c:	af00      	add	r7, sp, #0
 800a15e:	6078      	str	r0, [r7, #4]
 800a160:	460b      	mov	r3, r1
 800a162:	807b      	strh	r3, [r7, #2]
 800a164:	4613      	mov	r3, r2
 800a166:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800a168:	4b0c      	ldr	r3, [pc, #48]	@ (800a19c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800a16a:	881b      	ldrh	r3, [r3, #0]
 800a16c:	887a      	ldrh	r2, [r7, #2]
 800a16e:	429a      	cmp	r2, r3
 800a170:	d304      	bcc.n	800a17c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800a172:	4b0b      	ldr	r3, [pc, #44]	@ (800a1a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800a174:	881b      	ldrh	r3, [r3, #0]
 800a176:	883a      	ldrh	r2, [r7, #0]
 800a178:	429a      	cmp	r2, r3
 800a17a:	d205      	bcs.n	800a188 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800a17c:	4b09      	ldr	r3, [pc, #36]	@ (800a1a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800a17e:	4a0a      	ldr	r2, [pc, #40]	@ (800a1a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800a180:	21a3      	movs	r1, #163	@ 0xa3
 800a182:	480a      	ldr	r0, [pc, #40]	@ (800a1ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800a184:	f016 ff90 	bl	80210a8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800a188:	4a09      	ldr	r2, [pc, #36]	@ (800a1b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800a18a:	887b      	ldrh	r3, [r7, #2]
 800a18c:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800a18e:	4a09      	ldr	r2, [pc, #36]	@ (800a1b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800a190:	883b      	ldrh	r3, [r7, #0]
 800a192:	8013      	strh	r3, [r2, #0]
    }
 800a194:	bf00      	nop
 800a196:	3708      	adds	r7, #8
 800a198:	46bd      	mov	sp, r7
 800a19a:	bd80      	pop	{r7, pc}
 800a19c:	20002224 	.word	0x20002224
 800a1a0:	20002226 	.word	0x20002226
 800a1a4:	0802280c 	.word	0x0802280c
 800a1a8:	08022870 	.word	0x08022870
 800a1ac:	080228b4 	.word	0x080228b4
 800a1b0:	2000222a 	.word	0x2000222a
 800a1b4:	2000222c 	.word	0x2000222c

0800a1b8 <_ZN8touchgfx3HAL11submitGPU2DEv>:
    virtual void submitGPU2D()
 800a1b8:	b480      	push	{r7}
 800a1ba:	b083      	sub	sp, #12
 800a1bc:	af00      	add	r7, sp, #0
 800a1be:	6078      	str	r0, [r7, #4]
    }
 800a1c0:	bf00      	nop
 800a1c2:	370c      	adds	r7, #12
 800a1c4:	46bd      	mov	sp, r7
 800a1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1ca:	4770      	bx	lr

0800a1cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800a1cc:	b580      	push	{r7, lr}
 800a1ce:	b082      	sub	sp, #8
 800a1d0:	af00      	add	r7, sp, #0
 800a1d2:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800a1d4:	687b      	ldr	r3, [r7, #4]
 800a1d6:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d009      	beq.n	800a1f2 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800a1de:	687b      	ldr	r3, [r7, #4]
 800a1e0:	685a      	ldr	r2, [r3, #4]
 800a1e2:	687b      	ldr	r3, [r7, #4]
 800a1e4:	685b      	ldr	r3, [r3, #4]
 800a1e6:	681b      	ldr	r3, [r3, #0]
 800a1e8:	681b      	ldr	r3, [r3, #0]
 800a1ea:	4610      	mov	r0, r2
 800a1ec:	4798      	blx	r3
 800a1ee:	4603      	mov	r3, r0
 800a1f0:	e000      	b.n	800a1f4 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800a1f2:	2300      	movs	r3, #0
    }
 800a1f4:	4618      	mov	r0, r3
 800a1f6:	3708      	adds	r7, #8
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	bd80      	pop	{r7, pc}

0800a1fc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    }

    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800a1fc:	b580      	push	{r7, lr}
 800a1fe:	b082      	sub	sp, #8
 800a200:	af00      	add	r7, sp, #0
 800a202:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800a204:	6878      	ldr	r0, [r7, #4]
 800a206:	f003 f811 	bl	800d22c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800a20a:	687b      	ldr	r3, [r7, #4]
 800a20c:	681b      	ldr	r3, [r3, #0]
 800a20e:	33bc      	adds	r3, #188	@ 0xbc
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	6878      	ldr	r0, [r7, #4]
 800a214:	4798      	blx	r3
    }
 800a216:	bf00      	nop
 800a218:	3708      	adds	r7, #8
 800a21a:	46bd      	mov	sp, r7
 800a21c:	bd80      	pop	{r7, pc}

0800a21e <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800a21e:	b480      	push	{r7}
 800a220:	b083      	sub	sp, #12
 800a222:	af00      	add	r7, sp, #0
 800a224:	6078      	str	r0, [r7, #4]
 800a226:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800a228:	2300      	movs	r3, #0
    }
 800a22a:	4618      	mov	r0, r3
 800a22c:	370c      	adds	r7, #12
 800a22e:	46bd      	mov	sp, r7
 800a230:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a234:	4770      	bx	lr
	...

0800a238 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800a238:	b580      	push	{r7, lr}
 800a23a:	b084      	sub	sp, #16
 800a23c:	af00      	add	r7, sp, #0
 800a23e:	60f8      	str	r0, [r7, #12]
 800a240:	60b9      	str	r1, [r7, #8]
 800a242:	607a      	str	r2, [r7, #4]
 800a244:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800a246:	68bb      	ldr	r3, [r7, #8]
 800a248:	2b00      	cmp	r3, #0
 800a24a:	d106      	bne.n	800a25a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800a24c:	4b0f      	ldr	r3, [pc, #60]	@ (800a28c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800a24e:	4a10      	ldr	r2, [pc, #64]	@ (800a290 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800a250:	f240 21ff 	movw	r1, #767	@ 0x2ff
 800a254:	480f      	ldr	r0, [pc, #60]	@ (800a294 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800a256:	f016 ff27 	bl	80210a8 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800a25a:	68fb      	ldr	r3, [r7, #12]
 800a25c:	68ba      	ldr	r2, [r7, #8]
 800a25e:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800a260:	68fb      	ldr	r3, [r7, #12]
 800a262:	687a      	ldr	r2, [r7, #4]
 800a264:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	2b00      	cmp	r3, #0
 800a26a:	bf14      	ite	ne
 800a26c:	2301      	movne	r3, #1
 800a26e:	2300      	moveq	r3, #0
 800a270:	b2da      	uxtb	r2, r3
 800a272:	4b09      	ldr	r3, [pc, #36]	@ (800a298 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800a274:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800a276:	68fb      	ldr	r3, [r7, #12]
 800a278:	681b      	ldr	r3, [r3, #0]
 800a27a:	3390      	adds	r3, #144	@ 0x90
 800a27c:	681b      	ldr	r3, [r3, #0]
 800a27e:	6839      	ldr	r1, [r7, #0]
 800a280:	68f8      	ldr	r0, [r7, #12]
 800a282:	4798      	blx	r3
    }
 800a284:	bf00      	nop
 800a286:	3710      	adds	r7, #16
 800a288:	46bd      	mov	sp, r7
 800a28a:	bd80      	pop	{r7, pc}
 800a28c:	080228f8 	.word	0x080228f8
 800a290:	08022930 	.word	0x08022930
 800a294:	080228b4 	.word	0x080228b4
 800a298:	2000222e 	.word	0x2000222e

0800a29c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800a29c:	b480      	push	{r7}
 800a29e:	b083      	sub	sp, #12
 800a2a0:	af00      	add	r7, sp, #0
 800a2a2:	6078      	str	r0, [r7, #4]
 800a2a4:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800a2a6:	687b      	ldr	r3, [r7, #4]
 800a2a8:	683a      	ldr	r2, [r7, #0]
 800a2aa:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800a2ac:	683b      	ldr	r3, [r7, #0]
 800a2ae:	2b00      	cmp	r3, #0
 800a2b0:	bf14      	ite	ne
 800a2b2:	2301      	movne	r3, #1
 800a2b4:	2300      	moveq	r3, #0
 800a2b6:	b2da      	uxtb	r2, r3
 800a2b8:	4b03      	ldr	r3, [pc, #12]	@ (800a2c8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800a2ba:	701a      	strb	r2, [r3, #0]
    }
 800a2bc:	bf00      	nop
 800a2be:	370c      	adds	r7, #12
 800a2c0:	46bd      	mov	sp, r7
 800a2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2c6:	4770      	bx	lr
 800a2c8:	2000222f 	.word	0x2000222f

0800a2cc <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     * Only applicable on LTDC systems and when the partial framebuffer strategy is
     * enabled.
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
 800a2cc:	b480      	push	{r7}
 800a2ce:	b083      	sub	sp, #12
 800a2d0:	af00      	add	r7, sp, #0
 800a2d2:	6078      	str	r0, [r7, #4]
 800a2d4:	460b      	mov	r3, r1
 800a2d6:	807b      	strh	r3, [r7, #2]
    {
    }
 800a2d8:	bf00      	nop
 800a2da:	370c      	adds	r7, #12
 800a2dc:	46bd      	mov	sp, r7
 800a2de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2e2:	4770      	bx	lr

0800a2e4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800a2e4:	b480      	push	{r7}
 800a2e6:	b083      	sub	sp, #12
 800a2e8:	af00      	add	r7, sp, #0
 800a2ea:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a2ec:	2300      	movs	r3, #0
    }
 800a2ee:	4618      	mov	r0, r3
 800a2f0:	370c      	adds	r7, #12
 800a2f2:	46bd      	mov	sp, r7
 800a2f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2f8:	4770      	bx	lr

0800a2fa <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800a2fa:	b580      	push	{r7, lr}
 800a2fc:	b082      	sub	sp, #8
 800a2fe:	af00      	add	r7, sp, #0
 800a300:	6078      	str	r0, [r7, #4]
 800a302:	460b      	mov	r3, r1
 800a304:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a30a:	2b00      	cmp	r3, #0
 800a30c:	d004      	beq.n	800a318 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800a30e:	687b      	ldr	r3, [r7, #4]
 800a310:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a312:	887a      	ldrh	r2, [r7, #2]
 800a314:	4610      	mov	r0, r2
 800a316:	4798      	blx	r3
        }
    }
 800a318:	bf00      	nop
 800a31a:	3708      	adds	r7, #8
 800a31c:	46bd      	mov	sp, r7
 800a31e:	bd80      	pop	{r7, pc}

0800a320 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800a320:	b480      	push	{r7}
 800a322:	b083      	sub	sp, #12
 800a324:	af00      	add	r7, sp, #0
 800a326:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800a328:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800a32c:	4618      	mov	r0, r3
 800a32e:	370c      	adds	r7, #12
 800a330:	46bd      	mov	sp, r7
 800a332:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a336:	4770      	bx	lr

0800a338 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800a338:	b580      	push	{r7, lr}
 800a33a:	b082      	sub	sp, #8
 800a33c:	af00      	add	r7, sp, #0
 800a33e:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800a340:	687b      	ldr	r3, [r7, #4]
 800a342:	685a      	ldr	r2, [r3, #4]
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	685b      	ldr	r3, [r3, #4]
 800a348:	681b      	ldr	r3, [r3, #0]
 800a34a:	3318      	adds	r3, #24
 800a34c:	681b      	ldr	r3, [r3, #0]
 800a34e:	4610      	mov	r0, r2
 800a350:	4798      	blx	r3
 800a352:	4603      	mov	r3, r0
    }
 800a354:	4618      	mov	r0, r3
 800a356:	3708      	adds	r7, #8
 800a358:	46bd      	mov	sp, r7
 800a35a:	bd80      	pop	{r7, pc}

0800a35c <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This occurrence will lead to tearing on the display.
     *
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
 800a35c:	b480      	push	{r7}
 800a35e:	b083      	sub	sp, #12
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
    {
    }
 800a364:	bf00      	nop
 800a366:	370c      	adds	r7, #12
 800a368:	46bd      	mov	sp, r7
 800a36a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a36e:	4770      	bx	lr

0800a370 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800a370:	b480      	push	{r7}
 800a372:	b085      	sub	sp, #20
 800a374:	af00      	add	r7, sp, #0
 800a376:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800a37e:	687b      	ldr	r3, [r7, #4]
 800a380:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800a384:	429a      	cmp	r2, r3
 800a386:	d011      	beq.n	800a3ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800a388:	4b14      	ldr	r3, [pc, #80]	@ (800a3dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800a38a:	781b      	ldrb	r3, [r3, #0]
 800a38c:	2b00      	cmp	r3, #0
 800a38e:	d11e      	bne.n	800a3ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800a390:	4b13      	ldr	r3, [pc, #76]	@ (800a3e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800a392:	881b      	ldrh	r3, [r3, #0]
 800a394:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800a396:	4b13      	ldr	r3, [pc, #76]	@ (800a3e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800a398:	881a      	ldrh	r2, [r3, #0]
 800a39a:	4b11      	ldr	r3, [pc, #68]	@ (800a3e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800a39c:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800a39e:	4a11      	ldr	r2, [pc, #68]	@ (800a3e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800a3a0:	89bb      	ldrh	r3, [r7, #12]
 800a3a2:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800a3a4:	4b0d      	ldr	r3, [pc, #52]	@ (800a3dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800a3a6:	2201      	movs	r2, #1
 800a3a8:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800a3aa:	e010      	b.n	800a3ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800a3ac:	4b0b      	ldr	r3, [pc, #44]	@ (800a3dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800a3ae:	781b      	ldrb	r3, [r3, #0]
 800a3b0:	2b00      	cmp	r3, #0
 800a3b2:	d00c      	beq.n	800a3ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800a3b4:	4b0a      	ldr	r3, [pc, #40]	@ (800a3e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800a3b6:	881b      	ldrh	r3, [r3, #0]
 800a3b8:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800a3ba:	4b0a      	ldr	r3, [pc, #40]	@ (800a3e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800a3bc:	881a      	ldrh	r2, [r3, #0]
 800a3be:	4b08      	ldr	r3, [pc, #32]	@ (800a3e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800a3c0:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800a3c2:	4a08      	ldr	r2, [pc, #32]	@ (800a3e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800a3c4:	89fb      	ldrh	r3, [r7, #14]
 800a3c6:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800a3c8:	4b04      	ldr	r3, [pc, #16]	@ (800a3dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800a3ca:	2200      	movs	r2, #0
 800a3cc:	701a      	strb	r2, [r3, #0]
    }
 800a3ce:	bf00      	nop
 800a3d0:	3714      	adds	r7, #20
 800a3d2:	46bd      	mov	sp, r7
 800a3d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d8:	4770      	bx	lr
 800a3da:	bf00      	nop
 800a3dc:	20002228 	.word	0x20002228
 800a3e0:	20002226 	.word	0x20002226
 800a3e4:	20002224 	.word	0x20002224

0800a3e8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 800a3e8:	b480      	push	{r7}
 800a3ea:	b083      	sub	sp, #12
 800a3ec:	af00      	add	r7, sp, #0
 800a3ee:	6078      	str	r0, [r7, #4]
    {
    }
 800a3f0:	bf00      	nop
 800a3f2:	370c      	adds	r7, #12
 800a3f4:	46bd      	mov	sp, r7
 800a3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3fa:	4770      	bx	lr

0800a3fc <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800a3fc:	b480      	push	{r7}
 800a3fe:	b083      	sub	sp, #12
 800a400:	af00      	add	r7, sp, #0
 800a402:	6078      	str	r0, [r7, #4]
    {
    }
 800a404:	bf00      	nop
 800a406:	370c      	adds	r7, #12
 800a408:	46bd      	mov	sp, r7
 800a40a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a40e:	4770      	bx	lr

0800a410 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Invalidate texture cache(s).
     *
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
 800a410:	b480      	push	{r7}
 800a412:	b083      	sub	sp, #12
 800a414:	af00      	add	r7, sp, #0
 800a416:	6078      	str	r0, [r7, #4]
    {
    }
 800a418:	bf00      	nop
 800a41a:	370c      	adds	r7, #12
 800a41c:	46bd      	mov	sp, r7
 800a41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a422:	4770      	bx	lr

0800a424 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a424:	b580      	push	{r7, lr}
 800a426:	b082      	sub	sp, #8
 800a428:	af00      	add	r7, sp, #0
 800a42a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800a42c:	687b      	ldr	r3, [r7, #4]
 800a42e:	4618      	mov	r0, r3
 800a430:	f002 f918 	bl	800c664 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800a434:	bf00      	nop
 800a436:	3708      	adds	r7, #8
 800a438:	46bd      	mov	sp, r7
 800a43a:	bd80      	pop	{r7, pc}

0800a43c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800a43c:	b580      	push	{r7, lr}
 800a43e:	b082      	sub	sp, #8
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
 800a444:	4a05      	ldr	r2, [pc, #20]	@ (800a45c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	601a      	str	r2, [r3, #0]
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	4618      	mov	r0, r3
 800a44e:	f7ff fe4f 	bl	800a0f0 <_ZN8touchgfx3HALD1Ev>
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	4618      	mov	r0, r3
 800a456:	3708      	adds	r7, #8
 800a458:	46bd      	mov	sp, r7
 800a45a:	bd80      	pop	{r7, pc}
 800a45c:	08023900 	.word	0x08023900

0800a460 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800a460:	b580      	push	{r7, lr}
 800a462:	b082      	sub	sp, #8
 800a464:	af00      	add	r7, sp, #0
 800a466:	6078      	str	r0, [r7, #4]
 800a468:	6878      	ldr	r0, [r7, #4]
 800a46a:	f7ff ffe7 	bl	800a43c <_ZN20TouchGFXGeneratedHALD1Ev>
 800a46e:	2184      	movs	r1, #132	@ 0x84
 800a470:	6878      	ldr	r0, [r7, #4]
 800a472:	f016 fdec 	bl	802104e <_ZdlPvj>
 800a476:	687b      	ldr	r3, [r7, #4]
 800a478:	4618      	mov	r0, r3
 800a47a:	3708      	adds	r7, #8
 800a47c:	46bd      	mov	sp, r7
 800a47e:	bd80      	pop	{r7, pc}

0800a480 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a480:	b580      	push	{r7, lr}
 800a482:	b082      	sub	sp, #8
 800a484:	af00      	add	r7, sp, #0
 800a486:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800a488:	687b      	ldr	r3, [r7, #4]
 800a48a:	4618      	mov	r0, r3
 800a48c:	f7ff ffca 	bl	800a424 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800a490:	bf00      	nop
 800a492:	3708      	adds	r7, #8
 800a494:	46bd      	mov	sp, r7
 800a496:	bd80      	pop	{r7, pc}

0800a498 <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800a498:	b580      	push	{r7, lr}
 800a49a:	b082      	sub	sp, #8
 800a49c:	af00      	add	r7, sp, #0
 800a49e:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	4618      	mov	r0, r3
 800a4a4:	f001 fa52 	bl	800b94c <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800a4a8:	bf00      	nop
 800a4aa:	3708      	adds	r7, #8
 800a4ac:	46bd      	mov	sp, r7
 800a4ae:	bd80      	pop	{r7, pc}

0800a4b0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800a4b0:	b580      	push	{r7, lr}
 800a4b2:	b082      	sub	sp, #8
 800a4b4:	af00      	add	r7, sp, #0
 800a4b6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800a4b8:	687b      	ldr	r3, [r7, #4]
 800a4ba:	4618      	mov	r0, r3
 800a4bc:	f001 facc 	bl	800ba58 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800a4c0:	4603      	mov	r3, r0
}
 800a4c2:	4618      	mov	r0, r3
 800a4c4:	3708      	adds	r7, #8
 800a4c6:	46bd      	mov	sp, r7
 800a4c8:	bd80      	pop	{r7, pc}

0800a4ca <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800a4ca:	b580      	push	{r7, lr}
 800a4cc:	b082      	sub	sp, #8
 800a4ce:	af00      	add	r7, sp, #0
 800a4d0:	6078      	str	r0, [r7, #4]
 800a4d2:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	6839      	ldr	r1, [r7, #0]
 800a4d8:	4618      	mov	r0, r3
 800a4da:	f001 fac8 	bl	800ba6e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800a4de:	bf00      	nop
 800a4e0:	3708      	adds	r7, #8
 800a4e2:	46bd      	mov	sp, r7
 800a4e4:	bd80      	pop	{r7, pc}

0800a4e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a4e6:	b580      	push	{r7, lr}
 800a4e8:	b082      	sub	sp, #8
 800a4ea:	af00      	add	r7, sp, #0
 800a4ec:	6078      	str	r0, [r7, #4]
 800a4ee:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800a4f0:	687b      	ldr	r3, [r7, #4]
 800a4f2:	6839      	ldr	r1, [r7, #0]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	f001 fac5 	bl	800ba84 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800a4fa:	bf00      	nop
 800a4fc:	3708      	adds	r7, #8
 800a4fe:	46bd      	mov	sp, r7
 800a500:	bd80      	pop	{r7, pc}

0800a502 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800a502:	b580      	push	{r7, lr}
 800a504:	b084      	sub	sp, #16
 800a506:	af00      	add	r7, sp, #0
 800a508:	60f8      	str	r0, [r7, #12]
 800a50a:	60b9      	str	r1, [r7, #8]
 800a50c:	607a      	str	r2, [r7, #4]
 800a50e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800a510:	68f8      	ldr	r0, [r7, #12]
 800a512:	683b      	ldr	r3, [r7, #0]
 800a514:	687a      	ldr	r2, [r7, #4]
 800a516:	68b9      	ldr	r1, [r7, #8]
 800a518:	f001 faf7 	bl	800bb0a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800a51c:	4603      	mov	r3, r0
}
 800a51e:	4618      	mov	r0, r3
 800a520:	3710      	adds	r7, #16
 800a522:	46bd      	mov	sp, r7
 800a524:	bd80      	pop	{r7, pc}

0800a526 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800a526:	b580      	push	{r7, lr}
 800a528:	b082      	sub	sp, #8
 800a52a:	af00      	add	r7, sp, #0
 800a52c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	4618      	mov	r0, r3
 800a532:	f001 fa43 	bl	800b9bc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800a536:	bf00      	nop
 800a538:	3708      	adds	r7, #8
 800a53a:	46bd      	mov	sp, r7
 800a53c:	bd80      	pop	{r7, pc}

0800a53e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800a53e:	b580      	push	{r7, lr}
 800a540:	b082      	sub	sp, #8
 800a542:	af00      	add	r7, sp, #0
 800a544:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	4618      	mov	r0, r3
 800a54a:	f001 fa41 	bl	800b9d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800a54e:	bf00      	nop
 800a550:	3708      	adds	r7, #8
 800a552:	46bd      	mov	sp, r7
 800a554:	bd80      	pop	{r7, pc}

0800a556 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800a556:	b580      	push	{r7, lr}
 800a558:	b082      	sub	sp, #8
 800a55a:	af00      	add	r7, sp, #0
 800a55c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	4618      	mov	r0, r3
 800a562:	f001 fa3f 	bl	800b9e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800a566:	bf00      	nop
 800a568:	3708      	adds	r7, #8
 800a56a:	46bd      	mov	sp, r7
 800a56c:	bd80      	pop	{r7, pc}

0800a56e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800a56e:	b580      	push	{r7, lr}
 800a570:	b082      	sub	sp, #8
 800a572:	af00      	add	r7, sp, #0
 800a574:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	4618      	mov	r0, r3
 800a57a:	f001 fa3d 	bl	800b9f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800a57e:	bf00      	nop
 800a580:	3708      	adds	r7, #8
 800a582:	46bd      	mov	sp, r7
 800a584:	bd80      	pop	{r7, pc}

0800a586 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800a586:	b580      	push	{r7, lr}
 800a588:	b082      	sub	sp, #8
 800a58a:	af00      	add	r7, sp, #0
 800a58c:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	4618      	mov	r0, r3
 800a592:	f001 fa3b 	bl	800ba0c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800a596:	4603      	mov	r3, r0
}
 800a598:	4618      	mov	r0, r3
 800a59a:	3708      	adds	r7, #8
 800a59c:	46bd      	mov	sp, r7
 800a59e:	bd80      	pop	{r7, pc}

0800a5a0 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800a5a0:	b580      	push	{r7, lr}
 800a5a2:	b082      	sub	sp, #8
 800a5a4:	af00      	add	r7, sp, #0
 800a5a6:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	4618      	mov	r0, r3
 800a5ac:	f001 fa3b 	bl	800ba26 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800a5b0:	bf00      	nop
 800a5b2:	3708      	adds	r7, #8
 800a5b4:	46bd      	mov	sp, r7
 800a5b6:	bd80      	pop	{r7, pc}

0800a5b8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800a5b8:	b580      	push	{r7, lr}
 800a5ba:	b082      	sub	sp, #8
 800a5bc:	af00      	add	r7, sp, #0
 800a5be:	6078      	str	r0, [r7, #4]
 800a5c0:	4a05      	ldr	r2, [pc, #20]	@ (800a5d8 <_ZN11TouchGFXHALD1Ev+0x20>)
 800a5c2:	687b      	ldr	r3, [r7, #4]
 800a5c4:	601a      	str	r2, [r3, #0]
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	4618      	mov	r0, r3
 800a5ca:	f7ff ff37 	bl	800a43c <_ZN20TouchGFXGeneratedHALD1Ev>
 800a5ce:	687b      	ldr	r3, [r7, #4]
 800a5d0:	4618      	mov	r0, r3
 800a5d2:	3708      	adds	r7, #8
 800a5d4:	46bd      	mov	sp, r7
 800a5d6:	bd80      	pop	{r7, pc}
 800a5d8:	080236a0 	.word	0x080236a0

0800a5dc <_ZN11TouchGFXHALD0Ev>:
 800a5dc:	b580      	push	{r7, lr}
 800a5de:	b082      	sub	sp, #8
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	6078      	str	r0, [r7, #4]
 800a5e4:	6878      	ldr	r0, [r7, #4]
 800a5e6:	f7ff ffe7 	bl	800a5b8 <_ZN11TouchGFXHALD1Ev>
 800a5ea:	2184      	movs	r1, #132	@ 0x84
 800a5ec:	6878      	ldr	r0, [r7, #4]
 800a5ee:	f016 fd2e 	bl	802104e <_ZdlPvj>
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	4618      	mov	r0, r3
 800a5f6:	3708      	adds	r7, #8
 800a5f8:	46bd      	mov	sp, r7
 800a5fa:	bd80      	pop	{r7, pc}

0800a5fc <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800a5fc:	b480      	push	{r7}
 800a5fe:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800a600:	4b03      	ldr	r3, [pc, #12]	@ (800a610 <touchgfxDisplayDriverTransmitActive+0x14>)
 800a602:	781b      	ldrb	r3, [r3, #0]
}
 800a604:	4618      	mov	r0, r3
 800a606:	46bd      	mov	sp, r7
 800a608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a60c:	4770      	bx	lr
 800a60e:	bf00      	nop
 800a610:	20000594 	.word	0x20000594

0800a614 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800a614:	b590      	push	{r4, r7, lr}
 800a616:	b085      	sub	sp, #20
 800a618:	af00      	add	r7, sp, #0
 800a61a:	60f8      	str	r0, [r7, #12]
 800a61c:	4608      	mov	r0, r1
 800a61e:	4611      	mov	r1, r2
 800a620:	461a      	mov	r2, r3
 800a622:	4603      	mov	r3, r0
 800a624:	817b      	strh	r3, [r7, #10]
 800a626:	460b      	mov	r3, r1
 800a628:	813b      	strh	r3, [r7, #8]
 800a62a:	4613      	mov	r3, r2
 800a62c:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800a62e:	4b0f      	ldr	r3, [pc, #60]	@ (800a66c <touchgfxDisplayDriverTransmitBlock+0x58>)
 800a630:	2201      	movs	r2, #1
 800a632:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800a634:	897a      	ldrh	r2, [r7, #10]
 800a636:	88fb      	ldrh	r3, [r7, #6]
 800a638:	4413      	add	r3, r2
 800a63a:	b29b      	uxth	r3, r3
 800a63c:	3b01      	subs	r3, #1
 800a63e:	b29c      	uxth	r4, r3
 800a640:	893a      	ldrh	r2, [r7, #8]
 800a642:	8c3b      	ldrh	r3, [r7, #32]
 800a644:	4413      	add	r3, r2
 800a646:	b29b      	uxth	r3, r3
 800a648:	3b01      	subs	r3, #1
 800a64a:	b29b      	uxth	r3, r3
 800a64c:	8939      	ldrh	r1, [r7, #8]
 800a64e:	8978      	ldrh	r0, [r7, #10]
 800a650:	4622      	mov	r2, r4
 800a652:	f7f5 ff22 	bl	800049a <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800a656:	8c39      	ldrh	r1, [r7, #32]
 800a658:	88fb      	ldrh	r3, [r7, #6]
 800a65a:	68fa      	ldr	r2, [r7, #12]
 800a65c:	4618      	mov	r0, r3
 800a65e:	f7f5 ff87 	bl	8000570 <ILI9341_DrawBitmap>
}
 800a662:	bf00      	nop
 800a664:	3714      	adds	r7, #20
 800a666:	46bd      	mov	sp, r7
 800a668:	bd90      	pop	{r4, r7, pc}
 800a66a:	bf00      	nop
 800a66c:	20000594 	.word	0x20000594

0800a670 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800a670:	b580      	push	{r7, lr}
 800a672:	b082      	sub	sp, #8
 800a674:	af00      	add	r7, sp, #0
 800a676:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI1) {
 800a678:	687b      	ldr	r3, [r7, #4]
 800a67a:	681b      	ldr	r3, [r3, #0]
 800a67c:	4a06      	ldr	r2, [pc, #24]	@ (800a698 <HAL_SPI_TxCpltCallback+0x28>)
 800a67e:	4293      	cmp	r3, r2
 800a680:	d106      	bne.n	800a690 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800a682:	f7f5 ff9d 	bl	80005c0 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800a686:	4b05      	ldr	r3, [pc, #20]	@ (800a69c <HAL_SPI_TxCpltCallback+0x2c>)
 800a688:	2200      	movs	r2, #0
 800a68a:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800a68c:	f001 fa98 	bl	800bbc0 <DisplayDriver_TransferCompleteCallback>
	}
}
 800a690:	bf00      	nop
 800a692:	3708      	adds	r7, #8
 800a694:	46bd      	mov	sp, r7
 800a696:	bd80      	pop	{r7, pc}
 800a698:	40013000 	.word	0x40013000
 800a69c:	20000594 	.word	0x20000594

0800a6a0 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800a6a0:	b480      	push	{r7}
 800a6a2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a6a4:	4b05      	ldr	r3, [pc, #20]	@ (800a6bc <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800a6a6:	2200      	movs	r2, #0
 800a6a8:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800a6aa:	4b05      	ldr	r3, [pc, #20]	@ (800a6c0 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800a6ac:	2200      	movs	r2, #0
 800a6ae:	601a      	str	r2, [r3, #0]
}
 800a6b0:	bf00      	nop
 800a6b2:	46bd      	mov	sp, r7
 800a6b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b8:	4770      	bx	lr
 800a6ba:	bf00      	nop
 800a6bc:	20000598 	.word	0x20000598
 800a6c0:	2000059c 	.word	0x2000059c

0800a6c4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a6c4:	b480      	push	{r7}
 800a6c6:	af00      	add	r7, sp, #0
    while (fb_sem);
 800a6c8:	bf00      	nop
 800a6ca:	4b08      	ldr	r3, [pc, #32]	@ (800a6ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a6cc:	681b      	ldr	r3, [r3, #0]
 800a6ce:	2b00      	cmp	r3, #0
 800a6d0:	bf14      	ite	ne
 800a6d2:	2301      	movne	r3, #1
 800a6d4:	2300      	moveq	r3, #0
 800a6d6:	b2db      	uxtb	r3, r3
 800a6d8:	2b00      	cmp	r3, #0
 800a6da:	d1f6      	bne.n	800a6ca <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800a6dc:	4b03      	ldr	r3, [pc, #12]	@ (800a6ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a6de:	2201      	movs	r2, #1
 800a6e0:	601a      	str	r2, [r3, #0]
}
 800a6e2:	bf00      	nop
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ea:	4770      	bx	lr
 800a6ec:	20000598 	.word	0x20000598

0800a6f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a6f0:	b480      	push	{r7}
 800a6f2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a6f4:	4b03      	ldr	r3, [pc, #12]	@ (800a704 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a6f6:	2200      	movs	r2, #0
 800a6f8:	601a      	str	r2, [r3, #0]
}
 800a6fa:	bf00      	nop
 800a6fc:	46bd      	mov	sp, r7
 800a6fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a702:	4770      	bx	lr
 800a704:	20000598 	.word	0x20000598

0800a708 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a708:	b480      	push	{r7}
 800a70a:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800a70c:	4b03      	ldr	r3, [pc, #12]	@ (800a71c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a70e:	2201      	movs	r2, #1
 800a710:	601a      	str	r2, [r3, #0]
}
 800a712:	bf00      	nop
 800a714:	46bd      	mov	sp, r7
 800a716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a71a:	4770      	bx	lr
 800a71c:	20000598 	.word	0x20000598

0800a720 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a720:	b480      	push	{r7}
 800a722:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a724:	4b03      	ldr	r3, [pc, #12]	@ (800a734 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a726:	2200      	movs	r2, #0
 800a728:	601a      	str	r2, [r3, #0]
}
 800a72a:	bf00      	nop
 800a72c:	46bd      	mov	sp, r7
 800a72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a732:	4770      	bx	lr
 800a734:	20000598 	.word	0x20000598

0800a738 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a738:	b480      	push	{r7}
 800a73a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800a73c:	4b03      	ldr	r3, [pc, #12]	@ (800a74c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a73e:	2201      	movs	r2, #1
 800a740:	601a      	str	r2, [r3, #0]
}
 800a742:	bf00      	nop
 800a744:	46bd      	mov	sp, r7
 800a746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a74a:	4770      	bx	lr
 800a74c:	2000059c 	.word	0x2000059c

0800a750 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800a750:	b480      	push	{r7}
 800a752:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800a754:	4b03      	ldr	r3, [pc, #12]	@ (800a764 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800a756:	2200      	movs	r2, #0
 800a758:	601a      	str	r2, [r3, #0]
}
 800a75a:	bf00      	nop
 800a75c:	46bd      	mov	sp, r7
 800a75e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a762:	4770      	bx	lr
 800a764:	2000059c 	.word	0x2000059c

0800a768 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800a768:	b480      	push	{r7}
 800a76a:	af00      	add	r7, sp, #0
    return vsync_sem;
 800a76c:	4b05      	ldr	r3, [pc, #20]	@ (800a784 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800a76e:	681b      	ldr	r3, [r3, #0]
 800a770:	2b00      	cmp	r3, #0
 800a772:	bf14      	ite	ne
 800a774:	2301      	movne	r3, #1
 800a776:	2300      	moveq	r3, #0
 800a778:	b2db      	uxtb	r3, r3
}
 800a77a:	4618      	mov	r0, r3
 800a77c:	46bd      	mov	sp, r7
 800a77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a782:	4770      	bx	lr
 800a784:	2000059c 	.word	0x2000059c

0800a788 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a788:	b580      	push	{r7, lr}
 800a78a:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800a78c:	4b0a      	ldr	r3, [pc, #40]	@ (800a7b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a78e:	681b      	ldr	r3, [r3, #0]
 800a790:	2b00      	cmp	r3, #0
 800a792:	bf14      	ite	ne
 800a794:	2301      	movne	r3, #1
 800a796:	2300      	moveq	r3, #0
 800a798:	b2db      	uxtb	r3, r3
 800a79a:	2b00      	cmp	r3, #0
 800a79c:	d00a      	beq.n	800a7b4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800a79e:	4b06      	ldr	r3, [pc, #24]	@ (800a7b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a7a0:	2200      	movs	r2, #0
 800a7a2:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800a7a4:	f7fd f970 	bl	8007a88 <_ZN8touchgfx3HAL11getInstanceEv>
 800a7a8:	4603      	mov	r3, r0
 800a7aa:	681a      	ldr	r2, [r3, #0]
 800a7ac:	3274      	adds	r2, #116	@ 0x74
 800a7ae:	6812      	ldr	r2, [r2, #0]
 800a7b0:	4618      	mov	r0, r3
 800a7b2:	4790      	blx	r2
    }
}
 800a7b4:	bf00      	nop
 800a7b6:	bd80      	pop	{r7, pc}
 800a7b8:	2000059c 	.word	0x2000059c

0800a7bc <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800a7bc:	b480      	push	{r7}
 800a7be:	b083      	sub	sp, #12
 800a7c0:	af00      	add	r7, sp, #0
 800a7c2:	6078      	str	r0, [r7, #4]
        : color(0)
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	2200      	movs	r2, #0
 800a7c8:	601a      	str	r2, [r3, #0]
    }
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	4618      	mov	r0, r3
 800a7ce:	370c      	adds	r7, #12
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7d6:	4770      	bx	lr

0800a7d8 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800a7d8:	b480      	push	{r7}
 800a7da:	b083      	sub	sp, #12
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	6078      	str	r0, [r7, #4]
    {
 800a7e0:	4a04      	ldr	r2, [pc, #16]	@ (800a7f4 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	601a      	str	r2, [r3, #0]
    }
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	4618      	mov	r0, r3
 800a7ea:	370c      	adds	r7, #12
 800a7ec:	46bd      	mov	sp, r7
 800a7ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7f2:	4770      	bx	lr
 800a7f4:	080237dc 	.word	0x080237dc

0800a7f8 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800a7f8:	b580      	push	{r7, lr}
 800a7fa:	b082      	sub	sp, #8
 800a7fc:	af00      	add	r7, sp, #0
 800a7fe:	6078      	str	r0, [r7, #4]
    }
 800a800:	6878      	ldr	r0, [r7, #4]
 800a802:	f7ff ffe9 	bl	800a7d8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a806:	2104      	movs	r1, #4
 800a808:	6878      	ldr	r0, [r7, #4]
 800a80a:	f016 fc20 	bl	802104e <_ZdlPvj>
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	4618      	mov	r0, r3
 800a812:	3708      	adds	r7, #8
 800a814:	46bd      	mov	sp, r7
 800a816:	bd80      	pop	{r7, pc}

0800a818 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800a818:	b480      	push	{r7}
 800a81a:	b083      	sub	sp, #12
 800a81c:	af00      	add	r7, sp, #0
 800a81e:	6078      	str	r0, [r7, #4]
    {
    }
 800a820:	bf00      	nop
 800a822:	370c      	adds	r7, #12
 800a824:	46bd      	mov	sp, r7
 800a826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a82a:	4770      	bx	lr

0800a82c <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800a82c:	b480      	push	{r7}
 800a82e:	b083      	sub	sp, #12
 800a830:	af00      	add	r7, sp, #0
 800a832:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800a834:	2300      	movs	r3, #0
    }
 800a836:	4618      	mov	r0, r3
 800a838:	370c      	adds	r7, #12
 800a83a:	46bd      	mov	sp, r7
 800a83c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a840:	4770      	bx	lr
	...

0800a844 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800a844:	b480      	push	{r7}
 800a846:	b083      	sub	sp, #12
 800a848:	af00      	add	r7, sp, #0
 800a84a:	6078      	str	r0, [r7, #4]
    {
 800a84c:	4a04      	ldr	r2, [pc, #16]	@ (800a860 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	601a      	str	r2, [r3, #0]
    }
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	4618      	mov	r0, r3
 800a856:	370c      	adds	r7, #12
 800a858:	46bd      	mov	sp, r7
 800a85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a85e:	4770      	bx	lr
 800a860:	08023bd4 	.word	0x08023bd4

0800a864 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800a864:	b580      	push	{r7, lr}
 800a866:	b082      	sub	sp, #8
 800a868:	af00      	add	r7, sp, #0
 800a86a:	6078      	str	r0, [r7, #4]
    }
 800a86c:	6878      	ldr	r0, [r7, #4]
 800a86e:	f7ff ffe9 	bl	800a844 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a872:	210c      	movs	r1, #12
 800a874:	6878      	ldr	r0, [r7, #4]
 800a876:	f016 fbea 	bl	802104e <_ZdlPvj>
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	4618      	mov	r0, r3
 800a87e:	3708      	adds	r7, #8
 800a880:	46bd      	mov	sp, r7
 800a882:	bd80      	pop	{r7, pc}

0800a884 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800a884:	b480      	push	{r7}
 800a886:	b083      	sub	sp, #12
 800a888:	af00      	add	r7, sp, #0
 800a88a:	6078      	str	r0, [r7, #4]
 800a88c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800a88e:	4a09      	ldr	r2, [pc, #36]	@ (800a8b4 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	601a      	str	r2, [r3, #0]
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	683a      	ldr	r2, [r7, #0]
 800a898:	605a      	str	r2, [r3, #4]
 800a89a:	687b      	ldr	r3, [r7, #4]
 800a89c:	2200      	movs	r2, #0
 800a89e:	721a      	strb	r2, [r3, #8]
 800a8a0:	687b      	ldr	r3, [r7, #4]
 800a8a2:	2200      	movs	r2, #0
 800a8a4:	725a      	strb	r2, [r3, #9]
    {
    }
 800a8a6:	687b      	ldr	r3, [r7, #4]
 800a8a8:	4618      	mov	r0, r3
 800a8aa:	370c      	adds	r7, #12
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8b2:	4770      	bx	lr
 800a8b4:	08023bd4 	.word	0x08023bd4

0800a8b8 <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800a8b8:	b480      	push	{r7}
 800a8ba:	b083      	sub	sp, #12
 800a8bc:	af00      	add	r7, sp, #0
 800a8be:	6078      	str	r0, [r7, #4]
    {
    }
 800a8c0:	bf00      	nop
 800a8c2:	370c      	adds	r7, #12
 800a8c4:	46bd      	mov	sp, r7
 800a8c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8ca:	4770      	bx	lr

0800a8cc <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800a8cc:	b480      	push	{r7}
 800a8ce:	b083      	sub	sp, #12
 800a8d0:	af00      	add	r7, sp, #0
 800a8d2:	6078      	str	r0, [r7, #4]
    {
    }
 800a8d4:	bf00      	nop
 800a8d6:	370c      	adds	r7, #12
 800a8d8:	46bd      	mov	sp, r7
 800a8da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8de:	4770      	bx	lr

0800a8e0 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800a8e0:	b580      	push	{r7, lr}
 800a8e2:	b082      	sub	sp, #8
 800a8e4:	af00      	add	r7, sp, #0
 800a8e6:	6078      	str	r0, [r7, #4]
 800a8e8:	687b      	ldr	r3, [r7, #4]
 800a8ea:	330c      	adds	r3, #12
 800a8ec:	4618      	mov	r0, r3
 800a8ee:	f7ff ff65 	bl	800a7bc <_ZN8touchgfx9colortypeC1Ev>
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	4618      	mov	r0, r3
 800a8f6:	3708      	adds	r7, #8
 800a8f8:	46bd      	mov	sp, r7
 800a8fa:	bd80      	pop	{r7, pc}

0800a8fc <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800a8fc:	b580      	push	{r7, lr}
 800a8fe:	b082      	sub	sp, #8
 800a900:	af00      	add	r7, sp, #0
 800a902:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800a904:	687a      	ldr	r2, [r7, #4]
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	330c      	adds	r3, #12
 800a90a:	4619      	mov	r1, r3
 800a90c:	4610      	mov	r0, r2
 800a90e:	f7ff ffb9 	bl	800a884 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800a912:	4a0b      	ldr	r2, [pc, #44]	@ (800a940 <_ZN8STM32DMAC1Ev+0x44>)
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	601a      	str	r2, [r3, #0]
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	f103 000c 	add.w	r0, r3, #12
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	3320      	adds	r3, #32
 800a922:	2201      	movs	r2, #1
 800a924:	4619      	mov	r1, r3
 800a926:	f002 fdb9 	bl	800d49c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800a92a:	687b      	ldr	r3, [r7, #4]
 800a92c:	3320      	adds	r3, #32
 800a92e:	4618      	mov	r0, r3
 800a930:	f7ff ffd6 	bl	800a8e0 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	4618      	mov	r0, r3
 800a938:	3708      	adds	r7, #8
 800a93a:	46bd      	mov	sp, r7
 800a93c:	bd80      	pop	{r7, pc}
 800a93e:	bf00      	nop
 800a940:	0802378c 	.word	0x0802378c

0800a944 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800a944:	b480      	push	{r7}
 800a946:	b083      	sub	sp, #12
 800a948:	af00      	add	r7, sp, #0
 800a94a:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800a94c:	2300      	movs	r3, #0
}
 800a94e:	4618      	mov	r0, r3
 800a950:	370c      	adds	r7, #12
 800a952:	46bd      	mov	sp, r7
 800a954:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a958:	4770      	bx	lr
	...

0800a95c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800a95c:	b580      	push	{r7, lr}
 800a95e:	b082      	sub	sp, #8
 800a960:	af00      	add	r7, sp, #0
 800a962:	6078      	str	r0, [r7, #4]
 800a964:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800a966:	4b03      	ldr	r3, [pc, #12]	@ (800a974 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800a968:	4a03      	ldr	r2, [pc, #12]	@ (800a978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800a96a:	2122      	movs	r1, #34	@ 0x22
 800a96c:	4803      	ldr	r0, [pc, #12]	@ (800a97c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800a96e:	f016 fb9b 	bl	80210a8 <__assert_func>
 800a972:	bf00      	nop
 800a974:	08022980 	.word	0x08022980
 800a978:	080229a4 	.word	0x080229a4
 800a97c:	080229e4 	.word	0x080229e4

0800a980 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800a980:	b580      	push	{r7, lr}
 800a982:	b082      	sub	sp, #8
 800a984:	af00      	add	r7, sp, #0
 800a986:	6078      	str	r0, [r7, #4]
 800a988:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800a98a:	4b03      	ldr	r3, [pc, #12]	@ (800a998 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800a98c:	4a03      	ldr	r2, [pc, #12]	@ (800a99c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800a98e:	2127      	movs	r1, #39	@ 0x27
 800a990:	4803      	ldr	r0, [pc, #12]	@ (800a9a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800a992:	f016 fb89 	bl	80210a8 <__assert_func>
 800a996:	bf00      	nop
 800a998:	08022980 	.word	0x08022980
 800a99c:	08022a10 	.word	0x08022a10
 800a9a0:	080229e4 	.word	0x080229e4

0800a9a4 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800a9a4:	b580      	push	{r7, lr}
 800a9a6:	b082      	sub	sp, #8
 800a9a8:	af00      	add	r7, sp, #0
 800a9aa:	6078      	str	r0, [r7, #4]
 800a9ac:	4a08      	ldr	r2, [pc, #32]	@ (800a9d0 <_ZN8STM32DMAD1Ev+0x2c>)
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	601a      	str	r2, [r3, #0]
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	330c      	adds	r3, #12
 800a9b6:	4618      	mov	r0, r3
 800a9b8:	f000 f81c 	bl	800a9f4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	4618      	mov	r0, r3
 800a9c0:	f7ff ff40 	bl	800a844 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	4618      	mov	r0, r3
 800a9c8:	3708      	adds	r7, #8
 800a9ca:	46bd      	mov	sp, r7
 800a9cc:	bd80      	pop	{r7, pc}
 800a9ce:	bf00      	nop
 800a9d0:	0802378c 	.word	0x0802378c

0800a9d4 <_ZN8STM32DMAD0Ev>:
 800a9d4:	b580      	push	{r7, lr}
 800a9d6:	b082      	sub	sp, #8
 800a9d8:	af00      	add	r7, sp, #0
 800a9da:	6078      	str	r0, [r7, #4]
 800a9dc:	6878      	ldr	r0, [r7, #4]
 800a9de:	f7ff ffe1 	bl	800a9a4 <_ZN8STM32DMAD1Ev>
 800a9e2:	2144      	movs	r1, #68	@ 0x44
 800a9e4:	6878      	ldr	r0, [r7, #4]
 800a9e6:	f016 fb32 	bl	802104e <_ZdlPvj>
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	4618      	mov	r0, r3
 800a9ee:	3708      	adds	r7, #8
 800a9f0:	46bd      	mov	sp, r7
 800a9f2:	bd80      	pop	{r7, pc}

0800a9f4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800a9f4:	b580      	push	{r7, lr}
 800a9f6:	b082      	sub	sp, #8
 800a9f8:	af00      	add	r7, sp, #0
 800a9fa:	6078      	str	r0, [r7, #4]
 800a9fc:	4a05      	ldr	r2, [pc, #20]	@ (800aa14 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800a9fe:	687b      	ldr	r3, [r7, #4]
 800aa00:	601a      	str	r2, [r3, #0]
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	4618      	mov	r0, r3
 800aa06:	f7ff fee7 	bl	800a7d8 <_ZN8touchgfx9DMA_QueueD1Ev>
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	4618      	mov	r0, r3
 800aa0e:	3708      	adds	r7, #8
 800aa10:	46bd      	mov	sp, r7
 800aa12:	bd80      	pop	{r7, pc}
 800aa14:	08023c24 	.word	0x08023c24

0800aa18 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800aa18:	b580      	push	{r7, lr}
 800aa1a:	b082      	sub	sp, #8
 800aa1c:	af00      	add	r7, sp, #0
 800aa1e:	6078      	str	r0, [r7, #4]
 800aa20:	6878      	ldr	r0, [r7, #4]
 800aa22:	f7ff ffe7 	bl	800a9f4 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800aa26:	2114      	movs	r1, #20
 800aa28:	6878      	ldr	r0, [r7, #4]
 800aa2a:	f016 fb10 	bl	802104e <_ZdlPvj>
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	4618      	mov	r0, r3
 800aa32:	3708      	adds	r7, #8
 800aa34:	46bd      	mov	sp, r7
 800aa36:	bd80      	pop	{r7, pc}

0800aa38 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800aa38:	b480      	push	{r7}
 800aa3a:	b083      	sub	sp, #12
 800aa3c:	af00      	add	r7, sp, #0
 800aa3e:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800aa40:	4a04      	ldr	r2, [pc, #16]	@ (800aa54 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	6013      	str	r3, [r2, #0]
    }
 800aa46:	bf00      	nop
 800aa48:	370c      	adds	r7, #12
 800aa4a:	46bd      	mov	sp, r7
 800aa4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa50:	4770      	bx	lr
 800aa52:	bf00      	nop
 800aa54:	2000228c 	.word	0x2000228c

0800aa58 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800aa58:	b480      	push	{r7}
 800aa5a:	b085      	sub	sp, #20
 800aa5c:	af00      	add	r7, sp, #0
 800aa5e:	60f8      	str	r0, [r7, #12]
 800aa60:	60b9      	str	r1, [r7, #8]
 800aa62:	607a      	str	r2, [r7, #4]
 800aa64:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800aa66:	4a0b      	ldr	r2, [pc, #44]	@ (800aa94 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800aa68:	68fb      	ldr	r3, [r7, #12]
 800aa6a:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800aa6c:	68fb      	ldr	r3, [r7, #12]
 800aa6e:	68ba      	ldr	r2, [r7, #8]
 800aa70:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800aa72:	68fb      	ldr	r3, [r7, #12]
 800aa74:	687a      	ldr	r2, [r7, #4]
 800aa76:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800aa78:	68fb      	ldr	r3, [r7, #12]
 800aa7a:	683a      	ldr	r2, [r7, #0]
 800aa7c:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800aa7e:	68fb      	ldr	r3, [r7, #12]
 800aa80:	69ba      	ldr	r2, [r7, #24]
 800aa82:	611a      	str	r2, [r3, #16]
    {
    }
 800aa84:	68fb      	ldr	r3, [r7, #12]
 800aa86:	4618      	mov	r0, r3
 800aa88:	3714      	adds	r7, #20
 800aa8a:	46bd      	mov	sp, r7
 800aa8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa90:	4770      	bx	lr
 800aa92:	bf00      	nop
 800aa94:	080238c4 	.word	0x080238c4

0800aa98 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800aa98:	b480      	push	{r7}
 800aa9a:	b083      	sub	sp, #12
 800aa9c:	af00      	add	r7, sp, #0
 800aa9e:	6078      	str	r0, [r7, #4]
    {
 800aaa0:	4a04      	ldr	r2, [pc, #16]	@ (800aab4 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	601a      	str	r2, [r3, #0]
    }
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	370c      	adds	r7, #12
 800aaac:	46bd      	mov	sp, r7
 800aaae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aab2:	4770      	bx	lr
 800aab4:	080238c4 	.word	0x080238c4

0800aab8 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800aab8:	b580      	push	{r7, lr}
 800aaba:	b082      	sub	sp, #8
 800aabc:	af00      	add	r7, sp, #0
 800aabe:	6078      	str	r0, [r7, #4]
    }
 800aac0:	6878      	ldr	r0, [r7, #4]
 800aac2:	f7ff ffe9 	bl	800aa98 <_ZN8touchgfx7MVPHeapD1Ev>
 800aac6:	2114      	movs	r1, #20
 800aac8:	6878      	ldr	r0, [r7, #4]
 800aaca:	f016 fac0 	bl	802104e <_ZdlPvj>
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	4618      	mov	r0, r3
 800aad2:	3708      	adds	r7, #8
 800aad4:	46bd      	mov	sp, r7
 800aad6:	bd80      	pop	{r7, pc}

0800aad8 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800aad8:	b480      	push	{r7}
 800aada:	b083      	sub	sp, #12
 800aadc:	af00      	add	r7, sp, #0
 800aade:	6078      	str	r0, [r7, #4]
    {
 800aae0:	4a04      	ldr	r2, [pc, #16]	@ (800aaf4 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	601a      	str	r2, [r3, #0]
    }
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	4618      	mov	r0, r3
 800aaea:	370c      	adds	r7, #12
 800aaec:	46bd      	mov	sp, r7
 800aaee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaf2:	4770      	bx	lr
 800aaf4:	08023dd0 	.word	0x08023dd0

0800aaf8 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800aaf8:	b580      	push	{r7, lr}
 800aafa:	b082      	sub	sp, #8
 800aafc:	af00      	add	r7, sp, #0
 800aafe:	6078      	str	r0, [r7, #4]
    }
 800ab00:	6878      	ldr	r0, [r7, #4]
 800ab02:	f7ff ffe9 	bl	800aad8 <_ZN8touchgfx3LCDD1Ev>
 800ab06:	210c      	movs	r1, #12
 800ab08:	6878      	ldr	r0, [r7, #4]
 800ab0a:	f016 faa0 	bl	802104e <_ZdlPvj>
 800ab0e:	687b      	ldr	r3, [r7, #4]
 800ab10:	4618      	mov	r0, r3
 800ab12:	3708      	adds	r7, #8
 800ab14:	46bd      	mov	sp, r7
 800ab16:	bd80      	pop	{r7, pc}

0800ab18 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800ab18:	b480      	push	{r7}
 800ab1a:	b083      	sub	sp, #12
 800ab1c:	af00      	add	r7, sp, #0
 800ab1e:	6078      	str	r0, [r7, #4]
            : startX(0),
 800ab20:	687b      	ldr	r3, [r7, #4]
 800ab22:	2200      	movs	r2, #0
 800ab24:	801a      	strh	r2, [r3, #0]
              startY(0),
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	2200      	movs	r2, #0
 800ab2a:	805a      	strh	r2, [r3, #2]
              downX(0),
 800ab2c:	687b      	ldr	r3, [r7, #4]
 800ab2e:	2200      	movs	r2, #0
 800ab30:	809a      	strh	r2, [r3, #4]
              downY(0),
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	2200      	movs	r2, #0
 800ab36:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800ab38:	687b      	ldr	r3, [r7, #4]
 800ab3a:	2200      	movs	r2, #0
 800ab3c:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	2200      	movs	r2, #0
 800ab42:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	2200      	movs	r2, #0
 800ab48:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	2200      	movs	r2, #0
 800ab4e:	739a      	strb	r2, [r3, #14]
        {
        }
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	4618      	mov	r0, r3
 800ab54:	370c      	adds	r7, #12
 800ab56:	46bd      	mov	sp, r7
 800ab58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab5c:	4770      	bx	lr

0800ab5e <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800ab5e:	b580      	push	{r7, lr}
 800ab60:	b082      	sub	sp, #8
 800ab62:	af00      	add	r7, sp, #0
 800ab64:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800ab66:	687b      	ldr	r3, [r7, #4]
 800ab68:	4618      	mov	r0, r3
 800ab6a:	f7ff ffd5 	bl	800ab18 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800ab6e:	687b      	ldr	r3, [r7, #4]
 800ab70:	2200      	movs	r2, #0
 800ab72:	611a      	str	r2, [r3, #16]
 800ab74:	687b      	ldr	r3, [r7, #4]
 800ab76:	2200      	movs	r2, #0
 800ab78:	829a      	strh	r2, [r3, #20]
    {
    }
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	3708      	adds	r7, #8
 800ab80:	46bd      	mov	sp, r7
 800ab82:	bd80      	pop	{r7, pc}

0800ab84 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800ab84:	b580      	push	{r7, lr}
 800ab86:	b084      	sub	sp, #16
 800ab88:	af00      	add	r7, sp, #0
 800ab8a:	60f8      	str	r0, [r7, #12]
 800ab8c:	60b9      	str	r1, [r7, #8]
 800ab8e:	607a      	str	r2, [r7, #4]
 800ab90:	603b      	str	r3, [r7, #0]
          maxBlockLines(20)
 800ab92:	4a65      	ldr	r2, [pc, #404]	@ (800ad28 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1a4>)
 800ab94:	68fb      	ldr	r3, [r7, #12]
 800ab96:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800ab98:	68fb      	ldr	r3, [r7, #12]
 800ab9a:	68ba      	ldr	r2, [r7, #8]
 800ab9c:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	687a      	ldr	r2, [r7, #4]
 800aba2:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800aba4:	68fb      	ldr	r3, [r7, #12]
 800aba6:	683a      	ldr	r2, [r7, #0]
 800aba8:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800abaa:	68fb      	ldr	r3, [r7, #12]
 800abac:	2200      	movs	r2, #0
 800abae:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	2200      	movs	r2, #0
 800abb4:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800abb6:	68fb      	ldr	r3, [r7, #12]
 800abb8:	2200      	movs	r2, #0
 800abba:	619a      	str	r2, [r3, #24]
          gestures(),
 800abbc:	68fb      	ldr	r3, [r7, #12]
 800abbe:	331c      	adds	r3, #28
 800abc0:	4618      	mov	r0, r3
 800abc2:	f7ff ffcc 	bl	800ab5e <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800abc6:	68fb      	ldr	r3, [r7, #12]
 800abc8:	2200      	movs	r2, #0
 800abca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	2200      	movs	r2, #0
 800abd2:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800abd4:	68fb      	ldr	r3, [r7, #12]
 800abd6:	2200      	movs	r2, #0
 800abd8:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800abda:	68fb      	ldr	r3, [r7, #12]
 800abdc:	2200      	movs	r2, #0
 800abde:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800abe0:	68fb      	ldr	r3, [r7, #12]
 800abe2:	2200      	movs	r2, #0
 800abe4:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800abe6:	68fb      	ldr	r3, [r7, #12]
 800abe8:	2200      	movs	r2, #0
 800abea:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800abee:	68fb      	ldr	r3, [r7, #12]
 800abf0:	2201      	movs	r2, #1
 800abf2:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800abf6:	68fb      	ldr	r3, [r7, #12]
 800abf8:	2200      	movs	r2, #0
 800abfa:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800abfe:	68fb      	ldr	r3, [r7, #12]
 800ac00:	2200      	movs	r2, #0
 800ac02:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800ac06:	68fb      	ldr	r3, [r7, #12]
 800ac08:	2200      	movs	r2, #0
 800ac0a:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800ac0c:	68fb      	ldr	r3, [r7, #12]
 800ac0e:	3350      	adds	r3, #80	@ 0x50
 800ac10:	4618      	mov	r0, r3
 800ac12:	f7fd fe8e 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800ac16:	68fb      	ldr	r3, [r7, #12]
 800ac18:	2200      	movs	r2, #0
 800ac1a:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800ac1e:	68fb      	ldr	r3, [r7, #12]
 800ac20:	2200      	movs	r2, #0
 800ac22:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800ac24:	68fb      	ldr	r3, [r7, #12]
 800ac26:	2200      	movs	r2, #0
 800ac28:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800ac2a:	68fb      	ldr	r3, [r7, #12]
 800ac2c:	2200      	movs	r2, #0
 800ac2e:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800ac30:	68fb      	ldr	r3, [r7, #12]
 800ac32:	2201      	movs	r2, #1
 800ac34:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800ac38:	68fb      	ldr	r3, [r7, #12]
 800ac3a:	2200      	movs	r2, #0
 800ac3c:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800ac40:	68fb      	ldr	r3, [r7, #12]
 800ac42:	2200      	movs	r2, #0
 800ac44:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800ac48:	68fb      	ldr	r3, [r7, #12]
 800ac4a:	2201      	movs	r2, #1
 800ac4c:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800ac50:	68fb      	ldr	r3, [r7, #12]
 800ac52:	2200      	movs	r2, #0
 800ac54:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	2200      	movs	r2, #0
 800ac5c:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800ac60:	68fb      	ldr	r3, [r7, #12]
 800ac62:	2200      	movs	r2, #0
 800ac64:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800ac68:	68fb      	ldr	r3, [r7, #12]
 800ac6a:	2200      	movs	r2, #0
 800ac6c:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800ac70:	68fb      	ldr	r3, [r7, #12]
 800ac72:	2200      	movs	r2, #0
 800ac74:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800ac78:	68fb      	ldr	r3, [r7, #12]
 800ac7a:	2200      	movs	r2, #0
 800ac7c:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800ac7e:	68fb      	ldr	r3, [r7, #12]
 800ac80:	2200      	movs	r2, #0
 800ac82:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800ac86:	68fb      	ldr	r3, [r7, #12]
 800ac88:	2200      	movs	r2, #0
 800ac8a:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800ac8e:	68fb      	ldr	r3, [r7, #12]
 800ac90:	2201      	movs	r2, #1
 800ac92:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE),
 800ac96:	68fb      	ldr	r3, [r7, #12]
 800ac98:	2201      	movs	r2, #1
 800ac9a:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
          isFrontPorchEntered(false),
 800ac9e:	68fb      	ldr	r3, [r7, #12]
 800aca0:	2200      	movs	r2, #0
 800aca2:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
          numberOfBlocks(4),
 800aca6:	68fb      	ldr	r3, [r7, #12]
 800aca8:	2204      	movs	r2, #4
 800acaa:	f883 207d 	strb.w	r2, [r3, #125]	@ 0x7d
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
 800acae:	8bbb      	ldrh	r3, [r7, #28]
 800acb0:	68fa      	ldr	r2, [r7, #12]
 800acb2:	f892 207d 	ldrb.w	r2, [r2, #125]	@ 0x7d
 800acb6:	fb93 f3f2 	sdiv	r3, r3, r2
 800acba:	b29a      	uxth	r2, r3
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	f8a3 207e 	strh.w	r2, [r3, #126]	@ 0x7e
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800acc2:	68fb      	ldr	r3, [r7, #12]
 800acc4:	f8b3 307e 	ldrh.w	r3, [r3, #126]	@ 0x7e
 800acc8:	4a18      	ldr	r2, [pc, #96]	@ (800ad2c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1a8>)
 800acca:	fba2 2303 	umull	r2, r3, r2, r3
 800acce:	085b      	lsrs	r3, r3, #1
 800acd0:	b29a      	uxth	r2, r3
 800acd2:	68fb      	ldr	r3, [r7, #12]
 800acd4:	f8a3 2080 	strh.w	r2, [r3, #128]	@ 0x80
          maxBlockLines(20)
 800acd8:	68fb      	ldr	r3, [r7, #12]
 800acda:	2214      	movs	r2, #20
 800acdc:	f8a3 2082 	strh.w	r2, [r3, #130]	@ 0x82
        instance = this;
 800ace0:	4a13      	ldr	r2, [pc, #76]	@ (800ad30 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1ac>)
 800ace2:	68fb      	ldr	r3, [r7, #12]
 800ace4:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800ace6:	4a13      	ldr	r2, [pc, #76]	@ (800ad34 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b0>)
 800ace8:	8b3b      	ldrh	r3, [r7, #24]
 800acea:	8013      	strh	r3, [r2, #0]
 800acec:	4b11      	ldr	r3, [pc, #68]	@ (800ad34 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b0>)
 800acee:	881a      	ldrh	r2, [r3, #0]
 800acf0:	4b11      	ldr	r3, [pc, #68]	@ (800ad38 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b4>)
 800acf2:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800acf4:	4a11      	ldr	r2, [pc, #68]	@ (800ad3c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b8>)
 800acf6:	8bbb      	ldrh	r3, [r7, #28]
 800acf8:	8013      	strh	r3, [r2, #0]
 800acfa:	4b10      	ldr	r3, [pc, #64]	@ (800ad3c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b8>)
 800acfc:	881a      	ldrh	r2, [r3, #0]
 800acfe:	4b10      	ldr	r3, [pc, #64]	@ (800ad40 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1bc>)
 800ad00:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800ad02:	4b10      	ldr	r3, [pc, #64]	@ (800ad44 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1c0>)
 800ad04:	2200      	movs	r2, #0
 800ad06:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800ad08:	8b3a      	ldrh	r2, [r7, #24]
 800ad0a:	8bbb      	ldrh	r3, [r7, #28]
 800ad0c:	429a      	cmp	r2, r3
 800ad0e:	bf34      	ite	cc
 800ad10:	2301      	movcc	r3, #1
 800ad12:	2300      	movcs	r3, #0
 800ad14:	b2db      	uxtb	r3, r3
 800ad16:	461a      	mov	r2, r3
 800ad18:	68fb      	ldr	r3, [r7, #12]
 800ad1a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800ad1e:	68fb      	ldr	r3, [r7, #12]
 800ad20:	4618      	mov	r0, r3
 800ad22:	3710      	adds	r7, #16
 800ad24:	46bd      	mov	sp, r7
 800ad26:	bd80      	pop	{r7, pc}
 800ad28:	08023ae8 	.word	0x08023ae8
 800ad2c:	aaaaaaab 	.word	0xaaaaaaab
 800ad30:	20002230 	.word	0x20002230
 800ad34:	20002224 	.word	0x20002224
 800ad38:	2000222a 	.word	0x2000222a
 800ad3c:	20002226 	.word	0x20002226
 800ad40:	2000222c 	.word	0x2000222c
 800ad44:	20002228 	.word	0x20002228

0800ad48 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800ad48:	b580      	push	{r7, lr}
 800ad4a:	b082      	sub	sp, #8
 800ad4c:	af00      	add	r7, sp, #0
 800ad4e:	6078      	str	r0, [r7, #4]
 800ad50:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 800ad52:	683b      	ldr	r3, [r7, #0]
 800ad54:	4618      	mov	r0, r3
 800ad56:	f7fd fb4f 	bl	80083f8 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800ad5a:	bf00      	nop
 800ad5c:	3708      	adds	r7, #8
 800ad5e:	46bd      	mov	sp, r7
 800ad60:	bd80      	pop	{r7, pc}
	...

0800ad64 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800ad64:	b580      	push	{r7, lr}
 800ad66:	b086      	sub	sp, #24
 800ad68:	af02      	add	r7, sp, #8
 800ad6a:	60f8      	str	r0, [r7, #12]
 800ad6c:	60b9      	str	r1, [r7, #8]
 800ad6e:	607a      	str	r2, [r7, #4]
 800ad70:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800ad72:	68f8      	ldr	r0, [r7, #12]
 800ad74:	69bb      	ldr	r3, [r7, #24]
 800ad76:	9300      	str	r3, [sp, #0]
 800ad78:	683b      	ldr	r3, [r7, #0]
 800ad7a:	687a      	ldr	r2, [r7, #4]
 800ad7c:	68b9      	ldr	r1, [r7, #8]
 800ad7e:	f7ff fe6b 	bl	800aa58 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800ad82:	4a04      	ldr	r2, [pc, #16]	@ (800ad94 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800ad84:	68fb      	ldr	r3, [r7, #12]
 800ad86:	601a      	str	r2, [r3, #0]
    {

    }
 800ad88:	68fb      	ldr	r3, [r7, #12]
 800ad8a:	4618      	mov	r0, r3
 800ad8c:	3710      	adds	r7, #16
 800ad8e:	46bd      	mov	sp, r7
 800ad90:	bd80      	pop	{r7, pc}
 800ad92:	bf00      	nop
 800ad94:	080238b0 	.word	0x080238b0

0800ad98 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800ad98:	b580      	push	{r7, lr}
 800ad9a:	af00      	add	r7, sp, #0
 800ad9c:	4801      	ldr	r0, [pc, #4]	@ (800ada4 <__tcf_0+0xc>)
 800ad9e:	f000 f969 	bl	800b074 <_ZN12FrontendHeapD1Ev>
 800ada2:	bd80      	pop	{r7, pc}
 800ada4:	200005a0 	.word	0x200005a0

0800ada8 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800ada8:	b580      	push	{r7, lr}
 800adaa:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800adac:	4b11      	ldr	r3, [pc, #68]	@ (800adf4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800adae:	e8d3 3faf 	lda	r3, [r3]
 800adb2:	f003 0301 	and.w	r3, r3, #1
 800adb6:	2b00      	cmp	r3, #0
 800adb8:	bf0c      	ite	eq
 800adba:	2301      	moveq	r3, #1
 800adbc:	2300      	movne	r3, #0
 800adbe:	b2db      	uxtb	r3, r3
 800adc0:	2b00      	cmp	r3, #0
 800adc2:	d013      	beq.n	800adec <_ZN12FrontendHeap11getInstanceEv+0x44>
 800adc4:	480b      	ldr	r0, [pc, #44]	@ (800adf4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800adc6:	f016 f944 	bl	8021052 <__cxa_guard_acquire>
 800adca:	4603      	mov	r3, r0
 800adcc:	2b00      	cmp	r3, #0
 800adce:	bf14      	ite	ne
 800add0:	2301      	movne	r3, #1
 800add2:	2300      	moveq	r3, #0
 800add4:	b2db      	uxtb	r3, r3
 800add6:	2b00      	cmp	r3, #0
 800add8:	d008      	beq.n	800adec <_ZN12FrontendHeap11getInstanceEv+0x44>
 800adda:	4807      	ldr	r0, [pc, #28]	@ (800adf8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800addc:	f000 f868 	bl	800aeb0 <_ZN12FrontendHeapC1Ev>
 800ade0:	4806      	ldr	r0, [pc, #24]	@ (800adfc <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800ade2:	f016 f97f 	bl	80210e4 <atexit>
 800ade6:	4803      	ldr	r0, [pc, #12]	@ (800adf4 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800ade8:	f016 f93f 	bl	802106a <__cxa_guard_release>
        return instance;
 800adec:	4b02      	ldr	r3, [pc, #8]	@ (800adf8 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800adee:	4618      	mov	r0, r3
 800adf0:	bd80      	pop	{r7, pc}
 800adf2:	bf00      	nop
 800adf4:	2000089c 	.word	0x2000089c
 800adf8:	200005a0 	.word	0x200005a0
 800adfc:	0800ad99 	.word	0x0800ad99

0800ae00 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800ae00:	b580      	push	{r7, lr}
 800ae02:	b082      	sub	sp, #8
 800ae04:	af00      	add	r7, sp, #0
 800ae06:	6078      	str	r0, [r7, #4]
 800ae08:	4a05      	ldr	r2, [pc, #20]	@ (800ae20 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800ae0a:	687b      	ldr	r3, [r7, #4]
 800ae0c:	601a      	str	r2, [r3, #0]
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	4618      	mov	r0, r3
 800ae12:	f7ff fe41 	bl	800aa98 <_ZN8touchgfx7MVPHeapD1Ev>
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	4618      	mov	r0, r3
 800ae1a:	3708      	adds	r7, #8
 800ae1c:	46bd      	mov	sp, r7
 800ae1e:	bd80      	pop	{r7, pc}
 800ae20:	080238b0 	.word	0x080238b0

0800ae24 <_ZN16FrontendHeapBaseD0Ev>:
 800ae24:	b580      	push	{r7, lr}
 800ae26:	b082      	sub	sp, #8
 800ae28:	af00      	add	r7, sp, #0
 800ae2a:	6078      	str	r0, [r7, #4]
 800ae2c:	6878      	ldr	r0, [r7, #4]
 800ae2e:	f7ff ffe7 	bl	800ae00 <_ZN16FrontendHeapBaseD1Ev>
 800ae32:	2114      	movs	r1, #20
 800ae34:	6878      	ldr	r0, [r7, #4]
 800ae36:	f016 f90a 	bl	802104e <_ZdlPvj>
 800ae3a:	687b      	ldr	r3, [r7, #4]
 800ae3c:	4618      	mov	r0, r3
 800ae3e:	3708      	adds	r7, #8
 800ae40:	46bd      	mov	sp, r7
 800ae42:	bd80      	pop	{r7, pc}

0800ae44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800ae44:	b580      	push	{r7, lr}
 800ae46:	b082      	sub	sp, #8
 800ae48:	af00      	add	r7, sp, #0
 800ae4a:	6078      	str	r0, [r7, #4]
 800ae4c:	687b      	ldr	r3, [r7, #4]
 800ae4e:	4618      	mov	r0, r3
 800ae50:	f001 f96a 	bl	800c128 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800ae54:	4a03      	ldr	r2, [pc, #12]	@ (800ae64 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	601a      	str	r2, [r3, #0]
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	3708      	adds	r7, #8
 800ae60:	46bd      	mov	sp, r7
 800ae62:	bd80      	pop	{r7, pc}
 800ae64:	0802387c 	.word	0x0802387c

0800ae68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800ae68:	b580      	push	{r7, lr}
 800ae6a:	b082      	sub	sp, #8
 800ae6c:	af00      	add	r7, sp, #0
 800ae6e:	6078      	str	r0, [r7, #4]
 800ae70:	687b      	ldr	r3, [r7, #4]
 800ae72:	4618      	mov	r0, r3
 800ae74:	f001 f958 	bl	800c128 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800ae78:	4a03      	ldr	r2, [pc, #12]	@ (800ae88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	601a      	str	r2, [r3, #0]
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	4618      	mov	r0, r3
 800ae82:	3708      	adds	r7, #8
 800ae84:	46bd      	mov	sp, r7
 800ae86:	bd80      	pop	{r7, pc}
 800ae88:	08023848 	.word	0x08023848

0800ae8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800ae8c:	b580      	push	{r7, lr}
 800ae8e:	b082      	sub	sp, #8
 800ae90:	af00      	add	r7, sp, #0
 800ae92:	6078      	str	r0, [r7, #4]
 800ae94:	687b      	ldr	r3, [r7, #4]
 800ae96:	4618      	mov	r0, r3
 800ae98:	f001 f946 	bl	800c128 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800ae9c:	4a03      	ldr	r2, [pc, #12]	@ (800aeac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	601a      	str	r2, [r3, #0]
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	4618      	mov	r0, r3
 800aea6:	3708      	adds	r7, #8
 800aea8:	46bd      	mov	sp, r7
 800aeaa:	bd80      	pop	{r7, pc}
 800aeac:	08023814 	.word	0x08023814

0800aeb0 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800aeb0:	b590      	push	{r4, r7, lr}
 800aeb2:	b085      	sub	sp, #20
 800aeb4:	af02      	add	r7, sp, #8
 800aeb6:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800aeb8:	6878      	ldr	r0, [r7, #4]
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	f103 0114 	add.w	r1, r3, #20
 800aec0:	687b      	ldr	r3, [r7, #4]
 800aec2:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800aecc:	687b      	ldr	r3, [r7, #4]
 800aece:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
                     app(model, *this)
 800aed2:	9300      	str	r3, [sp, #0]
 800aed4:	4623      	mov	r3, r4
 800aed6:	f7ff ff45 	bl	800ad64 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800aeda:	4a18      	ldr	r2, [pc, #96]	@ (800af3c <_ZN12FrontendHeapC1Ev+0x8c>)
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	601a      	str	r2, [r3, #0]
 800aee0:	687b      	ldr	r3, [r7, #4]
 800aee2:	3314      	adds	r3, #20
 800aee4:	4618      	mov	r0, r3
 800aee6:	f7ff ffad 	bl	800ae44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	332c      	adds	r3, #44	@ 0x2c
 800aeee:	4618      	mov	r0, r3
 800aef0:	f7ff ffba 	bl	800ae68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800aef4:	687b      	ldr	r3, [r7, #4]
 800aef6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800aefa:	4618      	mov	r0, r3
 800aefc:	f7ff ffc6 	bl	800ae8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800af00:	687b      	ldr	r3, [r7, #4]
 800af02:	f503 73ce 	add.w	r3, r3, #412	@ 0x19c
 800af06:	4618      	mov	r0, r3
 800af08:	f7fe feca 	bl	8009ca0 <_ZN5ModelC1Ev>
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	f503 70d0 	add.w	r0, r3, #416	@ 0x1a0
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	f503 73ce 	add.w	r3, r3, #412	@ 0x19c
 800af18:	687a      	ldr	r2, [r7, #4]
 800af1a:	4619      	mov	r1, r3
 800af1c:	f7fe feaa 	bl	8009c74 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800af20:	687a      	ldr	r2, [r7, #4]
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 800af28:	4619      	mov	r1, r3
 800af2a:	4610      	mov	r0, r2
 800af2c:	f7ff ff0c 	bl	800ad48 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800af30:	687b      	ldr	r3, [r7, #4]
 800af32:	4618      	mov	r0, r3
 800af34:	370c      	adds	r7, #12
 800af36:	46bd      	mov	sp, r7
 800af38:	bd90      	pop	{r4, r7, pc}
 800af3a:	bf00      	nop
 800af3c:	08023800 	.word	0x08023800

0800af40 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800af40:	b580      	push	{r7, lr}
 800af42:	b086      	sub	sp, #24
 800af44:	af02      	add	r7, sp, #8
 800af46:	60f8      	str	r0, [r7, #12]
 800af48:	60b9      	str	r1, [r7, #8]
 800af4a:	607a      	str	r2, [r7, #4]
 800af4c:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800af4e:	68f8      	ldr	r0, [r7, #12]
 800af50:	8bbb      	ldrh	r3, [r7, #28]
 800af52:	9301      	str	r3, [sp, #4]
 800af54:	8b3b      	ldrh	r3, [r7, #24]
 800af56:	9300      	str	r3, [sp, #0]
 800af58:	683b      	ldr	r3, [r7, #0]
 800af5a:	687a      	ldr	r2, [r7, #4]
 800af5c:	68b9      	ldr	r1, [r7, #8]
 800af5e:	f7ff fe11 	bl	800ab84 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800af62:	4a04      	ldr	r2, [pc, #16]	@ (800af74 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	601a      	str	r2, [r3, #0]
    }
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	4618      	mov	r0, r3
 800af6c:	3710      	adds	r7, #16
 800af6e:	46bd      	mov	sp, r7
 800af70:	bd80      	pop	{r7, pc}
 800af72:	bf00      	nop
 800af74:	08023900 	.word	0x08023900

0800af78 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800af78:	b580      	push	{r7, lr}
 800af7a:	b086      	sub	sp, #24
 800af7c:	af02      	add	r7, sp, #8
 800af7e:	60f8      	str	r0, [r7, #12]
 800af80:	60b9      	str	r1, [r7, #8]
 800af82:	607a      	str	r2, [r7, #4]
 800af84:	603b      	str	r3, [r7, #0]
 800af86:	68f8      	ldr	r0, [r7, #12]
 800af88:	8bbb      	ldrh	r3, [r7, #28]
 800af8a:	9301      	str	r3, [sp, #4]
 800af8c:	8b3b      	ldrh	r3, [r7, #24]
 800af8e:	9300      	str	r3, [sp, #0]
 800af90:	683b      	ldr	r3, [r7, #0]
 800af92:	687a      	ldr	r2, [r7, #4]
 800af94:	68b9      	ldr	r1, [r7, #8]
 800af96:	f7ff ffd3 	bl	800af40 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800af9a:	4a04      	ldr	r2, [pc, #16]	@ (800afac <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800af9c:	68fb      	ldr	r3, [r7, #12]
 800af9e:	601a      	str	r2, [r3, #0]
    }
 800afa0:	68fb      	ldr	r3, [r7, #12]
 800afa2:	4618      	mov	r0, r3
 800afa4:	3710      	adds	r7, #16
 800afa6:	46bd      	mov	sp, r7
 800afa8:	bd80      	pop	{r7, pc}
 800afaa:	bf00      	nop
 800afac:	080236a0 	.word	0x080236a0

0800afb0 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800afb0:	b480      	push	{r7}
 800afb2:	b083      	sub	sp, #12
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	6078      	str	r0, [r7, #4]
 800afb8:	4a04      	ldr	r2, [pc, #16]	@ (800afcc <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	601a      	str	r2, [r3, #0]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	4618      	mov	r0, r3
 800afc2:	370c      	adds	r7, #12
 800afc4:	46bd      	mov	sp, r7
 800afc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afca:	4770      	bx	lr
 800afcc:	08023688 	.word	0x08023688

0800afd0 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800afd0:	b580      	push	{r7, lr}
 800afd2:	b082      	sub	sp, #8
 800afd4:	af00      	add	r7, sp, #0
 800afd6:	6078      	str	r0, [r7, #4]
 800afd8:	687b      	ldr	r3, [r7, #4]
 800afda:	4618      	mov	r0, r3
 800afdc:	f7ff ffe8 	bl	800afb0 <_ZN8touchgfx15TouchControllerC1Ev>
 800afe0:	4a03      	ldr	r2, [pc, #12]	@ (800aff0 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	601a      	str	r2, [r3, #0]
 800afe6:	687b      	ldr	r3, [r7, #4]
 800afe8:	4618      	mov	r0, r3
 800afea:	3708      	adds	r7, #8
 800afec:	46bd      	mov	sp, r7
 800afee:	bd80      	pop	{r7, pc}
 800aff0:	08023670 	.word	0x08023670

0800aff4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800aff4:	b590      	push	{r4, r7, lr}
 800aff6:	b085      	sub	sp, #20
 800aff8:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800affa:	f7fe fc0b 	bl	8009814 <_ZN14BitmapDatabase11getInstanceEv>
 800affe:	4604      	mov	r4, r0
 800b000:	f7fe fc12 	bl	8009828 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800b004:	4603      	mov	r3, r0
 800b006:	4619      	mov	r1, r3
 800b008:	2300      	movs	r3, #0
 800b00a:	9300      	str	r3, [sp, #0]
 800b00c:	2300      	movs	r3, #0
 800b00e:	2200      	movs	r2, #0
 800b010:	4620      	mov	r0, r4
 800b012:	f007 fcff 	bl	8012a14 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800b016:	4809      	ldr	r0, [pc, #36]	@ (800b03c <touchgfx_init+0x48>)
 800b018:	f7ff fd0e 	bl	800aa38 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800b01c:	2000      	movs	r0, #0
 800b01e:	f7fe fd47 	bl	8009ab0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800b022:	4807      	ldr	r0, [pc, #28]	@ (800b040 <touchgfx_init+0x4c>)
 800b024:	f007 fc5e 	bl	80128e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800b028:	f7ff febe 	bl	800ada8 <_ZN12FrontendHeap11getInstanceEv>
 800b02c:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800b02e:	4805      	ldr	r0, [pc, #20]	@ (800b044 <touchgfx_init+0x50>)
 800b030:	f7ff fa32 	bl	800a498 <_ZN11TouchGFXHAL10initializeEv>
}
 800b034:	bf00      	nop
 800b036:	370c      	adds	r7, #12
 800b038:	46bd      	mov	sp, r7
 800b03a:	bd90      	pop	{r4, r7, pc}
 800b03c:	20000974 	.word	0x20000974
 800b040:	20000010 	.word	0x20000010
 800b044:	20000978 	.word	0x20000978

0800b048 <touchgfx_components_init>:

void touchgfx_components_init()
{
 800b048:	b480      	push	{r7}
 800b04a:	af00      	add	r7, sp, #0
}
 800b04c:	bf00      	nop
 800b04e:	46bd      	mov	sp, r7
 800b050:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b054:	4770      	bx	lr
	...

0800b058 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800b058:	b580      	push	{r7, lr}
 800b05a:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800b05c:	f7ff fb84 	bl	800a768 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800b060:	4603      	mov	r3, r0
 800b062:	2b00      	cmp	r3, #0
 800b064:	d002      	beq.n	800b06c <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800b066:	4802      	ldr	r0, [pc, #8]	@ (800b070 <touchgfx_taskEntry+0x18>)
 800b068:	f7ff f8c8 	bl	800a1fc <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800b06c:	bf00      	nop
 800b06e:	bd80      	pop	{r7, pc}
 800b070:	20000978 	.word	0x20000978

0800b074 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800b074:	b580      	push	{r7, lr}
 800b076:	b082      	sub	sp, #8
 800b078:	af00      	add	r7, sp, #0
 800b07a:	6078      	str	r0, [r7, #4]
 800b07c:	4a10      	ldr	r2, [pc, #64]	@ (800b0c0 <_ZN12FrontendHeapD1Ev+0x4c>)
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	601a      	str	r2, [r3, #0]
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 800b088:	4618      	mov	r0, r3
 800b08a:	f7fe fdbd 	bl	8009c08 <_ZN19FrontendApplicationD1Ev>
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b094:	4618      	mov	r0, r3
 800b096:	f000 f827 	bl	800b0e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b09a:	687b      	ldr	r3, [r7, #4]
 800b09c:	332c      	adds	r3, #44	@ 0x2c
 800b09e:	4618      	mov	r0, r3
 800b0a0:	f000 f844 	bl	800b12c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	3314      	adds	r3, #20
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	f000 f863 	bl	800b174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	f7ff fea5 	bl	800ae00 <_ZN16FrontendHeapBaseD1Ev>
 800b0b6:	687b      	ldr	r3, [r7, #4]
 800b0b8:	4618      	mov	r0, r3
 800b0ba:	3708      	adds	r7, #8
 800b0bc:	46bd      	mov	sp, r7
 800b0be:	bd80      	pop	{r7, pc}
 800b0c0:	08023800 	.word	0x08023800

0800b0c4 <_ZN12FrontendHeapD0Ev>:
 800b0c4:	b580      	push	{r7, lr}
 800b0c6:	b082      	sub	sp, #8
 800b0c8:	af00      	add	r7, sp, #0
 800b0ca:	6078      	str	r0, [r7, #4]
 800b0cc:	6878      	ldr	r0, [r7, #4]
 800b0ce:	f7ff ffd1 	bl	800b074 <_ZN12FrontendHeapD1Ev>
 800b0d2:	f44f 713f 	mov.w	r1, #764	@ 0x2fc
 800b0d6:	6878      	ldr	r0, [r7, #4]
 800b0d8:	f015 ffb9 	bl	802104e <_ZdlPvj>
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	4618      	mov	r0, r3
 800b0e0:	3708      	adds	r7, #8
 800b0e2:	46bd      	mov	sp, r7
 800b0e4:	bd80      	pop	{r7, pc}
	...

0800b0e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b0e8:	b580      	push	{r7, lr}
 800b0ea:	b082      	sub	sp, #8
 800b0ec:	af00      	add	r7, sp, #0
 800b0ee:	6078      	str	r0, [r7, #4]
 800b0f0:	4a05      	ldr	r2, [pc, #20]	@ (800b108 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	601a      	str	r2, [r3, #0]
 800b0f6:	687b      	ldr	r3, [r7, #4]
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	f001 f814 	bl	800c126 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	4618      	mov	r0, r3
 800b102:	3708      	adds	r7, #8
 800b104:	46bd      	mov	sp, r7
 800b106:	bd80      	pop	{r7, pc}
 800b108:	08023814 	.word	0x08023814

0800b10c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b10c:	b580      	push	{r7, lr}
 800b10e:	b082      	sub	sp, #8
 800b110:	af00      	add	r7, sp, #0
 800b112:	6078      	str	r0, [r7, #4]
 800b114:	6878      	ldr	r0, [r7, #4]
 800b116:	f7ff ffe7 	bl	800b0e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b11a:	2114      	movs	r1, #20
 800b11c:	6878      	ldr	r0, [r7, #4]
 800b11e:	f015 ff96 	bl	802104e <_ZdlPvj>
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	4618      	mov	r0, r3
 800b126:	3708      	adds	r7, #8
 800b128:	46bd      	mov	sp, r7
 800b12a:	bd80      	pop	{r7, pc}

0800b12c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b12c:	b580      	push	{r7, lr}
 800b12e:	b082      	sub	sp, #8
 800b130:	af00      	add	r7, sp, #0
 800b132:	6078      	str	r0, [r7, #4]
 800b134:	4a05      	ldr	r2, [pc, #20]	@ (800b14c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b136:	687b      	ldr	r3, [r7, #4]
 800b138:	601a      	str	r2, [r3, #0]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	4618      	mov	r0, r3
 800b13e:	f000 fff2 	bl	800c126 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	4618      	mov	r0, r3
 800b146:	3708      	adds	r7, #8
 800b148:	46bd      	mov	sp, r7
 800b14a:	bd80      	pop	{r7, pc}
 800b14c:	08023848 	.word	0x08023848

0800b150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b150:	b580      	push	{r7, lr}
 800b152:	b082      	sub	sp, #8
 800b154:	af00      	add	r7, sp, #0
 800b156:	6078      	str	r0, [r7, #4]
 800b158:	6878      	ldr	r0, [r7, #4]
 800b15a:	f7ff ffe7 	bl	800b12c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b15e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800b162:	6878      	ldr	r0, [r7, #4]
 800b164:	f015 ff73 	bl	802104e <_ZdlPvj>
 800b168:	687b      	ldr	r3, [r7, #4]
 800b16a:	4618      	mov	r0, r3
 800b16c:	3708      	adds	r7, #8
 800b16e:	46bd      	mov	sp, r7
 800b170:	bd80      	pop	{r7, pc}
	...

0800b174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b174:	b580      	push	{r7, lr}
 800b176:	b082      	sub	sp, #8
 800b178:	af00      	add	r7, sp, #0
 800b17a:	6078      	str	r0, [r7, #4]
 800b17c:	4a05      	ldr	r2, [pc, #20]	@ (800b194 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b17e:	687b      	ldr	r3, [r7, #4]
 800b180:	601a      	str	r2, [r3, #0]
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	4618      	mov	r0, r3
 800b186:	f000 ffce 	bl	800c126 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	4618      	mov	r0, r3
 800b18e:	3708      	adds	r7, #8
 800b190:	46bd      	mov	sp, r7
 800b192:	bd80      	pop	{r7, pc}
 800b194:	0802387c 	.word	0x0802387c

0800b198 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b198:	b580      	push	{r7, lr}
 800b19a:	b082      	sub	sp, #8
 800b19c:	af00      	add	r7, sp, #0
 800b19e:	6078      	str	r0, [r7, #4]
 800b1a0:	6878      	ldr	r0, [r7, #4]
 800b1a2:	f7ff ffe7 	bl	800b174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b1a6:	2118      	movs	r1, #24
 800b1a8:	6878      	ldr	r0, [r7, #4]
 800b1aa:	f015 ff50 	bl	802104e <_ZdlPvj>
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	4618      	mov	r0, r3
 800b1b2:	3708      	adds	r7, #8
 800b1b4:	46bd      	mov	sp, r7
 800b1b6:	bd80      	pop	{r7, pc}

0800b1b8 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800b1b8:	b580      	push	{r7, lr}
 800b1ba:	b082      	sub	sp, #8
 800b1bc:	af00      	add	r7, sp, #0
 800b1be:	6078      	str	r0, [r7, #4]
 800b1c0:	4a05      	ldr	r2, [pc, #20]	@ (800b1d8 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	601a      	str	r2, [r3, #0]
 800b1c6:	687b      	ldr	r3, [r7, #4]
 800b1c8:	4618      	mov	r0, r3
 800b1ca:	f7ff fc85 	bl	800aad8 <_ZN8touchgfx3LCDD1Ev>
 800b1ce:	687b      	ldr	r3, [r7, #4]
 800b1d0:	4618      	mov	r0, r3
 800b1d2:	3708      	adds	r7, #8
 800b1d4:	46bd      	mov	sp, r7
 800b1d6:	bd80      	pop	{r7, pc}
 800b1d8:	08024258 	.word	0x08024258

0800b1dc <_ZN8touchgfx8LCD16bppD0Ev>:
 800b1dc:	b580      	push	{r7, lr}
 800b1de:	b082      	sub	sp, #8
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
 800b1e4:	6878      	ldr	r0, [r7, #4]
 800b1e6:	f7ff ffe7 	bl	800b1b8 <_ZN8touchgfx8LCD16bppD1Ev>
 800b1ea:	218c      	movs	r1, #140	@ 0x8c
 800b1ec:	6878      	ldr	r0, [r7, #4]
 800b1ee:	f015 ff2e 	bl	802104e <_ZdlPvj>
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	4618      	mov	r0, r3
 800b1f6:	3708      	adds	r7, #8
 800b1f8:	46bd      	mov	sp, r7
 800b1fa:	bd80      	pop	{r7, pc}

0800b1fc <_Z41__static_initialization_and_destruction_0ii>:
 800b1fc:	b580      	push	{r7, lr}
 800b1fe:	b084      	sub	sp, #16
 800b200:	af02      	add	r7, sp, #8
 800b202:	6078      	str	r0, [r7, #4]
 800b204:	6039      	str	r1, [r7, #0]
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	2b01      	cmp	r3, #1
 800b20a:	d118      	bne.n	800b23e <_Z41__static_initialization_and_destruction_0ii+0x42>
 800b20c:	683b      	ldr	r3, [r7, #0]
 800b20e:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b212:	4293      	cmp	r3, r2
 800b214:	d113      	bne.n	800b23e <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800b216:	4817      	ldr	r0, [pc, #92]	@ (800b274 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b218:	f7ff feda 	bl	800afd0 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800b21c:	4816      	ldr	r0, [pc, #88]	@ (800b278 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b21e:	f7ff fb6d 	bl	800a8fc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800b222:	4816      	ldr	r0, [pc, #88]	@ (800b27c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b224:	f00c fcf6 	bl	8017c14 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800b228:	23f0      	movs	r3, #240	@ 0xf0
 800b22a:	9301      	str	r3, [sp, #4]
 800b22c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800b230:	9300      	str	r3, [sp, #0]
 800b232:	4b10      	ldr	r3, [pc, #64]	@ (800b274 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b234:	4a11      	ldr	r2, [pc, #68]	@ (800b27c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b236:	4910      	ldr	r1, [pc, #64]	@ (800b278 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b238:	4811      	ldr	r0, [pc, #68]	@ (800b280 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b23a:	f7ff fe9d 	bl	800af78 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	2b00      	cmp	r3, #0
 800b242:	d113      	bne.n	800b26c <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b244:	683b      	ldr	r3, [r7, #0]
 800b246:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b24a:	4293      	cmp	r3, r2
 800b24c:	d10e      	bne.n	800b26c <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b24e:	480c      	ldr	r0, [pc, #48]	@ (800b280 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b250:	f7ff f9b2 	bl	800a5b8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800b254:	480b      	ldr	r0, [pc, #44]	@ (800b284 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b256:	f7fc fb09 	bl	800786c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800b25a:	4808      	ldr	r0, [pc, #32]	@ (800b27c <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b25c:	f7ff ffac 	bl	800b1b8 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800b260:	4805      	ldr	r0, [pc, #20]	@ (800b278 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b262:	f7ff fb9f 	bl	800a9a4 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800b266:	4803      	ldr	r0, [pc, #12]	@ (800b274 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b268:	f7fe fec4 	bl	8009ff4 <_ZN20STM32TouchControllerD1Ev>
}
 800b26c:	bf00      	nop
 800b26e:	3708      	adds	r7, #8
 800b270:	46bd      	mov	sp, r7
 800b272:	bd80      	pop	{r7, pc}
 800b274:	200008a0 	.word	0x200008a0
 800b278:	200008a4 	.word	0x200008a4
 800b27c:	200008e8 	.word	0x200008e8
 800b280:	20000978 	.word	0x20000978
 800b284:	20000010 	.word	0x20000010

0800b288 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800b288:	b480      	push	{r7}
 800b28a:	b083      	sub	sp, #12
 800b28c:	af00      	add	r7, sp, #0
 800b28e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800b290:	2301      	movs	r3, #1
    }
 800b292:	4618      	mov	r0, r3
 800b294:	370c      	adds	r7, #12
 800b296:	46bd      	mov	sp, r7
 800b298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b29c:	4770      	bx	lr

0800b29e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800b29e:	b480      	push	{r7}
 800b2a0:	b083      	sub	sp, #12
 800b2a2:	af00      	add	r7, sp, #0
 800b2a4:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800b2a6:	230c      	movs	r3, #12
    }
 800b2a8:	4618      	mov	r0, r3
 800b2aa:	370c      	adds	r7, #12
 800b2ac:	46bd      	mov	sp, r7
 800b2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b2:	4770      	bx	lr

0800b2b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800b2b4:	b480      	push	{r7}
 800b2b6:	b083      	sub	sp, #12
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
 800b2bc:	460b      	mov	r3, r1
 800b2be:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b2c0:	887a      	ldrh	r2, [r7, #2]
 800b2c2:	4613      	mov	r3, r2
 800b2c4:	005b      	lsls	r3, r3, #1
 800b2c6:	4413      	add	r3, r2
 800b2c8:	009b      	lsls	r3, r3, #2
 800b2ca:	3308      	adds	r3, #8
 800b2cc:	687a      	ldr	r2, [r7, #4]
 800b2ce:	4413      	add	r3, r2
    }
 800b2d0:	4618      	mov	r0, r3
 800b2d2:	370c      	adds	r7, #12
 800b2d4:	46bd      	mov	sp, r7
 800b2d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2da:	4770      	bx	lr

0800b2dc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800b2dc:	b480      	push	{r7}
 800b2de:	b083      	sub	sp, #12
 800b2e0:	af00      	add	r7, sp, #0
 800b2e2:	6078      	str	r0, [r7, #4]
 800b2e4:	460b      	mov	r3, r1
 800b2e6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b2e8:	887a      	ldrh	r2, [r7, #2]
 800b2ea:	4613      	mov	r3, r2
 800b2ec:	005b      	lsls	r3, r3, #1
 800b2ee:	4413      	add	r3, r2
 800b2f0:	009b      	lsls	r3, r3, #2
 800b2f2:	3308      	adds	r3, #8
 800b2f4:	687a      	ldr	r2, [r7, #4]
 800b2f6:	4413      	add	r3, r2
    }
 800b2f8:	4618      	mov	r0, r3
 800b2fa:	370c      	adds	r7, #12
 800b2fc:	46bd      	mov	sp, r7
 800b2fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b302:	4770      	bx	lr

0800b304 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b304:	b480      	push	{r7}
 800b306:	b083      	sub	sp, #12
 800b308:	af00      	add	r7, sp, #0
 800b30a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b30c:	2301      	movs	r3, #1
    }
 800b30e:	4618      	mov	r0, r3
 800b310:	370c      	adds	r7, #12
 800b312:	46bd      	mov	sp, r7
 800b314:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b318:	4770      	bx	lr

0800b31a <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b31a:	b480      	push	{r7}
 800b31c:	b083      	sub	sp, #12
 800b31e:	af00      	add	r7, sp, #0
 800b320:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b322:	f44f 73aa 	mov.w	r3, #340	@ 0x154
    }
 800b326:	4618      	mov	r0, r3
 800b328:	370c      	adds	r7, #12
 800b32a:	46bd      	mov	sp, r7
 800b32c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b330:	4770      	bx	lr

0800b332 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b332:	b480      	push	{r7}
 800b334:	b083      	sub	sp, #12
 800b336:	af00      	add	r7, sp, #0
 800b338:	6078      	str	r0, [r7, #4]
 800b33a:	460b      	mov	r3, r1
 800b33c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b33e:	887b      	ldrh	r3, [r7, #2]
 800b340:	f44f 72aa 	mov.w	r2, #340	@ 0x154
 800b344:	fb02 f303 	mul.w	r3, r2, r3
 800b348:	3308      	adds	r3, #8
 800b34a:	687a      	ldr	r2, [r7, #4]
 800b34c:	4413      	add	r3, r2
    }
 800b34e:	4618      	mov	r0, r3
 800b350:	370c      	adds	r7, #12
 800b352:	46bd      	mov	sp, r7
 800b354:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b358:	4770      	bx	lr

0800b35a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b35a:	b480      	push	{r7}
 800b35c:	b083      	sub	sp, #12
 800b35e:	af00      	add	r7, sp, #0
 800b360:	6078      	str	r0, [r7, #4]
 800b362:	460b      	mov	r3, r1
 800b364:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b366:	887b      	ldrh	r3, [r7, #2]
 800b368:	f44f 72aa 	mov.w	r2, #340	@ 0x154
 800b36c:	fb02 f303 	mul.w	r3, r2, r3
 800b370:	3308      	adds	r3, #8
 800b372:	687a      	ldr	r2, [r7, #4]
 800b374:	4413      	add	r3, r2
    }
 800b376:	4618      	mov	r0, r3
 800b378:	370c      	adds	r7, #12
 800b37a:	46bd      	mov	sp, r7
 800b37c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b380:	4770      	bx	lr

0800b382 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b382:	b480      	push	{r7}
 800b384:	b083      	sub	sp, #12
 800b386:	af00      	add	r7, sp, #0
 800b388:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b38a:	2301      	movs	r3, #1
    }
 800b38c:	4618      	mov	r0, r3
 800b38e:	370c      	adds	r7, #12
 800b390:	46bd      	mov	sp, r7
 800b392:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b396:	4770      	bx	lr

0800b398 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b398:	b480      	push	{r7}
 800b39a:	b083      	sub	sp, #12
 800b39c:	af00      	add	r7, sp, #0
 800b39e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b3a0:	2310      	movs	r3, #16
    }
 800b3a2:	4618      	mov	r0, r3
 800b3a4:	370c      	adds	r7, #12
 800b3a6:	46bd      	mov	sp, r7
 800b3a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ac:	4770      	bx	lr

0800b3ae <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b3ae:	b480      	push	{r7}
 800b3b0:	b083      	sub	sp, #12
 800b3b2:	af00      	add	r7, sp, #0
 800b3b4:	6078      	str	r0, [r7, #4]
 800b3b6:	460b      	mov	r3, r1
 800b3b8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b3ba:	887b      	ldrh	r3, [r7, #2]
 800b3bc:	011b      	lsls	r3, r3, #4
 800b3be:	3308      	adds	r3, #8
 800b3c0:	687a      	ldr	r2, [r7, #4]
 800b3c2:	4413      	add	r3, r2
    }
 800b3c4:	4618      	mov	r0, r3
 800b3c6:	370c      	adds	r7, #12
 800b3c8:	46bd      	mov	sp, r7
 800b3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ce:	4770      	bx	lr

0800b3d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b3d0:	b480      	push	{r7}
 800b3d2:	b083      	sub	sp, #12
 800b3d4:	af00      	add	r7, sp, #0
 800b3d6:	6078      	str	r0, [r7, #4]
 800b3d8:	460b      	mov	r3, r1
 800b3da:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b3dc:	887b      	ldrh	r3, [r7, #2]
 800b3de:	011b      	lsls	r3, r3, #4
 800b3e0:	3308      	adds	r3, #8
 800b3e2:	687a      	ldr	r2, [r7, #4]
 800b3e4:	4413      	add	r3, r2
    }
 800b3e6:	4618      	mov	r0, r3
 800b3e8:	370c      	adds	r7, #12
 800b3ea:	46bd      	mov	sp, r7
 800b3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3f0:	4770      	bx	lr

0800b3f2 <_GLOBAL__sub_I_touchgfx_init>:
 800b3f2:	b580      	push	{r7, lr}
 800b3f4:	af00      	add	r7, sp, #0
 800b3f6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b3fa:	2001      	movs	r0, #1
 800b3fc:	f7ff fefe 	bl	800b1fc <_Z41__static_initialization_and_destruction_0ii>
 800b400:	bd80      	pop	{r7, pc}

0800b402 <_GLOBAL__sub_D_touchgfx_init>:
 800b402:	b580      	push	{r7, lr}
 800b404:	af00      	add	r7, sp, #0
 800b406:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b40a:	2000      	movs	r0, #0
 800b40c:	f7ff fef6 	bl	800b1fc <_Z41__static_initialization_and_destruction_0ii>
 800b410:	bd80      	pop	{r7, pc}

0800b412 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800b412:	b480      	push	{r7}
 800b414:	b083      	sub	sp, #12
 800b416:	af00      	add	r7, sp, #0
 800b418:	6078      	str	r0, [r7, #4]
        return color;
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	681b      	ldr	r3, [r3, #0]
    }
 800b41e:	4618      	mov	r0, r3
 800b420:	370c      	adds	r7, #12
 800b422:	46bd      	mov	sp, r7
 800b424:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b428:	4770      	bx	lr
	...

0800b42c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800b42c:	b480      	push	{r7}
 800b42e:	b083      	sub	sp, #12
 800b430:	af00      	add	r7, sp, #0
 800b432:	6078      	str	r0, [r7, #4]
    {
 800b434:	4a04      	ldr	r2, [pc, #16]	@ (800b448 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	601a      	str	r2, [r3, #0]
    }
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	4618      	mov	r0, r3
 800b43e:	370c      	adds	r7, #12
 800b440:	46bd      	mov	sp, r7
 800b442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b446:	4770      	bx	lr
 800b448:	080239ec 	.word	0x080239ec

0800b44c <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800b44c:	b580      	push	{r7, lr}
 800b44e:	b082      	sub	sp, #8
 800b450:	af00      	add	r7, sp, #0
 800b452:	6078      	str	r0, [r7, #4]
    }
 800b454:	6878      	ldr	r0, [r7, #4]
 800b456:	f7ff ffe9 	bl	800b42c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800b45a:	2104      	movs	r1, #4
 800b45c:	6878      	ldr	r0, [r7, #4]
 800b45e:	f015 fdf6 	bl	802104e <_ZdlPvj>
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	4618      	mov	r0, r3
 800b466:	3708      	adds	r7, #8
 800b468:	46bd      	mov	sp, r7
 800b46a:	bd80      	pop	{r7, pc}

0800b46c <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800b46c:	b480      	push	{r7}
 800b46e:	b083      	sub	sp, #12
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800b47a:	3301      	adds	r3, #1
 800b47c:	b2da      	uxtb	r2, r3
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	2200      	movs	r2, #0
 800b488:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
    }
 800b48c:	bf00      	nop
 800b48e:	370c      	adds	r7, #12
 800b490:	46bd      	mov	sp, r7
 800b492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b496:	4770      	bx	lr

0800b498 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800b498:	b480      	push	{r7}
 800b49a:	b083      	sub	sp, #12
 800b49c:	af00      	add	r7, sp, #0
 800b49e:	6078      	str	r0, [r7, #4]
 800b4a0:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	683a      	ldr	r2, [r7, #0]
 800b4a6:	619a      	str	r2, [r3, #24]
    }
 800b4a8:	bf00      	nop
 800b4aa:	370c      	adds	r7, #12
 800b4ac:	46bd      	mov	sp, r7
 800b4ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4b2:	4770      	bx	lr

0800b4b4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800b4b4:	b480      	push	{r7}
 800b4b6:	b083      	sub	sp, #12
 800b4b8:	af00      	add	r7, sp, #0
 800b4ba:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	699b      	ldr	r3, [r3, #24]
    }
 800b4c0:	4618      	mov	r0, r3
 800b4c2:	370c      	adds	r7, #12
 800b4c4:	46bd      	mov	sp, r7
 800b4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4ca:	4770      	bx	lr

0800b4cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800b4cc:	b580      	push	{r7, lr}
 800b4ce:	b082      	sub	sp, #8
 800b4d0:	af00      	add	r7, sp, #0
 800b4d2:	6078      	str	r0, [r7, #4]
 800b4d4:	460b      	mov	r3, r1
 800b4d6:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800b4d8:	78fb      	ldrb	r3, [r7, #3]
 800b4da:	2b00      	cmp	r3, #0
 800b4dc:	d002      	beq.n	800b4e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800b4de:	78fb      	ldrb	r3, [r7, #3]
 800b4e0:	2b03      	cmp	r3, #3
 800b4e2:	d105      	bne.n	800b4f0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	78fa      	ldrb	r2, [r7, #3]
 800b4e8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800b4ec:	2301      	movs	r3, #1
 800b4ee:	e04a      	b.n	800b586 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800b4f0:	78fb      	ldrb	r3, [r7, #3]
 800b4f2:	2b01      	cmp	r3, #1
 800b4f4:	d123      	bne.n	800b53e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b4fa:	2b00      	cmp	r3, #0
 800b4fc:	d014      	beq.n	800b528 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	33a8      	adds	r3, #168	@ 0xa8
 800b504:	681b      	ldr	r3, [r3, #0]
 800b506:	6878      	ldr	r0, [r7, #4]
 800b508:	4798      	blx	r3
 800b50a:	4603      	mov	r3, r0
 800b50c:	461a      	mov	r2, r3
 800b50e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b512:	429a      	cmp	r2, r3
 800b514:	d008      	beq.n	800b528 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b516:	4b1e      	ldr	r3, [pc, #120]	@ (800b590 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xc4>)
 800b518:	781b      	ldrb	r3, [r3, #0]
 800b51a:	f083 0301 	eor.w	r3, r3, #1
 800b51e:	b2db      	uxtb	r3, r3
 800b520:	2b00      	cmp	r3, #0
 800b522:	d001      	beq.n	800b528 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b524:	2301      	movs	r3, #1
 800b526:	e000      	b.n	800b52a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800b528:	2300      	movs	r3, #0
 800b52a:	2b00      	cmp	r3, #0
 800b52c:	d005      	beq.n	800b53a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	78fa      	ldrb	r2, [r7, #3]
 800b532:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800b536:	2301      	movs	r3, #1
 800b538:	e025      	b.n	800b586 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
            return false;
 800b53a:	2300      	movs	r3, #0
 800b53c:	e023      	b.n	800b586 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        if (s == REFRESH_STRATEGY_PARTIAL_BUFFER_TFT_CTRL)
 800b53e:	78fb      	ldrb	r3, [r7, #3]
 800b540:	2b02      	cmp	r3, #2
 800b542:	d11f      	bne.n	800b584 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xb8>
            if (getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	681b      	ldr	r3, [r3, #0]
 800b548:	33a8      	adds	r3, #168	@ 0xa8
 800b54a:	681b      	ldr	r3, [r3, #0]
 800b54c:	6878      	ldr	r0, [r7, #4]
 800b54e:	4798      	blx	r3
 800b550:	4603      	mov	r3, r0
 800b552:	461a      	mov	r2, r3
 800b554:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b558:	429a      	cmp	r2, r3
 800b55a:	d008      	beq.n	800b56e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa2>
 800b55c:	4b0c      	ldr	r3, [pc, #48]	@ (800b590 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xc4>)
 800b55e:	781b      	ldrb	r3, [r3, #0]
 800b560:	f083 0301 	eor.w	r3, r3, #1
 800b564:	b2db      	uxtb	r3, r3
 800b566:	2b00      	cmp	r3, #0
 800b568:	d001      	beq.n	800b56e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa2>
 800b56a:	2301      	movs	r3, #1
 800b56c:	e000      	b.n	800b570 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa4>
 800b56e:	2300      	movs	r3, #0
 800b570:	2b00      	cmp	r3, #0
 800b572:	d005      	beq.n	800b580 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xb4>
                refreshStrategy = s;
 800b574:	687b      	ldr	r3, [r7, #4]
 800b576:	78fa      	ldrb	r2, [r7, #3]
 800b578:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800b57c:	2301      	movs	r3, #1
 800b57e:	e002      	b.n	800b586 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
            return false;
 800b580:	2300      	movs	r3, #0
 800b582:	e000      	b.n	800b586 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        return false;
 800b584:	2300      	movs	r3, #0
    }
 800b586:	4618      	mov	r0, r3
 800b588:	3708      	adds	r7, #8
 800b58a:	46bd      	mov	sp, r7
 800b58c:	bd80      	pop	{r7, pc}
 800b58e:	bf00      	nop
 800b590:	2000222e 	.word	0x2000222e

0800b594 <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800b594:	b480      	push	{r7}
 800b596:	af00      	add	r7, sp, #0
}
 800b598:	bf00      	nop
 800b59a:	46bd      	mov	sp, r7
 800b59c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5a0:	4770      	bx	lr

0800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800b5a2:	b480      	push	{r7}
 800b5a4:	b083      	sub	sp, #12
 800b5a6:	af00      	add	r7, sp, #0
 800b5a8:	6078      	str	r0, [r7, #4]
 800b5aa:	6039      	str	r1, [r7, #0]
}
 800b5ac:	bf00      	nop
 800b5ae:	370c      	adds	r7, #12
 800b5b0:	46bd      	mov	sp, r7
 800b5b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5b6:	4770      	bx	lr

0800b5b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800b5b8:	b480      	push	{r7}
 800b5ba:	b08d      	sub	sp, #52	@ 0x34
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	60f8      	str	r0, [r7, #12]
 800b5c0:	60b9      	str	r1, [r7, #8]
 800b5c2:	607a      	str	r2, [r7, #4]
 800b5c4:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800b5c6:	68fb      	ldr	r3, [r7, #12]
 800b5c8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800b5ca:	68bb      	ldr	r3, [r7, #8]
 800b5cc:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	005b      	lsls	r3, r3, #1
 800b5d2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b5d4:	4413      	add	r3, r2
 800b5d6:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800b5d8:	78fb      	ldrb	r3, [r7, #3]
 800b5da:	2bff      	cmp	r3, #255	@ 0xff
 800b5dc:	d112      	bne.n	800b604 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800b5de:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b5e0:	1c9a      	adds	r2, r3, #2
 800b5e2:	62ba      	str	r2, [r7, #40]	@ 0x28
 800b5e4:	881a      	ldrh	r2, [r3, #0]
 800b5e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b5e8:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800b5ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b5ec:	3302      	adds	r3, #2
 800b5ee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b5f0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b5f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b5f4:	429a      	cmp	r2, r3
 800b5f6:	bf34      	ite	cc
 800b5f8:	2301      	movcc	r3, #1
 800b5fa:	2300      	movcs	r3, #0
 800b5fc:	b2db      	uxtb	r3, r3
 800b5fe:	2b00      	cmp	r3, #0
 800b600:	d1ed      	bne.n	800b5de <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800b602:	e079      	b.n	800b6f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800b604:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b606:	1c9a      	adds	r2, r3, #2
 800b608:	62ba      	str	r2, [r7, #40]	@ 0x28
 800b60a:	881a      	ldrh	r2, [r3, #0]
 800b60c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b60e:	881b      	ldrh	r3, [r3, #0]
 800b610:	847a      	strh	r2, [r7, #34]	@ 0x22
 800b612:	843b      	strh	r3, [r7, #32]
 800b614:	78fb      	ldrb	r3, [r7, #3]
 800b616:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800b618:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800b61a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b61e:	f023 0307 	bic.w	r3, r3, #7
 800b622:	b299      	uxth	r1, r3
 800b624:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800b626:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b62a:	b29a      	uxth	r2, r3
 800b62c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800b62e:	f003 031f 	and.w	r3, r3, #31
 800b632:	b29b      	uxth	r3, r3
 800b634:	83b9      	strh	r1, [r7, #28]
 800b636:	837a      	strh	r2, [r7, #26]
 800b638:	833b      	strh	r3, [r7, #24]
 800b63a:	8c3b      	ldrh	r3, [r7, #32]
 800b63c:	82fb      	strh	r3, [r7, #22]
 800b63e:	7ffb      	ldrb	r3, [r7, #31]
 800b640:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800b642:	7d7b      	ldrb	r3, [r7, #21]
 800b644:	43db      	mvns	r3, r3
 800b646:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800b648:	8bbb      	ldrh	r3, [r7, #28]
 800b64a:	7d7a      	ldrb	r2, [r7, #21]
 800b64c:	fb03 f202 	mul.w	r2, r3, r2
 800b650:	8afb      	ldrh	r3, [r7, #22]
 800b652:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800b656:	7d39      	ldrb	r1, [r7, #20]
 800b658:	fb01 f303 	mul.w	r3, r1, r3
 800b65c:	4413      	add	r3, r2
 800b65e:	4a29      	ldr	r2, [pc, #164]	@ (800b704 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800b660:	fb82 1203 	smull	r1, r2, r2, r3
 800b664:	441a      	add	r2, r3
 800b666:	11d2      	asrs	r2, r2, #7
 800b668:	17db      	asrs	r3, r3, #31
 800b66a:	1ad3      	subs	r3, r2, r3
 800b66c:	b21b      	sxth	r3, r3
 800b66e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b672:	f023 0307 	bic.w	r3, r3, #7
 800b676:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800b678:	8b7b      	ldrh	r3, [r7, #26]
 800b67a:	7d79      	ldrb	r1, [r7, #21]
 800b67c:	fb03 f101 	mul.w	r1, r3, r1
 800b680:	8afb      	ldrh	r3, [r7, #22]
 800b682:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b686:	7d38      	ldrb	r0, [r7, #20]
 800b688:	fb00 f303 	mul.w	r3, r0, r3
 800b68c:	440b      	add	r3, r1
 800b68e:	491d      	ldr	r1, [pc, #116]	@ (800b704 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800b690:	fb81 0103 	smull	r0, r1, r1, r3
 800b694:	4419      	add	r1, r3
 800b696:	11c9      	asrs	r1, r1, #7
 800b698:	17db      	asrs	r3, r3, #31
 800b69a:	1acb      	subs	r3, r1, r3
 800b69c:	b21b      	sxth	r3, r3
 800b69e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b6a2:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800b6a4:	4313      	orrs	r3, r2
 800b6a6:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800b6a8:	8b3b      	ldrh	r3, [r7, #24]
 800b6aa:	7d79      	ldrb	r1, [r7, #21]
 800b6ac:	fb03 f101 	mul.w	r1, r3, r1
 800b6b0:	8afb      	ldrh	r3, [r7, #22]
 800b6b2:	f003 031f 	and.w	r3, r3, #31
 800b6b6:	7d38      	ldrb	r0, [r7, #20]
 800b6b8:	fb00 f303 	mul.w	r3, r0, r3
 800b6bc:	440b      	add	r3, r1
 800b6be:	4911      	ldr	r1, [pc, #68]	@ (800b704 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800b6c0:	fb81 0103 	smull	r0, r1, r1, r3
 800b6c4:	4419      	add	r1, r3
 800b6c6:	11c9      	asrs	r1, r1, #7
 800b6c8:	17db      	asrs	r3, r3, #31
 800b6ca:	1acb      	subs	r3, r1, r3
 800b6cc:	b21b      	sxth	r3, r3
 800b6ce:	f003 031f 	and.w	r3, r3, #31
 800b6d2:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800b6d4:	4313      	orrs	r3, r2
 800b6d6:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800b6d8:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800b6da:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800b6dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b6de:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800b6e0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b6e2:	3302      	adds	r3, #2
 800b6e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b6e6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b6e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b6ea:	429a      	cmp	r2, r3
 800b6ec:	bf34      	ite	cc
 800b6ee:	2301      	movcc	r3, #1
 800b6f0:	2300      	movcs	r3, #0
 800b6f2:	b2db      	uxtb	r3, r3
 800b6f4:	2b00      	cmp	r3, #0
 800b6f6:	d185      	bne.n	800b604 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800b6f8:	bf00      	nop
 800b6fa:	3734      	adds	r7, #52	@ 0x34
 800b6fc:	46bd      	mov	sp, r7
 800b6fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b702:	4770      	bx	lr
 800b704:	80808081 	.word	0x80808081

0800b708 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800b708:	b590      	push	{r4, r7, lr}
 800b70a:	b093      	sub	sp, #76	@ 0x4c
 800b70c:	af00      	add	r7, sp, #0
 800b70e:	60f8      	str	r0, [r7, #12]
 800b710:	60b9      	str	r1, [r7, #8]
 800b712:	607a      	str	r2, [r7, #4]
 800b714:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800b716:	68fb      	ldr	r3, [r7, #12]
 800b718:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800b71a:	68bb      	ldr	r3, [r7, #8]
 800b71c:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	005b      	lsls	r3, r3, #1
 800b722:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b724:	4413      	add	r3, r2
 800b726:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800b728:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b72a:	681b      	ldr	r3, [r3, #0]
 800b72c:	0e1b      	lsrs	r3, r3, #24
 800b72e:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800b732:	78fb      	ldrb	r3, [r7, #3]
 800b734:	b29a      	uxth	r2, r3
 800b736:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800b73a:	b29b      	uxth	r3, r3
 800b73c:	fb12 f303 	smulbb	r3, r2, r3
 800b740:	b29b      	uxth	r3, r3
 800b742:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800b744:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800b746:	3301      	adds	r3, #1
 800b748:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800b74a:	0a12      	lsrs	r2, r2, #8
 800b74c:	b292      	uxth	r2, r2
 800b74e:	4413      	add	r3, r2
 800b750:	121b      	asrs	r3, r3, #8
 800b752:	b2db      	uxtb	r3, r3
 800b754:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800b758:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b75c:	2bff      	cmp	r3, #255	@ 0xff
 800b75e:	d133      	bne.n	800b7c8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800b760:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b762:	681a      	ldr	r2, [r3, #0]
 800b764:	f107 0318 	add.w	r3, r7, #24
 800b768:	4611      	mov	r1, r2
 800b76a:	4618      	mov	r0, r3
 800b76c:	f7fd f8d2 	bl	8008914 <_ZN8touchgfx9colortypeC1Em>
 800b770:	69bb      	ldr	r3, [r7, #24]
 800b772:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800b774:	f107 0314 	add.w	r3, r7, #20
 800b778:	4618      	mov	r0, r3
 800b77a:	f7ff fe4a 	bl	800b412 <_ZNK8touchgfx9colortypecvmEv>
 800b77e:	4603      	mov	r3, r0
 800b780:	0a1b      	lsrs	r3, r3, #8
 800b782:	b29b      	uxth	r3, r3
 800b784:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b788:	f023 0307 	bic.w	r3, r3, #7
 800b78c:	b29c      	uxth	r4, r3
 800b78e:	f107 0314 	add.w	r3, r7, #20
 800b792:	4618      	mov	r0, r3
 800b794:	f7ff fe3d 	bl	800b412 <_ZNK8touchgfx9colortypecvmEv>
 800b798:	4603      	mov	r3, r0
 800b79a:	095b      	lsrs	r3, r3, #5
 800b79c:	b29b      	uxth	r3, r3
 800b79e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b7a2:	b29b      	uxth	r3, r3
 800b7a4:	4323      	orrs	r3, r4
 800b7a6:	b29c      	uxth	r4, r3
 800b7a8:	f107 0314 	add.w	r3, r7, #20
 800b7ac:	4618      	mov	r0, r3
 800b7ae:	f7ff fe30 	bl	800b412 <_ZNK8touchgfx9colortypecvmEv>
 800b7b2:	4603      	mov	r3, r0
 800b7b4:	08db      	lsrs	r3, r3, #3
 800b7b6:	b29b      	uxth	r3, r3
 800b7b8:	f003 031f 	and.w	r3, r3, #31
 800b7bc:	b29b      	uxth	r3, r3
 800b7be:	4323      	orrs	r3, r4
 800b7c0:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800b7c2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b7c4:	801a      	strh	r2, [r3, #0]
 800b7c6:	e0a9      	b.n	800b91c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800b7c8:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b7cc:	2b00      	cmp	r3, #0
 800b7ce:	f000 80a5 	beq.w	800b91c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800b7d2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b7d4:	681b      	ldr	r3, [r3, #0]
 800b7d6:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800b7d8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b7da:	0c1b      	lsrs	r3, r3, #16
 800b7dc:	b2d8      	uxtb	r0, r3
 800b7de:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b7e0:	0a1b      	lsrs	r3, r3, #8
 800b7e2:	b2d9      	uxtb	r1, r3
 800b7e4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b7e6:	b2da      	uxtb	r2, r3
 800b7e8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b7ea:	881b      	ldrh	r3, [r3, #0]
 800b7ec:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800b7f0:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800b7f4:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800b7f8:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800b7fa:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800b7fe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800b802:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800b806:	43db      	mvns	r3, r3
 800b808:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800b80c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b80e:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800b810:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800b812:	0a1b      	lsrs	r3, r3, #8
 800b814:	b29b      	uxth	r3, r3
 800b816:	b2db      	uxtb	r3, r3
 800b818:	f023 0307 	bic.w	r3, r3, #7
 800b81c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800b820:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b824:	095b      	lsrs	r3, r3, #5
 800b826:	b2da      	uxtb	r2, r3
 800b828:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800b82c:	4313      	orrs	r3, r2
 800b82e:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800b830:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800b834:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b836:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800b838:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800b83a:	08db      	lsrs	r3, r3, #3
 800b83c:	b29b      	uxth	r3, r3
 800b83e:	b2db      	uxtb	r3, r3
 800b840:	f023 0303 	bic.w	r3, r3, #3
 800b844:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800b848:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b84c:	099b      	lsrs	r3, r3, #6
 800b84e:	b2da      	uxtb	r2, r3
 800b850:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800b854:	4313      	orrs	r3, r2
 800b856:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800b858:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800b85c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800b85e:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800b860:	8c3b      	ldrh	r3, [r7, #32]
 800b862:	b2db      	uxtb	r3, r3
 800b864:	00db      	lsls	r3, r3, #3
 800b866:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800b868:	7ffb      	ldrb	r3, [r7, #31]
 800b86a:	095b      	lsrs	r3, r3, #5
 800b86c:	b2da      	uxtb	r2, r3
 800b86e:	7ffb      	ldrb	r3, [r7, #31]
 800b870:	4313      	orrs	r3, r2
 800b872:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800b874:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800b876:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800b87a:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800b87e:	fb03 f202 	mul.w	r2, r3, r2
 800b882:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800b886:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800b88a:	fb01 f303 	mul.w	r3, r1, r3
 800b88e:	4413      	add	r3, r2
 800b890:	4a2d      	ldr	r2, [pc, #180]	@ (800b948 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b892:	fb82 1203 	smull	r1, r2, r2, r3
 800b896:	441a      	add	r2, r3
 800b898:	11d2      	asrs	r2, r2, #7
 800b89a:	17db      	asrs	r3, r3, #31
 800b89c:	1ad3      	subs	r3, r2, r3
 800b89e:	021b      	lsls	r3, r3, #8
 800b8a0:	b21b      	sxth	r3, r3
 800b8a2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800b8a6:	f023 0307 	bic.w	r3, r3, #7
 800b8aa:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800b8ac:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800b8b0:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800b8b4:	fb03 f101 	mul.w	r1, r3, r1
 800b8b8:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800b8bc:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800b8c0:	fb00 f303 	mul.w	r3, r0, r3
 800b8c4:	440b      	add	r3, r1
 800b8c6:	4920      	ldr	r1, [pc, #128]	@ (800b948 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b8c8:	fb81 0103 	smull	r0, r1, r1, r3
 800b8cc:	4419      	add	r1, r3
 800b8ce:	11c9      	asrs	r1, r1, #7
 800b8d0:	17db      	asrs	r3, r3, #31
 800b8d2:	1acb      	subs	r3, r1, r3
 800b8d4:	00db      	lsls	r3, r3, #3
 800b8d6:	b21b      	sxth	r3, r3
 800b8d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b8dc:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800b8de:	4313      	orrs	r3, r2
 800b8e0:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800b8e2:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800b8e6:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800b8ea:	fb03 f101 	mul.w	r1, r3, r1
 800b8ee:	7fbb      	ldrb	r3, [r7, #30]
 800b8f0:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800b8f4:	fb00 f303 	mul.w	r3, r0, r3
 800b8f8:	440b      	add	r3, r1
 800b8fa:	4913      	ldr	r1, [pc, #76]	@ (800b948 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800b8fc:	fb81 0103 	smull	r0, r1, r1, r3
 800b900:	4419      	add	r1, r3
 800b902:	11c9      	asrs	r1, r1, #7
 800b904:	17db      	asrs	r3, r3, #31
 800b906:	1acb      	subs	r3, r1, r3
 800b908:	10db      	asrs	r3, r3, #3
 800b90a:	b21b      	sxth	r3, r3
 800b90c:	f003 031f 	and.w	r3, r3, #31
 800b910:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800b912:	4313      	orrs	r3, r2
 800b914:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800b916:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800b918:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b91a:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800b91c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b91e:	3304      	adds	r3, #4
 800b920:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800b922:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b924:	3302      	adds	r3, #2
 800b926:	647b      	str	r3, [r7, #68]	@ 0x44
 800b928:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b92a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b92c:	429a      	cmp	r2, r3
 800b92e:	bf34      	ite	cc
 800b930:	2301      	movcc	r3, #1
 800b932:	2300      	movcs	r3, #0
 800b934:	b2db      	uxtb	r3, r3
 800b936:	2b00      	cmp	r3, #0
 800b938:	f47f aef6 	bne.w	800b728 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800b93c:	bf00      	nop
 800b93e:	bf00      	nop
 800b940:	374c      	adds	r7, #76	@ 0x4c
 800b942:	46bd      	mov	sp, r7
 800b944:	bd90      	pop	{r4, r7, pc}
 800b946:	bf00      	nop
 800b948:	80808081 	.word	0x80808081

0800b94c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800b94c:	b5b0      	push	{r4, r5, r7, lr}
 800b94e:	b082      	sub	sp, #8
 800b950:	af00      	add	r7, sp, #0
 800b952:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	4618      	mov	r0, r3
 800b958:	f000 fed9 	bl	800c70e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800b95c:	687d      	ldr	r5, [r7, #4]
 800b95e:	687b      	ldr	r3, [r7, #4]
 800b960:	681b      	ldr	r3, [r3, #0]
 800b962:	3368      	adds	r3, #104	@ 0x68
 800b964:	681c      	ldr	r4, [r3, #0]
 800b966:	f003 feb1 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 800b96a:	4603      	mov	r3, r0
 800b96c:	4619      	mov	r1, r3
 800b96e:	4628      	mov	r0, r5
 800b970:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800b972:	687b      	ldr	r3, [r7, #4]
 800b974:	681b      	ldr	r3, [r3, #0]
 800b976:	3384      	adds	r3, #132	@ 0x84
 800b978:	681b      	ldr	r3, [r3, #0]
 800b97a:	6878      	ldr	r0, [r7, #4]
 800b97c:	4798      	blx	r3
    enableInterrupts();
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	681b      	ldr	r3, [r3, #0]
 800b982:	337c      	adds	r3, #124	@ 0x7c
 800b984:	681b      	ldr	r3, [r3, #0]
 800b986:	6878      	ldr	r0, [r7, #4]
 800b988:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	490a      	ldr	r1, [pc, #40]	@ (800b9b8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
 800b98e:	4618      	mov	r0, r3
 800b990:	f7ff fd82 	bl	800b498 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    if (!setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER))
 800b994:	687b      	ldr	r3, [r7, #4]
 800b996:	2103      	movs	r1, #3
 800b998:	4618      	mov	r0, r3
 800b99a:	f7ff fd97 	bl	800b4cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
 800b99e:	4603      	mov	r3, r0
 800b9a0:	f083 0301 	eor.w	r3, r3, #1
 800b9a4:	b2db      	uxtb	r3, r3
 800b9a6:	2b00      	cmp	r3, #0
 800b9a8:	d001      	beq.n	800b9ae <_ZN20TouchGFXGeneratedHAL10initializeEv+0x62>
    {
        while (1);
 800b9aa:	bf00      	nop
 800b9ac:	e7fd      	b.n	800b9aa <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
    }
}
 800b9ae:	bf00      	nop
 800b9b0:	3708      	adds	r7, #8
 800b9b2:	46bd      	mov	sp, r7
 800b9b4:	bdb0      	pop	{r4, r5, r7, pc}
 800b9b6:	bf00      	nop
 800b9b8:	200009fc 	.word	0x200009fc

0800b9bc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800b9bc:	b480      	push	{r7}
 800b9be:	b083      	sub	sp, #12
 800b9c0:	af00      	add	r7, sp, #0
 800b9c2:	6078      	str	r0, [r7, #4]
}
 800b9c4:	bf00      	nop
 800b9c6:	370c      	adds	r7, #12
 800b9c8:	46bd      	mov	sp, r7
 800b9ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9ce:	4770      	bx	lr

0800b9d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800b9d0:	b480      	push	{r7}
 800b9d2:	b083      	sub	sp, #12
 800b9d4:	af00      	add	r7, sp, #0
 800b9d6:	6078      	str	r0, [r7, #4]
}
 800b9d8:	bf00      	nop
 800b9da:	370c      	adds	r7, #12
 800b9dc:	46bd      	mov	sp, r7
 800b9de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9e2:	4770      	bx	lr

0800b9e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800b9e4:	b480      	push	{r7}
 800b9e6:	b083      	sub	sp, #12
 800b9e8:	af00      	add	r7, sp, #0
 800b9ea:	6078      	str	r0, [r7, #4]
}
 800b9ec:	bf00      	nop
 800b9ee:	370c      	adds	r7, #12
 800b9f0:	46bd      	mov	sp, r7
 800b9f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f6:	4770      	bx	lr

0800b9f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800b9f8:	b480      	push	{r7}
 800b9fa:	b083      	sub	sp, #12
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	6078      	str	r0, [r7, #4]
}
 800ba00:	bf00      	nop
 800ba02:	370c      	adds	r7, #12
 800ba04:	46bd      	mov	sp, r7
 800ba06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba0a:	4770      	bx	lr

0800ba0c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800ba0c:	b580      	push	{r7, lr}
 800ba0e:	b082      	sub	sp, #8
 800ba10:	af00      	add	r7, sp, #0
 800ba12:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800ba14:	687b      	ldr	r3, [r7, #4]
 800ba16:	4618      	mov	r0, r3
 800ba18:	f000 fe60 	bl	800c6dc <_ZN8touchgfx3HAL10beginFrameEv>
 800ba1c:	4603      	mov	r3, r0
}
 800ba1e:	4618      	mov	r0, r3
 800ba20:	3708      	adds	r7, #8
 800ba22:	46bd      	mov	sp, r7
 800ba24:	bd80      	pop	{r7, pc}

0800ba26 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800ba26:	b580      	push	{r7, lr}
 800ba28:	b082      	sub	sp, #8
 800ba2a:	af00      	add	r7, sp, #0
 800ba2c:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800ba2e:	bf00      	nop
 800ba30:	f7fe fde4 	bl	800a5fc <touchgfxDisplayDriverTransmitActive>
 800ba34:	4603      	mov	r3, r0
 800ba36:	2b00      	cmp	r3, #0
 800ba38:	bf14      	ite	ne
 800ba3a:	2301      	movne	r3, #1
 800ba3c:	2300      	moveq	r3, #0
 800ba3e:	b2db      	uxtb	r3, r3
 800ba40:	2b00      	cmp	r3, #0
 800ba42:	d1f5      	bne.n	800ba30 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800ba44:	687b      	ldr	r3, [r7, #4]
 800ba46:	4618      	mov	r0, r3
 800ba48:	f000 fe54 	bl	800c6f4 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800ba4c:	f7fe fe80 	bl	800a750 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800ba50:	bf00      	nop
 800ba52:	3708      	adds	r7, #8
 800ba54:	46bd      	mov	sp, r7
 800ba56:	bd80      	pop	{r7, pc}

0800ba58 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800ba58:	b480      	push	{r7}
 800ba5a:	b083      	sub	sp, #12
 800ba5c:	af00      	add	r7, sp, #0
 800ba5e:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800ba60:	2300      	movs	r3, #0
}
 800ba62:	4618      	mov	r0, r3
 800ba64:	370c      	adds	r7, #12
 800ba66:	46bd      	mov	sp, r7
 800ba68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba6c:	4770      	bx	lr

0800ba6e <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800ba6e:	b480      	push	{r7}
 800ba70:	b083      	sub	sp, #12
 800ba72:	af00      	add	r7, sp, #0
 800ba74:	6078      	str	r0, [r7, #4]
 800ba76:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800ba78:	bf00      	nop
 800ba7a:	370c      	adds	r7, #12
 800ba7c:	46bd      	mov	sp, r7
 800ba7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba82:	4770      	bx	lr

0800ba84 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ba84:	b580      	push	{r7, lr}
 800ba86:	b088      	sub	sp, #32
 800ba88:	af02      	add	r7, sp, #8
 800ba8a:	6078      	str	r0, [r7, #4]
 800ba8c:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	6839      	ldr	r1, [r7, #0]
 800ba92:	4618      	mov	r0, r3
 800ba94:	f000 fdec 	bl	800c670 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	699a      	ldr	r2, [r3, #24]
 800ba9c:	687b      	ldr	r3, [r7, #4]
 800ba9e:	699b      	ldr	r3, [r3, #24]
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	3304      	adds	r3, #4
 800baa4:	681b      	ldr	r3, [r3, #0]
 800baa6:	4610      	mov	r0, r2
 800baa8:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800baaa:	f7fe fda7 	bl	800a5fc <touchgfxDisplayDriverTransmitActive>
 800baae:	4603      	mov	r3, r0
 800bab0:	2b00      	cmp	r3, #0
 800bab2:	bf0c      	ite	eq
 800bab4:	2301      	moveq	r3, #1
 800bab6:	2300      	movne	r3, #0
 800bab8:	b2db      	uxtb	r3, r3
 800baba:	2b00      	cmp	r3, #0
 800babc:	d021      	beq.n	800bb02 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800babe:	f107 030c 	add.w	r3, r7, #12
 800bac2:	4618      	mov	r0, r3
 800bac4:	f7fc ff35 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	699a      	ldr	r2, [r3, #24]
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	699b      	ldr	r3, [r3, #24]
 800bad0:	681b      	ldr	r3, [r3, #0]
 800bad2:	330c      	adds	r3, #12
 800bad4:	681b      	ldr	r3, [r3, #0]
 800bad6:	f107 010c 	add.w	r1, r7, #12
 800bada:	4610      	mov	r0, r2
 800badc:	4798      	blx	r3
 800bade:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800bae0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800bae4:	b299      	uxth	r1, r3
 800bae6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800baea:	b29a      	uxth	r2, r3
 800baec:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800baf0:	b298      	uxth	r0, r3
 800baf2:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800baf6:	b29b      	uxth	r3, r3
 800baf8:	9300      	str	r3, [sp, #0]
 800bafa:	4603      	mov	r3, r0
 800bafc:	6978      	ldr	r0, [r7, #20]
 800bafe:	f7fe fd89 	bl	800a614 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800bb02:	bf00      	nop
 800bb04:	3718      	adds	r7, #24
 800bb06:	46bd      	mov	sp, r7
 800bb08:	bd80      	pop	{r7, pc}

0800bb0a <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800bb0a:	b580      	push	{r7, lr}
 800bb0c:	b084      	sub	sp, #16
 800bb0e:	af00      	add	r7, sp, #0
 800bb10:	60f8      	str	r0, [r7, #12]
 800bb12:	60b9      	str	r1, [r7, #8]
 800bb14:	607a      	str	r2, [r7, #4]
 800bb16:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800bb18:	68f8      	ldr	r0, [r7, #12]
 800bb1a:	683b      	ldr	r3, [r7, #0]
 800bb1c:	687a      	ldr	r2, [r7, #4]
 800bb1e:	68b9      	ldr	r1, [r7, #8]
 800bb20:	f000 ff29 	bl	800c976 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800bb24:	4603      	mov	r3, r0
}
 800bb26:	4618      	mov	r0, r3
 800bb28:	3710      	adds	r7, #16
 800bb2a:	46bd      	mov	sp, r7
 800bb2c:	bd80      	pop	{r7, pc}

0800bb2e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
__weak void FrameBufferAllocatorWaitOnTransfer()
{
 800bb2e:	b480      	push	{r7}
 800bb30:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800bb32:	bf00      	nop
 800bb34:	46bd      	mov	sp, r7
 800bb36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb3a:	4770      	bx	lr

0800bb3c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
__weak void FrameBufferAllocatorSignalBlockDrawn()
{
 800bb3c:	b480      	push	{r7}
 800bb3e:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800bb40:	bf00      	nop
 800bb42:	46bd      	mov	sp, r7
 800bb44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb48:	4770      	bx	lr

0800bb4a <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800bb4a:	b580      	push	{r7, lr}
 800bb4c:	b086      	sub	sp, #24
 800bb4e:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800bb50:	f7fb ff9a 	bl	8007a88 <_ZN8touchgfx3HAL11getInstanceEv>
 800bb54:	4603      	mov	r3, r0
 800bb56:	4618      	mov	r0, r3
 800bb58:	f7ff fcac 	bl	800b4b4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800bb5c:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800bb5e:	68fb      	ldr	r3, [r7, #12]
 800bb60:	681b      	ldr	r3, [r3, #0]
 800bb62:	3318      	adds	r3, #24
 800bb64:	681b      	ldr	r3, [r3, #0]
 800bb66:	68f8      	ldr	r0, [r7, #12]
 800bb68:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800bb6a:	68fb      	ldr	r3, [r7, #12]
 800bb6c:	681b      	ldr	r3, [r3, #0]
 800bb6e:	3308      	adds	r3, #8
 800bb70:	681b      	ldr	r3, [r3, #0]
 800bb72:	68f8      	ldr	r0, [r7, #12]
 800bb74:	4798      	blx	r3
 800bb76:	4603      	mov	r3, r0
 800bb78:	2b00      	cmp	r3, #0
 800bb7a:	d01d      	beq.n	800bbb8 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800bb7c:	463b      	mov	r3, r7
 800bb7e:	4618      	mov	r0, r3
 800bb80:	f7fc fed7 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800bb84:	68fb      	ldr	r3, [r7, #12]
 800bb86:	681b      	ldr	r3, [r3, #0]
 800bb88:	330c      	adds	r3, #12
 800bb8a:	681b      	ldr	r3, [r3, #0]
 800bb8c:	463a      	mov	r2, r7
 800bb8e:	4611      	mov	r1, r2
 800bb90:	68f8      	ldr	r0, [r7, #12]
 800bb92:	4798      	blx	r3
 800bb94:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800bb96:	f9b7 3000 	ldrsh.w	r3, [r7]
 800bb9a:	b299      	uxth	r1, r3
 800bb9c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800bba0:	b29a      	uxth	r2, r3
 800bba2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800bba6:	b298      	uxth	r0, r3
 800bba8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800bbac:	b29b      	uxth	r3, r3
 800bbae:	9300      	str	r3, [sp, #0]
 800bbb0:	4603      	mov	r3, r0
 800bbb2:	68b8      	ldr	r0, [r7, #8]
 800bbb4:	f7fe fd2e 	bl	800a614 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800bbb8:	bf00      	nop
 800bbba:	3710      	adds	r7, #16
 800bbbc:	46bd      	mov	sp, r7
 800bbbe:	bd80      	pop	{r7, pc}

0800bbc0 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800bbc0:	b580      	push	{r7, lr}
 800bbc2:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800bbc4:	f7ff ffc1 	bl	800bb4a <_ZN8touchgfx16startNewTransferEv>
}
 800bbc8:	bf00      	nop
 800bbca:	bd80      	pop	{r7, pc}

0800bbcc <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800bbcc:	b580      	push	{r7, lr}
 800bbce:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800bbd0:	f7fb ff5a 	bl	8007a88 <_ZN8touchgfx3HAL11getInstanceEv>
 800bbd4:	4603      	mov	r3, r0
 800bbd6:	4618      	mov	r0, r3
 800bbd8:	f7ff fc48 	bl	800b46c <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800bbdc:	f7fe fdac 	bl	800a738 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800bbe0:	bf00      	nop
 800bbe2:	bd80      	pop	{r7, pc}

0800bbe4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800bbe4:	b480      	push	{r7}
 800bbe6:	b083      	sub	sp, #12
 800bbe8:	af00      	add	r7, sp, #0
 800bbea:	6078      	str	r0, [r7, #4]
 800bbec:	4a04      	ldr	r2, [pc, #16]	@ (800bc00 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	601a      	str	r2, [r3, #0]
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	4618      	mov	r0, r3
 800bbf6:	370c      	adds	r7, #12
 800bbf8:	46bd      	mov	sp, r7
 800bbfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbfe:	4770      	bx	lr
 800bc00:	080239ec 	.word	0x080239ec

0800bc04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800bc04:	b5b0      	push	{r4, r5, r7, lr}
 800bc06:	b084      	sub	sp, #16
 800bc08:	af00      	add	r7, sp, #0
 800bc0a:	6078      	str	r0, [r7, #4]
    {
 800bc0c:	687b      	ldr	r3, [r7, #4]
 800bc0e:	4618      	mov	r0, r3
 800bc10:	f7ff ffe8 	bl	800bbe4 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800bc14:	4a1a      	ldr	r2, [pc, #104]	@ (800bc80 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x7c>)
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	601a      	str	r2, [r3, #0]
 800bc1a:	687b      	ldr	r3, [r7, #4]
 800bc1c:	f503 53c0 	add.w	r3, r3, #6144	@ 0x1800
 800bc20:	3308      	adds	r3, #8
 800bc22:	2402      	movs	r4, #2
 800bc24:	461d      	mov	r5, r3
 800bc26:	e004      	b.n	800bc32 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x2e>
 800bc28:	4628      	mov	r0, r5
 800bc2a:	f7fc fe82 	bl	8008932 <_ZN8touchgfx4RectC1Ev>
 800bc2e:	3c01      	subs	r4, #1
 800bc30:	3508      	adds	r5, #8
 800bc32:	2c00      	cmp	r4, #0
 800bc34:	daf8      	bge.n	800bc28 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800bc36:	687b      	ldr	r3, [r7, #4]
 800bc38:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bc3c:	461a      	mov	r2, r3
 800bc3e:	f04f 33ff 	mov.w	r3, #4294967295
 800bc42:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        drawingBlock = -1;
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bc4c:	461a      	mov	r2, r3
 800bc4e:	f04f 33ff 	mov.w	r3, #4294967295
 800bc52:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        for (uint32_t i = 0; i < blocks; i++)
 800bc56:	2300      	movs	r3, #0
 800bc58:	60fb      	str	r3, [r7, #12]
 800bc5a:	e008      	b.n	800bc6e <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800bc5c:	687a      	ldr	r2, [r7, #4]
 800bc5e:	68fb      	ldr	r3, [r7, #12]
 800bc60:	4413      	add	r3, r2
 800bc62:	3304      	adds	r3, #4
 800bc64:	2200      	movs	r2, #0
 800bc66:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800bc68:	68fb      	ldr	r3, [r7, #12]
 800bc6a:	3301      	adds	r3, #1
 800bc6c:	60fb      	str	r3, [r7, #12]
 800bc6e:	68fb      	ldr	r3, [r7, #12]
 800bc70:	2b02      	cmp	r3, #2
 800bc72:	d9f3      	bls.n	800bc5c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x58>
        }
    }
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	4618      	mov	r0, r3
 800bc78:	3710      	adds	r7, #16
 800bc7a:	46bd      	mov	sp, r7
 800bc7c:	bdb0      	pop	{r4, r5, r7, pc}
 800bc7e:	bf00      	nop
 800bc80:	080238d4 	.word	0x080238d4

0800bc84 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800bc84:	b580      	push	{r7, lr}
 800bc86:	b082      	sub	sp, #8
 800bc88:	af00      	add	r7, sp, #0
 800bc8a:	6078      	str	r0, [r7, #4]
 800bc8c:	4a05      	ldr	r2, [pc, #20]	@ (800bca4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev+0x20>)
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	601a      	str	r2, [r3, #0]
 800bc92:	687b      	ldr	r3, [r7, #4]
 800bc94:	4618      	mov	r0, r3
 800bc96:	f7ff fbc9 	bl	800b42c <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800bc9a:	687b      	ldr	r3, [r7, #4]
 800bc9c:	4618      	mov	r0, r3
 800bc9e:	3708      	adds	r7, #8
 800bca0:	46bd      	mov	sp, r7
 800bca2:	bd80      	pop	{r7, pc}
 800bca4:	080238d4 	.word	0x080238d4

0800bca8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED0Ev>:
 800bca8:	b580      	push	{r7, lr}
 800bcaa:	b082      	sub	sp, #8
 800bcac:	af00      	add	r7, sp, #0
 800bcae:	6078      	str	r0, [r7, #4]
 800bcb0:	6878      	ldr	r0, [r7, #4]
 800bcb2:	f7ff ffe7 	bl	800bc84 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>
 800bcb6:	f641 0128 	movw	r1, #6184	@ 0x1828
 800bcba:	6878      	ldr	r0, [r7, #4]
 800bcbc:	f015 f9c7 	bl	802104e <_ZdlPvj>
 800bcc0:	687b      	ldr	r3, [r7, #4]
 800bcc2:	4618      	mov	r0, r3
 800bcc4:	3708      	adds	r7, #8
 800bcc6:	46bd      	mov	sp, r7
 800bcc8:	bd80      	pop	{r7, pc}
	...

0800bccc <_Z41__static_initialization_and_destruction_0ii>:
 800bccc:	b580      	push	{r7, lr}
 800bcce:	b082      	sub	sp, #8
 800bcd0:	af00      	add	r7, sp, #0
 800bcd2:	6078      	str	r0, [r7, #4]
 800bcd4:	6039      	str	r1, [r7, #0]
 800bcd6:	687b      	ldr	r3, [r7, #4]
 800bcd8:	2b01      	cmp	r3, #1
 800bcda:	d107      	bne.n	800bcec <_Z41__static_initialization_and_destruction_0ii+0x20>
 800bcdc:	683b      	ldr	r3, [r7, #0]
 800bcde:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800bce2:	4293      	cmp	r3, r2
 800bce4:	d102      	bne.n	800bcec <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800bce6:	4809      	ldr	r0, [pc, #36]	@ (800bd0c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800bce8:	f7ff ff8c 	bl	800bc04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev>
 800bcec:	687b      	ldr	r3, [r7, #4]
 800bcee:	2b00      	cmp	r3, #0
 800bcf0:	d107      	bne.n	800bd02 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800bcf2:	683b      	ldr	r3, [r7, #0]
 800bcf4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800bcf8:	4293      	cmp	r3, r2
 800bcfa:	d102      	bne.n	800bd02 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800bcfc:	4803      	ldr	r0, [pc, #12]	@ (800bd0c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800bcfe:	f7ff ffc1 	bl	800bc84 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>
}
 800bd02:	bf00      	nop
 800bd04:	3708      	adds	r7, #8
 800bd06:	46bd      	mov	sp, r7
 800bd08:	bd80      	pop	{r7, pc}
 800bd0a:	bf00      	nop
 800bd0c:	200009fc 	.word	0x200009fc

0800bd10 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800bd10:	b580      	push	{r7, lr}
 800bd12:	b086      	sub	sp, #24
 800bd14:	af00      	add	r7, sp, #0
 800bd16:	60f8      	str	r0, [r7, #12]
 800bd18:	4608      	mov	r0, r1
 800bd1a:	4611      	mov	r1, r2
 800bd1c:	461a      	mov	r2, r3
 800bd1e:	4603      	mov	r3, r0
 800bd20:	817b      	strh	r3, [r7, #10]
 800bd22:	460b      	mov	r3, r1
 800bd24:	813b      	strh	r3, [r7, #8]
 800bd26:	4613      	mov	r3, r2
 800bd28:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800bd2a:	68fb      	ldr	r3, [r7, #12]
 800bd2c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bd30:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bd34:	3301      	adds	r3, #1
 800bd36:	68fa      	ldr	r2, [r7, #12]
 800bd38:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800bd3c:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        if (drawingBlock == blocks)
 800bd40:	68fb      	ldr	r3, [r7, #12]
 800bd42:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bd46:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bd4a:	2b03      	cmp	r3, #3
 800bd4c:	d109      	bne.n	800bd62 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800bd4e:	68fb      	ldr	r3, [r7, #12]
 800bd50:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bd54:	461a      	mov	r2, r3
 800bd56:	2300      	movs	r3, #0
 800bd58:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        }
        while (state[drawingBlock] != EMPTY)
 800bd5c:	e001      	b.n	800bd62 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800bd5e:	f7ff fee6 	bl	800bb2e <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800bd62:	68fb      	ldr	r3, [r7, #12]
 800bd64:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bd68:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bd6c:	68fa      	ldr	r2, [r7, #12]
 800bd6e:	4413      	add	r3, r2
 800bd70:	791b      	ldrb	r3, [r3, #4]
 800bd72:	b2db      	uxtb	r3, r3
 800bd74:	2b00      	cmp	r3, #0
 800bd76:	bf14      	ite	ne
 800bd78:	2301      	movne	r3, #1
 800bd7a:	2300      	moveq	r3, #0
 800bd7c:	b2db      	uxtb	r3, r3
 800bd7e:	2b00      	cmp	r3, #0
 800bd80:	d1ed      	bne.n	800bd5e <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800bd82:	68fb      	ldr	r3, [r7, #12]
 800bd84:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bd88:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bd8c:	68fa      	ldr	r2, [r7, #12]
 800bd8e:	4413      	add	r3, r2
 800bd90:	791b      	ldrb	r3, [r3, #4]
 800bd92:	b2db      	uxtb	r3, r3
 800bd94:	2b00      	cmp	r3, #0
 800bd96:	d005      	beq.n	800bda4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800bd98:	4b36      	ldr	r3, [pc, #216]	@ (800be74 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x164>)
 800bd9a:	4a37      	ldr	r2, [pc, #220]	@ (800be78 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x168>)
 800bd9c:	21aa      	movs	r1, #170	@ 0xaa
 800bd9e:	4837      	ldr	r0, [pc, #220]	@ (800be7c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800bda0:	f015 f982 	bl	80210a8 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800bda4:	68fb      	ldr	r3, [r7, #12]
 800bda6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bdaa:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bdae:	68fa      	ldr	r2, [r7, #12]
 800bdb0:	4413      	add	r3, r2
 800bdb2:	2201      	movs	r2, #1
 800bdb4:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800bdb6:	88fb      	ldrh	r3, [r7, #6]
 800bdb8:	005b      	lsls	r3, r3, #1
 800bdba:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800bdbc:	697b      	ldr	r3, [r7, #20]
 800bdbe:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800bdc2:	fbb2 f3f3 	udiv	r3, r2, r3
 800bdc6:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800bdc8:	68fb      	ldr	r3, [r7, #12]
 800bdca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bdce:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800bdd2:	02db      	lsls	r3, r3, #11
 800bdd4:	3308      	adds	r3, #8
 800bdd6:	68fa      	ldr	r2, [r7, #12]
 800bdd8:	441a      	add	r2, r3
 800bdda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bddc:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800bdde:	68fb      	ldr	r3, [r7, #12]
 800bde0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bde4:	f8d3 2824 	ldr.w	r2, [r3, #2084]	@ 0x824
 800bde8:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800bdec:	68fb      	ldr	r3, [r7, #12]
 800bdee:	f202 3201 	addw	r2, r2, #769	@ 0x301
 800bdf2:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800bdf6:	68fb      	ldr	r3, [r7, #12]
 800bdf8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bdfc:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800be00:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800be04:	68fa      	ldr	r2, [r7, #12]
 800be06:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800be0a:	00db      	lsls	r3, r3, #3
 800be0c:	4413      	add	r3, r2
 800be0e:	460a      	mov	r2, r1
 800be10:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800be12:	68fb      	ldr	r3, [r7, #12]
 800be14:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800be18:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800be1c:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800be20:	68fa      	ldr	r2, [r7, #12]
 800be22:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800be26:	00db      	lsls	r3, r3, #3
 800be28:	4413      	add	r3, r2
 800be2a:	460a      	mov	r2, r1
 800be2c:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800be2e:	8c3a      	ldrh	r2, [r7, #32]
 800be30:	693b      	ldr	r3, [r7, #16]
 800be32:	429a      	cmp	r2, r3
 800be34:	bfa8      	it	ge
 800be36:	461a      	movge	r2, r3
 800be38:	68fb      	ldr	r3, [r7, #12]
 800be3a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800be3e:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800be42:	b211      	sxth	r1, r2
 800be44:	68fa      	ldr	r2, [r7, #12]
 800be46:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800be4a:	00db      	lsls	r3, r3, #3
 800be4c:	4413      	add	r3, r2
 800be4e:	460a      	mov	r2, r1
 800be50:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800be52:	68fb      	ldr	r3, [r7, #12]
 800be54:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800be58:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800be5c:	68fa      	ldr	r2, [r7, #12]
 800be5e:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800be62:	00db      	lsls	r3, r3, #3
 800be64:	4413      	add	r3, r2
 800be66:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800be6a:	b29b      	uxth	r3, r3
    }
 800be6c:	4618      	mov	r0, r3
 800be6e:	3718      	adds	r7, #24
 800be70:	46bd      	mov	sp, r7
 800be72:	bd80      	pop	{r7, pc}
 800be74:	08022bc4 	.word	0x08022bc4
 800be78:	08022be4 	.word	0x08022be4
 800be7c:	08022d18 	.word	0x08022d18

0800be80 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800be80:	b580      	push	{r7, lr}
 800be82:	b082      	sub	sp, #8
 800be84:	af00      	add	r7, sp, #0
 800be86:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800be8e:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800be92:	687a      	ldr	r2, [r7, #4]
 800be94:	4413      	add	r3, r2
 800be96:	791b      	ldrb	r3, [r3, #4]
 800be98:	b2db      	uxtb	r3, r3
 800be9a:	2b01      	cmp	r3, #1
 800be9c:	d005      	beq.n	800beaa <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800be9e:	4b0a      	ldr	r3, [pc, #40]	@ (800bec8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800bea0:	4a0a      	ldr	r2, [pc, #40]	@ (800becc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800bea2:	21b9      	movs	r1, #185	@ 0xb9
 800bea4:	480a      	ldr	r0, [pc, #40]	@ (800bed0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800bea6:	f015 f8ff 	bl	80210a8 <__assert_func>
        state[drawingBlock] = DRAWN;
 800beaa:	687b      	ldr	r3, [r7, #4]
 800beac:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800beb0:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800beb4:	687a      	ldr	r2, [r7, #4]
 800beb6:	4413      	add	r3, r2
 800beb8:	2202      	movs	r2, #2
 800beba:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800bebc:	f7ff fe3e 	bl	800bb3c <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800bec0:	bf00      	nop
 800bec2:	3708      	adds	r7, #8
 800bec4:	46bd      	mov	sp, r7
 800bec6:	bd80      	pop	{r7, pc}
 800bec8:	08022d6c 	.word	0x08022d6c
 800becc:	08022d90 	.word	0x08022d90
 800bed0:	08022d18 	.word	0x08022d18

0800bed4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800bed4:	b480      	push	{r7}
 800bed6:	b085      	sub	sp, #20
 800bed8:	af00      	add	r7, sp, #0
 800beda:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800bedc:	2300      	movs	r3, #0
 800bede:	60fb      	str	r3, [r7, #12]
 800bee0:	e011      	b.n	800bf06 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800bee2:	687a      	ldr	r2, [r7, #4]
 800bee4:	68fb      	ldr	r3, [r7, #12]
 800bee6:	4413      	add	r3, r2
 800bee8:	3304      	adds	r3, #4
 800beea:	781b      	ldrb	r3, [r3, #0]
 800beec:	b2db      	uxtb	r3, r3
 800beee:	2b02      	cmp	r3, #2
 800bef0:	bf0c      	ite	eq
 800bef2:	2301      	moveq	r3, #1
 800bef4:	2300      	movne	r3, #0
 800bef6:	b2db      	uxtb	r3, r3
 800bef8:	2b00      	cmp	r3, #0
 800befa:	d001      	beq.n	800bf00 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800befc:	2301      	movs	r3, #1
 800befe:	e006      	b.n	800bf0e <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	3301      	adds	r3, #1
 800bf04:	60fb      	str	r3, [r7, #12]
 800bf06:	68fb      	ldr	r3, [r7, #12]
 800bf08:	2b02      	cmp	r3, #2
 800bf0a:	d9ea      	bls.n	800bee2 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800bf0c:	2300      	movs	r3, #0
    }
 800bf0e:	4618      	mov	r0, r3
 800bf10:	3714      	adds	r7, #20
 800bf12:	46bd      	mov	sp, r7
 800bf14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf18:	4770      	bx	lr
	...

0800bf1c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800bf1c:	b580      	push	{r7, lr}
 800bf1e:	b082      	sub	sp, #8
 800bf20:	af00      	add	r7, sp, #0
 800bf22:	6078      	str	r0, [r7, #4]
 800bf24:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800bf26:	687b      	ldr	r3, [r7, #4]
 800bf28:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf2c:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bf30:	3301      	adds	r3, #1
 800bf32:	687a      	ldr	r2, [r7, #4]
 800bf34:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800bf38:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        if (sendingBlock == blocks)
 800bf3c:	687b      	ldr	r3, [r7, #4]
 800bf3e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf42:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bf46:	2b03      	cmp	r3, #3
 800bf48:	d106      	bne.n	800bf58 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800bf4a:	687b      	ldr	r3, [r7, #4]
 800bf4c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf50:	461a      	mov	r2, r3
 800bf52:	2300      	movs	r3, #0
 800bf54:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        }
        assert(state[sendingBlock] == DRAWN);
 800bf58:	687b      	ldr	r3, [r7, #4]
 800bf5a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf5e:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bf62:	687a      	ldr	r2, [r7, #4]
 800bf64:	4413      	add	r3, r2
 800bf66:	791b      	ldrb	r3, [r3, #4]
 800bf68:	b2db      	uxtb	r3, r3
 800bf6a:	2b02      	cmp	r3, #2
 800bf6c:	d005      	beq.n	800bf7a <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800bf6e:	4b15      	ldr	r3, [pc, #84]	@ (800bfc4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xa8>)
 800bf70:	4a15      	ldr	r2, [pc, #84]	@ (800bfc8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800bf72:	21dd      	movs	r1, #221	@ 0xdd
 800bf74:	4815      	ldr	r0, [pc, #84]	@ (800bfcc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800bf76:	f015 f897 	bl	80210a8 <__assert_func>
        rect = blockRect[sendingBlock];
 800bf7a:	687b      	ldr	r3, [r7, #4]
 800bf7c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf80:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bf84:	683a      	ldr	r2, [r7, #0]
 800bf86:	6879      	ldr	r1, [r7, #4]
 800bf88:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800bf8c:	00db      	lsls	r3, r3, #3
 800bf8e:	440b      	add	r3, r1
 800bf90:	cb03      	ldmia	r3!, {r0, r1}
 800bf92:	6010      	str	r0, [r2, #0]
 800bf94:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800bf96:	687b      	ldr	r3, [r7, #4]
 800bf98:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bf9c:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bfa0:	687a      	ldr	r2, [r7, #4]
 800bfa2:	4413      	add	r3, r2
 800bfa4:	2203      	movs	r2, #3
 800bfa6:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800bfa8:	687b      	ldr	r3, [r7, #4]
 800bfaa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bfae:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bfb2:	02db      	lsls	r3, r3, #11
 800bfb4:	3308      	adds	r3, #8
 800bfb6:	687a      	ldr	r2, [r7, #4]
 800bfb8:	4413      	add	r3, r2
    }
 800bfba:	4618      	mov	r0, r3
 800bfbc:	3708      	adds	r7, #8
 800bfbe:	46bd      	mov	sp, r7
 800bfc0:	bd80      	pop	{r7, pc}
 800bfc2:	bf00      	nop
 800bfc4:	08022e64 	.word	0x08022e64
 800bfc8:	08022e84 	.word	0x08022e84
 800bfcc:	08022d18 	.word	0x08022d18

0800bfd0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800bfd0:	b580      	push	{r7, lr}
 800bfd2:	b084      	sub	sp, #16
 800bfd4:	af00      	add	r7, sp, #0
 800bfd6:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800bfd8:	687b      	ldr	r3, [r7, #4]
 800bfda:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800bfde:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800bfe2:	3301      	adds	r3, #1
 800bfe4:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800bfe6:	68fb      	ldr	r3, [r7, #12]
 800bfe8:	2b03      	cmp	r3, #3
 800bfea:	d101      	bne.n	800bff0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800bfec:	2300      	movs	r3, #0
 800bfee:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800bff0:	687a      	ldr	r2, [r7, #4]
 800bff2:	68fb      	ldr	r3, [r7, #12]
 800bff4:	4413      	add	r3, r2
 800bff6:	3304      	adds	r3, #4
 800bff8:	781b      	ldrb	r3, [r3, #0]
 800bffa:	b2db      	uxtb	r3, r3
 800bffc:	2b02      	cmp	r3, #2
 800bffe:	d005      	beq.n	800c00c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800c000:	4b07      	ldr	r3, [pc, #28]	@ (800c020 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800c002:	4a08      	ldr	r2, [pc, #32]	@ (800c024 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800c004:	21ea      	movs	r1, #234	@ 0xea
 800c006:	4808      	ldr	r0, [pc, #32]	@ (800c028 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800c008:	f015 f84e 	bl	80210a8 <__assert_func>
        return blockRect[nextSendingBlock];
 800c00c:	68fb      	ldr	r3, [r7, #12]
 800c00e:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c012:	00db      	lsls	r3, r3, #3
 800c014:	687a      	ldr	r2, [r7, #4]
 800c016:	4413      	add	r3, r2
    }
 800c018:	4618      	mov	r0, r3
 800c01a:	3710      	adds	r7, #16
 800c01c:	46bd      	mov	sp, r7
 800c01e:	bd80      	pop	{r7, pc}
 800c020:	08022f84 	.word	0x08022f84
 800c024:	08022fa8 	.word	0x08022fa8
 800c028:	08022d18 	.word	0x08022d18

0800c02c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800c02c:	b480      	push	{r7}
 800c02e:	b085      	sub	sp, #20
 800c030:	af00      	add	r7, sp, #0
 800c032:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800c034:	687b      	ldr	r3, [r7, #4]
 800c036:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c03a:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c03e:	3301      	adds	r3, #1
 800c040:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800c042:	68fb      	ldr	r3, [r7, #12]
 800c044:	2b03      	cmp	r3, #3
 800c046:	d101      	bne.n	800c04c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800c048:	2300      	movs	r3, #0
 800c04a:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800c04c:	687a      	ldr	r2, [r7, #4]
 800c04e:	68fb      	ldr	r3, [r7, #12]
 800c050:	4413      	add	r3, r2
 800c052:	3304      	adds	r3, #4
 800c054:	781b      	ldrb	r3, [r3, #0]
 800c056:	b2db      	uxtb	r3, r3
 800c058:	2b00      	cmp	r3, #0
 800c05a:	bf0c      	ite	eq
 800c05c:	2301      	moveq	r3, #1
 800c05e:	2300      	movne	r3, #0
 800c060:	b2db      	uxtb	r3, r3
    }
 800c062:	4618      	mov	r0, r3
 800c064:	3714      	adds	r7, #20
 800c066:	46bd      	mov	sp, r7
 800c068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c06c:	4770      	bx	lr
	...

0800c070 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800c070:	b580      	push	{r7, lr}
 800c072:	b082      	sub	sp, #8
 800c074:	af00      	add	r7, sp, #0
 800c076:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800c078:	687b      	ldr	r3, [r7, #4]
 800c07a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c07e:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c082:	687a      	ldr	r2, [r7, #4]
 800c084:	4413      	add	r3, r2
 800c086:	791b      	ldrb	r3, [r3, #4]
 800c088:	b2db      	uxtb	r3, r3
 800c08a:	2b03      	cmp	r3, #3
 800c08c:	d005      	beq.n	800c09a <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800c08e:	4b09      	ldr	r3, [pc, #36]	@ (800c0b4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800c090:	4a09      	ldr	r2, [pc, #36]	@ (800c0b8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800c092:	21ff      	movs	r1, #255	@ 0xff
 800c094:	4809      	ldr	r0, [pc, #36]	@ (800c0bc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800c096:	f015 f807 	bl	80210a8 <__assert_func>
        state[sendingBlock] = EMPTY;
 800c09a:	687b      	ldr	r3, [r7, #4]
 800c09c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c0a0:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c0a4:	687a      	ldr	r2, [r7, #4]
 800c0a6:	4413      	add	r3, r2
 800c0a8:	2200      	movs	r2, #0
 800c0aa:	711a      	strb	r2, [r3, #4]
    }
 800c0ac:	bf00      	nop
 800c0ae:	3708      	adds	r7, #8
 800c0b0:	46bd      	mov	sp, r7
 800c0b2:	bd80      	pop	{r7, pc}
 800c0b4:	08023088 	.word	0x08023088
 800c0b8:	080230a8 	.word	0x080230a8
 800c0bc:	08022d18 	.word	0x08022d18

0800c0c0 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800c0c0:	b580      	push	{r7, lr}
 800c0c2:	af00      	add	r7, sp, #0
 800c0c4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c0c8:	2001      	movs	r0, #1
 800c0ca:	f7ff fdff 	bl	800bccc <_Z41__static_initialization_and_destruction_0ii>
 800c0ce:	bd80      	pop	{r7, pc}

0800c0d0 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800c0d0:	b580      	push	{r7, lr}
 800c0d2:	af00      	add	r7, sp, #0
 800c0d4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c0d8:	2000      	movs	r0, #0
 800c0da:	f7ff fdf7 	bl	800bccc <_Z41__static_initialization_and_destruction_0ii>
 800c0de:	bd80      	pop	{r7, pc}

0800c0e0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800c0e0:	8880      	ldrh	r0, [r0, #4]
 800c0e2:	4770      	bx	lr

0800c0e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800c0e4:	b570      	push	{r4, r5, r6, lr}
 800c0e6:	6803      	ldr	r3, [r0, #0]
 800c0e8:	4605      	mov	r5, r0
 800c0ea:	460c      	mov	r4, r1
 800c0ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c0ee:	2100      	movs	r1, #0
 800c0f0:	4798      	blx	r3
 800c0f2:	682b      	ldr	r3, [r5, #0]
 800c0f4:	4606      	mov	r6, r0
 800c0f6:	6a1b      	ldr	r3, [r3, #32]
 800c0f8:	4628      	mov	r0, r5
 800c0fa:	4798      	blx	r3
 800c0fc:	1ba4      	subs	r4, r4, r6
 800c0fe:	b2a4      	uxth	r4, r4
 800c100:	fbb4 f0f0 	udiv	r0, r4, r0
 800c104:	bd70      	pop	{r4, r5, r6, pc}

0800c106 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800c106:	2300      	movs	r3, #0
 800c108:	8083      	strh	r3, [r0, #4]
 800c10a:	4770      	bx	lr

0800c10c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800c10c:	b510      	push	{r4, lr}
 800c10e:	4604      	mov	r4, r0
 800c110:	6803      	ldr	r3, [r0, #0]
 800c112:	8881      	ldrh	r1, [r0, #4]
 800c114:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c116:	4798      	blx	r3
 800c118:	88a3      	ldrh	r3, [r4, #4]
 800c11a:	3301      	adds	r3, #1
 800c11c:	80a3      	strh	r3, [r4, #4]
 800c11e:	bd10      	pop	{r4, pc}

0800c120 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c120:	6803      	ldr	r3, [r0, #0]
 800c122:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c124:	4718      	bx	r3

0800c126 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c126:	4770      	bx	lr

0800c128 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c128:	4a02      	ldr	r2, [pc, #8]	@ (800c134 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c12a:	6002      	str	r2, [r0, #0]
 800c12c:	2200      	movs	r2, #0
 800c12e:	8082      	strh	r2, [r0, #4]
 800c130:	4770      	bx	lr
 800c132:	bf00      	nop
 800c134:	08023a18 	.word	0x08023a18

0800c138 <_ZN8touchgfx9Container13getFirstChildEv>:
 800c138:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800c13a:	4770      	bx	lr

0800c13c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800c13c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c13e:	2000      	movs	r0, #0
 800c140:	b12b      	cbz	r3, 800c14e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c142:	b920      	cbnz	r0, 800c14e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800c144:	1a5a      	subs	r2, r3, r1
 800c146:	4250      	negs	r0, r2
 800c148:	4150      	adcs	r0, r2
 800c14a:	699b      	ldr	r3, [r3, #24]
 800c14c:	e7f8      	b.n	800c140 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800c14e:	4770      	bx	lr

0800c150 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800c150:	2300      	movs	r3, #0
 800c152:	6148      	str	r0, [r1, #20]
 800c154:	618b      	str	r3, [r1, #24]
 800c156:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c158:	b913      	cbnz	r3, 800c160 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800c15a:	6281      	str	r1, [r0, #40]	@ 0x28
 800c15c:	4770      	bx	lr
 800c15e:	4613      	mov	r3, r2
 800c160:	699a      	ldr	r2, [r3, #24]
 800c162:	2a00      	cmp	r2, #0
 800c164:	d1fb      	bne.n	800c15e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800c166:	6199      	str	r1, [r3, #24]
 800c168:	4770      	bx	lr

0800c16a <_ZN8touchgfx9Container9removeAllEv>:
 800c16a:	2200      	movs	r2, #0
 800c16c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c16e:	b123      	cbz	r3, 800c17a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800c170:	6999      	ldr	r1, [r3, #24]
 800c172:	6281      	str	r1, [r0, #40]	@ 0x28
 800c174:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800c178:	e7f8      	b.n	800c16c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800c17a:	4770      	bx	lr

0800c17c <_ZN8touchgfx9Container6unlinkEv>:
 800c17c:	2300      	movs	r3, #0
 800c17e:	6283      	str	r3, [r0, #40]	@ 0x28
 800c180:	4770      	bx	lr

0800c182 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800c182:	2200      	movs	r2, #0
 800c184:	8002      	strh	r2, [r0, #0]
 800c186:	8042      	strh	r2, [r0, #2]
 800c188:	8082      	strh	r2, [r0, #4]
 800c18a:	80c2      	strh	r2, [r0, #6]
 800c18c:	4770      	bx	lr

0800c18e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800c18e:	b570      	push	{r4, r5, r6, lr}
 800c190:	460d      	mov	r5, r1
 800c192:	4616      	mov	r6, r2
 800c194:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c196:	b13c      	cbz	r4, 800c1a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800c198:	6823      	ldr	r3, [r4, #0]
 800c19a:	4620      	mov	r0, r4
 800c19c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c19e:	4632      	mov	r2, r6
 800c1a0:	4629      	mov	r1, r5
 800c1a2:	4798      	blx	r3
 800c1a4:	69a4      	ldr	r4, [r4, #24]
 800c1a6:	e7f6      	b.n	800c196 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800c1a8:	bd70      	pop	{r4, r5, r6, pc}

0800c1aa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800c1aa:	b538      	push	{r3, r4, r5, lr}
 800c1ac:	460d      	mov	r5, r1
 800c1ae:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c1b0:	b134      	cbz	r4, 800c1c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800c1b2:	682b      	ldr	r3, [r5, #0]
 800c1b4:	4621      	mov	r1, r4
 800c1b6:	689b      	ldr	r3, [r3, #8]
 800c1b8:	4628      	mov	r0, r5
 800c1ba:	4798      	blx	r3
 800c1bc:	69a4      	ldr	r4, [r4, #24]
 800c1be:	e7f7      	b.n	800c1b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800c1c0:	bd38      	pop	{r3, r4, r5, pc}

0800c1c2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800c1c2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c1c4:	b19b      	cbz	r3, 800c1ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c1c6:	428b      	cmp	r3, r1
 800c1c8:	d109      	bne.n	800c1de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800c1ca:	2100      	movs	r1, #0
 800c1cc:	699a      	ldr	r2, [r3, #24]
 800c1ce:	6159      	str	r1, [r3, #20]
 800c1d0:	6282      	str	r2, [r0, #40]	@ 0x28
 800c1d2:	b902      	cbnz	r2, 800c1d6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800c1d4:	4770      	bx	lr
 800c1d6:	6199      	str	r1, [r3, #24]
 800c1d8:	4770      	bx	lr
 800c1da:	4613      	mov	r3, r2
 800c1dc:	b13a      	cbz	r2, 800c1ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800c1de:	699a      	ldr	r2, [r3, #24]
 800c1e0:	428a      	cmp	r2, r1
 800c1e2:	d1fa      	bne.n	800c1da <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800c1e4:	698a      	ldr	r2, [r1, #24]
 800c1e6:	619a      	str	r2, [r3, #24]
 800c1e8:	2300      	movs	r3, #0
 800c1ea:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800c1ee:	4770      	bx	lr

0800c1f0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800c1f0:	b410      	push	{r4}
 800c1f2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800c1f4:	4604      	mov	r4, r0
 800c1f6:	b92b      	cbnz	r3, 800c204 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800c1f8:	6803      	ldr	r3, [r0, #0]
 800c1fa:	4611      	mov	r1, r2
 800c1fc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800c1fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c202:	4718      	bx	r3
 800c204:	b941      	cbnz	r1, 800c218 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800c206:	6193      	str	r3, [r2, #24]
 800c208:	6282      	str	r2, [r0, #40]	@ 0x28
 800c20a:	6154      	str	r4, [r2, #20]
 800c20c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c210:	4770      	bx	lr
 800c212:	4603      	mov	r3, r0
 800c214:	2800      	cmp	r0, #0
 800c216:	d0f9      	beq.n	800c20c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800c218:	4299      	cmp	r1, r3
 800c21a:	6998      	ldr	r0, [r3, #24]
 800c21c:	d1f9      	bne.n	800c212 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800c21e:	6190      	str	r0, [r2, #24]
 800c220:	618a      	str	r2, [r1, #24]
 800c222:	e7f2      	b.n	800c20a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800c224 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800c224:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c228:	461f      	mov	r7, r3
 800c22a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800c22e:	460d      	mov	r5, r1
 800c230:	4616      	mov	r6, r2
 800c232:	b103      	cbz	r3, 800c236 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800c234:	6038      	str	r0, [r7, #0]
 800c236:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c238:	b314      	cbz	r4, 800c280 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800c23a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c23e:	b1eb      	cbz	r3, 800c27c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c240:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c244:	428d      	cmp	r5, r1
 800c246:	db19      	blt.n	800c27c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c248:	8923      	ldrh	r3, [r4, #8]
 800c24a:	b289      	uxth	r1, r1
 800c24c:	440b      	add	r3, r1
 800c24e:	b21b      	sxth	r3, r3
 800c250:	429d      	cmp	r5, r3
 800c252:	da13      	bge.n	800c27c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c254:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c258:	4296      	cmp	r6, r2
 800c25a:	db0f      	blt.n	800c27c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c25c:	8963      	ldrh	r3, [r4, #10]
 800c25e:	b292      	uxth	r2, r2
 800c260:	4413      	add	r3, r2
 800c262:	b21b      	sxth	r3, r3
 800c264:	429e      	cmp	r6, r3
 800c266:	da09      	bge.n	800c27c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800c268:	6823      	ldr	r3, [r4, #0]
 800c26a:	1ab2      	subs	r2, r6, r2
 800c26c:	1a69      	subs	r1, r5, r1
 800c26e:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800c272:	b212      	sxth	r2, r2
 800c274:	463b      	mov	r3, r7
 800c276:	b209      	sxth	r1, r1
 800c278:	4620      	mov	r0, r4
 800c27a:	47c0      	blx	r8
 800c27c:	69a4      	ldr	r4, [r4, #24]
 800c27e:	e7db      	b.n	800c238 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800c280:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800c284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c288:	4c6c      	ldr	r4, [pc, #432]	@ (800c43c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800c28a:	b0a1      	sub	sp, #132	@ 0x84
 800c28c:	6824      	ldr	r4, [r4, #0]
 800c28e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800c290:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800c294:	2400      	movs	r4, #0
 800c296:	802c      	strh	r4, [r5, #0]
 800c298:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800c29a:	4606      	mov	r6, r0
 800c29c:	802c      	strh	r4, [r5, #0]
 800c29e:	601c      	str	r4, [r3, #0]
 800c2a0:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800c2a4:	9303      	str	r3, [sp, #12]
 800c2a6:	f7ff ffbd 	bl	800c224 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c2aa:	f1b9 0f03 	cmp.w	r9, #3
 800c2ae:	f340 80bf 	ble.w	800c430 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800c2b2:	4631      	mov	r1, r6
 800c2b4:	a80c      	add	r0, sp, #48	@ 0x30
 800c2b6:	f004 fc57 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c2ba:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800c2be:	9306      	str	r3, [sp, #24]
 800c2c0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800c2c4:	9307      	str	r3, [sp, #28]
 800c2c6:	9b03      	ldr	r3, [sp, #12]
 800c2c8:	f8d3 a000 	ldr.w	sl, [r3]
 800c2cc:	f1ba 0f00 	cmp.w	sl, #0
 800c2d0:	f000 80b1 	beq.w	800c436 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800c2d4:	4651      	mov	r1, sl
 800c2d6:	a810      	add	r0, sp, #64	@ 0x40
 800c2d8:	f004 fc46 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c2dc:	2002      	movs	r0, #2
 800c2de:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800c2e2:	9b01      	ldr	r3, [sp, #4]
 800c2e4:	fb91 f1f0 	sdiv	r1, r1, r0
 800c2e8:	9a06      	ldr	r2, [sp, #24]
 800c2ea:	189d      	adds	r5, r3, r2
 800c2ec:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800c2f0:	9a07      	ldr	r2, [sp, #28]
 800c2f2:	4419      	add	r1, r3
 800c2f4:	9b02      	ldr	r3, [sp, #8]
 800c2f6:	1a6d      	subs	r5, r5, r1
 800c2f8:	4413      	add	r3, r2
 800c2fa:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800c2fe:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800c302:	fb92 f2f0 	sdiv	r2, r2, r0
 800c306:	440a      	add	r2, r1
 800c308:	1a9b      	subs	r3, r3, r2
 800c30a:	435b      	muls	r3, r3
 800c30c:	fb05 3505 	mla	r5, r5, r5, r3
 800c310:	4f4b      	ldr	r7, [pc, #300]	@ (800c440 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800c312:	ac10      	add	r4, sp, #64	@ 0x40
 800c314:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c316:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c318:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c31a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c31c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800c31e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c320:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800c324:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c328:	2303      	movs	r3, #3
 800c32a:	f1b9 0f0c 	cmp.w	r9, #12
 800c32e:	bfda      	itte	le
 800c330:	f109 32ff 	addle.w	r2, r9, #4294967295
 800c334:	fb92 f8f3 	sdivle	r8, r2, r3
 800c338:	4698      	movgt	r8, r3
 800c33a:	2400      	movs	r4, #0
 800c33c:	f8cd 9000 	str.w	r9, [sp]
 800c340:	1c63      	adds	r3, r4, #1
 800c342:	9308      	str	r3, [sp, #32]
 800c344:	9b00      	ldr	r3, [sp, #0]
 800c346:	f04f 0b00 	mov.w	fp, #0
 800c34a:	fb93 f3f8 	sdiv	r3, r3, r8
 800c34e:	f004 0401 	and.w	r4, r4, #1
 800c352:	aa10      	add	r2, sp, #64	@ 0x40
 800c354:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800c358:	b29b      	uxth	r3, r3
 800c35a:	3404      	adds	r4, #4
 800c35c:	9304      	str	r3, [sp, #16]
 800c35e:	9a04      	ldr	r2, [sp, #16]
 800c360:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c364:	fb13 f302 	smulbb	r3, r3, r2
 800c368:	9a01      	ldr	r2, [sp, #4]
 800c36a:	b29b      	uxth	r3, r3
 800c36c:	1899      	adds	r1, r3, r2
 800c36e:	9305      	str	r3, [sp, #20]
 800c370:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c374:	b209      	sxth	r1, r1
 800c376:	4299      	cmp	r1, r3
 800c378:	db4d      	blt.n	800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c37a:	8932      	ldrh	r2, [r6, #8]
 800c37c:	4413      	add	r3, r2
 800c37e:	b21b      	sxth	r3, r3
 800c380:	4299      	cmp	r1, r3
 800c382:	da48      	bge.n	800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c384:	9b04      	ldr	r3, [sp, #16]
 800c386:	6827      	ldr	r7, [r4, #0]
 800c388:	fb17 f703 	smulbb	r7, r7, r3
 800c38c:	9b02      	ldr	r3, [sp, #8]
 800c38e:	b2bf      	uxth	r7, r7
 800c390:	18fa      	adds	r2, r7, r3
 800c392:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c396:	b212      	sxth	r2, r2
 800c398:	429a      	cmp	r2, r3
 800c39a:	db3c      	blt.n	800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c39c:	8970      	ldrh	r0, [r6, #10]
 800c39e:	4403      	add	r3, r0
 800c3a0:	b21b      	sxth	r3, r3
 800c3a2:	429a      	cmp	r2, r3
 800c3a4:	da37      	bge.n	800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c3a6:	2300      	movs	r3, #0
 800c3a8:	4630      	mov	r0, r6
 800c3aa:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c3ac:	ab0b      	add	r3, sp, #44	@ 0x2c
 800c3ae:	f7ff ff39 	bl	800c224 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c3b2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800c3b4:	b37a      	cbz	r2, 800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c3b6:	4552      	cmp	r2, sl
 800c3b8:	d02d      	beq.n	800c416 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800c3ba:	4611      	mov	r1, r2
 800c3bc:	a80e      	add	r0, sp, #56	@ 0x38
 800c3be:	9209      	str	r2, [sp, #36]	@ 0x24
 800c3c0:	f004 fbd2 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c3c4:	f04f 0e02 	mov.w	lr, #2
 800c3c8:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800c3cc:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800c3d0:	fb91 f1fe 	sdiv	r1, r1, lr
 800c3d4:	fb9c fcfe 	sdiv	ip, ip, lr
 800c3d8:	9a06      	ldr	r2, [sp, #24]
 800c3da:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800c3de:	9b01      	ldr	r3, [sp, #4]
 800c3e0:	4401      	add	r1, r0
 800c3e2:	4413      	add	r3, r2
 800c3e4:	1a58      	subs	r0, r3, r1
 800c3e6:	9a07      	ldr	r2, [sp, #28]
 800c3e8:	9b02      	ldr	r3, [sp, #8]
 800c3ea:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800c3ee:	4413      	add	r3, r2
 800c3f0:	448c      	add	ip, r1
 800c3f2:	eba3 030c 	sub.w	r3, r3, ip
 800c3f6:	435b      	muls	r3, r3
 800c3f8:	fb00 3300 	mla	r3, r0, r0, r3
 800c3fc:	42ab      	cmp	r3, r5
 800c3fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c400:	d208      	bcs.n	800c414 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800c402:	461d      	mov	r5, r3
 800c404:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800c406:	9803      	ldr	r0, [sp, #12]
 800c408:	6001      	str	r1, [r0, #0]
 800c40a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800c40c:	9805      	ldr	r0, [sp, #20]
 800c40e:	8008      	strh	r0, [r1, #0]
 800c410:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800c412:	800f      	strh	r7, [r1, #0]
 800c414:	4692      	mov	sl, r2
 800c416:	f10b 0b01 	add.w	fp, fp, #1
 800c41a:	f1bb 0f04 	cmp.w	fp, #4
 800c41e:	f104 0408 	add.w	r4, r4, #8
 800c422:	d19c      	bne.n	800c35e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800c424:	9b00      	ldr	r3, [sp, #0]
 800c426:	9c08      	ldr	r4, [sp, #32]
 800c428:	444b      	add	r3, r9
 800c42a:	4544      	cmp	r4, r8
 800c42c:	9300      	str	r3, [sp, #0]
 800c42e:	d187      	bne.n	800c340 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800c430:	b021      	add	sp, #132	@ 0x84
 800c432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c436:	f04f 35ff 	mov.w	r5, #4294967295
 800c43a:	e769      	b.n	800c310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800c43c:	20002230 	.word	0x20002230
 800c440:	08023178 	.word	0x08023178

0800c444 <_ZN8touchgfx4RectaNERKS0_>:
 800c444:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c448:	f9b1 7000 	ldrsh.w	r7, [r1]
 800c44c:	888c      	ldrh	r4, [r1, #4]
 800c44e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800c452:	443c      	add	r4, r7
 800c454:	b2a4      	uxth	r4, r4
 800c456:	fa0f f884 	sxth.w	r8, r4
 800c45a:	45c1      	cmp	r9, r8
 800c45c:	da2f      	bge.n	800c4be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c45e:	8882      	ldrh	r2, [r0, #4]
 800c460:	444a      	add	r2, r9
 800c462:	b292      	uxth	r2, r2
 800c464:	fa0f fe82 	sxth.w	lr, r2
 800c468:	4577      	cmp	r7, lr
 800c46a:	da28      	bge.n	800c4be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c46c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c470:	88cb      	ldrh	r3, [r1, #6]
 800c472:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800c476:	442b      	add	r3, r5
 800c478:	b21b      	sxth	r3, r3
 800c47a:	429e      	cmp	r6, r3
 800c47c:	da1f      	bge.n	800c4be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c47e:	88c3      	ldrh	r3, [r0, #6]
 800c480:	4433      	add	r3, r6
 800c482:	b29b      	uxth	r3, r3
 800c484:	fa0f fc83 	sxth.w	ip, r3
 800c488:	4565      	cmp	r5, ip
 800c48a:	da18      	bge.n	800c4be <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800c48c:	454f      	cmp	r7, r9
 800c48e:	bfb8      	it	lt
 800c490:	464f      	movlt	r7, r9
 800c492:	42b5      	cmp	r5, r6
 800c494:	bfb8      	it	lt
 800c496:	4635      	movlt	r5, r6
 800c498:	45f0      	cmp	r8, lr
 800c49a:	bfd8      	it	le
 800c49c:	4622      	movle	r2, r4
 800c49e:	1bd2      	subs	r2, r2, r7
 800c4a0:	8082      	strh	r2, [r0, #4]
 800c4a2:	884a      	ldrh	r2, [r1, #2]
 800c4a4:	88c9      	ldrh	r1, [r1, #6]
 800c4a6:	8007      	strh	r7, [r0, #0]
 800c4a8:	440a      	add	r2, r1
 800c4aa:	b292      	uxth	r2, r2
 800c4ac:	b211      	sxth	r1, r2
 800c4ae:	458c      	cmp	ip, r1
 800c4b0:	bfa8      	it	ge
 800c4b2:	4613      	movge	r3, r2
 800c4b4:	1b5b      	subs	r3, r3, r5
 800c4b6:	80c3      	strh	r3, [r0, #6]
 800c4b8:	8045      	strh	r5, [r0, #2]
 800c4ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c4be:	2300      	movs	r3, #0
 800c4c0:	8003      	strh	r3, [r0, #0]
 800c4c2:	8043      	strh	r3, [r0, #2]
 800c4c4:	8083      	strh	r3, [r0, #4]
 800c4c6:	80c3      	strh	r3, [r0, #6]
 800c4c8:	e7f7      	b.n	800c4ba <_ZN8touchgfx4RectaNERKS0_+0x76>

0800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>:
 800c4ca:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c4ce:	2b00      	cmp	r3, #0
 800c4d0:	dd06      	ble.n	800c4e0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800c4d2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800c4d6:	2800      	cmp	r0, #0
 800c4d8:	bfcc      	ite	gt
 800c4da:	2000      	movgt	r0, #0
 800c4dc:	2001      	movle	r0, #1
 800c4de:	4770      	bx	lr
 800c4e0:	2001      	movs	r0, #1
 800c4e2:	4770      	bx	lr

0800c4e4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800c4e4:	2300      	movs	r3, #0
 800c4e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4ea:	4604      	mov	r4, r0
 800c4ec:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800c4ee:	8003      	strh	r3, [r0, #0]
 800c4f0:	8043      	strh	r3, [r0, #2]
 800c4f2:	8083      	strh	r3, [r0, #4]
 800c4f4:	80c3      	strh	r3, [r0, #6]
 800c4f6:	2d00      	cmp	r5, #0
 800c4f8:	d040      	beq.n	800c57c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800c4fa:	1d28      	adds	r0, r5, #4
 800c4fc:	f7ff ffe5 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c500:	b988      	cbnz	r0, 800c526 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c502:	4620      	mov	r0, r4
 800c504:	f7ff ffe1 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c508:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800c50c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c510:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800c514:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800c518:	b138      	cbz	r0, 800c52a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800c51a:	8022      	strh	r2, [r4, #0]
 800c51c:	8063      	strh	r3, [r4, #2]
 800c51e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800c522:	f8a4 c006 	strh.w	ip, [r4, #6]
 800c526:	69ad      	ldr	r5, [r5, #24]
 800c528:	e7e5      	b.n	800c4f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800c52a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c52e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800c532:	4290      	cmp	r0, r2
 800c534:	4607      	mov	r7, r0
 800c536:	bfa8      	it	ge
 800c538:	4617      	movge	r7, r2
 800c53a:	4299      	cmp	r1, r3
 800c53c:	460e      	mov	r6, r1
 800c53e:	bfa8      	it	ge
 800c540:	461e      	movge	r6, r3
 800c542:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800c546:	4472      	add	r2, lr
 800c548:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800c54c:	4440      	add	r0, r8
 800c54e:	4471      	add	r1, lr
 800c550:	4463      	add	r3, ip
 800c552:	b200      	sxth	r0, r0
 800c554:	b212      	sxth	r2, r2
 800c556:	b209      	sxth	r1, r1
 800c558:	b21b      	sxth	r3, r3
 800c55a:	4290      	cmp	r0, r2
 800c55c:	bfac      	ite	ge
 800c55e:	ebc7 0200 	rsbge	r2, r7, r0
 800c562:	ebc7 0202 	rsblt	r2, r7, r2
 800c566:	4299      	cmp	r1, r3
 800c568:	bfac      	ite	ge
 800c56a:	ebc6 0301 	rsbge	r3, r6, r1
 800c56e:	ebc6 0303 	rsblt	r3, r6, r3
 800c572:	8027      	strh	r7, [r4, #0]
 800c574:	8066      	strh	r6, [r4, #2]
 800c576:	80a2      	strh	r2, [r4, #4]
 800c578:	80e3      	strh	r3, [r4, #6]
 800c57a:	e7d4      	b.n	800c526 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800c57c:	4620      	mov	r0, r4
 800c57e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c582 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800c582:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c586:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c58a:	b383      	cbz	r3, 800c5ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c58c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c58e:	b374      	cbz	r4, 800c5ee <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800c590:	f9b1 5000 	ldrsh.w	r5, [r1]
 800c594:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800c598:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800c59c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800c5a0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c5a4:	b303      	cbz	r3, 800c5e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c5a6:	4668      	mov	r0, sp
 800c5a8:	1d21      	adds	r1, r4, #4
 800c5aa:	f8ad 5000 	strh.w	r5, [sp]
 800c5ae:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c5b2:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c5b6:	f8ad 8006 	strh.w	r8, [sp, #6]
 800c5ba:	f7ff ff43 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 800c5be:	4668      	mov	r0, sp
 800c5c0:	f7ff ff83 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c5c4:	b980      	cbnz	r0, 800c5e8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800c5c6:	f8bd 3000 	ldrh.w	r3, [sp]
 800c5ca:	88a2      	ldrh	r2, [r4, #4]
 800c5cc:	4669      	mov	r1, sp
 800c5ce:	1a9b      	subs	r3, r3, r2
 800c5d0:	f8ad 3000 	strh.w	r3, [sp]
 800c5d4:	88e2      	ldrh	r2, [r4, #6]
 800c5d6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c5da:	4620      	mov	r0, r4
 800c5dc:	1a9b      	subs	r3, r3, r2
 800c5de:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c5e2:	6823      	ldr	r3, [r4, #0]
 800c5e4:	689b      	ldr	r3, [r3, #8]
 800c5e6:	4798      	blx	r3
 800c5e8:	69a4      	ldr	r4, [r4, #24]
 800c5ea:	2c00      	cmp	r4, #0
 800c5ec:	d1d8      	bne.n	800c5a0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800c5ee:	b002      	add	sp, #8
 800c5f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c5f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800c5f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c5f6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800c5fa:	460d      	mov	r5, r1
 800c5fc:	4616      	mov	r6, r2
 800c5fe:	b323      	cbz	r3, 800c64a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c600:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800c602:	b314      	cbz	r4, 800c64a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800c604:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800c608:	b1eb      	cbz	r3, 800c646 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c60a:	466b      	mov	r3, sp
 800c60c:	6828      	ldr	r0, [r5, #0]
 800c60e:	6869      	ldr	r1, [r5, #4]
 800c610:	c303      	stmia	r3!, {r0, r1}
 800c612:	4668      	mov	r0, sp
 800c614:	1d21      	adds	r1, r4, #4
 800c616:	f7ff ff15 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 800c61a:	4668      	mov	r0, sp
 800c61c:	f7ff ff55 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800c620:	b988      	cbnz	r0, 800c646 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800c622:	f8bd 3000 	ldrh.w	r3, [sp]
 800c626:	88a2      	ldrh	r2, [r4, #4]
 800c628:	4669      	mov	r1, sp
 800c62a:	1a9b      	subs	r3, r3, r2
 800c62c:	f8ad 3000 	strh.w	r3, [sp]
 800c630:	88e2      	ldrh	r2, [r4, #6]
 800c632:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c636:	4620      	mov	r0, r4
 800c638:	1a9b      	subs	r3, r3, r2
 800c63a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c63e:	6823      	ldr	r3, [r4, #0]
 800c640:	4632      	mov	r2, r6
 800c642:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c644:	4798      	blx	r3
 800c646:	69a4      	ldr	r4, [r4, #24]
 800c648:	e7db      	b.n	800c602 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c64a:	b002      	add	sp, #8
 800c64c:	bd70      	pop	{r4, r5, r6, pc}

0800c64e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c64e:	b513      	push	{r0, r1, r4, lr}
 800c650:	6803      	ldr	r3, [r0, #0]
 800c652:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800c656:	2300      	movs	r3, #0
 800c658:	e9cd 3300 	strd	r3, r3, [sp]
 800c65c:	466b      	mov	r3, sp
 800c65e:	47a0      	blx	r4
 800c660:	b002      	add	sp, #8
 800c662:	bd10      	pop	{r4, pc}

0800c664 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c664:	2301      	movs	r3, #1
 800c666:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c66a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c66e:	4770      	bx	lr

0800c670 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c670:	2301      	movs	r3, #1
 800c672:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800c676:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800c67a:	4770      	bx	lr

0800c67c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c67c:	2201      	movs	r2, #1
 800c67e:	6843      	ldr	r3, [r0, #4]
 800c680:	725a      	strb	r2, [r3, #9]
 800c682:	6840      	ldr	r0, [r0, #4]
 800c684:	6803      	ldr	r3, [r0, #0]
 800c686:	691b      	ldr	r3, [r3, #16]
 800c688:	4718      	bx	r3

0800c68a <_ZN8touchgfx3HAL8flushDMAEv>:
 800c68a:	6840      	ldr	r0, [r0, #4]
 800c68c:	6803      	ldr	r3, [r0, #0]
 800c68e:	689b      	ldr	r3, [r3, #8]
 800c690:	4718      	bx	r3

0800c692 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c692:	b530      	push	{r4, r5, lr}
 800c694:	b08b      	sub	sp, #44	@ 0x2c
 800c696:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800c69a:	6804      	ldr	r4, [r0, #0]
 800c69c:	9509      	str	r5, [sp, #36]	@ 0x24
 800c69e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800c6a2:	9508      	str	r5, [sp, #32]
 800c6a4:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800c6a8:	9507      	str	r5, [sp, #28]
 800c6aa:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800c6ae:	9506      	str	r5, [sp, #24]
 800c6b0:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800c6b4:	9505      	str	r5, [sp, #20]
 800c6b6:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800c6ba:	9504      	str	r5, [sp, #16]
 800c6bc:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800c6c0:	9503      	str	r5, [sp, #12]
 800c6c2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800c6c6:	9502      	str	r5, [sp, #8]
 800c6c8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800c6cc:	e9cd 3500 	strd	r3, r5, [sp]
 800c6d0:	4613      	mov	r3, r2
 800c6d2:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800c6d4:	2200      	movs	r2, #0
 800c6d6:	47a0      	blx	r4
 800c6d8:	b00b      	add	sp, #44	@ 0x2c
 800c6da:	bd30      	pop	{r4, r5, pc}

0800c6dc <_ZN8touchgfx3HAL10beginFrameEv>:
 800c6dc:	4b04      	ldr	r3, [pc, #16]	@ (800c6f0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c6de:	781b      	ldrb	r3, [r3, #0]
 800c6e0:	b123      	cbz	r3, 800c6ec <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c6e2:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800c6e6:	f080 0001 	eor.w	r0, r0, #1
 800c6ea:	4770      	bx	lr
 800c6ec:	2001      	movs	r0, #1
 800c6ee:	4770      	bx	lr
 800c6f0:	2000222e 	.word	0x2000222e

0800c6f4 <_ZN8touchgfx3HAL8endFrameEv>:
 800c6f4:	b510      	push	{r4, lr}
 800c6f6:	4604      	mov	r4, r0
 800c6f8:	6840      	ldr	r0, [r0, #4]
 800c6fa:	6803      	ldr	r3, [r0, #0]
 800c6fc:	689b      	ldr	r3, [r3, #8]
 800c6fe:	4798      	blx	r3
 800c700:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800c704:	b113      	cbz	r3, 800c70c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c706:	2301      	movs	r3, #1
 800c708:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800c70c:	bd10      	pop	{r4, pc}

0800c70e <_ZN8touchgfx3HAL10initializeEv>:
 800c70e:	b510      	push	{r4, lr}
 800c710:	4604      	mov	r4, r0
 800c712:	f7fd ffc5 	bl	800a6a0 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c716:	f7fd fc8f 	bl	800a038 <_ZN8touchgfx4GPIO4initEv>
 800c71a:	6860      	ldr	r0, [r4, #4]
 800c71c:	6803      	ldr	r3, [r0, #0]
 800c71e:	68db      	ldr	r3, [r3, #12]
 800c720:	4798      	blx	r3
 800c722:	68e0      	ldr	r0, [r4, #12]
 800c724:	6803      	ldr	r3, [r0, #0]
 800c726:	689b      	ldr	r3, [r3, #8]
 800c728:	4798      	blx	r3
 800c72a:	6823      	ldr	r3, [r4, #0]
 800c72c:	4620      	mov	r0, r4
 800c72e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c732:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800c734:	4718      	bx	r3

0800c736 <_ZN8touchgfx3HAL9taskEntryEv>:
 800c736:	4604      	mov	r4, r0
 800c738:	b508      	push	{r3, lr}
 800c73a:	6803      	ldr	r3, [r0, #0]
 800c73c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800c740:	4798      	blx	r3
 800c742:	6823      	ldr	r3, [r4, #0]
 800c744:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800c746:	4620      	mov	r0, r4
 800c748:	4798      	blx	r3
 800c74a:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c74e:	2b02      	cmp	r3, #2
 800c750:	d001      	beq.n	800c756 <_ZN8touchgfx3HAL9taskEntryEv+0x20>
 800c752:	f7fe f819 	bl	800a788 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c756:	6823      	ldr	r3, [r4, #0]
 800c758:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800c75a:	e7f4      	b.n	800c746 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800c75c <_ZN8touchgfx3HAL4tickEv>:
 800c75c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c75e:	6803      	ldr	r3, [r0, #0]
 800c760:	4604      	mov	r4, r0
 800c762:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800c766:	4798      	blx	r3
 800c768:	4d60      	ldr	r5, [pc, #384]	@ (800c8ec <_ZN8touchgfx3HAL4tickEv+0x190>)
 800c76a:	2800      	cmp	r0, #0
 800c76c:	f000 809e 	beq.w	800c8ac <_ZN8touchgfx3HAL4tickEv+0x150>
 800c770:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c774:	2b02      	cmp	r3, #2
 800c776:	d002      	beq.n	800c77e <_ZN8touchgfx3HAL4tickEv+0x22>
 800c778:	2001      	movs	r0, #1
 800c77a:	f7fd fc65 	bl	800a048 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c77e:	2600      	movs	r6, #0
 800c780:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800c784:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800c788:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c78c:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800c790:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800c794:	b133      	cbz	r3, 800c7a4 <_ZN8touchgfx3HAL4tickEv+0x48>
 800c796:	6823      	ldr	r3, [r4, #0]
 800c798:	4620      	mov	r0, r4
 800c79a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800c79e:	4798      	blx	r3
 800c7a0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800c7a4:	2601      	movs	r6, #1
 800c7a6:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800c7aa:	6862      	ldr	r2, [r4, #4]
 800c7ac:	f083 0301 	eor.w	r3, r3, #1
 800c7b0:	7253      	strb	r3, [r2, #9]
 800c7b2:	702e      	strb	r6, [r5, #0]
 800c7b4:	f002 ff8a 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 800c7b8:	6803      	ldr	r3, [r0, #0]
 800c7ba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800c7bc:	4798      	blx	r3
 800c7be:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c7c2:	b90b      	cbnz	r3, 800c7c8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800c7c4:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800c7c8:	f002 ff80 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 800c7cc:	6803      	ldr	r3, [r0, #0]
 800c7ce:	695b      	ldr	r3, [r3, #20]
 800c7d0:	4798      	blx	r3
 800c7d2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c7d4:	6803      	ldr	r3, [r0, #0]
 800c7d6:	691b      	ldr	r3, [r3, #16]
 800c7d8:	4798      	blx	r3
 800c7da:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800c7de:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800c7e2:	3b01      	subs	r3, #1
 800c7e4:	b2db      	uxtb	r3, r3
 800c7e6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800c7ea:	b10a      	cbz	r2, 800c7f0 <_ZN8touchgfx3HAL4tickEv+0x94>
 800c7ec:	2b00      	cmp	r3, #0
 800c7ee:	d1eb      	bne.n	800c7c8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 800c7f0:	4a3f      	ldr	r2, [pc, #252]	@ (800c8f0 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800c7f2:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800c7f6:	7813      	ldrb	r3, [r2, #0]
 800c7f8:	3301      	adds	r3, #1
 800c7fa:	b25b      	sxtb	r3, r3
 800c7fc:	4299      	cmp	r1, r3
 800c7fe:	7013      	strb	r3, [r2, #0]
 800c800:	dc10      	bgt.n	800c824 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800c802:	2300      	movs	r3, #0
 800c804:	68e0      	ldr	r0, [r4, #12]
 800c806:	7013      	strb	r3, [r2, #0]
 800c808:	6803      	ldr	r3, [r0, #0]
 800c80a:	aa03      	add	r2, sp, #12
 800c80c:	68db      	ldr	r3, [r3, #12]
 800c80e:	a902      	add	r1, sp, #8
 800c810:	4798      	blx	r3
 800c812:	6823      	ldr	r3, [r4, #0]
 800c814:	2800      	cmp	r0, #0
 800c816:	d059      	beq.n	800c8cc <_ZN8touchgfx3HAL4tickEv+0x170>
 800c818:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c81c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800c820:	4620      	mov	r0, r4
 800c822:	4798      	blx	r3
 800c824:	2300      	movs	r3, #0
 800c826:	6960      	ldr	r0, [r4, #20]
 800c828:	f88d 3007 	strb.w	r3, [sp, #7]
 800c82c:	b158      	cbz	r0, 800c846 <_ZN8touchgfx3HAL4tickEv+0xea>
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	f10d 0107 	add.w	r1, sp, #7
 800c834:	68db      	ldr	r3, [r3, #12]
 800c836:	4798      	blx	r3
 800c838:	b128      	cbz	r0, 800c846 <_ZN8touchgfx3HAL4tickEv+0xea>
 800c83a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800c83c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c840:	6803      	ldr	r3, [r0, #0]
 800c842:	68db      	ldr	r3, [r3, #12]
 800c844:	4798      	blx	r3
 800c846:	f104 001c 	add.w	r0, r4, #28
 800c84a:	f014 fb4b 	bl	8020ee4 <_ZN8touchgfx8Gestures4tickEv>
 800c84e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800c852:	b30b      	cbz	r3, 800c898 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800c854:	6920      	ldr	r0, [r4, #16]
 800c856:	6803      	ldr	r3, [r0, #0]
 800c858:	691b      	ldr	r3, [r3, #16]
 800c85a:	4798      	blx	r3
 800c85c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c85e:	4606      	mov	r6, r0
 800c860:	b903      	cbnz	r3, 800c864 <_ZN8touchgfx3HAL4tickEv+0x108>
 800c862:	6760      	str	r0, [r4, #116]	@ 0x74
 800c864:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c866:	4a23      	ldr	r2, [pc, #140]	@ (800c8f4 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800c868:	1af3      	subs	r3, r6, r3
 800c86a:	4293      	cmp	r3, r2
 800c86c:	d914      	bls.n	800c898 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800c86e:	6920      	ldr	r0, [r4, #16]
 800c870:	6803      	ldr	r3, [r0, #0]
 800c872:	699b      	ldr	r3, [r3, #24]
 800c874:	4798      	blx	r3
 800c876:	2264      	movs	r2, #100	@ 0x64
 800c878:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800c87a:	1af3      	subs	r3, r6, r3
 800c87c:	fbb3 f3f2 	udiv	r3, r3, r2
 800c880:	fbb0 f0f3 	udiv	r0, r0, r3
 800c884:	2800      	cmp	r0, #0
 800c886:	dc26      	bgt.n	800c8d6 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800c888:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800c88c:	6920      	ldr	r0, [r4, #16]
 800c88e:	2100      	movs	r1, #0
 800c890:	6803      	ldr	r3, [r0, #0]
 800c892:	69db      	ldr	r3, [r3, #28]
 800c894:	4798      	blx	r3
 800c896:	6766      	str	r6, [r4, #116]	@ 0x74
 800c898:	6823      	ldr	r3, [r4, #0]
 800c89a:	4620      	mov	r0, r4
 800c89c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800c8a0:	4798      	blx	r3
 800c8a2:	f002 ff13 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 800c8a6:	6803      	ldr	r3, [r0, #0]
 800c8a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c8aa:	4798      	blx	r3
 800c8ac:	6823      	ldr	r3, [r4, #0]
 800c8ae:	4620      	mov	r0, r4
 800c8b0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800c8b4:	4798      	blx	r3
 800c8b6:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800c8ba:	2b02      	cmp	r3, #2
 800c8bc:	d002      	beq.n	800c8c4 <_ZN8touchgfx3HAL4tickEv+0x168>
 800c8be:	2001      	movs	r0, #1
 800c8c0:	f7fd fbde 	bl	800a080 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c8c4:	2300      	movs	r3, #0
 800c8c6:	702b      	strb	r3, [r5, #0]
 800c8c8:	b004      	add	sp, #16
 800c8ca:	bd70      	pop	{r4, r5, r6, pc}
 800c8cc:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800c8d0:	4620      	mov	r0, r4
 800c8d2:	4798      	blx	r3
 800c8d4:	e7a6      	b.n	800c824 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800c8d6:	2863      	cmp	r0, #99	@ 0x63
 800c8d8:	bfcb      	itete	gt
 800c8da:	2300      	movgt	r3, #0
 800c8dc:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800c8e0:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800c8e4:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800c8e8:	e7d0      	b.n	800c88c <_ZN8touchgfx3HAL4tickEv+0x130>
 800c8ea:	bf00      	nop
 800c8ec:	20002234 	.word	0x20002234
 800c8f0:	20002235 	.word	0x20002235
 800c8f4:	05f5e100 	.word	0x05f5e100

0800c8f8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c8f8:	b510      	push	{r4, lr}
 800c8fa:	4604      	mov	r4, r0
 800c8fc:	f7fd fef8 	bl	800a6f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800c900:	2200      	movs	r2, #0
 800c902:	6863      	ldr	r3, [r4, #4]
 800c904:	729a      	strb	r2, [r3, #10]
 800c906:	bd10      	pop	{r4, pc}

0800c908 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c908:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800c90a:	301c      	adds	r0, #28
 800c90c:	f014 bae8 	b.w	8020ee0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c910 <_ZN8touchgfx3HAL5touchEll>:
 800c910:	b530      	push	{r4, r5, lr}
 800c912:	4604      	mov	r4, r0
 800c914:	b087      	sub	sp, #28
 800c916:	a804      	add	r0, sp, #16
 800c918:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c91c:	f002 fcc8 	bl	800f2b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c920:	9b04      	ldr	r3, [sp, #16]
 800c922:	a906      	add	r1, sp, #24
 800c924:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c928:	9b05      	ldr	r3, [sp, #20]
 800c92a:	a803      	add	r0, sp, #12
 800c92c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c930:	f002 fd10 	bl	800f354 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c934:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800c938:	f104 001c 	add.w	r0, r4, #28
 800c93c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c940:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c944:	b189      	cbz	r1, 800c96a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c946:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800c94a:	9300      	str	r3, [sp, #0]
 800c94c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800c950:	4613      	mov	r3, r2
 800c952:	462a      	mov	r2, r5
 800c954:	f014 fad4 	bl	8020f00 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c958:	b128      	cbz	r0, 800c966 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c95a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c95e:	6623      	str	r3, [r4, #96]	@ 0x60
 800c960:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c964:	6663      	str	r3, [r4, #100]	@ 0x64
 800c966:	b007      	add	sp, #28
 800c968:	bd30      	pop	{r4, r5, pc}
 800c96a:	f014 fb09 	bl	8020f80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c96e:	2301      	movs	r3, #1
 800c970:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800c974:	e7f1      	b.n	800c95a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c976 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c976:	b510      	push	{r4, lr}
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d046      	beq.n	800ca0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c97c:	ea81 0002 	eor.w	r0, r1, r2
 800c980:	07c4      	lsls	r4, r0, #31
 800c982:	d508      	bpl.n	800c996 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c984:	440b      	add	r3, r1
 800c986:	3a01      	subs	r2, #1
 800c988:	428b      	cmp	r3, r1
 800c98a:	d93e      	bls.n	800ca0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c98c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c990:	f801 0b01 	strb.w	r0, [r1], #1
 800c994:	e7f8      	b.n	800c988 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c996:	07d0      	lsls	r0, r2, #31
 800c998:	bf42      	ittt	mi
 800c99a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c99e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c9a2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c9a6:	2b01      	cmp	r3, #1
 800c9a8:	d911      	bls.n	800c9ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c9aa:	ea81 0402 	eor.w	r4, r1, r2
 800c9ae:	07a4      	lsls	r4, r4, #30
 800c9b0:	4610      	mov	r0, r2
 800c9b2:	d022      	beq.n	800c9fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c9b4:	f023 0401 	bic.w	r4, r3, #1
 800c9b8:	440c      	add	r4, r1
 800c9ba:	428c      	cmp	r4, r1
 800c9bc:	4602      	mov	r2, r0
 800c9be:	d904      	bls.n	800c9ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c9c0:	8812      	ldrh	r2, [r2, #0]
 800c9c2:	3002      	adds	r0, #2
 800c9c4:	f821 2b02 	strh.w	r2, [r1], #2
 800c9c8:	e7f7      	b.n	800c9ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c9ca:	f003 0301 	and.w	r3, r3, #1
 800c9ce:	f023 0003 	bic.w	r0, r3, #3
 800c9d2:	4408      	add	r0, r1
 800c9d4:	4288      	cmp	r0, r1
 800c9d6:	4614      	mov	r4, r2
 800c9d8:	d904      	bls.n	800c9e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c9da:	6824      	ldr	r4, [r4, #0]
 800c9dc:	3204      	adds	r2, #4
 800c9de:	f841 4b04 	str.w	r4, [r1], #4
 800c9e2:	e7f7      	b.n	800c9d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c9e4:	f003 0303 	and.w	r3, r3, #3
 800c9e8:	440b      	add	r3, r1
 800c9ea:	3a01      	subs	r2, #1
 800c9ec:	428b      	cmp	r3, r1
 800c9ee:	d90c      	bls.n	800ca0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c9f0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c9f4:	f801 0b01 	strb.w	r0, [r1], #1
 800c9f8:	e7f8      	b.n	800c9ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c9fa:	0790      	lsls	r0, r2, #30
 800c9fc:	d0e7      	beq.n	800c9ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c9fe:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ca02:	3b02      	subs	r3, #2
 800ca04:	f821 0b02 	strh.w	r0, [r1], #2
 800ca08:	e7e1      	b.n	800c9ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ca0a:	2001      	movs	r0, #1
 800ca0c:	bd10      	pop	{r4, pc}

0800ca0e <_ZN8touchgfx3HAL7noTouchEv>:
 800ca0e:	b510      	push	{r4, lr}
 800ca10:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800ca14:	4604      	mov	r4, r0
 800ca16:	b153      	cbz	r3, 800ca2e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ca18:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800ca1c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800ca20:	2101      	movs	r1, #1
 800ca22:	301c      	adds	r0, #28
 800ca24:	f014 faac 	bl	8020f80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ca28:	2300      	movs	r3, #0
 800ca2a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800ca2e:	bd10      	pop	{r4, pc}

0800ca30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ca30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca34:	4604      	mov	r4, r0
 800ca36:	2000      	movs	r0, #0
 800ca38:	b085      	sub	sp, #20
 800ca3a:	ad04      	add	r5, sp, #16
 800ca3c:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ca40:	69a0      	ldr	r0, [r4, #24]
 800ca42:	4699      	mov	r9, r3
 800ca44:	6806      	ldr	r6, [r0, #0]
 800ca46:	9501      	str	r5, [sp, #4]
 800ca48:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800ca4c:	460f      	mov	r7, r1
 800ca4e:	9500      	str	r5, [sp, #0]
 800ca50:	6835      	ldr	r5, [r6, #0]
 800ca52:	4690      	mov	r8, r2
 800ca54:	47a8      	blx	r5
 800ca56:	4d10      	ldr	r5, [pc, #64]	@ (800ca98 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800ca58:	4606      	mov	r6, r0
 800ca5a:	f8a5 9000 	strh.w	r9, [r5]
 800ca5e:	f7fb fad5 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800ca62:	6803      	ldr	r3, [r0, #0]
 800ca64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ca66:	4798      	blx	r3
 800ca68:	b128      	cbz	r0, 800ca76 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800ca6a:	2801      	cmp	r0, #1
 800ca6c:	d00b      	beq.n	800ca86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800ca6e:	4630      	mov	r0, r6
 800ca70:	b005      	add	sp, #20
 800ca72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca76:	882b      	ldrh	r3, [r5, #0]
 800ca78:	fb08 7203 	mla	r2, r8, r3, r7
 800ca7c:	9b03      	ldr	r3, [sp, #12]
 800ca7e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800ca82:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800ca84:	e7f3      	b.n	800ca6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ca86:	882a      	ldrh	r2, [r5, #0]
 800ca88:	9b03      	ldr	r3, [sp, #12]
 800ca8a:	fb08 7202 	mla	r2, r8, r2, r7
 800ca8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ca92:	1a9a      	subs	r2, r3, r2
 800ca94:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800ca96:	e7ea      	b.n	800ca6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800ca98:	2000222a 	.word	0x2000222a

0800ca9c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800ca9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca9e:	4b15      	ldr	r3, [pc, #84]	@ (800caf4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800caa0:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800caa4:	881b      	ldrh	r3, [r3, #0]
 800caa6:	460f      	mov	r7, r1
 800caa8:	fb93 f4f4 	sdiv	r4, r3, r4
 800caac:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800caae:	4606      	mov	r6, r0
 800cab0:	f7fb faac 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800cab4:	6803      	ldr	r3, [r0, #0]
 800cab6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cab8:	4798      	blx	r3
 800caba:	2801      	cmp	r0, #1
 800cabc:	d00b      	beq.n	800cad6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800cabe:	d303      	bcc.n	800cac8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800cac0:	2802      	cmp	r0, #2
 800cac2:	d010      	beq.n	800cae6 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800cac4:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800cac6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cac8:	437c      	muls	r4, r7
 800caca:	4b0b      	ldr	r3, [pc, #44]	@ (800caf8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800cacc:	8819      	ldrh	r1, [r3, #0]
 800cace:	434c      	muls	r4, r1
 800cad0:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800cad4:	e7f6      	b.n	800cac4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800cad6:	437c      	muls	r4, r7
 800cad8:	4b07      	ldr	r3, [pc, #28]	@ (800caf8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800cada:	8819      	ldrh	r1, [r3, #0]
 800cadc:	434c      	muls	r4, r1
 800cade:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800cae2:	1b2d      	subs	r5, r5, r4
 800cae4:	e7ee      	b.n	800cac4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800cae6:	437c      	muls	r4, r7
 800cae8:	4b03      	ldr	r3, [pc, #12]	@ (800caf8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800caea:	8819      	ldrh	r1, [r3, #0]
 800caec:	434c      	muls	r4, r1
 800caee:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800caf2:	e7e7      	b.n	800cac4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800caf4:	2000222c 	.word	0x2000222c
 800caf8:	2000222a 	.word	0x2000222a

0800cafc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800cafc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cafe:	b08b      	sub	sp, #44	@ 0x2c
 800cb00:	4617      	mov	r7, r2
 800cb02:	4604      	mov	r4, r0
 800cb04:	460e      	mov	r6, r1
 800cb06:	461d      	mov	r5, r3
 800cb08:	f7fb fa80 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800cb0c:	6803      	ldr	r3, [r0, #0]
 800cb0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cb10:	4798      	blx	r3
 800cb12:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800cb16:	9007      	str	r0, [sp, #28]
 800cb18:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cb1c:	4b0d      	ldr	r3, [pc, #52]	@ (800cb54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800cb1e:	6822      	ldr	r2, [r4, #0]
 800cb20:	881b      	ldrh	r3, [r3, #0]
 800cb22:	4631      	mov	r1, r6
 800cb24:	9306      	str	r3, [sp, #24]
 800cb26:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800cb2a:	4620      	mov	r0, r4
 800cb2c:	9305      	str	r3, [sp, #20]
 800cb2e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800cb32:	9304      	str	r3, [sp, #16]
 800cb34:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cb38:	9303      	str	r3, [sp, #12]
 800cb3a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cb3e:	9302      	str	r3, [sp, #8]
 800cb40:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800cb44:	e9cd 5300 	strd	r5, r3, [sp]
 800cb48:	463b      	mov	r3, r7
 800cb4a:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800cb4c:	2200      	movs	r2, #0
 800cb4e:	47a8      	blx	r5
 800cb50:	b00b      	add	sp, #44	@ 0x2c
 800cb52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb54:	2000222a 	.word	0x2000222a

0800cb58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800cb58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb5c:	4698      	mov	r8, r3
 800cb5e:	6803      	ldr	r3, [r0, #0]
 800cb60:	b08b      	sub	sp, #44	@ 0x2c
 800cb62:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800cb64:	4b14      	ldr	r3, [pc, #80]	@ (800cbb8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800cb66:	4617      	mov	r7, r2
 800cb68:	f8b3 9000 	ldrh.w	r9, [r3]
 800cb6c:	460e      	mov	r6, r1
 800cb6e:	4604      	mov	r4, r0
 800cb70:	f7fb fa4c 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800cb74:	6803      	ldr	r3, [r0, #0]
 800cb76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cb78:	4798      	blx	r3
 800cb7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800cb7e:	2200      	movs	r2, #0
 800cb80:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800cb84:	2302      	movs	r3, #2
 800cb86:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800cb8a:	2301      	movs	r3, #1
 800cb8c:	9305      	str	r3, [sp, #20]
 800cb8e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800cb92:	4631      	mov	r1, r6
 800cb94:	9304      	str	r3, [sp, #16]
 800cb96:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800cb9a:	4620      	mov	r0, r4
 800cb9c:	9303      	str	r3, [sp, #12]
 800cb9e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800cba2:	9302      	str	r3, [sp, #8]
 800cba4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cba8:	e9cd 8300 	strd	r8, r3, [sp]
 800cbac:	463b      	mov	r3, r7
 800cbae:	47a8      	blx	r5
 800cbb0:	b00b      	add	sp, #44	@ 0x2c
 800cbb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbb6:	bf00      	nop
 800cbb8:	2000222a 	.word	0x2000222a

0800cbbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800cbbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbc0:	4698      	mov	r8, r3
 800cbc2:	6803      	ldr	r3, [r0, #0]
 800cbc4:	b087      	sub	sp, #28
 800cbc6:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800cbc8:	4b10      	ldr	r3, [pc, #64]	@ (800cc0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800cbca:	460e      	mov	r6, r1
 800cbcc:	f8b3 9000 	ldrh.w	r9, [r3]
 800cbd0:	4617      	mov	r7, r2
 800cbd2:	4604      	mov	r4, r0
 800cbd4:	f7fb fa1a 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800cbd8:	6803      	ldr	r3, [r0, #0]
 800cbda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cbdc:	4798      	blx	r3
 800cbde:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800cbe2:	f8cd 900c 	str.w	r9, [sp, #12]
 800cbe6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800cbea:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800cbee:	463a      	mov	r2, r7
 800cbf0:	9302      	str	r3, [sp, #8]
 800cbf2:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800cbf6:	4631      	mov	r1, r6
 800cbf8:	9301      	str	r3, [sp, #4]
 800cbfa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800cbfe:	4620      	mov	r0, r4
 800cc00:	9300      	str	r3, [sp, #0]
 800cc02:	4643      	mov	r3, r8
 800cc04:	47a8      	blx	r5
 800cc06:	b007      	add	sp, #28
 800cc08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cc0c:	2000222a 	.word	0x2000222a

0800cc10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800cc10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc14:	4604      	mov	r4, r0
 800cc16:	b08f      	sub	sp, #60	@ 0x3c
 800cc18:	4610      	mov	r0, r2
 800cc1a:	460d      	mov	r5, r1
 800cc1c:	4691      	mov	r9, r2
 800cc1e:	461e      	mov	r6, r3
 800cc20:	f005 fe78 	bl	8012914 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cc24:	2800      	cmp	r0, #0
 800cc26:	f000 809d 	beq.w	800cd64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800cc2a:	6823      	ldr	r3, [r4, #0]
 800cc2c:	4620      	mov	r0, r4
 800cc2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc30:	4798      	blx	r3
 800cc32:	6823      	ldr	r3, [r4, #0]
 800cc34:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800cdc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800cc38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cc3a:	4620      	mov	r0, r4
 800cc3c:	4798      	blx	r3
 800cc3e:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800cdcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800cc42:	f8bb 3000 	ldrh.w	r3, [fp]
 800cc46:	4f5d      	ldr	r7, [pc, #372]	@ (800cdbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cc48:	9301      	str	r3, [sp, #4]
 800cc4a:	f8ba 3000 	ldrh.w	r3, [sl]
 800cc4e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800cc52:	9302      	str	r3, [sp, #8]
 800cc54:	883b      	ldrh	r3, [r7, #0]
 800cc56:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800cc5a:	9303      	str	r3, [sp, #12]
 800cc5c:	4b58      	ldr	r3, [pc, #352]	@ (800cdc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cc5e:	4640      	mov	r0, r8
 800cc60:	881a      	ldrh	r2, [r3, #0]
 800cc62:	9305      	str	r3, [sp, #20]
 800cc64:	9204      	str	r2, [sp, #16]
 800cc66:	f005 fee9 	bl	8012a3c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cc6a:	8038      	strh	r0, [r7, #0]
 800cc6c:	4640      	mov	r0, r8
 800cc6e:	f005 ff19 	bl	8012aa4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cc72:	9b05      	ldr	r3, [sp, #20]
 800cc74:	b280      	uxth	r0, r0
 800cc76:	8018      	strh	r0, [r3, #0]
 800cc78:	4b52      	ldr	r3, [pc, #328]	@ (800cdc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800cc7a:	781b      	ldrb	r3, [r3, #0]
 800cc7c:	2b00      	cmp	r3, #0
 800cc7e:	d174      	bne.n	800cd6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800cc80:	883b      	ldrh	r3, [r7, #0]
 800cc82:	f8aa 0000 	strh.w	r0, [sl]
 800cc86:	f8ab 3000 	strh.w	r3, [fp]
 800cc8a:	4648      	mov	r0, r9
 800cc8c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800cc90:	f005 fe40 	bl	8012914 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800cc94:	2200      	movs	r2, #0
 800cc96:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800cc9a:	4611      	mov	r1, r2
 800cc9c:	4628      	mov	r0, r5
 800cc9e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800cca2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800cca6:	f7fb ff28 	bl	8008afa <_ZN8touchgfx8Drawable5setXYEss>
 800ccaa:	2301      	movs	r3, #1
 800ccac:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800ccb0:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800ccb4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ccb8:	2b00      	cmp	r3, #0
 800ccba:	dd5c      	ble.n	800cd76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ccbc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ccc0:	2b00      	cmp	r3, #0
 800ccc2:	dd58      	ble.n	800cd76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ccc4:	462a      	mov	r2, r5
 800ccc6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ccca:	ab0a      	add	r3, sp, #40	@ 0x28
 800cccc:	6851      	ldr	r1, [r2, #4]
 800ccce:	c303      	stmia	r3!, {r0, r1}
 800ccd0:	4631      	mov	r1, r6
 800ccd2:	a80a      	add	r0, sp, #40	@ 0x28
 800ccd4:	f7ff fbb6 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 800ccd8:	2100      	movs	r1, #0
 800ccda:	4b38      	ldr	r3, [pc, #224]	@ (800cdbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ccdc:	910c      	str	r1, [sp, #48]	@ 0x30
 800ccde:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cce2:	4b37      	ldr	r3, [pc, #220]	@ (800cdc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cce4:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800cce8:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ccec:	aa0a      	add	r2, sp, #40	@ 0x28
 800ccee:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ccf2:	ab08      	add	r3, sp, #32
 800ccf4:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ccf8:	e883 0003 	stmia.w	r3, {r0, r1}
 800ccfc:	4618      	mov	r0, r3
 800ccfe:	a90c      	add	r1, sp, #48	@ 0x30
 800cd00:	f7ff fba0 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 800cd04:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800cd06:	2b00      	cmp	r3, #0
 800cd08:	d13c      	bne.n	800cd84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800cd0a:	2000      	movs	r0, #0
 800cd0c:	2600      	movs	r6, #0
 800cd0e:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800cd12:	696b      	ldr	r3, [r5, #20]
 800cd14:	682a      	ldr	r2, [r5, #0]
 800cd16:	616e      	str	r6, [r5, #20]
 800cd18:	9305      	str	r3, [sp, #20]
 800cd1a:	6892      	ldr	r2, [r2, #8]
 800cd1c:	a908      	add	r1, sp, #32
 800cd1e:	4628      	mov	r0, r5
 800cd20:	4790      	blx	r2
 800cd22:	9b05      	ldr	r3, [sp, #20]
 800cd24:	4652      	mov	r2, sl
 800cd26:	616b      	str	r3, [r5, #20]
 800cd28:	4649      	mov	r1, r9
 800cd2a:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800cd2e:	4628      	mov	r0, r5
 800cd30:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800cd34:	f7fb fee1 	bl	8008afa <_ZN8touchgfx8Drawable5setXYEss>
 800cd38:	9a01      	ldr	r2, [sp, #4]
 800cd3a:	4b23      	ldr	r3, [pc, #140]	@ (800cdc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800cd3c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800cd40:	801a      	strh	r2, [r3, #0]
 800cd42:	9a02      	ldr	r2, [sp, #8]
 800cd44:	4b21      	ldr	r3, [pc, #132]	@ (800cdcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800cd46:	4620      	mov	r0, r4
 800cd48:	801a      	strh	r2, [r3, #0]
 800cd4a:	9a03      	ldr	r2, [sp, #12]
 800cd4c:	4b1b      	ldr	r3, [pc, #108]	@ (800cdbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cd4e:	801a      	strh	r2, [r3, #0]
 800cd50:	4b1b      	ldr	r3, [pc, #108]	@ (800cdc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cd52:	9a04      	ldr	r2, [sp, #16]
 800cd54:	801a      	strh	r2, [r3, #0]
 800cd56:	6823      	ldr	r3, [r4, #0]
 800cd58:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd5a:	4798      	blx	r3
 800cd5c:	6823      	ldr	r3, [r4, #0]
 800cd5e:	4620      	mov	r0, r4
 800cd60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800cd62:	4798      	blx	r3
 800cd64:	b00f      	add	sp, #60	@ 0x3c
 800cd66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd6a:	883b      	ldrh	r3, [r7, #0]
 800cd6c:	f8ab 0000 	strh.w	r0, [fp]
 800cd70:	f8aa 3000 	strh.w	r3, [sl]
 800cd74:	e789      	b.n	800cc8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800cd76:	462a      	mov	r2, r5
 800cd78:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cd7c:	ab0a      	add	r3, sp, #40	@ 0x28
 800cd7e:	6851      	ldr	r1, [r2, #4]
 800cd80:	c303      	stmia	r3!, {r0, r1}
 800cd82:	e7a9      	b.n	800ccd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800cd84:	a807      	add	r0, sp, #28
 800cd86:	f005 ffcf 	bl	8012d28 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cd8a:	4606      	mov	r6, r0
 800cd8c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800cd8e:	6803      	ldr	r3, [r0, #0]
 800cd90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd92:	4798      	blx	r3
 800cd94:	4286      	cmp	r6, r0
 800cd96:	d1b8      	bne.n	800cd0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800cd98:	f7fb f938 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800cd9c:	6803      	ldr	r3, [r0, #0]
 800cd9e:	4606      	mov	r6, r0
 800cda0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cda2:	a807      	add	r0, sp, #28
 800cda4:	9305      	str	r3, [sp, #20]
 800cda6:	f005 ffbf 	bl	8012d28 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cdaa:	9b05      	ldr	r3, [sp, #20]
 800cdac:	4601      	mov	r1, r0
 800cdae:	4630      	mov	r0, r6
 800cdb0:	4798      	blx	r3
 800cdb2:	f080 0001 	eor.w	r0, r0, #1
 800cdb6:	b2c0      	uxtb	r0, r0
 800cdb8:	e7a8      	b.n	800cd0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800cdba:	bf00      	nop
 800cdbc:	20002224 	.word	0x20002224
 800cdc0:	20002226 	.word	0x20002226
 800cdc4:	20002228 	.word	0x20002228
 800cdc8:	2000222a 	.word	0x2000222a
 800cdcc:	2000222c 	.word	0x2000222c

0800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cdd0:	b510      	push	{r4, lr}
 800cdd2:	4b07      	ldr	r3, [pc, #28]	@ (800cdf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cdd4:	4604      	mov	r4, r0
 800cdd6:	781b      	ldrb	r3, [r3, #0]
 800cdd8:	b13b      	cbz	r3, 800cdea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cdda:	6803      	ldr	r3, [r0, #0]
 800cddc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800cdde:	4798      	blx	r3
 800cde0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800cde2:	4283      	cmp	r3, r0
 800cde4:	d101      	bne.n	800cdea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cde6:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800cde8:	bd10      	pop	{r4, pc}
 800cdea:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800cdec:	e7fc      	b.n	800cde8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cdee:	bf00      	nop
 800cdf0:	2000222e 	.word	0x2000222e

0800cdf4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cdf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cdf8:	461d      	mov	r5, r3
 800cdfa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800cdfe:	2400      	movs	r4, #0
 800ce00:	b08a      	sub	sp, #40	@ 0x28
 800ce02:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ce06:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ce0a:	4690      	mov	r8, r2
 800ce0c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ce10:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ce14:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800ce18:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ce1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ce20:	4607      	mov	r7, r0
 800ce22:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ce26:	9404      	str	r4, [sp, #16]
 800ce28:	f88d 4020 	strb.w	r4, [sp, #32]
 800ce2c:	f7ff ffd0 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ce30:	fb06 8505 	mla	r5, r6, r5, r8
 800ce34:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ce38:	6878      	ldr	r0, [r7, #4]
 800ce3a:	9505      	str	r5, [sp, #20]
 800ce3c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ce40:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ce44:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800ce48:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ce4c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ce50:	6803      	ldr	r3, [r0, #0]
 800ce52:	a901      	add	r1, sp, #4
 800ce54:	685b      	ldr	r3, [r3, #4]
 800ce56:	4798      	blx	r3
 800ce58:	b00a      	add	sp, #40	@ 0x28
 800ce5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ce5e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ce5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce62:	2400      	movs	r4, #0
 800ce64:	461d      	mov	r5, r3
 800ce66:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800ce6a:	4691      	mov	r9, r2
 800ce6c:	b08b      	sub	sp, #44	@ 0x2c
 800ce6e:	4688      	mov	r8, r1
 800ce70:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800ce74:	4607      	mov	r7, r0
 800ce76:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ce7a:	9404      	str	r4, [sp, #16]
 800ce7c:	f7ff ffa8 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ce80:	fb06 9505 	mla	r5, r6, r5, r9
 800ce84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ce88:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ce8c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ce90:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800ce94:	6878      	ldr	r0, [r7, #4]
 800ce96:	9505      	str	r5, [sp, #20]
 800ce98:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ce9c:	f8ad 401c 	strh.w	r4, [sp, #28]
 800cea0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cea4:	f8cd 8010 	str.w	r8, [sp, #16]
 800cea8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800ceac:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800ceb0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800ceb4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800ceb8:	6803      	ldr	r3, [r0, #0]
 800ceba:	a901      	add	r1, sp, #4
 800cebc:	685b      	ldr	r3, [r3, #4]
 800cebe:	4798      	blx	r3
 800cec0:	b00b      	add	sp, #44	@ 0x2c
 800cec2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800cec8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800cec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cecc:	4698      	mov	r8, r3
 800cece:	2300      	movs	r3, #0
 800ced0:	b08a      	sub	sp, #40	@ 0x28
 800ced2:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800ced6:	4606      	mov	r6, r0
 800ced8:	2d0b      	cmp	r5, #11
 800ceda:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800cede:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800cee2:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800cee6:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800ceea:	9304      	str	r3, [sp, #16]
 800ceec:	d137      	bne.n	800cf5e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800ceee:	2380      	movs	r3, #128	@ 0x80
 800cef0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cef4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800cef8:	f88d 0020 	strb.w	r0, [sp, #32]
 800cefc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cf00:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800cf04:	4630      	mov	r0, r6
 800cf06:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cf0a:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800cf0e:	9203      	str	r2, [sp, #12]
 800cf10:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cf14:	f7ff ff5c 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cf18:	2c0b      	cmp	r4, #11
 800cf1a:	bf8c      	ite	hi
 800cf1c:	2100      	movhi	r1, #0
 800cf1e:	4b1b      	ldrls	r3, [pc, #108]	@ (800cf8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800cf20:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800cf24:	bf98      	it	ls
 800cf26:	5d19      	ldrbls	r1, [r3, r4]
 800cf28:	fb02 8307 	mla	r3, r2, r7, r8
 800cf2c:	10c9      	asrs	r1, r1, #3
 800cf2e:	fb01 0003 	mla	r0, r1, r3, r0
 800cf32:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800cf36:	9005      	str	r0, [sp, #20]
 800cf38:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800cf3c:	2300      	movs	r3, #0
 800cf3e:	6870      	ldr	r0, [r6, #4]
 800cf40:	f8ad 701e 	strh.w	r7, [sp, #30]
 800cf44:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800cf48:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800cf4c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800cf50:	6803      	ldr	r3, [r0, #0]
 800cf52:	a901      	add	r1, sp, #4
 800cf54:	685b      	ldr	r3, [r3, #4]
 800cf56:	4798      	blx	r3
 800cf58:	b00a      	add	sp, #40	@ 0x28
 800cf5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf5e:	2d02      	cmp	r5, #2
 800cf60:	d109      	bne.n	800cf76 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800cf62:	28ff      	cmp	r0, #255	@ 0xff
 800cf64:	d105      	bne.n	800cf72 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800cf66:	f1bc 0f00 	cmp.w	ip, #0
 800cf6a:	bf14      	ite	ne
 800cf6c:	2340      	movne	r3, #64	@ 0x40
 800cf6e:	2320      	moveq	r3, #32
 800cf70:	e7be      	b.n	800cef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cf72:	2340      	movs	r3, #64	@ 0x40
 800cf74:	e7bc      	b.n	800cef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cf76:	28ff      	cmp	r0, #255	@ 0xff
 800cf78:	d105      	bne.n	800cf86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800cf7a:	f1bc 0f00 	cmp.w	ip, #0
 800cf7e:	bf14      	ite	ne
 800cf80:	2304      	movne	r3, #4
 800cf82:	2301      	moveq	r3, #1
 800cf84:	e7b4      	b.n	800cef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cf86:	2304      	movs	r3, #4
 800cf88:	e7b2      	b.n	800cef0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cf8a:	bf00      	nop
 800cf8c:	08023ad4 	.word	0x08023ad4

0800cf90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800cf90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf94:	b08b      	sub	sp, #44	@ 0x2c
 800cf96:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800cf9a:	461d      	mov	r5, r3
 800cf9c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800cfa0:	bf14      	ite	ne
 800cfa2:	2308      	movne	r3, #8
 800cfa4:	2302      	moveq	r3, #2
 800cfa6:	2400      	movs	r4, #0
 800cfa8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800cfac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cfb0:	4688      	mov	r8, r1
 800cfb2:	4693      	mov	fp, r2
 800cfb4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800cfb8:	9404      	str	r4, [sp, #16]
 800cfba:	4607      	mov	r7, r0
 800cfbc:	f7ff ff08 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cfc0:	2e0b      	cmp	r6, #11
 800cfc2:	bf98      	it	ls
 800cfc4:	4b15      	ldrls	r3, [pc, #84]	@ (800d01c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800cfc6:	fb05 b50a 	mla	r5, r5, sl, fp
 800cfca:	bf98      	it	ls
 800cfcc:	5d9c      	ldrbls	r4, [r3, r6]
 800cfce:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800cfd2:	10e4      	asrs	r4, r4, #3
 800cfd4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cfd8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800cfdc:	fb04 0405 	mla	r4, r4, r5, r0
 800cfe0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cfe4:	2300      	movs	r3, #0
 800cfe6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800cfea:	6878      	ldr	r0, [r7, #4]
 800cfec:	9405      	str	r4, [sp, #20]
 800cfee:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cff2:	f8ad a01e 	strh.w	sl, [sp, #30]
 800cff6:	f8cd 8010 	str.w	r8, [sp, #16]
 800cffa:	f88d 9020 	strb.w	r9, [sp, #32]
 800cffe:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800d002:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800d006:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800d00a:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800d00e:	6803      	ldr	r3, [r0, #0]
 800d010:	a901      	add	r1, sp, #4
 800d012:	685b      	ldr	r3, [r3, #4]
 800d014:	4798      	blx	r3
 800d016:	b00b      	add	sp, #44	@ 0x2c
 800d018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d01c:	08023ad4 	.word	0x08023ad4

0800d020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d024:	461e      	mov	r6, r3
 800d026:	4b0a      	ldr	r3, [pc, #40]	@ (800d050 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800d028:	460f      	mov	r7, r1
 800d02a:	881d      	ldrh	r5, [r3, #0]
 800d02c:	4690      	mov	r8, r2
 800d02e:	f7fa ffed 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800d032:	6803      	ldr	r3, [r0, #0]
 800d034:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d036:	4798      	blx	r3
 800d038:	280b      	cmp	r0, #11
 800d03a:	bf8e      	itee	hi
 800d03c:	2400      	movhi	r4, #0
 800d03e:	4b05      	ldrls	r3, [pc, #20]	@ (800d054 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d040:	5c1c      	ldrbls	r4, [r3, r0]
 800d042:	fb08 7005 	mla	r0, r8, r5, r7
 800d046:	10e4      	asrs	r4, r4, #3
 800d048:	fb04 6000 	mla	r0, r4, r0, r6
 800d04c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d050:	2000222a 	.word	0x2000222a
 800d054:	08023ad4 	.word	0x08023ad4

0800d058 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d058:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d05a:	2500      	movs	r5, #0
 800d05c:	b08b      	sub	sp, #44	@ 0x2c
 800d05e:	461f      	mov	r7, r3
 800d060:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800d064:	4604      	mov	r4, r0
 800d066:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d06a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d06e:	4616      	mov	r6, r2
 800d070:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d074:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d078:	9504      	str	r5, [sp, #16]
 800d07a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d07e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d082:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d086:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d08a:	f88d 3020 	strb.w	r3, [sp, #32]
 800d08e:	f7ff fe9f 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d092:	463a      	mov	r2, r7
 800d094:	4631      	mov	r1, r6
 800d096:	4603      	mov	r3, r0
 800d098:	4620      	mov	r0, r4
 800d09a:	f7ff ffc1 	bl	800d020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d09e:	4b0e      	ldr	r3, [pc, #56]	@ (800d0d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800d0a0:	9005      	str	r0, [sp, #20]
 800d0a2:	881b      	ldrh	r3, [r3, #0]
 800d0a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d0a8:	f7fa ffb0 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800d0ac:	6803      	ldr	r3, [r0, #0]
 800d0ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d0b0:	4798      	blx	r3
 800d0b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800d0b4:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800d0b8:	9304      	str	r3, [sp, #16]
 800d0ba:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800d0be:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800d0c2:	6860      	ldr	r0, [r4, #4]
 800d0c4:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800d0c8:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800d0cc:	6803      	ldr	r3, [r0, #0]
 800d0ce:	a901      	add	r1, sp, #4
 800d0d0:	685b      	ldr	r3, [r3, #4]
 800d0d2:	4798      	blx	r3
 800d0d4:	b00b      	add	sp, #44	@ 0x2c
 800d0d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d0d8:	2000222a 	.word	0x2000222a

0800d0dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800d0dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d0de:	b08d      	sub	sp, #52	@ 0x34
 800d0e0:	466b      	mov	r3, sp
 800d0e2:	e883 0006 	stmia.w	r3, {r1, r2}
 800d0e6:	2300      	movs	r3, #0
 800d0e8:	2501      	movs	r5, #1
 800d0ea:	9306      	str	r3, [sp, #24]
 800d0ec:	6803      	ldr	r3, [r0, #0]
 800d0ee:	9503      	str	r5, [sp, #12]
 800d0f0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d0f2:	4604      	mov	r4, r0
 800d0f4:	f8bd 6000 	ldrh.w	r6, [sp]
 800d0f8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800d0fc:	4798      	blx	r3
 800d0fe:	463a      	mov	r2, r7
 800d100:	4631      	mov	r1, r6
 800d102:	4603      	mov	r3, r0
 800d104:	4620      	mov	r0, r4
 800d106:	f7ff ff8b 	bl	800d020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d10a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800d10c:	9004      	str	r0, [sp, #16]
 800d10e:	9307      	str	r3, [sp, #28]
 800d110:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d114:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d118:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d11c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d120:	4b0e      	ldr	r3, [pc, #56]	@ (800d15c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800d122:	881b      	ldrh	r3, [r3, #0]
 800d124:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d128:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d12c:	f7fa ff6e 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800d130:	6803      	ldr	r3, [r0, #0]
 800d132:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d134:	4798      	blx	r3
 800d136:	23ff      	movs	r3, #255	@ 0xff
 800d138:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800d13c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800d140:	6860      	ldr	r0, [r4, #4]
 800d142:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800d146:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800d14a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800d14e:	6803      	ldr	r3, [r0, #0]
 800d150:	a903      	add	r1, sp, #12
 800d152:	685b      	ldr	r3, [r3, #4]
 800d154:	4798      	blx	r3
 800d156:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800d158:	b00d      	add	sp, #52	@ 0x34
 800d15a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d15c:	2000222a 	.word	0x2000222a

0800d160 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800d160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d164:	b08c      	sub	sp, #48	@ 0x30
 800d166:	466d      	mov	r5, sp
 800d168:	461e      	mov	r6, r3
 800d16a:	2300      	movs	r3, #0
 800d16c:	e885 0006 	stmia.w	r5, {r1, r2}
 800d170:	2501      	movs	r5, #1
 800d172:	9306      	str	r3, [sp, #24]
 800d174:	6803      	ldr	r3, [r0, #0]
 800d176:	9503      	str	r5, [sp, #12]
 800d178:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d17a:	4604      	mov	r4, r0
 800d17c:	f8bd 7000 	ldrh.w	r7, [sp]
 800d180:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800d184:	4798      	blx	r3
 800d186:	4642      	mov	r2, r8
 800d188:	4639      	mov	r1, r7
 800d18a:	4603      	mov	r3, r0
 800d18c:	4620      	mov	r0, r4
 800d18e:	f7ff ff47 	bl	800d020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d192:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d196:	9004      	str	r0, [sp, #16]
 800d198:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d19c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800d1a0:	9607      	str	r6, [sp, #28]
 800d1a2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800d1a6:	4b10      	ldr	r3, [pc, #64]	@ (800d1e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800d1a8:	881b      	ldrh	r3, [r3, #0]
 800d1aa:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800d1ae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800d1b0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800d1b4:	f7fa ff2a 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 800d1b8:	6803      	ldr	r3, [r0, #0]
 800d1ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d1bc:	4798      	blx	r3
 800d1be:	23ff      	movs	r3, #255	@ 0xff
 800d1c0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800d1c4:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800d1c8:	6860      	ldr	r0, [r4, #4]
 800d1ca:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800d1ce:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800d1d2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800d1d6:	6803      	ldr	r3, [r0, #0]
 800d1d8:	a903      	add	r1, sp, #12
 800d1da:	685b      	ldr	r3, [r3, #4]
 800d1dc:	4798      	blx	r3
 800d1de:	4630      	mov	r0, r6
 800d1e0:	b00c      	add	sp, #48	@ 0x30
 800d1e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d1e6:	bf00      	nop
 800d1e8:	2000222a 	.word	0x2000222a

0800d1ec <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800d1ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1ee:	b085      	sub	sp, #20
 800d1f0:	ac02      	add	r4, sp, #8
 800d1f2:	e884 0006 	stmia.w	r4, {r1, r2}
 800d1f6:	4605      	mov	r5, r0
 800d1f8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800d1fc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800d200:	f7ff fde6 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d204:	463a      	mov	r2, r7
 800d206:	4603      	mov	r3, r0
 800d208:	4631      	mov	r1, r6
 800d20a:	4628      	mov	r0, r5
 800d20c:	f7ff ff08 	bl	800d020 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800d210:	4a05      	ldr	r2, [pc, #20]	@ (800d228 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800d212:	682b      	ldr	r3, [r5, #0]
 800d214:	8812      	ldrh	r2, [r2, #0]
 800d216:	9200      	str	r2, [sp, #0]
 800d218:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800d21a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d21e:	4603      	mov	r3, r0
 800d220:	4628      	mov	r0, r5
 800d222:	47b0      	blx	r6
 800d224:	b005      	add	sp, #20
 800d226:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d228:	2000222a 	.word	0x2000222a

0800d22c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d22c:	b570      	push	{r4, r5, r6, lr}
 800d22e:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800d232:	4604      	mov	r4, r0
 800d234:	b19b      	cbz	r3, 800d25e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d236:	2002      	movs	r0, #2
 800d238:	f7fc ff3e 	bl	800a0b8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d23c:	2300      	movs	r3, #0
 800d23e:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d242:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800d246:	6823      	ldr	r3, [r4, #0]
 800d248:	4620      	mov	r0, r4
 800d24a:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800d24e:	f7ff fdbf 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d252:	462b      	mov	r3, r5
 800d254:	4601      	mov	r1, r0
 800d256:	4620      	mov	r0, r4
 800d258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d25c:	4718      	bx	r3
 800d25e:	bd70      	pop	{r4, r5, r6, pc}

0800d260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d260:	b538      	push	{r3, r4, r5, lr}
 800d262:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800d266:	4604      	mov	r4, r0
 800d268:	428b      	cmp	r3, r1
 800d26a:	460d      	mov	r5, r1
 800d26c:	d006      	beq.n	800d27c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d26e:	6803      	ldr	r3, [r0, #0]
 800d270:	b929      	cbnz	r1, 800d27e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d272:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800d276:	4798      	blx	r3
 800d278:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800d27c:	bd38      	pop	{r3, r4, r5, pc}
 800d27e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800d282:	e7f8      	b.n	800d276 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d284 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d284:	b510      	push	{r4, lr}
 800d286:	4b0c      	ldr	r3, [pc, #48]	@ (800d2b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800d288:	4604      	mov	r4, r0
 800d28a:	781b      	ldrb	r3, [r3, #0]
 800d28c:	b953      	cbnz	r3, 800d2a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d28e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800d292:	b93b      	cbnz	r3, 800d2a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d294:	6840      	ldr	r0, [r0, #4]
 800d296:	f000 f90d 	bl	800d4b4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d29a:	b118      	cbz	r0, 800d2a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800d29c:	6862      	ldr	r2, [r4, #4]
 800d29e:	7a53      	ldrb	r3, [r2, #9]
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	d0fc      	beq.n	800d29e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800d2a4:	f7fd fa0e 	bl	800a6c4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d2a8:	4620      	mov	r0, r4
 800d2aa:	2100      	movs	r1, #0
 800d2ac:	f7ff ffd8 	bl	800d260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d2b0:	4620      	mov	r0, r4
 800d2b2:	f7ff fd8d 	bl	800cdd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d2b6:	bd10      	pop	{r4, pc}
 800d2b8:	2000222e 	.word	0x2000222e

0800d2bc <_ZN8touchgfx13DMA_Interface5flushEv>:
 800d2bc:	6803      	ldr	r3, [r0, #0]
 800d2be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d2c0:	4718      	bx	r3

0800d2c2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d2c2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d2c6:	1a13      	subs	r3, r2, r0
 800d2c8:	4258      	negs	r0, r3
 800d2ca:	4158      	adcs	r0, r3
 800d2cc:	4770      	bx	lr

0800d2ce <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d2ce:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d2d2:	1a9b      	subs	r3, r3, r2
 800d2d4:	2b00      	cmp	r3, #0
 800d2d6:	bfdc      	itt	le
 800d2d8:	6882      	ldrle	r2, [r0, #8]
 800d2da:	189b      	addle	r3, r3, r2
 800d2dc:	2b01      	cmp	r3, #1
 800d2de:	bfcc      	ite	gt
 800d2e0:	2000      	movgt	r0, #0
 800d2e2:	2001      	movle	r0, #1
 800d2e4:	4770      	bx	lr

0800d2e6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d2e6:	6902      	ldr	r2, [r0, #16]
 800d2e8:	6843      	ldr	r3, [r0, #4]
 800d2ea:	2024      	movs	r0, #36	@ 0x24
 800d2ec:	fb00 3002 	mla	r0, r0, r2, r3
 800d2f0:	4770      	bx	lr

0800d2f2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d2f2:	6803      	ldr	r3, [r0, #0]
 800d2f4:	691b      	ldr	r3, [r3, #16]
 800d2f6:	4718      	bx	r3

0800d2f8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d2f8:	2301      	movs	r3, #1
 800d2fa:	b570      	push	{r4, r5, r6, lr}
 800d2fc:	7203      	strb	r3, [r0, #8]
 800d2fe:	4604      	mov	r4, r0
 800d300:	6840      	ldr	r0, [r0, #4]
 800d302:	6803      	ldr	r3, [r0, #0]
 800d304:	699b      	ldr	r3, [r3, #24]
 800d306:	4798      	blx	r3
 800d308:	6803      	ldr	r3, [r0, #0]
 800d30a:	4605      	mov	r5, r0
 800d30c:	2b40      	cmp	r3, #64	@ 0x40
 800d30e:	d00c      	beq.n	800d32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d310:	d810      	bhi.n	800d334 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d312:	2b04      	cmp	r3, #4
 800d314:	d01d      	beq.n	800d352 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800d316:	d804      	bhi.n	800d322 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800d318:	2b01      	cmp	r3, #1
 800d31a:	d006      	beq.n	800d32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d31c:	2b02      	cmp	r3, #2
 800d31e:	d02c      	beq.n	800d37a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d320:	bd70      	pop	{r4, r5, r6, pc}
 800d322:	2b08      	cmp	r3, #8
 800d324:	d01d      	beq.n	800d362 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800d326:	2b20      	cmp	r3, #32
 800d328:	d1fa      	bne.n	800d320 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800d32a:	6823      	ldr	r3, [r4, #0]
 800d32c:	4620      	mov	r0, r4
 800d32e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d330:	4798      	blx	r3
 800d332:	e013      	b.n	800d35c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d334:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d338:	d0f7      	beq.n	800d32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d33a:	d804      	bhi.n	800d346 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800d33c:	2b80      	cmp	r3, #128	@ 0x80
 800d33e:	d0f4      	beq.n	800d32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d340:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800d344:	e7f0      	b.n	800d328 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800d346:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800d34a:	d0ee      	beq.n	800d32a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d34c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800d350:	e7e5      	b.n	800d31e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d352:	6823      	ldr	r3, [r4, #0]
 800d354:	7f01      	ldrb	r1, [r0, #28]
 800d356:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d358:	4620      	mov	r0, r4
 800d35a:	4798      	blx	r3
 800d35c:	6823      	ldr	r3, [r4, #0]
 800d35e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d360:	e006      	b.n	800d370 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d362:	6823      	ldr	r3, [r4, #0]
 800d364:	7f01      	ldrb	r1, [r0, #28]
 800d366:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d368:	4620      	mov	r0, r4
 800d36a:	4798      	blx	r3
 800d36c:	6823      	ldr	r3, [r4, #0]
 800d36e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d370:	4629      	mov	r1, r5
 800d372:	4620      	mov	r0, r4
 800d374:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d378:	4718      	bx	r3
 800d37a:	6823      	ldr	r3, [r4, #0]
 800d37c:	4620      	mov	r0, r4
 800d37e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800d380:	4798      	blx	r3
 800d382:	e7f3      	b.n	800d36c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800d384 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d384:	4770      	bx	lr

0800d386 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d386:	4770      	bx	lr

0800d388 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d388:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d38c:	1ad2      	subs	r2, r2, r3
 800d38e:	2a00      	cmp	r2, #0
 800d390:	b510      	push	{r4, lr}
 800d392:	bfdc      	itt	le
 800d394:	6884      	ldrle	r4, [r0, #8]
 800d396:	1912      	addle	r2, r2, r4
 800d398:	2a01      	cmp	r2, #1
 800d39a:	dd16      	ble.n	800d3ca <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800d39c:	2424      	movs	r4, #36	@ 0x24
 800d39e:	6842      	ldr	r2, [r0, #4]
 800d3a0:	fb04 2303 	mla	r3, r4, r3, r2
 800d3a4:	f101 0220 	add.w	r2, r1, #32
 800d3a8:	f851 4b04 	ldr.w	r4, [r1], #4
 800d3ac:	4291      	cmp	r1, r2
 800d3ae:	f843 4b04 	str.w	r4, [r3], #4
 800d3b2:	d1f9      	bne.n	800d3a8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d3b4:	780a      	ldrb	r2, [r1, #0]
 800d3b6:	701a      	strb	r2, [r3, #0]
 800d3b8:	68c3      	ldr	r3, [r0, #12]
 800d3ba:	6882      	ldr	r2, [r0, #8]
 800d3bc:	3301      	adds	r3, #1
 800d3be:	429a      	cmp	r2, r3
 800d3c0:	bfd8      	it	le
 800d3c2:	1a9b      	suble	r3, r3, r2
 800d3c4:	f3bf 8f5b 	dmb	ish
 800d3c8:	60c3      	str	r3, [r0, #12]
 800d3ca:	bd10      	pop	{r4, pc}

0800d3cc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d3cc:	6903      	ldr	r3, [r0, #16]
 800d3ce:	6882      	ldr	r2, [r0, #8]
 800d3d0:	3301      	adds	r3, #1
 800d3d2:	429a      	cmp	r2, r3
 800d3d4:	bfd8      	it	le
 800d3d6:	1a9b      	suble	r3, r3, r2
 800d3d8:	f3bf 8f5b 	dmb	ish
 800d3dc:	6103      	str	r3, [r0, #16]
 800d3de:	4770      	bx	lr

0800d3e0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d3e0:	b570      	push	{r4, r5, r6, lr}
 800d3e2:	4604      	mov	r4, r0
 800d3e4:	460e      	mov	r6, r1
 800d3e6:	6860      	ldr	r0, [r4, #4]
 800d3e8:	6803      	ldr	r3, [r0, #0]
 800d3ea:	685b      	ldr	r3, [r3, #4]
 800d3ec:	4798      	blx	r3
 800d3ee:	2800      	cmp	r0, #0
 800d3f0:	d1f9      	bne.n	800d3e6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d3f2:	4d0d      	ldr	r5, [pc, #52]	@ (800d428 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d3f4:	6828      	ldr	r0, [r5, #0]
 800d3f6:	6803      	ldr	r3, [r0, #0]
 800d3f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d3fc:	4798      	blx	r3
 800d3fe:	f7fd f983 	bl	800a708 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d402:	6828      	ldr	r0, [r5, #0]
 800d404:	2101      	movs	r1, #1
 800d406:	f7ff ff2b 	bl	800d260 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d40a:	6860      	ldr	r0, [r4, #4]
 800d40c:	4631      	mov	r1, r6
 800d40e:	6803      	ldr	r3, [r0, #0]
 800d410:	689b      	ldr	r3, [r3, #8]
 800d412:	4798      	blx	r3
 800d414:	6823      	ldr	r3, [r4, #0]
 800d416:	4620      	mov	r0, r4
 800d418:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d41a:	4798      	blx	r3
 800d41c:	6828      	ldr	r0, [r5, #0]
 800d41e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d422:	6803      	ldr	r3, [r0, #0]
 800d424:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d426:	4718      	bx	r3
 800d428:	20002230 	.word	0x20002230

0800d42c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d42c:	b508      	push	{r3, lr}
 800d42e:	f7fd f949 	bl	800a6c4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d432:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d436:	f7fd b95b 	b.w	800a6f0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d43a <_ZN8touchgfx13DMA_Interface5startEv>:
 800d43a:	b510      	push	{r4, lr}
 800d43c:	4604      	mov	r4, r0
 800d43e:	6840      	ldr	r0, [r0, #4]
 800d440:	6803      	ldr	r3, [r0, #0]
 800d442:	681b      	ldr	r3, [r3, #0]
 800d444:	4798      	blx	r3
 800d446:	b948      	cbnz	r0, 800d45c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d448:	7a63      	ldrb	r3, [r4, #9]
 800d44a:	b13b      	cbz	r3, 800d45c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d44c:	7a23      	ldrb	r3, [r4, #8]
 800d44e:	b92b      	cbnz	r3, 800d45c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d450:	6823      	ldr	r3, [r4, #0]
 800d452:	4620      	mov	r0, r4
 800d454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d458:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d45a:	4718      	bx	r3
 800d45c:	bd10      	pop	{r4, pc}

0800d45e <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d45e:	b570      	push	{r4, r5, r6, lr}
 800d460:	4604      	mov	r4, r0
 800d462:	6840      	ldr	r0, [r0, #4]
 800d464:	6803      	ldr	r3, [r0, #0]
 800d466:	681b      	ldr	r3, [r3, #0]
 800d468:	4798      	blx	r3
 800d46a:	4605      	mov	r5, r0
 800d46c:	b930      	cbnz	r0, 800d47c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d46e:	7a23      	ldrb	r3, [r4, #8]
 800d470:	b123      	cbz	r3, 800d47c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d472:	6860      	ldr	r0, [r4, #4]
 800d474:	6803      	ldr	r3, [r0, #0]
 800d476:	695b      	ldr	r3, [r3, #20]
 800d478:	4798      	blx	r3
 800d47a:	7225      	strb	r5, [r4, #8]
 800d47c:	6860      	ldr	r0, [r4, #4]
 800d47e:	6803      	ldr	r3, [r0, #0]
 800d480:	681b      	ldr	r3, [r3, #0]
 800d482:	4798      	blx	r3
 800d484:	b928      	cbnz	r0, 800d492 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d486:	6823      	ldr	r3, [r4, #0]
 800d488:	4620      	mov	r0, r4
 800d48a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d48e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d490:	4718      	bx	r3
 800d492:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d496:	f7fd b943 	b.w	800a720 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800d49c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d49c:	6082      	str	r2, [r0, #8]
 800d49e:	2200      	movs	r2, #0
 800d4a0:	b510      	push	{r4, lr}
 800d4a2:	4c03      	ldr	r4, [pc, #12]	@ (800d4b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d4a4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d4a8:	e9c0 4100 	strd	r4, r1, [r0]
 800d4ac:	bd10      	pop	{r4, pc}
 800d4ae:	bf00      	nop
 800d4b0:	08023c24 	.word	0x08023c24

0800d4b4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d4b4:	6840      	ldr	r0, [r0, #4]
 800d4b6:	6803      	ldr	r3, [r0, #0]
 800d4b8:	681b      	ldr	r3, [r3, #0]
 800d4ba:	4718      	bx	r3

0800d4bc <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d4bc:	2000      	movs	r0, #0
 800d4be:	4770      	bx	lr

0800d4c0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d4c0:	4b07      	ldr	r3, [pc, #28]	@ (800d4e0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d4c2:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800d4c4:	881b      	ldrh	r3, [r3, #0]
 800d4c6:	4293      	cmp	r3, r2
 800d4c8:	bf81      	itttt	hi
 800d4ca:	4b06      	ldrhi	r3, [pc, #24]	@ (800d4e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d4cc:	681b      	ldrhi	r3, [r3, #0]
 800d4ce:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d4d2:	7858      	ldrbhi	r0, [r3, #1]
 800d4d4:	bf8c      	ite	hi
 800d4d6:	f000 0003 	andhi.w	r0, r0, #3
 800d4da:	2000      	movls	r0, #0
 800d4dc:	4770      	bx	lr
 800d4de:	bf00      	nop
 800d4e0:	20002284 	.word	0x20002284
 800d4e4:	20002280 	.word	0x20002280

0800d4e8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d4e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d4ec:	4b10      	ldr	r3, [pc, #64]	@ (800d530 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d4ee:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d4f0:	881b      	ldrh	r3, [r3, #0]
 800d4f2:	4604      	mov	r4, r0
 800d4f4:	428b      	cmp	r3, r1
 800d4f6:	d918      	bls.n	800d52a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d4f8:	6803      	ldr	r3, [r0, #0]
 800d4fa:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800d4fc:	4b0d      	ldr	r3, [pc, #52]	@ (800d534 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d4fe:	6818      	ldr	r0, [r3, #0]
 800d500:	f7fc fb2c 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800d504:	6823      	ldr	r3, [r4, #0]
 800d506:	4606      	mov	r6, r0
 800d508:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d50a:	4620      	mov	r0, r4
 800d50c:	4798      	blx	r3
 800d50e:	6823      	ldr	r3, [r4, #0]
 800d510:	4607      	mov	r7, r0
 800d512:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d516:	4620      	mov	r0, r4
 800d518:	4798      	blx	r3
 800d51a:	463a      	mov	r2, r7
 800d51c:	4603      	mov	r3, r0
 800d51e:	4631      	mov	r1, r6
 800d520:	4620      	mov	r0, r4
 800d522:	46ac      	mov	ip, r5
 800d524:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d528:	4760      	bx	ip
 800d52a:	2000      	movs	r0, #0
 800d52c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d530:	20002284 	.word	0x20002284
 800d534:	2000228c 	.word	0x2000228c

0800d538 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d538:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d53c:	4b17      	ldr	r3, [pc, #92]	@ (800d59c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d53e:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d540:	881b      	ldrh	r3, [r3, #0]
 800d542:	4604      	mov	r4, r0
 800d544:	428b      	cmp	r3, r1
 800d546:	d926      	bls.n	800d596 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d548:	4b15      	ldr	r3, [pc, #84]	@ (800d5a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d54a:	681b      	ldr	r3, [r3, #0]
 800d54c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d550:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d554:	4b13      	ldr	r3, [pc, #76]	@ (800d5a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d556:	7855      	ldrb	r5, [r2, #1]
 800d558:	681b      	ldr	r3, [r3, #0]
 800d55a:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d55e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d562:	6833      	ldr	r3, [r6, #0]
 800d564:	69df      	ldr	r7, [r3, #28]
 800d566:	4b10      	ldr	r3, [pc, #64]	@ (800d5a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d568:	6818      	ldr	r0, [r3, #0]
 800d56a:	f7fc faf7 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800d56e:	6823      	ldr	r3, [r4, #0]
 800d570:	4680      	mov	r8, r0
 800d572:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d574:	4620      	mov	r0, r4
 800d576:	4798      	blx	r3
 800d578:	6823      	ldr	r3, [r4, #0]
 800d57a:	4681      	mov	r9, r0
 800d57c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d580:	4620      	mov	r0, r4
 800d582:	4798      	blx	r3
 800d584:	464b      	mov	r3, r9
 800d586:	9000      	str	r0, [sp, #0]
 800d588:	4642      	mov	r2, r8
 800d58a:	4629      	mov	r1, r5
 800d58c:	4630      	mov	r0, r6
 800d58e:	47b8      	blx	r7
 800d590:	b003      	add	sp, #12
 800d592:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d596:	2000      	movs	r0, #0
 800d598:	e7fa      	b.n	800d590 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d59a:	bf00      	nop
 800d59c:	20002284 	.word	0x20002284
 800d5a0:	20002280 	.word	0x20002280
 800d5a4:	20002288 	.word	0x20002288
 800d5a8:	2000228c 	.word	0x2000228c

0800d5ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d5ac:	b40e      	push	{r1, r2, r3}
 800d5ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d5b2:	4b2f      	ldr	r3, [pc, #188]	@ (800d670 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d5b4:	b09d      	sub	sp, #116	@ 0x74
 800d5b6:	881a      	ldrh	r2, [r3, #0]
 800d5b8:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800d5ba:	4604      	mov	r4, r0
 800d5bc:	429a      	cmp	r2, r3
 800d5be:	d954      	bls.n	800d66a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d5c0:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800d674 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d5c4:	aa26      	add	r2, sp, #152	@ 0x98
 800d5c6:	9202      	str	r2, [sp, #8]
 800d5c8:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 800d678 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d5cc:	f8d9 2000 	ldr.w	r2, [r9]
 800d5d0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d5d4:	f8d8 3000 	ldr.w	r3, [r8]
 800d5d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d5dc:	682b      	ldr	r3, [r5, #0]
 800d5de:	4628      	mov	r0, r5
 800d5e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d5e2:	4798      	blx	r3
 800d5e4:	b207      	sxth	r7, r0
 800d5e6:	4606      	mov	r6, r0
 800d5e8:	a803      	add	r0, sp, #12
 800d5ea:	f003 fe73 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 800d5ee:	682b      	ldr	r3, [r5, #0]
 800d5f0:	4628      	mov	r0, r5
 800d5f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d5f4:	4798      	blx	r3
 800d5f6:	682b      	ldr	r3, [r5, #0]
 800d5f8:	4682      	mov	sl, r0
 800d5fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d5fc:	4628      	mov	r0, r5
 800d5fe:	4798      	blx	r3
 800d600:	4653      	mov	r3, sl
 800d602:	9000      	str	r0, [sp, #0]
 800d604:	9a02      	ldr	r2, [sp, #8]
 800d606:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800d608:	a803      	add	r0, sp, #12
 800d60a:	f003 febe 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d60e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d610:	f8d9 3000 	ldr.w	r3, [r9]
 800d614:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800d618:	8925      	ldrh	r5, [r4, #8]
 800d61a:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d61e:	eba5 050c 	sub.w	r5, r5, ip
 800d622:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d626:	b22d      	sxth	r5, r5
 800d628:	784a      	ldrb	r2, [r1, #1]
 800d62a:	f8d8 3000 	ldr.w	r3, [r8]
 800d62e:	9500      	str	r5, [sp, #0]
 800d630:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d634:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800d638:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d63c:	a803      	add	r0, sp, #12
 800d63e:	f001 fbbd 	bl	800edbc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d642:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800d646:	b203      	sxth	r3, r0
 800d648:	18b9      	adds	r1, r7, r2
 800d64a:	2900      	cmp	r1, #0
 800d64c:	dd0b      	ble.n	800d666 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d64e:	3b01      	subs	r3, #1
 800d650:	fb13 f302 	smulbb	r3, r3, r2
 800d654:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d658:	b21f      	sxth	r7, r3
 800d65a:	4638      	mov	r0, r7
 800d65c:	b01d      	add	sp, #116	@ 0x74
 800d65e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d662:	b003      	add	sp, #12
 800d664:	4770      	bx	lr
 800d666:	2b00      	cmp	r3, #0
 800d668:	dcf7      	bgt.n	800d65a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d66a:	2700      	movs	r7, #0
 800d66c:	e7f5      	b.n	800d65a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d66e:	bf00      	nop
 800d670:	20002284 	.word	0x20002284
 800d674:	20002280 	.word	0x20002280
 800d678:	20002288 	.word	0x20002288

0800d67c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d67c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d680:	4bbc      	ldr	r3, [pc, #752]	@ (800d974 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d682:	460c      	mov	r4, r1
 800d684:	881b      	ldrh	r3, [r3, #0]
 800d686:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800d688:	b0a9      	sub	sp, #164	@ 0xa4
 800d68a:	428b      	cmp	r3, r1
 800d68c:	4680      	mov	r8, r0
 800d68e:	d809      	bhi.n	800d6a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d690:	2300      	movs	r3, #0
 800d692:	f04f 32ff 	mov.w	r2, #4294967295
 800d696:	e9c0 3200 	strd	r3, r2, [r0]
 800d69a:	6083      	str	r3, [r0, #8]
 800d69c:	4640      	mov	r0, r8
 800d69e:	b029      	add	sp, #164	@ 0xa4
 800d6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6a4:	4eb4      	ldr	r6, [pc, #720]	@ (800d978 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d6a6:	6833      	ldr	r3, [r6, #0]
 800d6a8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d6ac:	4bb3      	ldr	r3, [pc, #716]	@ (800d97c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d6ae:	681b      	ldr	r3, [r3, #0]
 800d6b0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d6b4:	4bb2      	ldr	r3, [pc, #712]	@ (800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d6b6:	6818      	ldr	r0, [r3, #0]
 800d6b8:	f7fc fa50 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800d6bc:	682b      	ldr	r3, [r5, #0]
 800d6be:	4681      	mov	r9, r0
 800d6c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d6c2:	4628      	mov	r0, r5
 800d6c4:	4798      	blx	r3
 800d6c6:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800d6c8:	b203      	sxth	r3, r0
 800d6ca:	4407      	add	r7, r0
 800d6cc:	9304      	str	r3, [sp, #16]
 800d6ce:	b2bb      	uxth	r3, r7
 800d6d0:	9303      	str	r3, [sp, #12]
 800d6d2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800d6d6:	4682      	mov	sl, r0
 800d6d8:	a80f      	add	r0, sp, #60	@ 0x3c
 800d6da:	2b00      	cmp	r3, #0
 800d6dc:	f040 80a5 	bne.w	800d82a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800d6e0:	f003 fdf8 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 800d6e4:	682b      	ldr	r3, [r5, #0]
 800d6e6:	4628      	mov	r0, r5
 800d6e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d6ea:	4798      	blx	r3
 800d6ec:	682b      	ldr	r3, [r5, #0]
 800d6ee:	4606      	mov	r6, r0
 800d6f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d6f2:	4628      	mov	r0, r5
 800d6f4:	4798      	blx	r3
 800d6f6:	6823      	ldr	r3, [r4, #0]
 800d6f8:	4607      	mov	r7, r0
 800d6fa:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	4798      	blx	r3
 800d700:	6823      	ldr	r3, [r4, #0]
 800d702:	4683      	mov	fp, r0
 800d704:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d708:	4620      	mov	r0, r4
 800d70a:	4798      	blx	r3
 800d70c:	4632      	mov	r2, r6
 800d70e:	2600      	movs	r6, #0
 800d710:	463b      	mov	r3, r7
 800d712:	4637      	mov	r7, r6
 800d714:	e9cd b000 	strd	fp, r0, [sp]
 800d718:	4649      	mov	r1, r9
 800d71a:	a80f      	add	r0, sp, #60	@ 0x3c
 800d71c:	f003 fe4a 	bl	80113b4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d720:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d724:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800d978 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d728:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d72c:	bf0c      	ite	eq
 800d72e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d732:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d736:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800d738:	f8db 3000 	ldr.w	r3, [fp]
 800d73c:	4629      	mov	r1, r5
 800d73e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d742:	785b      	ldrb	r3, [r3, #1]
 800d744:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800d748:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d74c:	a80f      	add	r0, sp, #60	@ 0x3c
 800d74e:	f001 f83e 	bl	800e7ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d752:	4286      	cmp	r6, r0
 800d754:	bfb8      	it	lt
 800d756:	4606      	movlt	r6, r0
 800d758:	9b03      	ldr	r3, [sp, #12]
 800d75a:	3701      	adds	r7, #1
 800d75c:	eba9 0903 	sub.w	r9, r9, r3
 800d760:	a80f      	add	r0, sp, #60	@ 0x3c
 800d762:	b236      	sxth	r6, r6
 800d764:	b2bf      	uxth	r7, r7
 800d766:	fa0f f989 	sxth.w	r9, r9
 800d76a:	f003 fdda 	bl	8011322 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d76e:	b918      	cbnz	r0, 800d778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d770:	7a2b      	ldrb	r3, [r5, #8]
 800d772:	444b      	add	r3, r9
 800d774:	2b00      	cmp	r3, #0
 800d776:	dcde      	bgt.n	800d736 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800d778:	9b03      	ldr	r3, [sp, #12]
 800d77a:	9a04      	ldr	r2, [sp, #16]
 800d77c:	fb13 f707 	smulbb	r7, r3, r7
 800d780:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800d782:	4620      	mov	r0, r4
 800d784:	1aff      	subs	r7, r7, r3
 800d786:	b2bf      	uxth	r7, r7
 800d788:	b23b      	sxth	r3, r7
 800d78a:	429a      	cmp	r2, r3
 800d78c:	bfa8      	it	ge
 800d78e:	4657      	movge	r7, sl
 800d790:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d794:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d798:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d79c:	6823      	ldr	r3, [r4, #0]
 800d79e:	bf08      	it	eq
 800d7a0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d7a4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800d7a6:	bf18      	it	ne
 800d7a8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d7ac:	4798      	blx	r3
 800d7ae:	444f      	add	r7, r9
 800d7b0:	fa1f f987 	uxth.w	r9, r7
 800d7b4:	2801      	cmp	r0, #1
 800d7b6:	fa0f f789 	sxth.w	r7, r9
 800d7ba:	b2b3      	uxth	r3, r6
 800d7bc:	f000 80e2 	beq.w	800d984 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d7c0:	2802      	cmp	r0, #2
 800d7c2:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800d7c6:	f000 80e3 	beq.w	800d990 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d7ca:	7aea      	ldrb	r2, [r5, #11]
 800d7cc:	7b2d      	ldrb	r5, [r5, #12]
 800d7ce:	b236      	sxth	r6, r6
 800d7d0:	1ab6      	subs	r6, r6, r2
 800d7d2:	442a      	add	r2, r5
 800d7d4:	4413      	add	r3, r2
 800d7d6:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800d7da:	fa1f fa86 	uxth.w	sl, r6
 800d7de:	b29b      	uxth	r3, r3
 800d7e0:	2a02      	cmp	r2, #2
 800d7e2:	fa0f fb8a 	sxth.w	fp, sl
 800d7e6:	b21e      	sxth	r6, r3
 800d7e8:	f000 80d6 	beq.w	800d998 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d7ec:	2a03      	cmp	r2, #3
 800d7ee:	f000 80de 	beq.w	800d9ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d7f2:	2a01      	cmp	r2, #1
 800d7f4:	f040 80e6 	bne.w	800d9c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d7f8:	4633      	mov	r3, r6
 800d7fa:	463e      	mov	r6, r7
 800d7fc:	461f      	mov	r7, r3
 800d7fe:	8925      	ldrh	r5, [r4, #8]
 800d800:	eba5 0909 	sub.w	r9, r5, r9
 800d804:	465d      	mov	r5, fp
 800d806:	fa0f fb89 	sxth.w	fp, r9
 800d80a:	4b5d      	ldr	r3, [pc, #372]	@ (800d980 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d80c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d80e:	6818      	ldr	r0, [r3, #0]
 800d810:	f7fc f9a4 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800d814:	f8a8 b000 	strh.w	fp, [r8]
 800d818:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d81c:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d820:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d824:	f8c8 0008 	str.w	r0, [r8, #8]
 800d828:	e738      	b.n	800d69c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d82a:	f003 fd53 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 800d82e:	682b      	ldr	r3, [r5, #0]
 800d830:	4628      	mov	r0, r5
 800d832:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800d834:	4798      	blx	r3
 800d836:	682b      	ldr	r3, [r5, #0]
 800d838:	4607      	mov	r7, r0
 800d83a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800d83c:	4628      	mov	r0, r5
 800d83e:	4798      	blx	r3
 800d840:	6823      	ldr	r3, [r4, #0]
 800d842:	4683      	mov	fp, r0
 800d844:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d846:	4620      	mov	r0, r4
 800d848:	4798      	blx	r3
 800d84a:	6822      	ldr	r2, [r4, #0]
 800d84c:	9005      	str	r0, [sp, #20]
 800d84e:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800d852:	4620      	mov	r0, r4
 800d854:	4790      	blx	r2
 800d856:	9b05      	ldr	r3, [sp, #20]
 800d858:	463a      	mov	r2, r7
 800d85a:	4649      	mov	r1, r9
 800d85c:	9001      	str	r0, [sp, #4]
 800d85e:	9300      	str	r3, [sp, #0]
 800d860:	a80f      	add	r0, sp, #60	@ 0x3c
 800d862:	465b      	mov	r3, fp
 800d864:	f003 fda6 	bl	80113b4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d868:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800d86c:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d870:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800d874:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d878:	bf0a      	itet	eq
 800d87a:	464a      	moveq	r2, r9
 800d87c:	461a      	movne	r2, r3
 800d87e:	4699      	moveq	r9, r3
 800d880:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800d884:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800d886:	1ad2      	subs	r2, r2, r3
 800d888:	6833      	ldr	r3, [r6, #0]
 800d88a:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800d88e:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d892:	7859      	ldrb	r1, [r3, #1]
 800d894:	2300      	movs	r3, #0
 800d896:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800d89a:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d89e:	af0f      	add	r7, sp, #60	@ 0x3c
 800d8a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d8a4:	9707      	str	r7, [sp, #28]
 800d8a6:	f88d 1020 	strb.w	r1, [sp, #32]
 800d8aa:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800d8ae:	9509      	str	r5, [sp, #36]	@ 0x24
 800d8b0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800d8b4:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800d8b8:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800d8bc:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800d8c0:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800d8c4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800d8c8:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800d8cc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d8d0:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d8d4:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800d8d8:	b350      	cbz	r0, 800d930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d8da:	682b      	ldr	r3, [r5, #0]
 800d8dc:	4628      	mov	r0, r5
 800d8de:	695b      	ldr	r3, [r3, #20]
 800d8e0:	4798      	blx	r3
 800d8e2:	4607      	mov	r7, r0
 800d8e4:	b320      	cbz	r0, 800d930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d8e6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d8e8:	4639      	mov	r1, r7
 800d8ea:	6803      	ldr	r3, [r0, #0]
 800d8ec:	68db      	ldr	r3, [r3, #12]
 800d8ee:	4798      	blx	r3
 800d8f0:	4606      	mov	r6, r0
 800d8f2:	b1e8      	cbz	r0, 800d930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d8f4:	7b43      	ldrb	r3, [r0, #13]
 800d8f6:	7a82      	ldrb	r2, [r0, #10]
 800d8f8:	005b      	lsls	r3, r3, #1
 800d8fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d8fe:	4313      	orrs	r3, r2
 800d900:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800d904:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800d908:	2b06      	cmp	r3, #6
 800d90a:	d111      	bne.n	800d930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800d90c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d90e:	4632      	mov	r2, r6
 800d910:	6803      	ldr	r3, [r0, #0]
 800d912:	4639      	mov	r1, r7
 800d914:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d916:	4798      	blx	r3
 800d918:	7b73      	ldrb	r3, [r6, #13]
 800d91a:	005b      	lsls	r3, r3, #1
 800d91c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800d920:	7ab3      	ldrb	r3, [r6, #10]
 800d922:	4313      	orrs	r3, r2
 800d924:	4418      	add	r0, r3
 800d926:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d92a:	4418      	add	r0, r3
 800d92c:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800d930:	2600      	movs	r6, #0
 800d932:	4637      	mov	r7, r6
 800d934:	a806      	add	r0, sp, #24
 800d936:	f001 f93f 	bl	800ebb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d93a:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800d93e:	9b03      	ldr	r3, [sp, #12]
 800d940:	4286      	cmp	r6, r0
 800d942:	bfb8      	it	lt
 800d944:	4606      	movlt	r6, r0
 800d946:	eba9 0903 	sub.w	r9, r9, r3
 800d94a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d94e:	3701      	adds	r7, #1
 800d950:	b236      	sxth	r6, r6
 800d952:	b2bf      	uxth	r7, r7
 800d954:	fa0f f989 	sxth.w	r9, r9
 800d958:	2b00      	cmp	r3, #0
 800d95a:	f43f af0d 	beq.w	800d778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d95e:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800d962:	2b00      	cmp	r3, #0
 800d964:	f47f af08 	bne.w	800d778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d968:	7a2b      	ldrb	r3, [r5, #8]
 800d96a:	444b      	add	r3, r9
 800d96c:	2b00      	cmp	r3, #0
 800d96e:	dce1      	bgt.n	800d934 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800d970:	e702      	b.n	800d778 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800d972:	bf00      	nop
 800d974:	20002284 	.word	0x20002284
 800d978:	20002280 	.word	0x20002280
 800d97c:	20002288 	.word	0x20002288
 800d980:	2000228c 	.word	0x2000228c
 800d984:	2002      	movs	r0, #2
 800d986:	ebaa 0606 	sub.w	r6, sl, r6
 800d98a:	fb96 f6f0 	sdiv	r6, r6, r0
 800d98e:	e71c      	b.n	800d7ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d990:	441e      	add	r6, r3
 800d992:	ebaa 0606 	sub.w	r6, sl, r6
 800d996:	e718      	b.n	800d7ca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800d998:	8925      	ldrh	r5, [r4, #8]
 800d99a:	1aed      	subs	r5, r5, r3
 800d99c:	eba5 050a 	sub.w	r5, r5, sl
 800d9a0:	fa0f fb85 	sxth.w	fp, r5
 800d9a4:	8965      	ldrh	r5, [r4, #10]
 800d9a6:	eba5 0509 	sub.w	r5, r5, r9
 800d9aa:	b22d      	sxth	r5, r5
 800d9ac:	e72d      	b.n	800d80a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d9ae:	8965      	ldrh	r5, [r4, #10]
 800d9b0:	f04f 0b00 	mov.w	fp, #0
 800d9b4:	1aed      	subs	r5, r5, r3
 800d9b6:	4633      	mov	r3, r6
 800d9b8:	eba5 050a 	sub.w	r5, r5, sl
 800d9bc:	463e      	mov	r6, r7
 800d9be:	b22d      	sxth	r5, r5
 800d9c0:	461f      	mov	r7, r3
 800d9c2:	e722      	b.n	800d80a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800d9c4:	2500      	movs	r5, #0
 800d9c6:	e720      	b.n	800d80a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800d9c8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d9c8:	b513      	push	{r0, r1, r4, lr}
 800d9ca:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800d9ce:	4604      	mov	r4, r0
 800d9d0:	b1fb      	cbz	r3, 800da12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d9d2:	4b16      	ldr	r3, [pc, #88]	@ (800da2c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d9d4:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800d9d6:	881b      	ldrh	r3, [r3, #0]
 800d9d8:	428b      	cmp	r3, r1
 800d9da:	d91a      	bls.n	800da12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d9dc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d9e0:	2b00      	cmp	r3, #0
 800d9e2:	dd16      	ble.n	800da12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d9e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d9e8:	2b00      	cmp	r3, #0
 800d9ea:	dd12      	ble.n	800da12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d9ec:	4b10      	ldr	r3, [pc, #64]	@ (800da30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d9ee:	6818      	ldr	r0, [r3, #0]
 800d9f0:	f7fc f8b4 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800d9f4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800d9f8:	6822      	ldr	r2, [r4, #0]
 800d9fa:	2b00      	cmp	r3, #0
 800d9fc:	db06      	blt.n	800da0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d9fe:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800da02:	2b00      	cmp	r3, #0
 800da04:	db02      	blt.n	800da0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800da06:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800da08:	4298      	cmp	r0, r3
 800da0a:	d004      	beq.n	800da16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800da0c:	6953      	ldr	r3, [r2, #20]
 800da0e:	4620      	mov	r0, r4
 800da10:	4798      	blx	r3
 800da12:	b002      	add	sp, #8
 800da14:	bd10      	pop	{r4, pc}
 800da16:	466b      	mov	r3, sp
 800da18:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800da1c:	c903      	ldmia	r1, {r0, r1}
 800da1e:	6912      	ldr	r2, [r2, #16]
 800da20:	e883 0003 	stmia.w	r3, {r0, r1}
 800da24:	4619      	mov	r1, r3
 800da26:	4620      	mov	r0, r4
 800da28:	4790      	blx	r2
 800da2a:	e7f2      	b.n	800da12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800da2c:	20002284 	.word	0x20002284
 800da30:	2000228c 	.word	0x2000228c

0800da34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800da34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da38:	4b44      	ldr	r3, [pc, #272]	@ (800db4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800da3a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800da3c:	881b      	ldrh	r3, [r3, #0]
 800da3e:	b08e      	sub	sp, #56	@ 0x38
 800da40:	4293      	cmp	r3, r2
 800da42:	4604      	mov	r4, r0
 800da44:	d97e      	bls.n	800db44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800da46:	6808      	ldr	r0, [r1, #0]
 800da48:	4d41      	ldr	r5, [pc, #260]	@ (800db50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800da4a:	6849      	ldr	r1, [r1, #4]
 800da4c:	ab05      	add	r3, sp, #20
 800da4e:	c303      	stmia	r3!, {r0, r1}
 800da50:	4611      	mov	r1, r2
 800da52:	6828      	ldr	r0, [r5, #0]
 800da54:	f7fc f882 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800da58:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800da5c:	2b00      	cmp	r3, #0
 800da5e:	db11      	blt.n	800da84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800da60:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800da64:	2b00      	cmp	r3, #0
 800da66:	db0d      	blt.n	800da84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800da68:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800da6a:	4298      	cmp	r0, r3
 800da6c:	d10a      	bne.n	800da84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800da6e:	ab09      	add	r3, sp, #36	@ 0x24
 800da70:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800da74:	e892 0003 	ldmia.w	r2, {r0, r1}
 800da78:	e883 0003 	stmia.w	r3, {r0, r1}
 800da7c:	4619      	mov	r1, r3
 800da7e:	a805      	add	r0, sp, #20
 800da80:	f7fe fce0 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 800da84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800da88:	2b00      	cmp	r3, #0
 800da8a:	dd5b      	ble.n	800db44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800da8c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800da90:	2b00      	cmp	r3, #0
 800da92:	dd57      	ble.n	800db44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800da94:	4f2f      	ldr	r7, [pc, #188]	@ (800db54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800da96:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800da98:	683b      	ldr	r3, [r7, #0]
 800da9a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800da9e:	4b2e      	ldr	r3, [pc, #184]	@ (800db58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800daa0:	681b      	ldr	r3, [r3, #0]
 800daa2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800daa6:	2e00      	cmp	r6, #0
 800daa8:	d04c      	beq.n	800db44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800daaa:	6823      	ldr	r3, [r4, #0]
 800daac:	4620      	mov	r0, r4
 800daae:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800dab0:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800dab4:	4798      	blx	r3
 800dab6:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800dab8:	683b      	ldr	r3, [r7, #0]
 800daba:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800dabe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800dac2:	785b      	ldrb	r3, [r3, #1]
 800dac4:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800dac8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800dacc:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800dad0:	4b22      	ldr	r3, [pc, #136]	@ (800db5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800dad2:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800dad6:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800dada:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800dadc:	681b      	ldr	r3, [r3, #0]
 800dade:	9609      	str	r6, [sp, #36]	@ 0x24
 800dae0:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800dae4:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800dae8:	910b      	str	r1, [sp, #44]	@ 0x2c
 800daea:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800daee:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800daf2:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800daf6:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800dafa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800dafe:	b10a      	cbz	r2, 800db04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800db00:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800db02:	b906      	cbnz	r6, 800db06 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800db04:	689e      	ldr	r6, [r3, #8]
 800db06:	af07      	add	r7, sp, #28
 800db08:	4621      	mov	r1, r4
 800db0a:	4638      	mov	r0, r7
 800db0c:	f003 f82c 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db10:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800db12:	6828      	ldr	r0, [r5, #0]
 800db14:	f7fc f822 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800db18:	6823      	ldr	r3, [r4, #0]
 800db1a:	4605      	mov	r5, r0
 800db1c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800db1e:	4620      	mov	r0, r4
 800db20:	4798      	blx	r3
 800db22:	6823      	ldr	r3, [r4, #0]
 800db24:	4680      	mov	r8, r0
 800db26:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800db2a:	4620      	mov	r0, r4
 800db2c:	4798      	blx	r3
 800db2e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800db32:	ab09      	add	r3, sp, #36	@ 0x24
 800db34:	9300      	str	r3, [sp, #0]
 800db36:	9501      	str	r5, [sp, #4]
 800db38:	ab05      	add	r3, sp, #20
 800db3a:	e897 0006 	ldmia.w	r7, {r1, r2}
 800db3e:	4630      	mov	r0, r6
 800db40:	f7fb ff9d 	bl	8009a7e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800db44:	b00e      	add	sp, #56	@ 0x38
 800db46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db4a:	bf00      	nop
 800db4c:	20002284 	.word	0x20002284
 800db50:	2000228c 	.word	0x2000228c
 800db54:	20002280 	.word	0x20002280
 800db58:	20002288 	.word	0x20002288
 800db5c:	20002230 	.word	0x20002230

0800db60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800db60:	b538      	push	{r3, r4, r5, lr}
 800db62:	4b0e      	ldr	r3, [pc, #56]	@ (800db9c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800db64:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800db66:	881b      	ldrh	r3, [r3, #0]
 800db68:	4604      	mov	r4, r0
 800db6a:	429a      	cmp	r2, r3
 800db6c:	d214      	bcs.n	800db98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800db6e:	6803      	ldr	r3, [r0, #0]
 800db70:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800db72:	4798      	blx	r3
 800db74:	6823      	ldr	r3, [r4, #0]
 800db76:	4605      	mov	r5, r0
 800db78:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800db7a:	4620      	mov	r0, r4
 800db7c:	4798      	blx	r3
 800db7e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800db82:	b22d      	sxth	r5, r5
 800db84:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800db88:	4601      	mov	r1, r0
 800db8a:	bf06      	itte	eq
 800db8c:	4602      	moveq	r2, r0
 800db8e:	4629      	moveq	r1, r5
 800db90:	462a      	movne	r2, r5
 800db92:	4620      	mov	r0, r4
 800db94:	f7fb f80d 	bl	8008bb2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800db98:	bd38      	pop	{r3, r4, r5, pc}
 800db9a:	bf00      	nop
 800db9c:	20002284 	.word	0x20002284

0800dba0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800dba0:	b530      	push	{r4, r5, lr}
 800dba2:	888b      	ldrh	r3, [r1, #4]
 800dba4:	b085      	sub	sp, #20
 800dba6:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800dba8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800dbac:	4604      	mov	r4, r0
 800dbae:	b923      	cbnz	r3, 800dbba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dbb0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dbb4:	b90b      	cbnz	r3, 800dbba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800dbb6:	f7ff ffd3 	bl	800db60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800dbba:	466d      	mov	r5, sp
 800dbbc:	6823      	ldr	r3, [r4, #0]
 800dbbe:	4621      	mov	r1, r4
 800dbc0:	4628      	mov	r0, r5
 800dbc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800dbc6:	4798      	blx	r3
 800dbc8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800dbcc:	343c      	adds	r4, #60	@ 0x3c
 800dbce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800dbd2:	b005      	add	sp, #20
 800dbd4:	bd30      	pop	{r4, r5, pc}

0800dbd6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800dbd6:	2300      	movs	r3, #0
 800dbd8:	8083      	strh	r3, [r0, #4]
 800dbda:	80c3      	strh	r3, [r0, #6]
 800dbdc:	8003      	strh	r3, [r0, #0]
 800dbde:	8043      	strh	r3, [r0, #2]
 800dbe0:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800dbe4:	2bff      	cmp	r3, #255	@ 0xff
 800dbe6:	bf01      	itttt	eq
 800dbe8:	890b      	ldrheq	r3, [r1, #8]
 800dbea:	8083      	strheq	r3, [r0, #4]
 800dbec:	894b      	ldrheq	r3, [r1, #10]
 800dbee:	80c3      	strheq	r3, [r0, #6]
 800dbf0:	4770      	bx	lr
	...

0800dbf4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800dbf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dbf6:	4604      	mov	r4, r0
 800dbf8:	466b      	mov	r3, sp
 800dbfa:	6808      	ldr	r0, [r1, #0]
 800dbfc:	6849      	ldr	r1, [r1, #4]
 800dbfe:	c303      	stmia	r3!, {r0, r1}
 800dc00:	6823      	ldr	r3, [r4, #0]
 800dc02:	4669      	mov	r1, sp
 800dc04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dc06:	4620      	mov	r0, r4
 800dc08:	4798      	blx	r3
 800dc0a:	4b08      	ldr	r3, [pc, #32]	@ (800dc2c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800dc0c:	681b      	ldr	r3, [r3, #0]
 800dc0e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800dc12:	b10a      	cbz	r2, 800dc18 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800dc14:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800dc16:	b900      	cbnz	r0, 800dc1a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800dc18:	6898      	ldr	r0, [r3, #8]
 800dc1a:	6803      	ldr	r3, [r0, #0]
 800dc1c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800dc1e:	6a1d      	ldr	r5, [r3, #32]
 800dc20:	4669      	mov	r1, sp
 800dc22:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800dc26:	47a8      	blx	r5
 800dc28:	b003      	add	sp, #12
 800dc2a:	bd30      	pop	{r4, r5, pc}
 800dc2c:	20002230 	.word	0x20002230

0800dc30 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800dc30:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800dc34:	b12a      	cbz	r2, 800dc42 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800dc36:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800dc3a:	b112      	cbz	r2, 800dc42 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800dc3c:	6803      	ldr	r3, [r0, #0]
 800dc3e:	695b      	ldr	r3, [r3, #20]
 800dc40:	4718      	bx	r3
 800dc42:	4770      	bx	lr

0800dc44 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800dc44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc48:	4b2f      	ldr	r3, [pc, #188]	@ (800dd08 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800dc4a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800dc4c:	881b      	ldrh	r3, [r3, #0]
 800dc4e:	b08d      	sub	sp, #52	@ 0x34
 800dc50:	4293      	cmp	r3, r2
 800dc52:	4604      	mov	r4, r0
 800dc54:	460f      	mov	r7, r1
 800dc56:	d954      	bls.n	800dd02 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800dc58:	4b2c      	ldr	r3, [pc, #176]	@ (800dd0c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800dc5a:	6819      	ldr	r1, [r3, #0]
 800dc5c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800dc60:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800dc64:	4a2a      	ldr	r2, [pc, #168]	@ (800dd10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800dc66:	6812      	ldr	r2, [r2, #0]
 800dc68:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800dc6c:	2900      	cmp	r1, #0
 800dc6e:	d048      	beq.n	800dd02 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800dc70:	785a      	ldrb	r2, [r3, #1]
 800dc72:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800dc76:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800dc7a:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800dc7e:	4b25      	ldr	r3, [pc, #148]	@ (800dd14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800dc80:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dc84:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800dc88:	681a      	ldr	r2, [r3, #0]
 800dc8a:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800dc8e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800dc92:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800dc96:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800dc98:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800dc9c:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800dca0:	9107      	str	r1, [sp, #28]
 800dca2:	f88d 8020 	strb.w	r8, [sp, #32]
 800dca6:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800dcaa:	9609      	str	r6, [sp, #36]	@ 0x24
 800dcac:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800dcb0:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800dcb4:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800dcb8:	b10b      	cbz	r3, 800dcbe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800dcba:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800dcbc:	b905      	cbnz	r5, 800dcc0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800dcbe:	6895      	ldr	r5, [r2, #8]
 800dcc0:	ae05      	add	r6, sp, #20
 800dcc2:	4621      	mov	r1, r4
 800dcc4:	4630      	mov	r0, r6
 800dcc6:	f002 ff4f 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcca:	4b13      	ldr	r3, [pc, #76]	@ (800dd18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800dccc:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800dcce:	6818      	ldr	r0, [r3, #0]
 800dcd0:	f7fb ff44 	bl	8009b5c <_ZNK8touchgfx5Texts7getTextEt>
 800dcd4:	6823      	ldr	r3, [r4, #0]
 800dcd6:	4680      	mov	r8, r0
 800dcd8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800dcda:	4620      	mov	r0, r4
 800dcdc:	4798      	blx	r3
 800dcde:	6823      	ldr	r3, [r4, #0]
 800dce0:	4681      	mov	r9, r0
 800dce2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800dce6:	4620      	mov	r0, r4
 800dce8:	4798      	blx	r3
 800dcea:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800dcee:	ab07      	add	r3, sp, #28
 800dcf0:	9300      	str	r3, [sp, #0]
 800dcf2:	f8cd 8004 	str.w	r8, [sp, #4]
 800dcf6:	463b      	mov	r3, r7
 800dcf8:	e896 0006 	ldmia.w	r6, {r1, r2}
 800dcfc:	4628      	mov	r0, r5
 800dcfe:	f7fb febe 	bl	8009a7e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dd02:	b00d      	add	sp, #52	@ 0x34
 800dd04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd08:	20002284 	.word	0x20002284
 800dd0c:	20002280 	.word	0x20002280
 800dd10:	20002288 	.word	0x20002288
 800dd14:	20002230 	.word	0x20002230
 800dd18:	2000228c 	.word	0x2000228c

0800dd1c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800dd1c:	b510      	push	{r4, lr}
 800dd1e:	6803      	ldr	r3, [r0, #0]
 800dd20:	460c      	mov	r4, r1
 800dd22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dd24:	4798      	blx	r3
 800dd26:	1b03      	subs	r3, r0, r4
 800dd28:	4258      	negs	r0, r3
 800dd2a:	4158      	adcs	r0, r3
 800dd2c:	bd10      	pop	{r4, pc}
	...

0800dd30 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800dd30:	4b01      	ldr	r3, [pc, #4]	@ (800dd38 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800dd32:	6019      	str	r1, [r3, #0]
 800dd34:	4770      	bx	lr
 800dd36:	bf00      	nop
 800dd38:	20002238 	.word	0x20002238

0800dd3c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800dd3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd40:	4696      	mov	lr, r2
 800dd42:	4614      	mov	r4, r2
 800dd44:	4605      	mov	r5, r0
 800dd46:	460e      	mov	r6, r1
 800dd48:	461f      	mov	r7, r3
 800dd4a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800dd4e:	b097      	sub	sp, #92	@ 0x5c
 800dd50:	f10d 0c1c 	add.w	ip, sp, #28
 800dd54:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800dd58:	f8de 3000 	ldr.w	r3, [lr]
 800dd5c:	f104 0e14 	add.w	lr, r4, #20
 800dd60:	f8cc 3000 	str.w	r3, [ip]
 800dd64:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800dd68:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800dd6c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800dd70:	f8de 3000 	ldr.w	r3, [lr]
 800dd74:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800dd78:	f8cc 3000 	str.w	r3, [ip]
 800dd7c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800dd80:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800dd84:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800dd88:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800dd8c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800dd90:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800dd94:	f8de 3000 	ldr.w	r3, [lr]
 800dd98:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800dd9a:	f8cc 3000 	str.w	r3, [ip]
 800dd9e:	9201      	str	r2, [sp, #4]
 800dda0:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800dda4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800dda6:	682b      	ldr	r3, [r5, #0]
 800dda8:	9200      	str	r2, [sp, #0]
 800ddaa:	f8cd 8008 	str.w	r8, [sp, #8]
 800ddae:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ddb2:	aa07      	add	r2, sp, #28
 800ddb4:	463b      	mov	r3, r7
 800ddb6:	4631      	mov	r1, r6
 800ddb8:	4628      	mov	r0, r5
 800ddba:	47d8      	blx	fp
 800ddbc:	46a6      	mov	lr, r4
 800ddbe:	f10d 0c1c 	add.w	ip, sp, #28
 800ddc2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ddc6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ddca:	f8de 3000 	ldr.w	r3, [lr]
 800ddce:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ddd2:	f8cc 3000 	str.w	r3, [ip]
 800ddd6:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ddda:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ddde:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800dde2:	f8de 3000 	ldr.w	r3, [lr]
 800dde6:	343c      	adds	r4, #60	@ 0x3c
 800dde8:	f8cc 3000 	str.w	r3, [ip]
 800ddec:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ddf0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ddf2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ddf6:	6823      	ldr	r3, [r4, #0]
 800ddf8:	4631      	mov	r1, r6
 800ddfa:	f8cc 3000 	str.w	r3, [ip]
 800ddfe:	682b      	ldr	r3, [r5, #0]
 800de00:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800de04:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800de06:	f8cd 8008 	str.w	r8, [sp, #8]
 800de0a:	9201      	str	r2, [sp, #4]
 800de0c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800de0e:	4628      	mov	r0, r5
 800de10:	9200      	str	r2, [sp, #0]
 800de12:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800de14:	aa07      	add	r2, sp, #28
 800de16:	463b      	mov	r3, r7
 800de18:	47a0      	blx	r4
 800de1a:	b017      	add	sp, #92	@ 0x5c
 800de1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800de20 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800de20:	2000      	movs	r0, #0
 800de22:	4770      	bx	lr

0800de24 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800de24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de28:	b08d      	sub	sp, #52	@ 0x34
 800de2a:	4688      	mov	r8, r1
 800de2c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800de2e:	f8d3 c000 	ldr.w	ip, [r3]
 800de32:	680f      	ldr	r7, [r1, #0]
 800de34:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800de38:	eba7 070c 	sub.w	r7, r7, ip
 800de3c:	42bc      	cmp	r4, r7
 800de3e:	bfa8      	it	ge
 800de40:	463c      	movge	r4, r7
 800de42:	ee07 4a90 	vmov	s15, r4
 800de46:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800de4a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800de4e:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800de52:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800de56:	edd3 6a07 	vldr	s13, [r3, #28]
 800de5a:	ee25 4a04 	vmul.f32	s8, s10, s8
 800de5e:	ee65 4a24 	vmul.f32	s9, s10, s9
 800de62:	ee25 5a27 	vmul.f32	s10, s10, s15
 800de66:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800de6a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800de6e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800de72:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800de76:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800de78:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800de7c:	f9b1 9000 	ldrsh.w	r9, [r1]
 800de80:	f9ba 1000 	ldrsh.w	r1, [sl]
 800de84:	eb09 0e0c 	add.w	lr, r9, ip
 800de88:	4571      	cmp	r1, lr
 800de8a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800de8e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800de92:	ee36 0a84 	vadd.f32	s0, s13, s8
 800de96:	ee61 1a87 	vmul.f32	s3, s3, s14
 800de9a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800de9e:	f340 808c 	ble.w	800dfba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800dea2:	eba1 060e 	sub.w	r6, r1, lr
 800dea6:	fb96 f5f4 	sdiv	r5, r6, r4
 800deaa:	ee07 5a10 	vmov	s14, r5
 800deae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800deb2:	2d00      	cmp	r5, #0
 800deb4:	fb04 6615 	mls	r6, r4, r5, r6
 800deb8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800debc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800dec0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800dec4:	dd12      	ble.n	800deec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800dec6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800deca:	eef5 6a40 	vcmp.f32	s13, #0.0
 800dece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ded2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ded6:	bf14      	ite	ne
 800ded8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800dedc:	eeb0 7a67 	vmoveq.f32	s14, s15
 800dee0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800dee4:	ee61 1a87 	vmul.f32	s3, s3, s14
 800dee8:	ee22 2a07 	vmul.f32	s4, s4, s14
 800deec:	fb05 f204 	mul.w	r2, r5, r4
 800def0:	1abf      	subs	r7, r7, r2
 800def2:	4494      	add	ip, r2
 800def4:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800def8:	4411      	add	r1, r2
 800defa:	eb09 020c 	add.w	r2, r9, ip
 800defe:	443a      	add	r2, r7
 800df00:	b209      	sxth	r1, r1
 800df02:	428a      	cmp	r2, r1
 800df04:	bfc4      	itt	gt
 800df06:	eba1 0209 	subgt.w	r2, r1, r9
 800df0a:	eba2 070c 	subgt.w	r7, r2, ip
 800df0e:	2f00      	cmp	r7, #0
 800df10:	dd50      	ble.n	800dfb4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800df12:	fb97 f1f4 	sdiv	r1, r7, r4
 800df16:	fb04 7211 	mls	r2, r4, r1, r7
 800df1a:	b90a      	cbnz	r2, 800df20 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800df1c:	4622      	mov	r2, r4
 800df1e:	3901      	subs	r1, #1
 800df20:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800df24:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800df28:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800df2c:	ee21 3a23 	vmul.f32	s6, s2, s7
 800df30:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800df34:	ee17 7a90 	vmov	r7, s15
 800df38:	ee73 7a42 	vsub.f32	s15, s6, s4
 800df3c:	eef0 6a42 	vmov.f32	s13, s4
 800df40:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800df44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800df48:	ee17 ca90 	vmov	ip, s15
 800df4c:	eeb0 7a61 	vmov.f32	s14, s3
 800df50:	6840      	ldr	r0, [r0, #4]
 800df52:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800df56:	f8d0 a000 	ldr.w	sl, [r0]
 800df5a:	900b      	str	r0, [sp, #44]	@ 0x2c
 800df5c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800df5e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800df62:	9008      	str	r0, [sp, #32]
 800df64:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800df66:	695b      	ldr	r3, [r3, #20]
 800df68:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800df6c:	fb9c fcf4 	sdiv	ip, ip, r4
 800df70:	445b      	add	r3, fp
 800df72:	9307      	str	r3, [sp, #28]
 800df74:	ee16 3a90 	vmov	r3, s13
 800df78:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800df7c:	fb0c 3306 	mla	r3, ip, r6, r3
 800df80:	fb97 f7f4 	sdiv	r7, r7, r4
 800df84:	9302      	str	r3, [sp, #8]
 800df86:	ee17 3a10 	vmov	r3, s14
 800df8a:	2900      	cmp	r1, #0
 800df8c:	bfcc      	ite	gt
 800df8e:	46a1      	movgt	r9, r4
 800df90:	4691      	movle	r9, r2
 800df92:	44b6      	add	lr, r6
 800df94:	fb04 e505 	mla	r5, r4, r5, lr
 800df98:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800df9c:	fb07 3706 	mla	r7, r7, r6, r3
 800dfa0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800dfa4:	e9cd 4700 	strd	r4, r7, [sp]
 800dfa8:	eba9 0306 	sub.w	r3, r9, r6
 800dfac:	f8da 4008 	ldr.w	r4, [sl, #8]
 800dfb0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800dfb2:	47a0      	blx	r4
 800dfb4:	b00d      	add	sp, #52	@ 0x34
 800dfb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfba:	2500      	movs	r5, #0
 800dfbc:	462e      	mov	r6, r5
 800dfbe:	e799      	b.n	800def4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800dfc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800dfc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfc4:	461d      	mov	r5, r3
 800dfc6:	b0db      	sub	sp, #364	@ 0x16c
 800dfc8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800dfcc:	910f      	str	r1, [sp, #60]	@ 0x3c
 800dfce:	930a      	str	r3, [sp, #40]	@ 0x28
 800dfd0:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800dfd4:	9009      	str	r0, [sp, #36]	@ 0x24
 800dfd6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dfd8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800dfdc:	4614      	mov	r4, r2
 800dfde:	9310      	str	r3, [sp, #64]	@ 0x40
 800dfe0:	6803      	ldr	r3, [r0, #0]
 800dfe2:	4629      	mov	r1, r5
 800dfe4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800dfe6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800dfea:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800dfee:	47b8      	blx	r7
 800dff0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dff2:	6058      	str	r0, [r3, #4]
 800dff4:	2800      	cmp	r0, #0
 800dff6:	f000 83a1 	beq.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dffa:	ed94 7a02 	vldr	s14, [r4, #8]
 800dffe:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800e002:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e006:	682b      	ldr	r3, [r5, #0]
 800e008:	9314      	str	r3, [sp, #80]	@ 0x50
 800e00a:	686b      	ldr	r3, [r5, #4]
 800e00c:	9315      	str	r3, [sp, #84]	@ 0x54
 800e00e:	4bc1      	ldr	r3, [pc, #772]	@ (800e314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e010:	7819      	ldrb	r1, [r3, #0]
 800e012:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e016:	2900      	cmp	r1, #0
 800e018:	bf16      	itet	ne
 800e01a:	4619      	movne	r1, r3
 800e01c:	4611      	moveq	r1, r2
 800e01e:	4613      	movne	r3, r2
 800e020:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e024:	9116      	str	r1, [sp, #88]	@ 0x58
 800e026:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800e02a:	f240 8387 	bls.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e02e:	ed94 7a07 	vldr	s14, [r4, #28]
 800e032:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e03a:	f240 837f 	bls.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e03e:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800e042:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e04a:	f240 8377 	bls.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e04e:	6822      	ldr	r2, [r4, #0]
 800e050:	4bb1      	ldr	r3, [pc, #708]	@ (800e318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e052:	429a      	cmp	r2, r3
 800e054:	f2c0 8372 	blt.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e058:	49b0      	ldr	r1, [pc, #704]	@ (800e31c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e05a:	6963      	ldr	r3, [r4, #20]
 800e05c:	428a      	cmp	r2, r1
 800e05e:	f300 836d 	bgt.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e062:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e066:	48ae      	ldr	r0, [pc, #696]	@ (800e320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e068:	33ff      	adds	r3, #255	@ 0xff
 800e06a:	4283      	cmp	r3, r0
 800e06c:	f200 8366 	bhi.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e070:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800e072:	4dac      	ldr	r5, [pc, #688]	@ (800e324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e074:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800e078:	33ff      	adds	r3, #255	@ 0xff
 800e07a:	42ab      	cmp	r3, r5
 800e07c:	f200 835e 	bhi.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e080:	6862      	ldr	r2, [r4, #4]
 800e082:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800e086:	33ff      	adds	r3, #255	@ 0xff
 800e088:	4283      	cmp	r3, r0
 800e08a:	f200 8357 	bhi.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e08e:	69a1      	ldr	r1, [r4, #24]
 800e090:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800e094:	33ff      	adds	r3, #255	@ 0xff
 800e096:	4283      	cmp	r3, r0
 800e098:	f200 8350 	bhi.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e09c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800e09e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800e0a2:	30ff      	adds	r0, #255	@ 0xff
 800e0a4:	42a8      	cmp	r0, r5
 800e0a6:	f200 8349 	bhi.w	800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e0aa:	428a      	cmp	r2, r1
 800e0ac:	f280 8110 	bge.w	800e2d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e0b0:	429a      	cmp	r2, r3
 800e0b2:	f300 8119 	bgt.w	800e2e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e0b6:	4299      	cmp	r1, r3
 800e0b8:	f280 811d 	bge.w	800e2f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e0bc:	2502      	movs	r5, #2
 800e0be:	2701      	movs	r7, #1
 800e0c0:	46a9      	mov	r9, r5
 800e0c2:	46b8      	mov	r8, r7
 800e0c4:	f04f 0a00 	mov.w	sl, #0
 800e0c8:	4621      	mov	r1, r4
 800e0ca:	a849      	add	r0, sp, #292	@ 0x124
 800e0cc:	f003 fe74 	bl	8011db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e0d0:	4622      	mov	r2, r4
 800e0d2:	4653      	mov	r3, sl
 800e0d4:	a949      	add	r1, sp, #292	@ 0x124
 800e0d6:	f8cd 9000 	str.w	r9, [sp]
 800e0da:	a819      	add	r0, sp, #100	@ 0x64
 800e0dc:	f003 ff9e 	bl	801201c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e0e0:	4622      	mov	r2, r4
 800e0e2:	4653      	mov	r3, sl
 800e0e4:	a949      	add	r1, sp, #292	@ 0x124
 800e0e6:	f8cd 8000 	str.w	r8, [sp]
 800e0ea:	a829      	add	r0, sp, #164	@ 0xa4
 800e0ec:	f003 ff96 	bl	801201c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e0f0:	4643      	mov	r3, r8
 800e0f2:	4622      	mov	r2, r4
 800e0f4:	a949      	add	r1, sp, #292	@ 0x124
 800e0f6:	f8cd 9000 	str.w	r9, [sp]
 800e0fa:	a839      	add	r0, sp, #228	@ 0xe4
 800e0fc:	f003 ff8e 	bl	801201c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e100:	42af      	cmp	r7, r5
 800e102:	bfb5      	itete	lt
 800e104:	2300      	movlt	r3, #0
 800e106:	2301      	movge	r3, #1
 800e108:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800e10a:	930e      	strge	r3, [sp, #56]	@ 0x38
 800e10c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e10e:	af12      	add	r7, sp, #72	@ 0x48
 800e110:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e114:	bfb9      	ittee	lt
 800e116:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800e118:	ac19      	addlt	r4, sp, #100	@ 0x64
 800e11a:	ad19      	addge	r5, sp, #100	@ 0x64
 800e11c:	ac29      	addge	r4, sp, #164	@ 0xa4
 800e11e:	e887 0003 	stmia.w	r7, {r0, r1}
 800e122:	b928      	cbnz	r0, 800e130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e124:	4b80      	ldr	r3, [pc, #512]	@ (800e328 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e126:	6818      	ldr	r0, [r3, #0]
 800e128:	6803      	ldr	r3, [r0, #0]
 800e12a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e12c:	4798      	blx	r3
 800e12e:	6038      	str	r0, [r7, #0]
 800e130:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e132:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e136:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e13a:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800e13c:	930c      	str	r3, [sp, #48]	@ 0x30
 800e13e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e140:	6963      	ldr	r3, [r4, #20]
 800e142:	440b      	add	r3, r1
 800e144:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e148:	4408      	add	r0, r1
 800e14a:	b200      	sxth	r0, r0
 800e14c:	4283      	cmp	r3, r0
 800e14e:	900d      	str	r0, [sp, #52]	@ 0x34
 800e150:	f280 80dd 	bge.w	800e30e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e154:	428b      	cmp	r3, r1
 800e156:	da08      	bge.n	800e16a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e158:	2a00      	cmp	r2, #0
 800e15a:	dd06      	ble.n	800e16a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e15c:	1acb      	subs	r3, r1, r3
 800e15e:	429a      	cmp	r2, r3
 800e160:	f2c0 80e4 	blt.w	800e32c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e164:	2b00      	cmp	r3, #0
 800e166:	f300 80e2 	bgt.w	800e32e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e16a:	6967      	ldr	r7, [r4, #20]
 800e16c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e16e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e172:	443b      	add	r3, r7
 800e174:	461f      	mov	r7, r3
 800e176:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e178:	1bdf      	subs	r7, r3, r7
 800e17a:	4297      	cmp	r7, r2
 800e17c:	bfa8      	it	ge
 800e17e:	4617      	movge	r7, r2
 800e180:	2f00      	cmp	r7, #0
 800e182:	f340 8166 	ble.w	800e452 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e186:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e188:	6829      	ldr	r1, [r5, #0]
 800e18a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e18e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e192:	4411      	add	r1, r2
 800e194:	4299      	cmp	r1, r3
 800e196:	6820      	ldr	r0, [r4, #0]
 800e198:	dd1a      	ble.n	800e1d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e19a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e19e:	4402      	add	r2, r0
 800e1a0:	440b      	add	r3, r1
 800e1a2:	b21b      	sxth	r3, r3
 800e1a4:	429a      	cmp	r2, r3
 800e1a6:	dc13      	bgt.n	800e1d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e1a8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e1aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e1ac:	a912      	add	r1, sp, #72	@ 0x48
 800e1ae:	681b      	ldr	r3, [r3, #0]
 800e1b0:	9206      	str	r2, [sp, #24]
 800e1b2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e1b4:	9500      	str	r5, [sp, #0]
 800e1b6:	9205      	str	r2, [sp, #20]
 800e1b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e1ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e1bc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e1c0:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e1c2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e1c6:	aa49      	add	r2, sp, #292	@ 0x124
 800e1c8:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e1cc:	4623      	mov	r3, r4
 800e1ce:	47c8      	blx	r9
 800e1d0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e1d4:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e1d8:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e1dc:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e1e0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e1e4:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e1e8:	ed94 6a08 	vldr	s12, [r4, #32]
 800e1ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e1f0:	edd4 6a07 	vldr	s13, [r4, #28]
 800e1f4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e1f8:	441a      	add	r2, r3
 800e1fa:	6963      	ldr	r3, [r4, #20]
 800e1fc:	68a1      	ldr	r1, [r4, #8]
 800e1fe:	3301      	adds	r3, #1
 800e200:	6163      	str	r3, [r4, #20]
 800e202:	69a3      	ldr	r3, [r4, #24]
 800e204:	6022      	str	r2, [r4, #0]
 800e206:	3b01      	subs	r3, #1
 800e208:	61a3      	str	r3, [r4, #24]
 800e20a:	6923      	ldr	r3, [r4, #16]
 800e20c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e210:	440b      	add	r3, r1
 800e212:	68e1      	ldr	r1, [r4, #12]
 800e214:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e218:	428b      	cmp	r3, r1
 800e21a:	edc4 6a07 	vstr	s13, [r4, #28]
 800e21e:	6123      	str	r3, [r4, #16]
 800e220:	db15      	blt.n	800e24e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e222:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800e226:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e22a:	edc4 6a07 	vstr	s13, [r4, #28]
 800e22e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e232:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e236:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e23a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e23e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e242:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e246:	3201      	adds	r2, #1
 800e248:	1a5b      	subs	r3, r3, r1
 800e24a:	6022      	str	r2, [r4, #0]
 800e24c:	6123      	str	r3, [r4, #16]
 800e24e:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800e252:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e256:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800e25a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800e25e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e262:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800e266:	ed95 6a08 	vldr	s12, [r5, #32]
 800e26a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e26e:	edd5 6a07 	vldr	s13, [r5, #28]
 800e272:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e276:	441a      	add	r2, r3
 800e278:	696b      	ldr	r3, [r5, #20]
 800e27a:	68a9      	ldr	r1, [r5, #8]
 800e27c:	3301      	adds	r3, #1
 800e27e:	616b      	str	r3, [r5, #20]
 800e280:	69ab      	ldr	r3, [r5, #24]
 800e282:	602a      	str	r2, [r5, #0]
 800e284:	3b01      	subs	r3, #1
 800e286:	61ab      	str	r3, [r5, #24]
 800e288:	692b      	ldr	r3, [r5, #16]
 800e28a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e28e:	440b      	add	r3, r1
 800e290:	68e9      	ldr	r1, [r5, #12]
 800e292:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e296:	428b      	cmp	r3, r1
 800e298:	edc5 6a07 	vstr	s13, [r5, #28]
 800e29c:	612b      	str	r3, [r5, #16]
 800e29e:	db15      	blt.n	800e2cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800e2a0:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800e2a4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e2a8:	edc5 6a07 	vstr	s13, [r5, #28]
 800e2ac:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800e2b0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e2b4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e2b8:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800e2bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e2c0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e2c4:	3201      	adds	r2, #1
 800e2c6:	1a5b      	subs	r3, r3, r1
 800e2c8:	602a      	str	r2, [r5, #0]
 800e2ca:	612b      	str	r3, [r5, #16]
 800e2cc:	3f01      	subs	r7, #1
 800e2ce:	e757      	b.n	800e180 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800e2d0:	4299      	cmp	r1, r3
 800e2d2:	dc13      	bgt.n	800e2fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800e2d4:	429a      	cmp	r2, r3
 800e2d6:	da14      	bge.n	800e302 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800e2d8:	2502      	movs	r5, #2
 800e2da:	2703      	movs	r7, #3
 800e2dc:	46a9      	mov	r9, r5
 800e2de:	f04f 0800 	mov.w	r8, #0
 800e2e2:	f04f 0a01 	mov.w	sl, #1
 800e2e6:	e6ef      	b.n	800e0c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e2e8:	2501      	movs	r5, #1
 800e2ea:	2700      	movs	r7, #0
 800e2ec:	46a9      	mov	r9, r5
 800e2ee:	46b8      	mov	r8, r7
 800e2f0:	f04f 0a02 	mov.w	sl, #2
 800e2f4:	e6e8      	b.n	800e0c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e2f6:	2501      	movs	r5, #1
 800e2f8:	2702      	movs	r7, #2
 800e2fa:	e6e1      	b.n	800e0c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800e2fc:	2500      	movs	r5, #0
 800e2fe:	2701      	movs	r7, #1
 800e300:	e7f4      	b.n	800e2ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800e302:	2702      	movs	r7, #2
 800e304:	2503      	movs	r5, #3
 800e306:	f04f 0900 	mov.w	r9, #0
 800e30a:	46b8      	mov	r8, r7
 800e30c:	e7e9      	b.n	800e2e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800e30e:	4613      	mov	r3, r2
 800e310:	e728      	b.n	800e164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800e312:	bf00      	nop
 800e314:	20002228 	.word	0x20002228
 800e318:	fffd8f01 	.word	0xfffd8f01
 800e31c:	00027100 	.word	0x00027100
 800e320:	0004e1ff 	.word	0x0004e1ff
 800e324:	0004e1fe 	.word	0x0004e1fe
 800e328:	20002230 	.word	0x20002230
 800e32c:	4613      	mov	r3, r2
 800e32e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800e332:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800e336:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800e33a:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800e33e:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800e342:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800e346:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800e34a:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800e34e:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800e352:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800e356:	469e      	mov	lr, r3
 800e358:	469c      	mov	ip, r3
 800e35a:	f04f 0900 	mov.w	r9, #0
 800e35e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800e360:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800e362:	9111      	str	r1, [sp, #68]	@ 0x44
 800e364:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800e368:	f1bc 0f00 	cmp.w	ip, #0
 800e36c:	d147      	bne.n	800e3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800e36e:	eb03 0c07 	add.w	ip, r3, r7
 800e372:	1ad7      	subs	r7, r2, r3
 800e374:	f1b9 0f00 	cmp.w	r9, #0
 800e378:	d009      	beq.n	800e38e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800e37a:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800e37e:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800e382:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800e386:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800e38a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800e38c:	912d      	str	r1, [sp, #180]	@ 0xb4
 800e38e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800e392:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800e396:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800e39a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800e39e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800e3a2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800e3a6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800e3aa:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800e3ae:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800e3b2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800e3b6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800e3ba:	f04f 0800 	mov.w	r8, #0
 800e3be:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800e3c0:	9111      	str	r1, [sp, #68]	@ 0x44
 800e3c2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800e3c6:	f1be 0f00 	cmp.w	lr, #0
 800e3ca:	d031      	beq.n	800e430 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800e3cc:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800e3ce:	4450      	add	r0, sl
 800e3d0:	4431      	add	r1, r6
 800e3d2:	4549      	cmp	r1, r9
 800e3d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e3d8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e3dc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e3e0:	db08      	blt.n	800e3f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800e3e2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e3e6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e3ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e3ee:	3001      	adds	r0, #1
 800e3f0:	eba1 0109 	sub.w	r1, r1, r9
 800e3f4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e3f8:	f04f 0801 	mov.w	r8, #1
 800e3fc:	e7e3      	b.n	800e3c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800e3fe:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800e400:	4450      	add	r0, sl
 800e402:	4431      	add	r1, r6
 800e404:	4541      	cmp	r1, r8
 800e406:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e40a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e40e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e412:	db08      	blt.n	800e426 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800e414:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e418:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e41c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e420:	3001      	adds	r0, #1
 800e422:	eba1 0108 	sub.w	r1, r1, r8
 800e426:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e42a:	f04f 0901 	mov.w	r9, #1
 800e42e:	e79b      	b.n	800e368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800e430:	449c      	add	ip, r3
 800e432:	1aff      	subs	r7, r7, r3
 800e434:	f1b8 0f00 	cmp.w	r8, #0
 800e438:	d009      	beq.n	800e44e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800e43a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800e43e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800e442:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800e446:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800e44a:	9019      	str	r0, [sp, #100]	@ 0x64
 800e44c:	911d      	str	r1, [sp, #116]	@ 0x74
 800e44e:	1ad2      	subs	r2, r2, r3
 800e450:	e68b      	b.n	800e16a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e452:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800e454:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800e456:	2b00      	cmp	r3, #0
 800e458:	f000 80d1 	beq.w	800e5fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800e45c:	ad19      	add	r5, sp, #100	@ 0x64
 800e45e:	ac39      	add	r4, sp, #228	@ 0xe4
 800e460:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e462:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e466:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e46a:	930c      	str	r3, [sp, #48]	@ 0x30
 800e46c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800e46e:	6963      	ldr	r3, [r4, #20]
 800e470:	440b      	add	r3, r1
 800e472:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e476:	4408      	add	r0, r1
 800e478:	b200      	sxth	r0, r0
 800e47a:	4283      	cmp	r3, r0
 800e47c:	900d      	str	r0, [sp, #52]	@ 0x34
 800e47e:	f280 80c1 	bge.w	800e604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800e482:	428b      	cmp	r3, r1
 800e484:	da08      	bge.n	800e498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e486:	2a00      	cmp	r2, #0
 800e488:	dd06      	ble.n	800e498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e48a:	1acb      	subs	r3, r1, r3
 800e48c:	429a      	cmp	r2, r3
 800e48e:	f2c0 80bb 	blt.w	800e608 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800e492:	2b00      	cmp	r3, #0
 800e494:	f300 80b9 	bgt.w	800e60a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800e498:	6967      	ldr	r7, [r4, #20]
 800e49a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e49c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800e4a0:	443b      	add	r3, r7
 800e4a2:	461f      	mov	r7, r3
 800e4a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e4a6:	1bdf      	subs	r7, r3, r7
 800e4a8:	4297      	cmp	r7, r2
 800e4aa:	bfa8      	it	ge
 800e4ac:	4617      	movge	r7, r2
 800e4ae:	2f00      	cmp	r7, #0
 800e4b0:	f340 813c 	ble.w	800e72c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800e4b4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800e4b6:	6829      	ldr	r1, [r5, #0]
 800e4b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e4bc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e4c0:	4411      	add	r1, r2
 800e4c2:	4299      	cmp	r1, r3
 800e4c4:	6820      	ldr	r0, [r4, #0]
 800e4c6:	dd1a      	ble.n	800e4fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e4c8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e4cc:	4402      	add	r2, r0
 800e4ce:	440b      	add	r3, r1
 800e4d0:	b21b      	sxth	r3, r3
 800e4d2:	429a      	cmp	r2, r3
 800e4d4:	dc13      	bgt.n	800e4fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e4d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e4d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e4da:	a912      	add	r1, sp, #72	@ 0x48
 800e4dc:	681b      	ldr	r3, [r3, #0]
 800e4de:	9206      	str	r2, [sp, #24]
 800e4e0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800e4e2:	9500      	str	r5, [sp, #0]
 800e4e4:	9205      	str	r2, [sp, #20]
 800e4e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800e4e8:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e4ea:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e4ee:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800e4f0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e4f4:	aa49      	add	r2, sp, #292	@ 0x124
 800e4f6:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800e4fa:	4623      	mov	r3, r4
 800e4fc:	47c8      	blx	r9
 800e4fe:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e502:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800e506:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800e50a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800e50e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e512:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800e516:	ed94 6a08 	vldr	s12, [r4, #32]
 800e51a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e51e:	edd4 6a07 	vldr	s13, [r4, #28]
 800e522:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e526:	441a      	add	r2, r3
 800e528:	6963      	ldr	r3, [r4, #20]
 800e52a:	68a1      	ldr	r1, [r4, #8]
 800e52c:	3301      	adds	r3, #1
 800e52e:	6163      	str	r3, [r4, #20]
 800e530:	69a3      	ldr	r3, [r4, #24]
 800e532:	6022      	str	r2, [r4, #0]
 800e534:	3b01      	subs	r3, #1
 800e536:	61a3      	str	r3, [r4, #24]
 800e538:	6923      	ldr	r3, [r4, #16]
 800e53a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e53e:	440b      	add	r3, r1
 800e540:	68e1      	ldr	r1, [r4, #12]
 800e542:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e546:	428b      	cmp	r3, r1
 800e548:	edc4 6a07 	vstr	s13, [r4, #28]
 800e54c:	6123      	str	r3, [r4, #16]
 800e54e:	db15      	blt.n	800e57c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800e550:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800e554:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e558:	edc4 6a07 	vstr	s13, [r4, #28]
 800e55c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800e560:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e564:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800e568:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800e56c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e570:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800e574:	3201      	adds	r2, #1
 800e576:	1a5b      	subs	r3, r3, r1
 800e578:	6022      	str	r2, [r4, #0]
 800e57a:	6123      	str	r3, [r4, #16]
 800e57c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800e580:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e584:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800e588:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800e58c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e590:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800e594:	ed95 6a08 	vldr	s12, [r5, #32]
 800e598:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e59c:	edd5 6a07 	vldr	s13, [r5, #28]
 800e5a0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e5a4:	441a      	add	r2, r3
 800e5a6:	696b      	ldr	r3, [r5, #20]
 800e5a8:	68a9      	ldr	r1, [r5, #8]
 800e5aa:	3301      	adds	r3, #1
 800e5ac:	616b      	str	r3, [r5, #20]
 800e5ae:	69ab      	ldr	r3, [r5, #24]
 800e5b0:	602a      	str	r2, [r5, #0]
 800e5b2:	3b01      	subs	r3, #1
 800e5b4:	61ab      	str	r3, [r5, #24]
 800e5b6:	692b      	ldr	r3, [r5, #16]
 800e5b8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e5bc:	440b      	add	r3, r1
 800e5be:	68e9      	ldr	r1, [r5, #12]
 800e5c0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e5c4:	428b      	cmp	r3, r1
 800e5c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5ca:	612b      	str	r3, [r5, #16]
 800e5cc:	db15      	blt.n	800e5fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e5ce:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800e5d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e5d6:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5da:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800e5de:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e5e2:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800e5e6:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800e5ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e5ee:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800e5f2:	3201      	adds	r2, #1
 800e5f4:	1a5b      	subs	r3, r3, r1
 800e5f6:	602a      	str	r2, [r5, #0]
 800e5f8:	612b      	str	r3, [r5, #16]
 800e5fa:	3f01      	subs	r7, #1
 800e5fc:	e757      	b.n	800e4ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e5fe:	ad39      	add	r5, sp, #228	@ 0xe4
 800e600:	ac19      	add	r4, sp, #100	@ 0x64
 800e602:	e72d      	b.n	800e460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e604:	4613      	mov	r3, r2
 800e606:	e744      	b.n	800e492 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e608:	4613      	mov	r3, r2
 800e60a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800e60e:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800e612:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800e616:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800e61a:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800e61e:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800e622:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800e626:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800e62a:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800e62e:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800e632:	469e      	mov	lr, r3
 800e634:	461f      	mov	r7, r3
 800e636:	f04f 0900 	mov.w	r9, #0
 800e63a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800e63c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800e640:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800e642:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800e646:	960e      	str	r6, [sp, #56]	@ 0x38
 800e648:	2f00      	cmp	r7, #0
 800e64a:	d146      	bne.n	800e6da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e64c:	449c      	add	ip, r3
 800e64e:	1ad7      	subs	r7, r2, r3
 800e650:	f1b9 0f00 	cmp.w	r9, #0
 800e654:	d009      	beq.n	800e66a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e656:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800e65a:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800e65e:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800e662:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800e666:	9039      	str	r0, [sp, #228]	@ 0xe4
 800e668:	913d      	str	r1, [sp, #244]	@ 0xf4
 800e66a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800e66e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800e672:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800e676:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800e67a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800e67e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800e682:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800e686:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800e68a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800e68e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800e692:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800e696:	f04f 0800 	mov.w	r8, #0
 800e69a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800e69c:	910e      	str	r1, [sp, #56]	@ 0x38
 800e69e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800e6a2:	f1be 0f00 	cmp.w	lr, #0
 800e6a6:	d030      	beq.n	800e70a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e6a8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e6aa:	4450      	add	r0, sl
 800e6ac:	4431      	add	r1, r6
 800e6ae:	4549      	cmp	r1, r9
 800e6b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e6b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e6b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e6bc:	db08      	blt.n	800e6d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e6be:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e6c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e6c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e6ca:	3001      	adds	r0, #1
 800e6cc:	eba1 0109 	sub.w	r1, r1, r9
 800e6d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e6d4:	f04f 0801 	mov.w	r8, #1
 800e6d8:	e7e3      	b.n	800e6a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800e6da:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800e6dc:	4450      	add	r0, sl
 800e6de:	4431      	add	r1, r6
 800e6e0:	4541      	cmp	r1, r8
 800e6e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e6e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e6ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e6ee:	db08      	blt.n	800e702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800e6f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e6f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e6f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e6fc:	3001      	adds	r0, #1
 800e6fe:	eba1 0108 	sub.w	r1, r1, r8
 800e702:	3f01      	subs	r7, #1
 800e704:	f04f 0901 	mov.w	r9, #1
 800e708:	e79e      	b.n	800e648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800e70a:	449c      	add	ip, r3
 800e70c:	1aff      	subs	r7, r7, r3
 800e70e:	f1b8 0f00 	cmp.w	r8, #0
 800e712:	d009      	beq.n	800e728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800e714:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800e718:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800e71c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800e720:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800e724:	9019      	str	r0, [sp, #100]	@ 0x64
 800e726:	911d      	str	r1, [sp, #116]	@ 0x74
 800e728:	1ad2      	subs	r2, r2, r3
 800e72a:	e6b5      	b.n	800e498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e72c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800e72e:	681b      	ldr	r3, [r3, #0]
 800e730:	b923      	cbnz	r3, 800e73c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e732:	4b04      	ldr	r3, [pc, #16]	@ (800e744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800e734:	6818      	ldr	r0, [r3, #0]
 800e736:	6803      	ldr	r3, [r0, #0]
 800e738:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e73a:	4798      	blx	r3
 800e73c:	b05b      	add	sp, #364	@ 0x16c
 800e73e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e742:	bf00      	nop
 800e744:	20002230 	.word	0x20002230

0800e748 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800e748:	b570      	push	{r4, r5, r6, lr}
 800e74a:	4604      	mov	r4, r0
 800e74c:	2500      	movs	r5, #0
 800e74e:	9805      	ldr	r0, [sp, #20]
 800e750:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800e754:	6061      	str	r1, [r4, #4]
 800e756:	8263      	strh	r3, [r4, #18]
 800e758:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800e75c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e760:	8025      	strh	r5, [r4, #0]
 800e762:	7221      	strb	r1, [r4, #8]
 800e764:	7266      	strb	r6, [r4, #9]
 800e766:	60e0      	str	r0, [r4, #12]
 800e768:	8222      	strh	r2, [r4, #16]
 800e76a:	82a3      	strh	r3, [r4, #20]
 800e76c:	82e5      	strh	r5, [r4, #22]
 800e76e:	8325      	strh	r5, [r4, #24]
 800e770:	8365      	strh	r5, [r4, #26]
 800e772:	83a5      	strh	r5, [r4, #28]
 800e774:	83e5      	strh	r5, [r4, #30]
 800e776:	8425      	strh	r5, [r4, #32]
 800e778:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800e77c:	b32e      	cbz	r6, 800e7ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e77e:	6803      	ldr	r3, [r0, #0]
 800e780:	695b      	ldr	r3, [r3, #20]
 800e782:	4798      	blx	r3
 800e784:	4606      	mov	r6, r0
 800e786:	b300      	cbz	r0, 800e7ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e788:	68e0      	ldr	r0, [r4, #12]
 800e78a:	4631      	mov	r1, r6
 800e78c:	6803      	ldr	r3, [r0, #0]
 800e78e:	68db      	ldr	r3, [r3, #12]
 800e790:	4798      	blx	r3
 800e792:	4605      	mov	r5, r0
 800e794:	b1c8      	cbz	r0, 800e7ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e796:	7b43      	ldrb	r3, [r0, #13]
 800e798:	7a82      	ldrb	r2, [r0, #10]
 800e79a:	005b      	lsls	r3, r3, #1
 800e79c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e7a0:	4313      	orrs	r3, r2
 800e7a2:	8423      	strh	r3, [r4, #32]
 800e7a4:	7a63      	ldrb	r3, [r4, #9]
 800e7a6:	2b06      	cmp	r3, #6
 800e7a8:	d10f      	bne.n	800e7ca <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800e7aa:	68e0      	ldr	r0, [r4, #12]
 800e7ac:	462a      	mov	r2, r5
 800e7ae:	6803      	ldr	r3, [r0, #0]
 800e7b0:	4631      	mov	r1, r6
 800e7b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e7b4:	4798      	blx	r3
 800e7b6:	7b6b      	ldrb	r3, [r5, #13]
 800e7b8:	005b      	lsls	r3, r3, #1
 800e7ba:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e7be:	7aab      	ldrb	r3, [r5, #10]
 800e7c0:	4313      	orrs	r3, r2
 800e7c2:	4418      	add	r0, r3
 800e7c4:	8c23      	ldrh	r3, [r4, #32]
 800e7c6:	4418      	add	r0, r3
 800e7c8:	8420      	strh	r0, [r4, #32]
 800e7ca:	4620      	mov	r0, r4
 800e7cc:	bd70      	pop	{r4, r5, r6, pc}

0800e7ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800e7ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7d2:	2400      	movs	r4, #0
 800e7d4:	4681      	mov	r9, r0
 800e7d6:	4688      	mov	r8, r1
 800e7d8:	4692      	mov	sl, r2
 800e7da:	469b      	mov	fp, r3
 800e7dc:	4627      	mov	r7, r4
 800e7de:	4625      	mov	r5, r4
 800e7e0:	4626      	mov	r6, r4
 800e7e2:	b085      	sub	sp, #20
 800e7e4:	4554      	cmp	r4, sl
 800e7e6:	da2a      	bge.n	800e83e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e7e8:	2300      	movs	r3, #0
 800e7ea:	9303      	str	r3, [sp, #12]
 800e7ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e7f0:	429d      	cmp	r5, r3
 800e7f2:	d004      	beq.n	800e7fe <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800e7f4:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e7f8:	429d      	cmp	r5, r3
 800e7fa:	bf18      	it	ne
 800e7fc:	462f      	movne	r7, r5
 800e7fe:	ab03      	add	r3, sp, #12
 800e800:	4642      	mov	r2, r8
 800e802:	4659      	mov	r1, fp
 800e804:	4648      	mov	r0, r9
 800e806:	f003 f8ed 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e80a:	4605      	mov	r5, r0
 800e80c:	b1b8      	cbz	r0, 800e83e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e80e:	280a      	cmp	r0, #10
 800e810:	d015      	beq.n	800e83e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e812:	9a03      	ldr	r2, [sp, #12]
 800e814:	b18a      	cbz	r2, 800e83a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800e816:	7b50      	ldrb	r0, [r2, #13]
 800e818:	7a93      	ldrb	r3, [r2, #10]
 800e81a:	0040      	lsls	r0, r0, #1
 800e81c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800e820:	4303      	orrs	r3, r0
 800e822:	9301      	str	r3, [sp, #4]
 800e824:	f8d8 3000 	ldr.w	r3, [r8]
 800e828:	4639      	mov	r1, r7
 800e82a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e82c:	4640      	mov	r0, r8
 800e82e:	8895      	ldrh	r5, [r2, #4]
 800e830:	4798      	blx	r3
 800e832:	9b01      	ldr	r3, [sp, #4]
 800e834:	4418      	add	r0, r3
 800e836:	4406      	add	r6, r0
 800e838:	b2b6      	uxth	r6, r6
 800e83a:	3401      	adds	r4, #1
 800e83c:	e7d2      	b.n	800e7e4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800e83e:	4630      	mov	r0, r6
 800e840:	b005      	add	sp, #20
 800e842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e846 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800e846:	2a02      	cmp	r2, #2
 800e848:	b530      	push	{r4, r5, lr}
 800e84a:	d011      	beq.n	800e870 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800e84c:	2a03      	cmp	r2, #3
 800e84e:	d01c      	beq.n	800e88a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800e850:	2a01      	cmp	r2, #1
 800e852:	d10c      	bne.n	800e86e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e854:	888b      	ldrh	r3, [r1, #4]
 800e856:	8801      	ldrh	r1, [r0, #0]
 800e858:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800e85c:	1a5b      	subs	r3, r3, r1
 800e85e:	8844      	ldrh	r4, [r0, #2]
 800e860:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e864:	1a9b      	subs	r3, r3, r2
 800e866:	8004      	strh	r4, [r0, #0]
 800e868:	8043      	strh	r3, [r0, #2]
 800e86a:	8081      	strh	r1, [r0, #4]
 800e86c:	80c2      	strh	r2, [r0, #6]
 800e86e:	bd30      	pop	{r4, r5, pc}
 800e870:	88cb      	ldrh	r3, [r1, #6]
 800e872:	8842      	ldrh	r2, [r0, #2]
 800e874:	1a9b      	subs	r3, r3, r2
 800e876:	88c2      	ldrh	r2, [r0, #6]
 800e878:	1a9b      	subs	r3, r3, r2
 800e87a:	888a      	ldrh	r2, [r1, #4]
 800e87c:	8801      	ldrh	r1, [r0, #0]
 800e87e:	8043      	strh	r3, [r0, #2]
 800e880:	1a52      	subs	r2, r2, r1
 800e882:	8881      	ldrh	r1, [r0, #4]
 800e884:	1a52      	subs	r2, r2, r1
 800e886:	8002      	strh	r2, [r0, #0]
 800e888:	e7f1      	b.n	800e86e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e88a:	88cb      	ldrh	r3, [r1, #6]
 800e88c:	8841      	ldrh	r1, [r0, #2]
 800e88e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800e892:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e896:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e89a:	1a5b      	subs	r3, r3, r1
 800e89c:	1a9b      	subs	r3, r3, r2
 800e89e:	8003      	strh	r3, [r0, #0]
 800e8a0:	8045      	strh	r5, [r0, #2]
 800e8a2:	8082      	strh	r2, [r0, #4]
 800e8a4:	80c4      	strh	r4, [r0, #6]
 800e8a6:	e7e2      	b.n	800e86e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800e8a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800e8a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8ac:	b09f      	sub	sp, #124	@ 0x7c
 800e8ae:	920f      	str	r2, [sp, #60]	@ 0x3c
 800e8b0:	9312      	str	r3, [sp, #72]	@ 0x48
 800e8b2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e8b4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800e8b6:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800e8b8:	8812      	ldrh	r2, [r2, #0]
 800e8ba:	889b      	ldrh	r3, [r3, #4]
 800e8bc:	900e      	str	r0, [sp, #56]	@ 0x38
 800e8be:	4413      	add	r3, r2
 800e8c0:	6828      	ldr	r0, [r5, #0]
 800e8c2:	b21b      	sxth	r3, r3
 800e8c4:	9311      	str	r3, [sp, #68]	@ 0x44
 800e8c6:	6803      	ldr	r3, [r0, #0]
 800e8c8:	9117      	str	r1, [sp, #92]	@ 0x5c
 800e8ca:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e8cc:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800e8d0:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800e8d4:	4798      	blx	r3
 800e8d6:	682b      	ldr	r3, [r5, #0]
 800e8d8:	9013      	str	r0, [sp, #76]	@ 0x4c
 800e8da:	7b1a      	ldrb	r2, [r3, #12]
 800e8dc:	7adb      	ldrb	r3, [r3, #11]
 800e8de:	9215      	str	r2, [sp, #84]	@ 0x54
 800e8e0:	9316      	str	r3, [sp, #88]	@ 0x58
 800e8e2:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800e8e6:	2c00      	cmp	r4, #0
 800e8e8:	d067      	beq.n	800e9ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800e8ea:	7c2b      	ldrb	r3, [r5, #16]
 800e8ec:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800e8ee:	2b06      	cmp	r3, #6
 800e8f0:	bf14      	ite	ne
 800e8f2:	2301      	movne	r3, #1
 800e8f4:	2302      	moveq	r3, #2
 800e8f6:	4413      	add	r3, r2
 800e8f8:	f04f 0900 	mov.w	r9, #0
 800e8fc:	464c      	mov	r4, r9
 800e8fe:	9310      	str	r3, [sp, #64]	@ 0x40
 800e900:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800e904:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800e908:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e90a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800e90c:	4293      	cmp	r3, r2
 800e90e:	f280 808b 	bge.w	800ea28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e912:	2300      	movs	r3, #0
 800e914:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800e918:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800e91c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e920:	429c      	cmp	r4, r3
 800e922:	d006      	beq.n	800e932 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800e924:	f242 020b 	movw	r2, #8203	@ 0x200b
 800e928:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e92a:	4294      	cmp	r4, r2
 800e92c:	bf18      	it	ne
 800e92e:	4623      	movne	r3, r4
 800e930:	930c      	str	r3, [sp, #48]	@ 0x30
 800e932:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800e934:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800e936:	682a      	ldr	r2, [r5, #0]
 800e938:	428b      	cmp	r3, r1
 800e93a:	db40      	blt.n	800e9be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800e93c:	6813      	ldr	r3, [r2, #0]
 800e93e:	4610      	mov	r0, r2
 800e940:	695b      	ldr	r3, [r3, #20]
 800e942:	4798      	blx	r3
 800e944:	4604      	mov	r4, r0
 800e946:	6828      	ldr	r0, [r5, #0]
 800e948:	aa1d      	add	r2, sp, #116	@ 0x74
 800e94a:	6803      	ldr	r3, [r0, #0]
 800e94c:	4621      	mov	r1, r4
 800e94e:	689f      	ldr	r7, [r3, #8]
 800e950:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e954:	47b8      	blx	r7
 800e956:	901c      	str	r0, [sp, #112]	@ 0x70
 800e958:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e95c:	429c      	cmp	r4, r3
 800e95e:	f000 80ea 	beq.w	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e962:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e966:	429c      	cmp	r4, r3
 800e968:	f000 80e5 	beq.w	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e96c:	2c00      	cmp	r4, #0
 800e96e:	f000 810c 	beq.w	800eb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800e972:	2c0a      	cmp	r4, #10
 800e974:	d05e      	beq.n	800ea34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e976:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e978:	b36a      	cbz	r2, 800e9d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800e97a:	8894      	ldrh	r4, [r2, #4]
 800e97c:	f1bb 0f00 	cmp.w	fp, #0
 800e980:	d03a      	beq.n	800e9f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800e982:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e986:	f1bb 0f01 	cmp.w	fp, #1
 800e98a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e98e:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800e992:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e996:	ea49 0903 	orr.w	r9, r9, r3
 800e99a:	d133      	bne.n	800ea04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800e99c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800e99e:	eba6 0609 	sub.w	r6, r6, r9
 800e9a2:	2b00      	cmp	r3, #0
 800e9a4:	d14d      	bne.n	800ea42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e9a6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800e9a8:	eb09 0306 	add.w	r3, r9, r6
 800e9ac:	4413      	add	r3, r2
 800e9ae:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800e9b0:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e9b4:	4293      	cmp	r3, r2
 800e9b6:	da4e      	bge.n	800ea56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e9b8:	e036      	b.n	800ea28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e9ba:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800e9bc:	e79c      	b.n	800e8f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800e9be:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800e9c2:	9301      	str	r3, [sp, #4]
 800e9c4:	ab1d      	add	r3, sp, #116	@ 0x74
 800e9c6:	9300      	str	r3, [sp, #0]
 800e9c8:	4659      	mov	r1, fp
 800e9ca:	ab1c      	add	r3, sp, #112	@ 0x70
 800e9cc:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800e9ce:	f003 f852 	bl	8011a76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e9d2:	4604      	mov	r4, r0
 800e9d4:	e7c0      	b.n	800e958 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800e9d6:	6828      	ldr	r0, [r5, #0]
 800e9d8:	6803      	ldr	r3, [r0, #0]
 800e9da:	691b      	ldr	r3, [r3, #16]
 800e9dc:	4798      	blx	r3
 800e9de:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800e9e2:	4298      	cmp	r0, r3
 800e9e4:	f000 80a7 	beq.w	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e9e8:	f242 030b 	movw	r3, #8203	@ 0x200b
 800e9ec:	4298      	cmp	r0, r3
 800e9ee:	f000 80a2 	beq.w	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e9f2:	f1bb 0f00 	cmp.w	fp, #0
 800e9f6:	d100      	bne.n	800e9fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800e9f8:	444e      	add	r6, r9
 800e9fa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800e9fc:	2a00      	cmp	r2, #0
 800e9fe:	d1c0      	bne.n	800e982 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800ea00:	4691      	mov	r9, r2
 800ea02:	e098      	b.n	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800ea04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ea06:	2b00      	cmp	r3, #0
 800ea08:	f000 80c1 	beq.w	800eb8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800ea0c:	f1bb 0f00 	cmp.w	fp, #0
 800ea10:	d117      	bne.n	800ea42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800ea12:	6828      	ldr	r0, [r5, #0]
 800ea14:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ea16:	6803      	ldr	r3, [r0, #0]
 800ea18:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ea1a:	4798      	blx	r3
 800ea1c:	4406      	add	r6, r0
 800ea1e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800ea20:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800ea22:	1af3      	subs	r3, r6, r3
 800ea24:	4293      	cmp	r3, r2
 800ea26:	dd16      	ble.n	800ea56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800ea28:	2c00      	cmp	r4, #0
 800ea2a:	f000 80ae 	beq.w	800eb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800ea2e:	2c0a      	cmp	r4, #10
 800ea30:	f040 809c 	bne.w	800eb6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800ea34:	240a      	movs	r4, #10
 800ea36:	fab4 f084 	clz	r0, r4
 800ea3a:	0940      	lsrs	r0, r0, #5
 800ea3c:	b01f      	add	sp, #124	@ 0x7c
 800ea3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea42:	6828      	ldr	r0, [r5, #0]
 800ea44:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800ea46:	6803      	ldr	r3, [r0, #0]
 800ea48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ea4a:	4798      	blx	r3
 800ea4c:	f1bb 0f01 	cmp.w	fp, #1
 800ea50:	eba6 0600 	sub.w	r6, r6, r0
 800ea54:	d0a7      	beq.n	800e9a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800ea56:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800ea58:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800ea5a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800ea5e:	f9b3 8000 	ldrsh.w	r8, [r3]
 800ea62:	7b43      	ldrb	r3, [r0, #13]
 800ea64:	4431      	add	r1, r6
 800ea66:	015b      	lsls	r3, r3, #5
 800ea68:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ea6c:	7983      	ldrb	r3, [r0, #6]
 800ea6e:	4313      	orrs	r3, r2
 800ea70:	440b      	add	r3, r1
 800ea72:	4543      	cmp	r3, r8
 800ea74:	db5f      	blt.n	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800ea76:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800ea78:	4299      	cmp	r1, r3
 800ea7a:	da5c      	bge.n	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800ea7c:	6828      	ldr	r0, [r5, #0]
 800ea7e:	45b0      	cmp	r8, r6
 800ea80:	6803      	ldr	r3, [r0, #0]
 800ea82:	bfc8      	it	gt
 800ea84:	eba8 0806 	subgt.w	r8, r8, r6
 800ea88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ea8a:	bfcc      	ite	gt
 800ea8c:	fa1f f888 	uxthgt.w	r8, r8
 800ea90:	f04f 0800 	movle.w	r8, #0
 800ea94:	4798      	blx	r3
 800ea96:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800ea98:	7b53      	ldrb	r3, [r2, #13]
 800ea9a:	00d9      	lsls	r1, r3, #3
 800ea9c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800eaa0:	7a11      	ldrb	r1, [r2, #8]
 800eaa2:	4339      	orrs	r1, r7
 800eaa4:	065f      	lsls	r7, r3, #25
 800eaa6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800eaa8:	bf44      	itt	mi
 800eaaa:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800eaae:	b209      	sxthmi	r1, r1
 800eab0:	19c7      	adds	r7, r0, r7
 800eab2:	1a7f      	subs	r7, r7, r1
 800eab4:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800eab6:	b2bf      	uxth	r7, r7
 800eab8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800eabc:	fa0f fa87 	sxth.w	sl, r7
 800eac0:	4551      	cmp	r1, sl
 800eac2:	dd3c      	ble.n	800eb3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800eac4:	011b      	lsls	r3, r3, #4
 800eac6:	79d0      	ldrb	r0, [r2, #7]
 800eac8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800eacc:	4303      	orrs	r3, r0
 800eace:	449a      	add	sl, r3
 800ead0:	4551      	cmp	r1, sl
 800ead2:	dc30      	bgt.n	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800ead4:	468a      	mov	sl, r1
 800ead6:	1bcf      	subs	r7, r1, r7
 800ead8:	b23f      	sxth	r7, r7
 800eada:	9219      	str	r2, [sp, #100]	@ 0x64
 800eadc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800eade:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800eae0:	6828      	ldr	r0, [r5, #0]
 800eae2:	2a00      	cmp	r2, #0
 800eae4:	d12d      	bne.n	800eb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800eae6:	9318      	str	r3, [sp, #96]	@ 0x60
 800eae8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800eaea:	b2bf      	uxth	r7, r7
 800eaec:	6819      	ldr	r1, [r3, #0]
 800eaee:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800eaf0:	6801      	ldr	r1, [r0, #0]
 800eaf2:	9314      	str	r3, [sp, #80]	@ 0x50
 800eaf4:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800eaf6:	4788      	blx	r1
 800eaf8:	79a9      	ldrb	r1, [r5, #6]
 800eafa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800eafc:	910b      	str	r1, [sp, #44]	@ 0x2c
 800eafe:	7ba9      	ldrb	r1, [r5, #14]
 800eb00:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800eb02:	910a      	str	r1, [sp, #40]	@ 0x28
 800eb04:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800eb08:	9109      	str	r1, [sp, #36]	@ 0x24
 800eb0a:	68a9      	ldr	r1, [r5, #8]
 800eb0c:	9306      	str	r3, [sp, #24]
 800eb0e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800eb10:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800eb14:	44b0      	add	r8, r6
 800eb16:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800eb1a:	9304      	str	r3, [sp, #16]
 800eb1c:	fa0f f388 	sxth.w	r3, r8
 800eb20:	9300      	str	r3, [sp, #0]
 800eb22:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eb24:	9205      	str	r2, [sp, #20]
 800eb26:	f8cd a004 	str.w	sl, [sp, #4]
 800eb2a:	681a      	ldr	r2, [r3, #0]
 800eb2c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800eb2e:	685b      	ldr	r3, [r3, #4]
 800eb30:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800eb32:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800eb34:	47b8      	blx	r7
 800eb36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800eb38:	3301      	adds	r3, #1
 800eb3a:	930d      	str	r3, [sp, #52]	@ 0x34
 800eb3c:	e6e4      	b.n	800e908 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800eb3e:	2700      	movs	r7, #0
 800eb40:	e7cb      	b.n	800eada <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800eb42:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800eb44:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800eb48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800eb4a:	f8dc 1000 	ldr.w	r1, [ip]
 800eb4e:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800eb52:	79aa      	ldrb	r2, [r5, #6]
 800eb54:	9203      	str	r2, [sp, #12]
 800eb56:	7baa      	ldrb	r2, [r5, #14]
 800eb58:	9202      	str	r2, [sp, #8]
 800eb5a:	68aa      	ldr	r2, [r5, #8]
 800eb5c:	e9cd 0200 	strd	r0, r2, [sp]
 800eb60:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800eb62:	688f      	ldr	r7, [r1, #8]
 800eb64:	4660      	mov	r0, ip
 800eb66:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800eb68:	47b8      	blx	r7
 800eb6a:	e7e4      	b.n	800eb36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800eb6c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800eb6e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800eb70:	3501      	adds	r5, #1
 800eb72:	429d      	cmp	r5, r3
 800eb74:	f6bf af5f 	bge.w	800ea36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800eb78:	4659      	mov	r1, fp
 800eb7a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800eb7c:	f7fa fece 	bl	800991c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800eb80:	4604      	mov	r4, r0
 800eb82:	b110      	cbz	r0, 800eb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800eb84:	280a      	cmp	r0, #10
 800eb86:	d1f2      	bne.n	800eb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800eb88:	e754      	b.n	800ea34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800eb8a:	2400      	movs	r4, #0
 800eb8c:	e753      	b.n	800ea36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800eb8e:	f1bb 0f00 	cmp.w	fp, #0
 800eb92:	f43f af44 	beq.w	800ea1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800eb96:	e75e      	b.n	800ea56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800eb98 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800eb98:	b530      	push	{r4, r5, lr}
 800eb9a:	8ac4      	ldrh	r4, [r0, #22]
 800eb9c:	8b45      	ldrh	r5, [r0, #26]
 800eb9e:	8343      	strh	r3, [r0, #26]
 800eba0:	442c      	add	r4, r5
 800eba2:	1ae4      	subs	r4, r4, r3
 800eba4:	82c4      	strh	r4, [r0, #22]
 800eba6:	8b83      	ldrh	r3, [r0, #28]
 800eba8:	8b04      	ldrh	r4, [r0, #24]
 800ebaa:	4422      	add	r2, r4
 800ebac:	440c      	add	r4, r1
 800ebae:	1a59      	subs	r1, r3, r1
 800ebb0:	83c2      	strh	r2, [r0, #30]
 800ebb2:	8304      	strh	r4, [r0, #24]
 800ebb4:	8381      	strh	r1, [r0, #28]
 800ebb6:	bd30      	pop	{r4, r5, pc}

0800ebb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800ebb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebbc:	4604      	mov	r4, r0
 800ebbe:	8a47      	ldrh	r7, [r0, #18]
 800ebc0:	68c0      	ldr	r0, [r0, #12]
 800ebc2:	b085      	sub	sp, #20
 800ebc4:	6803      	ldr	r3, [r0, #0]
 800ebc6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ebc8:	4798      	blx	r3
 800ebca:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800ebce:	7a63      	ldrb	r3, [r4, #9]
 800ebd0:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800ebd4:	42b7      	cmp	r7, r6
 800ebd6:	f103 33ff 	add.w	r3, r3, #4294967295
 800ebda:	bfac      	ite	ge
 800ebdc:	f04f 0900 	movge.w	r9, #0
 800ebe0:	f04f 0901 	movlt.w	r9, #1
 800ebe4:	2b05      	cmp	r3, #5
 800ebe6:	d804      	bhi.n	800ebf2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800ebe8:	e8df f003 	tbb	[pc, r3]
 800ebec:	460e0852 	.word	0x460e0852
 800ebf0:	4b4b      	.short	0x4b4b
 800ebf2:	2500      	movs	r5, #0
 800ebf4:	46a9      	mov	r9, r5
 800ebf6:	462e      	mov	r6, r5
 800ebf8:	462f      	mov	r7, r5
 800ebfa:	e00d      	b.n	800ec18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ebfc:	42b7      	cmp	r7, r6
 800ebfe:	bfb4      	ite	lt
 800ec00:	2600      	movlt	r6, #0
 800ec02:	2601      	movge	r6, #1
 800ec04:	2500      	movs	r5, #0
 800ec06:	e7f7      	b.n	800ebf8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ec08:	464d      	mov	r5, r9
 800ec0a:	f04f 0900 	mov.w	r9, #0
 800ec0e:	42b7      	cmp	r7, r6
 800ec10:	bfb4      	ite	lt
 800ec12:	2600      	movlt	r6, #0
 800ec14:	2601      	movge	r6, #1
 800ec16:	464f      	mov	r7, r9
 800ec18:	f04f 0800 	mov.w	r8, #0
 800ec1c:	f8a4 8016 	strh.w	r8, [r4, #22]
 800ec20:	f8a4 8018 	strh.w	r8, [r4, #24]
 800ec24:	f8cd 8004 	str.w	r8, [sp, #4]
 800ec28:	2300      	movs	r3, #0
 800ec2a:	9303      	str	r3, [sp, #12]
 800ec2c:	8823      	ldrh	r3, [r4, #0]
 800ec2e:	2b20      	cmp	r3, #32
 800ec30:	d032      	beq.n	800ec98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe0>
 800ec32:	f242 010b 	movw	r1, #8203	@ 0x200b
 800ec36:	1a5a      	subs	r2, r3, r1
 800ec38:	f1d2 0a00 	rsbs	sl, r2, #0
 800ec3c:	eb4a 0a02 	adc.w	sl, sl, r2
 800ec40:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800ec44:	4293      	cmp	r3, r2
 800ec46:	d008      	beq.n	800ec5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800ec48:	428b      	cmp	r3, r1
 800ec4a:	9a01      	ldr	r2, [sp, #4]
 800ec4c:	bf16      	itet	ne
 800ec4e:	461a      	movne	r2, r3
 800ec50:	f04f 0a01 	moveq.w	sl, #1
 800ec54:	f04f 0a00 	movne.w	sl, #0
 800ec58:	9201      	str	r2, [sp, #4]
 800ec5a:	ab03      	add	r3, sp, #12
 800ec5c:	68e2      	ldr	r2, [r4, #12]
 800ec5e:	7a21      	ldrb	r1, [r4, #8]
 800ec60:	6860      	ldr	r0, [r4, #4]
 800ec62:	f002 febf 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ec66:	8020      	strh	r0, [r4, #0]
 800ec68:	b9d0      	cbnz	r0, 800eca0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe8>
 800ec6a:	2300      	movs	r3, #0
 800ec6c:	8ba2      	ldrh	r2, [r4, #28]
 800ec6e:	4611      	mov	r1, r2
 800ec70:	4620      	mov	r0, r4
 800ec72:	f7ff ff91 	bl	800eb98 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ec76:	e06d      	b.n	800ed54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800ec78:	2500      	movs	r5, #0
 800ec7a:	2701      	movs	r7, #1
 800ec7c:	46a9      	mov	r9, r5
 800ec7e:	462e      	mov	r6, r5
 800ec80:	e7ca      	b.n	800ec18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ec82:	2500      	movs	r5, #0
 800ec84:	42b7      	cmp	r7, r6
 800ec86:	bfb4      	ite	lt
 800ec88:	2700      	movlt	r7, #0
 800ec8a:	2701      	movge	r7, #1
 800ec8c:	462e      	mov	r6, r5
 800ec8e:	e7c3      	b.n	800ec18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ec90:	2500      	movs	r5, #0
 800ec92:	2601      	movs	r6, #1
 800ec94:	46a9      	mov	r9, r5
 800ec96:	e7af      	b.n	800ebf8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ec98:	9301      	str	r3, [sp, #4]
 800ec9a:	f04f 0a01 	mov.w	sl, #1
 800ec9e:	e7dc      	b.n	800ec5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800eca0:	8b63      	ldrh	r3, [r4, #26]
 800eca2:	280a      	cmp	r0, #10
 800eca4:	f103 0301 	add.w	r3, r3, #1
 800eca8:	8363      	strh	r3, [r4, #26]
 800ecaa:	d0de      	beq.n	800ec6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800ecac:	9a03      	ldr	r2, [sp, #12]
 800ecae:	bb62      	cbnz	r2, 800ed0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x152>
 800ecb0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800ecb4:	4298      	cmp	r0, r3
 800ecb6:	d003      	beq.n	800ecc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x108>
 800ecb8:	f242 030b 	movw	r3, #8203	@ 0x200b
 800ecbc:	4298      	cmp	r0, r3
 800ecbe:	d1b3      	bne.n	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ecc0:	8823      	ldrh	r3, [r4, #0]
 800ecc2:	8ba1      	ldrh	r1, [r4, #28]
 800ecc4:	2b20      	cmp	r3, #32
 800ecc6:	d003      	beq.n	800ecd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x118>
 800ecc8:	f242 000b 	movw	r0, #8203	@ 0x200b
 800eccc:	4283      	cmp	r3, r0
 800ecce:	d131      	bne.n	800ed34 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17c>
 800ecd0:	f1ba 0f00 	cmp.w	sl, #0
 800ecd4:	bf0a      	itet	eq
 800ecd6:	4688      	moveq	r8, r1
 800ecd8:	4650      	movne	r0, sl
 800ecda:	2001      	moveq	r0, #1
 800ecdc:	440a      	add	r2, r1
 800ecde:	8b23      	ldrh	r3, [r4, #24]
 800ece0:	b292      	uxth	r2, r2
 800ece2:	83a2      	strh	r2, [r4, #28]
 800ece4:	4413      	add	r3, r2
 800ece6:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800ecea:	f1b9 0f00 	cmp.w	r9, #0
 800ecee:	d102      	bne.n	800ecf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x13e>
 800ecf0:	2d00      	cmp	r5, #0
 800ecf2:	d042      	beq.n	800ed7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c2>
 800ecf4:	b300      	cbz	r0, 800ed38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800ecf6:	8c21      	ldrh	r1, [r4, #32]
 800ecf8:	4419      	add	r1, r3
 800ecfa:	458c      	cmp	ip, r1
 800ecfc:	da37      	bge.n	800ed6e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b6>
 800ecfe:	8ae1      	ldrh	r1, [r4, #22]
 800ed00:	2900      	cmp	r1, #0
 800ed02:	d034      	beq.n	800ed6e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b6>
 800ed04:	4563      	cmp	r3, ip
 800ed06:	dd8f      	ble.n	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed08:	e01d      	b.n	800ed46 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x18e>
 800ed0a:	8893      	ldrh	r3, [r2, #4]
 800ed0c:	9901      	ldr	r1, [sp, #4]
 800ed0e:	8023      	strh	r3, [r4, #0]
 800ed10:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800ed14:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800ed18:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800ed1c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800ed20:	ea4b 0b00 	orr.w	fp, fp, r0
 800ed24:	68e0      	ldr	r0, [r4, #12]
 800ed26:	6803      	ldr	r3, [r0, #0]
 800ed28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ed2a:	4798      	blx	r3
 800ed2c:	eb0b 0200 	add.w	r2, fp, r0
 800ed30:	b292      	uxth	r2, r2
 800ed32:	e7c5      	b.n	800ecc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x108>
 800ed34:	2000      	movs	r0, #0
 800ed36:	e7d1      	b.n	800ecdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x124>
 800ed38:	4563      	cmp	r3, ip
 800ed3a:	f77f af75 	ble.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed3e:	8ae3      	ldrh	r3, [r4, #22]
 800ed40:	2b00      	cmp	r3, #0
 800ed42:	f43f af71 	beq.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed46:	2301      	movs	r3, #1
 800ed48:	8c22      	ldrh	r2, [r4, #32]
 800ed4a:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800ed4e:	8be3      	ldrh	r3, [r4, #30]
 800ed50:	4413      	add	r3, r2
 800ed52:	83e3      	strh	r3, [r4, #30]
 800ed54:	68e0      	ldr	r0, [r4, #12]
 800ed56:	6803      	ldr	r3, [r0, #0]
 800ed58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ed5a:	4798      	blx	r3
 800ed5c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800ed60:	4418      	add	r0, r3
 800ed62:	8a63      	ldrh	r3, [r4, #18]
 800ed64:	1a18      	subs	r0, r3, r0
 800ed66:	8260      	strh	r0, [r4, #18]
 800ed68:	b005      	add	sp, #20
 800ed6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed6e:	2300      	movs	r3, #0
 800ed70:	4611      	mov	r1, r2
 800ed72:	4620      	mov	r0, r4
 800ed74:	f7ff ff10 	bl	800eb98 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ed78:	e756      	b.n	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed7a:	4563      	cmp	r3, ip
 800ed7c:	dd14      	ble.n	800eda8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f0>
 800ed7e:	b117      	cbz	r7, 800ed86 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ce>
 800ed80:	2301      	movs	r3, #1
 800ed82:	460a      	mov	r2, r1
 800ed84:	e773      	b.n	800ec6e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800ed86:	2e00      	cmp	r6, #0
 800ed88:	f43f af4e 	beq.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed8c:	2800      	cmp	r0, #0
 800ed8e:	f47f af4b 	bne.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800ed92:	f1ba 0f00 	cmp.w	sl, #0
 800ed96:	d002      	beq.n	800ed9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e6>
 800ed98:	2301      	movs	r3, #1
 800ed9a:	4642      	mov	r2, r8
 800ed9c:	e768      	b.n	800ec70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800ed9e:	8ae3      	ldrh	r3, [r4, #22]
 800eda0:	2b00      	cmp	r3, #0
 800eda2:	f43f af41 	beq.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800eda6:	e7d5      	b.n	800ed54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800eda8:	2800      	cmp	r0, #0
 800edaa:	f47f af3d 	bne.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800edae:	f1ba 0f00 	cmp.w	sl, #0
 800edb2:	f43f af39 	beq.w	800ec28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800edb6:	2301      	movs	r3, #1
 800edb8:	4642      	mov	r2, r8
 800edba:	e7da      	b.n	800ed72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>

0800edbc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800edbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800edbe:	4605      	mov	r5, r0
 800edc0:	b08f      	sub	sp, #60	@ 0x3c
 800edc2:	4617      	mov	r7, r2
 800edc4:	461c      	mov	r4, r3
 800edc6:	460e      	mov	r6, r1
 800edc8:	b1d1      	cbz	r1, 800ee00 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800edca:	681b      	ldr	r3, [r3, #0]
 800edcc:	4620      	mov	r0, r4
 800edce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800edd0:	4798      	blx	r3
 800edd2:	4240      	negs	r0, r0
 800edd4:	b200      	sxth	r0, r0
 800edd6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800edda:	9603      	str	r6, [sp, #12]
 800eddc:	9700      	str	r7, [sp, #0]
 800edde:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ede2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800ede6:	4629      	mov	r1, r5
 800ede8:	a805      	add	r0, sp, #20
 800edea:	f7ff fcad 	bl	800e748 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800edee:	2401      	movs	r4, #1
 800edf0:	a805      	add	r0, sp, #20
 800edf2:	f7ff fee1 	bl	800ebb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800edf6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800edfa:	b163      	cbz	r3, 800ee16 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800edfc:	3401      	adds	r4, #1
 800edfe:	e7f7      	b.n	800edf0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800ee00:	f002 febe 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ee04:	2401      	movs	r4, #1
 800ee06:	280a      	cmp	r0, #10
 800ee08:	4628      	mov	r0, r5
 800ee0a:	bf08      	it	eq
 800ee0c:	3401      	addeq	r4, #1
 800ee0e:	f002 feb7 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ee12:	2800      	cmp	r0, #0
 800ee14:	d1f7      	bne.n	800ee06 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800ee16:	b2a0      	uxth	r0, r4
 800ee18:	b00f      	add	sp, #60	@ 0x3c
 800ee1a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ee1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800ee1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee20:	b0e3      	sub	sp, #396	@ 0x18c
 800ee22:	461c      	mov	r4, r3
 800ee24:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800ee26:	4683      	mov	fp, r0
 800ee28:	4688      	mov	r8, r1
 800ee2a:	2b00      	cmp	r3, #0
 800ee2c:	f000 8112 	beq.w	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ee30:	6823      	ldr	r3, [r4, #0]
 800ee32:	2b00      	cmp	r3, #0
 800ee34:	f000 810e 	beq.w	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ee38:	7ba3      	ldrb	r3, [r4, #14]
 800ee3a:	2b00      	cmp	r3, #0
 800ee3c:	f000 810a 	beq.w	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ee40:	ad0a      	add	r5, sp, #40	@ 0x28
 800ee42:	462b      	mov	r3, r5
 800ee44:	6810      	ldr	r0, [r2, #0]
 800ee46:	6851      	ldr	r1, [r2, #4]
 800ee48:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800ee4c:	c303      	stmia	r3!, {r0, r1}
 800ee4e:	2100      	movs	r1, #0
 800ee50:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800ee54:	910c      	str	r1, [sp, #48]	@ 0x30
 800ee56:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800ee5a:	a90c      	add	r1, sp, #48	@ 0x30
 800ee5c:	79a2      	ldrb	r2, [r4, #6]
 800ee5e:	4628      	mov	r0, r5
 800ee60:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ee64:	f7ff fcef 	bl	800e846 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ee68:	a90c      	add	r1, sp, #48	@ 0x30
 800ee6a:	4608      	mov	r0, r1
 800ee6c:	79a2      	ldrb	r2, [r4, #6]
 800ee6e:	f7ff fcea 	bl	800e846 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ee72:	a817      	add	r0, sp, #92	@ 0x5c
 800ee74:	f002 fa2e 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 800ee78:	6820      	ldr	r0, [r4, #0]
 800ee7a:	6803      	ldr	r3, [r0, #0]
 800ee7c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ee7e:	4798      	blx	r3
 800ee80:	4606      	mov	r6, r0
 800ee82:	6820      	ldr	r0, [r4, #0]
 800ee84:	6803      	ldr	r3, [r0, #0]
 800ee86:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800ee88:	4798      	blx	r3
 800ee8a:	4633      	mov	r3, r6
 800ee8c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800ee8e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800ee90:	9000      	str	r0, [sp, #0]
 800ee92:	a817      	add	r0, sp, #92	@ 0x5c
 800ee94:	f002 fa79 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ee98:	6820      	ldr	r0, [r4, #0]
 800ee9a:	f894 a004 	ldrb.w	sl, [r4, #4]
 800ee9e:	6803      	ldr	r3, [r0, #0]
 800eea0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800eea2:	4798      	blx	r3
 800eea4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800eea8:	6823      	ldr	r3, [r4, #0]
 800eeaa:	4607      	mov	r7, r0
 800eeac:	4406      	add	r6, r0
 800eeae:	a830      	add	r0, sp, #192	@ 0xc0
 800eeb0:	f893 9009 	ldrb.w	r9, [r3, #9]
 800eeb4:	f002 fa0e 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 800eeb8:	7c23      	ldrb	r3, [r4, #16]
 800eeba:	b17b      	cbz	r3, 800eedc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800eebc:	6820      	ldr	r0, [r4, #0]
 800eebe:	6803      	ldr	r3, [r0, #0]
 800eec0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800eec2:	4798      	blx	r3
 800eec4:	9009      	str	r0, [sp, #36]	@ 0x24
 800eec6:	6820      	ldr	r0, [r4, #0]
 800eec8:	6802      	ldr	r2, [r0, #0]
 800eeca:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800eecc:	4790      	blx	r2
 800eece:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eed0:	9000      	str	r0, [sp, #0]
 800eed2:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800eed4:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800eed6:	a830      	add	r0, sp, #192	@ 0xc0
 800eed8:	f002 fa57 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800eedc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800eee0:	7be2      	ldrb	r2, [r4, #15]
 800eee2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800eee6:	1a8a      	subs	r2, r1, r2
 800eee8:	7c21      	ldrb	r1, [r4, #16]
 800eeea:	b292      	uxth	r2, r2
 800eeec:	9103      	str	r1, [sp, #12]
 800eeee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800eef2:	a80e      	add	r0, sp, #56	@ 0x38
 800eef4:	9102      	str	r1, [sp, #8]
 800eef6:	6821      	ldr	r1, [r4, #0]
 800eef8:	9101      	str	r1, [sp, #4]
 800eefa:	7961      	ldrb	r1, [r4, #5]
 800eefc:	9100      	str	r1, [sp, #0]
 800eefe:	a930      	add	r1, sp, #192	@ 0xc0
 800ef00:	f7ff fc22 	bl	800e748 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800ef04:	2e00      	cmp	r6, #0
 800ef06:	dc5b      	bgt.n	800efc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800ef08:	f04f 0900 	mov.w	r9, #0
 800ef0c:	af17      	add	r7, sp, #92	@ 0x5c
 800ef0e:	7c23      	ldrb	r3, [r4, #16]
 800ef10:	2b00      	cmp	r3, #0
 800ef12:	f000 80b1 	beq.w	800f078 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800ef16:	a80e      	add	r0, sp, #56	@ 0x38
 800ef18:	f7ff fe4e 	bl	800ebb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ef1c:	f1ba 0f00 	cmp.w	sl, #0
 800ef20:	f000 80a5 	beq.w	800f06e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800ef24:	7c23      	ldrb	r3, [r4, #16]
 800ef26:	2264      	movs	r2, #100	@ 0x64
 800ef28:	4639      	mov	r1, r7
 800ef2a:	a849      	add	r0, sp, #292	@ 0x124
 800ef2c:	9309      	str	r3, [sp, #36]	@ 0x24
 800ef2e:	f012 fb92 	bl	8021656 <memcpy>
 800ef32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ef34:	2b00      	cmp	r3, #0
 800ef36:	f000 80a7 	beq.w	800f088 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800ef3a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800ef3e:	7922      	ldrb	r2, [r4, #4]
 800ef40:	2a01      	cmp	r2, #1
 800ef42:	f040 808a 	bne.w	800f05a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ef46:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800ef4a:	1ac0      	subs	r0, r0, r3
 800ef4c:	2302      	movs	r3, #2
 800ef4e:	fb90 f0f3 	sdiv	r0, r0, r3
 800ef52:	b200      	sxth	r0, r0
 800ef54:	7c23      	ldrb	r3, [r4, #16]
 800ef56:	2b00      	cmp	r3, #0
 800ef58:	f000 808b 	beq.w	800f072 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800ef5c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800ef60:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800ef64:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ef68:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ef6c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800ef70:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800ef74:	4410      	add	r0, r2
 800ef76:	b200      	sxth	r0, r0
 800ef78:	9000      	str	r0, [sp, #0]
 800ef7a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800ef7e:	4642      	mov	r2, r8
 800ef80:	2100      	movs	r1, #0
 800ef82:	4658      	mov	r0, fp
 800ef84:	f7ff fc90 	bl	800e8a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ef88:	2800      	cmp	r0, #0
 800ef8a:	d163      	bne.n	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ef8c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800ef90:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800ef94:	b2b2      	uxth	r2, r6
 800ef96:	4413      	add	r3, r2
 800ef98:	1a8a      	subs	r2, r1, r2
 800ef9a:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800ef9e:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800efa2:	b21b      	sxth	r3, r3
 800efa4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800efa8:	2a00      	cmp	r2, #0
 800efaa:	d153      	bne.n	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800efac:	6822      	ldr	r2, [r4, #0]
 800efae:	8869      	ldrh	r1, [r5, #2]
 800efb0:	7a12      	ldrb	r2, [r2, #8]
 800efb2:	1a9b      	subs	r3, r3, r2
 800efb4:	88ea      	ldrh	r2, [r5, #6]
 800efb6:	440a      	add	r2, r1
 800efb8:	b212      	sxth	r2, r2
 800efba:	4293      	cmp	r3, r2
 800efbc:	dda7      	ble.n	800ef0e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800efbe:	e049      	b.n	800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800efc0:	7c23      	ldrb	r3, [r4, #16]
 800efc2:	444f      	add	r7, r9
 800efc4:	b1c3      	cbz	r3, 800eff8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800efc6:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800efca:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800efce:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800efd2:	443b      	add	r3, r7
 800efd4:	4293      	cmp	r3, r2
 800efd6:	da97      	bge.n	800ef08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800efd8:	a80e      	add	r0, sp, #56	@ 0x38
 800efda:	f7ff fded 	bl	800ebb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800efde:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800efe2:	3b01      	subs	r3, #1
 800efe4:	b29b      	uxth	r3, r3
 800efe6:	454b      	cmp	r3, r9
 800efe8:	9309      	str	r3, [sp, #36]	@ 0x24
 800efea:	d021      	beq.n	800f030 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800efec:	7961      	ldrb	r1, [r4, #5]
 800efee:	a817      	add	r0, sp, #92	@ 0x5c
 800eff0:	f7fa fc94 	bl	800991c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800eff4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eff6:	e7f4      	b.n	800efe2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800eff8:	fa1f f986 	uxth.w	r9, r6
 800effc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f000:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f004:	443b      	add	r3, r7
 800f006:	4293      	cmp	r3, r2
 800f008:	f6bf af7e 	bge.w	800ef08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f00c:	a817      	add	r0, sp, #92	@ 0x5c
 800f00e:	f002 fdb7 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f012:	b1f8      	cbz	r0, 800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f014:	280a      	cmp	r0, #10
 800f016:	d1f1      	bne.n	800effc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f018:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f01c:	444b      	add	r3, r9
 800f01e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800f022:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800f026:	eba3 0309 	sub.w	r3, r3, r9
 800f02a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f02e:	e7e5      	b.n	800effc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f030:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800f034:	b2b3      	uxth	r3, r6
 800f036:	441a      	add	r2, r3
 800f038:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800f03c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800f040:	1ad3      	subs	r3, r2, r3
 800f042:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f046:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800f04a:	b11b      	cbz	r3, 800f054 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f04c:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800f050:	2b00      	cmp	r3, #0
 800f052:	d0ba      	beq.n	800efca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800f054:	b063      	add	sp, #396	@ 0x18c
 800f056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f05a:	2a02      	cmp	r2, #2
 800f05c:	d105      	bne.n	800f06a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800f05e:	7be2      	ldrb	r2, [r4, #15]
 800f060:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800f064:	1a80      	subs	r0, r0, r2
 800f066:	1ac0      	subs	r0, r0, r3
 800f068:	e773      	b.n	800ef52 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800f06a:	2000      	movs	r0, #0
 800f06c:	e772      	b.n	800ef54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f06e:	7be0      	ldrb	r0, [r4, #15]
 800f070:	e770      	b.n	800ef54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f072:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800f076:	e773      	b.n	800ef60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800f078:	f1ba 0f00 	cmp.w	sl, #0
 800f07c:	d0f7      	beq.n	800f06e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f07e:	2264      	movs	r2, #100	@ 0x64
 800f080:	4639      	mov	r1, r7
 800f082:	a849      	add	r0, sp, #292	@ 0x124
 800f084:	f012 fae7 	bl	8021656 <memcpy>
 800f088:	2300      	movs	r3, #0
 800f08a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800f08e:	6821      	ldr	r1, [r4, #0]
 800f090:	a849      	add	r0, sp, #292	@ 0x124
 800f092:	f7ff fb9c 	bl	800e7ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f096:	b203      	sxth	r3, r0
 800f098:	e751      	b.n	800ef3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800f09a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f09a:	2b03      	cmp	r3, #3
 800f09c:	d818      	bhi.n	800f0d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f09e:	e8df f003 	tbb	[pc, r3]
 800f0a2:	0602      	.short	0x0602
 800f0a4:	130d      	.short	0x130d
 800f0a6:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f0aa:	1850      	adds	r0, r2, r1
 800f0ac:	4770      	bx	lr
 800f0ae:	8803      	ldrh	r3, [r0, #0]
 800f0b0:	8880      	ldrh	r0, [r0, #4]
 800f0b2:	4418      	add	r0, r3
 800f0b4:	b200      	sxth	r0, r0
 800f0b6:	1a80      	subs	r0, r0, r2
 800f0b8:	3801      	subs	r0, #1
 800f0ba:	4770      	bx	lr
 800f0bc:	8803      	ldrh	r3, [r0, #0]
 800f0be:	8880      	ldrh	r0, [r0, #4]
 800f0c0:	4418      	add	r0, r3
 800f0c2:	b200      	sxth	r0, r0
 800f0c4:	1a40      	subs	r0, r0, r1
 800f0c6:	e7f7      	b.n	800f0b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f0c8:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f0cc:	4410      	add	r0, r2
 800f0ce:	4770      	bx	lr
 800f0d0:	2000      	movs	r0, #0
 800f0d2:	4770      	bx	lr

0800f0d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f0d4:	2b03      	cmp	r3, #3
 800f0d6:	d817      	bhi.n	800f108 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f0d8:	e8df f003 	tbb	[pc, r3]
 800f0dc:	10090602 	.word	0x10090602
 800f0e0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f0e4:	1850      	adds	r0, r2, r1
 800f0e6:	4770      	bx	lr
 800f0e8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f0ec:	e7fa      	b.n	800f0e4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f0ee:	8843      	ldrh	r3, [r0, #2]
 800f0f0:	88c0      	ldrh	r0, [r0, #6]
 800f0f2:	4418      	add	r0, r3
 800f0f4:	b200      	sxth	r0, r0
 800f0f6:	1a80      	subs	r0, r0, r2
 800f0f8:	3801      	subs	r0, #1
 800f0fa:	4770      	bx	lr
 800f0fc:	8843      	ldrh	r3, [r0, #2]
 800f0fe:	88c0      	ldrh	r0, [r0, #6]
 800f100:	4418      	add	r0, r3
 800f102:	b200      	sxth	r0, r0
 800f104:	1a40      	subs	r0, r0, r1
 800f106:	e7f7      	b.n	800f0f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f108:	2000      	movs	r0, #0
 800f10a:	4770      	bx	lr

0800f10c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f10c:	2200      	movs	r2, #0
 800f10e:	4b01      	ldr	r3, [pc, #4]	@ (800f114 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f110:	601a      	str	r2, [r3, #0]
 800f112:	4770      	bx	lr
 800f114:	20002238 	.word	0x20002238

0800f118 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f118:	4603      	mov	r3, r0
 800f11a:	b1c8      	cbz	r0, 800f150 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f11c:	0c02      	lsrs	r2, r0, #16
 800f11e:	0412      	lsls	r2, r2, #16
 800f120:	b9a2      	cbnz	r2, 800f14c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f122:	0403      	lsls	r3, r0, #16
 800f124:	2010      	movs	r0, #16
 800f126:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f12a:	bf04      	itt	eq
 800f12c:	021b      	lsleq	r3, r3, #8
 800f12e:	3008      	addeq	r0, #8
 800f130:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f134:	bf04      	itt	eq
 800f136:	011b      	lsleq	r3, r3, #4
 800f138:	3004      	addeq	r0, #4
 800f13a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f13e:	bf04      	itt	eq
 800f140:	009b      	lsleq	r3, r3, #2
 800f142:	3002      	addeq	r0, #2
 800f144:	2b00      	cmp	r3, #0
 800f146:	db04      	blt.n	800f152 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f148:	3001      	adds	r0, #1
 800f14a:	4770      	bx	lr
 800f14c:	2000      	movs	r0, #0
 800f14e:	e7ea      	b.n	800f126 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f150:	2020      	movs	r0, #32
 800f152:	4770      	bx	lr

0800f154 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f158:	b087      	sub	sp, #28
 800f15a:	460d      	mov	r5, r1
 800f15c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f160:	4616      	mov	r6, r2
 800f162:	4698      	mov	r8, r3
 800f164:	4601      	mov	r1, r0
 800f166:	b120      	cbz	r0, 800f172 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f168:	b11a      	cbz	r2, 800f172 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f16a:	2d1f      	cmp	r5, #31
 800f16c:	d801      	bhi.n	800f172 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f16e:	2b1f      	cmp	r3, #31
 800f170:	d904      	bls.n	800f17c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f172:	2000      	movs	r0, #0
 800f174:	6038      	str	r0, [r7, #0]
 800f176:	b007      	add	sp, #28
 800f178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f17c:	b97d      	cbnz	r5, 800f19e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f17e:	b143      	cbz	r3, 800f192 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f180:	4602      	mov	r2, r0
 800f182:	e9cd 4700 	strd	r4, r7, [sp]
 800f186:	462b      	mov	r3, r5
 800f188:	4641      	mov	r1, r8
 800f18a:	4630      	mov	r0, r6
 800f18c:	f7ff ffe2 	bl	800f154 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f190:	e7f1      	b.n	800f176 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f192:	f04f 33ff 	mov.w	r3, #4294967295
 800f196:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f19a:	603b      	str	r3, [r7, #0]
 800f19c:	e7eb      	b.n	800f176 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f19e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f1a2:	d106      	bne.n	800f1b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f1a4:	4346      	muls	r6, r0
 800f1a6:	fbb6 f0f4 	udiv	r0, r6, r4
 800f1aa:	fb04 6610 	mls	r6, r4, r0, r6
 800f1ae:	603e      	str	r6, [r7, #0]
 800f1b0:	e7e1      	b.n	800f176 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f1b2:	fa00 fb05 	lsl.w	fp, r0, r5
 800f1b6:	fbbb f9f4 	udiv	r9, fp, r4
 800f1ba:	2201      	movs	r2, #1
 800f1bc:	fb0a f309 	mul.w	r3, sl, r9
 800f1c0:	40aa      	lsls	r2, r5
 800f1c2:	3a01      	subs	r2, #1
 800f1c4:	4016      	ands	r6, r2
 800f1c6:	4630      	mov	r0, r6
 800f1c8:	9303      	str	r3, [sp, #12]
 800f1ca:	f7ff ffa5 	bl	800f118 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f1ce:	462b      	mov	r3, r5
 800f1d0:	460a      	mov	r2, r1
 800f1d2:	e9cd 4700 	strd	r4, r7, [sp]
 800f1d6:	4601      	mov	r1, r0
 800f1d8:	4630      	mov	r0, r6
 800f1da:	f7ff ffbb 	bl	800f154 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f1de:	fb04 b919 	mls	r9, r4, r9, fp
 800f1e2:	4606      	mov	r6, r0
 800f1e4:	4648      	mov	r0, r9
 800f1e6:	eb05 0108 	add.w	r1, r5, r8
 800f1ea:	f7ff ff95 	bl	800f118 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f1ee:	ab05      	add	r3, sp, #20
 800f1f0:	e9cd 4300 	strd	r4, r3, [sp]
 800f1f4:	464a      	mov	r2, r9
 800f1f6:	4603      	mov	r3, r0
 800f1f8:	4650      	mov	r0, sl
 800f1fa:	f7ff ffab 	bl	800f154 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f1fe:	6839      	ldr	r1, [r7, #0]
 800f200:	9a05      	ldr	r2, [sp, #20]
 800f202:	9b03      	ldr	r3, [sp, #12]
 800f204:	4411      	add	r1, r2
 800f206:	fbb1 f2f4 	udiv	r2, r1, r4
 800f20a:	fb04 1412 	mls	r4, r4, r2, r1
 800f20e:	18d3      	adds	r3, r2, r3
 800f210:	441e      	add	r6, r3
 800f212:	4430      	add	r0, r6
 800f214:	603c      	str	r4, [r7, #0]
 800f216:	e7ae      	b.n	800f176 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f218 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f218:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f21c:	b085      	sub	sp, #20
 800f21e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f220:	f1b0 0900 	subs.w	r9, r0, #0
 800f224:	461d      	mov	r5, r3
 800f226:	bfbf      	itttt	lt
 800f228:	6823      	ldrlt	r3, [r4, #0]
 800f22a:	f1c9 0900 	rsblt	r9, r9, #0
 800f22e:	425b      	neglt	r3, r3
 800f230:	6023      	strlt	r3, [r4, #0]
 800f232:	bfb4      	ite	lt
 800f234:	f04f 36ff 	movlt.w	r6, #4294967295
 800f238:	2601      	movge	r6, #1
 800f23a:	2a00      	cmp	r2, #0
 800f23c:	4617      	mov	r7, r2
 800f23e:	da04      	bge.n	800f24a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f240:	6823      	ldr	r3, [r4, #0]
 800f242:	4257      	negs	r7, r2
 800f244:	425b      	negs	r3, r3
 800f246:	4276      	negs	r6, r6
 800f248:	6023      	str	r3, [r4, #0]
 800f24a:	2d00      	cmp	r5, #0
 800f24c:	4638      	mov	r0, r7
 800f24e:	bfba      	itte	lt
 800f250:	426d      	neglt	r5, r5
 800f252:	f04f 38ff 	movlt.w	r8, #4294967295
 800f256:	f04f 0801 	movge.w	r8, #1
 800f25a:	f7ff ff5d 	bl	800f118 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f25e:	ab03      	add	r3, sp, #12
 800f260:	e9cd 5300 	strd	r5, r3, [sp]
 800f264:	463a      	mov	r2, r7
 800f266:	4603      	mov	r3, r0
 800f268:	4648      	mov	r0, r9
 800f26a:	f7ff ff73 	bl	800f154 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f26e:	6823      	ldr	r3, [r4, #0]
 800f270:	9a03      	ldr	r2, [sp, #12]
 800f272:	4546      	cmp	r6, r8
 800f274:	441a      	add	r2, r3
 800f276:	fb92 f3f5 	sdiv	r3, r2, r5
 800f27a:	4418      	add	r0, r3
 800f27c:	fb05 2313 	mls	r3, r5, r3, r2
 800f280:	bf18      	it	ne
 800f282:	4240      	negne	r0, r0
 800f284:	1c72      	adds	r2, r6, #1
 800f286:	6023      	str	r3, [r4, #0]
 800f288:	d105      	bne.n	800f296 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f28a:	2b00      	cmp	r3, #0
 800f28c:	f1c3 0200 	rsb	r2, r3, #0
 800f290:	db0b      	blt.n	800f2aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f292:	6022      	str	r2, [r4, #0]
 800f294:	e006      	b.n	800f2a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f296:	2e01      	cmp	r6, #1
 800f298:	d104      	bne.n	800f2a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f29a:	2b00      	cmp	r3, #0
 800f29c:	da02      	bge.n	800f2a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f29e:	442b      	add	r3, r5
 800f2a0:	3801      	subs	r0, #1
 800f2a2:	6023      	str	r3, [r4, #0]
 800f2a4:	b005      	add	sp, #20
 800f2a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f2aa:	3801      	subs	r0, #1
 800f2ac:	1b52      	subs	r2, r2, r5
 800f2ae:	e7f0      	b.n	800f292 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f2b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f2b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f2b4:	4c1c      	ldr	r4, [pc, #112]	@ (800f328 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f2b6:	4605      	mov	r5, r0
 800f2b8:	69a3      	ldr	r3, [r4, #24]
 800f2ba:	6807      	ldr	r7, [r0, #0]
 800f2bc:	b92b      	cbnz	r3, 800f2ca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f2be:	6840      	ldr	r0, [r0, #4]
 800f2c0:	e9c5 7000 	strd	r7, r0, [r5]
 800f2c4:	b004      	add	sp, #16
 800f2c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2ca:	f04f 0802 	mov.w	r8, #2
 800f2ce:	fb93 f1f8 	sdiv	r1, r3, r8
 800f2d2:	68a2      	ldr	r2, [r4, #8]
 800f2d4:	ae04      	add	r6, sp, #16
 800f2d6:	440a      	add	r2, r1
 800f2d8:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f2dc:	69e1      	ldr	r1, [r4, #28]
 800f2de:	463a      	mov	r2, r7
 800f2e0:	9600      	str	r6, [sp, #0]
 800f2e2:	6820      	ldr	r0, [r4, #0]
 800f2e4:	f7ff ff98 	bl	800f218 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f2e8:	69a3      	ldr	r3, [r4, #24]
 800f2ea:	4607      	mov	r7, r0
 800f2ec:	686a      	ldr	r2, [r5, #4]
 800f2ee:	6a21      	ldr	r1, [r4, #32]
 800f2f0:	9600      	str	r6, [sp, #0]
 800f2f2:	6860      	ldr	r0, [r4, #4]
 800f2f4:	f7ff ff90 	bl	800f218 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f2f8:	69a3      	ldr	r3, [r4, #24]
 800f2fa:	6962      	ldr	r2, [r4, #20]
 800f2fc:	fb93 f8f8 	sdiv	r8, r3, r8
 800f300:	4442      	add	r2, r8
 800f302:	9203      	str	r2, [sp, #12]
 800f304:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f306:	682a      	ldr	r2, [r5, #0]
 800f308:	4407      	add	r7, r0
 800f30a:	9600      	str	r6, [sp, #0]
 800f30c:	68e0      	ldr	r0, [r4, #12]
 800f30e:	f7ff ff83 	bl	800f218 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f312:	9600      	str	r6, [sp, #0]
 800f314:	4680      	mov	r8, r0
 800f316:	69a3      	ldr	r3, [r4, #24]
 800f318:	686a      	ldr	r2, [r5, #4]
 800f31a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f31c:	6920      	ldr	r0, [r4, #16]
 800f31e:	f7ff ff7b 	bl	800f218 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f322:	4440      	add	r0, r8
 800f324:	e7cc      	b.n	800f2c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f326:	bf00      	nop
 800f328:	2000223c 	.word	0x2000223c

0800f32c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f32c:	4b07      	ldr	r3, [pc, #28]	@ (800f34c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f32e:	781b      	ldrb	r3, [r3, #0]
 800f330:	2b01      	cmp	r3, #1
 800f332:	d109      	bne.n	800f348 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f334:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f338:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f33c:	8003      	strh	r3, [r0, #0]
 800f33e:	4b04      	ldr	r3, [pc, #16]	@ (800f350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f340:	881b      	ldrh	r3, [r3, #0]
 800f342:	3b01      	subs	r3, #1
 800f344:	1a9b      	subs	r3, r3, r2
 800f346:	800b      	strh	r3, [r1, #0]
 800f348:	4770      	bx	lr
 800f34a:	bf00      	nop
 800f34c:	20002228 	.word	0x20002228
 800f350:	20002224 	.word	0x20002224

0800f354 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f354:	b510      	push	{r4, lr}
 800f356:	4b07      	ldr	r3, [pc, #28]	@ (800f374 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f358:	781b      	ldrb	r3, [r3, #0]
 800f35a:	2b01      	cmp	r3, #1
 800f35c:	d108      	bne.n	800f370 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f35e:	4b06      	ldr	r3, [pc, #24]	@ (800f378 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f360:	880c      	ldrh	r4, [r1, #0]
 800f362:	881b      	ldrh	r3, [r3, #0]
 800f364:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f368:	3b01      	subs	r3, #1
 800f36a:	1b1b      	subs	r3, r3, r4
 800f36c:	8003      	strh	r3, [r0, #0]
 800f36e:	800a      	strh	r2, [r1, #0]
 800f370:	bd10      	pop	{r4, pc}
 800f372:	bf00      	nop
 800f374:	20002228 	.word	0x20002228
 800f378:	20002224 	.word	0x20002224

0800f37c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f37c:	b510      	push	{r4, lr}
 800f37e:	4b0a      	ldr	r3, [pc, #40]	@ (800f3a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f380:	781b      	ldrb	r3, [r3, #0]
 800f382:	2b01      	cmp	r3, #1
 800f384:	d10e      	bne.n	800f3a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f386:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f38a:	8843      	ldrh	r3, [r0, #2]
 800f38c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f390:	18ca      	adds	r2, r1, r3
 800f392:	4b06      	ldr	r3, [pc, #24]	@ (800f3ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f394:	8044      	strh	r4, [r0, #2]
 800f396:	881b      	ldrh	r3, [r3, #0]
 800f398:	1a9b      	subs	r3, r3, r2
 800f39a:	8003      	strh	r3, [r0, #0]
 800f39c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f3a0:	8081      	strh	r1, [r0, #4]
 800f3a2:	80c3      	strh	r3, [r0, #6]
 800f3a4:	bd10      	pop	{r4, pc}
 800f3a6:	bf00      	nop
 800f3a8:	20002228 	.word	0x20002228
 800f3ac:	20002224 	.word	0x20002224

0800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f3b0:	4b08      	ldr	r3, [pc, #32]	@ (800f3d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f3b2:	781b      	ldrb	r3, [r3, #0]
 800f3b4:	2b01      	cmp	r3, #1
 800f3b6:	d10c      	bne.n	800f3d2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f3b8:	8803      	ldrh	r3, [r0, #0]
 800f3ba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f3be:	8842      	ldrh	r2, [r0, #2]
 800f3c0:	8002      	strh	r2, [r0, #0]
 800f3c2:	185a      	adds	r2, r3, r1
 800f3c4:	4b04      	ldr	r3, [pc, #16]	@ (800f3d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f3c6:	881b      	ldrh	r3, [r3, #0]
 800f3c8:	1a9b      	subs	r3, r3, r2
 800f3ca:	8043      	strh	r3, [r0, #2]
 800f3cc:	88c3      	ldrh	r3, [r0, #6]
 800f3ce:	80c1      	strh	r1, [r0, #6]
 800f3d0:	8083      	strh	r3, [r0, #4]
 800f3d2:	4770      	bx	lr
 800f3d4:	20002228 	.word	0x20002228
 800f3d8:	20002224 	.word	0x20002224

0800f3dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f3dc:	b510      	push	{r4, lr}
 800f3de:	4b07      	ldr	r3, [pc, #28]	@ (800f3fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f3e0:	781b      	ldrb	r3, [r3, #0]
 800f3e2:	2b01      	cmp	r3, #1
 800f3e4:	d108      	bne.n	800f3f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f3e6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f3ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f3ee:	8003      	strh	r3, [r0, #0]
 800f3f0:	8893      	ldrh	r3, [r2, #4]
 800f3f2:	3b01      	subs	r3, #1
 800f3f4:	1b1b      	subs	r3, r3, r4
 800f3f6:	800b      	strh	r3, [r1, #0]
 800f3f8:	bd10      	pop	{r4, pc}
 800f3fa:	bf00      	nop
 800f3fc:	20002228 	.word	0x20002228

0800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f400:	b510      	push	{r4, lr}
 800f402:	4b0a      	ldr	r3, [pc, #40]	@ (800f42c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f404:	460a      	mov	r2, r1
 800f406:	781b      	ldrb	r3, [r3, #0]
 800f408:	2b01      	cmp	r3, #1
 800f40a:	d10d      	bne.n	800f428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f40c:	8881      	ldrh	r1, [r0, #4]
 800f40e:	8803      	ldrh	r3, [r0, #0]
 800f410:	440b      	add	r3, r1
 800f412:	4601      	mov	r1, r0
 800f414:	3b01      	subs	r3, #1
 800f416:	f821 3b02 	strh.w	r3, [r1], #2
 800f41a:	f7ff ffdf 	bl	800f3dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f41e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f422:	88c2      	ldrh	r2, [r0, #6]
 800f424:	80c3      	strh	r3, [r0, #6]
 800f426:	8082      	strh	r2, [r0, #4]
 800f428:	bd10      	pop	{r4, pc}
 800f42a:	bf00      	nop
 800f42c:	20002228 	.word	0x20002228

0800f430 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f430:	2100      	movs	r1, #0
 800f432:	4b06      	ldr	r3, [pc, #24]	@ (800f44c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f434:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800f438:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f43c:	4b04      	ldr	r3, [pc, #16]	@ (800f450 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f43e:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800f442:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f446:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800f44a:	4770      	bx	lr
 800f44c:	20002224 	.word	0x20002224
 800f450:	20002226 	.word	0x20002226

0800f454 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f454:	4b03      	ldr	r3, [pc, #12]	@ (800f464 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f456:	6818      	ldr	r0, [r3, #0]
 800f458:	b110      	cbz	r0, 800f460 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f45a:	6803      	ldr	r3, [r0, #0]
 800f45c:	699b      	ldr	r3, [r3, #24]
 800f45e:	4718      	bx	r3
 800f460:	4770      	bx	lr
 800f462:	bf00      	nop
 800f464:	2000226c 	.word	0x2000226c

0800f468 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f468:	4770      	bx	lr
	...

0800f46c <_ZN8touchgfx11Application4drawEv>:
 800f46c:	b507      	push	{r0, r1, r2, lr}
 800f46e:	2100      	movs	r1, #0
 800f470:	4b08      	ldr	r3, [pc, #32]	@ (800f494 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f472:	9100      	str	r1, [sp, #0]
 800f474:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f478:	4b07      	ldr	r3, [pc, #28]	@ (800f498 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f47a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f47e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f482:	4669      	mov	r1, sp
 800f484:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f488:	6803      	ldr	r3, [r0, #0]
 800f48a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f48c:	4798      	blx	r3
 800f48e:	b003      	add	sp, #12
 800f490:	f85d fb04 	ldr.w	pc, [sp], #4
 800f494:	20002224 	.word	0x20002224
 800f498:	20002226 	.word	0x20002226

0800f49c <_ZN8touchgfx11Application10invalidateEv>:
 800f49c:	2100      	movs	r1, #0
 800f49e:	4b09      	ldr	r3, [pc, #36]	@ (800f4c4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f4a0:	b082      	sub	sp, #8
 800f4a2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4a6:	4b08      	ldr	r3, [pc, #32]	@ (800f4c8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f4a8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f4ac:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f4b0:	9100      	str	r1, [sp, #0]
 800f4b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f4b6:	6803      	ldr	r3, [r0, #0]
 800f4b8:	aa02      	add	r2, sp, #8
 800f4ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f4bc:	e912 0006 	ldmdb	r2, {r1, r2}
 800f4c0:	b002      	add	sp, #8
 800f4c2:	4718      	bx	r3
 800f4c4:	20002224 	.word	0x20002224
 800f4c8:	20002226 	.word	0x20002226

0800f4cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f4cc:	4b03      	ldr	r3, [pc, #12]	@ (800f4dc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f4ce:	6818      	ldr	r0, [r3, #0]
 800f4d0:	b110      	cbz	r0, 800f4d8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f4d2:	6803      	ldr	r3, [r0, #0]
 800f4d4:	69db      	ldr	r3, [r3, #28]
 800f4d6:	4718      	bx	r3
 800f4d8:	4770      	bx	lr
 800f4da:	bf00      	nop
 800f4dc:	2000226c 	.word	0x2000226c

0800f4e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f4e0:	4b03      	ldr	r3, [pc, #12]	@ (800f4f0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f4e2:	6818      	ldr	r0, [r3, #0]
 800f4e4:	b110      	cbz	r0, 800f4ec <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f4e6:	6803      	ldr	r3, [r0, #0]
 800f4e8:	6a1b      	ldr	r3, [r3, #32]
 800f4ea:	4718      	bx	r3
 800f4ec:	4770      	bx	lr
 800f4ee:	bf00      	nop
 800f4f0:	2000226c 	.word	0x2000226c

0800f4f4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f4f4:	2300      	movs	r3, #0
 800f4f6:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800f4fa:	4770      	bx	lr

0800f4fc <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f4fc:	4b03      	ldr	r3, [pc, #12]	@ (800f50c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f4fe:	6818      	ldr	r0, [r3, #0]
 800f500:	b110      	cbz	r0, 800f508 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f502:	6803      	ldr	r3, [r0, #0]
 800f504:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f506:	4718      	bx	r3
 800f508:	4770      	bx	lr
 800f50a:	bf00      	nop
 800f50c:	2000226c 	.word	0x2000226c

0800f510 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f510:	b510      	push	{r4, lr}
 800f512:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f516:	888a      	ldrh	r2, [r1, #4]
 800f518:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f51c:	4422      	add	r2, r4
 800f51e:	b212      	sxth	r2, r2
 800f520:	4293      	cmp	r3, r2
 800f522:	da15      	bge.n	800f550 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f524:	8882      	ldrh	r2, [r0, #4]
 800f526:	4413      	add	r3, r2
 800f528:	b21b      	sxth	r3, r3
 800f52a:	429c      	cmp	r4, r3
 800f52c:	da10      	bge.n	800f550 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f52e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f532:	88c9      	ldrh	r1, [r1, #6]
 800f534:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f538:	4419      	add	r1, r3
 800f53a:	b209      	sxth	r1, r1
 800f53c:	428a      	cmp	r2, r1
 800f53e:	da07      	bge.n	800f550 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f540:	88c0      	ldrh	r0, [r0, #6]
 800f542:	4410      	add	r0, r2
 800f544:	b200      	sxth	r0, r0
 800f546:	4283      	cmp	r3, r0
 800f548:	bfac      	ite	ge
 800f54a:	2000      	movge	r0, #0
 800f54c:	2001      	movlt	r0, #1
 800f54e:	bd10      	pop	{r4, pc}
 800f550:	2000      	movs	r0, #0
 800f552:	e7fc      	b.n	800f54e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f554 <_ZN8touchgfx4Rect10restrictToEss>:
 800f554:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f558:	b510      	push	{r4, lr}
 800f55a:	2b00      	cmp	r3, #0
 800f55c:	da04      	bge.n	800f568 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f55e:	8884      	ldrh	r4, [r0, #4]
 800f560:	4423      	add	r3, r4
 800f562:	8083      	strh	r3, [r0, #4]
 800f564:	2300      	movs	r3, #0
 800f566:	8003      	strh	r3, [r0, #0]
 800f568:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f56c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f570:	1b09      	subs	r1, r1, r4
 800f572:	428b      	cmp	r3, r1
 800f574:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f578:	bfc8      	it	gt
 800f57a:	8081      	strhgt	r1, [r0, #4]
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	da04      	bge.n	800f58a <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f580:	88c1      	ldrh	r1, [r0, #6]
 800f582:	440b      	add	r3, r1
 800f584:	80c3      	strh	r3, [r0, #6]
 800f586:	2300      	movs	r3, #0
 800f588:	8043      	strh	r3, [r0, #2]
 800f58a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f58e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f592:	1a52      	subs	r2, r2, r1
 800f594:	4293      	cmp	r3, r2
 800f596:	bfc8      	it	gt
 800f598:	80c2      	strhgt	r2, [r0, #6]
 800f59a:	bd10      	pop	{r4, pc}

0800f59c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f59c:	b510      	push	{r4, lr}
 800f59e:	460c      	mov	r4, r1
 800f5a0:	4b0f      	ldr	r3, [pc, #60]	@ (800f5e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f5a2:	4620      	mov	r0, r4
 800f5a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f5a8:	4b0e      	ldr	r3, [pc, #56]	@ (800f5e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f5aa:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f5ae:	f7ff ffd1 	bl	800f554 <_ZN8touchgfx4Rect10restrictToEss>
 800f5b2:	4b0d      	ldr	r3, [pc, #52]	@ (800f5e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f5b4:	6818      	ldr	r0, [r3, #0]
 800f5b6:	b190      	cbz	r0, 800f5de <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f5b8:	6803      	ldr	r3, [r0, #0]
 800f5ba:	4621      	mov	r1, r4
 800f5bc:	689b      	ldr	r3, [r3, #8]
 800f5be:	4798      	blx	r3
 800f5c0:	4b0a      	ldr	r3, [pc, #40]	@ (800f5ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f5c2:	6818      	ldr	r0, [r3, #0]
 800f5c4:	b118      	cbz	r0, 800f5ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f5c6:	6803      	ldr	r3, [r0, #0]
 800f5c8:	4621      	mov	r1, r4
 800f5ca:	689b      	ldr	r3, [r3, #8]
 800f5cc:	4798      	blx	r3
 800f5ce:	4b08      	ldr	r3, [pc, #32]	@ (800f5f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f5d0:	4621      	mov	r1, r4
 800f5d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f5d6:	6818      	ldr	r0, [r3, #0]
 800f5d8:	6803      	ldr	r3, [r0, #0]
 800f5da:	69db      	ldr	r3, [r3, #28]
 800f5dc:	4718      	bx	r3
 800f5de:	bd10      	pop	{r4, pc}
 800f5e0:	20002226 	.word	0x20002226
 800f5e4:	20002224 	.word	0x20002224
 800f5e8:	2000226c 	.word	0x2000226c
 800f5ec:	20002268 	.word	0x20002268
 800f5f0:	20002230 	.word	0x20002230

0800f5f4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f5f6:	4606      	mov	r6, r0
 800f5f8:	4608      	mov	r0, r1
 800f5fa:	460f      	mov	r7, r1
 800f5fc:	f7fc ff65 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800f600:	b9e8      	cbnz	r0, 800f63e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f602:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f606:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f60a:	42a5      	cmp	r5, r4
 800f60c:	db17      	blt.n	800f63e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f60e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f612:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f616:	429a      	cmp	r2, r3
 800f618:	db11      	blt.n	800f63e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f61a:	88b9      	ldrh	r1, [r7, #4]
 800f61c:	440d      	add	r5, r1
 800f61e:	88b1      	ldrh	r1, [r6, #4]
 800f620:	b22d      	sxth	r5, r5
 800f622:	440c      	add	r4, r1
 800f624:	b224      	sxth	r4, r4
 800f626:	42a5      	cmp	r5, r4
 800f628:	dc09      	bgt.n	800f63e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f62a:	88f8      	ldrh	r0, [r7, #6]
 800f62c:	4410      	add	r0, r2
 800f62e:	88f2      	ldrh	r2, [r6, #6]
 800f630:	b200      	sxth	r0, r0
 800f632:	4413      	add	r3, r2
 800f634:	b21b      	sxth	r3, r3
 800f636:	4298      	cmp	r0, r3
 800f638:	bfcc      	ite	gt
 800f63a:	2000      	movgt	r0, #0
 800f63c:	2001      	movle	r0, #1
 800f63e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f640 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f642:	4604      	mov	r4, r0
 800f644:	4608      	mov	r0, r1
 800f646:	460d      	mov	r5, r1
 800f648:	f7fc ff3f 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800f64c:	b978      	cbnz	r0, 800f66e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f64e:	4620      	mov	r0, r4
 800f650:	f7fc ff3b 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800f654:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f658:	b150      	cbz	r0, 800f670 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f65a:	8026      	strh	r6, [r4, #0]
 800f65c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f660:	8063      	strh	r3, [r4, #2]
 800f662:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f666:	80a3      	strh	r3, [r4, #4]
 800f668:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f66c:	80e3      	strh	r3, [r4, #6]
 800f66e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f670:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f674:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f678:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f67c:	42b1      	cmp	r1, r6
 800f67e:	460f      	mov	r7, r1
 800f680:	bfa8      	it	ge
 800f682:	4637      	movge	r7, r6
 800f684:	4293      	cmp	r3, r2
 800f686:	4618      	mov	r0, r3
 800f688:	bfa8      	it	ge
 800f68a:	4610      	movge	r0, r2
 800f68c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f690:	88ed      	ldrh	r5, [r5, #6]
 800f692:	4466      	add	r6, ip
 800f694:	442a      	add	r2, r5
 800f696:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f69a:	88e5      	ldrh	r5, [r4, #6]
 800f69c:	4461      	add	r1, ip
 800f69e:	442b      	add	r3, r5
 800f6a0:	b236      	sxth	r6, r6
 800f6a2:	b209      	sxth	r1, r1
 800f6a4:	b212      	sxth	r2, r2
 800f6a6:	b21b      	sxth	r3, r3
 800f6a8:	428e      	cmp	r6, r1
 800f6aa:	bfac      	ite	ge
 800f6ac:	ebc7 0106 	rsbge	r1, r7, r6
 800f6b0:	ebc7 0101 	rsblt	r1, r7, r1
 800f6b4:	429a      	cmp	r2, r3
 800f6b6:	bfac      	ite	ge
 800f6b8:	ebc0 0202 	rsbge	r2, r0, r2
 800f6bc:	ebc0 0203 	rsblt	r2, r0, r3
 800f6c0:	8027      	strh	r7, [r4, #0]
 800f6c2:	8060      	strh	r0, [r4, #2]
 800f6c4:	80a1      	strh	r1, [r4, #4]
 800f6c6:	80e2      	strh	r2, [r4, #6]
 800f6c8:	e7d1      	b.n	800f66e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f6cc <_ZN8touchgfx11Application11getInstanceEv>:
 800f6cc:	4b01      	ldr	r3, [pc, #4]	@ (800f6d4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f6ce:	6818      	ldr	r0, [r3, #0]
 800f6d0:	4770      	bx	lr
 800f6d2:	bf00      	nop
 800f6d4:	2000227c 	.word	0x2000227c

0800f6d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800f6d8:	2300      	movs	r3, #0
 800f6da:	b510      	push	{r4, lr}
 800f6dc:	4604      	mov	r4, r0
 800f6de:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800f6e2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f6e6:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f6ea:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f6ee:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800f6f2:	429a      	cmp	r2, r3
 800f6f4:	d90e      	bls.n	800f714 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800f6f6:	18e2      	adds	r2, r4, r3
 800f6f8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800f6fc:	b122      	cbz	r2, 800f708 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800f6fe:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f702:	6803      	ldr	r3, [r0, #0]
 800f704:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f706:	4798      	blx	r3
 800f708:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800f70c:	3301      	adds	r3, #1
 800f70e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800f712:	e7ea      	b.n	800f6ea <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800f714:	bd10      	pop	{r4, pc}

0800f716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800f716:	2300      	movs	r3, #0
 800f718:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800f71c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f720:	30a4      	adds	r0, #164	@ 0xa4
 800f722:	f802 3b01 	strb.w	r3, [r2], #1
 800f726:	4282      	cmp	r2, r0
 800f728:	d1fb      	bne.n	800f722 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800f72a:	4770      	bx	lr

0800f72c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f72c:	b570      	push	{r4, r5, r6, lr}
 800f72e:	4c0b      	ldr	r4, [pc, #44]	@ (800f75c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800f730:	4605      	mov	r5, r0
 800f732:	6820      	ldr	r0, [r4, #0]
 800f734:	460e      	mov	r6, r1
 800f736:	b110      	cbz	r0, 800f73e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800f738:	6803      	ldr	r3, [r0, #0]
 800f73a:	695b      	ldr	r3, [r3, #20]
 800f73c:	4798      	blx	r3
 800f73e:	1d28      	adds	r0, r5, #4
 800f740:	f7ff ffe9 	bl	800f716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f744:	6026      	str	r6, [r4, #0]
 800f746:	6833      	ldr	r3, [r6, #0]
 800f748:	4630      	mov	r0, r6
 800f74a:	68db      	ldr	r3, [r3, #12]
 800f74c:	4798      	blx	r3
 800f74e:	682b      	ldr	r3, [r5, #0]
 800f750:	4628      	mov	r0, r5
 800f752:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f756:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f758:	4718      	bx	r3
 800f75a:	bf00      	nop
 800f75c:	2000226c 	.word	0x2000226c

0800f760 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800f760:	2300      	movs	r3, #0
 800f762:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f764:	461a      	mov	r2, r3
 800f766:	461c      	mov	r4, r3
 800f768:	461d      	mov	r5, r3
 800f76a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800f76e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800f772:	459c      	cmp	ip, r3
 800f774:	dd1a      	ble.n	800f7ac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800f776:	18c6      	adds	r6, r0, r3
 800f778:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800f77c:	b16e      	cbz	r6, 800f79a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800f77e:	429a      	cmp	r2, r3
 800f780:	d008      	beq.n	800f794 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800f782:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800f786:	fa1f fe82 	uxth.w	lr, r2
 800f78a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800f78e:	1887      	adds	r7, r0, r2
 800f790:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800f794:	3201      	adds	r2, #1
 800f796:	3301      	adds	r3, #1
 800f798:	e7eb      	b.n	800f772 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800f79a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800f79e:	4299      	cmp	r1, r3
 800f7a0:	bfa8      	it	ge
 800f7a2:	3501      	addge	r5, #1
 800f7a4:	429e      	cmp	r6, r3
 800f7a6:	bfc8      	it	gt
 800f7a8:	3401      	addgt	r4, #1
 800f7aa:	e7f4      	b.n	800f796 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800f7ac:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800f7b0:	1b49      	subs	r1, r1, r5
 800f7b2:	1b1b      	subs	r3, r3, r4
 800f7b4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800f7b8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800f7bc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f7c0:	4293      	cmp	r3, r2
 800f7c2:	dd03      	ble.n	800f7cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800f7c4:	3b01      	subs	r3, #1
 800f7c6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800f7ca:	e7f7      	b.n	800f7bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800f7cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800f7d0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800f7d0:	b570      	push	{r4, r5, r6, lr}
 800f7d2:	4d16      	ldr	r5, [pc, #88]	@ (800f82c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800f7d4:	4604      	mov	r4, r0
 800f7d6:	6828      	ldr	r0, [r5, #0]
 800f7d8:	b140      	cbz	r0, 800f7ec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f7da:	7a03      	ldrb	r3, [r0, #8]
 800f7dc:	b933      	cbnz	r3, 800f7ec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f7de:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f7e2:	6803      	ldr	r3, [r0, #0]
 800f7e4:	689b      	ldr	r3, [r3, #8]
 800f7e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f7ea:	4718      	bx	r3
 800f7ec:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800f7f0:	4e0f      	ldr	r6, [pc, #60]	@ (800f830 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800f7f2:	b973      	cbnz	r3, 800f812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f7f4:	b168      	cbz	r0, 800f812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f7f6:	7a03      	ldrb	r3, [r0, #8]
 800f7f8:	b15b      	cbz	r3, 800f812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f7fa:	6830      	ldr	r0, [r6, #0]
 800f7fc:	b110      	cbz	r0, 800f804 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f7fe:	6803      	ldr	r3, [r0, #0]
 800f800:	691b      	ldr	r3, [r3, #16]
 800f802:	4798      	blx	r3
 800f804:	6828      	ldr	r0, [r5, #0]
 800f806:	6803      	ldr	r3, [r0, #0]
 800f808:	68db      	ldr	r3, [r3, #12]
 800f80a:	4798      	blx	r3
 800f80c:	2301      	movs	r3, #1
 800f80e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800f812:	3404      	adds	r4, #4
 800f814:	4620      	mov	r0, r4
 800f816:	f7ff ff5f 	bl	800f6d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800f81a:	4620      	mov	r0, r4
 800f81c:	f7ff ffa0 	bl	800f760 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800f820:	6830      	ldr	r0, [r6, #0]
 800f822:	b110      	cbz	r0, 800f82a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800f824:	6803      	ldr	r3, [r0, #0]
 800f826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f828:	e7dd      	b.n	800f7e6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f82a:	bd70      	pop	{r4, r5, r6, pc}
 800f82c:	20002270 	.word	0x20002270
 800f830:	2000226c 	.word	0x2000226c

0800f834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f834:	4603      	mov	r3, r0
 800f836:	2200      	movs	r2, #0
 800f838:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800f83c:	801a      	strh	r2, [r3, #0]
 800f83e:	805a      	strh	r2, [r3, #2]
 800f840:	809a      	strh	r2, [r3, #4]
 800f842:	80da      	strh	r2, [r3, #6]
 800f844:	3308      	adds	r3, #8
 800f846:	428b      	cmp	r3, r1
 800f848:	d1f8      	bne.n	800f83c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f84a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800f84e:	4770      	bx	lr

0800f850 <_ZN8touchgfx11ApplicationC1Ev>:
 800f850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f852:	4606      	mov	r6, r0
 800f854:	4604      	mov	r4, r0
 800f856:	2500      	movs	r5, #0
 800f858:	4b1b      	ldr	r3, [pc, #108]	@ (800f8c8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f85a:	22a8      	movs	r2, #168	@ 0xa8
 800f85c:	f846 3b04 	str.w	r3, [r6], #4
 800f860:	2100      	movs	r1, #0
 800f862:	4630      	mov	r0, r6
 800f864:	f011 fe27 	bl	80214b6 <memset>
 800f868:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800f86c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800f870:	f7ff ffe0 	bl	800f834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f874:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800f878:	f7ff ffdc 	bl	800f834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f87c:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800f880:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800f884:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800f888:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800f88c:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800f890:	490e      	ldr	r1, [pc, #56]	@ (800f8cc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f892:	480f      	ldr	r0, [pc, #60]	@ (800f8d0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f894:	f011 fab2 	bl	8020dfc <CRC_Lock>
 800f898:	4f0e      	ldr	r7, [pc, #56]	@ (800f8d4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f89a:	4b0f      	ldr	r3, [pc, #60]	@ (800f8d8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800f89c:	b158      	cbz	r0, 800f8b6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800f89e:	801d      	strh	r5, [r3, #0]
 800f8a0:	2300      	movs	r3, #0
 800f8a2:	4a0e      	ldr	r2, [pc, #56]	@ (800f8dc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800f8a4:	4630      	mov	r0, r6
 800f8a6:	6013      	str	r3, [r2, #0]
 800f8a8:	4a0d      	ldr	r2, [pc, #52]	@ (800f8e0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800f8aa:	603b      	str	r3, [r7, #0]
 800f8ac:	6013      	str	r3, [r2, #0]
 800f8ae:	f7ff ff32 	bl	800f716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800f8b2:	4620      	mov	r0, r4
 800f8b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f8b6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800f8ba:	2002      	movs	r0, #2
 800f8bc:	801a      	strh	r2, [r3, #0]
 800f8be:	6038      	str	r0, [r7, #0]
 800f8c0:	f001 fb8e 	bl	8010fe0 <_ZN8touchgfx6Screen4drawEv>
 800f8c4:	e7ec      	b.n	800f8a0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800f8c6:	bf00      	nop
 800f8c8:	08023e28 	.word	0x08023e28
 800f8cc:	b5e8b5cd 	.word	0xb5e8b5cd
 800f8d0:	f407a5c2 	.word	0xf407a5c2
 800f8d4:	2000226c 	.word	0x2000226c
 800f8d8:	20000014 	.word	0x20000014
 800f8dc:	2000227c 	.word	0x2000227c
 800f8e0:	20002270 	.word	0x20002270

0800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f8e4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800f8e8:	b510      	push	{r4, lr}
 800f8ea:	3b01      	subs	r3, #1
 800f8ec:	b29b      	uxth	r3, r3
 800f8ee:	428b      	cmp	r3, r1
 800f8f0:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800f8f4:	d908      	bls.n	800f908 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800f8f6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f8fa:	681a      	ldr	r2, [r3, #0]
 800f8fc:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f900:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f904:	685a      	ldr	r2, [r3, #4]
 800f906:	6062      	str	r2, [r4, #4]
 800f908:	bd10      	pop	{r4, pc}
	...

0800f90c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f90c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f910:	4b92      	ldr	r3, [pc, #584]	@ (800fb5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800f912:	b08f      	sub	sp, #60	@ 0x3c
 800f914:	ac0a      	add	r4, sp, #40	@ 0x28
 800f916:	e884 0006 	stmia.w	r4, {r1, r2}
 800f91a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f91e:	4b90      	ldr	r3, [pc, #576]	@ (800fb60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800f920:	4683      	mov	fp, r0
 800f922:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f926:	4620      	mov	r0, r4
 800f928:	f7ff fe14 	bl	800f554 <_ZN8touchgfx4Rect10restrictToEss>
 800f92c:	4620      	mov	r0, r4
 800f92e:	f7fc fdcc 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 800f932:	2800      	cmp	r0, #0
 800f934:	d170      	bne.n	800fa18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f936:	4b8b      	ldr	r3, [pc, #556]	@ (800fb64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800f938:	681b      	ldr	r3, [r3, #0]
 800f93a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800f93e:	2b02      	cmp	r3, #2
 800f940:	d06a      	beq.n	800fa18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f942:	9403      	str	r4, [sp, #12]
 800f944:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800f948:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800f94c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800f950:	35a4      	adds	r5, #164	@ 0xa4
 800f952:	9301      	str	r3, [sp, #4]
 800f954:	b15c      	cbz	r4, 800f96e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800f956:	4629      	mov	r1, r5
 800f958:	9803      	ldr	r0, [sp, #12]
 800f95a:	f7ff fe4b 	bl	800f5f4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f95e:	3c01      	subs	r4, #1
 800f960:	b118      	cbz	r0, 800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f962:	b2a1      	uxth	r1, r4
 800f964:	9801      	ldr	r0, [sp, #4]
 800f966:	f7ff ffbd 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f96a:	3d08      	subs	r5, #8
 800f96c:	e7f2      	b.n	800f954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800f96e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800f972:	f10a 33ff 	add.w	r3, sl, #4294967295
 800f976:	9302      	str	r3, [sp, #8]
 800f978:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800f97c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800f980:	f8cd a010 	str.w	sl, [sp, #16]
 800f984:	9306      	str	r3, [sp, #24]
 800f986:	445c      	add	r4, fp
 800f988:	2500      	movs	r5, #0
 800f98a:	4626      	mov	r6, r4
 800f98c:	462f      	mov	r7, r5
 800f98e:	f8cd a014 	str.w	sl, [sp, #20]
 800f992:	9b05      	ldr	r3, [sp, #20]
 800f994:	2b00      	cmp	r3, #0
 800f996:	d073      	beq.n	800fa80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800f998:	9903      	ldr	r1, [sp, #12]
 800f99a:	4630      	mov	r0, r6
 800f99c:	f7ff fdb8 	bl	800f510 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f9a0:	b350      	cbz	r0, 800f9f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800f9a2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800f9a6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800f9aa:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800f9ae:	45e6      	cmp	lr, ip
 800f9b0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800f9b4:	db33      	blt.n	800fa1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f9b6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800f9ba:	88b3      	ldrh	r3, [r6, #4]
 800f9bc:	4472      	add	r2, lr
 800f9be:	4463      	add	r3, ip
 800f9c0:	b212      	sxth	r2, r2
 800f9c2:	b21b      	sxth	r3, r3
 800f9c4:	429a      	cmp	r2, r3
 800f9c6:	dc2a      	bgt.n	800fa1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800f9c8:	88f3      	ldrh	r3, [r6, #6]
 800f9ca:	fa1f f289 	uxth.w	r2, r9
 800f9ce:	4413      	add	r3, r2
 800f9d0:	b29b      	uxth	r3, r3
 800f9d2:	45c8      	cmp	r8, r9
 800f9d4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800f9d8:	fa1f fc88 	uxth.w	ip, r8
 800f9dc:	fa0f fe83 	sxth.w	lr, r3
 800f9e0:	db0f      	blt.n	800fa02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800f9e2:	eba3 030c 	sub.w	r3, r3, ip
 800f9e6:	1ac9      	subs	r1, r1, r3
 800f9e8:	b209      	sxth	r1, r1
 800f9ea:	2900      	cmp	r1, #0
 800f9ec:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800f9f0:	dd12      	ble.n	800fa18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800f9f2:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800f9f6:	4605      	mov	r5, r0
 800f9f8:	9b05      	ldr	r3, [sp, #20]
 800f9fa:	3e08      	subs	r6, #8
 800f9fc:	3b01      	subs	r3, #1
 800f9fe:	9305      	str	r3, [sp, #20]
 800fa00:	e7c7      	b.n	800f992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800fa02:	4461      	add	r1, ip
 800fa04:	b209      	sxth	r1, r1
 800fa06:	4571      	cmp	r1, lr
 800fa08:	dc38      	bgt.n	800fa7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fa0a:	eba2 020c 	sub.w	r2, r2, ip
 800fa0e:	b212      	sxth	r2, r2
 800fa10:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800fa14:	2a00      	cmp	r2, #0
 800fa16:	dcee      	bgt.n	800f9f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fa18:	b00f      	add	sp, #60	@ 0x3c
 800fa1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa1e:	45c8      	cmp	r8, r9
 800fa20:	db2c      	blt.n	800fa7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fa22:	88f3      	ldrh	r3, [r6, #6]
 800fa24:	4499      	add	r9, r3
 800fa26:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800fa2a:	fa0f f989 	sxth.w	r9, r9
 800fa2e:	4498      	add	r8, r3
 800fa30:	fa0f f888 	sxth.w	r8, r8
 800fa34:	45c1      	cmp	r9, r8
 800fa36:	db21      	blt.n	800fa7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fa38:	88b3      	ldrh	r3, [r6, #4]
 800fa3a:	fa1f f28c 	uxth.w	r2, ip
 800fa3e:	4413      	add	r3, r2
 800fa40:	b29b      	uxth	r3, r3
 800fa42:	45e6      	cmp	lr, ip
 800fa44:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800fa48:	fa1f f88e 	uxth.w	r8, lr
 800fa4c:	fa0f f983 	sxth.w	r9, r3
 800fa50:	db0a      	blt.n	800fa68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800fa52:	eba3 0308 	sub.w	r3, r3, r8
 800fa56:	1ac9      	subs	r1, r1, r3
 800fa58:	b209      	sxth	r1, r1
 800fa5a:	2900      	cmp	r1, #0
 800fa5c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800fa60:	ddda      	ble.n	800fa18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800fa62:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fa66:	e7c6      	b.n	800f9f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fa68:	4441      	add	r1, r8
 800fa6a:	b209      	sxth	r1, r1
 800fa6c:	4549      	cmp	r1, r9
 800fa6e:	dc05      	bgt.n	800fa7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800fa70:	eba2 0208 	sub.w	r2, r2, r8
 800fa74:	b212      	sxth	r2, r2
 800fa76:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800fa7a:	e7cb      	b.n	800fa14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800fa7c:	4607      	mov	r7, r0
 800fa7e:	e7bb      	b.n	800f9f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800fa80:	2d00      	cmp	r5, #0
 800fa82:	d181      	bne.n	800f988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800fa84:	2f00      	cmp	r7, #0
 800fa86:	f000 81e0 	beq.w	800fe4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800fa8a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800fa8e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800fa92:	b2b3      	uxth	r3, r6
 800fa94:	9305      	str	r3, [sp, #20]
 800fa96:	9a05      	ldr	r2, [sp, #20]
 800fa98:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800fa9c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800faa0:	4413      	add	r3, r2
 800faa2:	b2ba      	uxth	r2, r7
 800faa4:	4492      	add	sl, r2
 800faa6:	b29b      	uxth	r3, r3
 800faa8:	fa1f fa8a 	uxth.w	sl, sl
 800faac:	fa0f f883 	sxth.w	r8, r3
 800fab0:	fa0f f98a 	sxth.w	r9, sl
 800fab4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800fab8:	9b04      	ldr	r3, [sp, #16]
 800faba:	2b00      	cmp	r3, #0
 800fabc:	d054      	beq.n	800fb68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800fabe:	9903      	ldr	r1, [sp, #12]
 800fac0:	4620      	mov	r0, r4
 800fac2:	f7ff fd25 	bl	800f510 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fac6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800faca:	b1c0      	cbz	r0, 800fafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800facc:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fad0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fad4:	4576      	cmp	r6, lr
 800fad6:	dc22      	bgt.n	800fb1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fad8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fadc:	44f4      	add	ip, lr
 800fade:	fa0f fc8c 	sxth.w	ip, ip
 800fae2:	45e0      	cmp	r8, ip
 800fae4:	db1b      	blt.n	800fb1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800fae6:	428f      	cmp	r7, r1
 800fae8:	fa1f fc81 	uxth.w	ip, r1
 800faec:	88e1      	ldrh	r1, [r4, #6]
 800faee:	dc0d      	bgt.n	800fb0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800faf0:	ebaa 0c0c 	sub.w	ip, sl, ip
 800faf4:	eba1 010c 	sub.w	r1, r1, ip
 800faf8:	f8a4 9002 	strh.w	r9, [r4, #2]
 800fafc:	80e1      	strh	r1, [r4, #6]
 800fafe:	4628      	mov	r0, r5
 800fb00:	9904      	ldr	r1, [sp, #16]
 800fb02:	3c08      	subs	r4, #8
 800fb04:	3901      	subs	r1, #1
 800fb06:	9104      	str	r1, [sp, #16]
 800fb08:	4605      	mov	r5, r0
 800fb0a:	e7d3      	b.n	800fab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800fb0c:	4461      	add	r1, ip
 800fb0e:	b209      	sxth	r1, r1
 800fb10:	4549      	cmp	r1, r9
 800fb12:	dcf5      	bgt.n	800fb00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fb14:	eba2 0c0c 	sub.w	ip, r2, ip
 800fb18:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fb1c:	e7ef      	b.n	800fafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fb1e:	428f      	cmp	r7, r1
 800fb20:	dcee      	bgt.n	800fb00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fb22:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fb26:	4461      	add	r1, ip
 800fb28:	b209      	sxth	r1, r1
 800fb2a:	4589      	cmp	r9, r1
 800fb2c:	dbe8      	blt.n	800fb00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fb2e:	4576      	cmp	r6, lr
 800fb30:	fa1f fc8e 	uxth.w	ip, lr
 800fb34:	88a1      	ldrh	r1, [r4, #4]
 800fb36:	dc07      	bgt.n	800fb48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800fb38:	eba3 0c0c 	sub.w	ip, r3, ip
 800fb3c:	eba1 010c 	sub.w	r1, r1, ip
 800fb40:	f8a4 8000 	strh.w	r8, [r4]
 800fb44:	80a1      	strh	r1, [r4, #4]
 800fb46:	e7da      	b.n	800fafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fb48:	4461      	add	r1, ip
 800fb4a:	b209      	sxth	r1, r1
 800fb4c:	4588      	cmp	r8, r1
 800fb4e:	dbd7      	blt.n	800fb00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fb50:	9905      	ldr	r1, [sp, #20]
 800fb52:	eba1 0c0c 	sub.w	ip, r1, ip
 800fb56:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fb5a:	e7d0      	b.n	800fafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800fb5c:	20002226 	.word	0x20002226
 800fb60:	20002224 	.word	0x20002224
 800fb64:	20002230 	.word	0x20002230
 800fb68:	2d00      	cmp	r5, #0
 800fb6a:	f000 816e 	beq.w	800fe4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800fb6e:	9b06      	ldr	r3, [sp, #24]
 800fb70:	445b      	add	r3, fp
 800fb72:	461c      	mov	r4, r3
 800fb74:	9b02      	ldr	r3, [sp, #8]
 800fb76:	3301      	adds	r3, #1
 800fb78:	f000 8167 	beq.w	800fe4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 800fb7c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800fb80:	4629      	mov	r1, r5
 800fb82:	9803      	ldr	r0, [sp, #12]
 800fb84:	f7ff fd36 	bl	800f5f4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fb88:	b120      	cbz	r0, 800fb94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800fb8a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800fb8e:	9801      	ldr	r0, [sp, #4]
 800fb90:	f7ff fea8 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fb94:	9903      	ldr	r1, [sp, #12]
 800fb96:	4628      	mov	r0, r5
 800fb98:	f7ff fcba 	bl	800f510 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fb9c:	2800      	cmp	r0, #0
 800fb9e:	f000 809c 	beq.w	800fcda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fba2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800fba6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800fbaa:	fa1f f189 	uxth.w	r1, r9
 800fbae:	eb01 0c03 	add.w	ip, r1, r3
 800fbb2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800fbb6:	fa1f fa8c 	uxth.w	sl, ip
 800fbba:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800fbbe:	9309      	str	r3, [sp, #36]	@ 0x24
 800fbc0:	b283      	uxth	r3, r0
 800fbc2:	eb03 050c 	add.w	r5, r3, ip
 800fbc6:	b2ad      	uxth	r5, r5
 800fbc8:	9505      	str	r5, [sp, #20]
 800fbca:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800fbce:	4548      	cmp	r0, r9
 800fbd0:	9504      	str	r5, [sp, #16]
 800fbd2:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800fbd6:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800fbda:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800fbde:	f340 8099 	ble.w	800fd14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800fbe2:	1a5b      	subs	r3, r3, r1
 800fbe4:	b29b      	uxth	r3, r3
 800fbe6:	4596      	cmp	lr, r2
 800fbe8:	fa0f f08a 	sxth.w	r0, sl
 800fbec:	b21e      	sxth	r6, r3
 800fbee:	dd2e      	ble.n	800fc4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800fbf0:	9f02      	ldr	r7, [sp, #8]
 800fbf2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800fbf6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800fbfa:	9f04      	ldr	r7, [sp, #16]
 800fbfc:	fa1f fe8e 	uxth.w	lr, lr
 800fc00:	1a3f      	subs	r7, r7, r0
 800fc02:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800fc06:	b292      	uxth	r2, r2
 800fc08:	ebae 0102 	sub.w	r1, lr, r2
 800fc0c:	44a6      	add	lr, r4
 800fc0e:	4402      	add	r2, r0
 800fc10:	b289      	uxth	r1, r1
 800fc12:	fa0f fe8e 	sxth.w	lr, lr
 800fc16:	b212      	sxth	r2, r2
 800fc18:	b20d      	sxth	r5, r1
 800fc1a:	ebae 0202 	sub.w	r2, lr, r2
 800fc1e:	436f      	muls	r7, r5
 800fc20:	4372      	muls	r2, r6
 800fc22:	4297      	cmp	r7, r2
 800fc24:	db09      	blt.n	800fc3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800fc26:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800fc2a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800fc2e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800fc32:	449c      	add	ip, r3
 800fc34:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fc38:	e684      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fc3a:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800fc3e:	4421      	add	r1, r4
 800fc40:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800fc44:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fc48:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fc4c:	e67a      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fc4e:	9f04      	ldr	r7, [sp, #16]
 800fc50:	42b8      	cmp	r0, r7
 800fc52:	da27      	bge.n	800fca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800fc54:	9902      	ldr	r1, [sp, #8]
 800fc56:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800fc5a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800fc5e:	eb05 010e 	add.w	r1, r5, lr
 800fc62:	fa1f f881 	uxth.w	r8, r1
 800fc66:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800fc6a:	fa0f f988 	sxth.w	r9, r8
 800fc6e:	4411      	add	r1, r2
 800fc70:	eba1 0108 	sub.w	r1, r1, r8
 800fc74:	b289      	uxth	r1, r1
 800fc76:	fa0f f881 	sxth.w	r8, r1
 800fc7a:	eba2 020e 	sub.w	r2, r2, lr
 800fc7e:	1a3f      	subs	r7, r7, r0
 800fc80:	4372      	muls	r2, r6
 800fc82:	fb08 f707 	mul.w	r7, r8, r7
 800fc86:	42ba      	cmp	r2, r7
 800fc88:	dc06      	bgt.n	800fc98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800fc8a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800fc8e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800fc92:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800fc96:	e7ca      	b.n	800fc2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800fc98:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800fc9c:	4429      	add	r1, r5
 800fc9e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fca2:	e64f      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fca4:	9805      	ldr	r0, [sp, #20]
 800fca6:	2d06      	cmp	r5, #6
 800fca8:	ebaa 0000 	sub.w	r0, sl, r0
 800fcac:	b280      	uxth	r0, r0
 800fcae:	fa0f fe80 	sxth.w	lr, r0
 800fcb2:	d817      	bhi.n	800fce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800fcb4:	9b04      	ldr	r3, [sp, #16]
 800fcb6:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800fcba:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fcbe:	1c6b      	adds	r3, r5, #1
 800fcc0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800fcc4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fcc8:	9b01      	ldr	r3, [sp, #4]
 800fcca:	9801      	ldr	r0, [sp, #4]
 800fccc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fcd0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fcd4:	805a      	strh	r2, [r3, #2]
 800fcd6:	809e      	strh	r6, [r3, #4]
 800fcd8:	80d9      	strh	r1, [r3, #6]
 800fcda:	9b02      	ldr	r3, [sp, #8]
 800fcdc:	3c08      	subs	r4, #8
 800fcde:	3b01      	subs	r3, #1
 800fce0:	9302      	str	r3, [sp, #8]
 800fce2:	e747      	b.n	800fb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800fce4:	9a02      	ldr	r2, [sp, #8]
 800fce6:	45b6      	cmp	lr, r6
 800fce8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fcec:	db0d      	blt.n	800fd0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800fcee:	449c      	add	ip, r3
 800fcf0:	fa1f fc8c 	uxth.w	ip, ip
 800fcf4:	445a      	add	r2, fp
 800fcf6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800fcfa:	448c      	add	ip, r1
 800fcfc:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800fd00:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800fd04:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800fd08:	e61c      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fd0a:	445a      	add	r2, fp
 800fd0c:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800fd10:	4484      	add	ip, r0
 800fd12:	e78f      	b.n	800fc34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fd14:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800fd18:	fa1f f18e 	uxth.w	r1, lr
 800fd1c:	eb01 0806 	add.w	r8, r1, r6
 800fd20:	b293      	uxth	r3, r2
 800fd22:	fa1f f888 	uxth.w	r8, r8
 800fd26:	9306      	str	r3, [sp, #24]
 800fd28:	fa0f f388 	sxth.w	r3, r8
 800fd2c:	9307      	str	r3, [sp, #28]
 800fd2e:	9f06      	ldr	r7, [sp, #24]
 800fd30:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fd34:	4596      	cmp	lr, r2
 800fd36:	443b      	add	r3, r7
 800fd38:	b29b      	uxth	r3, r3
 800fd3a:	9308      	str	r3, [sp, #32]
 800fd3c:	da24      	bge.n	800fd88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800fd3e:	9905      	ldr	r1, [sp, #20]
 800fd40:	eba3 0308 	sub.w	r3, r3, r8
 800fd44:	ebaa 0401 	sub.w	r4, sl, r1
 800fd48:	b2a4      	uxth	r4, r4
 800fd4a:	b29b      	uxth	r3, r3
 800fd4c:	b225      	sxth	r5, r4
 800fd4e:	b219      	sxth	r1, r3
 800fd50:	eba2 020e 	sub.w	r2, r2, lr
 800fd54:	eba9 0000 	sub.w	r0, r9, r0
 800fd58:	436a      	muls	r2, r5
 800fd5a:	4348      	muls	r0, r1
 800fd5c:	4282      	cmp	r2, r0
 800fd5e:	9a02      	ldr	r2, [sp, #8]
 800fd60:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800fd64:	445a      	add	r2, fp
 800fd66:	dc06      	bgt.n	800fd76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800fd68:	9b07      	ldr	r3, [sp, #28]
 800fd6a:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800fd6e:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800fd72:	44a4      	add	ip, r4
 800fd74:	e75e      	b.n	800fc34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fd76:	9904      	ldr	r1, [sp, #16]
 800fd78:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800fd7c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800fd80:	4433      	add	r3, r6
 800fd82:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fd86:	e5dd      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fd88:	9f06      	ldr	r7, [sp, #24]
 800fd8a:	9b04      	ldr	r3, [sp, #16]
 800fd8c:	1bc9      	subs	r1, r1, r7
 800fd8e:	fa0f f78a 	sxth.w	r7, sl
 800fd92:	b289      	uxth	r1, r1
 800fd94:	429f      	cmp	r7, r3
 800fd96:	fa0f fe81 	sxth.w	lr, r1
 800fd9a:	dd24      	ble.n	800fde6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4da>
 800fd9c:	9a05      	ldr	r2, [sp, #20]
 800fd9e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fda2:	ebaa 0202 	sub.w	r2, sl, r2
 800fda6:	9d07      	ldr	r5, [sp, #28]
 800fda8:	b292      	uxth	r2, r2
 800fdaa:	eba5 0a03 	sub.w	sl, r5, r3
 800fdae:	b214      	sxth	r4, r2
 800fdb0:	eba9 0000 	sub.w	r0, r9, r0
 800fdb4:	fb0e f000 	mul.w	r0, lr, r0
 800fdb8:	fb04 fa0a 	mul.w	sl, r4, sl
 800fdbc:	9b02      	ldr	r3, [sp, #8]
 800fdbe:	4550      	cmp	r0, sl
 800fdc0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800fdc4:	445b      	add	r3, fp
 800fdc6:	db03      	blt.n	800fdd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c4>
 800fdc8:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800fdcc:	4494      	add	ip, r2
 800fdce:	e731      	b.n	800fc34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800fdd0:	9a04      	ldr	r2, [sp, #16]
 800fdd2:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800fdd6:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800fdda:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800fdde:	4431      	add	r1, r6
 800fde0:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800fde4:	e75b      	b.n	800fc9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800fde6:	9b08      	ldr	r3, [sp, #32]
 800fde8:	2d06      	cmp	r5, #6
 800fdea:	eba3 0308 	sub.w	r3, r3, r8
 800fdee:	b29b      	uxth	r3, r3
 800fdf0:	b218      	sxth	r0, r3
 800fdf2:	d813      	bhi.n	800fe1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x510>
 800fdf4:	9b07      	ldr	r3, [sp, #28]
 800fdf6:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800fdfa:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800fdfe:	1c6b      	adds	r3, r5, #1
 800fe00:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800fe04:	9b01      	ldr	r3, [sp, #4]
 800fe06:	9901      	ldr	r1, [sp, #4]
 800fe08:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fe0c:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800fe10:	805a      	strh	r2, [r3, #2]
 800fe12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800fe14:	f8a3 e006 	strh.w	lr, [r3, #6]
 800fe18:	809a      	strh	r2, [r3, #4]
 800fe1a:	e75e      	b.n	800fcda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800fe1c:	9c02      	ldr	r4, [sp, #8]
 800fe1e:	4570      	cmp	r0, lr
 800fe20:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800fe24:	db0d      	blt.n	800fe42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800fe26:	4431      	add	r1, r6
 800fe28:	9b06      	ldr	r3, [sp, #24]
 800fe2a:	b289      	uxth	r1, r1
 800fe2c:	445c      	add	r4, fp
 800fe2e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800fe32:	4419      	add	r1, r3
 800fe34:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800fe38:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800fe3c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800fe40:	e580      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800fe42:	445c      	add	r4, fp
 800fe44:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800fe48:	e79a      	b.n	800fd80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800fe4a:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800fe4e:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800fe52:	1e65      	subs	r5, r4, #1
 800fe54:	b2ad      	uxth	r5, r5
 800fe56:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800fe5a:	42b5      	cmp	r5, r6
 800fe5c:	d044      	beq.n	800fee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5dc>
 800fe5e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800fe62:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800fe66:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800fe6a:	4282      	cmp	r2, r0
 800fe6c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800fe70:	d11f      	bne.n	800feb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a6>
 800fe72:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800fe76:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800fe7a:	459c      	cmp	ip, r3
 800fe7c:	d119      	bne.n	800feb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a6>
 800fe7e:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800fe82:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800fe86:	19d8      	adds	r0, r3, r7
 800fe88:	b200      	sxth	r0, r0
 800fe8a:	4288      	cmp	r0, r1
 800fe8c:	d109      	bne.n	800fea2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 800fe8e:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800fe92:	4413      	add	r3, r2
 800fe94:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800fe98:	4629      	mov	r1, r5
 800fe9a:	9801      	ldr	r0, [sp, #4]
 800fe9c:	f7ff fd22 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fea0:	e003      	b.n	800feaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 800fea2:	4411      	add	r1, r2
 800fea4:	b209      	sxth	r1, r1
 800fea6:	42b9      	cmp	r1, r7
 800fea8:	d0f3      	beq.n	800fe92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800feaa:	3d01      	subs	r5, #1
 800feac:	b2ad      	uxth	r5, r5
 800feae:	3c08      	subs	r4, #8
 800feb0:	e7d3      	b.n	800fe5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800feb2:	42b9      	cmp	r1, r7
 800feb4:	d1f9      	bne.n	800feaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 800feb6:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800feba:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800febe:	4299      	cmp	r1, r3
 800fec0:	d1f3      	bne.n	800feaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 800fec2:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800fec6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800feca:	181f      	adds	r7, r3, r0
 800fecc:	b23f      	sxth	r7, r7
 800fece:	42ba      	cmp	r2, r7
 800fed0:	d105      	bne.n	800fede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d2>
 800fed2:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800fed6:	440b      	add	r3, r1
 800fed8:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800fedc:	e7dc      	b.n	800fe98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 800fede:	440a      	add	r2, r1
 800fee0:	b212      	sxth	r2, r2
 800fee2:	4290      	cmp	r0, r2
 800fee4:	d1e1      	bne.n	800feaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 800fee6:	e7f6      	b.n	800fed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800fee8:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800feec:	2e07      	cmp	r6, #7
 800feee:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800fef2:	d812      	bhi.n	800ff1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>
 800fef4:	1c75      	adds	r5, r6, #1
 800fef6:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800fefa:	9d01      	ldr	r5, [sp, #4]
 800fefc:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800ff00:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800ff04:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800ff08:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800ff0c:	442c      	add	r4, r5
 800ff0e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800ff12:	8061      	strh	r1, [r4, #2]
 800ff14:	80a2      	strh	r2, [r4, #4]
 800ff16:	80e3      	strh	r3, [r4, #6]
 800ff18:	e57e      	b.n	800fa18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800ff1a:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800ff1e:	f04f 37ff 	mov.w	r7, #4294967295
 800ff22:	2500      	movs	r5, #0
 800ff24:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800ff28:	3e01      	subs	r6, #1
 800ff2a:	445c      	add	r4, fp
 800ff2c:	9305      	str	r3, [sp, #20]
 800ff2e:	1e72      	subs	r2, r6, #1
 800ff30:	4691      	mov	r9, r2
 800ff32:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ff36:	9302      	str	r3, [sp, #8]
 800ff38:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ff3c:	9304      	str	r3, [sp, #16]
 800ff3e:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800ff42:	f1b9 3fff 	cmp.w	r9, #4294967295
 800ff46:	bf16      	itet	ne
 800ff48:	9905      	ldrne	r1, [sp, #20]
 800ff4a:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800ff4e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800ff52:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800ff56:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800ff5a:	6818      	ldr	r0, [r3, #0]
 800ff5c:	fb18 f801 	smulbb	r8, r8, r1
 800ff60:	6859      	ldr	r1, [r3, #4]
 800ff62:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ff66:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ff6a:	4671      	mov	r1, lr
 800ff6c:	a80c      	add	r0, sp, #48	@ 0x30
 800ff6e:	9207      	str	r2, [sp, #28]
 800ff70:	9306      	str	r3, [sp, #24]
 800ff72:	f7ff fb65 	bl	800f640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ff76:	f04f 0c08 	mov.w	ip, #8
 800ff7a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800ff7e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800ff82:	9b04      	ldr	r3, [sp, #16]
 800ff84:	9a02      	ldr	r2, [sp, #8]
 800ff86:	fb10 f001 	smulbb	r0, r0, r1
 800ff8a:	fb02 8803 	mla	r8, r2, r3, r8
 800ff8e:	eba0 0108 	sub.w	r1, r0, r8
 800ff92:	fb90 f0fc 	sdiv	r0, r0, ip
 800ff96:	4288      	cmp	r0, r1
 800ff98:	dc20      	bgt.n	800ffdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800ff9a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ff9e:	4551      	cmp	r1, sl
 800ffa0:	da03      	bge.n	800ffaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 800ffa2:	b1d9      	cbz	r1, 800ffdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800ffa4:	468a      	mov	sl, r1
 800ffa6:	464f      	mov	r7, r9
 800ffa8:	4635      	mov	r5, r6
 800ffaa:	f109 39ff 	add.w	r9, r9, #4294967295
 800ffae:	f119 0f02 	cmn.w	r9, #2
 800ffb2:	d1c6      	bne.n	800ff42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 800ffb4:	4616      	mov	r6, r2
 800ffb6:	3201      	adds	r2, #1
 800ffb8:	f1a4 0408 	sub.w	r4, r4, #8
 800ffbc:	d1b7      	bne.n	800ff2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 800ffbe:	9b01      	ldr	r3, [sp, #4]
 800ffc0:	b2ac      	uxth	r4, r5
 800ffc2:	00ed      	lsls	r5, r5, #3
 800ffc4:	1958      	adds	r0, r3, r5
 800ffc6:	1c7b      	adds	r3, r7, #1
 800ffc8:	d10b      	bne.n	800ffe2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 800ffca:	4601      	mov	r1, r0
 800ffcc:	9803      	ldr	r0, [sp, #12]
 800ffce:	f7ff fb37 	bl	800f640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ffd2:	4621      	mov	r1, r4
 800ffd4:	9801      	ldr	r0, [sp, #4]
 800ffd6:	f7ff fc85 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ffda:	e4b3      	b.n	800f944 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ffdc:	464f      	mov	r7, r9
 800ffde:	4635      	mov	r5, r6
 800ffe0:	e7ed      	b.n	800ffbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 800ffe2:	9b01      	ldr	r3, [sp, #4]
 800ffe4:	00ff      	lsls	r7, r7, #3
 800ffe6:	19d9      	adds	r1, r3, r7
 800ffe8:	f7ff fb2a 	bl	800f640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ffec:	9b03      	ldr	r3, [sp, #12]
 800ffee:	445f      	add	r7, fp
 800fff0:	cb03      	ldmia	r3!, {r0, r1}
 800fff2:	445d      	add	r5, fp
 800fff4:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800fff8:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800fffc:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010000:	9b03      	ldr	r3, [sp, #12]
 8010002:	6869      	ldr	r1, [r5, #4]
 8010004:	c303      	stmia	r3!, {r0, r1}
 8010006:	e7e4      	b.n	800ffd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

08010008 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801000c:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010010:	b0a1      	sub	sp, #132	@ 0x84
 8010012:	4604      	mov	r4, r0
 8010014:	4630      	mov	r0, r6
 8010016:	f7fc fa58 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 801001a:	4605      	mov	r5, r0
 801001c:	b948      	cbnz	r0, 8010032 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801001e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010022:	6823      	ldr	r3, [r4, #0]
 8010024:	4620      	mov	r0, r4
 8010026:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010028:	4798      	blx	r3
 801002a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801002e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8010032:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010036:	2b00      	cmp	r3, #0
 8010038:	d149      	bne.n	80100ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 801003a:	4bb2      	ldr	r3, [pc, #712]	@ (8010304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 801003c:	681b      	ldr	r3, [r3, #0]
 801003e:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 8010042:	1ebb      	subs	r3, r7, #2
 8010044:	425f      	negs	r7, r3
 8010046:	415f      	adcs	r7, r3
 8010048:	4baf      	ldr	r3, [pc, #700]	@ (8010308 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 801004a:	681b      	ldr	r3, [r3, #0]
 801004c:	2b00      	cmp	r3, #0
 801004e:	d040      	beq.n	80100d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010050:	4dae      	ldr	r5, [pc, #696]	@ (801030c <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8010052:	4628      	mov	r0, r5
 8010054:	f7fc fa39 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8010058:	4606      	mov	r6, r0
 801005a:	2800      	cmp	r0, #0
 801005c:	d139      	bne.n	80100d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 801005e:	4628      	mov	r0, r5
 8010060:	f7ff f98c 	bl	800f37c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010064:	6823      	ldr	r3, [r4, #0]
 8010066:	6829      	ldr	r1, [r5, #0]
 8010068:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801006a:	686a      	ldr	r2, [r5, #4]
 801006c:	4620      	mov	r0, r4
 801006e:	4798      	blx	r3
 8010070:	802e      	strh	r6, [r5, #0]
 8010072:	806e      	strh	r6, [r5, #2]
 8010074:	80ae      	strh	r6, [r5, #4]
 8010076:	80ee      	strh	r6, [r5, #6]
 8010078:	af0f      	add	r7, sp, #60	@ 0x3c
 801007a:	4ea5      	ldr	r6, [pc, #660]	@ (8010310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 801007c:	4638      	mov	r0, r7
 801007e:	f7ff fbd9 	bl	800f834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010082:	8835      	ldrh	r5, [r6, #0]
 8010084:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 8010088:	462b      	mov	r3, r5
 801008a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801008e:	4563      	cmp	r3, ip
 8010090:	d224      	bcs.n	80100dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010092:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8010096:	2907      	cmp	r1, #7
 8010098:	d816      	bhi.n	80100c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801009a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801009e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80100a2:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 80100a6:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 80100aa:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80100ae:	1c4a      	adds	r2, r1, #1
 80100b0:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 80100b4:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 80100b8:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 80100bc:	f8a2 a002 	strh.w	sl, [r2, #2]
 80100c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80100c4:	f8a2 e006 	strh.w	lr, [r2, #6]
 80100c8:	3301      	adds	r3, #1
 80100ca:	b29b      	uxth	r3, r3
 80100cc:	e7df      	b.n	801008e <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 80100ce:	2701      	movs	r7, #1
 80100d0:	e7ba      	b.n	8010048 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 80100d2:	2f00      	cmp	r7, #0
 80100d4:	d1d0      	bne.n	8010078 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 80100d6:	b021      	add	sp, #132	@ 0x84
 80100d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100dc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 80100e0:	42ab      	cmp	r3, r5
 80100e2:	d90c      	bls.n	80100fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 80100e4:	6822      	ldr	r2, [r4, #0]
 80100e6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80100ea:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 80100ec:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 80100f0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 80100f4:	4620      	mov	r0, r4
 80100f6:	3501      	adds	r5, #1
 80100f8:	47b8      	blx	r7
 80100fa:	b2ad      	uxth	r5, r5
 80100fc:	e7ee      	b.n	80100dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 80100fe:	4d81      	ldr	r5, [pc, #516]	@ (8010304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8010100:	6828      	ldr	r0, [r5, #0]
 8010102:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8010106:	2b01      	cmp	r3, #1
 8010108:	f040 813d 	bne.w	8010386 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
 801010c:	4a81      	ldr	r2, [pc, #516]	@ (8010314 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 801010e:	8833      	ldrh	r3, [r6, #0]
 8010110:	7812      	ldrb	r2, [r2, #0]
 8010112:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 8010116:	2a01      	cmp	r2, #1
 8010118:	d014      	beq.n	8010144 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801011a:	f04f 0900 	mov.w	r9, #0
 801011e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8010122:	32ae      	adds	r2, #174	@ 0xae
 8010124:	4283      	cmp	r3, r0
 8010126:	f102 0208 	add.w	r2, r2, #8
 801012a:	f280 8083 	bge.w	8010234 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801012e:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 8010132:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 8010136:	3301      	adds	r3, #1
 8010138:	4439      	add	r1, r7
 801013a:	b209      	sxth	r1, r1
 801013c:	4589      	cmp	r9, r1
 801013e:	bfb8      	it	lt
 8010140:	4689      	movlt	r9, r1
 8010142:	e7ef      	b.n	8010124 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8010144:	4f74      	ldr	r7, [pc, #464]	@ (8010318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010146:	883a      	ldrh	r2, [r7, #0]
 8010148:	4693      	mov	fp, r2
 801014a:	4283      	cmp	r3, r0
 801014c:	da08      	bge.n	8010160 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 801014e:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 8010152:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8010156:	3301      	adds	r3, #1
 8010158:	458b      	cmp	fp, r1
 801015a:	bfa8      	it	ge
 801015c:	468b      	movge	fp, r1
 801015e:	e7f4      	b.n	801014a <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8010160:	2300      	movs	r3, #0
 8010162:	2a0f      	cmp	r2, #15
 8010164:	bf98      	it	ls
 8010166:	f04f 0801 	movls.w	r8, #1
 801016a:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 801031c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 801016e:	bf88      	it	hi
 8010170:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 8010174:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010178:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801017c:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8010180:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010184:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8010188:	6828      	ldr	r0, [r5, #0]
 801018a:	455b      	cmp	r3, fp
 801018c:	f340 80c8 	ble.w	8010320 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010190:	6803      	ldr	r3, [r0, #0]
 8010192:	f8b7 a000 	ldrh.w	sl, [r7]
 8010196:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 801019a:	4798      	blx	r3
 801019c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80101a0:	ebaa 0000 	sub.w	r0, sl, r0
 80101a4:	682b      	ldr	r3, [r5, #0]
 80101a6:	b280      	uxth	r0, r0
 80101a8:	ebac 0e08 	sub.w	lr, ip, r8
 80101ac:	4570      	cmp	r0, lr
 80101ae:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 80101b2:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 80101b6:	dd05      	ble.n	80101c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
 80101b8:	4558      	cmp	r0, fp
 80101ba:	dd03      	ble.n	80101c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
 80101bc:	b901      	cbnz	r1, 80101c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 80101be:	b392      	cbz	r2, 8010226 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
 80101c0:	4658      	mov	r0, fp
 80101c2:	e006      	b.n	80101d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
 80101c4:	2900      	cmp	r1, #0
 80101c6:	d1fb      	bne.n	80101c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 80101c8:	2a00      	cmp	r2, #0
 80101ca:	d1f9      	bne.n	80101c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 80101cc:	4558      	cmp	r0, fp
 80101ce:	bfb8      	it	lt
 80101d0:	4658      	movlt	r0, fp
 80101d2:	2200      	movs	r2, #0
 80101d4:	f9b9 3000 	ldrsh.w	r3, [r9]
 80101d8:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 80101dc:	f8b6 a000 	ldrh.w	sl, [r6]
 80101e0:	ebac 0000 	sub.w	r0, ip, r0
 80101e4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80101e8:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80101ec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80101f0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80101f4:	4553      	cmp	r3, sl
 80101f6:	ddc5      	ble.n	8010184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80101f8:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80101fc:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010200:	ab0d      	add	r3, sp, #52	@ 0x34
 8010202:	6851      	ldr	r1, [r2, #4]
 8010204:	c303      	stmia	r3!, {r0, r1}
 8010206:	a80d      	add	r0, sp, #52	@ 0x34
 8010208:	a90b      	add	r1, sp, #44	@ 0x2c
 801020a:	f7fc f91b 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 801020e:	a80d      	add	r0, sp, #52	@ 0x34
 8010210:	f7fc f95b 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8010214:	b920      	cbnz	r0, 8010220 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
 8010216:	6823      	ldr	r3, [r4, #0]
 8010218:	a90d      	add	r1, sp, #52	@ 0x34
 801021a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801021c:	4620      	mov	r0, r4
 801021e:	4798      	blx	r3
 8010220:	f10a 0a01 	add.w	sl, sl, #1
 8010224:	e7e4      	b.n	80101f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
 8010226:	681a      	ldr	r2, [r3, #0]
 8010228:	2101      	movs	r1, #1
 801022a:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 801022e:	4618      	mov	r0, r3
 8010230:	4790      	blx	r2
 8010232:	e7a7      	b.n	8010184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8010234:	4b39      	ldr	r3, [pc, #228]	@ (801031c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
 8010236:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 8010318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 801023a:	881f      	ldrh	r7, [r3, #0]
 801023c:	2300      	movs	r3, #0
 801023e:	2f0f      	cmp	r7, #15
 8010240:	bf98      	it	ls
 8010242:	2701      	movls	r7, #1
 8010244:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010248:	bf88      	it	hi
 801024a:	08ff      	lsrhi	r7, r7, #3
 801024c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010250:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010254:	6828      	ldr	r0, [r5, #0]
 8010256:	4413      	add	r3, r2
 8010258:	b21b      	sxth	r3, r3
 801025a:	454b      	cmp	r3, r9
 801025c:	da60      	bge.n	8010320 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801025e:	6803      	ldr	r3, [r0, #0]
 8010260:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010264:	4798      	blx	r3
 8010266:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 801026a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801026e:	682a      	ldr	r2, [r5, #0]
 8010270:	4473      	add	r3, lr
 8010272:	b21b      	sxth	r3, r3
 8010274:	eb03 0e07 	add.w	lr, r3, r7
 8010278:	4570      	cmp	r0, lr
 801027a:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 801027e:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8010282:	da0d      	bge.n	80102a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x298>
 8010284:	4548      	cmp	r0, r9
 8010286:	da0b      	bge.n	80102a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x298>
 8010288:	f1bc 0f00 	cmp.w	ip, #0
 801028c:	d138      	bne.n	8010300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 801028e:	2900      	cmp	r1, #0
 8010290:	d136      	bne.n	8010300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 8010292:	6813      	ldr	r3, [r2, #0]
 8010294:	2101      	movs	r1, #1
 8010296:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 801029a:	4610      	mov	r0, r2
 801029c:	4798      	blx	r3
 801029e:	e7d5      	b.n	801024c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80102a0:	f1bc 0f00 	cmp.w	ip, #0
 80102a4:	d12c      	bne.n	8010300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 80102a6:	bb59      	cbnz	r1, 8010300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 80102a8:	4548      	cmp	r0, r9
 80102aa:	bfa8      	it	ge
 80102ac:	4648      	movge	r0, r9
 80102ae:	2100      	movs	r1, #0
 80102b0:	f9b8 2000 	ldrsh.w	r2, [r8]
 80102b4:	1ac0      	subs	r0, r0, r3
 80102b6:	f8b6 a000 	ldrh.w	sl, [r6]
 80102ba:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80102be:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80102c2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80102c6:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 80102ca:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80102ce:	4553      	cmp	r3, sl
 80102d0:	ddbc      	ble.n	801024c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80102d2:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 80102d6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80102da:	ab0d      	add	r3, sp, #52	@ 0x34
 80102dc:	6851      	ldr	r1, [r2, #4]
 80102de:	c303      	stmia	r3!, {r0, r1}
 80102e0:	a80d      	add	r0, sp, #52	@ 0x34
 80102e2:	a90b      	add	r1, sp, #44	@ 0x2c
 80102e4:	f7fc f8ae 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 80102e8:	a80d      	add	r0, sp, #52	@ 0x34
 80102ea:	f7fc f8ee 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 80102ee:	b920      	cbnz	r0, 80102fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
 80102f0:	6823      	ldr	r3, [r4, #0]
 80102f2:	a90d      	add	r1, sp, #52	@ 0x34
 80102f4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80102f6:	4620      	mov	r0, r4
 80102f8:	4798      	blx	r3
 80102fa:	f10a 0a01 	add.w	sl, sl, #1
 80102fe:	e7e4      	b.n	80102ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 8010300:	4648      	mov	r0, r9
 8010302:	e7d4      	b.n	80102ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a6>
 8010304:	20002230 	.word	0x20002230
 8010308:	20002268 	.word	0x20002268
 801030c:	20002274 	.word	0x20002274
 8010310:	20000014 	.word	0x20000014
 8010314:	20002228 	.word	0x20002228
 8010318:	20002224 	.word	0x20002224
 801031c:	20002226 	.word	0x20002226
 8010320:	6828      	ldr	r0, [r5, #0]
 8010322:	6803      	ldr	r3, [r0, #0]
 8010324:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010326:	4798      	blx	r3
 8010328:	4ba4      	ldr	r3, [pc, #656]	@ (80105bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 801032a:	781b      	ldrb	r3, [r3, #0]
 801032c:	2b00      	cmp	r3, #0
 801032e:	f43f aed2 	beq.w	80100d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010332:	2300      	movs	r3, #0
 8010334:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010338:	4ba1      	ldr	r3, [pc, #644]	@ (80105c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 801033a:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 801033e:	881b      	ldrh	r3, [r3, #0]
 8010340:	a80f      	add	r0, sp, #60	@ 0x3c
 8010342:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010346:	42b3      	cmp	r3, r6
 8010348:	f4bf aec5 	bcs.w	80100d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 801034c:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010350:	2907      	cmp	r1, #7
 8010352:	d815      	bhi.n	8010380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
 8010354:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010358:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801035c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010360:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010364:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010368:	1c4a      	adds	r2, r1, #1
 801036a:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 801036e:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8010372:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8010376:	f8a2 e002 	strh.w	lr, [r2, #2]
 801037a:	f8a2 c004 	strh.w	ip, [r2, #4]
 801037e:	80d7      	strh	r7, [r2, #6]
 8010380:	3301      	adds	r3, #1
 8010382:	b29b      	uxth	r3, r3
 8010384:	e7df      	b.n	8010346 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
 8010386:	2b02      	cmp	r3, #2
 8010388:	f040 80cf 	bne.w	801052a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801038c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010390:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010394:	9308      	str	r3, [sp, #32]
 8010396:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 801039a:	f10b 37ff 	add.w	r7, fp, #4294967295
 801039e:	9307      	str	r3, [sp, #28]
 80103a0:	6803      	ldr	r3, [r0, #0]
 80103a2:	b2bf      	uxth	r7, r7
 80103a4:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80103a8:	4798      	blx	r3
 80103aa:	4b86      	ldr	r3, [pc, #536]	@ (80105c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 80103ac:	4682      	mov	sl, r0
 80103ae:	881b      	ldrh	r3, [r3, #0]
 80103b0:	2000      	movs	r0, #0
 80103b2:	9302      	str	r3, [sp, #8]
 80103b4:	4b84      	ldr	r3, [pc, #528]	@ (80105c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 80103b6:	fa0f f887 	sxth.w	r8, r7
 80103ba:	881e      	ldrh	r6, [r3, #0]
 80103bc:	4b83      	ldr	r3, [pc, #524]	@ (80105cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80103be:	781b      	ldrb	r3, [r3, #0]
 80103c0:	2b01      	cmp	r3, #1
 80103c2:	bf1e      	ittt	ne
 80103c4:	9b02      	ldrne	r3, [sp, #8]
 80103c6:	9602      	strne	r6, [sp, #8]
 80103c8:	461e      	movne	r6, r3
 80103ca:	f7f9 fe3d 	bl	800a048 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80103ce:	fb96 fbfb 	sdiv	fp, r6, fp
 80103d2:	fb0b f808 	mul.w	r8, fp, r8
 80103d6:	45c2      	cmp	sl, r8
 80103d8:	da0c      	bge.n	80103f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 80103da:	6828      	ldr	r0, [r5, #0]
 80103dc:	210a      	movs	r1, #10
 80103de:	6803      	ldr	r3, [r0, #0]
 80103e0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80103e4:	4798      	blx	r3
 80103e6:	6828      	ldr	r0, [r5, #0]
 80103e8:	6803      	ldr	r3, [r0, #0]
 80103ea:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80103ee:	4798      	blx	r3
 80103f0:	4682      	mov	sl, r0
 80103f2:	e7f0      	b.n	80103d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 80103f4:	f04f 0800 	mov.w	r8, #0
 80103f8:	4645      	mov	r5, r8
 80103fa:	2000      	movs	r0, #0
 80103fc:	f7f9 fe40 	bl	800a080 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010400:	fa1f f38b 	uxth.w	r3, fp
 8010404:	fb17 f703 	smulbb	r7, r7, r3
 8010408:	9304      	str	r3, [sp, #16]
 801040a:	b2bb      	uxth	r3, r7
 801040c:	9305      	str	r3, [sp, #20]
 801040e:	4f70      	ldr	r7, [pc, #448]	@ (80105d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010410:	0973      	lsrs	r3, r6, #5
 8010412:	9306      	str	r3, [sp, #24]
 8010414:	42b5      	cmp	r5, r6
 8010416:	d087      	beq.n	8010328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010418:	6838      	ldr	r0, [r7, #0]
 801041a:	6803      	ldr	r3, [r0, #0]
 801041c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010420:	4798      	blx	r3
 8010422:	4582      	cmp	sl, r0
 8010424:	4681      	mov	r9, r0
 8010426:	d907      	bls.n	8010438 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010428:	f1b8 0f00 	cmp.w	r8, #0
 801042c:	d007      	beq.n	801043e <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 801042e:	6838      	ldr	r0, [r7, #0]
 8010430:	6803      	ldr	r3, [r0, #0]
 8010432:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8010436:	e776      	b.n	8010326 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8010438:	f1b8 0f00 	cmp.w	r8, #0
 801043c:	d003      	beq.n	8010446 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 801043e:	454d      	cmp	r5, r9
 8010440:	d3f5      	bcc.n	801042e <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010442:	f04f 0801 	mov.w	r8, #1
 8010446:	fb95 f3fb 	sdiv	r3, r5, fp
 801044a:	9a04      	ldr	r2, [sp, #16]
 801044c:	9303      	str	r3, [sp, #12]
 801044e:	3301      	adds	r3, #1
 8010450:	fb13 f302 	smulbb	r3, r3, r2
 8010454:	b299      	uxth	r1, r3
 8010456:	f1b8 0f00 	cmp.w	r8, #0
 801045a:	d04e      	beq.n	80104fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 801045c:	eb09 030b 	add.w	r3, r9, fp
 8010460:	42b3      	cmp	r3, r6
 8010462:	bfa8      	it	ge
 8010464:	4633      	movge	r3, r6
 8010466:	b29b      	uxth	r3, r3
 8010468:	428b      	cmp	r3, r1
 801046a:	bf94      	ite	ls
 801046c:	ebc5 0203 	rsbls	r2, r5, r3
 8010470:	ebc5 0201 	rsbhi	r2, r5, r1
 8010474:	9807      	ldr	r0, [sp, #28]
 8010476:	4282      	cmp	r2, r0
 8010478:	bfa8      	it	ge
 801047a:	4602      	movge	r2, r0
 801047c:	9808      	ldr	r0, [sp, #32]
 801047e:	fa1f fa82 	uxth.w	sl, r2
 8010482:	4582      	cmp	sl, r0
 8010484:	d205      	bcs.n	8010492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010486:	fa15 f082 	uxtah	r0, r5, r2
 801048a:	4286      	cmp	r6, r0
 801048c:	d001      	beq.n	8010492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 801048e:	4299      	cmp	r1, r3
 8010490:	d240      	bcs.n	8010514 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8010492:	2001      	movs	r0, #1
 8010494:	9209      	str	r2, [sp, #36]	@ 0x24
 8010496:	f7f9 fdd7 	bl	800a048 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801049a:	6838      	ldr	r0, [r7, #0]
 801049c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80104a0:	6803      	ldr	r3, [r0, #0]
 80104a2:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80104a6:	4798      	blx	r3
 80104a8:	4b48      	ldr	r3, [pc, #288]	@ (80105cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 80104aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80104ac:	781b      	ldrb	r3, [r3, #0]
 80104ae:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80104b2:	2b01      	cmp	r3, #1
 80104b4:	b212      	sxth	r2, r2
 80104b6:	f04f 0000 	mov.w	r0, #0
 80104ba:	d122      	bne.n	8010502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 80104bc:	1b73      	subs	r3, r6, r5
 80104be:	eba3 030a 	sub.w	r3, r3, sl
 80104c2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80104c6:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 80104ca:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80104ce:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 80104d2:	6823      	ldr	r3, [r4, #0]
 80104d4:	a90d      	add	r1, sp, #52	@ 0x34
 80104d6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80104d8:	4620      	mov	r0, r4
 80104da:	4798      	blx	r3
 80104dc:	6838      	ldr	r0, [r7, #0]
 80104de:	9b03      	ldr	r3, [sp, #12]
 80104e0:	4455      	add	r5, sl
 80104e2:	4259      	negs	r1, r3
 80104e4:	6803      	ldr	r3, [r0, #0]
 80104e6:	b209      	sxth	r1, r1
 80104e8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80104ec:	4798      	blx	r3
 80104ee:	2001      	movs	r0, #1
 80104f0:	b2ad      	uxth	r5, r5
 80104f2:	f7f9 fdc5 	bl	800a080 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80104f6:	46ca      	mov	sl, r9
 80104f8:	e78c      	b.n	8010414 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 80104fa:	9b05      	ldr	r3, [sp, #20]
 80104fc:	eba9 0303 	sub.w	r3, r9, r3
 8010500:	e7b1      	b.n	8010466 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010502:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010506:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 801050a:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 801050e:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010512:	e7de      	b.n	80104d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010514:	6838      	ldr	r0, [r7, #0]
 8010516:	6803      	ldr	r3, [r0, #0]
 8010518:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801051a:	4798      	blx	r3
 801051c:	6838      	ldr	r0, [r7, #0]
 801051e:	9906      	ldr	r1, [sp, #24]
 8010520:	6803      	ldr	r3, [r0, #0]
 8010522:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010526:	4798      	blx	r3
 8010528:	e7e5      	b.n	80104f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 801052a:	2b03      	cmp	r3, #3
 801052c:	f040 8130 	bne.w	8010790 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010530:	4b26      	ldr	r3, [pc, #152]	@ (80105cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010532:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8010536:	781b      	ldrb	r3, [r3, #0]
 8010538:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801053c:	2b01      	cmp	r3, #1
 801053e:	f000 8093 	beq.w	8010668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010542:	8832      	ldrh	r2, [r6, #0]
 8010544:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010548:	3201      	adds	r2, #1
 801054a:	b292      	uxth	r2, r2
 801054c:	2900      	cmp	r1, #0
 801054e:	f43f aeeb 	beq.w	8010328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010552:	4694      	mov	ip, r2
 8010554:	f04f 0800 	mov.w	r8, #0
 8010558:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 801055c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8010560:	441d      	add	r5, r3
 8010562:	b22d      	sxth	r5, r5
 8010564:	fa1f f38c 	uxth.w	r3, ip
 8010568:	4299      	cmp	r1, r3
 801056a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801056e:	f240 80ba 	bls.w	80106e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8010572:	4427      	add	r7, r4
 8010574:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010578:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801057c:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010580:	4283      	cmp	r3, r0
 8010582:	f340 809c 	ble.w	80106be <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8010586:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 801058a:	46e0      	mov	r8, ip
 801058c:	4405      	add	r5, r0
 801058e:	b22d      	sxth	r5, r5
 8010590:	429d      	cmp	r5, r3
 8010592:	bfa8      	it	ge
 8010594:	461d      	movge	r5, r3
 8010596:	f10c 0c01 	add.w	ip, ip, #1
 801059a:	e7e3      	b.n	8010564 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 801059c:	d10a      	bne.n	80105b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 801059e:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 80105a2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80105a6:	4562      	cmp	r2, ip
 80105a8:	bfb8      	it	lt
 80105aa:	4662      	movlt	r2, ip
 80105ac:	4288      	cmp	r0, r1
 80105ae:	bfb8      	it	lt
 80105b0:	4698      	movlt	r8, r3
 80105b2:	e082      	b.n	80106ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80105b4:	428a      	cmp	r2, r1
 80105b6:	bfb8      	it	lt
 80105b8:	460a      	movlt	r2, r1
 80105ba:	e07e      	b.n	80106ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 80105bc:	2000222e 	.word	0x2000222e
 80105c0:	20000014 	.word	0x20000014
 80105c4:	20002226 	.word	0x20002226
 80105c8:	20002224 	.word	0x20002224
 80105cc:	20002228 	.word	0x20002228
 80105d0:	20002230 	.word	0x20002230
 80105d4:	19e1      	adds	r1, r4, r7
 80105d6:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80105da:	ab0d      	add	r3, sp, #52	@ 0x34
 80105dc:	6849      	ldr	r1, [r1, #4]
 80105de:	c303      	stmia	r3!, {r0, r1}
 80105e0:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 80105e4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80105e8:	454b      	cmp	r3, r9
 80105ea:	bfb8      	it	lt
 80105ec:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 80105f0:	440b      	add	r3, r1
 80105f2:	1a9b      	subs	r3, r3, r2
 80105f4:	a80d      	add	r0, sp, #52	@ 0x34
 80105f6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 80105fa:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80105fe:	f7fe fed7 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010602:	a80d      	add	r0, sp, #52	@ 0x34
 8010604:	f7fb ff61 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8010608:	bb70      	cbnz	r0, 8010668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801060a:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 801060e:	6828      	ldr	r0, [r5, #0]
 8010610:	45cc      	cmp	ip, r9
 8010612:	f8d0 e000 	ldr.w	lr, [r0]
 8010616:	bfd4      	ite	le
 8010618:	fa1f fc8c 	uxthle.w	ip, ip
 801061c:	fa1f fc89 	uxthgt.w	ip, r9
 8010620:	f8cd c000 	str.w	ip, [sp]
 8010624:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 8010628:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801062c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010630:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8010634:	47d8      	blx	fp
 8010636:	4683      	mov	fp, r0
 8010638:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801063c:	a80d      	add	r0, sp, #52	@ 0x34
 801063e:	f7fe fe9d 	bl	800f37c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010642:	6823      	ldr	r3, [r4, #0]
 8010644:	4620      	mov	r0, r4
 8010646:	4427      	add	r7, r4
 8010648:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801064a:	a90d      	add	r1, sp, #52	@ 0x34
 801064c:	4798      	blx	r3
 801064e:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8010652:	eba0 000b 	sub.w	r0, r0, fp
 8010656:	b200      	sxth	r0, r0
 8010658:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 801065c:	b920      	cbnz	r0, 8010668 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801065e:	fa1f f188 	uxth.w	r1, r8
 8010662:	4650      	mov	r0, sl
 8010664:	f7ff f93e 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010668:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801066c:	f1bb 0f00 	cmp.w	fp, #0
 8010670:	f43f ae5a 	beq.w	8010328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010674:	f04f 0800 	mov.w	r8, #0
 8010678:	8833      	ldrh	r3, [r6, #0]
 801067a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801067e:	3301      	adds	r3, #1
 8010680:	b29b      	uxth	r3, r3
 8010682:	b299      	uxth	r1, r3
 8010684:	458b      	cmp	fp, r1
 8010686:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801068a:	d9a3      	bls.n	80105d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 801068c:	4427      	add	r7, r4
 801068e:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 8010692:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 8010696:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801069a:	4408      	add	r0, r1
 801069c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80106a0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80106a4:	b200      	sxth	r0, r0
 80106a6:	4461      	add	r1, ip
 80106a8:	b209      	sxth	r1, r1
 80106aa:	4288      	cmp	r0, r1
 80106ac:	f6bf af76 	bge.w	801059c <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 80106b0:	4584      	cmp	ip, r0
 80106b2:	4662      	mov	r2, ip
 80106b4:	4698      	mov	r8, r3
 80106b6:	bfb8      	it	lt
 80106b8:	4602      	movlt	r2, r0
 80106ba:	3301      	adds	r3, #1
 80106bc:	e7e1      	b.n	8010682 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 80106be:	d10e      	bne.n	80106de <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 80106c0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 80106c4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80106c8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 80106cc:	4473      	add	r3, lr
 80106ce:	b21b      	sxth	r3, r3
 80106d0:	429d      	cmp	r5, r3
 80106d2:	bfa8      	it	ge
 80106d4:	461d      	movge	r5, r3
 80106d6:	4287      	cmp	r7, r0
 80106d8:	bfb8      	it	lt
 80106da:	46e0      	movlt	r8, ip
 80106dc:	e75b      	b.n	8010596 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80106de:	4285      	cmp	r5, r0
 80106e0:	bfa8      	it	ge
 80106e2:	4605      	movge	r5, r0
 80106e4:	e757      	b.n	8010596 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 80106e6:	eb0a 0007 	add.w	r0, sl, r7
 80106ea:	4427      	add	r7, r4
 80106ec:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80106f0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80106f4:	45cb      	cmp	fp, r9
 80106f6:	bfbe      	ittt	lt
 80106f8:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 80106fc:	445d      	addlt	r5, fp
 80106fe:	b22d      	sxthlt	r5, r5
 8010700:	f7fb fee3 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8010704:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010708:	2800      	cmp	r0, #0
 801070a:	f47f af1f 	bne.w	801054c <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 801070e:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010712:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8010716:	1aad      	subs	r5, r5, r2
 8010718:	454d      	cmp	r5, r9
 801071a:	bfa8      	it	ge
 801071c:	464d      	movge	r5, r9
 801071e:	4829      	ldr	r0, [pc, #164]	@ (80107c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8010720:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010724:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010728:	6800      	ldr	r0, [r0, #0]
 801072a:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 801072e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8010732:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8010736:	f8d0 c000 	ldr.w	ip, [r0]
 801073a:	b2ad      	uxth	r5, r5
 801073c:	fa1f fb8b 	uxth.w	fp, fp
 8010740:	455d      	cmp	r5, fp
 8010742:	bf94      	ite	ls
 8010744:	9500      	strls	r5, [sp, #0]
 8010746:	f8cd b000 	strhi.w	fp, [sp]
 801074a:	b292      	uxth	r2, r2
 801074c:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8010750:	b29b      	uxth	r3, r3
 8010752:	b289      	uxth	r1, r1
 8010754:	47a8      	blx	r5
 8010756:	6823      	ldr	r3, [r4, #0]
 8010758:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801075c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801075e:	a90d      	add	r1, sp, #52	@ 0x34
 8010760:	4620      	mov	r0, r4
 8010762:	4798      	blx	r3
 8010764:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 8010768:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801076c:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010770:	1a5b      	subs	r3, r3, r1
 8010772:	440a      	add	r2, r1
 8010774:	b21b      	sxth	r3, r3
 8010776:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801077a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801077e:	2b00      	cmp	r3, #0
 8010780:	f47f aedf 	bne.w	8010542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8010784:	fa1f f188 	uxth.w	r1, r8
 8010788:	4650      	mov	r0, sl
 801078a:	f7ff f8ab 	bl	800f8e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801078e:	e6d8      	b.n	8010542 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 8010790:	8835      	ldrh	r5, [r6, #0]
 8010792:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010796:	42ab      	cmp	r3, r5
 8010798:	f67f adc6 	bls.w	8010328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801079c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80107a0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80107a4:	ab0d      	add	r3, sp, #52	@ 0x34
 80107a6:	6851      	ldr	r1, [r2, #4]
 80107a8:	c303      	stmia	r3!, {r0, r1}
 80107aa:	a80d      	add	r0, sp, #52	@ 0x34
 80107ac:	f7fb fe8d 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 80107b0:	b920      	cbnz	r0, 80107bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 80107b2:	6823      	ldr	r3, [r4, #0]
 80107b4:	a90d      	add	r1, sp, #52	@ 0x34
 80107b6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80107b8:	4620      	mov	r0, r4
 80107ba:	4798      	blx	r3
 80107bc:	3501      	adds	r5, #1
 80107be:	b2ad      	uxth	r5, r5
 80107c0:	e7e7      	b.n	8010792 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 80107c2:	bf00      	nop
 80107c4:	20002230 	.word	0x20002230

080107c8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80107c8:	2200      	movs	r2, #0
 80107ca:	4b03      	ldr	r3, [pc, #12]	@ (80107d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80107cc:	801a      	strh	r2, [r3, #0]
 80107ce:	805a      	strh	r2, [r3, #2]
 80107d0:	809a      	strh	r2, [r3, #4]
 80107d2:	80da      	strh	r2, [r3, #6]
 80107d4:	4770      	bx	lr
 80107d6:	bf00      	nop
 80107d8:	20002274 	.word	0x20002274

080107dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80107dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107e0:	4606      	mov	r6, r0
 80107e2:	b09d      	sub	sp, #116	@ 0x74
 80107e4:	a803      	add	r0, sp, #12
 80107e6:	4614      	mov	r4, r2
 80107e8:	468a      	mov	sl, r1
 80107ea:	461d      	mov	r5, r3
 80107ec:	f000 fd72 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 80107f0:	6833      	ldr	r3, [r6, #0]
 80107f2:	4630      	mov	r0, r6
 80107f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80107f6:	4798      	blx	r3
 80107f8:	6833      	ldr	r3, [r6, #0]
 80107fa:	4607      	mov	r7, r0
 80107fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80107fe:	4630      	mov	r0, r6
 8010800:	4798      	blx	r3
 8010802:	462a      	mov	r2, r5
 8010804:	2500      	movs	r5, #0
 8010806:	9000      	str	r0, [sp, #0]
 8010808:	4621      	mov	r1, r4
 801080a:	463b      	mov	r3, r7
 801080c:	a803      	add	r0, sp, #12
 801080e:	f000 fdbc 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010812:	462c      	mov	r4, r5
 8010814:	46a9      	mov	r9, r5
 8010816:	46a8      	mov	r8, r5
 8010818:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 801081c:	2300      	movs	r3, #0
 801081e:	9302      	str	r3, [sp, #8]
 8010820:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010824:	429c      	cmp	r4, r3
 8010826:	d002      	beq.n	801082e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010828:	455c      	cmp	r4, fp
 801082a:	bf18      	it	ne
 801082c:	4625      	movne	r5, r4
 801082e:	ab02      	add	r3, sp, #8
 8010830:	4632      	mov	r2, r6
 8010832:	4651      	mov	r1, sl
 8010834:	a803      	add	r0, sp, #12
 8010836:	f001 f8d5 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801083a:	4604      	mov	r4, r0
 801083c:	b108      	cbz	r0, 8010842 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801083e:	280a      	cmp	r0, #10
 8010840:	d10a      	bne.n	8010858 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010842:	45c1      	cmp	r9, r8
 8010844:	bf38      	it	cc
 8010846:	46c1      	movcc	r9, r8
 8010848:	f04f 0800 	mov.w	r8, #0
 801084c:	2c00      	cmp	r4, #0
 801084e:	d1e5      	bne.n	801081c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010850:	4648      	mov	r0, r9
 8010852:	b01d      	add	sp, #116	@ 0x74
 8010854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010858:	9a02      	ldr	r2, [sp, #8]
 801085a:	2a00      	cmp	r2, #0
 801085c:	d0de      	beq.n	801081c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801085e:	7b57      	ldrb	r7, [r2, #13]
 8010860:	6833      	ldr	r3, [r6, #0]
 8010862:	007f      	lsls	r7, r7, #1
 8010864:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010868:	7a97      	ldrb	r7, [r2, #10]
 801086a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801086c:	4307      	orrs	r7, r0
 801086e:	4629      	mov	r1, r5
 8010870:	4630      	mov	r0, r6
 8010872:	8894      	ldrh	r4, [r2, #4]
 8010874:	4798      	blx	r3
 8010876:	4438      	add	r0, r7
 8010878:	4480      	add	r8, r0
 801087a:	fa1f f888 	uxth.w	r8, r8
 801087e:	e7e5      	b.n	801084c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010880 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010880:	b508      	push	{r3, lr}
 8010882:	6803      	ldr	r3, [r0, #0]
 8010884:	68db      	ldr	r3, [r3, #12]
 8010886:	4798      	blx	r3
 8010888:	b128      	cbz	r0, 8010896 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801088a:	7b43      	ldrb	r3, [r0, #13]
 801088c:	7a80      	ldrb	r0, [r0, #10]
 801088e:	005b      	lsls	r3, r3, #1
 8010890:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010894:	4318      	orrs	r0, r3
 8010896:	bd08      	pop	{r3, pc}

08010898 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010898:	b40e      	push	{r1, r2, r3}
 801089a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801089c:	4605      	mov	r5, r0
 801089e:	b09e      	sub	sp, #120	@ 0x78
 80108a0:	ab23      	add	r3, sp, #140	@ 0x8c
 80108a2:	f853 4b04 	ldr.w	r4, [r3], #4
 80108a6:	a805      	add	r0, sp, #20
 80108a8:	9303      	str	r3, [sp, #12]
 80108aa:	f000 fd13 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 80108ae:	682b      	ldr	r3, [r5, #0]
 80108b0:	4628      	mov	r0, r5
 80108b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80108b4:	4798      	blx	r3
 80108b6:	682b      	ldr	r3, [r5, #0]
 80108b8:	4606      	mov	r6, r0
 80108ba:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80108bc:	4628      	mov	r0, r5
 80108be:	4798      	blx	r3
 80108c0:	4621      	mov	r1, r4
 80108c2:	2400      	movs	r4, #0
 80108c4:	4633      	mov	r3, r6
 80108c6:	9000      	str	r0, [sp, #0]
 80108c8:	9a03      	ldr	r2, [sp, #12]
 80108ca:	ae1e      	add	r6, sp, #120	@ 0x78
 80108cc:	a805      	add	r0, sp, #20
 80108ce:	f000 fd5c 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80108d2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80108d6:	4633      	mov	r3, r6
 80108d8:	462a      	mov	r2, r5
 80108da:	4621      	mov	r1, r4
 80108dc:	a805      	add	r0, sp, #20
 80108de:	f001 f881 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80108e2:	b1f0      	cbz	r0, 8010922 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80108e4:	280a      	cmp	r0, #10
 80108e6:	d018      	beq.n	801091a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80108e8:	9f04      	ldr	r7, [sp, #16]
 80108ea:	b1b7      	cbz	r7, 801091a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80108ec:	7b78      	ldrb	r0, [r7, #13]
 80108ee:	7a3b      	ldrb	r3, [r7, #8]
 80108f0:	00c1      	lsls	r1, r0, #3
 80108f2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80108f6:	4319      	orrs	r1, r3
 80108f8:	0643      	lsls	r3, r0, #25
 80108fa:	bf44      	itt	mi
 80108fc:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010900:	b219      	sxthmi	r1, r3
 8010902:	0100      	lsls	r0, r0, #4
 8010904:	79fb      	ldrb	r3, [r7, #7]
 8010906:	88ea      	ldrh	r2, [r5, #6]
 8010908:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 801090c:	4303      	orrs	r3, r0
 801090e:	4413      	add	r3, r2
 8010910:	1a5b      	subs	r3, r3, r1
 8010912:	b21b      	sxth	r3, r3
 8010914:	429c      	cmp	r4, r3
 8010916:	bfb8      	it	lt
 8010918:	461c      	movlt	r4, r3
 801091a:	4633      	mov	r3, r6
 801091c:	462a      	mov	r2, r5
 801091e:	2100      	movs	r1, #0
 8010920:	e7dc      	b.n	80108dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010922:	b2a0      	uxth	r0, r4
 8010924:	b01e      	add	sp, #120	@ 0x78
 8010926:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801092a:	b003      	add	sp, #12
 801092c:	4770      	bx	lr

0801092e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801092e:	7a43      	ldrb	r3, [r0, #9]
 8010930:	8880      	ldrh	r0, [r0, #4]
 8010932:	4418      	add	r0, r3
 8010934:	b280      	uxth	r0, r0
 8010936:	4770      	bx	lr

08010938 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010938:	6803      	ldr	r3, [r0, #0]
 801093a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801093c:	4718      	bx	r3

0801093e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801093e:	b40e      	push	{r1, r2, r3}
 8010940:	b570      	push	{r4, r5, r6, lr}
 8010942:	4604      	mov	r4, r0
 8010944:	b09d      	sub	sp, #116	@ 0x74
 8010946:	ab21      	add	r3, sp, #132	@ 0x84
 8010948:	f853 5b04 	ldr.w	r5, [r3], #4
 801094c:	a803      	add	r0, sp, #12
 801094e:	9302      	str	r3, [sp, #8]
 8010950:	f000 fcc0 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 8010954:	6823      	ldr	r3, [r4, #0]
 8010956:	4620      	mov	r0, r4
 8010958:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801095a:	4798      	blx	r3
 801095c:	6823      	ldr	r3, [r4, #0]
 801095e:	4606      	mov	r6, r0
 8010960:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010962:	4620      	mov	r0, r4
 8010964:	4798      	blx	r3
 8010966:	4633      	mov	r3, r6
 8010968:	9000      	str	r0, [sp, #0]
 801096a:	9a02      	ldr	r2, [sp, #8]
 801096c:	4629      	mov	r1, r5
 801096e:	a803      	add	r0, sp, #12
 8010970:	f000 fd0b 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010974:	a803      	add	r0, sp, #12
 8010976:	f001 f903 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801097a:	2401      	movs	r4, #1
 801097c:	b2a3      	uxth	r3, r4
 801097e:	b140      	cbz	r0, 8010992 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010980:	280a      	cmp	r0, #10
 8010982:	bf08      	it	eq
 8010984:	3301      	addeq	r3, #1
 8010986:	a803      	add	r0, sp, #12
 8010988:	bf08      	it	eq
 801098a:	b21c      	sxtheq	r4, r3
 801098c:	f001 f8f8 	bl	8011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010990:	e7f4      	b.n	801097c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010992:	4618      	mov	r0, r3
 8010994:	b01d      	add	sp, #116	@ 0x74
 8010996:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801099a:	b003      	add	sp, #12
 801099c:	4770      	bx	lr

0801099e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801099e:	b40e      	push	{r1, r2, r3}
 80109a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109a2:	4604      	mov	r4, r0
 80109a4:	b09e      	sub	sp, #120	@ 0x78
 80109a6:	ab23      	add	r3, sp, #140	@ 0x8c
 80109a8:	f853 5b04 	ldr.w	r5, [r3], #4
 80109ac:	a805      	add	r0, sp, #20
 80109ae:	9303      	str	r3, [sp, #12]
 80109b0:	f000 fc90 	bl	80112d4 <_ZN8touchgfx12TextProviderC1Ev>
 80109b4:	6823      	ldr	r3, [r4, #0]
 80109b6:	4620      	mov	r0, r4
 80109b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80109ba:	4798      	blx	r3
 80109bc:	6823      	ldr	r3, [r4, #0]
 80109be:	4606      	mov	r6, r0
 80109c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80109c2:	4620      	mov	r0, r4
 80109c4:	4798      	blx	r3
 80109c6:	4633      	mov	r3, r6
 80109c8:	4629      	mov	r1, r5
 80109ca:	9000      	str	r0, [sp, #0]
 80109cc:	9a03      	ldr	r2, [sp, #12]
 80109ce:	a805      	add	r0, sp, #20
 80109d0:	f000 fcdb 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80109d4:	2100      	movs	r1, #0
 80109d6:	ad1e      	add	r5, sp, #120	@ 0x78
 80109d8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80109dc:	462b      	mov	r3, r5
 80109de:	4622      	mov	r2, r4
 80109e0:	a805      	add	r0, sp, #20
 80109e2:	f000 ffff 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80109e6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80109ea:	b1d8      	cbz	r0, 8010a24 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80109ec:	280a      	cmp	r0, #10
 80109ee:	d012      	beq.n	8010a16 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80109f0:	9804      	ldr	r0, [sp, #16]
 80109f2:	b180      	cbz	r0, 8010a16 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80109f4:	7b47      	ldrb	r7, [r0, #13]
 80109f6:	88e2      	ldrh	r2, [r4, #6]
 80109f8:	00fb      	lsls	r3, r7, #3
 80109fa:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80109fe:	7a03      	ldrb	r3, [r0, #8]
 8010a00:	430b      	orrs	r3, r1
 8010a02:	0679      	lsls	r1, r7, #25
 8010a04:	bf44      	itt	mi
 8010a06:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010a0a:	b21b      	sxthmi	r3, r3
 8010a0c:	1ad3      	subs	r3, r2, r3
 8010a0e:	b21b      	sxth	r3, r3
 8010a10:	429e      	cmp	r6, r3
 8010a12:	bfa8      	it	ge
 8010a14:	461e      	movge	r6, r3
 8010a16:	462b      	mov	r3, r5
 8010a18:	4622      	mov	r2, r4
 8010a1a:	2100      	movs	r1, #0
 8010a1c:	a805      	add	r0, sp, #20
 8010a1e:	f000 ffe1 	bl	80119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010a22:	e7e2      	b.n	80109ea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010a24:	4630      	mov	r0, r6
 8010a26:	b01e      	add	sp, #120	@ 0x78
 8010a28:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010a2c:	b003      	add	sp, #12
 8010a2e:	4770      	bx	lr

08010a30 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010a30:	b513      	push	{r0, r1, r4, lr}
 8010a32:	2400      	movs	r4, #0
 8010a34:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010a38:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010a3c:	6803      	ldr	r3, [r0, #0]
 8010a3e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010a42:	9400      	str	r4, [sp, #0]
 8010a44:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a48:	691b      	ldr	r3, [r3, #16]
 8010a4a:	4669      	mov	r1, sp
 8010a4c:	4798      	blx	r3
 8010a4e:	b002      	add	sp, #8
 8010a50:	bd10      	pop	{r4, pc}

08010a52 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010a52:	b538      	push	{r3, r4, r5, lr}
 8010a54:	460c      	mov	r4, r1
 8010a56:	4605      	mov	r5, r0
 8010a58:	680b      	ldr	r3, [r1, #0]
 8010a5a:	68db      	ldr	r3, [r3, #12]
 8010a5c:	4798      	blx	r3
 8010a5e:	6823      	ldr	r3, [r4, #0]
 8010a60:	4620      	mov	r0, r4
 8010a62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010a64:	4629      	mov	r1, r5
 8010a66:	4798      	blx	r3
 8010a68:	4628      	mov	r0, r5
 8010a6a:	bd38      	pop	{r3, r4, r5, pc}

08010a6c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010a6c:	b410      	push	{r4}
 8010a6e:	880a      	ldrh	r2, [r1, #0]
 8010a70:	8884      	ldrh	r4, [r0, #4]
 8010a72:	4422      	add	r2, r4
 8010a74:	800a      	strh	r2, [r1, #0]
 8010a76:	88c4      	ldrh	r4, [r0, #6]
 8010a78:	884a      	ldrh	r2, [r1, #2]
 8010a7a:	4422      	add	r2, r4
 8010a7c:	804a      	strh	r2, [r1, #2]
 8010a7e:	6940      	ldr	r0, [r0, #20]
 8010a80:	b120      	cbz	r0, 8010a8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010a82:	6803      	ldr	r3, [r0, #0]
 8010a84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010a88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010a8a:	4718      	bx	r3
 8010a8c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010a90:	4770      	bx	lr

08010a92 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010a92:	b570      	push	{r4, r5, r6, lr}
 8010a94:	460c      	mov	r4, r1
 8010a96:	8882      	ldrh	r2, [r0, #4]
 8010a98:	880b      	ldrh	r3, [r1, #0]
 8010a9a:	4605      	mov	r5, r0
 8010a9c:	4413      	add	r3, r2
 8010a9e:	800b      	strh	r3, [r1, #0]
 8010aa0:	88c2      	ldrh	r2, [r0, #6]
 8010aa2:	884b      	ldrh	r3, [r1, #2]
 8010aa4:	4413      	add	r3, r2
 8010aa6:	804b      	strh	r3, [r1, #2]
 8010aa8:	1d01      	adds	r1, r0, #4
 8010aaa:	4620      	mov	r0, r4
 8010aac:	f7fb fcca 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8010ab0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010ab4:	2b00      	cmp	r3, #0
 8010ab6:	dd0b      	ble.n	8010ad0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ab8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010abc:	2b00      	cmp	r3, #0
 8010abe:	dd07      	ble.n	8010ad0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ac0:	6968      	ldr	r0, [r5, #20]
 8010ac2:	b128      	cbz	r0, 8010ad0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ac4:	6803      	ldr	r3, [r0, #0]
 8010ac6:	4621      	mov	r1, r4
 8010ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010acc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010ace:	4718      	bx	r3
 8010ad0:	bd70      	pop	{r4, r5, r6, pc}
	...

08010ad4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010ad4:	b570      	push	{r4, r5, r6, lr}
 8010ad6:	460c      	mov	r4, r1
 8010ad8:	8882      	ldrh	r2, [r0, #4]
 8010ada:	880b      	ldrh	r3, [r1, #0]
 8010adc:	4605      	mov	r5, r0
 8010ade:	4413      	add	r3, r2
 8010ae0:	800b      	strh	r3, [r1, #0]
 8010ae2:	88c2      	ldrh	r2, [r0, #6]
 8010ae4:	884b      	ldrh	r3, [r1, #2]
 8010ae6:	4413      	add	r3, r2
 8010ae8:	804b      	strh	r3, [r1, #2]
 8010aea:	1d01      	adds	r1, r0, #4
 8010aec:	4620      	mov	r0, r4
 8010aee:	f7fb fca9 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8010af2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010af6:	2b00      	cmp	r3, #0
 8010af8:	dd19      	ble.n	8010b2e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010afa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010afe:	2b00      	cmp	r3, #0
 8010b00:	dd15      	ble.n	8010b2e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010b02:	6968      	ldr	r0, [r5, #20]
 8010b04:	b128      	cbz	r0, 8010b12 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010b06:	6803      	ldr	r3, [r0, #0]
 8010b08:	4621      	mov	r1, r4
 8010b0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b0e:	691b      	ldr	r3, [r3, #16]
 8010b10:	4718      	bx	r3
 8010b12:	4b07      	ldr	r3, [pc, #28]	@ (8010b30 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010b14:	681b      	ldr	r3, [r3, #0]
 8010b16:	3304      	adds	r3, #4
 8010b18:	429d      	cmp	r5, r3
 8010b1a:	d108      	bne.n	8010b2e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010b1c:	f7fe fdd6 	bl	800f6cc <_ZN8touchgfx11Application11getInstanceEv>
 8010b20:	6803      	ldr	r3, [r0, #0]
 8010b22:	6821      	ldr	r1, [r4, #0]
 8010b24:	6862      	ldr	r2, [r4, #4]
 8010b26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010b28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b2c:	4718      	bx	r3
 8010b2e:	bd70      	pop	{r4, r5, r6, pc}
 8010b30:	2000226c 	.word	0x2000226c

08010b34 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010b34:	b570      	push	{r4, r5, r6, lr}
 8010b36:	4604      	mov	r4, r0
 8010b38:	4616      	mov	r6, r2
 8010b3a:	460d      	mov	r5, r1
 8010b3c:	b901      	cbnz	r1, 8010b40 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010b3e:	b192      	cbz	r2, 8010b66 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010b40:	6823      	ldr	r3, [r4, #0]
 8010b42:	4620      	mov	r0, r4
 8010b44:	699b      	ldr	r3, [r3, #24]
 8010b46:	4798      	blx	r3
 8010b48:	88e2      	ldrh	r2, [r4, #6]
 8010b4a:	88a1      	ldrh	r1, [r4, #4]
 8010b4c:	4432      	add	r2, r6
 8010b4e:	4429      	add	r1, r5
 8010b50:	4620      	mov	r0, r4
 8010b52:	b212      	sxth	r2, r2
 8010b54:	b209      	sxth	r1, r1
 8010b56:	f7f7 ffd0 	bl	8008afa <_ZN8touchgfx8Drawable5setXYEss>
 8010b5a:	6823      	ldr	r3, [r4, #0]
 8010b5c:	4620      	mov	r0, r4
 8010b5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b62:	699b      	ldr	r3, [r3, #24]
 8010b64:	4718      	bx	r3
 8010b66:	bd70      	pop	{r4, r5, r6, pc}

08010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010b68:	b510      	push	{r4, lr}
 8010b6a:	2300      	movs	r3, #0
 8010b6c:	4604      	mov	r4, r0
 8010b6e:	4608      	mov	r0, r1
 8010b70:	8023      	strh	r3, [r4, #0]
 8010b72:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010b76:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010b7a:	8063      	strh	r3, [r4, #2]
 8010b7c:	6803      	ldr	r3, [r0, #0]
 8010b7e:	80a1      	strh	r1, [r4, #4]
 8010b80:	80e2      	strh	r2, [r4, #6]
 8010b82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010b84:	4621      	mov	r1, r4
 8010b86:	4798      	blx	r3
 8010b88:	4620      	mov	r0, r4
 8010b8a:	bd10      	pop	{r4, pc}

08010b8c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010b8c:	b530      	push	{r4, r5, lr}
 8010b8e:	8083      	strh	r3, [r0, #4]
 8010b90:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010b94:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010b98:	80c3      	strh	r3, [r0, #6]
 8010b9a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010b9e:	6141      	str	r1, [r0, #20]
 8010ba0:	7203      	strb	r3, [r0, #8]
 8010ba2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010ba6:	8302      	strh	r2, [r0, #24]
 8010ba8:	7243      	strb	r3, [r0, #9]
 8010baa:	7a83      	ldrb	r3, [r0, #10]
 8010bac:	f365 0306 	bfi	r3, r5, #0, #7
 8010bb0:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010bb4:	f365 13c7 	bfi	r3, r5, #7, #1
 8010bb8:	7283      	strb	r3, [r0, #10]
 8010bba:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8010bbe:	72c3      	strb	r3, [r0, #11]
 8010bc0:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010bc4:	7303      	strb	r3, [r0, #12]
 8010bc6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010bca:	81c3      	strh	r3, [r0, #14]
 8010bcc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010bd0:	8203      	strh	r3, [r0, #16]
 8010bd2:	4b01      	ldr	r3, [pc, #4]	@ (8010bd8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010bd4:	6003      	str	r3, [r0, #0]
 8010bd6:	bd30      	pop	{r4, r5, pc}
 8010bd8:	08023ee4 	.word	0x08023ee4

08010bdc <_ZNK8touchgfx9ConstFont4findEt>:
 8010bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bde:	6944      	ldr	r4, [r0, #20]
 8010be0:	b3bc      	cbz	r4, 8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010be2:	88a3      	ldrh	r3, [r4, #4]
 8010be4:	8b02      	ldrh	r2, [r0, #24]
 8010be6:	1acb      	subs	r3, r1, r3
 8010be8:	f102 32ff 	add.w	r2, r2, #4294967295
 8010bec:	d431      	bmi.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010bee:	4293      	cmp	r3, r2
 8010bf0:	dd0c      	ble.n	8010c0c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010bf2:	230e      	movs	r3, #14
 8010bf4:	fb03 4302 	mla	r3, r3, r2, r4
 8010bf8:	889b      	ldrh	r3, [r3, #4]
 8010bfa:	1a5b      	subs	r3, r3, r1
 8010bfc:	1ad3      	subs	r3, r2, r3
 8010bfe:	429a      	cmp	r2, r3
 8010c00:	db27      	blt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c02:	2b00      	cmp	r3, #0
 8010c04:	bfbc      	itt	lt
 8010c06:	2302      	movlt	r3, #2
 8010c08:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010c0c:	2500      	movs	r5, #0
 8010c0e:	260e      	movs	r6, #14
 8010c10:	4295      	cmp	r5, r2
 8010c12:	dc1e      	bgt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c14:	fb06 4003 	mla	r0, r6, r3, r4
 8010c18:	8887      	ldrh	r7, [r0, #4]
 8010c1a:	42b9      	cmp	r1, r7
 8010c1c:	d01a      	beq.n	8010c54 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010c1e:	d20d      	bcs.n	8010c3c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010c20:	1e5a      	subs	r2, r3, #1
 8010c22:	4295      	cmp	r5, r2
 8010c24:	dc15      	bgt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c26:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010c2a:	1a5b      	subs	r3, r3, r1
 8010c2c:	1ad3      	subs	r3, r2, r3
 8010c2e:	429a      	cmp	r2, r3
 8010c30:	db0f      	blt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c32:	429d      	cmp	r5, r3
 8010c34:	ddec      	ble.n	8010c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010c36:	1953      	adds	r3, r2, r5
 8010c38:	105b      	asrs	r3, r3, #1
 8010c3a:	e7e9      	b.n	8010c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010c3c:	1c5d      	adds	r5, r3, #1
 8010c3e:	42aa      	cmp	r2, r5
 8010c40:	db07      	blt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c42:	8a43      	ldrh	r3, [r0, #18]
 8010c44:	1acb      	subs	r3, r1, r3
 8010c46:	442b      	add	r3, r5
 8010c48:	429d      	cmp	r5, r3
 8010c4a:	dc02      	bgt.n	8010c52 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010c4c:	429a      	cmp	r2, r3
 8010c4e:	dadf      	bge.n	8010c10 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010c50:	e7f1      	b.n	8010c36 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010c52:	2000      	movs	r0, #0
 8010c54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010c56 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010c56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010c58:	4604      	mov	r4, r0
 8010c5a:	4617      	mov	r7, r2
 8010c5c:	461e      	mov	r6, r3
 8010c5e:	b911      	cbnz	r1, 8010c66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8010c60:	2500      	movs	r5, #0
 8010c62:	4628      	mov	r0, r5
 8010c64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c66:	290a      	cmp	r1, #10
 8010c68:	d0fa      	beq.n	8010c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010c6a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8010c6e:	4291      	cmp	r1, r2
 8010c70:	d0f6      	beq.n	8010c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010c72:	f242 020b 	movw	r2, #8203	@ 0x200b
 8010c76:	4291      	cmp	r1, r2
 8010c78:	d0f2      	beq.n	8010c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010c7a:	f7ff ffaf 	bl	8010bdc <_ZNK8touchgfx9ConstFont4findEt>
 8010c7e:	4605      	mov	r5, r0
 8010c80:	b950      	cbnz	r0, 8010c98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8010c82:	6823      	ldr	r3, [r4, #0]
 8010c84:	4620      	mov	r0, r4
 8010c86:	691b      	ldr	r3, [r3, #16]
 8010c88:	4798      	blx	r3
 8010c8a:	4601      	mov	r1, r0
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	f7ff ffa5 	bl	8010bdc <_ZNK8touchgfx9ConstFont4findEt>
 8010c92:	4605      	mov	r5, r0
 8010c94:	2800      	cmp	r0, #0
 8010c96:	d0e3      	beq.n	8010c60 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010c98:	6823      	ldr	r3, [r4, #0]
 8010c9a:	4629      	mov	r1, r5
 8010c9c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	4798      	blx	r3
 8010ca2:	6038      	str	r0, [r7, #0]
 8010ca4:	6823      	ldr	r3, [r4, #0]
 8010ca6:	4620      	mov	r0, r4
 8010ca8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010caa:	4798      	blx	r3
 8010cac:	7030      	strb	r0, [r6, #0]
 8010cae:	e7d8      	b.n	8010c62 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08010cb0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8010cb0:	2000      	movs	r0, #0
 8010cb2:	4770      	bx	lr

08010cb4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010cb4:	2001      	movs	r0, #1
 8010cb6:	4770      	bx	lr

08010cb8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010cb8:	2002      	movs	r0, #2
 8010cba:	4770      	bx	lr

08010cbc <_ZN8touchgfx12GestureEventD1Ev>:
 8010cbc:	4770      	bx	lr

08010cbe <_ZN8touchgfx9DragEventD1Ev>:
 8010cbe:	4770      	bx	lr

08010cc0 <_ZN8touchgfx10ClickEventD1Ev>:
 8010cc0:	4770      	bx	lr

08010cc2 <_ZN8touchgfx10ClickEventD0Ev>:
 8010cc2:	b510      	push	{r4, lr}
 8010cc4:	4604      	mov	r4, r0
 8010cc6:	210c      	movs	r1, #12
 8010cc8:	f010 f9c1 	bl	802104e <_ZdlPvj>
 8010ccc:	4620      	mov	r0, r4
 8010cce:	bd10      	pop	{r4, pc}

08010cd0 <_ZN8touchgfx9DragEventD0Ev>:
 8010cd0:	b510      	push	{r4, lr}
 8010cd2:	4604      	mov	r4, r0
 8010cd4:	2110      	movs	r1, #16
 8010cd6:	f010 f9ba 	bl	802104e <_ZdlPvj>
 8010cda:	4620      	mov	r0, r4
 8010cdc:	bd10      	pop	{r4, pc}

08010cde <_ZN8touchgfx12GestureEventD0Ev>:
 8010cde:	b510      	push	{r4, lr}
 8010ce0:	4604      	mov	r4, r0
 8010ce2:	210c      	movs	r1, #12
 8010ce4:	f010 f9b3 	bl	802104e <_ZdlPvj>
 8010ce8:	4620      	mov	r0, r4
 8010cea:	bd10      	pop	{r4, pc}

08010cec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8010cec:	b530      	push	{r4, r5, lr}
 8010cee:	460d      	mov	r5, r1
 8010cf0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010cf2:	b087      	sub	sp, #28
 8010cf4:	4604      	mov	r4, r0
 8010cf6:	b301      	cbz	r1, 8010d3a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010cf8:	a801      	add	r0, sp, #4
 8010cfa:	f7ff ff35 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010cfe:	892a      	ldrh	r2, [r5, #8]
 8010d00:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010d04:	7928      	ldrb	r0, [r5, #4]
 8010d06:	1ad2      	subs	r2, r2, r3
 8010d08:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010d0a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010d0e:	441a      	add	r2, r3
 8010d10:	896b      	ldrh	r3, [r5, #10]
 8010d12:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010d16:	f88d 0010 	strb.w	r0, [sp, #16]
 8010d1a:	1b5b      	subs	r3, r3, r5
 8010d1c:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8010d1e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010d20:	442b      	add	r3, r5
 8010d22:	4d07      	ldr	r5, [pc, #28]	@ (8010d40 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010d24:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010d28:	9503      	str	r5, [sp, #12]
 8010d2a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010d2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010d32:	6803      	ldr	r3, [r0, #0]
 8010d34:	a903      	add	r1, sp, #12
 8010d36:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010d38:	4798      	blx	r3
 8010d3a:	b007      	add	sp, #28
 8010d3c:	bd30      	pop	{r4, r5, pc}
 8010d3e:	bf00      	nop
 8010d40:	08023f74 	.word	0x08023f74

08010d44 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d48:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8010d4a:	b08a      	sub	sp, #40	@ 0x28
 8010d4c:	4604      	mov	r4, r0
 8010d4e:	460d      	mov	r5, r1
 8010d50:	b113      	cbz	r3, 8010d58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8010d52:	790b      	ldrb	r3, [r1, #4]
 8010d54:	2b00      	cmp	r3, #0
 8010d56:	d044      	beq.n	8010de2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010d58:	f104 0804 	add.w	r8, r4, #4
 8010d5c:	4641      	mov	r1, r8
 8010d5e:	a803      	add	r0, sp, #12
 8010d60:	f7ff ff02 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d64:	792b      	ldrb	r3, [r5, #4]
 8010d66:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010d6a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8010d6e:	b983      	cbnz	r3, 8010d92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8010d70:	892a      	ldrh	r2, [r5, #8]
 8010d72:	88e9      	ldrh	r1, [r5, #6]
 8010d74:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8010d78:	1b92      	subs	r2, r2, r6
 8010d7a:	1bc9      	subs	r1, r1, r7
 8010d7c:	9301      	str	r3, [sp, #4]
 8010d7e:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8010d82:	9300      	str	r3, [sp, #0]
 8010d84:	b212      	sxth	r2, r2
 8010d86:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8010d8a:	b209      	sxth	r1, r1
 8010d8c:	4640      	mov	r0, r8
 8010d8e:	f7fb fa79 	bl	800c284 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8010d92:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8010d94:	b329      	cbz	r1, 8010de2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010d96:	a805      	add	r0, sp, #20
 8010d98:	f7ff fee6 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010da0:	792b      	ldrb	r3, [r5, #4]
 8010da2:	1abf      	subs	r7, r7, r2
 8010da4:	88ea      	ldrh	r2, [r5, #6]
 8010da6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010da8:	4417      	add	r7, r2
 8010daa:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8010dac:	f88d 3020 	strb.w	r3, [sp, #32]
 8010db0:	4417      	add	r7, r2
 8010db2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010db6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8010dba:	1ab6      	subs	r6, r6, r2
 8010dbc:	892a      	ldrh	r2, [r5, #8]
 8010dbe:	a907      	add	r1, sp, #28
 8010dc0:	4416      	add	r6, r2
 8010dc2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010dc4:	4416      	add	r6, r2
 8010dc6:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8010dca:	2600      	movs	r6, #0
 8010dcc:	4a06      	ldr	r2, [pc, #24]	@ (8010de8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8010dce:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8010dd2:	9207      	str	r2, [sp, #28]
 8010dd4:	6803      	ldr	r3, [r0, #0]
 8010dd6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010dd8:	4798      	blx	r3
 8010dda:	792b      	ldrb	r3, [r5, #4]
 8010ddc:	b10b      	cbz	r3, 8010de2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010dde:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8010de2:	b00a      	add	sp, #40	@ 0x28
 8010de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010de8:	08023f4c 	.word	0x08023f4c

08010dec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8010dec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010df0:	460c      	mov	r4, r1
 8010df2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010df4:	b088      	sub	sp, #32
 8010df6:	4605      	mov	r5, r0
 8010df8:	2900      	cmp	r1, #0
 8010dfa:	d06d      	beq.n	8010ed8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8010dfc:	4668      	mov	r0, sp
 8010dfe:	f7ff feb3 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e02:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8010e04:	88e3      	ldrh	r3, [r4, #6]
 8010e06:	f9bd 8000 	ldrsh.w	r8, [sp]
 8010e0a:	440b      	add	r3, r1
 8010e0c:	b21b      	sxth	r3, r3
 8010e0e:	4543      	cmp	r3, r8
 8010e10:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8010e14:	db31      	blt.n	8010e7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010e16:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8010e1a:	44c4      	add	ip, r8
 8010e1c:	fa0f fc8c 	sxth.w	ip, ip
 8010e20:	4563      	cmp	r3, ip
 8010e22:	da2a      	bge.n	8010e7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010e24:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8010e26:	8926      	ldrh	r6, [r4, #8]
 8010e28:	4416      	add	r6, r2
 8010e2a:	b236      	sxth	r6, r6
 8010e2c:	42be      	cmp	r6, r7
 8010e2e:	db24      	blt.n	8010e7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010e30:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010e34:	4438      	add	r0, r7
 8010e36:	b200      	sxth	r0, r0
 8010e38:	4286      	cmp	r6, r0
 8010e3a:	da1e      	bge.n	8010e7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010e3c:	8963      	ldrh	r3, [r4, #10]
 8010e3e:	4419      	add	r1, r3
 8010e40:	b209      	sxth	r1, r1
 8010e42:	4541      	cmp	r1, r8
 8010e44:	db08      	blt.n	8010e58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010e46:	4561      	cmp	r1, ip
 8010e48:	da06      	bge.n	8010e58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010e4a:	89a3      	ldrh	r3, [r4, #12]
 8010e4c:	441a      	add	r2, r3
 8010e4e:	b212      	sxth	r2, r2
 8010e50:	42ba      	cmp	r2, r7
 8010e52:	db01      	blt.n	8010e58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010e54:	4282      	cmp	r2, r0
 8010e56:	db10      	blt.n	8010e7a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010e58:	4b21      	ldr	r3, [pc, #132]	@ (8010ee0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010e5a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010e5c:	9304      	str	r3, [sp, #16]
 8010e5e:	2302      	movs	r3, #2
 8010e60:	f88d 3014 	strb.w	r3, [sp, #20]
 8010e64:	2300      	movs	r3, #0
 8010e66:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010e6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010e6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010e72:	6803      	ldr	r3, [r0, #0]
 8010e74:	a904      	add	r1, sp, #16
 8010e76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010e78:	4798      	blx	r3
 8010e7a:	1d29      	adds	r1, r5, #4
 8010e7c:	a802      	add	r0, sp, #8
 8010e7e:	f7ff fe73 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e82:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010e86:	88e0      	ldrh	r0, [r4, #6]
 8010e88:	eba3 0808 	sub.w	r8, r3, r8
 8010e8c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010e90:	7921      	ldrb	r1, [r4, #4]
 8010e92:	1bdf      	subs	r7, r3, r7
 8010e94:	b2bb      	uxth	r3, r7
 8010e96:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8010e9a:	fa1f f888 	uxth.w	r8, r8
 8010e9e:	8922      	ldrh	r2, [r4, #8]
 8010ea0:	8967      	ldrh	r7, [r4, #10]
 8010ea2:	89a4      	ldrh	r4, [r4, #12]
 8010ea4:	4440      	add	r0, r8
 8010ea6:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8010ea8:	4460      	add	r0, ip
 8010eaa:	441a      	add	r2, r3
 8010eac:	44b8      	add	r8, r7
 8010eae:	4423      	add	r3, r4
 8010eb0:	4c0c      	ldr	r4, [pc, #48]	@ (8010ee4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8010eb2:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010eb6:	4433      	add	r3, r6
 8010eb8:	4432      	add	r2, r6
 8010eba:	44e0      	add	r8, ip
 8010ebc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010ebe:	f88d 1014 	strb.w	r1, [sp, #20]
 8010ec2:	9404      	str	r4, [sp, #16]
 8010ec4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010ec8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8010ecc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ed0:	6803      	ldr	r3, [r0, #0]
 8010ed2:	a904      	add	r1, sp, #16
 8010ed4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010ed6:	4798      	blx	r3
 8010ed8:	b008      	add	sp, #32
 8010eda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ede:	bf00      	nop
 8010ee0:	08023f4c 	.word	0x08023f4c
 8010ee4:	08023f60 	.word	0x08023f60

08010ee8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8010ee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010eea:	4604      	mov	r4, r0
 8010eec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8010ef0:	3201      	adds	r2, #1
 8010ef2:	d112      	bne.n	8010f1a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8010ef4:	2500      	movs	r5, #0
 8010ef6:	9500      	str	r5, [sp, #0]
 8010ef8:	466d      	mov	r5, sp
 8010efa:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010efe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010f02:	6803      	ldr	r3, [r0, #0]
 8010f04:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010f08:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010f0c:	4629      	mov	r1, r5
 8010f0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010f10:	4798      	blx	r3
 8010f12:	e895 0003 	ldmia.w	r5, {r0, r1}
 8010f16:	e884 0003 	stmia.w	r4, {r0, r1}
 8010f1a:	4620      	mov	r0, r4
 8010f1c:	b003      	add	sp, #12
 8010f1e:	bd30      	pop	{r4, r5, pc}

08010f20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010f20:	b513      	push	{r0, r1, r4, lr}
 8010f22:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8010f26:	4604      	mov	r4, r0
 8010f28:	3301      	adds	r3, #1
 8010f2a:	d109      	bne.n	8010f40 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010f2c:	4601      	mov	r1, r0
 8010f2e:	4668      	mov	r0, sp
 8010f30:	f7ff fe1a 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010f34:	f8bd 3000 	ldrh.w	r3, [sp]
 8010f38:	8423      	strh	r3, [r4, #32]
 8010f3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010f3e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010f40:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010f44:	b002      	add	sp, #8
 8010f46:	bd10      	pop	{r4, pc}

08010f48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010f48:	b513      	push	{r0, r1, r4, lr}
 8010f4a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8010f4e:	4604      	mov	r4, r0
 8010f50:	3301      	adds	r3, #1
 8010f52:	d109      	bne.n	8010f68 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010f54:	4601      	mov	r1, r0
 8010f56:	4668      	mov	r0, sp
 8010f58:	f7ff fe06 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010f5c:	f8bd 3000 	ldrh.w	r3, [sp]
 8010f60:	8423      	strh	r3, [r4, #32]
 8010f62:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010f66:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010f68:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8010f6c:	b002      	add	sp, #8
 8010f6e:	bd10      	pop	{r4, pc}

08010f70 <_ZN8touchgfx6ScreenC1Ev>:
 8010f70:	b570      	push	{r4, r5, r6, lr}
 8010f72:	4605      	mov	r5, r0
 8010f74:	4b16      	ldr	r3, [pc, #88]	@ (8010fd0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8010f76:	2101      	movs	r1, #1
 8010f78:	f845 3b04 	str.w	r3, [r5], #4
 8010f7c:	2300      	movs	r3, #0
 8010f7e:	4604      	mov	r4, r0
 8010f80:	8103      	strh	r3, [r0, #8]
 8010f82:	8143      	strh	r3, [r0, #10]
 8010f84:	8183      	strh	r3, [r0, #12]
 8010f86:	81c3      	strh	r3, [r0, #14]
 8010f88:	8203      	strh	r3, [r0, #16]
 8010f8a:	8243      	strh	r3, [r0, #18]
 8010f8c:	8283      	strh	r3, [r0, #20]
 8010f8e:	82c3      	strh	r3, [r0, #22]
 8010f90:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8010f94:	6203      	str	r3, [r0, #32]
 8010f96:	8483      	strh	r3, [r0, #36]	@ 0x24
 8010f98:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8010f9a:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8010f9e:	4a0d      	ldr	r2, [pc, #52]	@ (8010fd4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010fa0:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8010fa4:	6343      	str	r3, [r0, #52]	@ 0x34
 8010fa6:	4b0c      	ldr	r3, [pc, #48]	@ (8010fd8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8010fa8:	6042      	str	r2, [r0, #4]
 8010faa:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010fae:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8010fb0:	4a0a      	ldr	r2, [pc, #40]	@ (8010fdc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8010fb2:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8010fb6:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8010fba:	f9b2 1000 	ldrsh.w	r1, [r2]
 8010fbe:	4628      	mov	r0, r5
 8010fc0:	4798      	blx	r3
 8010fc2:	6863      	ldr	r3, [r4, #4]
 8010fc4:	4628      	mov	r0, r5
 8010fc6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8010fc8:	4631      	mov	r1, r6
 8010fca:	4798      	blx	r3
 8010fcc:	4620      	mov	r0, r4
 8010fce:	bd70      	pop	{r4, r5, r6, pc}
 8010fd0:	08023f88 	.word	0x08023f88
 8010fd4:	08023a4c 	.word	0x08023a4c
 8010fd8:	20002226 	.word	0x20002226
 8010fdc:	20002224 	.word	0x20002224

08010fe0 <_ZN8touchgfx6Screen4drawEv>:
 8010fe0:	b507      	push	{r0, r1, r2, lr}
 8010fe2:	2100      	movs	r1, #0
 8010fe4:	4b08      	ldr	r3, [pc, #32]	@ (8011008 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8010fe6:	9100      	str	r1, [sp, #0]
 8010fe8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010fec:	4b07      	ldr	r3, [pc, #28]	@ (801100c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8010fee:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010ff2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ff6:	4669      	mov	r1, sp
 8010ff8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010ffc:	6803      	ldr	r3, [r0, #0]
 8010ffe:	689b      	ldr	r3, [r3, #8]
 8011000:	4798      	blx	r3
 8011002:	b003      	add	sp, #12
 8011004:	f85d fb04 	ldr.w	pc, [sp], #4
 8011008:	20002224 	.word	0x20002224
 801100c:	20002226 	.word	0x20002226

08011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011014:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011018:	b089      	sub	sp, #36	@ 0x24
 801101a:	2b00      	cmp	r3, #0
 801101c:	4680      	mov	r8, r0
 801101e:	460c      	mov	r4, r1
 8011020:	4615      	mov	r5, r2
 8011022:	dd0e      	ble.n	8011042 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011024:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011028:	2b00      	cmp	r3, #0
 801102a:	dd0a      	ble.n	8011042 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801102c:	4628      	mov	r0, r5
 801102e:	f7ff ff5b 	bl	8010ee8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011032:	4621      	mov	r1, r4
 8011034:	f7fe fa6c 	bl	800f510 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011038:	69eb      	ldr	r3, [r5, #28]
 801103a:	b928      	cbnz	r0, 8011048 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801103c:	461d      	mov	r5, r3
 801103e:	2b00      	cmp	r3, #0
 8011040:	d1f4      	bne.n	801102c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011042:	b009      	add	sp, #36	@ 0x24
 8011044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011048:	ae04      	add	r6, sp, #16
 801104a:	2b00      	cmp	r3, #0
 801104c:	f000 80b5 	beq.w	80111ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011050:	682b      	ldr	r3, [r5, #0]
 8011052:	4629      	mov	r1, r5
 8011054:	68db      	ldr	r3, [r3, #12]
 8011056:	a802      	add	r0, sp, #8
 8011058:	4798      	blx	r3
 801105a:	4628      	mov	r0, r5
 801105c:	f7ff ff60 	bl	8010f20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011060:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011064:	4407      	add	r7, r0
 8011066:	4628      	mov	r0, r5
 8011068:	f7ff ff6e 	bl	8010f48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801106c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011070:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011074:	4418      	add	r0, r3
 8011076:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801107a:	4621      	mov	r1, r4
 801107c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011080:	b23f      	sxth	r7, r7
 8011082:	4630      	mov	r0, r6
 8011084:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011088:	f8ad 3016 	strh.w	r3, [sp, #22]
 801108c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011090:	f7fb f9d8 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8011094:	4628      	mov	r0, r5
 8011096:	f7ff ff27 	bl	8010ee8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801109a:	4602      	mov	r2, r0
 801109c:	e896 0003 	ldmia.w	r6, {r0, r1}
 80110a0:	ab06      	add	r3, sp, #24
 80110a2:	e883 0003 	stmia.w	r3, {r0, r1}
 80110a6:	4611      	mov	r1, r2
 80110a8:	4618      	mov	r0, r3
 80110aa:	f7fb f9cb 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 80110ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80110b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80110b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80110ba:	4299      	cmp	r1, r3
 80110bc:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80110c0:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80110c4:	d10b      	bne.n	80110de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80110c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80110ca:	4552      	cmp	r2, sl
 80110cc:	d107      	bne.n	80110de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80110ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80110d2:	455a      	cmp	r2, fp
 80110d4:	d103      	bne.n	80110de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80110d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80110da:	454a      	cmp	r2, r9
 80110dc:	d06d      	beq.n	80111ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80110de:	f1bb 0f00 	cmp.w	fp, #0
 80110e2:	dd65      	ble.n	80111b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80110e4:	f1b9 0f00 	cmp.w	r9, #0
 80110e8:	dd62      	ble.n	80111b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80110ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80110ee:	fa1f f08a 	uxth.w	r0, sl
 80110f2:	4552      	cmp	r2, sl
 80110f4:	9000      	str	r0, [sp, #0]
 80110f6:	da12      	bge.n	801111e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80110f8:	9301      	str	r3, [sp, #4]
 80110fa:	9b00      	ldr	r3, [sp, #0]
 80110fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011100:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011104:	1a9a      	subs	r2, r3, r2
 8011106:	f8ad 1010 	strh.w	r1, [sp, #16]
 801110a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801110e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011112:	69ea      	ldr	r2, [r5, #28]
 8011114:	4631      	mov	r1, r6
 8011116:	4640      	mov	r0, r8
 8011118:	f7ff ff7a 	bl	8011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801111c:	9b01      	ldr	r3, [sp, #4]
 801111e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011122:	b29f      	uxth	r7, r3
 8011124:	429a      	cmp	r2, r3
 8011126:	da0d      	bge.n	8011144 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011128:	f8ad 2010 	strh.w	r2, [sp, #16]
 801112c:	1aba      	subs	r2, r7, r2
 801112e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011132:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011136:	f8ad 9016 	strh.w	r9, [sp, #22]
 801113a:	69ea      	ldr	r2, [r5, #28]
 801113c:	4631      	mov	r1, r6
 801113e:	4640      	mov	r0, r8
 8011140:	f7ff ff66 	bl	8011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011144:	8822      	ldrh	r2, [r4, #0]
 8011146:	88a3      	ldrh	r3, [r4, #4]
 8011148:	445f      	add	r7, fp
 801114a:	4413      	add	r3, r2
 801114c:	b29b      	uxth	r3, r3
 801114e:	b2bf      	uxth	r7, r7
 8011150:	b23a      	sxth	r2, r7
 8011152:	b219      	sxth	r1, r3
 8011154:	4291      	cmp	r1, r2
 8011156:	dd0d      	ble.n	8011174 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011158:	1bdb      	subs	r3, r3, r7
 801115a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801115e:	f8ad a012 	strh.w	sl, [sp, #18]
 8011162:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011166:	f8ad 9016 	strh.w	r9, [sp, #22]
 801116a:	69ea      	ldr	r2, [r5, #28]
 801116c:	4631      	mov	r1, r6
 801116e:	4640      	mov	r0, r8
 8011170:	f7ff ff4e 	bl	8011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011174:	88e2      	ldrh	r2, [r4, #6]
 8011176:	8863      	ldrh	r3, [r4, #2]
 8011178:	4413      	add	r3, r2
 801117a:	9a00      	ldr	r2, [sp, #0]
 801117c:	b29b      	uxth	r3, r3
 801117e:	444a      	add	r2, r9
 8011180:	fa1f f982 	uxth.w	r9, r2
 8011184:	fa0f f289 	sxth.w	r2, r9
 8011188:	b219      	sxth	r1, r3
 801118a:	428a      	cmp	r2, r1
 801118c:	da15      	bge.n	80111ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801118e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011192:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011196:	eba3 0309 	sub.w	r3, r3, r9
 801119a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801119e:	f8ad 0010 	strh.w	r0, [sp, #16]
 80111a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80111a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80111aa:	69ea      	ldr	r2, [r5, #28]
 80111ac:	4631      	mov	r1, r6
 80111ae:	e001      	b.n	80111b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80111b0:	4621      	mov	r1, r4
 80111b2:	69ea      	ldr	r2, [r5, #28]
 80111b4:	4640      	mov	r0, r8
 80111b6:	f7ff ff2b 	bl	8011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80111ba:	4628      	mov	r0, r5
 80111bc:	f7ff fe94 	bl	8010ee8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80111c0:	4633      	mov	r3, r6
 80111c2:	4602      	mov	r2, r0
 80111c4:	6861      	ldr	r1, [r4, #4]
 80111c6:	6820      	ldr	r0, [r4, #0]
 80111c8:	c303      	stmia	r3!, {r0, r1}
 80111ca:	4611      	mov	r1, r2
 80111cc:	4630      	mov	r0, r6
 80111ce:	f7fb f939 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 80111d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80111d6:	2b00      	cmp	r3, #0
 80111d8:	f77f af33 	ble.w	8011042 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80111dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80111e0:	2b00      	cmp	r3, #0
 80111e2:	f77f af2e 	ble.w	8011042 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80111e6:	4628      	mov	r0, r5
 80111e8:	f7ff fe9a 	bl	8010f20 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80111ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80111f0:	1a18      	subs	r0, r3, r0
 80111f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80111f6:	4628      	mov	r0, r5
 80111f8:	f7ff fea6 	bl	8010f48 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80111fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011200:	4631      	mov	r1, r6
 8011202:	1a18      	subs	r0, r3, r0
 8011204:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011208:	682b      	ldr	r3, [r5, #0]
 801120a:	4628      	mov	r0, r5
 801120c:	689b      	ldr	r3, [r3, #8]
 801120e:	4798      	blx	r3
 8011210:	e717      	b.n	8011042 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011212 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011212:	b570      	push	{r4, r5, r6, lr}
 8011214:	2300      	movs	r3, #0
 8011216:	460c      	mov	r4, r1
 8011218:	b086      	sub	sp, #24
 801121a:	1d06      	adds	r6, r0, #4
 801121c:	4631      	mov	r1, r6
 801121e:	4605      	mov	r5, r0
 8011220:	a802      	add	r0, sp, #8
 8011222:	9301      	str	r3, [sp, #4]
 8011224:	f7ff fca0 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011228:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801122c:	8822      	ldrh	r2, [r4, #0]
 801122e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011232:	1ad2      	subs	r2, r2, r3
 8011234:	8863      	ldrh	r3, [r4, #2]
 8011236:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801123a:	1a5b      	subs	r3, r3, r1
 801123c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011240:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011244:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011248:	f8ad 1016 	strh.w	r1, [sp, #22]
 801124c:	aa01      	add	r2, sp, #4
 801124e:	a904      	add	r1, sp, #16
 8011250:	4630      	mov	r0, r6
 8011252:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011256:	f7fb f9cd 	bl	800c5f4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801125a:	9a01      	ldr	r2, [sp, #4]
 801125c:	b11a      	cbz	r2, 8011266 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801125e:	4621      	mov	r1, r4
 8011260:	4628      	mov	r0, r5
 8011262:	f7ff fed5 	bl	8011010 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011266:	b006      	add	sp, #24
 8011268:	bd70      	pop	{r4, r5, r6, pc}

0801126a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801126a:	b530      	push	{r4, r5, lr}
 801126c:	4602      	mov	r2, r0
 801126e:	b085      	sub	sp, #20
 8011270:	460d      	mov	r5, r1
 8011272:	466b      	mov	r3, sp
 8011274:	4604      	mov	r4, r0
 8011276:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801127a:	6851      	ldr	r1, [r2, #4]
 801127c:	c303      	stmia	r3!, {r0, r1}
 801127e:	4629      	mov	r1, r5
 8011280:	4668      	mov	r0, sp
 8011282:	f7fb f8df 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8011286:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801128a:	b12b      	cbz	r3, 8011298 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801128c:	4669      	mov	r1, sp
 801128e:	4620      	mov	r0, r4
 8011290:	f7ff ffbf 	bl	8011212 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011294:	b005      	add	sp, #20
 8011296:	bd30      	pop	{r4, r5, pc}
 8011298:	3404      	adds	r4, #4
 801129a:	4621      	mov	r1, r4
 801129c:	a802      	add	r0, sp, #8
 801129e:	f7ff fc63 	bl	8010b68 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80112a2:	f8bd 3000 	ldrh.w	r3, [sp]
 80112a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80112aa:	4669      	mov	r1, sp
 80112ac:	1a9b      	subs	r3, r3, r2
 80112ae:	f8ad 3000 	strh.w	r3, [sp]
 80112b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80112b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80112ba:	4620      	mov	r0, r4
 80112bc:	1a9b      	subs	r3, r3, r2
 80112be:	f8ad 3002 	strh.w	r3, [sp, #2]
 80112c2:	f7fb f95e 	bl	800c582 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80112c6:	e7e5      	b.n	8011294 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080112c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80112c8:	460b      	mov	r3, r1
 80112ca:	680a      	ldr	r2, [r1, #0]
 80112cc:	1d01      	adds	r1, r0, #4
 80112ce:	6992      	ldr	r2, [r2, #24]
 80112d0:	4618      	mov	r0, r3
 80112d2:	4710      	bx	r2

080112d4 <_ZN8touchgfx12TextProviderC1Ev>:
 80112d4:	b538      	push	{r3, r4, r5, lr}
 80112d6:	2500      	movs	r5, #0
 80112d8:	2302      	movs	r3, #2
 80112da:	4604      	mov	r4, r0
 80112dc:	e9c0 5500 	strd	r5, r5, [r0]
 80112e0:	7403      	strb	r3, [r0, #16]
 80112e2:	6145      	str	r5, [r0, #20]
 80112e4:	7605      	strb	r5, [r0, #24]
 80112e6:	83c5      	strh	r5, [r0, #30]
 80112e8:	8405      	strh	r5, [r0, #32]
 80112ea:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80112ec:	8705      	strh	r5, [r0, #56]	@ 0x38
 80112ee:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80112f0:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80112f4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80112f8:	220e      	movs	r2, #14
 80112fa:	4629      	mov	r1, r5
 80112fc:	304c      	adds	r0, #76	@ 0x4c
 80112fe:	f010 f8da 	bl	80214b6 <memset>
 8011302:	2301      	movs	r3, #1
 8011304:	4620      	mov	r0, r4
 8011306:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801130a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801130e:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8011312:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011316:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801131a:	f7f8 fba5 	bl	8009a68 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801131e:	4620      	mov	r0, r4
 8011320:	bd38      	pop	{r3, r4, r5, pc}

08011322 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8011322:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011324:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011328:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 801132a:	fab0 f080 	clz	r0, r0
 801132e:	0940      	lsrs	r0, r0, #5
 8011330:	4770      	bx	lr

08011332 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011332:	b530      	push	{r4, r5, lr}
 8011334:	2500      	movs	r5, #0
 8011336:	2401      	movs	r4, #1
 8011338:	6843      	ldr	r3, [r0, #4]
 801133a:	b913      	cbnz	r3, 8011342 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801133c:	6803      	ldr	r3, [r0, #0]
 801133e:	b313      	cbz	r3, 8011386 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011340:	6043      	str	r3, [r0, #4]
 8011342:	7e03      	ldrb	r3, [r0, #24]
 8011344:	b143      	cbz	r3, 8011358 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011346:	6943      	ldr	r3, [r0, #20]
 8011348:	b12b      	cbz	r3, 8011356 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801134a:	881a      	ldrh	r2, [r3, #0]
 801134c:	b11a      	cbz	r2, 8011356 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801134e:	1c9a      	adds	r2, r3, #2
 8011350:	6142      	str	r2, [r0, #20]
 8011352:	8818      	ldrh	r0, [r3, #0]
 8011354:	bd30      	pop	{r4, r5, pc}
 8011356:	7605      	strb	r5, [r0, #24]
 8011358:	6843      	ldr	r3, [r0, #4]
 801135a:	8819      	ldrh	r1, [r3, #0]
 801135c:	b199      	cbz	r1, 8011386 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801135e:	1c9a      	adds	r2, r3, #2
 8011360:	2902      	cmp	r1, #2
 8011362:	6042      	str	r2, [r0, #4]
 8011364:	d1f5      	bne.n	8011352 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011366:	7c03      	ldrb	r3, [r0, #16]
 8011368:	2b01      	cmp	r3, #1
 801136a:	d8e5      	bhi.n	8011338 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801136c:	1c5a      	adds	r2, r3, #1
 801136e:	7402      	strb	r2, [r0, #16]
 8011370:	3302      	adds	r3, #2
 8011372:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011376:	6143      	str	r3, [r0, #20]
 8011378:	2b00      	cmp	r3, #0
 801137a:	d0dd      	beq.n	8011338 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801137c:	881b      	ldrh	r3, [r3, #0]
 801137e:	2b00      	cmp	r3, #0
 8011380:	d0da      	beq.n	8011338 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011382:	7604      	strb	r4, [r0, #24]
 8011384:	e7d8      	b.n	8011338 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011386:	2000      	movs	r0, #0
 8011388:	e7e4      	b.n	8011354 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801138a:	6001      	str	r1, [r0, #0]
 801138c:	2100      	movs	r1, #0
 801138e:	b430      	push	{r4, r5}
 8011390:	6041      	str	r1, [r0, #4]
 8011392:	6815      	ldr	r5, [r2, #0]
 8011394:	6085      	str	r5, [r0, #8]
 8011396:	6852      	ldr	r2, [r2, #4]
 8011398:	6443      	str	r3, [r0, #68]	@ 0x44
 801139a:	9b02      	ldr	r3, [sp, #8]
 801139c:	60c2      	str	r2, [r0, #12]
 801139e:	7401      	strb	r1, [r0, #16]
 80113a0:	6141      	str	r1, [r0, #20]
 80113a2:	7601      	strb	r1, [r0, #24]
 80113a4:	8701      	strh	r1, [r0, #56]	@ 0x38
 80113a6:	8401      	strh	r1, [r0, #32]
 80113a8:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80113ac:	6483      	str	r3, [r0, #72]	@ 0x48
 80113ae:	bc30      	pop	{r4, r5}
 80113b0:	f7f8 bb5a 	b.w	8009a68 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080113b4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80113b4:	b408      	push	{r3}
 80113b6:	b510      	push	{r4, lr}
 80113b8:	b085      	sub	sp, #20
 80113ba:	ac07      	add	r4, sp, #28
 80113bc:	f854 3b04 	ldr.w	r3, [r4], #4
 80113c0:	9300      	str	r3, [sp, #0]
 80113c2:	4613      	mov	r3, r2
 80113c4:	4622      	mov	r2, r4
 80113c6:	9403      	str	r4, [sp, #12]
 80113c8:	f7ff ffdf 	bl	801138a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80113cc:	b005      	add	sp, #20
 80113ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113d2:	b001      	add	sp, #4
 80113d4:	4770      	bx	lr

080113d6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80113d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113d8:	4605      	mov	r5, r0
 80113da:	4608      	mov	r0, r1
 80113dc:	b1e9      	cbz	r1, 801141a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80113de:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80113e2:	460b      	mov	r3, r1
 80113e4:	4622      	mov	r2, r4
 80113e6:	f101 0708 	add.w	r7, r1, #8
 80113ea:	4626      	mov	r6, r4
 80113ec:	6818      	ldr	r0, [r3, #0]
 80113ee:	6859      	ldr	r1, [r3, #4]
 80113f0:	3308      	adds	r3, #8
 80113f2:	c603      	stmia	r6!, {r0, r1}
 80113f4:	42bb      	cmp	r3, r7
 80113f6:	4634      	mov	r4, r6
 80113f8:	d1f7      	bne.n	80113ea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80113fa:	6818      	ldr	r0, [r3, #0]
 80113fc:	6030      	str	r0, [r6, #0]
 80113fe:	4610      	mov	r0, r2
 8011400:	889b      	ldrh	r3, [r3, #4]
 8011402:	80b3      	strh	r3, [r6, #4]
 8011404:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011408:	015b      	lsls	r3, r3, #5
 801140a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801140e:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011412:	430b      	orrs	r3, r1
 8011414:	425b      	negs	r3, r3
 8011416:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801141a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801141c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801141c:	b538      	push	{r3, r4, r5, lr}
 801141e:	460c      	mov	r4, r1
 8011420:	6811      	ldr	r1, [r2, #0]
 8011422:	4610      	mov	r0, r2
 8011424:	68cd      	ldr	r5, [r1, #12]
 8011426:	4619      	mov	r1, r3
 8011428:	47a8      	blx	r5
 801142a:	2800      	cmp	r0, #0
 801142c:	bf08      	it	eq
 801142e:	4620      	moveq	r0, r4
 8011430:	bd38      	pop	{r3, r4, r5, pc}
	...

08011434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011438:	468c      	mov	ip, r1
 801143a:	4605      	mov	r5, r0
 801143c:	4614      	mov	r4, r2
 801143e:	b942      	cbnz	r2, 8011452 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011440:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011444:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011448:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801144c:	4620      	mov	r0, r4
 801144e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011452:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011456:	7b50      	ldrb	r0, [r2, #13]
 8011458:	8893      	ldrh	r3, [r2, #4]
 801145a:	0106      	lsls	r6, r0, #4
 801145c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011460:	79e6      	ldrb	r6, [r4, #7]
 8011462:	4316      	orrs	r6, r2
 8011464:	185a      	adds	r2, r3, r1
 8011466:	b291      	uxth	r1, r2
 8011468:	291d      	cmp	r1, #29
 801146a:	b2b7      	uxth	r7, r6
 801146c:	d87d      	bhi.n	801156a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 801146e:	2201      	movs	r2, #1
 8011470:	408a      	lsls	r2, r1
 8011472:	498a      	ldr	r1, [pc, #552]	@ (801169c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011474:	10f6      	asrs	r6, r6, #3
 8011476:	420a      	tst	r2, r1
 8011478:	d12d      	bne.n	80114d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 801147a:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801147e:	d074      	beq.n	801156a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 8011480:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011484:	4623      	mov	r3, r4
 8011486:	f104 0e08 	add.w	lr, r4, #8
 801148a:	4614      	mov	r4, r2
 801148c:	4694      	mov	ip, r2
 801148e:	6818      	ldr	r0, [r3, #0]
 8011490:	6859      	ldr	r1, [r3, #4]
 8011492:	3308      	adds	r3, #8
 8011494:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011498:	4573      	cmp	r3, lr
 801149a:	4662      	mov	r2, ip
 801149c:	d1f6      	bne.n	801148c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 801149e:	6818      	ldr	r0, [r3, #0]
 80114a0:	f8cc 0000 	str.w	r0, [ip]
 80114a4:	889b      	ldrh	r3, [r3, #4]
 80114a6:	f8ac 3004 	strh.w	r3, [ip, #4]
 80114aa:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80114ae:	b2b3      	uxth	r3, r6
 80114b0:	1aca      	subs	r2, r1, r3
 80114b2:	b292      	uxth	r2, r2
 80114b4:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80114b8:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80114bc:	10d2      	asrs	r2, r2, #3
 80114be:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80114c2:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80114c6:	4302      	orrs	r2, r0
 80114c8:	1bcf      	subs	r7, r1, r7
 80114ca:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80114ce:	1afb      	subs	r3, r7, r3
 80114d0:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80114d4:	e7ba      	b.n	801144c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80114d6:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80114da:	4623      	mov	r3, r4
 80114dc:	f104 0808 	add.w	r8, r4, #8
 80114e0:	4614      	mov	r4, r2
 80114e2:	4696      	mov	lr, r2
 80114e4:	6818      	ldr	r0, [r3, #0]
 80114e6:	6859      	ldr	r1, [r3, #4]
 80114e8:	3308      	adds	r3, #8
 80114ea:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80114ee:	4543      	cmp	r3, r8
 80114f0:	4672      	mov	r2, lr
 80114f2:	d1f6      	bne.n	80114e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xae>
 80114f4:	6818      	ldr	r0, [r3, #0]
 80114f6:	f8ce 0000 	str.w	r0, [lr]
 80114fa:	889b      	ldrh	r3, [r3, #4]
 80114fc:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011500:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011502:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011506:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011508:	f640 6333 	movw	r3, #3635	@ 0xe33
 801150c:	4299      	cmp	r1, r3
 801150e:	d111      	bne.n	8011534 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x100>
 8011510:	f8dc 3000 	ldr.w	r3, [ip]
 8011514:	4660      	mov	r0, ip
 8011516:	68db      	ldr	r3, [r3, #12]
 8011518:	4798      	blx	r3
 801151a:	7b41      	ldrb	r1, [r0, #13]
 801151c:	00cb      	lsls	r3, r1, #3
 801151e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011522:	7a03      	ldrb	r3, [r0, #8]
 8011524:	4313      	orrs	r3, r2
 8011526:	064a      	lsls	r2, r1, #25
 8011528:	bf44      	itt	mi
 801152a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801152e:	b21b      	sxthmi	r3, r3
 8011530:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011534:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011538:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 801153c:	443b      	add	r3, r7
 801153e:	4433      	add	r3, r6
 8011540:	b29b      	uxth	r3, r3
 8011542:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011546:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 801154a:	10db      	asrs	r3, r3, #3
 801154c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011550:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011554:	4313      	orrs	r3, r2
 8011556:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801155a:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801155e:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011562:	1a9b      	subs	r3, r3, r2
 8011564:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011568:	e770      	b.n	801144c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801156a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801156e:	f023 0204 	bic.w	r2, r3, #4
 8011572:	428a      	cmp	r2, r1
 8011574:	d003      	beq.n	801157e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14a>
 8011576:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801157a:	4293      	cmp	r3, r2
 801157c:	d137      	bne.n	80115ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 801157e:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011582:	4622      	mov	r2, r4
 8011584:	f104 0808 	add.w	r8, r4, #8
 8011588:	4634      	mov	r4, r6
 801158a:	46b6      	mov	lr, r6
 801158c:	6810      	ldr	r0, [r2, #0]
 801158e:	6851      	ldr	r1, [r2, #4]
 8011590:	3208      	adds	r2, #8
 8011592:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011596:	4542      	cmp	r2, r8
 8011598:	4676      	mov	r6, lr
 801159a:	d1f6      	bne.n	801158a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 801159c:	6810      	ldr	r0, [r2, #0]
 801159e:	3b01      	subs	r3, #1
 80115a0:	f8ce 0000 	str.w	r0, [lr]
 80115a4:	8892      	ldrh	r2, [r2, #4]
 80115a6:	b29b      	uxth	r3, r3
 80115a8:	f8ae 2004 	strh.w	r2, [lr, #4]
 80115ac:	4621      	mov	r1, r4
 80115ae:	4662      	mov	r2, ip
 80115b0:	4628      	mov	r0, r5
 80115b2:	f7ff ff33 	bl	801141c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80115b6:	7b41      	ldrb	r1, [r0, #13]
 80115b8:	00cb      	lsls	r3, r1, #3
 80115ba:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80115be:	7a03      	ldrb	r3, [r0, #8]
 80115c0:	0648      	lsls	r0, r1, #25
 80115c2:	ea43 0302 	orr.w	r3, r3, r2
 80115c6:	bf44      	itt	mi
 80115c8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80115cc:	b21b      	sxthmi	r3, r3
 80115ce:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80115d2:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80115d6:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80115da:	005b      	lsls	r3, r3, #1
 80115dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80115e0:	4313      	orrs	r3, r2
 80115e2:	115a      	asrs	r2, r3, #5
 80115e4:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80115e8:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80115ec:	e046      	b.n	801167c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x248>
 80115ee:	00c2      	lsls	r2, r0, #3
 80115f0:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80115f4:	7a22      	ldrb	r2, [r4, #8]
 80115f6:	430a      	orrs	r2, r1
 80115f8:	0641      	lsls	r1, r0, #25
 80115fa:	f640 6109 	movw	r1, #3593	@ 0xe09
 80115fe:	bf44      	itt	mi
 8011600:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8011604:	b212      	sxthmi	r2, r2
 8011606:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801160a:	f023 0210 	bic.w	r2, r3, #16
 801160e:	428a      	cmp	r2, r1
 8011610:	d003      	beq.n	801161a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e6>
 8011612:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011616:	4293      	cmp	r3, r2
 8011618:	d13d      	bne.n	8011696 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x262>
 801161a:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801161e:	4696      	mov	lr, r2
 8011620:	f104 0808 	add.w	r8, r4, #8
 8011624:	4616      	mov	r6, r2
 8011626:	6820      	ldr	r0, [r4, #0]
 8011628:	6861      	ldr	r1, [r4, #4]
 801162a:	3408      	adds	r4, #8
 801162c:	c603      	stmia	r6!, {r0, r1}
 801162e:	4544      	cmp	r4, r8
 8011630:	4632      	mov	r2, r6
 8011632:	d1f7      	bne.n	8011624 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f0>
 8011634:	6820      	ldr	r0, [r4, #0]
 8011636:	6030      	str	r0, [r6, #0]
 8011638:	88a1      	ldrh	r1, [r4, #4]
 801163a:	4628      	mov	r0, r5
 801163c:	80b1      	strh	r1, [r6, #4]
 801163e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8011642:	4671      	mov	r1, lr
 8011644:	0076      	lsls	r6, r6, #1
 8011646:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801164a:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801164e:	4674      	mov	r4, lr
 8011650:	4316      	orrs	r6, r2
 8011652:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011656:	4293      	cmp	r3, r2
 8011658:	bf1a      	itte	ne
 801165a:	f103 33ff 	addne.w	r3, r3, #4294967295
 801165e:	b29b      	uxthne	r3, r3
 8011660:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011664:	4662      	mov	r2, ip
 8011666:	f7ff fed9 	bl	801141c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801166a:	7b43      	ldrb	r3, [r0, #13]
 801166c:	7a82      	ldrb	r2, [r0, #10]
 801166e:	005b      	lsls	r3, r3, #1
 8011670:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011674:	4313      	orrs	r3, r2
 8011676:	1af6      	subs	r6, r6, r3
 8011678:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 801167c:	7b61      	ldrb	r1, [r4, #13]
 801167e:	00cb      	lsls	r3, r1, #3
 8011680:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011684:	7a23      	ldrb	r3, [r4, #8]
 8011686:	4313      	orrs	r3, r2
 8011688:	064a      	lsls	r2, r1, #25
 801168a:	bf44      	itt	mi
 801168c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011690:	b21b      	sxthmi	r3, r3
 8011692:	1bdb      	subs	r3, r3, r7
 8011694:	e71c      	b.n	80114d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 8011696:	2300      	movs	r3, #0
 8011698:	e7a6      	b.n	80115e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b4>
 801169a:	bf00      	nop
 801169c:	3fc00079 	.word	0x3fc00079

080116a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80116a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80116a4:	4604      	mov	r4, r0
 80116a6:	b942      	cbnz	r2, 80116ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80116a8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80116ac:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80116b0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80116b4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80116b8:	e047      	b.n	801174a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80116ba:	7b51      	ldrb	r1, [r2, #13]
 80116bc:	8893      	ldrh	r3, [r2, #4]
 80116be:	010d      	lsls	r5, r1, #4
 80116c0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80116c4:	79d5      	ldrb	r5, [r2, #7]
 80116c6:	4305      	orrs	r5, r0
 80116c8:	2d04      	cmp	r5, #4
 80116ca:	bfcc      	ite	gt
 80116cc:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80116d0:	f04f 0e01 	movle.w	lr, #1
 80116d4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80116d8:	f200 80ab 	bhi.w	8011832 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80116dc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80116e0:	4283      	cmp	r3, r0
 80116e2:	d216      	bcs.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80116e4:	f240 605b 	movw	r0, #1627	@ 0x65b
 80116e8:	4283      	cmp	r3, r0
 80116ea:	d859      	bhi.n	80117a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80116ec:	f240 6057 	movw	r0, #1623	@ 0x657
 80116f0:	4283      	cmp	r3, r0
 80116f2:	d20e      	bcs.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80116f4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80116f8:	d24a      	bcs.n	8011790 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80116fa:	f240 604e 	movw	r0, #1614	@ 0x64e
 80116fe:	4283      	cmp	r3, r0
 8011700:	d207      	bcs.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011702:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011706:	4283      	cmp	r3, r0
 8011708:	d02a      	beq.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801170a:	d821      	bhi.n	8011750 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801170c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011710:	d35b      	bcc.n	80117ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011712:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011716:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801171a:	f040 80d0 	bne.w	80118be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801171e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011722:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011726:	f040 80ca 	bne.w	80118be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801172a:	00cb      	lsls	r3, r1, #3
 801172c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011730:	7a13      	ldrb	r3, [r2, #8]
 8011732:	0649      	lsls	r1, r1, #25
 8011734:	ea43 0300 	orr.w	r3, r3, r0
 8011738:	bf44      	itt	mi
 801173a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801173e:	b21b      	sxthmi	r3, r3
 8011740:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011744:	1b5d      	subs	r5, r3, r5
 8011746:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801174a:	4610      	mov	r0, r2
 801174c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011750:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011754:	4283      	cmp	r3, r0
 8011756:	d338      	bcc.n	80117ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011758:	f240 604c 	movw	r0, #1612	@ 0x64c
 801175c:	4283      	cmp	r3, r0
 801175e:	d9d8      	bls.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011760:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011764:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011768:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801176c:	f040 80f2 	bne.w	8011954 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011770:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011774:	f040 80ee 	bne.w	8011954 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8011778:	00cb      	lsls	r3, r1, #3
 801177a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801177e:	7a13      	ldrb	r3, [r2, #8]
 8011780:	064e      	lsls	r6, r1, #25
 8011782:	ea43 0300 	orr.w	r3, r3, r0
 8011786:	bf44      	itt	mi
 8011788:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801178c:	b21b      	sxthmi	r3, r3
 801178e:	e7d9      	b.n	8011744 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011790:	f240 6054 	movw	r0, #1620	@ 0x654
 8011794:	4283      	cmp	r3, r0
 8011796:	d8e3      	bhi.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011798:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801179c:	d9e0      	bls.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801179e:	e7b8      	b.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80117a0:	f240 6074 	movw	r0, #1652	@ 0x674
 80117a4:	4283      	cmp	r3, r0
 80117a6:	d0b4      	beq.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80117a8:	d82d      	bhi.n	8011806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80117aa:	f240 605e 	movw	r0, #1630	@ 0x65e
 80117ae:	4283      	cmp	r3, r0
 80117b0:	d804      	bhi.n	80117bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80117b2:	f240 605d 	movw	r0, #1629	@ 0x65d
 80117b6:	4283      	cmp	r3, r0
 80117b8:	d3d2      	bcc.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80117ba:	e7aa      	b.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80117bc:	f240 605f 	movw	r0, #1631	@ 0x65f
 80117c0:	4283      	cmp	r3, r0
 80117c2:	d0cd      	beq.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80117c4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80117c8:	d0a3      	beq.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80117ca:	00cb      	lsls	r3, r1, #3
 80117cc:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80117d0:	7a13      	ldrb	r3, [r2, #8]
 80117d2:	0649      	lsls	r1, r1, #25
 80117d4:	ea43 0300 	orr.w	r3, r3, r0
 80117d8:	bf44      	itt	mi
 80117da:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80117de:	b21b      	sxthmi	r3, r3
 80117e0:	1b5d      	subs	r5, r3, r5
 80117e2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80117e6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80117ea:	7b53      	ldrb	r3, [r2, #13]
 80117ec:	015b      	lsls	r3, r3, #5
 80117ee:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80117f2:	7993      	ldrb	r3, [r2, #6]
 80117f4:	430b      	orrs	r3, r1
 80117f6:	2105      	movs	r1, #5
 80117f8:	005b      	lsls	r3, r3, #1
 80117fa:	fb93 f3f1 	sdiv	r3, r3, r1
 80117fe:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011802:	440b      	add	r3, r1
 8011804:	e756      	b.n	80116b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011806:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801180a:	4283      	cmp	r3, r0
 801180c:	d809      	bhi.n	8011822 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801180e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011812:	4283      	cmp	r3, r0
 8011814:	f4bf af7d 	bcs.w	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011818:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 801181c:	2b05      	cmp	r3, #5
 801181e:	d8d4      	bhi.n	80117ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011820:	e777      	b.n	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011822:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011826:	4283      	cmp	r3, r0
 8011828:	d09a      	beq.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801182a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801182e:	4283      	cmp	r3, r0
 8011830:	e7ca      	b.n	80117c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011832:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011836:	d22b      	bcs.n	8011890 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011838:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 801183c:	4283      	cmp	r3, r0
 801183e:	d28f      	bcs.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011840:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011844:	4283      	cmp	r3, r0
 8011846:	d816      	bhi.n	8011876 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011848:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 801184c:	4283      	cmp	r3, r0
 801184e:	f4bf af60 	bcs.w	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011852:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011856:	4283      	cmp	r3, r0
 8011858:	d80a      	bhi.n	8011870 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801185a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801185e:	4283      	cmp	r3, r0
 8011860:	f4bf af57 	bcs.w	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011864:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011868:	4283      	cmp	r3, r0
 801186a:	f43f af79 	beq.w	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801186e:	e7ac      	b.n	80117ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011870:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011874:	e7f8      	b.n	8011868 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011876:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801187a:	4283      	cmp	r3, r0
 801187c:	d802      	bhi.n	8011884 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801187e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011882:	e798      	b.n	80117b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011884:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011888:	4283      	cmp	r3, r0
 801188a:	f47f af42 	bne.w	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801188e:	e767      	b.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011890:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011894:	4283      	cmp	r3, r0
 8011896:	f43f af63 	beq.w	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801189a:	d802      	bhi.n	80118a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801189c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80118a0:	e7f2      	b.n	8011888 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80118a2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80118a6:	4283      	cmp	r3, r0
 80118a8:	d805      	bhi.n	80118b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80118aa:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80118ae:	4283      	cmp	r3, r0
 80118b0:	f4ff af2f 	bcc.w	8011712 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80118b4:	e754      	b.n	8011760 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80118b6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80118ba:	4283      	cmp	r3, r0
 80118bc:	e7af      	b.n	801181e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80118be:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80118c2:	4617      	mov	r7, r2
 80118c4:	4666      	mov	r6, ip
 80118c6:	f102 0808 	add.w	r8, r2, #8
 80118ca:	46e6      	mov	lr, ip
 80118cc:	6838      	ldr	r0, [r7, #0]
 80118ce:	6879      	ldr	r1, [r7, #4]
 80118d0:	3708      	adds	r7, #8
 80118d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80118d6:	4547      	cmp	r7, r8
 80118d8:	46f4      	mov	ip, lr
 80118da:	d1f6      	bne.n	80118ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80118dc:	6838      	ldr	r0, [r7, #0]
 80118de:	f8ce 0000 	str.w	r0, [lr]
 80118e2:	88b9      	ldrh	r1, [r7, #4]
 80118e4:	f8ae 1004 	strh.w	r1, [lr, #4]
 80118e8:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80118ec:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80118f0:	d009      	beq.n	8011906 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80118f2:	7b51      	ldrb	r1, [r2, #13]
 80118f4:	7992      	ldrb	r2, [r2, #6]
 80118f6:	0149      	lsls	r1, r1, #5
 80118f8:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80118fc:	4311      	orrs	r1, r2
 80118fe:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011902:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011906:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801190a:	b2ad      	uxth	r5, r5
 801190c:	d00d      	beq.n	801192a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801190e:	442b      	add	r3, r5
 8011910:	b29b      	uxth	r3, r3
 8011912:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011916:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801191a:	10db      	asrs	r3, r3, #3
 801191c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011920:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011924:	4313      	orrs	r3, r2
 8011926:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801192a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801192e:	00cb      	lsls	r3, r1, #3
 8011930:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011934:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011938:	064f      	lsls	r7, r1, #25
 801193a:	ea43 0302 	orr.w	r3, r3, r2
 801193e:	bf44      	itt	mi
 8011940:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011944:	b21b      	sxthmi	r3, r3
 8011946:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801194a:	1b5b      	subs	r3, r3, r5
 801194c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8011950:	4632      	mov	r2, r6
 8011952:	e6fa      	b.n	801174a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011954:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011958:	4617      	mov	r7, r2
 801195a:	4666      	mov	r6, ip
 801195c:	f102 0908 	add.w	r9, r2, #8
 8011960:	46e0      	mov	r8, ip
 8011962:	6838      	ldr	r0, [r7, #0]
 8011964:	6879      	ldr	r1, [r7, #4]
 8011966:	3708      	adds	r7, #8
 8011968:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801196c:	454f      	cmp	r7, r9
 801196e:	46c4      	mov	ip, r8
 8011970:	d1f6      	bne.n	8011960 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8011972:	6838      	ldr	r0, [r7, #0]
 8011974:	f8c8 0000 	str.w	r0, [r8]
 8011978:	88b9      	ldrh	r1, [r7, #4]
 801197a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801197e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011982:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011986:	d009      	beq.n	801199c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8011988:	7b51      	ldrb	r1, [r2, #13]
 801198a:	7992      	ldrb	r2, [r2, #6]
 801198c:	0149      	lsls	r1, r1, #5
 801198e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011992:	4311      	orrs	r1, r2
 8011994:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011998:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801199c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80119a0:	d00e      	beq.n	80119c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80119a2:	eba3 030e 	sub.w	r3, r3, lr
 80119a6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80119aa:	b29b      	uxth	r3, r3
 80119ac:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80119b0:	10db      	asrs	r3, r3, #3
 80119b2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80119b6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80119ba:	4313      	orrs	r3, r2
 80119bc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80119c0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80119c4:	00cb      	lsls	r3, r1, #3
 80119c6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80119ca:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80119ce:	0648      	lsls	r0, r1, #25
 80119d0:	ea43 0302 	orr.w	r3, r3, r2
 80119d4:	bf44      	itt	mi
 80119d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80119da:	b21b      	sxthmi	r3, r3
 80119dc:	1b5d      	subs	r5, r3, r5
 80119de:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80119e2:	e7b5      	b.n	8011950 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080119e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80119e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119e8:	461e      	mov	r6, r3
 80119ea:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80119ec:	4604      	mov	r4, r0
 80119ee:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80119f2:	4617      	mov	r7, r2
 80119f4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80119f8:	f7f7 ff90 	bl	800991c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80119fc:	4605      	mov	r5, r0
 80119fe:	b918      	cbnz	r0, 8011a08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011a00:	6030      	str	r0, [r6, #0]
 8011a02:	4628      	mov	r0, r5
 8011a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a08:	683b      	ldr	r3, [r7, #0]
 8011a0a:	4601      	mov	r1, r0
 8011a0c:	68db      	ldr	r3, [r3, #12]
 8011a0e:	4638      	mov	r0, r7
 8011a10:	4798      	blx	r3
 8011a12:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8011a16:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8011a1a:	4602      	mov	r2, r0
 8011a1c:	6030      	str	r0, [r6, #0]
 8011a1e:	d213      	bcs.n	8011a48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011a20:	4643      	mov	r3, r8
 8011a22:	4639      	mov	r1, r7
 8011a24:	4620      	mov	r0, r4
 8011a26:	f7ff fe3b 	bl	80116a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011a2a:	6030      	str	r0, [r6, #0]
 8011a2c:	6833      	ldr	r3, [r6, #0]
 8011a2e:	b143      	cbz	r3, 8011a42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011a30:	7b5a      	ldrb	r2, [r3, #13]
 8011a32:	7a9b      	ldrb	r3, [r3, #10]
 8011a34:	0052      	lsls	r2, r2, #1
 8011a36:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8011a3a:	4313      	orrs	r3, r2
 8011a3c:	bf0c      	ite	eq
 8011a3e:	2301      	moveq	r3, #1
 8011a40:	2300      	movne	r3, #0
 8011a42:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011a46:	e7dc      	b.n	8011a02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011a48:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8011a4c:	b29b      	uxth	r3, r3
 8011a4e:	2b7f      	cmp	r3, #127	@ 0x7f
 8011a50:	d804      	bhi.n	8011a5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011a52:	4639      	mov	r1, r7
 8011a54:	4620      	mov	r0, r4
 8011a56:	f7ff fced 	bl	8011434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011a5a:	e7e6      	b.n	8011a2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011a5c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8011a60:	2b00      	cmp	r3, #0
 8011a62:	d0e3      	beq.n	8011a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011a64:	f640 1302 	movw	r3, #2306	@ 0x902
 8011a68:	429d      	cmp	r5, r3
 8011a6a:	d1df      	bne.n	8011a2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011a6c:	4601      	mov	r1, r0
 8011a6e:	4620      	mov	r0, r4
 8011a70:	f7ff fcb1 	bl	80113d6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011a74:	e7d9      	b.n	8011a2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011a76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011a76:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011a7a:	461e      	mov	r6, r3
 8011a7c:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011a7e:	4604      	mov	r4, r0
 8011a80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011a84:	4617      	mov	r7, r2
 8011a86:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011a8a:	f7f7 ff47 	bl	800991c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011a8e:	4605      	mov	r5, r0
 8011a90:	b918      	cbnz	r0, 8011a9a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8011a92:	6030      	str	r0, [r6, #0]
 8011a94:	4628      	mov	r0, r5
 8011a96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011a9a:	683b      	ldr	r3, [r7, #0]
 8011a9c:	4601      	mov	r1, r0
 8011a9e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8011aa2:	4638      	mov	r0, r7
 8011aa4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011aa8:	47c8      	blx	r9
 8011aaa:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8011aae:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8011ab2:	4602      	mov	r2, r0
 8011ab4:	6030      	str	r0, [r6, #0]
 8011ab6:	d213      	bcs.n	8011ae0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011ab8:	4643      	mov	r3, r8
 8011aba:	4639      	mov	r1, r7
 8011abc:	4620      	mov	r0, r4
 8011abe:	f7ff fdef 	bl	80116a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011ac2:	6030      	str	r0, [r6, #0]
 8011ac4:	6833      	ldr	r3, [r6, #0]
 8011ac6:	b143      	cbz	r3, 8011ada <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011ac8:	7b5a      	ldrb	r2, [r3, #13]
 8011aca:	7a9b      	ldrb	r3, [r3, #10]
 8011acc:	0052      	lsls	r2, r2, #1
 8011ace:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8011ad2:	4313      	orrs	r3, r2
 8011ad4:	bf0c      	ite	eq
 8011ad6:	2301      	moveq	r3, #1
 8011ad8:	2300      	movne	r3, #0
 8011ada:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011ade:	e7d9      	b.n	8011a94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8011ae0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8011ae4:	b29b      	uxth	r3, r3
 8011ae6:	2b7f      	cmp	r3, #127	@ 0x7f
 8011ae8:	d804      	bhi.n	8011af4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8011aea:	4639      	mov	r1, r7
 8011aec:	4620      	mov	r0, r4
 8011aee:	f7ff fca1 	bl	8011434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011af2:	e7e6      	b.n	8011ac2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8011af4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8011af8:	2b00      	cmp	r3, #0
 8011afa:	d0e3      	beq.n	8011ac4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011afc:	f640 1302 	movw	r3, #2306	@ 0x902
 8011b00:	429d      	cmp	r5, r3
 8011b02:	d1df      	bne.n	8011ac4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011b04:	4601      	mov	r1, r0
 8011b06:	4620      	mov	r0, r4
 8011b08:	f7ff fc65 	bl	80113d6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011b0c:	e7d9      	b.n	8011ac2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08011b0e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011b0e:	b510      	push	{r4, lr}
 8011b10:	4604      	mov	r4, r0
 8011b12:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8011b16:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011b18:	b1f1      	cbz	r1, 8011b58 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011b1a:	2b0a      	cmp	r3, #10
 8011b1c:	d02f      	beq.n	8011b7e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8011b1e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8011b20:	3901      	subs	r1, #1
 8011b22:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8011b26:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8011b28:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8011b2c:	1c51      	adds	r1, r2, #1
 8011b2e:	b289      	uxth	r1, r1
 8011b30:	2901      	cmp	r1, #1
 8011b32:	bf84      	itt	hi
 8011b34:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8011b38:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8011b3a:	f103 0201 	add.w	r2, r3, #1
 8011b3e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011b40:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011b42:	bf98      	it	ls
 8011b44:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8011b46:	4413      	add	r3, r2
 8011b48:	b29b      	uxth	r3, r3
 8011b4a:	2b09      	cmp	r3, #9
 8011b4c:	bf88      	it	hi
 8011b4e:	3b0a      	subhi	r3, #10
 8011b50:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011b54:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011b56:	e7dc      	b.n	8011b12 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011b58:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011b5a:	2b0a      	cmp	r3, #10
 8011b5c:	d00f      	beq.n	8011b7e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8011b5e:	4620      	mov	r0, r4
 8011b60:	f7ff fbe7 	bl	8011332 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8011b64:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011b66:	1c5a      	adds	r2, r3, #1
 8011b68:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011b6a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011b6c:	4413      	add	r3, r2
 8011b6e:	b29b      	uxth	r3, r3
 8011b70:	2b09      	cmp	r3, #9
 8011b72:	bf88      	it	hi
 8011b74:	3b0a      	subhi	r3, #10
 8011b76:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011b7a:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011b7c:	e7ec      	b.n	8011b58 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011b7e:	bd10      	pop	{r4, pc}

08011b80 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011b80:	b538      	push	{r3, r4, r5, lr}
 8011b82:	4604      	mov	r4, r0
 8011b84:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011b86:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011b8a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011b8c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8011b8e:	3a01      	subs	r2, #1
 8011b90:	8702      	strh	r2, [r0, #56]	@ 0x38
 8011b92:	1c5a      	adds	r2, r3, #1
 8011b94:	b292      	uxth	r2, r2
 8011b96:	2a09      	cmp	r2, #9
 8011b98:	bf86      	itte	hi
 8011b9a:	3b09      	subhi	r3, #9
 8011b9c:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8011b9e:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8011ba0:	f7ff ffb5 	bl	8011b0e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011ba4:	8c23      	ldrh	r3, [r4, #32]
 8011ba6:	2b01      	cmp	r3, #1
 8011ba8:	bf9c      	itt	ls
 8011baa:	3301      	addls	r3, #1
 8011bac:	8423      	strhls	r3, [r4, #32]
 8011bae:	8be3      	ldrh	r3, [r4, #30]
 8011bb0:	b90b      	cbnz	r3, 8011bb6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8011bb2:	2302      	movs	r3, #2
 8011bb4:	83e3      	strh	r3, [r4, #30]
 8011bb6:	8be3      	ldrh	r3, [r4, #30]
 8011bb8:	4628      	mov	r0, r5
 8011bba:	3b01      	subs	r3, #1
 8011bbc:	b29b      	uxth	r3, r3
 8011bbe:	83e3      	strh	r3, [r4, #30]
 8011bc0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011bc4:	8365      	strh	r5, [r4, #26]
 8011bc6:	bd38      	pop	{r3, r4, r5, pc}

08011bc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011bc8:	428a      	cmp	r2, r1
 8011bca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011bce:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8011bd0:	d931      	bls.n	8011c36 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8011bd2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8011bd4:	1a54      	subs	r4, r2, r1
 8011bd6:	19ee      	adds	r6, r5, r7
 8011bd8:	3e01      	subs	r6, #1
 8011bda:	fa1f fe84 	uxth.w	lr, r4
 8011bde:	b2b4      	uxth	r4, r6
 8011be0:	eba4 090e 	sub.w	r9, r4, lr
 8011be4:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8011be8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8011bec:	fa1f f989 	uxth.w	r9, r9
 8011bf0:	2c09      	cmp	r4, #9
 8011bf2:	4626      	mov	r6, r4
 8011bf4:	bf88      	it	hi
 8011bf6:	f1a4 060a 	subhi.w	r6, r4, #10
 8011bfa:	f1bc 0f00 	cmp.w	ip, #0
 8011bfe:	bf08      	it	eq
 8011c00:	f04f 0c02 	moveq.w	ip, #2
 8011c04:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011c08:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011c0c:	3c01      	subs	r4, #1
 8011c0e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8011c12:	fa1f fc8c 	uxth.w	ip, ip
 8011c16:	b2a4      	uxth	r4, r4
 8011c18:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8011c1c:	454c      	cmp	r4, r9
 8011c1e:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8011c22:	d1e5      	bne.n	8011bf0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8011c24:	eba5 050e 	sub.w	r5, r5, lr
 8011c28:	eb0e 0408 	add.w	r4, lr, r8
 8011c2c:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011c2e:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8011c32:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8011c36:	250a      	movs	r5, #10
 8011c38:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8011c3a:	1a64      	subs	r4, r4, r1
 8011c3c:	4439      	add	r1, r7
 8011c3e:	b289      	uxth	r1, r1
 8011c40:	2909      	cmp	r1, #9
 8011c42:	bf88      	it	hi
 8011c44:	390a      	subhi	r1, #10
 8011c46:	8704      	strh	r4, [r0, #56]	@ 0x38
 8011c48:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011c4a:	b18a      	cbz	r2, 8011c70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8011c4c:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8011c4e:	3a01      	subs	r2, #1
 8011c50:	3101      	adds	r1, #1
 8011c52:	b292      	uxth	r2, r2
 8011c54:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011c58:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011c5a:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011c5c:	b901      	cbnz	r1, 8011c60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8011c5e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011c60:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011c62:	3901      	subs	r1, #1
 8011c64:	b289      	uxth	r1, r1
 8011c66:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011c68:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011c6c:	844c      	strh	r4, [r1, #34]	@ 0x22
 8011c6e:	e7ec      	b.n	8011c4a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8011c70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c74:	f7ff bf4b 	b.w	8011b0e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011c78 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011c78:	b570      	push	{r4, r5, r6, lr}
 8011c7a:	2500      	movs	r5, #0
 8011c7c:	4295      	cmp	r5, r2
 8011c7e:	d011      	beq.n	8011ca4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011c80:	8bc4      	ldrh	r4, [r0, #30]
 8011c82:	f831 6b02 	ldrh.w	r6, [r1], #2
 8011c86:	4414      	add	r4, r2
 8011c88:	3c01      	subs	r4, #1
 8011c8a:	1b64      	subs	r4, r4, r5
 8011c8c:	b2a4      	uxth	r4, r4
 8011c8e:	2c01      	cmp	r4, #1
 8011c90:	bf88      	it	hi
 8011c92:	3c02      	subhi	r4, #2
 8011c94:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011c98:	8b64      	ldrh	r4, [r4, #26]
 8011c9a:	42b4      	cmp	r4, r6
 8011c9c:	d117      	bne.n	8011cce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011c9e:	3501      	adds	r5, #1
 8011ca0:	b2ad      	uxth	r5, r5
 8011ca2:	e7eb      	b.n	8011c7c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8011ca4:	2400      	movs	r4, #0
 8011ca6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011caa:	4413      	add	r3, r2
 8011cac:	b2a2      	uxth	r2, r4
 8011cae:	429a      	cmp	r2, r3
 8011cb0:	da0f      	bge.n	8011cd2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8011cb2:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8011cb4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011cb8:	4432      	add	r2, r6
 8011cba:	b292      	uxth	r2, r2
 8011cbc:	2a09      	cmp	r2, #9
 8011cbe:	bf88      	it	hi
 8011cc0:	3a0a      	subhi	r2, #10
 8011cc2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011cc6:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011cc8:	3401      	adds	r4, #1
 8011cca:	42aa      	cmp	r2, r5
 8011ccc:	d0ee      	beq.n	8011cac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011cce:	2000      	movs	r0, #0
 8011cd0:	bd70      	pop	{r4, r5, r6, pc}
 8011cd2:	2001      	movs	r0, #1
 8011cd4:	e7fc      	b.n	8011cd0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08011cd6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011cd6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cda:	4605      	mov	r5, r0
 8011cdc:	4616      	mov	r6, r2
 8011cde:	1c8c      	adds	r4, r1, #2
 8011ce0:	8809      	ldrh	r1, [r1, #0]
 8011ce2:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8011ce6:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8011cea:	42b3      	cmp	r3, r6
 8011cec:	d124      	bne.n	8011d38 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8011cee:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8011cf2:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8011cf6:	f001 070f 	and.w	r7, r1, #15
 8011cfa:	f8cd 8000 	str.w	r8, [sp]
 8011cfe:	464b      	mov	r3, r9
 8011d00:	4652      	mov	r2, sl
 8011d02:	4621      	mov	r1, r4
 8011d04:	4628      	mov	r0, r5
 8011d06:	f7ff ffb7 	bl	8011c78 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011d0a:	4683      	mov	fp, r0
 8011d0c:	b168      	cbz	r0, 8011d2a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011d0e:	eb0a 0109 	add.w	r1, sl, r9
 8011d12:	4441      	add	r1, r8
 8011d14:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8011d18:	463a      	mov	r2, r7
 8011d1a:	4649      	mov	r1, r9
 8011d1c:	4628      	mov	r0, r5
 8011d1e:	f7ff ff53 	bl	8011bc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8011d22:	4658      	mov	r0, fp
 8011d24:	b003      	add	sp, #12
 8011d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d2a:	eb07 010a 	add.w	r1, r7, sl
 8011d2e:	4449      	add	r1, r9
 8011d30:	4441      	add	r1, r8
 8011d32:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011d36:	e7d2      	b.n	8011cde <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8011d38:	f04f 0b00 	mov.w	fp, #0
 8011d3c:	e7f1      	b.n	8011d22 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08011d3e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8011d3e:	b570      	push	{r4, r5, r6, lr}
 8011d40:	8810      	ldrh	r0, [r2, #0]
 8011d42:	4298      	cmp	r0, r3
 8011d44:	d817      	bhi.n	8011d76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011d46:	1e48      	subs	r0, r1, #1
 8011d48:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011d4c:	4298      	cmp	r0, r3
 8011d4e:	d312      	bcc.n	8011d76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011d50:	2400      	movs	r4, #0
 8011d52:	428c      	cmp	r4, r1
 8011d54:	d20f      	bcs.n	8011d76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011d56:	1860      	adds	r0, r4, r1
 8011d58:	1040      	asrs	r0, r0, #1
 8011d5a:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8011d5e:	0085      	lsls	r5, r0, #2
 8011d60:	42b3      	cmp	r3, r6
 8011d62:	d902      	bls.n	8011d6a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011d64:	3001      	adds	r0, #1
 8011d66:	b284      	uxth	r4, r0
 8011d68:	e7f3      	b.n	8011d52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011d6a:	d201      	bcs.n	8011d70 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011d6c:	b281      	uxth	r1, r0
 8011d6e:	e7f0      	b.n	8011d52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011d70:	442a      	add	r2, r5
 8011d72:	8850      	ldrh	r0, [r2, #2]
 8011d74:	bd70      	pop	{r4, r5, r6, pc}
 8011d76:	2000      	movs	r0, #0
 8011d78:	e7fc      	b.n	8011d74 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011d7a <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011d7a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d7e:	4604      	mov	r4, r0
 8011d80:	260b      	movs	r6, #11
 8011d82:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8011d84:	886f      	ldrh	r7, [r5, #2]
 8011d86:	087f      	lsrs	r7, r7, #1
 8011d88:	3e01      	subs	r6, #1
 8011d8a:	d013      	beq.n	8011db4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011d8c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011d8e:	462a      	mov	r2, r5
 8011d90:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011d94:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011d98:	4639      	mov	r1, r7
 8011d9a:	4643      	mov	r3, r8
 8011d9c:	4620      	mov	r0, r4
 8011d9e:	f7ff ffce 	bl	8011d3e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011da2:	b138      	cbz	r0, 8011db4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011da4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011da8:	4642      	mov	r2, r8
 8011daa:	4620      	mov	r0, r4
 8011dac:	f7ff ff93 	bl	8011cd6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011db0:	2800      	cmp	r0, #0
 8011db2:	d1e9      	bne.n	8011d88 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011db4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011db8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011db8:	b570      	push	{r4, r5, r6, lr}
 8011dba:	694a      	ldr	r2, [r1, #20]
 8011dbc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8011dbe:	684b      	ldr	r3, [r1, #4]
 8011dc0:	1b54      	subs	r4, r2, r5
 8011dc2:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8011dc4:	f000 8107 	beq.w	8011fd6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 8011dc8:	1b9b      	subs	r3, r3, r6
 8011dca:	d003      	beq.n	8011dd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011dcc:	2210      	movs	r2, #16
 8011dce:	4363      	muls	r3, r4
 8011dd0:	fb93 f3f2 	sdiv	r3, r3, r2
 8011dd4:	680c      	ldr	r4, [r1, #0]
 8011dd6:	698a      	ldr	r2, [r1, #24]
 8011dd8:	1b65      	subs	r5, r4, r5
 8011dda:	f000 80fe 	beq.w	8011fda <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 8011dde:	1b92      	subs	r2, r2, r6
 8011de0:	d003      	beq.n	8011dea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011de2:	2410      	movs	r4, #16
 8011de4:	436a      	muls	r2, r5
 8011de6:	fb92 f2f4 	sdiv	r2, r2, r4
 8011dea:	1a9b      	subs	r3, r3, r2
 8011dec:	ee07 3a90 	vmov	s15, r3
 8011df0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8012018 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 8011df4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011df8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011dfc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011e00:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011e04:	460a      	mov	r2, r1
 8011e06:	eeb1 6a43 	vneg.f32	s12, s6
 8011e0a:	4603      	mov	r3, r0
 8011e0c:	f100 040c 	add.w	r4, r0, #12
 8011e10:	edd2 7a02 	vldr	s15, [r2, #8]
 8011e14:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8011e18:	ece3 6a01 	vstmia	r3!, {s13}
 8011e1c:	edd2 7a03 	vldr	s15, [r2, #12]
 8011e20:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011e24:	edc3 7a02 	vstr	s15, [r3, #8]
 8011e28:	edd2 7a04 	vldr	s15, [r2, #16]
 8011e2c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011e30:	429c      	cmp	r4, r3
 8011e32:	edc3 7a05 	vstr	s15, [r3, #20]
 8011e36:	f102 0214 	add.w	r2, r2, #20
 8011e3a:	d1e9      	bne.n	8011e10 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8011e3c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011e3e:	698b      	ldr	r3, [r1, #24]
 8011e40:	edd0 4a02 	vldr	s9, [r0, #8]
 8011e44:	1a9b      	subs	r3, r3, r2
 8011e46:	ee07 3a90 	vmov	s15, r3
 8011e4a:	684b      	ldr	r3, [r1, #4]
 8011e4c:	edd0 3a00 	vldr	s7, [r0]
 8011e50:	1a9b      	subs	r3, r3, r2
 8011e52:	edd0 6a01 	vldr	s13, [r0, #4]
 8011e56:	ee07 3a10 	vmov	s14, r3
 8011e5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011e5e:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011e62:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011e66:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011e6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011e6e:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011e72:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011e76:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011e7a:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011e7e:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8011e82:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011e84:	694a      	ldr	r2, [r1, #20]
 8011e86:	ed90 5a05 	vldr	s10, [r0, #20]
 8011e8a:	1b13      	subs	r3, r2, r4
 8011e8c:	ee07 3a10 	vmov	s14, r3
 8011e90:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011e94:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011e98:	680b      	ldr	r3, [r1, #0]
 8011e9a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8011e9e:	1b1b      	subs	r3, r3, r4
 8011ea0:	ee07 3a10 	vmov	s14, r3
 8011ea4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ea8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011eac:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011eb0:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011eb4:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8011eb8:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011eba:	698b      	ldr	r3, [r1, #24]
 8011ebc:	ed90 2a03 	vldr	s4, [r0, #12]
 8011ec0:	1a9b      	subs	r3, r3, r2
 8011ec2:	ee06 3a90 	vmov	s13, r3
 8011ec6:	684b      	ldr	r3, [r1, #4]
 8011ec8:	edd0 5a04 	vldr	s11, [r0, #16]
 8011ecc:	1a9b      	subs	r3, r3, r2
 8011ece:	ee07 3a10 	vmov	s14, r3
 8011ed2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011ed6:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011eda:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011ede:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011ee2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ee6:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011eea:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011eee:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011ef2:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011ef6:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8011efa:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011efc:	694a      	ldr	r2, [r1, #20]
 8011efe:	ed90 1a07 	vldr	s2, [r0, #28]
 8011f02:	1b13      	subs	r3, r2, r4
 8011f04:	ee07 3a10 	vmov	s14, r3
 8011f08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f0c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011f10:	680b      	ldr	r3, [r1, #0]
 8011f12:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8011f16:	1b1b      	subs	r3, r3, r4
 8011f18:	ee07 3a10 	vmov	s14, r3
 8011f1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f20:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011f24:	eea5 5a87 	vfma.f32	s10, s11, s14
 8011f28:	ee25 5a06 	vmul.f32	s10, s10, s12
 8011f2c:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8011f30:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011f32:	698b      	ldr	r3, [r1, #24]
 8011f34:	edd0 5a08 	vldr	s11, [r0, #32]
 8011f38:	1a9b      	subs	r3, r3, r2
 8011f3a:	ee07 3a10 	vmov	s14, r3
 8011f3e:	684b      	ldr	r3, [r1, #4]
 8011f40:	edd0 2a06 	vldr	s5, [r0, #24]
 8011f44:	1a9b      	subs	r3, r3, r2
 8011f46:	ee01 3a90 	vmov	s3, r3
 8011f4a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011f4e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8011f52:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011f56:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011f5a:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8011f5e:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8011f62:	ee61 1a84 	vmul.f32	s3, s3, s8
 8011f66:	eea1 7a21 	vfma.f32	s14, s2, s3
 8011f6a:	ee27 7a03 	vmul.f32	s14, s14, s6
 8011f6e:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8011f72:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011f74:	694a      	ldr	r2, [r1, #20]
 8011f76:	1b13      	subs	r3, r2, r4
 8011f78:	ee03 3a10 	vmov	s6, r3
 8011f7c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011f80:	ee23 3a04 	vmul.f32	s6, s6, s8
 8011f84:	680b      	ldr	r3, [r1, #0]
 8011f86:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011f8a:	1b1b      	subs	r3, r3, r4
 8011f8c:	ee03 3a10 	vmov	s6, r3
 8011f90:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011f94:	ee23 4a04 	vmul.f32	s8, s6, s8
 8011f98:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011f9c:	ee25 6a86 	vmul.f32	s12, s11, s12
 8011fa0:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8011fa4:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011fa8:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011fac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fb0:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8011fb4:	dd13      	ble.n	8011fde <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011fb6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011fba:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011fbe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8011fc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011fc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011fca:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8011fcc:	dd15      	ble.n	8011ffa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8011fce:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011fd2:	6403      	str	r3, [r0, #64]	@ 0x40
 8011fd4:	bd70      	pop	{r4, r5, r6, pc}
 8011fd6:	4623      	mov	r3, r4
 8011fd8:	e6fc      	b.n	8011dd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011fda:	462a      	mov	r2, r5
 8011fdc:	e705      	b.n	8011dea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011fde:	d502      	bpl.n	8011fe6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 8011fe0:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8011fe4:	e7e9      	b.n	8011fba <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 8011fe6:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011fea:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011fee:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011ff6:	dade      	bge.n	8011fb6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 8011ff8:	e7f2      	b.n	8011fe0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 8011ffa:	d502      	bpl.n	8012002 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 8011ffc:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012000:	e7e7      	b.n	8011fd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 8012002:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012006:	eee3 4a86 	vfma.f32	s9, s7, s12
 801200a:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801200e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012012:	dadc      	bge.n	8011fce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 8012014:	e7f2      	b.n	8011ffc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 8012016:	bf00      	nop
 8012018:	3d800000 	.word	0x3d800000

0801201c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801201c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012020:	2714      	movs	r7, #20
 8012022:	435f      	muls	r7, r3
 8012024:	eb02 0c07 	add.w	ip, r2, r7
 8012028:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801202c:	f115 0e0f 	adds.w	lr, r5, #15
 8012030:	f100 80a2 	bmi.w	8012178 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012034:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012038:	2614      	movs	r6, #20
 801203a:	9c08      	ldr	r4, [sp, #32]
 801203c:	f8c0 e014 	str.w	lr, [r0, #20]
 8012040:	4366      	muls	r6, r4
 8012042:	eb02 0806 	add.w	r8, r2, r6
 8012046:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801204a:	f115 040f 	adds.w	r4, r5, #15
 801204e:	f100 809f 	bmi.w	8012190 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012052:	1124      	asrs	r4, r4, #4
 8012054:	eba4 040e 	sub.w	r4, r4, lr
 8012058:	6184      	str	r4, [r0, #24]
 801205a:	2c00      	cmp	r4, #0
 801205c:	f000 808a 	beq.w	8012174 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012060:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012064:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012068:	5995      	ldr	r5, [r2, r6]
 801206a:	eba4 0809 	sub.w	r8, r4, r9
 801206e:	59d4      	ldr	r4, [r2, r7]
 8012070:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012074:	eba5 0a04 	sub.w	sl, r5, r4
 8012078:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801207c:	fb0e fe05 	mul.w	lr, lr, r5
 8012080:	fb0a ee19 	mls	lr, sl, r9, lr
 8012084:	fb08 e404 	mla	r4, r8, r4, lr
 8012088:	3c01      	subs	r4, #1
 801208a:	19a4      	adds	r4, r4, r6
 801208c:	f100 808c 	bmi.w	80121a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012090:	fb94 fef6 	sdiv	lr, r4, r6
 8012094:	fb06 441e 	mls	r4, r6, lr, r4
 8012098:	f8c0 e000 	str.w	lr, [r0]
 801209c:	6104      	str	r4, [r0, #16]
 801209e:	2d00      	cmp	r5, #0
 80120a0:	f2c0 8095 	blt.w	80121ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80120a4:	fb95 f4f6 	sdiv	r4, r5, r6
 80120a8:	fb06 5514 	mls	r5, r6, r4, r5
 80120ac:	6044      	str	r4, [r0, #4]
 80120ae:	6085      	str	r5, [r0, #8]
 80120b0:	60c6      	str	r6, [r0, #12]
 80120b2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80120b6:	6945      	ldr	r5, [r0, #20]
 80120b8:	59d2      	ldr	r2, [r2, r7]
 80120ba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80120be:	ee07 4a10 	vmov	s14, r4
 80120c2:	6804      	ldr	r4, [r0, #0]
 80120c4:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 80121f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80120c8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80120cc:	ee07 2a90 	vmov	s15, r2
 80120d0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80120d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80120d8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80120dc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80120e0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80120e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80120e8:	edd3 6a00 	vldr	s13, [r3]
 80120ec:	eee6 6a07 	vfma.f32	s13, s12, s14
 80120f0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80120f4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80120f8:	edc0 6a07 	vstr	s13, [r0, #28]
 80120fc:	edd0 6a01 	vldr	s13, [r0, #4]
 8012100:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8012104:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012108:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801210c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012110:	ed80 6a08 	vstr	s12, [r0, #32]
 8012114:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8012116:	6242      	str	r2, [r0, #36]	@ 0x24
 8012118:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 801211c:	ed93 6a03 	vldr	s12, [r3, #12]
 8012120:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012124:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012128:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801212c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012130:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012134:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012138:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801213c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012140:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012142:	6302      	str	r2, [r0, #48]	@ 0x30
 8012144:	ed93 6a06 	vldr	s12, [r3, #24]
 8012148:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 801214c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012150:	eeb0 7a46 	vmov.f32	s14, s12
 8012154:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012158:	eea6 7a27 	vfma.f32	s14, s12, s15
 801215c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012160:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012164:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012168:	eee6 7a87 	vfma.f32	s15, s13, s14
 801216c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012170:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8012172:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012178:	2410      	movs	r4, #16
 801217a:	f1c5 0501 	rsb	r5, r5, #1
 801217e:	f015 050f 	ands.w	r5, r5, #15
 8012182:	fb9e fef4 	sdiv	lr, lr, r4
 8012186:	bf18      	it	ne
 8012188:	2501      	movne	r5, #1
 801218a:	ebae 0e05 	sub.w	lr, lr, r5
 801218e:	e753      	b.n	8012038 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012190:	f04f 0910 	mov.w	r9, #16
 8012194:	f1c5 0501 	rsb	r5, r5, #1
 8012198:	f015 050f 	ands.w	r5, r5, #15
 801219c:	fb94 f4f9 	sdiv	r4, r4, r9
 80121a0:	bf18      	it	ne
 80121a2:	2501      	movne	r5, #1
 80121a4:	1b64      	subs	r4, r4, r5
 80121a6:	e755      	b.n	8012054 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80121a8:	4264      	negs	r4, r4
 80121aa:	fb94 fef6 	sdiv	lr, r4, r6
 80121ae:	fb06 441e 	mls	r4, r6, lr, r4
 80121b2:	f1ce 0800 	rsb	r8, lr, #0
 80121b6:	f8c0 8000 	str.w	r8, [r0]
 80121ba:	6104      	str	r4, [r0, #16]
 80121bc:	2c00      	cmp	r4, #0
 80121be:	f43f af6e 	beq.w	801209e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80121c2:	ea6f 0e0e 	mvn.w	lr, lr
 80121c6:	1b34      	subs	r4, r6, r4
 80121c8:	f8c0 e000 	str.w	lr, [r0]
 80121cc:	e766      	b.n	801209c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80121ce:	426d      	negs	r5, r5
 80121d0:	fb95 f4f6 	sdiv	r4, r5, r6
 80121d4:	fb06 5514 	mls	r5, r6, r4, r5
 80121d8:	f1c4 0e00 	rsb	lr, r4, #0
 80121dc:	f8c0 e004 	str.w	lr, [r0, #4]
 80121e0:	6085      	str	r5, [r0, #8]
 80121e2:	2d00      	cmp	r5, #0
 80121e4:	f43f af64 	beq.w	80120b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80121e8:	43e4      	mvns	r4, r4
 80121ea:	1b75      	subs	r5, r6, r5
 80121ec:	6044      	str	r4, [r0, #4]
 80121ee:	e75e      	b.n	80120ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80121f0:	3d800000 	.word	0x3d800000

080121f4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80121f4:	4602      	mov	r2, r0
 80121f6:	b148      	cbz	r0, 801220c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80121f8:	2300      	movs	r3, #0
 80121fa:	b298      	uxth	r0, r3
 80121fc:	3301      	adds	r3, #1
 80121fe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012202:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012206:	2900      	cmp	r1, #0
 8012208:	d1f7      	bne.n	80121fa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801220a:	4770      	bx	lr
 801220c:	4770      	bx	lr

0801220e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801220e:	b530      	push	{r4, r5, lr}
 8012210:	4604      	mov	r4, r0
 8012212:	b159      	cbz	r1, 801222c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012214:	b148      	cbz	r0, 801222a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012216:	2300      	movs	r3, #0
 8012218:	b298      	uxth	r0, r3
 801221a:	4282      	cmp	r2, r0
 801221c:	d905      	bls.n	801222a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801221e:	5ccd      	ldrb	r5, [r1, r3]
 8012220:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012224:	3301      	adds	r3, #1
 8012226:	2d00      	cmp	r5, #0
 8012228:	d1f6      	bne.n	8012218 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801222a:	bd30      	pop	{r4, r5, pc}
 801222c:	4608      	mov	r0, r1
 801222e:	e7fc      	b.n	801222a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012230 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8012230:	468c      	mov	ip, r1
 8012232:	2100      	movs	r1, #0
 8012234:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012236:	4604      	mov	r4, r0
 8012238:	261f      	movs	r6, #31
 801223a:	b08b      	sub	sp, #44	@ 0x2c
 801223c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8012240:	af01      	add	r7, sp, #4
 8012242:	fb94 fef3 	sdiv	lr, r4, r3
 8012246:	fb03 441e 	mls	r4, r3, lr, r4
 801224a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801224e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8012252:	b2ec      	uxtb	r4, r5
 8012254:	2d09      	cmp	r5, #9
 8012256:	bfd4      	ite	le
 8012258:	3430      	addle	r4, #48	@ 0x30
 801225a:	3457      	addgt	r4, #87	@ 0x57
 801225c:	b2e4      	uxtb	r4, r4
 801225e:	55bc      	strb	r4, [r7, r6]
 8012260:	4674      	mov	r4, lr
 8012262:	1e71      	subs	r1, r6, #1
 8012264:	b974      	cbnz	r4, 8012284 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8012266:	2800      	cmp	r0, #0
 8012268:	da05      	bge.n	8012276 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801226a:	ab0a      	add	r3, sp, #40	@ 0x28
 801226c:	4419      	add	r1, r3
 801226e:	232d      	movs	r3, #45	@ 0x2d
 8012270:	f801 3c24 	strb.w	r3, [r1, #-36]
 8012274:	1eb1      	subs	r1, r6, #2
 8012276:	3101      	adds	r1, #1
 8012278:	4439      	add	r1, r7
 801227a:	4660      	mov	r0, ip
 801227c:	f7ff ffc7 	bl	801220e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012280:	b00b      	add	sp, #44	@ 0x2c
 8012282:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012284:	460e      	mov	r6, r1
 8012286:	e7dc      	b.n	8012242 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08012288 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8012288:	468c      	mov	ip, r1
 801228a:	2100      	movs	r1, #0
 801228c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801228e:	b08b      	sub	sp, #44	@ 0x2c
 8012290:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8012294:	211f      	movs	r1, #31
 8012296:	ae01      	add	r6, sp, #4
 8012298:	fbb0 f7f3 	udiv	r7, r0, r3
 801229c:	fb03 0517 	mls	r5, r3, r7, r0
 80122a0:	b2ec      	uxtb	r4, r5
 80122a2:	2d09      	cmp	r5, #9
 80122a4:	bfd4      	ite	le
 80122a6:	3430      	addle	r4, #48	@ 0x30
 80122a8:	3457      	addgt	r4, #87	@ 0x57
 80122aa:	b2e4      	uxtb	r4, r4
 80122ac:	558c      	strb	r4, [r1, r6]
 80122ae:	4638      	mov	r0, r7
 80122b0:	1e4c      	subs	r4, r1, #1
 80122b2:	b92f      	cbnz	r7, 80122c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80122b4:	4431      	add	r1, r6
 80122b6:	4660      	mov	r0, ip
 80122b8:	f7ff ffa9 	bl	801220e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80122bc:	b00b      	add	sp, #44	@ 0x2c
 80122be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122c0:	4621      	mov	r1, r4
 80122c2:	e7e9      	b.n	8012298 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080122c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80122c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122c8:	4691      	mov	r9, r2
 80122ca:	b085      	sub	sp, #20
 80122cc:	6802      	ldr	r2, [r0, #0]
 80122ce:	4688      	mov	r8, r1
 80122d0:	461c      	mov	r4, r3
 80122d2:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80122d6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80122da:	4683      	mov	fp, r0
 80122dc:	4610      	mov	r0, r2
 80122de:	9103      	str	r1, [sp, #12]
 80122e0:	9302      	str	r3, [sp, #8]
 80122e2:	9201      	str	r2, [sp, #4]
 80122e4:	f7ff ff86 	bl	80121f4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80122e8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80122ec:	f1b8 0f00 	cmp.w	r8, #0
 80122f0:	bf0c      	ite	eq
 80122f2:	4684      	moveq	ip, r0
 80122f4:	f100 0c01 	addne.w	ip, r0, #1
 80122f8:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80122fc:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8012300:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8012302:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012304:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8012308:	fa1f fc8c 	uxth.w	ip, ip
 801230c:	9903      	ldr	r1, [sp, #12]
 801230e:	d041      	beq.n	8012394 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012310:	d834      	bhi.n	801237c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8012312:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8012316:	d059      	beq.n	80123cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012318:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801231c:	d03a      	beq.n	8012394 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801231e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8012322:	d034      	beq.n	801238e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012324:	2400      	movs	r4, #0
 8012326:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801232a:	3a01      	subs	r2, #1
 801232c:	b169      	cbz	r1, 801234a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801232e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8012330:	458c      	cmp	ip, r1
 8012332:	da09      	bge.n	8012348 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012334:	eba1 010c 	sub.w	r1, r1, ip
 8012338:	b289      	uxth	r1, r1
 801233a:	b933      	cbnz	r3, 801234a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801233c:	2e00      	cmp	r6, #0
 801233e:	d051      	beq.n	80123e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012340:	2800      	cmp	r0, #0
 8012342:	d04f      	beq.n	80123e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012344:	440c      	add	r4, r1
 8012346:	b2a4      	uxth	r4, r4
 8012348:	2100      	movs	r1, #0
 801234a:	682b      	ldr	r3, [r5, #0]
 801234c:	4293      	cmp	r3, r2
 801234e:	da07      	bge.n	8012360 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012350:	f1b8 0f00 	cmp.w	r8, #0
 8012354:	d004      	beq.n	8012360 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012356:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801235a:	682b      	ldr	r3, [r5, #0]
 801235c:	3301      	adds	r3, #1
 801235e:	602b      	str	r3, [r5, #0]
 8012360:	2730      	movs	r7, #48	@ 0x30
 8012362:	2c00      	cmp	r4, #0
 8012364:	d04e      	beq.n	8012404 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012366:	682e      	ldr	r6, [r5, #0]
 8012368:	3c01      	subs	r4, #1
 801236a:	42b2      	cmp	r2, r6
 801236c:	b2a4      	uxth	r4, r4
 801236e:	dd49      	ble.n	8012404 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012370:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012374:	682b      	ldr	r3, [r5, #0]
 8012376:	3301      	adds	r3, #1
 8012378:	602b      	str	r3, [r5, #0]
 801237a:	e7f2      	b.n	8012362 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801237c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8012380:	d01d      	beq.n	80123be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8012382:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8012386:	d002      	beq.n	801238e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012388:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 801238c:	e7c9      	b.n	8012322 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801238e:	4684      	mov	ip, r0
 8012390:	f04f 0800 	mov.w	r8, #0
 8012394:	2c00      	cmp	r4, #0
 8012396:	d0c6      	beq.n	8012326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012398:	b947      	cbnz	r7, 80123ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801239a:	2801      	cmp	r0, #1
 801239c:	d106      	bne.n	80123ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801239e:	8814      	ldrh	r4, [r2, #0]
 80123a0:	2c30      	cmp	r4, #48	@ 0x30
 80123a2:	bf02      	ittt	eq
 80123a4:	4638      	moveq	r0, r7
 80123a6:	3202      	addeq	r2, #2
 80123a8:	f8cb 2000 	streq.w	r2, [fp]
 80123ac:	45bc      	cmp	ip, r7
 80123ae:	da14      	bge.n	80123da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80123b0:	b2bf      	uxth	r7, r7
 80123b2:	eba7 040c 	sub.w	r4, r7, ip
 80123b6:	46bc      	mov	ip, r7
 80123b8:	b2a4      	uxth	r4, r4
 80123ba:	2600      	movs	r6, #0
 80123bc:	e7b3      	b.n	8012326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80123be:	4684      	mov	ip, r0
 80123c0:	b16c      	cbz	r4, 80123de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80123c2:	42b8      	cmp	r0, r7
 80123c4:	dd00      	ble.n	80123c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80123c6:	b2b8      	uxth	r0, r7
 80123c8:	2400      	movs	r4, #0
 80123ca:	e003      	b.n	80123d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80123cc:	f04f 0c01 	mov.w	ip, #1
 80123d0:	2400      	movs	r4, #0
 80123d2:	4660      	mov	r0, ip
 80123d4:	4626      	mov	r6, r4
 80123d6:	46a0      	mov	r8, r4
 80123d8:	e7a5      	b.n	8012326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80123da:	2400      	movs	r4, #0
 80123dc:	e7ed      	b.n	80123ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80123de:	4626      	mov	r6, r4
 80123e0:	46a0      	mov	r8, r4
 80123e2:	e7a0      	b.n	8012326 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80123e4:	2900      	cmp	r1, #0
 80123e6:	d0b0      	beq.n	801234a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80123e8:	2720      	movs	r7, #32
 80123ea:	682e      	ldr	r6, [r5, #0]
 80123ec:	2900      	cmp	r1, #0
 80123ee:	d0ac      	beq.n	801234a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80123f0:	3901      	subs	r1, #1
 80123f2:	4296      	cmp	r6, r2
 80123f4:	b289      	uxth	r1, r1
 80123f6:	daa7      	bge.n	8012348 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80123f8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80123fc:	682b      	ldr	r3, [r5, #0]
 80123fe:	3301      	adds	r3, #1
 8012400:	602b      	str	r3, [r5, #0]
 8012402:	e7f2      	b.n	80123ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8012404:	b188      	cbz	r0, 801242a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012406:	682b      	ldr	r3, [r5, #0]
 8012408:	3801      	subs	r0, #1
 801240a:	429a      	cmp	r2, r3
 801240c:	b280      	uxth	r0, r0
 801240e:	dd0c      	ble.n	801242a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012410:	f8db 3000 	ldr.w	r3, [fp]
 8012414:	1c9c      	adds	r4, r3, #2
 8012416:	f8cb 4000 	str.w	r4, [fp]
 801241a:	881c      	ldrh	r4, [r3, #0]
 801241c:	682b      	ldr	r3, [r5, #0]
 801241e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8012422:	682b      	ldr	r3, [r5, #0]
 8012424:	3301      	adds	r3, #1
 8012426:	602b      	str	r3, [r5, #0]
 8012428:	e7ec      	b.n	8012404 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801242a:	2620      	movs	r6, #32
 801242c:	b151      	cbz	r1, 8012444 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801242e:	6828      	ldr	r0, [r5, #0]
 8012430:	3901      	subs	r1, #1
 8012432:	4282      	cmp	r2, r0
 8012434:	b289      	uxth	r1, r1
 8012436:	dd05      	ble.n	8012444 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012438:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801243c:	682b      	ldr	r3, [r5, #0]
 801243e:	3301      	adds	r3, #1
 8012440:	602b      	str	r3, [r5, #0]
 8012442:	e7f3      	b.n	801242c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012444:	b005      	add	sp, #20
 8012446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801244a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801244a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801244e:	2400      	movs	r4, #0
 8012450:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8012454:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8012458:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 801245c:	8014      	strh	r4, [r2, #0]
 801245e:	701c      	strb	r4, [r3, #0]
 8012460:	f888 4000 	strb.w	r4, [r8]
 8012464:	f88c 4000 	strb.w	r4, [ip]
 8012468:	f88e 4000 	strb.w	r4, [lr]
 801246c:	703c      	strb	r4, [r7, #0]
 801246e:	6804      	ldr	r4, [r0, #0]
 8012470:	b1a4      	cbz	r4, 801249c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8012472:	8824      	ldrh	r4, [r4, #0]
 8012474:	f04f 0901 	mov.w	r9, #1
 8012478:	b314      	cbz	r4, 80124c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801247a:	2c2b      	cmp	r4, #43	@ 0x2b
 801247c:	d001      	beq.n	8012482 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801247e:	2c20      	cmp	r4, #32
 8012480:	d110      	bne.n	80124a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8012482:	8014      	strh	r4, [r2, #0]
 8012484:	6804      	ldr	r4, [r0, #0]
 8012486:	b10c      	cbz	r4, 801248c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012488:	3402      	adds	r4, #2
 801248a:	6004      	str	r4, [r0, #0]
 801248c:	680c      	ldr	r4, [r1, #0]
 801248e:	b10c      	cbz	r4, 8012494 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8012490:	3401      	adds	r4, #1
 8012492:	600c      	str	r4, [r1, #0]
 8012494:	6804      	ldr	r4, [r0, #0]
 8012496:	b17c      	cbz	r4, 80124b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012498:	8824      	ldrh	r4, [r4, #0]
 801249a:	e7ed      	b.n	8012478 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801249c:	680c      	ldr	r4, [r1, #0]
 801249e:	b17c      	cbz	r4, 80124c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80124a0:	7824      	ldrb	r4, [r4, #0]
 80124a2:	e7e7      	b.n	8012474 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80124a4:	2c2d      	cmp	r4, #45	@ 0x2d
 80124a6:	d102      	bne.n	80124ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80124a8:	f883 9000 	strb.w	r9, [r3]
 80124ac:	e7ea      	b.n	8012484 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80124ae:	2c23      	cmp	r4, #35	@ 0x23
 80124b0:	d107      	bne.n	80124c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80124b2:	f888 9000 	strb.w	r9, [r8]
 80124b6:	e7e5      	b.n	8012484 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80124b8:	680c      	ldr	r4, [r1, #0]
 80124ba:	b10c      	cbz	r4, 80124c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80124bc:	7824      	ldrb	r4, [r4, #0]
 80124be:	e7db      	b.n	8012478 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80124c0:	2400      	movs	r4, #0
 80124c2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80124c6:	2b09      	cmp	r3, #9
 80124c8:	d901      	bls.n	80124ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80124ca:	2c2a      	cmp	r4, #42	@ 0x2a
 80124cc:	d122      	bne.n	8012514 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80124ce:	2301      	movs	r3, #1
 80124d0:	2c30      	cmp	r4, #48	@ 0x30
 80124d2:	f88e 3000 	strb.w	r3, [lr]
 80124d6:	d10d      	bne.n	80124f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80124d8:	f88c 3000 	strb.w	r3, [ip]
 80124dc:	6803      	ldr	r3, [r0, #0]
 80124de:	b10b      	cbz	r3, 80124e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80124e0:	3302      	adds	r3, #2
 80124e2:	6003      	str	r3, [r0, #0]
 80124e4:	680b      	ldr	r3, [r1, #0]
 80124e6:	b10b      	cbz	r3, 80124ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80124e8:	3301      	adds	r3, #1
 80124ea:	600b      	str	r3, [r1, #0]
 80124ec:	6803      	ldr	r3, [r0, #0]
 80124ee:	2b00      	cmp	r3, #0
 80124f0:	d02f      	beq.n	8012552 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80124f2:	881c      	ldrh	r4, [r3, #0]
 80124f4:	2c2a      	cmp	r4, #42	@ 0x2a
 80124f6:	d135      	bne.n	8012564 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80124f8:	f04f 33ff 	mov.w	r3, #4294967295
 80124fc:	6033      	str	r3, [r6, #0]
 80124fe:	6803      	ldr	r3, [r0, #0]
 8012500:	b10b      	cbz	r3, 8012506 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012502:	3302      	adds	r3, #2
 8012504:	6003      	str	r3, [r0, #0]
 8012506:	680b      	ldr	r3, [r1, #0]
 8012508:	b10b      	cbz	r3, 801250e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801250a:	3301      	adds	r3, #1
 801250c:	600b      	str	r3, [r1, #0]
 801250e:	6803      	ldr	r3, [r0, #0]
 8012510:	b31b      	cbz	r3, 801255a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012512:	881c      	ldrh	r4, [r3, #0]
 8012514:	2c2e      	cmp	r4, #46	@ 0x2e
 8012516:	d11a      	bne.n	801254e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012518:	2301      	movs	r3, #1
 801251a:	703b      	strb	r3, [r7, #0]
 801251c:	6803      	ldr	r3, [r0, #0]
 801251e:	b10b      	cbz	r3, 8012524 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012520:	3302      	adds	r3, #2
 8012522:	6003      	str	r3, [r0, #0]
 8012524:	680b      	ldr	r3, [r1, #0]
 8012526:	b10b      	cbz	r3, 801252c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012528:	3301      	adds	r3, #1
 801252a:	600b      	str	r3, [r1, #0]
 801252c:	6803      	ldr	r3, [r0, #0]
 801252e:	2b00      	cmp	r3, #0
 8012530:	d036      	beq.n	80125a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012532:	881b      	ldrh	r3, [r3, #0]
 8012534:	2b2a      	cmp	r3, #42	@ 0x2a
 8012536:	d137      	bne.n	80125a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012538:	f04f 33ff 	mov.w	r3, #4294967295
 801253c:	602b      	str	r3, [r5, #0]
 801253e:	6803      	ldr	r3, [r0, #0]
 8012540:	b10b      	cbz	r3, 8012546 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012542:	3302      	adds	r3, #2
 8012544:	6003      	str	r3, [r0, #0]
 8012546:	680b      	ldr	r3, [r1, #0]
 8012548:	b10b      	cbz	r3, 801254e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801254a:	3301      	adds	r3, #1
 801254c:	600b      	str	r3, [r1, #0]
 801254e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012552:	680c      	ldr	r4, [r1, #0]
 8012554:	b134      	cbz	r4, 8012564 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012556:	7824      	ldrb	r4, [r4, #0]
 8012558:	e7cc      	b.n	80124f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801255a:	680b      	ldr	r3, [r1, #0]
 801255c:	2b00      	cmp	r3, #0
 801255e:	d0f6      	beq.n	801254e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012560:	781c      	ldrb	r4, [r3, #0]
 8012562:	e7d7      	b.n	8012514 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012564:	2300      	movs	r3, #0
 8012566:	220a      	movs	r2, #10
 8012568:	6033      	str	r3, [r6, #0]
 801256a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801256e:	fa1f f38c 	uxth.w	r3, ip
 8012572:	2b09      	cmp	r3, #9
 8012574:	d8ce      	bhi.n	8012514 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012576:	6833      	ldr	r3, [r6, #0]
 8012578:	fb02 c303 	mla	r3, r2, r3, ip
 801257c:	6033      	str	r3, [r6, #0]
 801257e:	6803      	ldr	r3, [r0, #0]
 8012580:	b10b      	cbz	r3, 8012586 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012582:	3302      	adds	r3, #2
 8012584:	6003      	str	r3, [r0, #0]
 8012586:	680b      	ldr	r3, [r1, #0]
 8012588:	b10b      	cbz	r3, 801258e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801258a:	3301      	adds	r3, #1
 801258c:	600b      	str	r3, [r1, #0]
 801258e:	6803      	ldr	r3, [r0, #0]
 8012590:	b10b      	cbz	r3, 8012596 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012592:	881c      	ldrh	r4, [r3, #0]
 8012594:	e7e9      	b.n	801256a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012596:	680c      	ldr	r4, [r1, #0]
 8012598:	2c00      	cmp	r4, #0
 801259a:	d0e6      	beq.n	801256a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801259c:	7824      	ldrb	r4, [r4, #0]
 801259e:	e7e4      	b.n	801256a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80125a0:	680b      	ldr	r3, [r1, #0]
 80125a2:	b10b      	cbz	r3, 80125a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80125a4:	781b      	ldrb	r3, [r3, #0]
 80125a6:	e7c5      	b.n	8012534 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80125a8:	2200      	movs	r2, #0
 80125aa:	240a      	movs	r4, #10
 80125ac:	602a      	str	r2, [r5, #0]
 80125ae:	3b30      	subs	r3, #48	@ 0x30
 80125b0:	b29e      	uxth	r6, r3
 80125b2:	2e09      	cmp	r6, #9
 80125b4:	682a      	ldr	r2, [r5, #0]
 80125b6:	d813      	bhi.n	80125e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80125b8:	fb04 3302 	mla	r3, r4, r2, r3
 80125bc:	602b      	str	r3, [r5, #0]
 80125be:	6803      	ldr	r3, [r0, #0]
 80125c0:	b10b      	cbz	r3, 80125c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80125c2:	3302      	adds	r3, #2
 80125c4:	6003      	str	r3, [r0, #0]
 80125c6:	680b      	ldr	r3, [r1, #0]
 80125c8:	b10b      	cbz	r3, 80125ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80125ca:	3301      	adds	r3, #1
 80125cc:	600b      	str	r3, [r1, #0]
 80125ce:	6803      	ldr	r3, [r0, #0]
 80125d0:	b10b      	cbz	r3, 80125d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80125d2:	881b      	ldrh	r3, [r3, #0]
 80125d4:	e7eb      	b.n	80125ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80125d6:	680b      	ldr	r3, [r1, #0]
 80125d8:	2b00      	cmp	r3, #0
 80125da:	d0e8      	beq.n	80125ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80125dc:	781b      	ldrb	r3, [r3, #0]
 80125de:	e7e6      	b.n	80125ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80125e0:	2a06      	cmp	r2, #6
 80125e2:	bfa8      	it	ge
 80125e4:	2206      	movge	r2, #6
 80125e6:	602a      	str	r2, [r5, #0]
 80125e8:	e7b1      	b.n	801254e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080125ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80125ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125ee:	2600      	movs	r6, #0
 80125f0:	4607      	mov	r7, r0
 80125f2:	b0a3      	sub	sp, #140	@ 0x8c
 80125f4:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80125f8:	4688      	mov	r8, r1
 80125fa:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80125fe:	4631      	mov	r1, r6
 8012600:	2242      	movs	r2, #66	@ 0x42
 8012602:	4648      	mov	r0, r9
 8012604:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8012606:	960d      	str	r6, [sp, #52]	@ 0x34
 8012608:	f00e ff55 	bl	80214b6 <memset>
 801260c:	b15f      	cbz	r7, 8012626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801260e:	f108 3aff 	add.w	sl, r8, #4294967295
 8012612:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012614:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012616:	b152      	cbz	r2, 801262e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8012618:	8812      	ldrh	r2, [r2, #0]
 801261a:	b10a      	cbz	r2, 8012620 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801261c:	459a      	cmp	sl, r3
 801261e:	dc2e      	bgt.n	801267e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012620:	2200      	movs	r2, #0
 8012622:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012626:	4638      	mov	r0, r7
 8012628:	b023      	add	sp, #140	@ 0x8c
 801262a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801262e:	9a08      	ldr	r2, [sp, #32]
 8012630:	2a00      	cmp	r2, #0
 8012632:	d0f5      	beq.n	8012620 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012634:	7812      	ldrb	r2, [r2, #0]
 8012636:	e7f0      	b.n	801261a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8012638:	2d00      	cmp	r5, #0
 801263a:	d0ea      	beq.n	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801263c:	782a      	ldrb	r2, [r5, #0]
 801263e:	b142      	cbz	r2, 8012652 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012640:	2a25      	cmp	r2, #37	@ 0x25
 8012642:	d001      	beq.n	8012648 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012644:	459a      	cmp	sl, r3
 8012646:	dc08      	bgt.n	801265a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8012648:	f1bb 0f00 	cmp.w	fp, #0
 801264c:	d121      	bne.n	8012692 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801264e:	2d00      	cmp	r5, #0
 8012650:	d0df      	beq.n	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012652:	782a      	ldrb	r2, [r5, #0]
 8012654:	f04f 0b00 	mov.w	fp, #0
 8012658:	e01d      	b.n	8012696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801265a:	f1bb 0f00 	cmp.w	fp, #0
 801265e:	d076      	beq.n	801274e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x164>
 8012660:	f8bb 2000 	ldrh.w	r2, [fp]
 8012664:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8012668:	f1bb 0f00 	cmp.w	fp, #0
 801266c:	d002      	beq.n	8012674 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801266e:	f10b 0202 	add.w	r2, fp, #2
 8012672:	9209      	str	r2, [sp, #36]	@ 0x24
 8012674:	b10d      	cbz	r5, 801267a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8012676:	3501      	adds	r5, #1
 8012678:	9508      	str	r5, [sp, #32]
 801267a:	3301      	adds	r3, #1
 801267c:	930d      	str	r3, [sp, #52]	@ 0x34
 801267e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8012682:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012684:	f1bb 0f00 	cmp.w	fp, #0
 8012688:	d0d6      	beq.n	8012638 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801268a:	f8bb 2000 	ldrh.w	r2, [fp]
 801268e:	2a00      	cmp	r2, #0
 8012690:	d1d6      	bne.n	8012640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8012692:	f8bb 2000 	ldrh.w	r2, [fp]
 8012696:	2a00      	cmp	r2, #0
 8012698:	d0bb      	beq.n	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801269a:	459a      	cmp	sl, r3
 801269c:	ddb9      	ble.n	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801269e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 80126a2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 80126a6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 80126aa:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 80126ae:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 80126b2:	960e      	str	r6, [sp, #56]	@ 0x38
 80126b4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80126b8:	960f      	str	r6, [sp, #60]	@ 0x3c
 80126ba:	f1bb 0f00 	cmp.w	fp, #0
 80126be:	d002      	beq.n	80126c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80126c0:	f10b 0302 	add.w	r3, fp, #2
 80126c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80126c6:	b10d      	cbz	r5, 80126cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80126c8:	1c6b      	adds	r3, r5, #1
 80126ca:	9308      	str	r3, [sp, #32]
 80126cc:	ab0f      	add	r3, sp, #60	@ 0x3c
 80126ce:	9305      	str	r3, [sp, #20]
 80126d0:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80126d4:	9304      	str	r3, [sp, #16]
 80126d6:	ab0e      	add	r3, sp, #56	@ 0x38
 80126d8:	9303      	str	r3, [sp, #12]
 80126da:	ab0c      	add	r3, sp, #48	@ 0x30
 80126dc:	9302      	str	r3, [sp, #8]
 80126de:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80126e2:	9301      	str	r3, [sp, #4]
 80126e4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80126e8:	9300      	str	r3, [sp, #0]
 80126ea:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80126ee:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80126f2:	a908      	add	r1, sp, #32
 80126f4:	a809      	add	r0, sp, #36	@ 0x24
 80126f6:	f7ff fea8 	bl	801244a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80126fa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80126fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012700:	2b00      	cmp	r3, #0
 8012702:	bfbf      	itttt	lt
 8012704:	6823      	ldrlt	r3, [r4, #0]
 8012706:	3404      	addlt	r4, #4
 8012708:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801270c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 801270e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012710:	2b00      	cmp	r3, #0
 8012712:	bfbf      	itttt	lt
 8012714:	6823      	ldrlt	r3, [r4, #0]
 8012716:	3404      	addlt	r4, #4
 8012718:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801271c:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 801271e:	b1d9      	cbz	r1, 8012758 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8012720:	880b      	ldrh	r3, [r1, #0]
 8012722:	2b69      	cmp	r3, #105	@ 0x69
 8012724:	d01f      	beq.n	8012766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 8012726:	d82f      	bhi.n	8012788 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19e>
 8012728:	2b58      	cmp	r3, #88	@ 0x58
 801272a:	d01c      	beq.n	8012766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 801272c:	d818      	bhi.n	8012760 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x176>
 801272e:	2b25      	cmp	r3, #37	@ 0x25
 8012730:	d034      	beq.n	801279c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b2>
 8012732:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8012736:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012738:	f1bb 0f00 	cmp.w	fp, #0
 801273c:	f000 80b7 	beq.w	80128ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c4>
 8012740:	f8bb 5000 	ldrh.w	r5, [fp]
 8012744:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012748:	3301      	adds	r3, #1
 801274a:	930d      	str	r3, [sp, #52]	@ 0x34
 801274c:	e029      	b.n	80127a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b8>
 801274e:	b10d      	cbz	r5, 8012754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16a>
 8012750:	782a      	ldrb	r2, [r5, #0]
 8012752:	e787      	b.n	8012664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012754:	462a      	mov	r2, r5
 8012756:	e785      	b.n	8012664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012758:	2a00      	cmp	r2, #0
 801275a:	d0ea      	beq.n	8012732 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 801275c:	7813      	ldrb	r3, [r2, #0]
 801275e:	e7e0      	b.n	8012722 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x138>
 8012760:	3b63      	subs	r3, #99	@ 0x63
 8012762:	2b01      	cmp	r3, #1
 8012764:	d8e5      	bhi.n	8012732 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 8012766:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801276a:	b329      	cbz	r1, 80127b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ce>
 801276c:	880b      	ldrh	r3, [r1, #0]
 801276e:	2b69      	cmp	r3, #105	@ 0x69
 8012770:	d063      	beq.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8012772:	d825      	bhi.n	80127c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d6>
 8012774:	2b63      	cmp	r3, #99	@ 0x63
 8012776:	d038      	beq.n	80127ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x200>
 8012778:	2b64      	cmp	r3, #100	@ 0x64
 801277a:	d05e      	beq.n	801283a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801277c:	2b58      	cmp	r3, #88	@ 0x58
 801277e:	d07a      	beq.n	8012876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28c>
 8012780:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8012784:	4625      	mov	r5, r4
 8012786:	e036      	b.n	80127f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 8012788:	2b73      	cmp	r3, #115	@ 0x73
 801278a:	d0ec      	beq.n	8012766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 801278c:	d802      	bhi.n	8012794 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801278e:	2b6f      	cmp	r3, #111	@ 0x6f
 8012790:	d1cf      	bne.n	8012732 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 8012792:	e7e8      	b.n	8012766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 8012794:	2b75      	cmp	r3, #117	@ 0x75
 8012796:	d0e6      	beq.n	8012766 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 8012798:	2b78      	cmp	r3, #120	@ 0x78
 801279a:	e7f9      	b.n	8012790 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a6>
 801279c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801279e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80127a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80127a4:	b10b      	cbz	r3, 80127aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c0>
 80127a6:	3302      	adds	r3, #2
 80127a8:	9309      	str	r3, [sp, #36]	@ 0x24
 80127aa:	9b08      	ldr	r3, [sp, #32]
 80127ac:	2b00      	cmp	r3, #0
 80127ae:	f43f af30 	beq.w	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80127b2:	3301      	adds	r3, #1
 80127b4:	9308      	str	r3, [sp, #32]
 80127b6:	e72c      	b.n	8012612 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80127b8:	2a00      	cmp	r2, #0
 80127ba:	d0e1      	beq.n	8012780 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 80127bc:	7813      	ldrb	r3, [r2, #0]
 80127be:	e7d6      	b.n	801276e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x184>
 80127c0:	2b73      	cmp	r3, #115	@ 0x73
 80127c2:	d036      	beq.n	8012832 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x248>
 80127c4:	d807      	bhi.n	80127d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ec>
 80127c6:	2b6f      	cmp	r3, #111	@ 0x6f
 80127c8:	d1da      	bne.n	8012780 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 80127ca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80127cc:	1d25      	adds	r5, r4, #4
 80127ce:	eba8 0202 	sub.w	r2, r8, r2
 80127d2:	2308      	movs	r3, #8
 80127d4:	e049      	b.n	801286a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x280>
 80127d6:	2b75      	cmp	r3, #117	@ 0x75
 80127d8:	d042      	beq.n	8012860 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x276>
 80127da:	2b78      	cmp	r3, #120	@ 0x78
 80127dc:	d1d0      	bne.n	8012780 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 80127de:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80127e0:	1d25      	adds	r5, r4, #4
 80127e2:	eba8 0202 	sub.w	r2, r8, r2
 80127e6:	2310      	movs	r3, #16
 80127e8:	e03f      	b.n	801286a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x280>
 80127ea:	6823      	ldr	r3, [r4, #0]
 80127ec:	1d25      	adds	r5, r4, #4
 80127ee:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80127f2:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80127f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80127f8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80127fc:	2b00      	cmp	r3, #0
 80127fe:	d051      	beq.n	80128a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ba>
 8012800:	881a      	ldrh	r2, [r3, #0]
 8012802:	a80d      	add	r0, sp, #52	@ 0x34
 8012804:	9005      	str	r0, [sp, #20]
 8012806:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801280a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801280e:	9004      	str	r0, [sp, #16]
 8012810:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8012812:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012816:	9003      	str	r0, [sp, #12]
 8012818:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801281c:	462c      	mov	r4, r5
 801281e:	9002      	str	r0, [sp, #8]
 8012820:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8012822:	9001      	str	r0, [sp, #4]
 8012824:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8012828:	9000      	str	r0, [sp, #0]
 801282a:	a810      	add	r0, sp, #64	@ 0x40
 801282c:	f7ff fd4a 	bl	80122c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012830:	e7b7      	b.n	80127a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b8>
 8012832:	6823      	ldr	r3, [r4, #0]
 8012834:	1d25      	adds	r5, r4, #4
 8012836:	9310      	str	r3, [sp, #64]	@ 0x40
 8012838:	e7dd      	b.n	80127f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 801283a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801283c:	230a      	movs	r3, #10
 801283e:	eba8 0202 	sub.w	r2, r8, r2
 8012842:	b292      	uxth	r2, r2
 8012844:	4649      	mov	r1, r9
 8012846:	6820      	ldr	r0, [r4, #0]
 8012848:	f7ff fcf2 	bl	8012230 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801284c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012850:	1d25      	adds	r5, r4, #4
 8012852:	2b2d      	cmp	r3, #45	@ 0x2d
 8012854:	d1cf      	bne.n	80127f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 8012856:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801285a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801285c:	3302      	adds	r3, #2
 801285e:	e7ea      	b.n	8012836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8012860:	230a      	movs	r3, #10
 8012862:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012864:	1d25      	adds	r5, r4, #4
 8012866:	eba8 0202 	sub.w	r2, r8, r2
 801286a:	b292      	uxth	r2, r2
 801286c:	4649      	mov	r1, r9
 801286e:	6820      	ldr	r0, [r4, #0]
 8012870:	f7ff fd0a 	bl	8012288 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012874:	e7bf      	b.n	80127f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 8012876:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8012878:	2310      	movs	r3, #16
 801287a:	eba8 0202 	sub.w	r2, r8, r2
 801287e:	b292      	uxth	r2, r2
 8012880:	4649      	mov	r1, r9
 8012882:	6820      	ldr	r0, [r4, #0]
 8012884:	f7ff fd00 	bl	8012288 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8012888:	1d25      	adds	r5, r4, #4
 801288a:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 801288e:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8012892:	2b00      	cmp	r3, #0
 8012894:	d0af      	beq.n	80127f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 8012896:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801289a:	2919      	cmp	r1, #25
 801289c:	d8f7      	bhi.n	801288e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a4>
 801289e:	3b20      	subs	r3, #32
 80128a0:	8013      	strh	r3, [r2, #0]
 80128a2:	e7f4      	b.n	801288e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a4>
 80128a4:	9a08      	ldr	r2, [sp, #32]
 80128a6:	2a00      	cmp	r2, #0
 80128a8:	d0ab      	beq.n	8012802 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x218>
 80128aa:	7812      	ldrb	r2, [r2, #0]
 80128ac:	e7a9      	b.n	8012802 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x218>
 80128ae:	2d00      	cmp	r5, #0
 80128b0:	f43f af48 	beq.w	8012744 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15a>
 80128b4:	782d      	ldrb	r5, [r5, #0]
 80128b6:	e745      	b.n	8012744 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15a>

080128b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80128b8:	b507      	push	{r0, r1, r2, lr}
 80128ba:	9300      	str	r3, [sp, #0]
 80128bc:	4613      	mov	r3, r2
 80128be:	2200      	movs	r2, #0
 80128c0:	f7ff fe93 	bl	80125ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80128c4:	b003      	add	sp, #12
 80128c6:	f85d fb04 	ldr.w	pc, [sp], #4

080128ca <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80128ca:	b40c      	push	{r2, r3}
 80128cc:	b507      	push	{r0, r1, r2, lr}
 80128ce:	ab04      	add	r3, sp, #16
 80128d0:	f853 2b04 	ldr.w	r2, [r3], #4
 80128d4:	9301      	str	r3, [sp, #4]
 80128d6:	f7ff ffef 	bl	80128b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80128da:	b003      	add	sp, #12
 80128dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80128e0:	b002      	add	sp, #8
 80128e2:	4770      	bx	lr

080128e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80128e4:	4b01      	ldr	r3, [pc, #4]	@ (80128ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80128e6:	6018      	str	r0, [r3, #0]
 80128e8:	4770      	bx	lr
 80128ea:	bf00      	nop
 80128ec:	20002290 	.word	0x20002290

080128f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80128f0:	4b06      	ldr	r3, [pc, #24]	@ (801290c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80128f2:	881a      	ldrh	r2, [r3, #0]
 80128f4:	4282      	cmp	r2, r0
 80128f6:	d807      	bhi.n	8012908 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80128f8:	4b05      	ldr	r3, [pc, #20]	@ (8012910 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80128fa:	881b      	ldrh	r3, [r3, #0]
 80128fc:	4413      	add	r3, r2
 80128fe:	4298      	cmp	r0, r3
 8012900:	bfac      	ite	ge
 8012902:	2000      	movge	r0, #0
 8012904:	2001      	movlt	r0, #1
 8012906:	4770      	bx	lr
 8012908:	2000      	movs	r0, #0
 801290a:	4770      	bx	lr
 801290c:	200022b0 	.word	0x200022b0
 8012910:	200022b4 	.word	0x200022b4

08012914 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012914:	b508      	push	{r3, lr}
 8012916:	4601      	mov	r1, r0
 8012918:	f7ff ffea 	bl	80128f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801291c:	b118      	cbz	r0, 8012926 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801291e:	4b02      	ldr	r3, [pc, #8]	@ (8012928 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012920:	681b      	ldr	r3, [r3, #0]
 8012922:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012926:	bd08      	pop	{r3, pc}
 8012928:	20002294 	.word	0x20002294

0801292c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801292c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801292e:	4c24      	ldr	r4, [pc, #144]	@ (80129c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012930:	6823      	ldr	r3, [r4, #0]
 8012932:	2b00      	cmp	r3, #0
 8012934:	d042      	beq.n	80129bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012936:	4a23      	ldr	r2, [pc, #140]	@ (80129c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012938:	4d23      	ldr	r5, [pc, #140]	@ (80129c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801293a:	8811      	ldrh	r1, [r2, #0]
 801293c:	f8b5 c000 	ldrh.w	ip, [r5]
 8012940:	4822      	ldr	r0, [pc, #136]	@ (80129cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012942:	4461      	add	r1, ip
 8012944:	1c4a      	adds	r2, r1, #1
 8012946:	f022 0201 	bic.w	r2, r2, #1
 801294a:	008f      	lsls	r7, r1, #2
 801294c:	0412      	lsls	r2, r2, #16
 801294e:	19de      	adds	r6, r3, r7
 8012950:	0c12      	lsrs	r2, r2, #16
 8012952:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012956:	6006      	str	r6, [r0, #0]
 8012958:	4e1d      	ldr	r6, [pc, #116]	@ (80129d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801295a:	19da      	adds	r2, r3, r7
 801295c:	6032      	str	r2, [r6, #0]
 801295e:	220e      	movs	r2, #14
 8012960:	fb02 f20c 	mul.w	r2, r2, ip
 8012964:	3203      	adds	r2, #3
 8012966:	f022 0203 	bic.w	r2, r2, #3
 801296a:	443a      	add	r2, r7
 801296c:	4f19      	ldr	r7, [pc, #100]	@ (80129d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801296e:	4413      	add	r3, r2
 8012970:	603b      	str	r3, [r7, #0]
 8012972:	2300      	movs	r3, #0
 8012974:	4f18      	ldr	r7, [pc, #96]	@ (80129d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012976:	469c      	mov	ip, r3
 8012978:	803b      	strh	r3, [r7, #0]
 801297a:	4f18      	ldr	r7, [pc, #96]	@ (80129dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801297c:	683f      	ldr	r7, [r7, #0]
 801297e:	1aba      	subs	r2, r7, r2
 8012980:	4f17      	ldr	r7, [pc, #92]	@ (80129e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012982:	603a      	str	r2, [r7, #0]
 8012984:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012988:	4a16      	ldr	r2, [pc, #88]	@ (80129e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801298a:	8013      	strh	r3, [r2, #0]
 801298c:	428b      	cmp	r3, r1
 801298e:	d10d      	bne.n	80129ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012990:	2300      	movs	r3, #0
 8012992:	240e      	movs	r4, #14
 8012994:	882d      	ldrh	r5, [r5, #0]
 8012996:	6830      	ldr	r0, [r6, #0]
 8012998:	429d      	cmp	r5, r3
 801299a:	d90f      	bls.n	80129bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801299c:	fb04 0203 	mla	r2, r4, r3, r0
 80129a0:	7b11      	ldrb	r1, [r2, #12]
 80129a2:	3301      	adds	r3, #1
 80129a4:	f36f 1145 	bfc	r1, #5, #1
 80129a8:	7311      	strb	r1, [r2, #12]
 80129aa:	e7f5      	b.n	8012998 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80129ac:	6822      	ldr	r2, [r4, #0]
 80129ae:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80129b2:	6802      	ldr	r2, [r0, #0]
 80129b4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80129b8:	3301      	adds	r3, #1
 80129ba:	e7e7      	b.n	801298c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80129bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80129be:	bf00      	nop
 80129c0:	20002294 	.word	0x20002294
 80129c4:	200022b0 	.word	0x200022b0
 80129c8:	200022b4 	.word	0x200022b4
 80129cc:	200022a8 	.word	0x200022a8
 80129d0:	20002298 	.word	0x20002298
 80129d4:	200022a0 	.word	0x200022a0
 80129d8:	200022b2 	.word	0x200022b2
 80129dc:	2000229c 	.word	0x2000229c
 80129e0:	200022ac 	.word	0x200022ac
 80129e4:	200022a4 	.word	0x200022a4

080129e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80129e8:	4b06      	ldr	r3, [pc, #24]	@ (8012a04 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80129ea:	681b      	ldr	r3, [r3, #0]
 80129ec:	b943      	cbnz	r3, 8012a00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80129ee:	b139      	cbz	r1, 8012a00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80129f0:	4b05      	ldr	r3, [pc, #20]	@ (8012a08 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80129f2:	801a      	strh	r2, [r3, #0]
 80129f4:	4b05      	ldr	r3, [pc, #20]	@ (8012a0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80129f6:	6019      	str	r1, [r3, #0]
 80129f8:	4b05      	ldr	r3, [pc, #20]	@ (8012a10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80129fa:	6018      	str	r0, [r3, #0]
 80129fc:	f7ff bf96 	b.w	801292c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012a00:	4770      	bx	lr
 8012a02:	bf00      	nop
 8012a04:	200022a0 	.word	0x200022a0
 8012a08:	200022b4 	.word	0x200022b4
 8012a0c:	2000229c 	.word	0x2000229c
 8012a10:	20002294 	.word	0x20002294

08012a14 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012a14:	b470      	push	{r4, r5, r6}
 8012a16:	4c07      	ldr	r4, [pc, #28]	@ (8012a34 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012a18:	4605      	mov	r5, r0
 8012a1a:	6826      	ldr	r6, [r4, #0]
 8012a1c:	4610      	mov	r0, r2
 8012a1e:	9a03      	ldr	r2, [sp, #12]
 8012a20:	b936      	cbnz	r6, 8012a30 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012a22:	6025      	str	r5, [r4, #0]
 8012a24:	4c04      	ldr	r4, [pc, #16]	@ (8012a38 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012a26:	8021      	strh	r1, [r4, #0]
 8012a28:	bc70      	pop	{r4, r5, r6}
 8012a2a:	4619      	mov	r1, r3
 8012a2c:	f7ff bfdc 	b.w	80129e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012a30:	bc70      	pop	{r4, r5, r6}
 8012a32:	4770      	bx	lr
 8012a34:	200022b8 	.word	0x200022b8
 8012a38:	200022b0 	.word	0x200022b0

08012a3c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012a3c:	4a12      	ldr	r2, [pc, #72]	@ (8012a88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012a3e:	8803      	ldrh	r3, [r0, #0]
 8012a40:	8812      	ldrh	r2, [r2, #0]
 8012a42:	4293      	cmp	r3, r2
 8012a44:	d207      	bcs.n	8012a56 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012a46:	2114      	movs	r1, #20
 8012a48:	4a10      	ldr	r2, [pc, #64]	@ (8012a8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012a4a:	6812      	ldr	r2, [r2, #0]
 8012a4c:	fb01 2303 	mla	r3, r1, r3, r2
 8012a50:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012a54:	4770      	bx	lr
 8012a56:	490e      	ldr	r1, [pc, #56]	@ (8012a90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012a58:	8809      	ldrh	r1, [r1, #0]
 8012a5a:	4411      	add	r1, r2
 8012a5c:	428b      	cmp	r3, r1
 8012a5e:	da04      	bge.n	8012a6a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012a60:	1a9b      	subs	r3, r3, r2
 8012a62:	4a0c      	ldr	r2, [pc, #48]	@ (8012a94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012a64:	210e      	movs	r1, #14
 8012a66:	6812      	ldr	r2, [r2, #0]
 8012a68:	e7f0      	b.n	8012a4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012a6a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012a6e:	4293      	cmp	r3, r2
 8012a70:	d108      	bne.n	8012a84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012a72:	4b09      	ldr	r3, [pc, #36]	@ (8012a98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012a74:	781b      	ldrb	r3, [r3, #0]
 8012a76:	b91b      	cbnz	r3, 8012a80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012a78:	4b08      	ldr	r3, [pc, #32]	@ (8012a9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012a7a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012a7e:	4770      	bx	lr
 8012a80:	4b07      	ldr	r3, [pc, #28]	@ (8012aa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012a82:	e7fa      	b.n	8012a7a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012a84:	2000      	movs	r0, #0
 8012a86:	4770      	bx	lr
 8012a88:	200022b0 	.word	0x200022b0
 8012a8c:	200022b8 	.word	0x200022b8
 8012a90:	200022b4 	.word	0x200022b4
 8012a94:	20002298 	.word	0x20002298
 8012a98:	20002228 	.word	0x20002228
 8012a9c:	2000222a 	.word	0x2000222a
 8012aa0:	2000222c 	.word	0x2000222c

08012aa4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012aa4:	4a12      	ldr	r2, [pc, #72]	@ (8012af0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012aa6:	8803      	ldrh	r3, [r0, #0]
 8012aa8:	8812      	ldrh	r2, [r2, #0]
 8012aaa:	4293      	cmp	r3, r2
 8012aac:	d207      	bcs.n	8012abe <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012aae:	2114      	movs	r1, #20
 8012ab0:	4a10      	ldr	r2, [pc, #64]	@ (8012af4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012ab2:	6812      	ldr	r2, [r2, #0]
 8012ab4:	fb01 2303 	mla	r3, r1, r3, r2
 8012ab8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012abc:	4770      	bx	lr
 8012abe:	490e      	ldr	r1, [pc, #56]	@ (8012af8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012ac0:	8809      	ldrh	r1, [r1, #0]
 8012ac2:	4411      	add	r1, r2
 8012ac4:	428b      	cmp	r3, r1
 8012ac6:	da04      	bge.n	8012ad2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012ac8:	1a9b      	subs	r3, r3, r2
 8012aca:	4a0c      	ldr	r2, [pc, #48]	@ (8012afc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012acc:	210e      	movs	r1, #14
 8012ace:	6812      	ldr	r2, [r2, #0]
 8012ad0:	e7f0      	b.n	8012ab4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012ad2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012ad6:	4293      	cmp	r3, r2
 8012ad8:	d108      	bne.n	8012aec <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012ada:	4b09      	ldr	r3, [pc, #36]	@ (8012b00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012adc:	781b      	ldrb	r3, [r3, #0]
 8012ade:	b91b      	cbnz	r3, 8012ae8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012ae0:	4b08      	ldr	r3, [pc, #32]	@ (8012b04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012ae2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012ae6:	4770      	bx	lr
 8012ae8:	4b07      	ldr	r3, [pc, #28]	@ (8012b08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012aea:	e7fa      	b.n	8012ae2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012aec:	2000      	movs	r0, #0
 8012aee:	4770      	bx	lr
 8012af0:	200022b0 	.word	0x200022b0
 8012af4:	200022b8 	.word	0x200022b8
 8012af8:	200022b4 	.word	0x200022b4
 8012afc:	20002298 	.word	0x20002298
 8012b00:	20002228 	.word	0x20002228
 8012b04:	2000222c 	.word	0x2000222c
 8012b08:	2000222a 	.word	0x2000222a

08012b0c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012b0c:	b530      	push	{r4, r5, lr}
 8012b0e:	4a22      	ldr	r2, [pc, #136]	@ (8012b98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012b10:	880b      	ldrh	r3, [r1, #0]
 8012b12:	8812      	ldrh	r2, [r2, #0]
 8012b14:	4293      	cmp	r3, r2
 8012b16:	d213      	bcs.n	8012b40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012b18:	2114      	movs	r1, #20
 8012b1a:	4a20      	ldr	r2, [pc, #128]	@ (8012b9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012b1c:	6812      	ldr	r2, [r2, #0]
 8012b1e:	fb01 2303 	mla	r3, r1, r3, r2
 8012b22:	8a1a      	ldrh	r2, [r3, #16]
 8012b24:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012b28:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012b2c:	8a5b      	ldrh	r3, [r3, #18]
 8012b2e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012b32:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012b36:	8004      	strh	r4, [r0, #0]
 8012b38:	8041      	strh	r1, [r0, #2]
 8012b3a:	8082      	strh	r2, [r0, #4]
 8012b3c:	80c3      	strh	r3, [r0, #6]
 8012b3e:	e024      	b.n	8012b8a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8012b40:	4917      	ldr	r1, [pc, #92]	@ (8012ba0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012b42:	8809      	ldrh	r1, [r1, #0]
 8012b44:	4411      	add	r1, r2
 8012b46:	428b      	cmp	r3, r1
 8012b48:	da10      	bge.n	8012b6c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012b4a:	1a9b      	subs	r3, r3, r2
 8012b4c:	220e      	movs	r2, #14
 8012b4e:	4353      	muls	r3, r2
 8012b50:	4a14      	ldr	r2, [pc, #80]	@ (8012ba4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8012b52:	6811      	ldr	r1, [r2, #0]
 8012b54:	18ca      	adds	r2, r1, r3
 8012b56:	5ecd      	ldrsh	r5, [r1, r3]
 8012b58:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012b5c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8012b60:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012b64:	8005      	strh	r5, [r0, #0]
 8012b66:	8044      	strh	r4, [r0, #2]
 8012b68:	8081      	strh	r1, [r0, #4]
 8012b6a:	e7e7      	b.n	8012b3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012b6c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012b70:	4293      	cmp	r3, r2
 8012b72:	d10b      	bne.n	8012b8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8012b74:	4b0c      	ldr	r3, [pc, #48]	@ (8012ba8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8012b76:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012b7a:	4b0c      	ldr	r3, [pc, #48]	@ (8012bac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012b7c:	8081      	strh	r1, [r0, #4]
 8012b7e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012b82:	2300      	movs	r3, #0
 8012b84:	80c2      	strh	r2, [r0, #6]
 8012b86:	8003      	strh	r3, [r0, #0]
 8012b88:	8043      	strh	r3, [r0, #2]
 8012b8a:	bd30      	pop	{r4, r5, pc}
 8012b8c:	2300      	movs	r3, #0
 8012b8e:	8003      	strh	r3, [r0, #0]
 8012b90:	8043      	strh	r3, [r0, #2]
 8012b92:	8083      	strh	r3, [r0, #4]
 8012b94:	e7d2      	b.n	8012b3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012b96:	bf00      	nop
 8012b98:	200022b0 	.word	0x200022b0
 8012b9c:	200022b8 	.word	0x200022b8
 8012ba0:	200022b4 	.word	0x200022b4
 8012ba4:	20002298 	.word	0x20002298
 8012ba8:	20002224 	.word	0x20002224
 8012bac:	20002226 	.word	0x20002226

08012bb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012bb0:	4a17      	ldr	r2, [pc, #92]	@ (8012c10 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012bb2:	8803      	ldrh	r3, [r0, #0]
 8012bb4:	8812      	ldrh	r2, [r2, #0]
 8012bb6:	4293      	cmp	r3, r2
 8012bb8:	d213      	bcs.n	8012be2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012bba:	2114      	movs	r1, #20
 8012bbc:	4a15      	ldr	r2, [pc, #84]	@ (8012c14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012bbe:	6812      	ldr	r2, [r2, #0]
 8012bc0:	fb01 2303 	mla	r3, r1, r3, r2
 8012bc4:	8a1a      	ldrh	r2, [r3, #16]
 8012bc6:	8919      	ldrh	r1, [r3, #8]
 8012bc8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012bcc:	428a      	cmp	r2, r1
 8012bce:	db1d      	blt.n	8012c0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012bd0:	8a58      	ldrh	r0, [r3, #18]
 8012bd2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012bd6:	895b      	ldrh	r3, [r3, #10]
 8012bd8:	4298      	cmp	r0, r3
 8012bda:	bfac      	ite	ge
 8012bdc:	2000      	movge	r0, #0
 8012bde:	2001      	movlt	r0, #1
 8012be0:	4770      	bx	lr
 8012be2:	490d      	ldr	r1, [pc, #52]	@ (8012c18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012be4:	8809      	ldrh	r1, [r1, #0]
 8012be6:	4411      	add	r1, r2
 8012be8:	428b      	cmp	r3, r1
 8012bea:	da0d      	bge.n	8012c08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012bec:	210e      	movs	r1, #14
 8012bee:	1a9b      	subs	r3, r3, r2
 8012bf0:	4a0a      	ldr	r2, [pc, #40]	@ (8012c1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012bf2:	6812      	ldr	r2, [r2, #0]
 8012bf4:	fb01 2303 	mla	r3, r1, r3, r2
 8012bf8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012bfc:	891a      	ldrh	r2, [r3, #8]
 8012bfe:	4291      	cmp	r1, r2
 8012c00:	db04      	blt.n	8012c0c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012c02:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012c06:	e7e6      	b.n	8012bd6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012c08:	2000      	movs	r0, #0
 8012c0a:	4770      	bx	lr
 8012c0c:	2001      	movs	r0, #1
 8012c0e:	4770      	bx	lr
 8012c10:	200022b0 	.word	0x200022b0
 8012c14:	200022b8 	.word	0x200022b8
 8012c18:	200022b4 	.word	0x200022b4
 8012c1c:	20002298 	.word	0x20002298

08012c20 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012c20:	4a12      	ldr	r2, [pc, #72]	@ (8012c6c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012c22:	8803      	ldrh	r3, [r0, #0]
 8012c24:	8811      	ldrh	r1, [r2, #0]
 8012c26:	428b      	cmp	r3, r1
 8012c28:	d20b      	bcs.n	8012c42 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012c2a:	4a11      	ldr	r2, [pc, #68]	@ (8012c70 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012c2c:	6812      	ldr	r2, [r2, #0]
 8012c2e:	b112      	cbz	r2, 8012c36 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012c30:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012c34:	b9c0      	cbnz	r0, 8012c68 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012c36:	4a0f      	ldr	r2, [pc, #60]	@ (8012c74 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012c38:	6811      	ldr	r1, [r2, #0]
 8012c3a:	2214      	movs	r2, #20
 8012c3c:	4353      	muls	r3, r2
 8012c3e:	58c8      	ldr	r0, [r1, r3]
 8012c40:	4770      	bx	lr
 8012c42:	4a0d      	ldr	r2, [pc, #52]	@ (8012c78 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012c44:	8812      	ldrh	r2, [r2, #0]
 8012c46:	440a      	add	r2, r1
 8012c48:	4293      	cmp	r3, r2
 8012c4a:	da04      	bge.n	8012c56 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012c4c:	4a08      	ldr	r2, [pc, #32]	@ (8012c70 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012c4e:	6812      	ldr	r2, [r2, #0]
 8012c50:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012c54:	4770      	bx	lr
 8012c56:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012c5a:	4293      	cmp	r3, r2
 8012c5c:	d103      	bne.n	8012c66 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012c5e:	4b07      	ldr	r3, [pc, #28]	@ (8012c7c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012c60:	681b      	ldr	r3, [r3, #0]
 8012c62:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012c64:	4770      	bx	lr
 8012c66:	2000      	movs	r0, #0
 8012c68:	4770      	bx	lr
 8012c6a:	bf00      	nop
 8012c6c:	200022b0 	.word	0x200022b0
 8012c70:	20002294 	.word	0x20002294
 8012c74:	200022b8 	.word	0x200022b8
 8012c78:	200022b4 	.word	0x200022b4
 8012c7c:	20002230 	.word	0x20002230

08012c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012c80:	4b24      	ldr	r3, [pc, #144]	@ (8012d14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012c82:	8802      	ldrh	r2, [r0, #0]
 8012c84:	8818      	ldrh	r0, [r3, #0]
 8012c86:	4282      	cmp	r2, r0
 8012c88:	d221      	bcs.n	8012cce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012c8a:	4b23      	ldr	r3, [pc, #140]	@ (8012d18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012c8c:	6819      	ldr	r1, [r3, #0]
 8012c8e:	2314      	movs	r3, #20
 8012c90:	fb03 1302 	mla	r3, r3, r2, r1
 8012c94:	6858      	ldr	r0, [r3, #4]
 8012c96:	2800      	cmp	r0, #0
 8012c98:	d03a      	beq.n	8012d10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012c9a:	4920      	ldr	r1, [pc, #128]	@ (8012d1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012c9c:	6809      	ldr	r1, [r1, #0]
 8012c9e:	2900      	cmp	r1, #0
 8012ca0:	d036      	beq.n	8012d10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012ca2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012ca6:	2900      	cmp	r1, #0
 8012ca8:	d032      	beq.n	8012d10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012caa:	891a      	ldrh	r2, [r3, #8]
 8012cac:	8958      	ldrh	r0, [r3, #10]
 8012cae:	4350      	muls	r0, r2
 8012cb0:	7c5a      	ldrb	r2, [r3, #17]
 8012cb2:	7cdb      	ldrb	r3, [r3, #19]
 8012cb4:	0952      	lsrs	r2, r2, #5
 8012cb6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012cba:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012cbe:	2b0b      	cmp	r3, #11
 8012cc0:	bf18      	it	ne
 8012cc2:	0040      	lslne	r0, r0, #1
 8012cc4:	3003      	adds	r0, #3
 8012cc6:	f020 0003 	bic.w	r0, r0, #3
 8012cca:	4408      	add	r0, r1
 8012ccc:	4770      	bx	lr
 8012cce:	4b14      	ldr	r3, [pc, #80]	@ (8012d20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012cd0:	881b      	ldrh	r3, [r3, #0]
 8012cd2:	4403      	add	r3, r0
 8012cd4:	429a      	cmp	r2, r3
 8012cd6:	da1a      	bge.n	8012d0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012cd8:	210e      	movs	r1, #14
 8012cda:	4b12      	ldr	r3, [pc, #72]	@ (8012d24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012cdc:	1a10      	subs	r0, r2, r0
 8012cde:	681b      	ldr	r3, [r3, #0]
 8012ce0:	fb01 3000 	mla	r0, r1, r0, r3
 8012ce4:	7b03      	ldrb	r3, [r0, #12]
 8012ce6:	f003 031f 	and.w	r3, r3, #31
 8012cea:	2b0b      	cmp	r3, #11
 8012cec:	d10b      	bne.n	8012d06 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012cee:	8903      	ldrh	r3, [r0, #8]
 8012cf0:	8940      	ldrh	r0, [r0, #10]
 8012cf2:	4358      	muls	r0, r3
 8012cf4:	4b09      	ldr	r3, [pc, #36]	@ (8012d1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012cf6:	3003      	adds	r0, #3
 8012cf8:	6819      	ldr	r1, [r3, #0]
 8012cfa:	f020 0303 	bic.w	r3, r0, #3
 8012cfe:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012d02:	4418      	add	r0, r3
 8012d04:	4770      	bx	lr
 8012d06:	2b0d      	cmp	r3, #13
 8012d08:	d101      	bne.n	8012d0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012d0a:	300d      	adds	r0, #13
 8012d0c:	4770      	bx	lr
 8012d0e:	2000      	movs	r0, #0
 8012d10:	4770      	bx	lr
 8012d12:	bf00      	nop
 8012d14:	200022b0 	.word	0x200022b0
 8012d18:	200022b8 	.word	0x200022b8
 8012d1c:	20002294 	.word	0x20002294
 8012d20:	200022b4 	.word	0x200022b4
 8012d24:	20002298 	.word	0x20002298

08012d28 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012d28:	b510      	push	{r4, lr}
 8012d2a:	4b1f      	ldr	r3, [pc, #124]	@ (8012da8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012d2c:	8802      	ldrh	r2, [r0, #0]
 8012d2e:	881b      	ldrh	r3, [r3, #0]
 8012d30:	429a      	cmp	r2, r3
 8012d32:	d21a      	bcs.n	8012d6a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012d34:	2114      	movs	r1, #20
 8012d36:	4b1d      	ldr	r3, [pc, #116]	@ (8012dac <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012d38:	681b      	ldr	r3, [r3, #0]
 8012d3a:	fb01 3102 	mla	r1, r1, r2, r3
 8012d3e:	7c4b      	ldrb	r3, [r1, #17]
 8012d40:	0958      	lsrs	r0, r3, #5
 8012d42:	7ccb      	ldrb	r3, [r1, #19]
 8012d44:	491a      	ldr	r1, [pc, #104]	@ (8012db0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012d46:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012d4a:	6809      	ldr	r1, [r1, #0]
 8012d4c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8012d50:	b2d8      	uxtb	r0, r3
 8012d52:	b149      	cbz	r1, 8012d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012d54:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012d58:	b132      	cbz	r2, 8012d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012d5a:	2b0e      	cmp	r3, #14
 8012d5c:	d021      	beq.n	8012da2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012d5e:	280f      	cmp	r0, #15
 8012d60:	d01d      	beq.n	8012d9e <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8012d62:	2810      	cmp	r0, #16
 8012d64:	bf08      	it	eq
 8012d66:	2002      	moveq	r0, #2
 8012d68:	bd10      	pop	{r4, pc}
 8012d6a:	4912      	ldr	r1, [pc, #72]	@ (8012db4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012d6c:	8809      	ldrh	r1, [r1, #0]
 8012d6e:	4419      	add	r1, r3
 8012d70:	428a      	cmp	r2, r1
 8012d72:	da09      	bge.n	8012d88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8012d74:	210e      	movs	r1, #14
 8012d76:	1ad3      	subs	r3, r2, r3
 8012d78:	4a0f      	ldr	r2, [pc, #60]	@ (8012db8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8012d7a:	6812      	ldr	r2, [r2, #0]
 8012d7c:	fb01 2303 	mla	r3, r1, r3, r2
 8012d80:	7b18      	ldrb	r0, [r3, #12]
 8012d82:	f000 001f 	and.w	r0, r0, #31
 8012d86:	e7ef      	b.n	8012d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012d88:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8012d8c:	429a      	cmp	r2, r3
 8012d8e:	d108      	bne.n	8012da2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8012d90:	f7f5 f93c 	bl	800800c <_ZN8touchgfx3HAL3lcdEv>
 8012d94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d98:	6803      	ldr	r3, [r0, #0]
 8012d9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d9c:	4718      	bx	r3
 8012d9e:	2001      	movs	r0, #1
 8012da0:	e7e2      	b.n	8012d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012da2:	2000      	movs	r0, #0
 8012da4:	e7e0      	b.n	8012d68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012da6:	bf00      	nop
 8012da8:	200022b0 	.word	0x200022b0
 8012dac:	200022b8 	.word	0x200022b8
 8012db0:	20002294 	.word	0x20002294
 8012db4:	200022b4 	.word	0x200022b4
 8012db8:	20002298 	.word	0x20002298

08012dbc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012dbc:	2010      	movs	r0, #16
 8012dbe:	4770      	bx	lr

08012dc0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012dc0:	2000      	movs	r0, #0
 8012dc2:	4770      	bx	lr

08012dc4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012dc4:	4b02      	ldr	r3, [pc, #8]	@ (8012dd0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012dc6:	8818      	ldrh	r0, [r3, #0]
 8012dc8:	0040      	lsls	r0, r0, #1
 8012dca:	b280      	uxth	r0, r0
 8012dcc:	4770      	bx	lr
 8012dce:	bf00      	nop
 8012dd0:	2000222a 	.word	0x2000222a

08012dd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012dd4:	2bff      	cmp	r3, #255	@ 0xff
 8012dd6:	d05e      	beq.n	8012e96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012dd8:	2a0b      	cmp	r2, #11
 8012dda:	d058      	beq.n	8012e8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012ddc:	d80e      	bhi.n	8012dfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012dde:	2a03      	cmp	r2, #3
 8012de0:	d04d      	beq.n	8012e7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012de2:	d804      	bhi.n	8012dee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012de4:	2a01      	cmp	r2, #1
 8012de6:	d04c      	beq.n	8012e82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012de8:	d94d      	bls.n	8012e86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012dea:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012dec:	e031      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dee:	2a09      	cmp	r2, #9
 8012df0:	d04d      	beq.n	8012e8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012df2:	d84a      	bhi.n	8012e8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012df4:	2a08      	cmp	r2, #8
 8012df6:	d048      	beq.n	8012e8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012df8:	2300      	movs	r3, #0
 8012dfa:	e02a      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012dfc:	2a2f      	cmp	r2, #47	@ 0x2f
 8012dfe:	d02c      	beq.n	8012e5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012e00:	d811      	bhi.n	8012e26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012e02:	2a2d      	cmp	r2, #45	@ 0x2d
 8012e04:	d018      	beq.n	8012e38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012e06:	d831      	bhi.n	8012e6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012e08:	2a2c      	cmp	r2, #44	@ 0x2c
 8012e0a:	d1f5      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e0c:	684a      	ldr	r2, [r1, #4]
 8012e0e:	7813      	ldrb	r3, [r2, #0]
 8012e10:	7852      	ldrb	r2, [r2, #1]
 8012e12:	2a00      	cmp	r2, #0
 8012e14:	d1f0      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e16:	2b01      	cmp	r3, #1
 8012e18:	d01d      	beq.n	8012e56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012e1a:	2b00      	cmp	r3, #0
 8012e1c:	d02d      	beq.n	8012e7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012e1e:	2b02      	cmp	r3, #2
 8012e20:	d1ea      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e22:	68c3      	ldr	r3, [r0, #12]
 8012e24:	e015      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e26:	2a31      	cmp	r2, #49	@ 0x31
 8012e28:	d004      	beq.n	8012e34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012e2a:	d332      	bcc.n	8012e92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012e2c:	2a32      	cmp	r2, #50	@ 0x32
 8012e2e:	d030      	beq.n	8012e92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012e30:	2a33      	cmp	r2, #51	@ 0x33
 8012e32:	d1e1      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e34:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012e36:	e00c      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e38:	684a      	ldr	r2, [r1, #4]
 8012e3a:	7813      	ldrb	r3, [r2, #0]
 8012e3c:	7852      	ldrb	r2, [r2, #1]
 8012e3e:	2a00      	cmp	r2, #0
 8012e40:	d1da      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e42:	2b01      	cmp	r3, #1
 8012e44:	d004      	beq.n	8012e50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012e46:	d30f      	bcc.n	8012e68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012e48:	2b02      	cmp	r3, #2
 8012e4a:	d1d5      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e4c:	6943      	ldr	r3, [r0, #20]
 8012e4e:	e000      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e50:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012e52:	4618      	mov	r0, r3
 8012e54:	4770      	bx	lr
 8012e56:	69c3      	ldr	r3, [r0, #28]
 8012e58:	e7fb      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e5a:	684b      	ldr	r3, [r1, #4]
 8012e5c:	781a      	ldrb	r2, [r3, #0]
 8012e5e:	785b      	ldrb	r3, [r3, #1]
 8012e60:	2b00      	cmp	r3, #0
 8012e62:	d1c9      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e64:	2a00      	cmp	r2, #0
 8012e66:	d1f4      	bne.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e68:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012e6a:	e7f2      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e6c:	684b      	ldr	r3, [r1, #4]
 8012e6e:	781a      	ldrb	r2, [r3, #0]
 8012e70:	785b      	ldrb	r3, [r3, #1]
 8012e72:	2b00      	cmp	r3, #0
 8012e74:	d1c0      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012e76:	2a00      	cmp	r2, #0
 8012e78:	d1eb      	bne.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e7a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012e7c:	e7e9      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e7e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012e80:	e7e7      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e82:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012e84:	e7e5      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e86:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012e88:	e7e3      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e8a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8012e8c:	e7e1      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e8e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012e90:	e7df      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e92:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012e94:	e7dd      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012e96:	2a0b      	cmp	r2, #11
 8012e98:	d059      	beq.n	8012f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012e9a:	d80e      	bhi.n	8012eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8012e9c:	2a03      	cmp	r2, #3
 8012e9e:	d050      	beq.n	8012f42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012ea0:	d804      	bhi.n	8012eac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012ea2:	2a01      	cmp	r2, #1
 8012ea4:	d04f      	beq.n	8012f46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012ea6:	d950      	bls.n	8012f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012ea8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8012eaa:	e7d2      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eac:	2a09      	cmp	r2, #9
 8012eae:	d04e      	beq.n	8012f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012eb0:	d801      	bhi.n	8012eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012eb2:	2a08      	cmp	r2, #8
 8012eb4:	d1a0      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012eb6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012eb8:	e7cb      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012eba:	2a2f      	cmp	r2, #47	@ 0x2f
 8012ebc:	d02d      	beq.n	8012f1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8012ebe:	d811      	bhi.n	8012ee4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012ec0:	2a2d      	cmp	r2, #45	@ 0x2d
 8012ec2:	d018      	beq.n	8012ef6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012ec4:	d833      	bhi.n	8012f2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012ec6:	2a2c      	cmp	r2, #44	@ 0x2c
 8012ec8:	d196      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012eca:	684a      	ldr	r2, [r1, #4]
 8012ecc:	7813      	ldrb	r3, [r2, #0]
 8012ece:	7852      	ldrb	r2, [r2, #1]
 8012ed0:	2a00      	cmp	r2, #0
 8012ed2:	d191      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ed4:	2b01      	cmp	r3, #1
 8012ed6:	d01e      	beq.n	8012f16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012ed8:	2b00      	cmp	r3, #0
 8012eda:	d030      	beq.n	8012f3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8012edc:	2b02      	cmp	r3, #2
 8012ede:	d18b      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ee0:	6903      	ldr	r3, [r0, #16]
 8012ee2:	e7b6      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ee4:	2a31      	cmp	r2, #49	@ 0x31
 8012ee6:	d004      	beq.n	8012ef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8012ee8:	d333      	bcc.n	8012f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012eea:	2a32      	cmp	r2, #50	@ 0x32
 8012eec:	d031      	beq.n	8012f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012eee:	2a33      	cmp	r2, #51	@ 0x33
 8012ef0:	d182      	bne.n	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ef2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8012ef4:	e7ad      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ef6:	684a      	ldr	r2, [r1, #4]
 8012ef8:	7813      	ldrb	r3, [r2, #0]
 8012efa:	7852      	ldrb	r2, [r2, #1]
 8012efc:	2a00      	cmp	r2, #0
 8012efe:	f47f af7b 	bne.w	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f02:	2b01      	cmp	r3, #1
 8012f04:	d005      	beq.n	8012f12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012f06:	d310      	bcc.n	8012f2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8012f08:	2b02      	cmp	r3, #2
 8012f0a:	f47f af75 	bne.w	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f0e:	6983      	ldr	r3, [r0, #24]
 8012f10:	e79f      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f12:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012f14:	e79d      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f16:	6a03      	ldr	r3, [r0, #32]
 8012f18:	e79b      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f1a:	684b      	ldr	r3, [r1, #4]
 8012f1c:	781a      	ldrb	r2, [r3, #0]
 8012f1e:	785b      	ldrb	r3, [r3, #1]
 8012f20:	2b00      	cmp	r3, #0
 8012f22:	f47f af69 	bne.w	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f26:	2a00      	cmp	r2, #0
 8012f28:	d193      	bne.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f2a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012f2c:	e791      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f2e:	684b      	ldr	r3, [r1, #4]
 8012f30:	781a      	ldrb	r2, [r3, #0]
 8012f32:	785b      	ldrb	r3, [r3, #1]
 8012f34:	2b00      	cmp	r3, #0
 8012f36:	f47f af5f 	bne.w	8012df8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f3a:	2a00      	cmp	r2, #0
 8012f3c:	d189      	bne.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f3e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012f40:	e787      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f42:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012f44:	e785      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f46:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012f48:	e783      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f4a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8012f4c:	e781      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f4e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012f50:	e77f      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f52:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012f54:	e77d      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012f56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012f56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f5a:	b087      	sub	sp, #28
 8012f5c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012f5e:	9101      	str	r1, [sp, #4]
 8012f60:	9205      	str	r2, [sp, #20]
 8012f62:	6841      	ldr	r1, [r0, #4]
 8012f64:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012f68:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012f6c:	9202      	str	r2, [sp, #8]
 8012f6e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012f72:	fb01 2404 	mla	r4, r1, r4, r2
 8012f76:	6802      	ldr	r2, [r0, #0]
 8012f78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012f7c:	f8de 2000 	ldr.w	r2, [lr]
 8012f80:	9203      	str	r2, [sp, #12]
 8012f82:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012f86:	3204      	adds	r2, #4
 8012f88:	9204      	str	r2, [sp, #16]
 8012f8a:	9a02      	ldr	r2, [sp, #8]
 8012f8c:	43d6      	mvns	r6, r2
 8012f8e:	b2f6      	uxtb	r6, r6
 8012f90:	9a01      	ldr	r2, [sp, #4]
 8012f92:	2a00      	cmp	r2, #0
 8012f94:	dc03      	bgt.n	8012f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012f96:	9a05      	ldr	r2, [sp, #20]
 8012f98:	2a00      	cmp	r2, #0
 8012f9a:	f340 8129 	ble.w	80131f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012f9e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012fa0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012fa4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012fa8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012faa:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012fae:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012fb2:	2b00      	cmp	r3, #0
 8012fb4:	dd0e      	ble.n	8012fd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012fb6:	1408      	asrs	r0, r1, #16
 8012fb8:	d405      	bmi.n	8012fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012fba:	4560      	cmp	r0, ip
 8012fbc:	da03      	bge.n	8012fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012fbe:	1410      	asrs	r0, r2, #16
 8012fc0:	d401      	bmi.n	8012fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012fc2:	42b8      	cmp	r0, r7
 8012fc4:	db07      	blt.n	8012fd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012fc6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012fc8:	3b01      	subs	r3, #1
 8012fca:	4401      	add	r1, r0
 8012fcc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012fce:	3402      	adds	r4, #2
 8012fd0:	4402      	add	r2, r0
 8012fd2:	e7ee      	b.n	8012fb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012fd4:	d071      	beq.n	80130ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012fd6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012fd8:	1e58      	subs	r0, r3, #1
 8012fda:	fb05 1500 	mla	r5, r5, r0, r1
 8012fde:	142d      	asrs	r5, r5, #16
 8012fe0:	d45f      	bmi.n	80130a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012fe2:	4565      	cmp	r5, ip
 8012fe4:	da5d      	bge.n	80130a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012fe6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012fe8:	fb05 2000 	mla	r0, r5, r0, r2
 8012fec:	1400      	asrs	r0, r0, #16
 8012fee:	d458      	bmi.n	80130a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012ff0:	42b8      	cmp	r0, r7
 8012ff2:	da56      	bge.n	80130a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012ff4:	4699      	mov	r9, r3
 8012ff6:	46a2      	mov	sl, r4
 8012ff8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012ffc:	f1b9 0f00 	cmp.w	r9, #0
 8013000:	dd57      	ble.n	80130b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013002:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013006:	9803      	ldr	r0, [sp, #12]
 8013008:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801300c:	fb07 000c 	mla	r0, r7, ip, r0
 8013010:	140d      	asrs	r5, r1, #16
 8013012:	5d40      	ldrb	r0, [r0, r5]
 8013014:	9d04      	ldr	r5, [sp, #16]
 8013016:	f109 39ff 	add.w	r9, r9, #4294967295
 801301a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801301e:	f8ba 5000 	ldrh.w	r5, [sl]
 8013022:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013026:	122f      	asrs	r7, r5, #8
 8013028:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801302c:	fb17 f706 	smulbb	r7, r7, r6
 8013030:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013034:	00ed      	lsls	r5, r5, #3
 8013036:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801303a:	b2ed      	uxtb	r5, r5
 801303c:	fb18 f806 	smulbb	r8, r8, r6
 8013040:	fb15 f506 	smulbb	r5, r5, r6
 8013044:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013048:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801304c:	10c7      	asrs	r7, r0, #3
 801304e:	00c0      	lsls	r0, r0, #3
 8013050:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013054:	b2c0      	uxtb	r0, r0
 8013056:	fb07 870b 	mla	r7, r7, fp, r8
 801305a:	fb00 500b 	mla	r0, r0, fp, r5
 801305e:	fa1f fc8c 	uxth.w	ip, ip
 8013062:	b280      	uxth	r0, r0
 8013064:	b2bf      	uxth	r7, r7
 8013066:	f10c 0501 	add.w	r5, ip, #1
 801306a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801306e:	f107 0801 	add.w	r8, r7, #1
 8013072:	1c45      	adds	r5, r0, #1
 8013074:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013078:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801307c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801307e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013082:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013086:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801308a:	ea45 0c0c 	orr.w	ip, r5, ip
 801308e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013092:	4401      	add	r1, r0
 8013094:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013096:	ea4c 0c08 	orr.w	ip, ip, r8
 801309a:	f82a cb02 	strh.w	ip, [sl], #2
 801309e:	4402      	add	r2, r0
 80130a0:	e7ac      	b.n	8012ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80130a2:	f04f 0800 	mov.w	r8, #0
 80130a6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80130aa:	eb03 0008 	add.w	r0, r3, r8
 80130ae:	2800      	cmp	r0, #0
 80130b0:	dc41      	bgt.n	8013136 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80130b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80130b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80130ba:	9b01      	ldr	r3, [sp, #4]
 80130bc:	2b00      	cmp	r3, #0
 80130be:	f340 8097 	ble.w	80131f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80130c2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80130c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80130ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80130ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80130d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80130d6:	eef0 6a62 	vmov.f32	s13, s5
 80130da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80130de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80130e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80130e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80130ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80130ee:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80130f2:	eef0 6a43 	vmov.f32	s13, s6
 80130f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80130fa:	ee12 2a90 	vmov	r2, s5
 80130fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013102:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013104:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013108:	fb92 f3f3 	sdiv	r3, r2, r3
 801310c:	ee13 2a10 	vmov	r2, s6
 8013110:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013112:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013114:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013118:	fb92 f3f3 	sdiv	r3, r2, r3
 801311c:	9314      	str	r3, [sp, #80]	@ 0x50
 801311e:	9b01      	ldr	r3, [sp, #4]
 8013120:	9a05      	ldr	r2, [sp, #20]
 8013122:	3b01      	subs	r3, #1
 8013124:	9301      	str	r3, [sp, #4]
 8013126:	eeb0 3a67 	vmov.f32	s6, s15
 801312a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801312c:	eef0 2a47 	vmov.f32	s5, s14
 8013130:	bf08      	it	eq
 8013132:	4613      	moveq	r3, r2
 8013134:	e72c      	b.n	8012f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013136:	140f      	asrs	r7, r1, #16
 8013138:	d453      	bmi.n	80131e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801313a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801313e:	42bd      	cmp	r5, r7
 8013140:	dd4f      	ble.n	80131e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013142:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013146:	d44c      	bmi.n	80131e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013148:	f8de 000c 	ldr.w	r0, [lr, #12]
 801314c:	4560      	cmp	r0, ip
 801314e:	dd48      	ble.n	80131e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013150:	9803      	ldr	r0, [sp, #12]
 8013152:	b22d      	sxth	r5, r5
 8013154:	fb0c 0505 	mla	r5, ip, r5, r0
 8013158:	5de8      	ldrb	r0, [r5, r7]
 801315a:	9d04      	ldr	r5, [sp, #16]
 801315c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013160:	f06f 0501 	mvn.w	r5, #1
 8013164:	fb05 fb08 	mul.w	fp, r5, r8
 8013168:	f834 500b 	ldrh.w	r5, [r4, fp]
 801316c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013170:	122f      	asrs	r7, r5, #8
 8013172:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013176:	fb17 f706 	smulbb	r7, r7, r6
 801317a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801317e:	00ed      	lsls	r5, r5, #3
 8013180:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013184:	b2ed      	uxtb	r5, r5
 8013186:	fb19 f906 	smulbb	r9, r9, r6
 801318a:	fb15 f506 	smulbb	r5, r5, r6
 801318e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013192:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013196:	10c7      	asrs	r7, r0, #3
 8013198:	00c0      	lsls	r0, r0, #3
 801319a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801319e:	b2c0      	uxtb	r0, r0
 80131a0:	fb07 970a 	mla	r7, r7, sl, r9
 80131a4:	fb00 500a 	mla	r0, r0, sl, r5
 80131a8:	fa1f fc8c 	uxth.w	ip, ip
 80131ac:	b2bf      	uxth	r7, r7
 80131ae:	b280      	uxth	r0, r0
 80131b0:	f10c 0501 	add.w	r5, ip, #1
 80131b4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80131b8:	f107 0901 	add.w	r9, r7, #1
 80131bc:	1c45      	adds	r5, r0, #1
 80131be:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80131c2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80131c6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80131ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80131ce:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80131d2:	ea45 0c0c 	orr.w	ip, r5, ip
 80131d6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80131da:	ea4c 0c09 	orr.w	ip, ip, r9
 80131de:	f824 c00b 	strh.w	ip, [r4, fp]
 80131e2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80131e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80131e8:	4401      	add	r1, r0
 80131ea:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80131ec:	4402      	add	r2, r0
 80131ee:	e75c      	b.n	80130aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80131f0:	b007      	add	sp, #28
 80131f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080131f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80131f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80131fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131fe:	b085      	sub	sp, #20
 8013200:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013202:	4693      	mov	fp, r2
 8013204:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013208:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801320c:	6870      	ldr	r0, [r6, #4]
 801320e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013210:	fb00 2404 	mla	r4, r0, r4, r2
 8013214:	6832      	ldr	r2, [r6, #0]
 8013216:	9100      	str	r1, [sp, #0]
 8013218:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801321c:	682a      	ldr	r2, [r5, #0]
 801321e:	9201      	str	r2, [sp, #4]
 8013220:	686a      	ldr	r2, [r5, #4]
 8013222:	3204      	adds	r2, #4
 8013224:	9202      	str	r2, [sp, #8]
 8013226:	9a00      	ldr	r2, [sp, #0]
 8013228:	2a00      	cmp	r2, #0
 801322a:	dc03      	bgt.n	8013234 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801322c:	f1bb 0f00 	cmp.w	fp, #0
 8013230:	f340 80a0 	ble.w	8013374 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013234:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013236:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801323a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801323e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013240:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013244:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013248:	2b00      	cmp	r3, #0
 801324a:	dd0c      	ble.n	8013266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801324c:	1406      	asrs	r6, r0, #16
 801324e:	d405      	bmi.n	801325c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013250:	454e      	cmp	r6, r9
 8013252:	da03      	bge.n	801325c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013254:	1416      	asrs	r6, r2, #16
 8013256:	d401      	bmi.n	801325c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013258:	4546      	cmp	r6, r8
 801325a:	db05      	blt.n	8013268 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801325c:	4470      	add	r0, lr
 801325e:	4462      	add	r2, ip
 8013260:	3b01      	subs	r3, #1
 8013262:	3402      	adds	r4, #2
 8013264:	e7f0      	b.n	8013248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013266:	d00f      	beq.n	8013288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013268:	1e5e      	subs	r6, r3, #1
 801326a:	fb0e 0706 	mla	r7, lr, r6, r0
 801326e:	143f      	asrs	r7, r7, #16
 8013270:	d541      	bpl.n	80132f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013272:	4698      	mov	r8, r3
 8013274:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013278:	9603      	str	r6, [sp, #12]
 801327a:	f1b8 0f00 	cmp.w	r8, #0
 801327e:	dc59      	bgt.n	8013334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013280:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013284:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013288:	9b00      	ldr	r3, [sp, #0]
 801328a:	2b00      	cmp	r3, #0
 801328c:	dd72      	ble.n	8013374 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801328e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013292:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013296:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801329a:	eeb0 6a62 	vmov.f32	s12, s5
 801329e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80132a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80132a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80132aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80132ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80132b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80132b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80132ba:	eeb0 6a43 	vmov.f32	s12, s6
 80132be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80132c2:	ee12 2a90 	vmov	r2, s5
 80132c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80132ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80132cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80132d0:	fb92 fef3 	sdiv	lr, r2, r3
 80132d4:	ee13 2a10 	vmov	r2, s6
 80132d8:	fb92 fcf3 	sdiv	ip, r2, r3
 80132dc:	9b00      	ldr	r3, [sp, #0]
 80132de:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80132e2:	3b01      	subs	r3, #1
 80132e4:	9300      	str	r3, [sp, #0]
 80132e6:	eeb0 3a67 	vmov.f32	s6, s15
 80132ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80132ec:	eef0 2a47 	vmov.f32	s5, s14
 80132f0:	bf08      	it	eq
 80132f2:	465b      	moveq	r3, fp
 80132f4:	e797      	b.n	8013226 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80132f6:	454f      	cmp	r7, r9
 80132f8:	dabb      	bge.n	8013272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80132fa:	fb0c 2606 	mla	r6, ip, r6, r2
 80132fe:	1436      	asrs	r6, r6, #16
 8013300:	d4b7      	bmi.n	8013272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013302:	4546      	cmp	r6, r8
 8013304:	dab5      	bge.n	8013272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013306:	461e      	mov	r6, r3
 8013308:	46a0      	mov	r8, r4
 801330a:	2e00      	cmp	r6, #0
 801330c:	ddb8      	ble.n	8013280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801330e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013312:	9901      	ldr	r1, [sp, #4]
 8013314:	1417      	asrs	r7, r2, #16
 8013316:	fb0a 1707 	mla	r7, sl, r7, r1
 801331a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801331e:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013322:	9902      	ldr	r1, [sp, #8]
 8013324:	4470      	add	r0, lr
 8013326:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801332a:	4462      	add	r2, ip
 801332c:	f828 7b02 	strh.w	r7, [r8], #2
 8013330:	3e01      	subs	r6, #1
 8013332:	e7ea      	b.n	801330a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013334:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013338:	d417      	bmi.n	801336a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801333a:	68ae      	ldr	r6, [r5, #8]
 801333c:	454e      	cmp	r6, r9
 801333e:	dd14      	ble.n	801336a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013340:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013344:	d411      	bmi.n	801336a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013346:	68ef      	ldr	r7, [r5, #12]
 8013348:	4557      	cmp	r7, sl
 801334a:	dd0e      	ble.n	801336a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801334c:	f06f 0101 	mvn.w	r1, #1
 8013350:	9f01      	ldr	r7, [sp, #4]
 8013352:	b236      	sxth	r6, r6
 8013354:	fb0a 7606 	mla	r6, sl, r6, r7
 8013358:	9f02      	ldr	r7, [sp, #8]
 801335a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801335e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013362:	fb01 f608 	mul.w	r6, r1, r8
 8013366:	9903      	ldr	r1, [sp, #12]
 8013368:	538f      	strh	r7, [r1, r6]
 801336a:	4470      	add	r0, lr
 801336c:	4462      	add	r2, ip
 801336e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013372:	e782      	b.n	801327a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013374:	b005      	add	sp, #20
 8013376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801337a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801337a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801337e:	b087      	sub	sp, #28
 8013380:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013382:	9102      	str	r1, [sp, #8]
 8013384:	9205      	str	r2, [sp, #20]
 8013386:	6861      	ldr	r1, [r4, #4]
 8013388:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801338c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013390:	9203      	str	r2, [sp, #12]
 8013392:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013396:	fb01 2000 	mla	r0, r1, r0, r2
 801339a:	6822      	ldr	r2, [r4, #0]
 801339c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80133a0:	9200      	str	r2, [sp, #0]
 80133a2:	f8dc 2000 	ldr.w	r2, [ip]
 80133a6:	9204      	str	r2, [sp, #16]
 80133a8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80133ac:	3204      	adds	r2, #4
 80133ae:	9201      	str	r2, [sp, #4]
 80133b0:	9a03      	ldr	r2, [sp, #12]
 80133b2:	43d5      	mvns	r5, r2
 80133b4:	b2ed      	uxtb	r5, r5
 80133b6:	9a02      	ldr	r2, [sp, #8]
 80133b8:	2a00      	cmp	r2, #0
 80133ba:	dc03      	bgt.n	80133c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80133bc:	9a05      	ldr	r2, [sp, #20]
 80133be:	2a00      	cmp	r2, #0
 80133c0:	f340 812c 	ble.w	801361c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80133c4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80133c6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80133ca:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80133ce:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80133d0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80133d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80133d8:	2b00      	cmp	r3, #0
 80133da:	dd10      	ble.n	80133fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80133dc:	140c      	asrs	r4, r1, #16
 80133de:	d405      	bmi.n	80133ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80133e0:	4574      	cmp	r4, lr
 80133e2:	da03      	bge.n	80133ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80133e4:	1414      	asrs	r4, r2, #16
 80133e6:	d401      	bmi.n	80133ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80133e8:	42bc      	cmp	r4, r7
 80133ea:	db09      	blt.n	8013400 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80133ec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80133ee:	9800      	ldr	r0, [sp, #0]
 80133f0:	4421      	add	r1, r4
 80133f2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80133f4:	3002      	adds	r0, #2
 80133f6:	4422      	add	r2, r4
 80133f8:	3b01      	subs	r3, #1
 80133fa:	9000      	str	r0, [sp, #0]
 80133fc:	e7ec      	b.n	80133d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80133fe:	d071      	beq.n	80134e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013400:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013402:	1e5c      	subs	r4, r3, #1
 8013404:	fb06 1604 	mla	r6, r6, r4, r1
 8013408:	1436      	asrs	r6, r6, #16
 801340a:	d45d      	bmi.n	80134c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801340c:	4576      	cmp	r6, lr
 801340e:	da5b      	bge.n	80134c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013410:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8013412:	fb06 2404 	mla	r4, r6, r4, r2
 8013416:	1424      	asrs	r4, r4, #16
 8013418:	d456      	bmi.n	80134c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801341a:	42bc      	cmp	r4, r7
 801341c:	da54      	bge.n	80134c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801341e:	4698      	mov	r8, r3
 8013420:	f8dd 9000 	ldr.w	r9, [sp]
 8013424:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013428:	f1b8 0f00 	cmp.w	r8, #0
 801342c:	dd54      	ble.n	80134d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801342e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013432:	9804      	ldr	r0, [sp, #16]
 8013434:	1414      	asrs	r4, r2, #16
 8013436:	fb07 0404 	mla	r4, r7, r4, r0
 801343a:	140e      	asrs	r6, r1, #16
 801343c:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013440:	9801      	ldr	r0, [sp, #4]
 8013442:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013446:	eb00 0b0e 	add.w	fp, r0, lr
 801344a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801344e:	f8b9 4000 	ldrh.w	r4, [r9]
 8013452:	fb16 f60a 	smulbb	r6, r6, sl
 8013456:	1227      	asrs	r7, r4, #8
 8013458:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801345c:	fb07 6705 	mla	r7, r7, r5, r6
 8013460:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013464:	10e6      	asrs	r6, r4, #3
 8013466:	00e4      	lsls	r4, r4, #3
 8013468:	b2e4      	uxtb	r4, r4
 801346a:	fb1b fb0a 	smulbb	fp, fp, sl
 801346e:	fb14 f405 	smulbb	r4, r4, r5
 8013472:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013476:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801347a:	fb06 b605 	mla	r6, r6, r5, fp
 801347e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013482:	b2bf      	uxth	r7, r7
 8013484:	b2b6      	uxth	r6, r6
 8013486:	fa1f fe8e 	uxth.w	lr, lr
 801348a:	1c7c      	adds	r4, r7, #1
 801348c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013490:	f106 0b01 	add.w	fp, r6, #1
 8013494:	f10e 0401 	add.w	r4, lr, #1
 8013498:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801349a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801349e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80134a2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80134a6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80134aa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80134ae:	4327      	orrs	r7, r4
 80134b0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80134b4:	4401      	add	r1, r0
 80134b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80134b8:	ea47 070b 	orr.w	r7, r7, fp
 80134bc:	f829 7b02 	strh.w	r7, [r9], #2
 80134c0:	4402      	add	r2, r0
 80134c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80134c6:	e7af      	b.n	8013428 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80134c8:	f04f 0e00 	mov.w	lr, #0
 80134cc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80134d0:	eb03 040e 	add.w	r4, r3, lr
 80134d4:	2c00      	cmp	r4, #0
 80134d6:	dc43      	bgt.n	8013560 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80134d8:	9a00      	ldr	r2, [sp, #0]
 80134da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80134de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80134e2:	9300      	str	r3, [sp, #0]
 80134e4:	9b02      	ldr	r3, [sp, #8]
 80134e6:	2b00      	cmp	r3, #0
 80134e8:	f340 8098 	ble.w	801361c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80134ec:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80134f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80134f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80134f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80134fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013500:	eef0 6a62 	vmov.f32	s13, s5
 8013504:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013508:	ee77 2a62 	vsub.f32	s5, s14, s5
 801350c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013510:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013514:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013518:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801351c:	eef0 6a43 	vmov.f32	s13, s6
 8013520:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013524:	ee12 2a90 	vmov	r2, s5
 8013528:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801352c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801352e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013532:	fb92 f3f3 	sdiv	r3, r2, r3
 8013536:	ee13 2a10 	vmov	r2, s6
 801353a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801353c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801353e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013542:	fb92 f3f3 	sdiv	r3, r2, r3
 8013546:	9314      	str	r3, [sp, #80]	@ 0x50
 8013548:	9b02      	ldr	r3, [sp, #8]
 801354a:	9a05      	ldr	r2, [sp, #20]
 801354c:	3b01      	subs	r3, #1
 801354e:	9302      	str	r3, [sp, #8]
 8013550:	eeb0 3a67 	vmov.f32	s6, s15
 8013554:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013556:	eef0 2a47 	vmov.f32	s5, s14
 801355a:	bf08      	it	eq
 801355c:	4613      	moveq	r3, r2
 801355e:	e72a      	b.n	80133b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013560:	140f      	asrs	r7, r1, #16
 8013562:	d454      	bmi.n	801360e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013564:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013568:	42be      	cmp	r6, r7
 801356a:	dd50      	ble.n	801360e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801356c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013570:	d44d      	bmi.n	801360e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013572:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013576:	4544      	cmp	r4, r8
 8013578:	dd49      	ble.n	801360e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801357a:	f06f 0001 	mvn.w	r0, #1
 801357e:	9c04      	ldr	r4, [sp, #16]
 8013580:	b236      	sxth	r6, r6
 8013582:	fb08 4606 	mla	r6, r8, r6, r4
 8013586:	f816 8007 	ldrb.w	r8, [r6, r7]
 801358a:	9c01      	ldr	r4, [sp, #4]
 801358c:	fb00 fa0e 	mul.w	sl, r0, lr
 8013590:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013594:	eb04 0b08 	add.w	fp, r4, r8
 8013598:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801359c:	9800      	ldr	r0, [sp, #0]
 801359e:	fb16 f609 	smulbb	r6, r6, r9
 80135a2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80135a6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80135aa:	1227      	asrs	r7, r4, #8
 80135ac:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80135b0:	fb07 6705 	mla	r7, r7, r5, r6
 80135b4:	10e6      	asrs	r6, r4, #3
 80135b6:	00e4      	lsls	r4, r4, #3
 80135b8:	b2e4      	uxtb	r4, r4
 80135ba:	fb1b fb09 	smulbb	fp, fp, r9
 80135be:	9801      	ldr	r0, [sp, #4]
 80135c0:	fb14 f405 	smulbb	r4, r4, r5
 80135c4:	f810 8008 	ldrb.w	r8, [r0, r8]
 80135c8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80135cc:	fb06 b605 	mla	r6, r6, r5, fp
 80135d0:	fb08 4809 	mla	r8, r8, r9, r4
 80135d4:	b2bf      	uxth	r7, r7
 80135d6:	b2b6      	uxth	r6, r6
 80135d8:	fa1f f888 	uxth.w	r8, r8
 80135dc:	1c7c      	adds	r4, r7, #1
 80135de:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80135e2:	f106 0b01 	add.w	fp, r6, #1
 80135e6:	f108 0401 	add.w	r4, r8, #1
 80135ea:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80135ee:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80135f2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80135f6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80135fa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80135fe:	4327      	orrs	r7, r4
 8013600:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013604:	9800      	ldr	r0, [sp, #0]
 8013606:	ea47 070b 	orr.w	r7, r7, fp
 801360a:	f820 700a 	strh.w	r7, [r0, sl]
 801360e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013610:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013614:	4401      	add	r1, r0
 8013616:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013618:	4402      	add	r2, r0
 801361a:	e759      	b.n	80134d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801361c:	b007      	add	sp, #28
 801361e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013624 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013624:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013628:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801362c:	b085      	sub	sp, #20
 801362e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013630:	9203      	str	r2, [sp, #12]
 8013632:	6870      	ldr	r0, [r6, #4]
 8013634:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013638:	fb00 2404 	mla	r4, r0, r4, r2
 801363c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801363e:	6832      	ldr	r2, [r6, #0]
 8013640:	686f      	ldr	r7, [r5, #4]
 8013642:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013646:	682a      	ldr	r2, [r5, #0]
 8013648:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801364c:	9101      	str	r1, [sp, #4]
 801364e:	9202      	str	r2, [sp, #8]
 8013650:	3704      	adds	r7, #4
 8013652:	9a01      	ldr	r2, [sp, #4]
 8013654:	2a00      	cmp	r2, #0
 8013656:	dc03      	bgt.n	8013660 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013658:	9a03      	ldr	r2, [sp, #12]
 801365a:	2a00      	cmp	r2, #0
 801365c:	f340 80cc 	ble.w	80137f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013660:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013662:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013666:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801366a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801366c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013670:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013674:	2b00      	cmp	r3, #0
 8013676:	dd0d      	ble.n	8013694 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013678:	1406      	asrs	r6, r0, #16
 801367a:	d405      	bmi.n	8013688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801367c:	454e      	cmp	r6, r9
 801367e:	da03      	bge.n	8013688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013680:	1416      	asrs	r6, r2, #16
 8013682:	d401      	bmi.n	8013688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013684:	4546      	cmp	r6, r8
 8013686:	db06      	blt.n	8013696 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013688:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801368a:	4460      	add	r0, ip
 801368c:	4432      	add	r2, r6
 801368e:	3b01      	subs	r3, #1
 8013690:	3402      	adds	r4, #2
 8013692:	e7ef      	b.n	8013674 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013694:	d00f      	beq.n	80136b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013696:	1e5e      	subs	r6, r3, #1
 8013698:	fb0c 0e06 	mla	lr, ip, r6, r0
 801369c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80136a0:	d543      	bpl.n	801372a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80136a2:	4698      	mov	r8, r3
 80136a4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80136a8:	f1b8 0f00 	cmp.w	r8, #0
 80136ac:	dc71      	bgt.n	8013792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80136ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80136b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80136b6:	9b01      	ldr	r3, [sp, #4]
 80136b8:	2b00      	cmp	r3, #0
 80136ba:	f340 809d 	ble.w	80137f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80136be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80136c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80136c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80136ca:	eeb0 6a62 	vmov.f32	s12, s5
 80136ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80136d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80136d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80136de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80136e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80136e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80136ea:	eeb0 6a43 	vmov.f32	s12, s6
 80136ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80136f2:	ee12 2a90 	vmov	r2, s5
 80136f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80136fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80136fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013700:	fb92 fcf3 	sdiv	ip, r2, r3
 8013704:	ee13 2a10 	vmov	r2, s6
 8013708:	fb92 f3f3 	sdiv	r3, r2, r3
 801370c:	9312      	str	r3, [sp, #72]	@ 0x48
 801370e:	9b01      	ldr	r3, [sp, #4]
 8013710:	9a03      	ldr	r2, [sp, #12]
 8013712:	3b01      	subs	r3, #1
 8013714:	9301      	str	r3, [sp, #4]
 8013716:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801371a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801371c:	eeb0 3a67 	vmov.f32	s6, s15
 8013720:	bf08      	it	eq
 8013722:	4613      	moveq	r3, r2
 8013724:	eef0 2a47 	vmov.f32	s5, s14
 8013728:	e793      	b.n	8013652 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801372a:	45ce      	cmp	lr, r9
 801372c:	dab9      	bge.n	80136a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801372e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013730:	fb01 2606 	mla	r6, r1, r6, r2
 8013734:	1436      	asrs	r6, r6, #16
 8013736:	d4b4      	bmi.n	80136a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013738:	4546      	cmp	r6, r8
 801373a:	dab2      	bge.n	80136a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801373c:	4698      	mov	r8, r3
 801373e:	46a2      	mov	sl, r4
 8013740:	f1b8 0f00 	cmp.w	r8, #0
 8013744:	ddb3      	ble.n	80136ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013746:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801374a:	9902      	ldr	r1, [sp, #8]
 801374c:	1416      	asrs	r6, r2, #16
 801374e:	fb09 1606 	mla	r6, r9, r6, r1
 8013752:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013756:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801375a:	4929      	ldr	r1, [pc, #164]	@ (8013800 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801375c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013760:	eb07 0b0e 	add.w	fp, r7, lr
 8013764:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8013768:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801376c:	00f6      	lsls	r6, r6, #3
 801376e:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013772:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013776:	ea49 0606 	orr.w	r6, r9, r6
 801377a:	f817 900e 	ldrb.w	r9, [r7, lr]
 801377e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8013780:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013784:	f82a 6b02 	strh.w	r6, [sl], #2
 8013788:	4460      	add	r0, ip
 801378a:	440a      	add	r2, r1
 801378c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013790:	e7d6      	b.n	8013740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013792:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013796:	d429      	bmi.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013798:	68ae      	ldr	r6, [r5, #8]
 801379a:	454e      	cmp	r6, r9
 801379c:	dd26      	ble.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801379e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80137a2:	d423      	bmi.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80137a4:	68e9      	ldr	r1, [r5, #12]
 80137a6:	4559      	cmp	r1, fp
 80137a8:	dd20      	ble.n	80137ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80137aa:	9902      	ldr	r1, [sp, #8]
 80137ac:	fa0f fe86 	sxth.w	lr, r6
 80137b0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80137b4:	f06f 0101 	mvn.w	r1, #1
 80137b8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80137bc:	fb01 f908 	mul.w	r9, r1, r8
 80137c0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80137c4:	eb07 060e 	add.w	r6, r7, lr
 80137c8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80137cc:	7876      	ldrb	r6, [r6, #1]
 80137ce:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80137d2:	00f6      	lsls	r6, r6, #3
 80137d4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80137d8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80137dc:	ea4b 0606 	orr.w	r6, fp, r6
 80137e0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80137e4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80137e8:	f82a 6009 	strh.w	r6, [sl, r9]
 80137ec:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80137ee:	4460      	add	r0, ip
 80137f0:	440a      	add	r2, r1
 80137f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80137f6:	e757      	b.n	80136a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80137f8:	b005      	add	sp, #20
 80137fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137fe:	bf00      	nop
 8013800:	fffff800 	.word	0xfffff800

08013804 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013804:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801380c:	b087      	sub	sp, #28
 801380e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013810:	468b      	mov	fp, r1
 8013812:	9204      	str	r2, [sp, #16]
 8013814:	6841      	ldr	r1, [r0, #4]
 8013816:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801381a:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801381e:	9205      	str	r2, [sp, #20]
 8013820:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013824:	fb01 2404 	mla	r4, r1, r4, r2
 8013828:	6802      	ldr	r2, [r0, #0]
 801382a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801382e:	f8dc 2000 	ldr.w	r2, [ip]
 8013832:	9201      	str	r2, [sp, #4]
 8013834:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013838:	3204      	adds	r2, #4
 801383a:	9202      	str	r2, [sp, #8]
 801383c:	f1bb 0f00 	cmp.w	fp, #0
 8013840:	dc03      	bgt.n	801384a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013842:	9a04      	ldr	r2, [sp, #16]
 8013844:	2a00      	cmp	r2, #0
 8013846:	f340 8138 	ble.w	8013aba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801384a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801384c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013850:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013854:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013856:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801385a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801385e:	2b00      	cmp	r3, #0
 8013860:	dd0e      	ble.n	8013880 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013862:	1402      	asrs	r2, r0, #16
 8013864:	d405      	bmi.n	8013872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013866:	42ba      	cmp	r2, r7
 8013868:	da03      	bge.n	8013872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801386a:	140a      	asrs	r2, r1, #16
 801386c:	d401      	bmi.n	8013872 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801386e:	42b2      	cmp	r2, r6
 8013870:	db07      	blt.n	8013882 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013872:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013874:	3b01      	subs	r3, #1
 8013876:	4410      	add	r0, r2
 8013878:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801387a:	3402      	adds	r4, #2
 801387c:	4411      	add	r1, r2
 801387e:	e7ee      	b.n	801385e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013880:	d019      	beq.n	80138b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013882:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013884:	1e5a      	subs	r2, r3, #1
 8013886:	fb05 0502 	mla	r5, r5, r2, r0
 801388a:	142d      	asrs	r5, r5, #16
 801388c:	d409      	bmi.n	80138a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801388e:	42bd      	cmp	r5, r7
 8013890:	da07      	bge.n	80138a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013892:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013894:	fb05 1202 	mla	r2, r5, r2, r1
 8013898:	1412      	asrs	r2, r2, #16
 801389a:	d402      	bmi.n	80138a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801389c:	42b2      	cmp	r2, r6
 801389e:	f2c0 80ac 	blt.w	80139fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80138a2:	f04f 0e00 	mov.w	lr, #0
 80138a6:	eb03 020e 	add.w	r2, r3, lr
 80138aa:	2a00      	cmp	r2, #0
 80138ac:	dc3e      	bgt.n	801392c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80138ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80138b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80138b6:	f1bb 0f00 	cmp.w	fp, #0
 80138ba:	f340 80fe 	ble.w	8013aba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80138be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80138c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80138c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80138ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80138ce:	eeb0 6a62 	vmov.f32	s12, s5
 80138d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80138d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80138da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80138de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80138e6:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80138ea:	eeb0 6a43 	vmov.f32	s12, s6
 80138ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80138f2:	ee12 2a90 	vmov	r2, s5
 80138f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80138fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80138fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013900:	fb92 f3f3 	sdiv	r3, r2, r3
 8013904:	ee13 2a10 	vmov	r2, s6
 8013908:	9313      	str	r3, [sp, #76]	@ 0x4c
 801390a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801390c:	f1bb 0b01 	subs.w	fp, fp, #1
 8013910:	fb92 f3f3 	sdiv	r3, r2, r3
 8013914:	9a04      	ldr	r2, [sp, #16]
 8013916:	9314      	str	r3, [sp, #80]	@ 0x50
 8013918:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801391c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801391e:	eeb0 3a67 	vmov.f32	s6, s15
 8013922:	bf08      	it	eq
 8013924:	4613      	moveq	r3, r2
 8013926:	eef0 2a47 	vmov.f32	s5, s14
 801392a:	e787      	b.n	801383c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801392c:	1406      	asrs	r6, r0, #16
 801392e:	d45d      	bmi.n	80139ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013930:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013934:	42b5      	cmp	r5, r6
 8013936:	dd59      	ble.n	80139ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013938:	140f      	asrs	r7, r1, #16
 801393a:	d457      	bmi.n	80139ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801393c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013940:	42ba      	cmp	r2, r7
 8013942:	dd53      	ble.n	80139ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013944:	9a01      	ldr	r2, [sp, #4]
 8013946:	b22d      	sxth	r5, r5
 8013948:	fb07 2505 	mla	r5, r7, r5, r2
 801394c:	5daa      	ldrb	r2, [r5, r6]
 801394e:	9d02      	ldr	r5, [sp, #8]
 8013950:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013954:	0e2e      	lsrs	r6, r5, #24
 8013956:	d049      	beq.n	80139ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013958:	f06f 0201 	mvn.w	r2, #1
 801395c:	fb02 f20e 	mul.w	r2, r2, lr
 8013960:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013964:	9203      	str	r2, [sp, #12]
 8013966:	9a05      	ldr	r2, [sp, #20]
 8013968:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801396c:	4356      	muls	r6, r2
 801396e:	1c72      	adds	r2, r6, #1
 8013970:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013974:	1212      	asrs	r2, r2, #8
 8013976:	fa1f f982 	uxth.w	r9, r2
 801397a:	43d2      	mvns	r2, r2
 801397c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013980:	fb16 f609 	smulbb	r6, r6, r9
 8013984:	b2ed      	uxtb	r5, r5
 8013986:	ea4f 2728 	mov.w	r7, r8, asr #8
 801398a:	fb15 f509 	smulbb	r5, r5, r9
 801398e:	b2d2      	uxtb	r2, r2
 8013990:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013994:	fb07 6702 	mla	r7, r7, r2, r6
 8013998:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801399c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80139a0:	fb1a fa09 	smulbb	sl, sl, r9
 80139a4:	fa5f f888 	uxtb.w	r8, r8
 80139a8:	fb08 5502 	mla	r5, r8, r2, r5
 80139ac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80139b0:	fb06 a602 	mla	r6, r6, r2, sl
 80139b4:	b2bf      	uxth	r7, r7
 80139b6:	b2ad      	uxth	r5, r5
 80139b8:	1c7a      	adds	r2, r7, #1
 80139ba:	f105 0a01 	add.w	sl, r5, #1
 80139be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80139c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139c6:	b2b6      	uxth	r6, r6
 80139c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139cc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80139d0:	ea4a 0707 	orr.w	r7, sl, r7
 80139d4:	f106 0a01 	add.w	sl, r6, #1
 80139d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80139dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139e0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139e4:	9a03      	ldr	r2, [sp, #12]
 80139e6:	ea47 070a 	orr.w	r7, r7, sl
 80139ea:	52a7      	strh	r7, [r4, r2]
 80139ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80139ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 80139f2:	4410      	add	r0, r2
 80139f4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80139f6:	4411      	add	r1, r2
 80139f8:	e755      	b.n	80138a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80139fa:	f04f 0800 	mov.w	r8, #0
 80139fe:	eba3 0208 	sub.w	r2, r3, r8
 8013a02:	2a00      	cmp	r2, #0
 8013a04:	f77f af53 	ble.w	80138ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013a08:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013a0c:	9f01      	ldr	r7, [sp, #4]
 8013a0e:	140a      	asrs	r2, r1, #16
 8013a10:	fb06 7202 	mla	r2, r6, r2, r7
 8013a14:	1405      	asrs	r5, r0, #16
 8013a16:	5d52      	ldrb	r2, [r2, r5]
 8013a18:	9d02      	ldr	r5, [sp, #8]
 8013a1a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013a1e:	0e2e      	lsrs	r6, r5, #24
 8013a20:	d044      	beq.n	8013aac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013a22:	9a05      	ldr	r2, [sp, #20]
 8013a24:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013a28:	4356      	muls	r6, r2
 8013a2a:	1c72      	adds	r2, r6, #1
 8013a2c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013a30:	1212      	asrs	r2, r2, #8
 8013a32:	fa1f f982 	uxth.w	r9, r2
 8013a36:	43d2      	mvns	r2, r2
 8013a38:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013a3c:	fb16 f609 	smulbb	r6, r6, r9
 8013a40:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013a44:	b2ed      	uxtb	r5, r5
 8013a46:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013a4a:	fb15 f509 	smulbb	r5, r5, r9
 8013a4e:	b2d2      	uxtb	r2, r2
 8013a50:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013a54:	fb07 6702 	mla	r7, r7, r2, r6
 8013a58:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013a5c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013a60:	fb1a fa09 	smulbb	sl, sl, r9
 8013a64:	fa5f fe8e 	uxtb.w	lr, lr
 8013a68:	fb0e 5502 	mla	r5, lr, r2, r5
 8013a6c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013a70:	fb06 a602 	mla	r6, r6, r2, sl
 8013a74:	b2bf      	uxth	r7, r7
 8013a76:	b2ad      	uxth	r5, r5
 8013a78:	1c7a      	adds	r2, r7, #1
 8013a7a:	f105 0a01 	add.w	sl, r5, #1
 8013a7e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013a82:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a86:	b2b6      	uxth	r6, r6
 8013a88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a8c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013a90:	ea4a 0707 	orr.w	r7, sl, r7
 8013a94:	f106 0a01 	add.w	sl, r6, #1
 8013a98:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013a9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013aa0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013aa4:	ea47 070a 	orr.w	r7, r7, sl
 8013aa8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013aac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013aae:	f108 0801 	add.w	r8, r8, #1
 8013ab2:	4410      	add	r0, r2
 8013ab4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013ab6:	4411      	add	r1, r2
 8013ab8:	e7a1      	b.n	80139fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013aba:	b007      	add	sp, #28
 8013abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013ac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ac0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ac8:	b085      	sub	sp, #20
 8013aca:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013acc:	468b      	mov	fp, r1
 8013ace:	6841      	ldr	r1, [r0, #4]
 8013ad0:	9203      	str	r2, [sp, #12]
 8013ad2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013ad6:	fb01 2404 	mla	r4, r1, r4, r2
 8013ada:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013ade:	6802      	ldr	r2, [r0, #0]
 8013ae0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ae4:	f8de 2000 	ldr.w	r2, [lr]
 8013ae8:	9200      	str	r2, [sp, #0]
 8013aea:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013aee:	3204      	adds	r2, #4
 8013af0:	9201      	str	r2, [sp, #4]
 8013af2:	f1bb 0f00 	cmp.w	fp, #0
 8013af6:	dc03      	bgt.n	8013b00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013af8:	9a03      	ldr	r2, [sp, #12]
 8013afa:	2a00      	cmp	r2, #0
 8013afc:	f340 8153 	ble.w	8013da6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013b00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013b02:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013b06:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013b0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013b0c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013b10:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013b14:	2b00      	cmp	r3, #0
 8013b16:	dd0e      	ble.n	8013b36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013b18:	1408      	asrs	r0, r1, #16
 8013b1a:	d405      	bmi.n	8013b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b1c:	42b8      	cmp	r0, r7
 8013b1e:	da03      	bge.n	8013b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b20:	1410      	asrs	r0, r2, #16
 8013b22:	d401      	bmi.n	8013b28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013b24:	42b0      	cmp	r0, r6
 8013b26:	db07      	blt.n	8013b38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013b28:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013b2a:	3b01      	subs	r3, #1
 8013b2c:	4401      	add	r1, r0
 8013b2e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013b30:	3402      	adds	r4, #2
 8013b32:	4402      	add	r2, r0
 8013b34:	e7ee      	b.n	8013b14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013b36:	d017      	beq.n	8013b68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013b38:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013b3a:	1e58      	subs	r0, r3, #1
 8013b3c:	fb05 1500 	mla	r5, r5, r0, r1
 8013b40:	142d      	asrs	r5, r5, #16
 8013b42:	d409      	bmi.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013b44:	42bd      	cmp	r5, r7
 8013b46:	da07      	bge.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013b48:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013b4a:	fb05 2000 	mla	r0, r5, r0, r2
 8013b4e:	1400      	asrs	r0, r0, #16
 8013b50:	d402      	bmi.n	8013b58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013b52:	42b0      	cmp	r0, r6
 8013b54:	f2c0 80bc 	blt.w	8013cd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013b58:	2600      	movs	r6, #0
 8013b5a:	1998      	adds	r0, r3, r6
 8013b5c:	2800      	cmp	r0, #0
 8013b5e:	dc3e      	bgt.n	8013bde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013b60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b68:	f1bb 0f00 	cmp.w	fp, #0
 8013b6c:	f340 811b 	ble.w	8013da6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013b70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b78:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b80:	eeb0 6a62 	vmov.f32	s12, s5
 8013b84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b98:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013b9c:	eeb0 6a43 	vmov.f32	s12, s6
 8013ba0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ba4:	ee12 2a90 	vmov	r2, s5
 8013ba8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013bac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013bae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013bb6:	ee13 2a10 	vmov	r2, s6
 8013bba:	9311      	str	r3, [sp, #68]	@ 0x44
 8013bbc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013bbe:	f1bb 0b01 	subs.w	fp, fp, #1
 8013bc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013bc6:	9a03      	ldr	r2, [sp, #12]
 8013bc8:	9312      	str	r3, [sp, #72]	@ 0x48
 8013bca:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013bce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013bd0:	eeb0 3a67 	vmov.f32	s6, s15
 8013bd4:	bf08      	it	eq
 8013bd6:	4613      	moveq	r3, r2
 8013bd8:	eef0 2a47 	vmov.f32	s5, s14
 8013bdc:	e789      	b.n	8013af2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013bde:	140f      	asrs	r7, r1, #16
 8013be0:	d426      	bmi.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013be2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013be6:	42bd      	cmp	r5, r7
 8013be8:	dd22      	ble.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013bea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013bee:	d41f      	bmi.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013bf0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013bf4:	4560      	cmp	r0, ip
 8013bf6:	dd1b      	ble.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013bf8:	9800      	ldr	r0, [sp, #0]
 8013bfa:	b22d      	sxth	r5, r5
 8013bfc:	fb0c 0505 	mla	r5, ip, r5, r0
 8013c00:	5de8      	ldrb	r0, [r5, r7]
 8013c02:	9d01      	ldr	r5, [sp, #4]
 8013c04:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013c08:	0e07      	lsrs	r7, r0, #24
 8013c0a:	2fff      	cmp	r7, #255	@ 0xff
 8013c0c:	d116      	bne.n	8013c3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013c0e:	f06f 0501 	mvn.w	r5, #1
 8013c12:	fb05 f706 	mul.w	r7, r5, r6
 8013c16:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013c1a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013c1e:	0945      	lsrs	r5, r0, #5
 8013c20:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013c24:	ea4c 0505 	orr.w	r5, ip, r5
 8013c28:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013c2c:	4305      	orrs	r5, r0
 8013c2e:	53e5      	strh	r5, [r4, r7]
 8013c30:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013c32:	3e01      	subs	r6, #1
 8013c34:	4401      	add	r1, r0
 8013c36:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013c38:	4402      	add	r2, r0
 8013c3a:	e78e      	b.n	8013b5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013c3c:	b2fd      	uxtb	r5, r7
 8013c3e:	2f00      	cmp	r7, #0
 8013c40:	d0f6      	beq.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013c42:	f06f 0701 	mvn.w	r7, #1
 8013c46:	fa1f f985 	uxth.w	r9, r5
 8013c4a:	43ed      	mvns	r5, r5
 8013c4c:	4377      	muls	r7, r6
 8013c4e:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013c52:	9702      	str	r7, [sp, #8]
 8013c54:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013c58:	fb17 f709 	smulbb	r7, r7, r9
 8013c5c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013c60:	b2c0      	uxtb	r0, r0
 8013c62:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013c66:	fb10 f009 	smulbb	r0, r0, r9
 8013c6a:	b2ed      	uxtb	r5, r5
 8013c6c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013c70:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013c74:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013c78:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013c7c:	fb1a fa09 	smulbb	sl, sl, r9
 8013c80:	fa5f f888 	uxtb.w	r8, r8
 8013c84:	fb08 0005 	mla	r0, r8, r5, r0
 8013c88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013c8c:	fb07 a705 	mla	r7, r7, r5, sl
 8013c90:	b280      	uxth	r0, r0
 8013c92:	fa1f fc8c 	uxth.w	ip, ip
 8013c96:	f100 0a01 	add.w	sl, r0, #1
 8013c9a:	f10c 0501 	add.w	r5, ip, #1
 8013c9e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013ca2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013ca6:	b2bf      	uxth	r7, r7
 8013ca8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013cac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013cb0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013cb4:	f107 0a01 	add.w	sl, r7, #1
 8013cb8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013cbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013cc0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013cc4:	9802      	ldr	r0, [sp, #8]
 8013cc6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013cca:	f824 c000 	strh.w	ip, [r4, r0]
 8013cce:	e7af      	b.n	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013cd0:	f04f 0800 	mov.w	r8, #0
 8013cd4:	eba3 0008 	sub.w	r0, r3, r8
 8013cd8:	2800      	cmp	r0, #0
 8013cda:	f77f af41 	ble.w	8013b60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013cde:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013ce2:	9f00      	ldr	r7, [sp, #0]
 8013ce4:	1410      	asrs	r0, r2, #16
 8013ce6:	fb06 7000 	mla	r0, r6, r0, r7
 8013cea:	140d      	asrs	r5, r1, #16
 8013cec:	5d40      	ldrb	r0, [r0, r5]
 8013cee:	9d01      	ldr	r5, [sp, #4]
 8013cf0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013cf4:	0e2e      	lsrs	r6, r5, #24
 8013cf6:	2eff      	cmp	r6, #255	@ 0xff
 8013cf8:	d112      	bne.n	8013d20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013cfa:	482c      	ldr	r0, [pc, #176]	@ (8013dac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013cfc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013d00:	0968      	lsrs	r0, r5, #5
 8013d02:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013d06:	4330      	orrs	r0, r6
 8013d08:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013d0c:	4328      	orrs	r0, r5
 8013d0e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013d12:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013d14:	f108 0801 	add.w	r8, r8, #1
 8013d18:	4401      	add	r1, r0
 8013d1a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013d1c:	4402      	add	r2, r0
 8013d1e:	e7d9      	b.n	8013cd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013d20:	b2f0      	uxtb	r0, r6
 8013d22:	2e00      	cmp	r6, #0
 8013d24:	d0f5      	beq.n	8013d12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013d26:	fa1f f980 	uxth.w	r9, r0
 8013d2a:	43c0      	mvns	r0, r0
 8013d2c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013d30:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013d34:	fb16 f609 	smulbb	r6, r6, r9
 8013d38:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013d3c:	b2ed      	uxtb	r5, r5
 8013d3e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013d42:	fb15 f509 	smulbb	r5, r5, r9
 8013d46:	b2c0      	uxtb	r0, r0
 8013d48:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013d4c:	fb07 6700 	mla	r7, r7, r0, r6
 8013d50:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013d54:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013d58:	fb1a fa09 	smulbb	sl, sl, r9
 8013d5c:	fa5f fc8c 	uxtb.w	ip, ip
 8013d60:	fb0c 5500 	mla	r5, ip, r0, r5
 8013d64:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013d68:	fb06 a600 	mla	r6, r6, r0, sl
 8013d6c:	b2bf      	uxth	r7, r7
 8013d6e:	b2ad      	uxth	r5, r5
 8013d70:	1c78      	adds	r0, r7, #1
 8013d72:	f105 0a01 	add.w	sl, r5, #1
 8013d76:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013d7a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013d7e:	b2b6      	uxth	r6, r6
 8013d80:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013d84:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013d88:	ea4a 0707 	orr.w	r7, sl, r7
 8013d8c:	f106 0a01 	add.w	sl, r6, #1
 8013d90:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013d94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013d98:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013d9c:	ea47 070a 	orr.w	r7, r7, sl
 8013da0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013da4:	e7b5      	b.n	8013d12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013da6:	b005      	add	sp, #20
 8013da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013dac:	fffff800 	.word	0xfffff800

08013db0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013db0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db8:	b087      	sub	sp, #28
 8013dba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013dbc:	468b      	mov	fp, r1
 8013dbe:	9204      	str	r2, [sp, #16]
 8013dc0:	6861      	ldr	r1, [r4, #4]
 8013dc2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013dc6:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8013dca:	9205      	str	r2, [sp, #20]
 8013dcc:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013dd0:	fb01 2000 	mla	r0, r1, r0, r2
 8013dd4:	6822      	ldr	r2, [r4, #0]
 8013dd6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013dda:	f8de 2000 	ldr.w	r2, [lr]
 8013dde:	9201      	str	r2, [sp, #4]
 8013de0:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013de4:	9202      	str	r2, [sp, #8]
 8013de6:	f1bb 0f00 	cmp.w	fp, #0
 8013dea:	dc03      	bgt.n	8013df4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013dec:	9a04      	ldr	r2, [sp, #16]
 8013dee:	2a00      	cmp	r2, #0
 8013df0:	f340 8142 	ble.w	8014078 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013df4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013df6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013dfa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013dfe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013e00:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013e04:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013e08:	2b00      	cmp	r3, #0
 8013e0a:	dd0e      	ble.n	8013e2a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013e0c:	140c      	asrs	r4, r1, #16
 8013e0e:	d405      	bmi.n	8013e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013e10:	42bc      	cmp	r4, r7
 8013e12:	da03      	bge.n	8013e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013e14:	1414      	asrs	r4, r2, #16
 8013e16:	d401      	bmi.n	8013e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013e18:	42b4      	cmp	r4, r6
 8013e1a:	db07      	blt.n	8013e2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013e1c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013e1e:	3b01      	subs	r3, #1
 8013e20:	4421      	add	r1, r4
 8013e22:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013e24:	3002      	adds	r0, #2
 8013e26:	4422      	add	r2, r4
 8013e28:	e7ee      	b.n	8013e08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013e2a:	d019      	beq.n	8013e60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013e2c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013e2e:	1e5c      	subs	r4, r3, #1
 8013e30:	fb05 1504 	mla	r5, r5, r4, r1
 8013e34:	142d      	asrs	r5, r5, #16
 8013e36:	d409      	bmi.n	8013e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013e38:	42bd      	cmp	r5, r7
 8013e3a:	da07      	bge.n	8013e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013e3c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013e3e:	fb05 2404 	mla	r4, r5, r4, r2
 8013e42:	1424      	asrs	r4, r4, #16
 8013e44:	d402      	bmi.n	8013e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013e46:	42b4      	cmp	r4, r6
 8013e48:	f2c0 80b1 	blt.w	8013fae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013e4c:	f04f 0800 	mov.w	r8, #0
 8013e50:	eb03 0408 	add.w	r4, r3, r8
 8013e54:	2c00      	cmp	r4, #0
 8013e56:	dc3e      	bgt.n	8013ed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013e58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013e60:	f1bb 0f00 	cmp.w	fp, #0
 8013e64:	f340 8108 	ble.w	8014078 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013e68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e70:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013e74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e78:	eeb0 6a62 	vmov.f32	s12, s5
 8013e7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e90:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013e94:	eeb0 6a43 	vmov.f32	s12, s6
 8013e98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e9c:	ee12 2a90 	vmov	r2, s5
 8013ea0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ea4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ea6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013eaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8013eae:	ee13 2a10 	vmov	r2, s6
 8013eb2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013eb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013eb6:	f1bb 0b01 	subs.w	fp, fp, #1
 8013eba:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ebe:	9a04      	ldr	r2, [sp, #16]
 8013ec0:	9314      	str	r3, [sp, #80]	@ 0x50
 8013ec2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013ec6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ec8:	eeb0 3a67 	vmov.f32	s6, s15
 8013ecc:	bf08      	it	eq
 8013ece:	4613      	moveq	r3, r2
 8013ed0:	eef0 2a47 	vmov.f32	s5, s14
 8013ed4:	e787      	b.n	8013de6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013ed6:	140e      	asrs	r6, r1, #16
 8013ed8:	d462      	bmi.n	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013eda:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013ede:	42b5      	cmp	r5, r6
 8013ee0:	dd5e      	ble.n	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013ee2:	1417      	asrs	r7, r2, #16
 8013ee4:	d45c      	bmi.n	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013ee6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013eea:	42bc      	cmp	r4, r7
 8013eec:	dd58      	ble.n	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013eee:	b22d      	sxth	r5, r5
 8013ef0:	fb07 6505 	mla	r5, r7, r5, r6
 8013ef4:	9c02      	ldr	r4, [sp, #8]
 8013ef6:	5d66      	ldrb	r6, [r4, r5]
 8013ef8:	2e00      	cmp	r6, #0
 8013efa:	d051      	beq.n	8013fa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013efc:	9c01      	ldr	r4, [sp, #4]
 8013efe:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013f02:	f06f 0401 	mvn.w	r4, #1
 8013f06:	fb04 f408 	mul.w	r4, r4, r8
 8013f0a:	5b05      	ldrh	r5, [r0, r4]
 8013f0c:	9403      	str	r4, [sp, #12]
 8013f0e:	9c05      	ldr	r4, [sp, #20]
 8013f10:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013f14:	4366      	muls	r6, r4
 8013f16:	1c74      	adds	r4, r6, #1
 8013f18:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013f1c:	1224      	asrs	r4, r4, #8
 8013f1e:	b2a7      	uxth	r7, r4
 8013f20:	43e4      	mvns	r4, r4
 8013f22:	122e      	asrs	r6, r5, #8
 8013f24:	b2e4      	uxtb	r4, r4
 8013f26:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013f2a:	fb16 f604 	smulbb	r6, r6, r4
 8013f2e:	00ed      	lsls	r5, r5, #3
 8013f30:	b2ed      	uxtb	r5, r5
 8013f32:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013f36:	fb15 f504 	smulbb	r5, r5, r4
 8013f3a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013f3e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013f42:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013f46:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013f4a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013f4e:	fb1a fa04 	smulbb	sl, sl, r4
 8013f52:	fa5f f989 	uxtb.w	r9, r9
 8013f56:	fb09 5507 	mla	r5, r9, r7, r5
 8013f5a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f5e:	fb06 a607 	mla	r6, r6, r7, sl
 8013f62:	fa1f fc8c 	uxth.w	ip, ip
 8013f66:	b2ad      	uxth	r5, r5
 8013f68:	f10c 0401 	add.w	r4, ip, #1
 8013f6c:	f105 0a01 	add.w	sl, r5, #1
 8013f70:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013f74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f78:	b2b6      	uxth	r6, r6
 8013f7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f7e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013f82:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013f86:	f106 0a01 	add.w	sl, r6, #1
 8013f8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f92:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f96:	9c03      	ldr	r4, [sp, #12]
 8013f98:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013f9c:	f820 c004 	strh.w	ip, [r0, r4]
 8013fa0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013fa2:	f108 38ff 	add.w	r8, r8, #4294967295
 8013fa6:	4421      	add	r1, r4
 8013fa8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013faa:	4422      	add	r2, r4
 8013fac:	e750      	b.n	8013e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013fae:	f04f 0900 	mov.w	r9, #0
 8013fb2:	eba3 0409 	sub.w	r4, r3, r9
 8013fb6:	2c00      	cmp	r4, #0
 8013fb8:	f77f af4e 	ble.w	8013e58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013fbc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013fc0:	140d      	asrs	r5, r1, #16
 8013fc2:	1414      	asrs	r4, r2, #16
 8013fc4:	fb06 5404 	mla	r4, r6, r4, r5
 8013fc8:	9d02      	ldr	r5, [sp, #8]
 8013fca:	5d2e      	ldrb	r6, [r5, r4]
 8013fcc:	2e00      	cmp	r6, #0
 8013fce:	d04c      	beq.n	801406a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013fd0:	9d01      	ldr	r5, [sp, #4]
 8013fd2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013fd6:	9c05      	ldr	r4, [sp, #20]
 8013fd8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013fdc:	4366      	muls	r6, r4
 8013fde:	1c74      	adds	r4, r6, #1
 8013fe0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013fe4:	1224      	asrs	r4, r4, #8
 8013fe6:	b2a7      	uxth	r7, r4
 8013fe8:	43e4      	mvns	r4, r4
 8013fea:	122e      	asrs	r6, r5, #8
 8013fec:	b2e4      	uxtb	r4, r4
 8013fee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013ff2:	fb16 f604 	smulbb	r6, r6, r4
 8013ff6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013ffa:	00ed      	lsls	r5, r5, #3
 8013ffc:	b2ed      	uxtb	r5, r5
 8013ffe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014002:	fb15 f504 	smulbb	r5, r5, r4
 8014006:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801400a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801400e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014012:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014016:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801401a:	fb1a fa04 	smulbb	sl, sl, r4
 801401e:	fa5f f888 	uxtb.w	r8, r8
 8014022:	fb08 5507 	mla	r5, r8, r7, r5
 8014026:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801402a:	fb06 a607 	mla	r6, r6, r7, sl
 801402e:	fa1f fc8c 	uxth.w	ip, ip
 8014032:	b2ad      	uxth	r5, r5
 8014034:	f10c 0401 	add.w	r4, ip, #1
 8014038:	f105 0a01 	add.w	sl, r5, #1
 801403c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014040:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014044:	b2b6      	uxth	r6, r6
 8014046:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801404a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801404e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014052:	f106 0a01 	add.w	sl, r6, #1
 8014056:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801405a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801405e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014062:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014066:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801406a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801406c:	f109 0901 	add.w	r9, r9, #1
 8014070:	4421      	add	r1, r4
 8014072:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014074:	4422      	add	r2, r4
 8014076:	e79c      	b.n	8013fb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014078:	b007      	add	sp, #28
 801407a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801407e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801407e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014082:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014086:	b085      	sub	sp, #20
 8014088:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801408a:	468b      	mov	fp, r1
 801408c:	6861      	ldr	r1, [r4, #4]
 801408e:	9203      	str	r2, [sp, #12]
 8014090:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8014094:	fb01 2000 	mla	r0, r1, r0, r2
 8014098:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801409c:	6822      	ldr	r2, [r4, #0]
 801409e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80140a2:	f8d8 2000 	ldr.w	r2, [r8]
 80140a6:	9200      	str	r2, [sp, #0]
 80140a8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80140ac:	9201      	str	r2, [sp, #4]
 80140ae:	f1bb 0f00 	cmp.w	fp, #0
 80140b2:	dc03      	bgt.n	80140bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80140b4:	9a03      	ldr	r2, [sp, #12]
 80140b6:	2a00      	cmp	r2, #0
 80140b8:	f340 8146 	ble.w	8014348 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80140bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80140be:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80140c2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80140c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80140c8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80140cc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80140d0:	2b00      	cmp	r3, #0
 80140d2:	dd0e      	ble.n	80140f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80140d4:	140c      	asrs	r4, r1, #16
 80140d6:	d405      	bmi.n	80140e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140d8:	42bc      	cmp	r4, r7
 80140da:	da03      	bge.n	80140e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140dc:	1414      	asrs	r4, r2, #16
 80140de:	d401      	bmi.n	80140e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80140e0:	42b4      	cmp	r4, r6
 80140e2:	db07      	blt.n	80140f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80140e4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80140e6:	3b01      	subs	r3, #1
 80140e8:	4421      	add	r1, r4
 80140ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80140ec:	3002      	adds	r0, #2
 80140ee:	4422      	add	r2, r4
 80140f0:	e7ee      	b.n	80140d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80140f2:	d017      	beq.n	8014124 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80140f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80140f6:	1e5c      	subs	r4, r3, #1
 80140f8:	fb05 1504 	mla	r5, r5, r4, r1
 80140fc:	142d      	asrs	r5, r5, #16
 80140fe:	d409      	bmi.n	8014114 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014100:	42bd      	cmp	r5, r7
 8014102:	da07      	bge.n	8014114 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014104:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014106:	fb05 2404 	mla	r4, r5, r4, r2
 801410a:	1424      	asrs	r4, r4, #16
 801410c:	d402      	bmi.n	8014114 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801410e:	42b4      	cmp	r4, r6
 8014110:	f2c0 80b3 	blt.w	801427a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014114:	2600      	movs	r6, #0
 8014116:	199c      	adds	r4, r3, r6
 8014118:	2c00      	cmp	r4, #0
 801411a:	dc3e      	bgt.n	801419a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801411c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014120:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014124:	f1bb 0f00 	cmp.w	fp, #0
 8014128:	f340 810e 	ble.w	8014348 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801412c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014130:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014134:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014138:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801413c:	eeb0 6a62 	vmov.f32	s12, s5
 8014140:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014144:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014148:	ee61 7a27 	vmul.f32	s15, s2, s15
 801414c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014150:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014154:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014158:	eeb0 6a43 	vmov.f32	s12, s6
 801415c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014160:	ee12 2a90 	vmov	r2, s5
 8014164:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014168:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801416a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801416e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014172:	ee13 2a10 	vmov	r2, s6
 8014176:	9311      	str	r3, [sp, #68]	@ 0x44
 8014178:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801417a:	f1bb 0b01 	subs.w	fp, fp, #1
 801417e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014182:	9a03      	ldr	r2, [sp, #12]
 8014184:	9312      	str	r3, [sp, #72]	@ 0x48
 8014186:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801418a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801418c:	eeb0 3a67 	vmov.f32	s6, s15
 8014190:	bf08      	it	eq
 8014192:	4613      	moveq	r3, r2
 8014194:	eef0 2a47 	vmov.f32	s5, s14
 8014198:	e789      	b.n	80140ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801419a:	140f      	asrs	r7, r1, #16
 801419c:	d418      	bmi.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801419e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80141a2:	42bd      	cmp	r5, r7
 80141a4:	dd14      	ble.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80141aa:	d411      	bmi.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141ac:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80141b0:	4564      	cmp	r4, ip
 80141b2:	dd0d      	ble.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141b4:	b22d      	sxth	r5, r5
 80141b6:	fb0c 7505 	mla	r5, ip, r5, r7
 80141ba:	9c01      	ldr	r4, [sp, #4]
 80141bc:	5d64      	ldrb	r4, [r4, r5]
 80141be:	2cff      	cmp	r4, #255	@ 0xff
 80141c0:	d10c      	bne.n	80141dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80141c2:	9c00      	ldr	r4, [sp, #0]
 80141c4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80141c8:	f06f 0401 	mvn.w	r4, #1
 80141cc:	4374      	muls	r4, r6
 80141ce:	5305      	strh	r5, [r0, r4]
 80141d0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80141d2:	3e01      	subs	r6, #1
 80141d4:	4421      	add	r1, r4
 80141d6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80141d8:	4422      	add	r2, r4
 80141da:	e79c      	b.n	8014116 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80141dc:	2c00      	cmp	r4, #0
 80141de:	d0f7      	beq.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80141e0:	9f00      	ldr	r7, [sp, #0]
 80141e2:	fa1f fc84 	uxth.w	ip, r4
 80141e6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80141ea:	f06f 0501 	mvn.w	r5, #1
 80141ee:	43e4      	mvns	r4, r4
 80141f0:	4375      	muls	r5, r6
 80141f2:	9502      	str	r5, [sp, #8]
 80141f4:	5b45      	ldrh	r5, [r0, r5]
 80141f6:	b2e4      	uxtb	r4, r4
 80141f8:	122f      	asrs	r7, r5, #8
 80141fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80141fe:	fb17 f704 	smulbb	r7, r7, r4
 8014202:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014206:	00ed      	lsls	r5, r5, #3
 8014208:	b2ed      	uxtb	r5, r5
 801420a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801420e:	fb15 f504 	smulbb	r5, r5, r4
 8014212:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014216:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801421a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801421e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014222:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014226:	fb1a fa04 	smulbb	sl, sl, r4
 801422a:	fa5f f989 	uxtb.w	r9, r9
 801422e:	fb09 550c 	mla	r5, r9, ip, r5
 8014232:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014236:	fb07 a70c 	mla	r7, r7, ip, sl
 801423a:	fa1f fe8e 	uxth.w	lr, lr
 801423e:	b2ad      	uxth	r5, r5
 8014240:	f10e 0401 	add.w	r4, lr, #1
 8014244:	f105 0a01 	add.w	sl, r5, #1
 8014248:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801424c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014250:	b2bf      	uxth	r7, r7
 8014252:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014256:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801425a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801425e:	f107 0a01 	add.w	sl, r7, #1
 8014262:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014266:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801426a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801426e:	9c02      	ldr	r4, [sp, #8]
 8014270:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014274:	f820 e004 	strh.w	lr, [r0, r4]
 8014278:	e7aa      	b.n	80141d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801427a:	f04f 0900 	mov.w	r9, #0
 801427e:	eba3 0409 	sub.w	r4, r3, r9
 8014282:	2c00      	cmp	r4, #0
 8014284:	f77f af4a 	ble.w	801411c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014288:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801428c:	1414      	asrs	r4, r2, #16
 801428e:	140d      	asrs	r5, r1, #16
 8014290:	fb06 5504 	mla	r5, r6, r4, r5
 8014294:	9c01      	ldr	r4, [sp, #4]
 8014296:	5d64      	ldrb	r4, [r4, r5]
 8014298:	2cff      	cmp	r4, #255	@ 0xff
 801429a:	d10b      	bne.n	80142b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801429c:	9c00      	ldr	r4, [sp, #0]
 801429e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80142a2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80142a6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80142a8:	f109 0901 	add.w	r9, r9, #1
 80142ac:	4421      	add	r1, r4
 80142ae:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80142b0:	4422      	add	r2, r4
 80142b2:	e7e4      	b.n	801427e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80142b4:	2c00      	cmp	r4, #0
 80142b6:	d0f6      	beq.n	80142a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80142b8:	b2a7      	uxth	r7, r4
 80142ba:	43e4      	mvns	r4, r4
 80142bc:	9e00      	ldr	r6, [sp, #0]
 80142be:	b2e4      	uxtb	r4, r4
 80142c0:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80142c4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80142c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80142cc:	122e      	asrs	r6, r5, #8
 80142ce:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80142d2:	fb16 f604 	smulbb	r6, r6, r4
 80142d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80142da:	00ed      	lsls	r5, r5, #3
 80142dc:	b2ed      	uxtb	r5, r5
 80142de:	fb15 f504 	smulbb	r5, r5, r4
 80142e2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80142e6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80142ea:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80142ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80142f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80142f6:	fb1a fa04 	smulbb	sl, sl, r4
 80142fa:	fa5f fe8e 	uxtb.w	lr, lr
 80142fe:	fb0e 5507 	mla	r5, lr, r7, r5
 8014302:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014306:	fb06 a607 	mla	r6, r6, r7, sl
 801430a:	fa1f fc8c 	uxth.w	ip, ip
 801430e:	b2ad      	uxth	r5, r5
 8014310:	f10c 0401 	add.w	r4, ip, #1
 8014314:	f105 0a01 	add.w	sl, r5, #1
 8014318:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801431c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014320:	b2b6      	uxth	r6, r6
 8014322:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014326:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801432a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801432e:	f106 0a01 	add.w	sl, r6, #1
 8014332:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014336:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801433a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801433e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014342:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014346:	e7ae      	b.n	80142a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014348:	b005      	add	sp, #20
 801434a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801434e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801434e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014352:	b085      	sub	sp, #20
 8014354:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014356:	9100      	str	r1, [sp, #0]
 8014358:	9203      	str	r2, [sp, #12]
 801435a:	6841      	ldr	r1, [r0, #4]
 801435c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014360:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014364:	9201      	str	r2, [sp, #4]
 8014366:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801436a:	fb01 2404 	mla	r4, r1, r4, r2
 801436e:	6802      	ldr	r2, [r0, #0]
 8014370:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014374:	f8de 2000 	ldr.w	r2, [lr]
 8014378:	9202      	str	r2, [sp, #8]
 801437a:	9a01      	ldr	r2, [sp, #4]
 801437c:	43d6      	mvns	r6, r2
 801437e:	b2f6      	uxtb	r6, r6
 8014380:	9a00      	ldr	r2, [sp, #0]
 8014382:	2a00      	cmp	r2, #0
 8014384:	dc03      	bgt.n	801438e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014386:	9a03      	ldr	r2, [sp, #12]
 8014388:	2a00      	cmp	r2, #0
 801438a:	f340 8124 	ble.w	80145d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801438e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014390:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014394:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014398:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801439a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801439e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80143a2:	2b00      	cmp	r3, #0
 80143a4:	dd0e      	ble.n	80143c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80143a6:	1408      	asrs	r0, r1, #16
 80143a8:	d405      	bmi.n	80143b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143aa:	4560      	cmp	r0, ip
 80143ac:	da03      	bge.n	80143b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143ae:	1410      	asrs	r0, r2, #16
 80143b0:	d401      	bmi.n	80143b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80143b2:	42b8      	cmp	r0, r7
 80143b4:	db07      	blt.n	80143c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80143b6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80143b8:	3b01      	subs	r3, #1
 80143ba:	4401      	add	r1, r0
 80143bc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80143be:	3402      	adds	r4, #2
 80143c0:	4402      	add	r2, r0
 80143c2:	e7ee      	b.n	80143a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80143c4:	d06e      	beq.n	80144a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80143c6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80143c8:	1e58      	subs	r0, r3, #1
 80143ca:	fb05 1500 	mla	r5, r5, r0, r1
 80143ce:	142d      	asrs	r5, r5, #16
 80143d0:	d45c      	bmi.n	801448c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80143d2:	4565      	cmp	r5, ip
 80143d4:	da5a      	bge.n	801448c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80143d6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80143d8:	fb05 2000 	mla	r0, r5, r0, r2
 80143dc:	1400      	asrs	r0, r0, #16
 80143de:	d455      	bmi.n	801448c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80143e0:	42b8      	cmp	r0, r7
 80143e2:	da53      	bge.n	801448c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80143e4:	4699      	mov	r9, r3
 80143e6:	46a2      	mov	sl, r4
 80143e8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80143ec:	f1b9 0f00 	cmp.w	r9, #0
 80143f0:	dd54      	ble.n	801449c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80143f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80143f6:	140d      	asrs	r5, r1, #16
 80143f8:	1410      	asrs	r0, r2, #16
 80143fa:	fb07 5000 	mla	r0, r7, r0, r5
 80143fe:	9d02      	ldr	r5, [sp, #8]
 8014400:	f109 39ff 	add.w	r9, r9, #4294967295
 8014404:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014408:	f8ba 5000 	ldrh.w	r5, [sl]
 801440c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014410:	122f      	asrs	r7, r5, #8
 8014412:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014416:	fb17 f706 	smulbb	r7, r7, r6
 801441a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801441e:	00ed      	lsls	r5, r5, #3
 8014420:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014424:	b2ed      	uxtb	r5, r5
 8014426:	fb18 f806 	smulbb	r8, r8, r6
 801442a:	fb15 f506 	smulbb	r5, r5, r6
 801442e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014432:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014436:	10c7      	asrs	r7, r0, #3
 8014438:	00c0      	lsls	r0, r0, #3
 801443a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801443e:	b2c0      	uxtb	r0, r0
 8014440:	fb07 870b 	mla	r7, r7, fp, r8
 8014444:	fb00 500b 	mla	r0, r0, fp, r5
 8014448:	fa1f fc8c 	uxth.w	ip, ip
 801444c:	b280      	uxth	r0, r0
 801444e:	b2bf      	uxth	r7, r7
 8014450:	f10c 0501 	add.w	r5, ip, #1
 8014454:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014458:	f107 0801 	add.w	r8, r7, #1
 801445c:	1c45      	adds	r5, r0, #1
 801445e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014462:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014466:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014468:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801446c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014470:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014474:	ea45 0c0c 	orr.w	ip, r5, ip
 8014478:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801447c:	4401      	add	r1, r0
 801447e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014480:	ea4c 0c08 	orr.w	ip, ip, r8
 8014484:	f82a cb02 	strh.w	ip, [sl], #2
 8014488:	4402      	add	r2, r0
 801448a:	e7af      	b.n	80143ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801448c:	f04f 0800 	mov.w	r8, #0
 8014490:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014494:	eb03 0008 	add.w	r0, r3, r8
 8014498:	2800      	cmp	r0, #0
 801449a:	dc41      	bgt.n	8014520 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801449c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80144a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80144a4:	9b00      	ldr	r3, [sp, #0]
 80144a6:	2b00      	cmp	r3, #0
 80144a8:	f340 8095 	ble.w	80145d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80144ac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80144b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80144b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80144b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80144bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80144c0:	eef0 6a62 	vmov.f32	s13, s5
 80144c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80144c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80144d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144d8:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80144dc:	eef0 6a43 	vmov.f32	s13, s6
 80144e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144e4:	ee12 2a90 	vmov	r2, s5
 80144e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80144f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80144f6:	ee13 2a10 	vmov	r2, s6
 80144fa:	9311      	str	r3, [sp, #68]	@ 0x44
 80144fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144fe:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014502:	fb92 f3f3 	sdiv	r3, r2, r3
 8014506:	9312      	str	r3, [sp, #72]	@ 0x48
 8014508:	9b00      	ldr	r3, [sp, #0]
 801450a:	9a03      	ldr	r2, [sp, #12]
 801450c:	3b01      	subs	r3, #1
 801450e:	9300      	str	r3, [sp, #0]
 8014510:	eeb0 3a67 	vmov.f32	s6, s15
 8014514:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014516:	eef0 2a47 	vmov.f32	s5, s14
 801451a:	bf08      	it	eq
 801451c:	4613      	moveq	r3, r2
 801451e:	e72f      	b.n	8014380 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014520:	140f      	asrs	r7, r1, #16
 8014522:	d451      	bmi.n	80145c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014524:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014528:	42bd      	cmp	r5, r7
 801452a:	dd4d      	ble.n	80145c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801452c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014530:	d44a      	bmi.n	80145c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014532:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014536:	4560      	cmp	r0, ip
 8014538:	dd46      	ble.n	80145c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801453a:	b22d      	sxth	r5, r5
 801453c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014540:	9802      	ldr	r0, [sp, #8]
 8014542:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014546:	f06f 0501 	mvn.w	r5, #1
 801454a:	fb05 fb08 	mul.w	fp, r5, r8
 801454e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014552:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014556:	122f      	asrs	r7, r5, #8
 8014558:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801455c:	fb17 f706 	smulbb	r7, r7, r6
 8014560:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014564:	00ed      	lsls	r5, r5, #3
 8014566:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801456a:	b2ed      	uxtb	r5, r5
 801456c:	fb19 f906 	smulbb	r9, r9, r6
 8014570:	fb15 f506 	smulbb	r5, r5, r6
 8014574:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014578:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801457c:	10c7      	asrs	r7, r0, #3
 801457e:	00c0      	lsls	r0, r0, #3
 8014580:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014584:	b2c0      	uxtb	r0, r0
 8014586:	fb07 970a 	mla	r7, r7, sl, r9
 801458a:	fb00 500a 	mla	r0, r0, sl, r5
 801458e:	fa1f fc8c 	uxth.w	ip, ip
 8014592:	b2bf      	uxth	r7, r7
 8014594:	b280      	uxth	r0, r0
 8014596:	f10c 0501 	add.w	r5, ip, #1
 801459a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801459e:	f107 0901 	add.w	r9, r7, #1
 80145a2:	1c45      	adds	r5, r0, #1
 80145a4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80145a8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80145ac:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80145b0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80145b4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80145b8:	ea45 0c0c 	orr.w	ip, r5, ip
 80145bc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80145c0:	ea4c 0c09 	orr.w	ip, ip, r9
 80145c4:	f824 c00b 	strh.w	ip, [r4, fp]
 80145c8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80145ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80145ce:	4401      	add	r1, r0
 80145d0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80145d2:	4402      	add	r2, r0
 80145d4:	e75e      	b.n	8014494 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80145d6:	b005      	add	sp, #20
 80145d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080145dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80145dc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80145e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145e4:	b085      	sub	sp, #20
 80145e6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80145e8:	4693      	mov	fp, r2
 80145ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80145ee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80145f2:	6870      	ldr	r0, [r6, #4]
 80145f4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80145f6:	fb00 2404 	mla	r4, r0, r4, r2
 80145fa:	6832      	ldr	r2, [r6, #0]
 80145fc:	9101      	str	r1, [sp, #4]
 80145fe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014602:	682a      	ldr	r2, [r5, #0]
 8014604:	9202      	str	r2, [sp, #8]
 8014606:	9a01      	ldr	r2, [sp, #4]
 8014608:	2a00      	cmp	r2, #0
 801460a:	dc03      	bgt.n	8014614 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801460c:	f1bb 0f00 	cmp.w	fp, #0
 8014610:	f340 809a 	ble.w	8014748 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014614:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014616:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801461a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801461e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014620:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014624:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014628:	2b00      	cmp	r3, #0
 801462a:	dd0c      	ble.n	8014646 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801462c:	1406      	asrs	r6, r0, #16
 801462e:	d405      	bmi.n	801463c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014630:	454e      	cmp	r6, r9
 8014632:	da03      	bge.n	801463c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014634:	1416      	asrs	r6, r2, #16
 8014636:	d401      	bmi.n	801463c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014638:	4546      	cmp	r6, r8
 801463a:	db05      	blt.n	8014648 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801463c:	4470      	add	r0, lr
 801463e:	4462      	add	r2, ip
 8014640:	3b01      	subs	r3, #1
 8014642:	3402      	adds	r4, #2
 8014644:	e7f0      	b.n	8014628 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014646:	d00f      	beq.n	8014668 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014648:	1e5e      	subs	r6, r3, #1
 801464a:	fb0e 0706 	mla	r7, lr, r6, r0
 801464e:	143f      	asrs	r7, r7, #16
 8014650:	d541      	bpl.n	80146d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014652:	4698      	mov	r8, r3
 8014654:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014658:	9603      	str	r6, [sp, #12]
 801465a:	f1b8 0f00 	cmp.w	r8, #0
 801465e:	dc56      	bgt.n	801470e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014660:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014664:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014668:	9b01      	ldr	r3, [sp, #4]
 801466a:	2b00      	cmp	r3, #0
 801466c:	dd6c      	ble.n	8014748 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801466e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014672:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014676:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801467a:	eeb0 6a62 	vmov.f32	s12, s5
 801467e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014682:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014686:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801468a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801468e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014692:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014696:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801469a:	eeb0 6a43 	vmov.f32	s12, s6
 801469e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80146a2:	ee12 2a90 	vmov	r2, s5
 80146a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80146aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80146b0:	fb92 fef3 	sdiv	lr, r2, r3
 80146b4:	ee13 2a10 	vmov	r2, s6
 80146b8:	fb92 fcf3 	sdiv	ip, r2, r3
 80146bc:	9b01      	ldr	r3, [sp, #4]
 80146be:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80146c2:	3b01      	subs	r3, #1
 80146c4:	9301      	str	r3, [sp, #4]
 80146c6:	eeb0 3a67 	vmov.f32	s6, s15
 80146ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80146cc:	eef0 2a47 	vmov.f32	s5, s14
 80146d0:	bf08      	it	eq
 80146d2:	465b      	moveq	r3, fp
 80146d4:	e797      	b.n	8014606 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80146d6:	454f      	cmp	r7, r9
 80146d8:	dabb      	bge.n	8014652 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80146da:	fb0c 2606 	mla	r6, ip, r6, r2
 80146de:	1436      	asrs	r6, r6, #16
 80146e0:	d4b7      	bmi.n	8014652 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80146e2:	4546      	cmp	r6, r8
 80146e4:	dab5      	bge.n	8014652 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80146e6:	461e      	mov	r6, r3
 80146e8:	46a0      	mov	r8, r4
 80146ea:	2e00      	cmp	r6, #0
 80146ec:	ddb8      	ble.n	8014660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80146ee:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80146f2:	1417      	asrs	r7, r2, #16
 80146f4:	ea4f 4920 	mov.w	r9, r0, asr #16
 80146f8:	fb0a 9707 	mla	r7, sl, r7, r9
 80146fc:	9902      	ldr	r1, [sp, #8]
 80146fe:	4470      	add	r0, lr
 8014700:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014704:	4462      	add	r2, ip
 8014706:	f828 7b02 	strh.w	r7, [r8], #2
 801470a:	3e01      	subs	r6, #1
 801470c:	e7ed      	b.n	80146ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801470e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014712:	d414      	bmi.n	801473e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014714:	68ae      	ldr	r6, [r5, #8]
 8014716:	454e      	cmp	r6, r9
 8014718:	dd11      	ble.n	801473e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801471a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801471e:	d40e      	bmi.n	801473e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014720:	68ef      	ldr	r7, [r5, #12]
 8014722:	4557      	cmp	r7, sl
 8014724:	dd0b      	ble.n	801473e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014726:	f06f 0101 	mvn.w	r1, #1
 801472a:	b236      	sxth	r6, r6
 801472c:	fb0a 9606 	mla	r6, sl, r6, r9
 8014730:	9f02      	ldr	r7, [sp, #8]
 8014732:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014736:	fb01 f608 	mul.w	r6, r1, r8
 801473a:	9903      	ldr	r1, [sp, #12]
 801473c:	538f      	strh	r7, [r1, r6]
 801473e:	4470      	add	r0, lr
 8014740:	4462      	add	r2, ip
 8014742:	f108 38ff 	add.w	r8, r8, #4294967295
 8014746:	e788      	b.n	801465a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014748:	b005      	add	sp, #20
 801474a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801474e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801474e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014752:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014756:	b087      	sub	sp, #28
 8014758:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801475a:	468b      	mov	fp, r1
 801475c:	9203      	str	r2, [sp, #12]
 801475e:	6841      	ldr	r1, [r0, #4]
 8014760:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014764:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014768:	9204      	str	r2, [sp, #16]
 801476a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801476e:	fb01 2505 	mla	r5, r1, r5, r2
 8014772:	6802      	ldr	r2, [r0, #0]
 8014774:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014778:	f8d9 2000 	ldr.w	r2, [r9]
 801477c:	9201      	str	r2, [sp, #4]
 801477e:	f1bb 0f00 	cmp.w	fp, #0
 8014782:	dc03      	bgt.n	801478c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014784:	9a03      	ldr	r2, [sp, #12]
 8014786:	2a00      	cmp	r2, #0
 8014788:	f340 8159 	ble.w	8014a3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801478c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801478e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014792:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014796:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014798:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801479c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80147a0:	2b00      	cmp	r3, #0
 80147a2:	dd0e      	ble.n	80147c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80147a4:	1402      	asrs	r2, r0, #16
 80147a6:	d405      	bmi.n	80147b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80147a8:	42ba      	cmp	r2, r7
 80147aa:	da03      	bge.n	80147b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80147ac:	140a      	asrs	r2, r1, #16
 80147ae:	d401      	bmi.n	80147b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80147b0:	42b2      	cmp	r2, r6
 80147b2:	db07      	blt.n	80147c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80147b4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80147b6:	3b01      	subs	r3, #1
 80147b8:	4410      	add	r0, r2
 80147ba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80147bc:	3502      	adds	r5, #2
 80147be:	4411      	add	r1, r2
 80147c0:	e7ee      	b.n	80147a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80147c2:	d017      	beq.n	80147f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80147c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80147c6:	1e5a      	subs	r2, r3, #1
 80147c8:	fb04 0402 	mla	r4, r4, r2, r0
 80147cc:	1424      	asrs	r4, r4, #16
 80147ce:	d409      	bmi.n	80147e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80147d0:	42bc      	cmp	r4, r7
 80147d2:	da07      	bge.n	80147e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80147d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80147d6:	fb04 1202 	mla	r2, r4, r2, r1
 80147da:	1412      	asrs	r2, r2, #16
 80147dc:	d402      	bmi.n	80147e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80147de:	42b2      	cmp	r2, r6
 80147e0:	f2c0 80bf 	blt.w	8014962 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80147e4:	2700      	movs	r7, #0
 80147e6:	19da      	adds	r2, r3, r7
 80147e8:	2a00      	cmp	r2, #0
 80147ea:	dc3e      	bgt.n	801486a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80147ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80147f0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80147f4:	f1bb 0f00 	cmp.w	fp, #0
 80147f8:	f340 8121 	ble.w	8014a3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80147fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014800:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014804:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014808:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801480c:	eeb0 6a62 	vmov.f32	s12, s5
 8014810:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014814:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014818:	ee61 7a27 	vmul.f32	s15, s2, s15
 801481c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014820:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014824:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014828:	eeb0 6a43 	vmov.f32	s12, s6
 801482c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014830:	ee12 2a90 	vmov	r2, s5
 8014834:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014838:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801483a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801483e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014842:	ee13 2a10 	vmov	r2, s6
 8014846:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014848:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801484a:	f1bb 0b01 	subs.w	fp, fp, #1
 801484e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014852:	9a03      	ldr	r2, [sp, #12]
 8014854:	9314      	str	r3, [sp, #80]	@ 0x50
 8014856:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801485a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801485c:	eeb0 3a67 	vmov.f32	s6, s15
 8014860:	bf08      	it	eq
 8014862:	4613      	moveq	r3, r2
 8014864:	eef0 2a47 	vmov.f32	s5, s14
 8014868:	e789      	b.n	801477e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801486a:	1406      	asrs	r6, r0, #16
 801486c:	d42d      	bmi.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801486e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014872:	42b4      	cmp	r4, r6
 8014874:	dd29      	ble.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014876:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801487a:	d426      	bmi.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801487c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014880:	4562      	cmp	r2, ip
 8014882:	dd22      	ble.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014884:	b224      	sxth	r4, r4
 8014886:	fb0c 6404 	mla	r4, ip, r4, r6
 801488a:	9a01      	ldr	r2, [sp, #4]
 801488c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014890:	0e22      	lsrs	r2, r4, #24
 8014892:	d01a      	beq.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014894:	9e04      	ldr	r6, [sp, #16]
 8014896:	4372      	muls	r2, r6
 8014898:	1c56      	adds	r6, r2, #1
 801489a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801489e:	1212      	asrs	r2, r2, #8
 80148a0:	0a26      	lsrs	r6, r4, #8
 80148a2:	2aff      	cmp	r2, #255	@ 0xff
 80148a4:	9605      	str	r6, [sp, #20]
 80148a6:	d116      	bne.n	80148d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80148a8:	f06f 0201 	mvn.w	r2, #1
 80148ac:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80148b0:	fb02 fc07 	mul.w	ip, r2, r7
 80148b4:	0962      	lsrs	r2, r4, #5
 80148b6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80148ba:	f026 0607 	bic.w	r6, r6, #7
 80148be:	4316      	orrs	r6, r2
 80148c0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80148c4:	4326      	orrs	r6, r4
 80148c6:	f825 600c 	strh.w	r6, [r5, ip]
 80148ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80148cc:	3f01      	subs	r7, #1
 80148ce:	4410      	add	r0, r2
 80148d0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80148d2:	4411      	add	r1, r2
 80148d4:	e787      	b.n	80147e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80148d6:	f06f 0601 	mvn.w	r6, #1
 80148da:	fa1f fa82 	uxth.w	sl, r2
 80148de:	43d2      	mvns	r2, r2
 80148e0:	437e      	muls	r6, r7
 80148e2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80148e6:	f835 8006 	ldrh.w	r8, [r5, r6]
 80148ea:	fb1c fc0a 	smulbb	ip, ip, sl
 80148ee:	b2e4      	uxtb	r4, r4
 80148f0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80148f4:	fb14 f40a 	smulbb	r4, r4, sl
 80148f8:	b2d2      	uxtb	r2, r2
 80148fa:	9602      	str	r6, [sp, #8]
 80148fc:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014900:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014904:	fb0e ce02 	mla	lr, lr, r2, ip
 8014908:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801490c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014910:	fb16 f60a 	smulbb	r6, r6, sl
 8014914:	fa5f f888 	uxtb.w	r8, r8
 8014918:	fb08 4402 	mla	r4, r8, r2, r4
 801491c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014920:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014924:	fa1f fe8e 	uxth.w	lr, lr
 8014928:	b2a4      	uxth	r4, r4
 801492a:	f10e 0201 	add.w	r2, lr, #1
 801492e:	1c66      	adds	r6, r4, #1
 8014930:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014934:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014938:	fa1f fc8c 	uxth.w	ip, ip
 801493c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014940:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014944:	ea46 0e0e 	orr.w	lr, r6, lr
 8014948:	f10c 0601 	add.w	r6, ip, #1
 801494c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014950:	0976      	lsrs	r6, r6, #5
 8014952:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014956:	9a02      	ldr	r2, [sp, #8]
 8014958:	ea4e 0e06 	orr.w	lr, lr, r6
 801495c:	f825 e002 	strh.w	lr, [r5, r2]
 8014960:	e7b3      	b.n	80148ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014962:	f04f 0800 	mov.w	r8, #0
 8014966:	eba3 0208 	sub.w	r2, r3, r8
 801496a:	2a00      	cmp	r2, #0
 801496c:	f77f af3e 	ble.w	80147ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014970:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014974:	1404      	asrs	r4, r0, #16
 8014976:	140a      	asrs	r2, r1, #16
 8014978:	fb06 4202 	mla	r2, r6, r2, r4
 801497c:	9c01      	ldr	r4, [sp, #4]
 801497e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014982:	0e22      	lsrs	r2, r4, #24
 8014984:	d016      	beq.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014986:	9e04      	ldr	r6, [sp, #16]
 8014988:	4372      	muls	r2, r6
 801498a:	1c56      	adds	r6, r2, #1
 801498c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014990:	1212      	asrs	r2, r2, #8
 8014992:	2aff      	cmp	r2, #255	@ 0xff
 8014994:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014998:	d113      	bne.n	80149c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801499a:	0962      	lsrs	r2, r4, #5
 801499c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80149a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80149a4:	f026 0607 	bic.w	r6, r6, #7
 80149a8:	4316      	orrs	r6, r2
 80149aa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80149ae:	4326      	orrs	r6, r4
 80149b0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80149b4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80149b6:	f108 0801 	add.w	r8, r8, #1
 80149ba:	4410      	add	r0, r2
 80149bc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80149be:	4411      	add	r1, r2
 80149c0:	e7d1      	b.n	8014966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80149c2:	fa1f fa82 	uxth.w	sl, r2
 80149c6:	43d2      	mvns	r2, r2
 80149c8:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80149cc:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80149d0:	fb17 f70a 	smulbb	r7, r7, sl
 80149d4:	b2e4      	uxtb	r4, r4
 80149d6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80149da:	fb14 f40a 	smulbb	r4, r4, sl
 80149de:	b2d2      	uxtb	r2, r2
 80149e0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80149e4:	fb0c 7c02 	mla	ip, ip, r2, r7
 80149e8:	b2f6      	uxtb	r6, r6
 80149ea:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80149ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80149f2:	fb16 f60a 	smulbb	r6, r6, sl
 80149f6:	fa5f fe8e 	uxtb.w	lr, lr
 80149fa:	fb0e 4402 	mla	r4, lr, r2, r4
 80149fe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014a02:	fb07 6702 	mla	r7, r7, r2, r6
 8014a06:	fa1f fc8c 	uxth.w	ip, ip
 8014a0a:	b2a4      	uxth	r4, r4
 8014a0c:	f10c 0201 	add.w	r2, ip, #1
 8014a10:	1c66      	adds	r6, r4, #1
 8014a12:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014a16:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014a1a:	b2bf      	uxth	r7, r7
 8014a1c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014a20:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014a24:	ea46 0c0c 	orr.w	ip, r6, ip
 8014a28:	1c7e      	adds	r6, r7, #1
 8014a2a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014a2e:	0976      	lsrs	r6, r6, #5
 8014a30:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014a34:	ea4c 0c06 	orr.w	ip, ip, r6
 8014a38:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014a3c:	e7ba      	b.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014a3e:	b007      	add	sp, #28
 8014a40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014a44 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a44:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a4c:	b085      	sub	sp, #20
 8014a4e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014a50:	468b      	mov	fp, r1
 8014a52:	6841      	ldr	r1, [r0, #4]
 8014a54:	9203      	str	r2, [sp, #12]
 8014a56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014a5a:	fb01 2404 	mla	r4, r1, r4, r2
 8014a5e:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014a62:	6802      	ldr	r2, [r0, #0]
 8014a64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a68:	f8d8 2000 	ldr.w	r2, [r8]
 8014a6c:	9201      	str	r2, [sp, #4]
 8014a6e:	f1bb 0f00 	cmp.w	fp, #0
 8014a72:	dc03      	bgt.n	8014a7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014a74:	9a03      	ldr	r2, [sp, #12]
 8014a76:	2a00      	cmp	r2, #0
 8014a78:	f340 814f 	ble.w	8014d1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014a7c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014a7e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014a82:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014a86:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014a88:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014a8c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014a90:	2b00      	cmp	r3, #0
 8014a92:	dd0e      	ble.n	8014ab2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014a94:	1408      	asrs	r0, r1, #16
 8014a96:	d405      	bmi.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a98:	42b8      	cmp	r0, r7
 8014a9a:	da03      	bge.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a9c:	1410      	asrs	r0, r2, #16
 8014a9e:	d401      	bmi.n	8014aa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014aa0:	42b0      	cmp	r0, r6
 8014aa2:	db07      	blt.n	8014ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014aa4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014aa6:	3b01      	subs	r3, #1
 8014aa8:	4401      	add	r1, r0
 8014aaa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014aac:	3402      	adds	r4, #2
 8014aae:	4402      	add	r2, r0
 8014ab0:	e7ee      	b.n	8014a90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014ab2:	d017      	beq.n	8014ae4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014ab4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014ab6:	1e58      	subs	r0, r3, #1
 8014ab8:	fb05 1500 	mla	r5, r5, r0, r1
 8014abc:	142d      	asrs	r5, r5, #16
 8014abe:	d409      	bmi.n	8014ad4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ac0:	42bd      	cmp	r5, r7
 8014ac2:	da07      	bge.n	8014ad4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ac4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014ac6:	fb05 2000 	mla	r0, r5, r0, r2
 8014aca:	1400      	asrs	r0, r0, #16
 8014acc:	d402      	bmi.n	8014ad4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014ace:	42b0      	cmp	r0, r6
 8014ad0:	f2c0 80ba 	blt.w	8014c48 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014ad4:	2600      	movs	r6, #0
 8014ad6:	1998      	adds	r0, r3, r6
 8014ad8:	2800      	cmp	r0, #0
 8014ada:	dc3e      	bgt.n	8014b5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014adc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ae0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ae4:	f1bb 0f00 	cmp.w	fp, #0
 8014ae8:	f340 8117 	ble.w	8014d1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014aec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014af0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014af4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014af8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014afc:	eeb0 6a62 	vmov.f32	s12, s5
 8014b00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b14:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014b18:	eeb0 6a43 	vmov.f32	s12, s6
 8014b1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b20:	ee12 2a90 	vmov	r2, s5
 8014b24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b32:	ee13 2a10 	vmov	r2, s6
 8014b36:	9311      	str	r3, [sp, #68]	@ 0x44
 8014b38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b3a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014b3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b42:	9a03      	ldr	r2, [sp, #12]
 8014b44:	9312      	str	r3, [sp, #72]	@ 0x48
 8014b46:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014b4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b4c:	eeb0 3a67 	vmov.f32	s6, s15
 8014b50:	bf08      	it	eq
 8014b52:	4613      	moveq	r3, r2
 8014b54:	eef0 2a47 	vmov.f32	s5, s14
 8014b58:	e789      	b.n	8014a6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014b5a:	140f      	asrs	r7, r1, #16
 8014b5c:	d424      	bmi.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b5e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014b62:	42bd      	cmp	r5, r7
 8014b64:	dd20      	ble.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b66:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014b6a:	d41d      	bmi.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b6c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014b70:	4560      	cmp	r0, ip
 8014b72:	dd19      	ble.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b74:	b22d      	sxth	r5, r5
 8014b76:	fb0c 7505 	mla	r5, ip, r5, r7
 8014b7a:	9801      	ldr	r0, [sp, #4]
 8014b7c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014b80:	0e07      	lsrs	r7, r0, #24
 8014b82:	2fff      	cmp	r7, #255	@ 0xff
 8014b84:	d116      	bne.n	8014bb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014b86:	f06f 0501 	mvn.w	r5, #1
 8014b8a:	fb05 f706 	mul.w	r7, r5, r6
 8014b8e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014b92:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014b96:	0945      	lsrs	r5, r0, #5
 8014b98:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014b9c:	ea4c 0505 	orr.w	r5, ip, r5
 8014ba0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014ba4:	4305      	orrs	r5, r0
 8014ba6:	53e5      	strh	r5, [r4, r7]
 8014ba8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014baa:	3e01      	subs	r6, #1
 8014bac:	4401      	add	r1, r0
 8014bae:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014bb0:	4402      	add	r2, r0
 8014bb2:	e790      	b.n	8014ad6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014bb4:	b2fd      	uxtb	r5, r7
 8014bb6:	2f00      	cmp	r7, #0
 8014bb8:	d0f6      	beq.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014bba:	f06f 0701 	mvn.w	r7, #1
 8014bbe:	fa1f f985 	uxth.w	r9, r5
 8014bc2:	43ed      	mvns	r5, r5
 8014bc4:	4377      	muls	r7, r6
 8014bc6:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014bca:	9702      	str	r7, [sp, #8]
 8014bcc:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014bd0:	fb17 f709 	smulbb	r7, r7, r9
 8014bd4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014bd8:	b2c0      	uxtb	r0, r0
 8014bda:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014bde:	fb10 f009 	smulbb	r0, r0, r9
 8014be2:	b2ed      	uxtb	r5, r5
 8014be4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014be8:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014bec:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014bf0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014bf4:	fb1a fa09 	smulbb	sl, sl, r9
 8014bf8:	fa5f fe8e 	uxtb.w	lr, lr
 8014bfc:	fb0e 0005 	mla	r0, lr, r5, r0
 8014c00:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014c04:	fb07 a705 	mla	r7, r7, r5, sl
 8014c08:	b280      	uxth	r0, r0
 8014c0a:	fa1f fc8c 	uxth.w	ip, ip
 8014c0e:	f100 0a01 	add.w	sl, r0, #1
 8014c12:	f10c 0501 	add.w	r5, ip, #1
 8014c16:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014c1a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014c1e:	b2bf      	uxth	r7, r7
 8014c20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c24:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c28:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014c2c:	f107 0a01 	add.w	sl, r7, #1
 8014c30:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014c34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c38:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c3c:	9802      	ldr	r0, [sp, #8]
 8014c3e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014c42:	f824 c000 	strh.w	ip, [r4, r0]
 8014c46:	e7af      	b.n	8014ba8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c48:	f04f 0e00 	mov.w	lr, #0
 8014c4c:	eba3 000e 	sub.w	r0, r3, lr
 8014c50:	2800      	cmp	r0, #0
 8014c52:	f77f af43 	ble.w	8014adc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014c56:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014c5a:	140d      	asrs	r5, r1, #16
 8014c5c:	1410      	asrs	r0, r2, #16
 8014c5e:	fb06 5000 	mla	r0, r6, r0, r5
 8014c62:	9d01      	ldr	r5, [sp, #4]
 8014c64:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014c68:	0e2e      	lsrs	r6, r5, #24
 8014c6a:	2eff      	cmp	r6, #255	@ 0xff
 8014c6c:	d112      	bne.n	8014c94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014c6e:	482c      	ldr	r0, [pc, #176]	@ (8014d20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014c70:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014c74:	0968      	lsrs	r0, r5, #5
 8014c76:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014c7a:	4330      	orrs	r0, r6
 8014c7c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014c80:	4328      	orrs	r0, r5
 8014c82:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014c86:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014c88:	f10e 0e01 	add.w	lr, lr, #1
 8014c8c:	4401      	add	r1, r0
 8014c8e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014c90:	4402      	add	r2, r0
 8014c92:	e7db      	b.n	8014c4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014c94:	b2f0      	uxtb	r0, r6
 8014c96:	2e00      	cmp	r6, #0
 8014c98:	d0f5      	beq.n	8014c86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014c9a:	fa1f f980 	uxth.w	r9, r0
 8014c9e:	43c0      	mvns	r0, r0
 8014ca0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014ca4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014ca8:	fb16 f609 	smulbb	r6, r6, r9
 8014cac:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014cb0:	b2ed      	uxtb	r5, r5
 8014cb2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014cb6:	fb15 f509 	smulbb	r5, r5, r9
 8014cba:	b2c0      	uxtb	r0, r0
 8014cbc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014cc0:	fb07 6700 	mla	r7, r7, r0, r6
 8014cc4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014cc8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014ccc:	fb1a fa09 	smulbb	sl, sl, r9
 8014cd0:	fa5f fc8c 	uxtb.w	ip, ip
 8014cd4:	fb0c 5500 	mla	r5, ip, r0, r5
 8014cd8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014cdc:	fb06 a600 	mla	r6, r6, r0, sl
 8014ce0:	b2bf      	uxth	r7, r7
 8014ce2:	b2ad      	uxth	r5, r5
 8014ce4:	1c78      	adds	r0, r7, #1
 8014ce6:	f105 0a01 	add.w	sl, r5, #1
 8014cea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014cee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014cf2:	b2b6      	uxth	r6, r6
 8014cf4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014cf8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014cfc:	ea4a 0707 	orr.w	r7, sl, r7
 8014d00:	f106 0a01 	add.w	sl, r6, #1
 8014d04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d0c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014d10:	ea47 070a 	orr.w	r7, r7, sl
 8014d14:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014d18:	e7b5      	b.n	8014c86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014d1a:	b005      	add	sp, #20
 8014d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014d20:	fffff800 	.word	0xfffff800

08014d24 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d24:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d2c:	b087      	sub	sp, #28
 8014d2e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014d30:	468b      	mov	fp, r1
 8014d32:	9203      	str	r2, [sp, #12]
 8014d34:	6841      	ldr	r1, [r0, #4]
 8014d36:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014d3a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014d3e:	9204      	str	r2, [sp, #16]
 8014d40:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014d44:	fb01 2404 	mla	r4, r1, r4, r2
 8014d48:	6802      	ldr	r2, [r0, #0]
 8014d4a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014d4e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014d52:	3201      	adds	r2, #1
 8014d54:	f022 0201 	bic.w	r2, r2, #1
 8014d58:	9200      	str	r2, [sp, #0]
 8014d5a:	f8d9 2000 	ldr.w	r2, [r9]
 8014d5e:	9201      	str	r2, [sp, #4]
 8014d60:	f1bb 0f00 	cmp.w	fp, #0
 8014d64:	dc03      	bgt.n	8014d6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014d66:	9a03      	ldr	r2, [sp, #12]
 8014d68:	2a00      	cmp	r2, #0
 8014d6a:	f340 816a 	ble.w	8015042 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8014d6e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014d70:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014d74:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014d78:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014d7a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014d7e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014d82:	2b00      	cmp	r3, #0
 8014d84:	dd0e      	ble.n	8014da4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014d86:	1402      	asrs	r2, r0, #16
 8014d88:	d405      	bmi.n	8014d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d8a:	42ba      	cmp	r2, r7
 8014d8c:	da03      	bge.n	8014d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d8e:	140a      	asrs	r2, r1, #16
 8014d90:	d401      	bmi.n	8014d96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014d92:	42b2      	cmp	r2, r6
 8014d94:	db07      	blt.n	8014da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014d96:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014d98:	3b01      	subs	r3, #1
 8014d9a:	4410      	add	r0, r2
 8014d9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014d9e:	3402      	adds	r4, #2
 8014da0:	4411      	add	r1, r2
 8014da2:	e7ee      	b.n	8014d82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014da4:	d017      	beq.n	8014dd6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014da6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014da8:	1e5a      	subs	r2, r3, #1
 8014daa:	fb05 0502 	mla	r5, r5, r2, r0
 8014dae:	142d      	asrs	r5, r5, #16
 8014db0:	d409      	bmi.n	8014dc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014db2:	42bd      	cmp	r5, r7
 8014db4:	da07      	bge.n	8014dc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014db6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014db8:	fb05 1202 	mla	r2, r5, r2, r1
 8014dbc:	1412      	asrs	r2, r2, #16
 8014dbe:	d402      	bmi.n	8014dc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014dc0:	42b2      	cmp	r2, r6
 8014dc2:	f2c0 80c8 	blt.w	8014f56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8014dc6:	2700      	movs	r7, #0
 8014dc8:	19da      	adds	r2, r3, r7
 8014dca:	2a00      	cmp	r2, #0
 8014dcc:	dc3e      	bgt.n	8014e4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014dce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014dd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014dd6:	f1bb 0f00 	cmp.w	fp, #0
 8014dda:	f340 8132 	ble.w	8015042 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8014dde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014de2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014de6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014dea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014dee:	eeb0 6a62 	vmov.f32	s12, s5
 8014df2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014df6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014dfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014dfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e06:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014e0a:	eeb0 6a43 	vmov.f32	s12, s6
 8014e0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e12:	ee12 2a90 	vmov	r2, s5
 8014e16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014e1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e24:	ee13 2a10 	vmov	r2, s6
 8014e28:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014e2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e2c:	f1bb 0b01 	subs.w	fp, fp, #1
 8014e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8014e34:	9a03      	ldr	r2, [sp, #12]
 8014e36:	9314      	str	r3, [sp, #80]	@ 0x50
 8014e38:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014e3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014e3e:	eeb0 3a67 	vmov.f32	s6, s15
 8014e42:	bf08      	it	eq
 8014e44:	4613      	moveq	r3, r2
 8014e46:	eef0 2a47 	vmov.f32	s5, s14
 8014e4a:	e789      	b.n	8014d60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014e4c:	1405      	asrs	r5, r0, #16
 8014e4e:	d436      	bmi.n	8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014e50:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014e54:	42aa      	cmp	r2, r5
 8014e56:	dd32      	ble.n	8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014e58:	140e      	asrs	r6, r1, #16
 8014e5a:	d430      	bmi.n	8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014e5c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014e60:	42b2      	cmp	r2, r6
 8014e62:	dd2c      	ble.n	8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014e64:	9a00      	ldr	r2, [sp, #0]
 8014e66:	fb06 5502 	mla	r5, r6, r2, r5
 8014e6a:	9e01      	ldr	r6, [sp, #4]
 8014e6c:	086a      	lsrs	r2, r5, #1
 8014e6e:	5cb2      	ldrb	r2, [r6, r2]
 8014e70:	07ee      	lsls	r6, r5, #31
 8014e72:	bf54      	ite	pl
 8014e74:	f002 020f 	andpl.w	r2, r2, #15
 8014e78:	1112      	asrmi	r2, r2, #4
 8014e7a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014e7e:	b2d2      	uxtb	r2, r2
 8014e80:	b1ea      	cbz	r2, 8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014e82:	9d04      	ldr	r5, [sp, #16]
 8014e84:	436a      	muls	r2, r5
 8014e86:	1c55      	adds	r5, r2, #1
 8014e88:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014e8c:	4d6e      	ldr	r5, [pc, #440]	@ (8015048 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014e8e:	1212      	asrs	r2, r2, #8
 8014e90:	682d      	ldr	r5, [r5, #0]
 8014e92:	2aff      	cmp	r2, #255	@ 0xff
 8014e94:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8014e98:	9605      	str	r6, [sp, #20]
 8014e9a:	d116      	bne.n	8014eca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8014e9c:	f06f 0201 	mvn.w	r2, #1
 8014ea0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014ea4:	fb02 fc07 	mul.w	ip, r2, r7
 8014ea8:	096a      	lsrs	r2, r5, #5
 8014eaa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014eae:	f026 0607 	bic.w	r6, r6, #7
 8014eb2:	4316      	orrs	r6, r2
 8014eb4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014eb8:	432e      	orrs	r6, r5
 8014eba:	f824 600c 	strh.w	r6, [r4, ip]
 8014ebe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ec0:	3f01      	subs	r7, #1
 8014ec2:	4410      	add	r0, r2
 8014ec4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ec6:	4411      	add	r1, r2
 8014ec8:	e77e      	b.n	8014dc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014eca:	f06f 0601 	mvn.w	r6, #1
 8014ece:	fa1f fa82 	uxth.w	sl, r2
 8014ed2:	43d2      	mvns	r2, r2
 8014ed4:	437e      	muls	r6, r7
 8014ed6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014eda:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014ede:	fb1c fc0a 	smulbb	ip, ip, sl
 8014ee2:	b2ed      	uxtb	r5, r5
 8014ee4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014ee8:	fb15 f50a 	smulbb	r5, r5, sl
 8014eec:	b2d2      	uxtb	r2, r2
 8014eee:	9602      	str	r6, [sp, #8]
 8014ef0:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014ef4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014ef8:	fb0e ce02 	mla	lr, lr, r2, ip
 8014efc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014f00:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014f04:	fb16 f60a 	smulbb	r6, r6, sl
 8014f08:	fa5f f888 	uxtb.w	r8, r8
 8014f0c:	fb08 5502 	mla	r5, r8, r2, r5
 8014f10:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014f14:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014f18:	fa1f fe8e 	uxth.w	lr, lr
 8014f1c:	b2ad      	uxth	r5, r5
 8014f1e:	f10e 0201 	add.w	r2, lr, #1
 8014f22:	1c6e      	adds	r6, r5, #1
 8014f24:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014f28:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014f2c:	fa1f fc8c 	uxth.w	ip, ip
 8014f30:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014f34:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014f38:	ea46 0e0e 	orr.w	lr, r6, lr
 8014f3c:	f10c 0601 	add.w	r6, ip, #1
 8014f40:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014f44:	0976      	lsrs	r6, r6, #5
 8014f46:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014f4a:	9a02      	ldr	r2, [sp, #8]
 8014f4c:	ea4e 0e06 	orr.w	lr, lr, r6
 8014f50:	f824 e002 	strh.w	lr, [r4, r2]
 8014f54:	e7b3      	b.n	8014ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014f56:	f04f 0800 	mov.w	r8, #0
 8014f5a:	eba3 0208 	sub.w	r2, r3, r8
 8014f5e:	2a00      	cmp	r2, #0
 8014f60:	f77f af35 	ble.w	8014dce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014f64:	9e00      	ldr	r6, [sp, #0]
 8014f66:	1402      	asrs	r2, r0, #16
 8014f68:	140d      	asrs	r5, r1, #16
 8014f6a:	fb06 2505 	mla	r5, r6, r5, r2
 8014f6e:	9e01      	ldr	r6, [sp, #4]
 8014f70:	086a      	lsrs	r2, r5, #1
 8014f72:	5cb2      	ldrb	r2, [r6, r2]
 8014f74:	07ed      	lsls	r5, r5, #31
 8014f76:	bf54      	ite	pl
 8014f78:	f002 020f 	andpl.w	r2, r2, #15
 8014f7c:	1112      	asrmi	r2, r2, #4
 8014f7e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014f82:	b2d2      	uxtb	r2, r2
 8014f84:	b1c2      	cbz	r2, 8014fb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f86:	9d04      	ldr	r5, [sp, #16]
 8014f88:	436a      	muls	r2, r5
 8014f8a:	1c55      	adds	r5, r2, #1
 8014f8c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014f90:	4d2d      	ldr	r5, [pc, #180]	@ (8015048 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014f92:	1212      	asrs	r2, r2, #8
 8014f94:	682e      	ldr	r6, [r5, #0]
 8014f96:	2aff      	cmp	r2, #255	@ 0xff
 8014f98:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8014f9c:	d113      	bne.n	8014fc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014f9e:	0972      	lsrs	r2, r6, #5
 8014fa0:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014fa4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014fa8:	f025 0507 	bic.w	r5, r5, #7
 8014fac:	4315      	orrs	r5, r2
 8014fae:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014fb2:	4335      	orrs	r5, r6
 8014fb4:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014fb8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014fba:	f108 0801 	add.w	r8, r8, #1
 8014fbe:	4410      	add	r0, r2
 8014fc0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014fc2:	4411      	add	r1, r2
 8014fc4:	e7c9      	b.n	8014f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014fc6:	fa1f fa82 	uxth.w	sl, r2
 8014fca:	43d2      	mvns	r2, r2
 8014fcc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8014fd0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014fd4:	fb17 f70a 	smulbb	r7, r7, sl
 8014fd8:	b2f6      	uxtb	r6, r6
 8014fda:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014fde:	fb16 f60a 	smulbb	r6, r6, sl
 8014fe2:	b2d2      	uxtb	r2, r2
 8014fe4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014fe8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014fec:	b2ed      	uxtb	r5, r5
 8014fee:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014ff2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014ff6:	fb15 f50a 	smulbb	r5, r5, sl
 8014ffa:	fa5f fe8e 	uxtb.w	lr, lr
 8014ffe:	fb0e 6602 	mla	r6, lr, r2, r6
 8015002:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015006:	fb07 5702 	mla	r7, r7, r2, r5
 801500a:	fa1f fc8c 	uxth.w	ip, ip
 801500e:	b2b6      	uxth	r6, r6
 8015010:	f10c 0201 	add.w	r2, ip, #1
 8015014:	1c75      	adds	r5, r6, #1
 8015016:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801501a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801501e:	b2bf      	uxth	r7, r7
 8015020:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015024:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015028:	ea45 0c0c 	orr.w	ip, r5, ip
 801502c:	1c7d      	adds	r5, r7, #1
 801502e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015032:	096d      	lsrs	r5, r5, #5
 8015034:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015038:	ea4c 0c05 	orr.w	ip, ip, r5
 801503c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8015040:	e7ba      	b.n	8014fb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015042:	b007      	add	sp, #28
 8015044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015048:	20002238 	.word	0x20002238

0801504c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801504c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015050:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015054:	b087      	sub	sp, #28
 8015056:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015058:	9101      	str	r1, [sp, #4]
 801505a:	6841      	ldr	r1, [r0, #4]
 801505c:	9205      	str	r2, [sp, #20]
 801505e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015062:	fb01 2404 	mla	r4, r1, r4, r2
 8015066:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801506a:	6802      	ldr	r2, [r0, #0]
 801506c:	f8df 82f0 	ldr.w	r8, [pc, #752]	@ 8015360 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015070:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015074:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015078:	3201      	adds	r2, #1
 801507a:	f022 0201 	bic.w	r2, r2, #1
 801507e:	9202      	str	r2, [sp, #8]
 8015080:	f8db 2000 	ldr.w	r2, [fp]
 8015084:	9203      	str	r2, [sp, #12]
 8015086:	9a01      	ldr	r2, [sp, #4]
 8015088:	2a00      	cmp	r2, #0
 801508a:	dc03      	bgt.n	8015094 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801508c:	9a05      	ldr	r2, [sp, #20]
 801508e:	2a00      	cmp	r2, #0
 8015090:	f340 8162 	ble.w	8015358 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015094:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015096:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801509a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801509e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80150a0:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80150a4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80150a8:	2b00      	cmp	r3, #0
 80150aa:	dd0e      	ble.n	80150ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80150ac:	1402      	asrs	r2, r0, #16
 80150ae:	d405      	bmi.n	80150bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150b0:	42ba      	cmp	r2, r7
 80150b2:	da03      	bge.n	80150bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150b4:	140a      	asrs	r2, r1, #16
 80150b6:	d401      	bmi.n	80150bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80150b8:	42b2      	cmp	r2, r6
 80150ba:	db07      	blt.n	80150cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80150bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80150be:	3b01      	subs	r3, #1
 80150c0:	4410      	add	r0, r2
 80150c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80150c4:	3402      	adds	r4, #2
 80150c6:	4411      	add	r1, r2
 80150c8:	e7ee      	b.n	80150a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80150ca:	d017      	beq.n	80150fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80150cc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80150ce:	1e5a      	subs	r2, r3, #1
 80150d0:	fb05 0502 	mla	r5, r5, r2, r0
 80150d4:	142d      	asrs	r5, r5, #16
 80150d6:	d409      	bmi.n	80150ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80150d8:	42bd      	cmp	r5, r7
 80150da:	da07      	bge.n	80150ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80150dc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80150de:	fb05 1202 	mla	r2, r5, r2, r1
 80150e2:	1412      	asrs	r2, r2, #16
 80150e4:	d402      	bmi.n	80150ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80150e6:	42b2      	cmp	r2, r6
 80150e8:	f2c0 80c3 	blt.w	8015272 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80150ec:	2500      	movs	r5, #0
 80150ee:	195a      	adds	r2, r3, r5
 80150f0:	2a00      	cmp	r2, #0
 80150f2:	dc3f      	bgt.n	8015174 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80150f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150fc:	9b01      	ldr	r3, [sp, #4]
 80150fe:	2b00      	cmp	r3, #0
 8015100:	f340 812a 	ble.w	8015358 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015104:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015108:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801510c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015110:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015114:	eeb0 6a62 	vmov.f32	s12, s5
 8015118:	ee31 1a05 	vadd.f32	s2, s2, s10
 801511c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015120:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015124:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015128:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801512c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015130:	eeb0 6a43 	vmov.f32	s12, s6
 8015134:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015138:	ee12 2a90 	vmov	r2, s5
 801513c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015140:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015142:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015146:	fb92 f3f3 	sdiv	r3, r2, r3
 801514a:	ee13 2a10 	vmov	r2, s6
 801514e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015150:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015152:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015156:	fb92 f3f3 	sdiv	r3, r2, r3
 801515a:	9314      	str	r3, [sp, #80]	@ 0x50
 801515c:	9b01      	ldr	r3, [sp, #4]
 801515e:	9a05      	ldr	r2, [sp, #20]
 8015160:	3b01      	subs	r3, #1
 8015162:	9301      	str	r3, [sp, #4]
 8015164:	eeb0 3a67 	vmov.f32	s6, s15
 8015168:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801516a:	eef0 2a47 	vmov.f32	s5, s14
 801516e:	bf08      	it	eq
 8015170:	4613      	moveq	r3, r2
 8015172:	e788      	b.n	8015086 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015174:	1406      	asrs	r6, r0, #16
 8015176:	d42c      	bmi.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015178:	f8db 2008 	ldr.w	r2, [fp, #8]
 801517c:	42b2      	cmp	r2, r6
 801517e:	dd28      	ble.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015180:	140f      	asrs	r7, r1, #16
 8015182:	d426      	bmi.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015184:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015188:	42ba      	cmp	r2, r7
 801518a:	dd22      	ble.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801518c:	9a02      	ldr	r2, [sp, #8]
 801518e:	fb07 6602 	mla	r6, r7, r2, r6
 8015192:	9f03      	ldr	r7, [sp, #12]
 8015194:	0872      	lsrs	r2, r6, #1
 8015196:	5cba      	ldrb	r2, [r7, r2]
 8015198:	07f6      	lsls	r6, r6, #31
 801519a:	bf54      	ite	pl
 801519c:	f002 020f 	andpl.w	r2, r2, #15
 80151a0:	1112      	asrmi	r2, r2, #4
 80151a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80151a6:	b2d2      	uxtb	r2, r2
 80151a8:	2aff      	cmp	r2, #255	@ 0xff
 80151aa:	d118      	bne.n	80151de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80151ac:	f06f 0601 	mvn.w	r6, #1
 80151b0:	f8d8 2000 	ldr.w	r2, [r8]
 80151b4:	fb06 f705 	mul.w	r7, r6, r5
 80151b8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80151bc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80151c0:	0956      	lsrs	r6, r2, #5
 80151c2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80151c6:	ea4c 0606 	orr.w	r6, ip, r6
 80151ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80151ce:	4316      	orrs	r6, r2
 80151d0:	53e6      	strh	r6, [r4, r7]
 80151d2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151d4:	3d01      	subs	r5, #1
 80151d6:	4410      	add	r0, r2
 80151d8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80151da:	4411      	add	r1, r2
 80151dc:	e787      	b.n	80150ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80151de:	2a00      	cmp	r2, #0
 80151e0:	d0f7      	beq.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80151e2:	f06f 0601 	mvn.w	r6, #1
 80151e6:	fa1f f982 	uxth.w	r9, r2
 80151ea:	43d2      	mvns	r2, r2
 80151ec:	436e      	muls	r6, r5
 80151ee:	f8d8 c000 	ldr.w	ip, [r8]
 80151f2:	f834 e006 	ldrh.w	lr, [r4, r6]
 80151f6:	9604      	str	r6, [sp, #16]
 80151f8:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80151fc:	fb16 f609 	smulbb	r6, r6, r9
 8015200:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015204:	fa5f fc8c 	uxtb.w	ip, ip
 8015208:	ea4f 272e 	mov.w	r7, lr, asr #8
 801520c:	fb1c fc09 	smulbb	ip, ip, r9
 8015210:	b2d2      	uxtb	r2, r2
 8015212:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015216:	fb07 6702 	mla	r7, r7, r2, r6
 801521a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801521e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015222:	fb1a fa09 	smulbb	sl, sl, r9
 8015226:	fa5f fe8e 	uxtb.w	lr, lr
 801522a:	fb0e cc02 	mla	ip, lr, r2, ip
 801522e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015232:	fb06 a602 	mla	r6, r6, r2, sl
 8015236:	b2bf      	uxth	r7, r7
 8015238:	fa1f fc8c 	uxth.w	ip, ip
 801523c:	1c7a      	adds	r2, r7, #1
 801523e:	f10c 0a01 	add.w	sl, ip, #1
 8015242:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015246:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801524a:	b2b6      	uxth	r6, r6
 801524c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015250:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015254:	ea4a 0707 	orr.w	r7, sl, r7
 8015258:	f106 0a01 	add.w	sl, r6, #1
 801525c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015260:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015264:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015268:	9a04      	ldr	r2, [sp, #16]
 801526a:	ea47 070a 	orr.w	r7, r7, sl
 801526e:	52a7      	strh	r7, [r4, r2]
 8015270:	e7af      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015272:	f04f 0e00 	mov.w	lr, #0
 8015276:	eba3 020e 	sub.w	r2, r3, lr
 801527a:	2a00      	cmp	r2, #0
 801527c:	f77f af3a 	ble.w	80150f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015280:	9e02      	ldr	r6, [sp, #8]
 8015282:	1402      	asrs	r2, r0, #16
 8015284:	140d      	asrs	r5, r1, #16
 8015286:	fb06 2505 	mla	r5, r6, r5, r2
 801528a:	9e03      	ldr	r6, [sp, #12]
 801528c:	086a      	lsrs	r2, r5, #1
 801528e:	5cb2      	ldrb	r2, [r6, r2]
 8015290:	07ed      	lsls	r5, r5, #31
 8015292:	bf54      	ite	pl
 8015294:	f002 020f 	andpl.w	r2, r2, #15
 8015298:	1112      	asrmi	r2, r2, #4
 801529a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801529e:	b2d2      	uxtb	r2, r2
 80152a0:	2aff      	cmp	r2, #255	@ 0xff
 80152a2:	d115      	bne.n	80152d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80152a4:	f8d8 5000 	ldr.w	r5, [r8]
 80152a8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 80152ac:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80152b0:	096a      	lsrs	r2, r5, #5
 80152b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80152b6:	4332      	orrs	r2, r6
 80152b8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80152bc:	432a      	orrs	r2, r5
 80152be:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80152c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80152c4:	f10e 0e01 	add.w	lr, lr, #1
 80152c8:	4410      	add	r0, r2
 80152ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80152cc:	4411      	add	r1, r2
 80152ce:	e7d2      	b.n	8015276 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80152d0:	2a00      	cmp	r2, #0
 80152d2:	d0f6      	beq.n	80152c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80152d4:	fa1f f982 	uxth.w	r9, r2
 80152d8:	43d2      	mvns	r2, r2
 80152da:	f8d8 7000 	ldr.w	r7, [r8]
 80152de:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80152e2:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80152e6:	fb15 f509 	smulbb	r5, r5, r9
 80152ea:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80152ee:	b2ff      	uxtb	r7, r7
 80152f0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80152f4:	fb17 f709 	smulbb	r7, r7, r9
 80152f8:	b2d2      	uxtb	r2, r2
 80152fa:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80152fe:	fb06 5602 	mla	r6, r6, r2, r5
 8015302:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015306:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801530a:	fb1a fa09 	smulbb	sl, sl, r9
 801530e:	fa5f fc8c 	uxtb.w	ip, ip
 8015312:	fb0c 7702 	mla	r7, ip, r2, r7
 8015316:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801531a:	fb05 a502 	mla	r5, r5, r2, sl
 801531e:	b2b6      	uxth	r6, r6
 8015320:	b2bf      	uxth	r7, r7
 8015322:	1c72      	adds	r2, r6, #1
 8015324:	f107 0a01 	add.w	sl, r7, #1
 8015328:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801532c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015330:	b2ad      	uxth	r5, r5
 8015332:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015336:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801533a:	ea4a 0606 	orr.w	r6, sl, r6
 801533e:	f105 0a01 	add.w	sl, r5, #1
 8015342:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015346:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801534a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801534e:	ea46 060a 	orr.w	r6, r6, sl
 8015352:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015356:	e7b4      	b.n	80152c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015358:	b007      	add	sp, #28
 801535a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801535e:	bf00      	nop
 8015360:	20002238 	.word	0x20002238

08015364 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015364:	4770      	bx	lr

08015366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015366:	4770      	bx	lr

08015368 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015368:	4770      	bx	lr

0801536a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801536a:	4770      	bx	lr

0801536c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801536c:	4770      	bx	lr

0801536e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801536e:	4770      	bx	lr

08015370 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015370:	4770      	bx	lr

08015372 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015372:	4770      	bx	lr

08015374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015374:	4770      	bx	lr

08015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015376:	4770      	bx	lr

08015378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015378:	4770      	bx	lr

0801537a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801537a:	4770      	bx	lr

0801537c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801537c:	4770      	bx	lr

0801537e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801537e:	4770      	bx	lr

08015380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015380:	4770      	bx	lr

08015382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015382:	4770      	bx	lr

08015384 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015384:	4770      	bx	lr

08015386 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015386:	4770      	bx	lr

08015388 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015388:	4770      	bx	lr

0801538a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801538a:	4770      	bx	lr

0801538c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801538c:	4770      	bx	lr

0801538e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801538e:	4770      	bx	lr

08015390 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015390:	4770      	bx	lr

08015392 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015392:	4770      	bx	lr

08015394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015394:	4770      	bx	lr

08015396 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015396:	4770      	bx	lr

08015398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015398:	4770      	bx	lr

0801539a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801539a:	4770      	bx	lr

0801539c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801539c:	4770      	bx	lr

0801539e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801539e:	4770      	bx	lr

080153a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80153a0:	4770      	bx	lr

080153a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80153a2:	4770      	bx	lr

080153a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80153a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80153a8:	b088      	sub	sp, #32
 80153aa:	ac08      	add	r4, sp, #32
 80153ac:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80153b0:	4606      	mov	r6, r0
 80153b2:	4620      	mov	r0, r4
 80153b4:	4688      	mov	r8, r1
 80153b6:	4691      	mov	r9, r2
 80153b8:	f7fd fc32 	bl	8012c20 <_ZNK8touchgfx6Bitmap7getDataEv>
 80153bc:	6833      	ldr	r3, [r6, #0]
 80153be:	4605      	mov	r5, r0
 80153c0:	4620      	mov	r0, r4
 80153c2:	699f      	ldr	r7, [r3, #24]
 80153c4:	f7fd fb3a 	bl	8012a3c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80153c8:	4682      	mov	sl, r0
 80153ca:	4620      	mov	r0, r4
 80153cc:	f7fd fb6a 	bl	8012aa4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80153d0:	9500      	str	r5, [sp, #0]
 80153d2:	e9cd a001 	strd	sl, r0, [sp, #4]
 80153d6:	464b      	mov	r3, r9
 80153d8:	a806      	add	r0, sp, #24
 80153da:	4642      	mov	r2, r8
 80153dc:	4631      	mov	r1, r6
 80153de:	47b8      	blx	r7
 80153e0:	4628      	mov	r0, r5
 80153e2:	b008      	add	sp, #32
 80153e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080153e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80153e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80153ec:	2300      	movs	r3, #0
 80153ee:	9300      	str	r3, [sp, #0]
 80153f0:	4b3d      	ldr	r3, [pc, #244]	@ (80154e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80153f2:	781b      	ldrb	r3, [r3, #0]
 80153f4:	2b00      	cmp	r3, #0
 80153f6:	d137      	bne.n	8015468 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80153f8:	4a3c      	ldr	r2, [pc, #240]	@ (80154ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80153fa:	f9b2 2000 	ldrsh.w	r2, [r2]
 80153fe:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015402:	2b00      	cmp	r3, #0
 8015404:	d132      	bne.n	801546c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015406:	4b3a      	ldr	r3, [pc, #232]	@ (80154f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015408:	f9b3 3000 	ldrsh.w	r3, [r3]
 801540c:	6808      	ldr	r0, [r1, #0]
 801540e:	6849      	ldr	r1, [r1, #4]
 8015410:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015414:	ac02      	add	r4, sp, #8
 8015416:	ab02      	add	r3, sp, #8
 8015418:	c303      	stmia	r3!, {r0, r1}
 801541a:	4669      	mov	r1, sp
 801541c:	4620      	mov	r0, r4
 801541e:	f7f9 ffef 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015422:	4668      	mov	r0, sp
 8015424:	f7f9 ffc4 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015428:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801542c:	f8bd 2000 	ldrh.w	r2, [sp]
 8015430:	4d30      	ldr	r5, [pc, #192]	@ (80154f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015432:	4413      	add	r3, r2
 8015434:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015438:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801543c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015440:	6828      	ldr	r0, [r5, #0]
 8015442:	4413      	add	r3, r2
 8015444:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015448:	6803      	ldr	r3, [r0, #0]
 801544a:	462f      	mov	r7, r5
 801544c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801544e:	4798      	blx	r3
 8015450:	f010 0f01 	tst.w	r0, #1
 8015454:	d00c      	beq.n	8015470 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015456:	e894 0006 	ldmia.w	r4, {r1, r2}
 801545a:	6828      	ldr	r0, [r5, #0]
 801545c:	6803      	ldr	r3, [r0, #0]
 801545e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015460:	4798      	blx	r3
 8015462:	b004      	add	sp, #16
 8015464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015468:	4a21      	ldr	r2, [pc, #132]	@ (80154f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801546a:	e7c6      	b.n	80153fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801546c:	4b1f      	ldr	r3, [pc, #124]	@ (80154ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801546e:	e7cb      	b.n	8015408 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015470:	6838      	ldr	r0, [r7, #0]
 8015472:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015476:	6803      	ldr	r3, [r0, #0]
 8015478:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801547c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801547e:	4798      	blx	r3
 8015480:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015484:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015488:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801548c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015490:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015494:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015498:	6838      	ldr	r0, [r7, #0]
 801549a:	6803      	ldr	r3, [r0, #0]
 801549c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801549e:	4798      	blx	r3
 80154a0:	4a12      	ldr	r2, [pc, #72]	@ (80154ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80154a2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80154a6:	4691      	mov	r9, r2
 80154a8:	8813      	ldrh	r3, [r2, #0]
 80154aa:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80154ae:	435d      	muls	r5, r3
 80154b0:	fb03 1404 	mla	r4, r3, r4, r1
 80154b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80154b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80154bc:	6838      	ldr	r0, [r7, #0]
 80154be:	42ac      	cmp	r4, r5
 80154c0:	6803      	ldr	r3, [r0, #0]
 80154c2:	d20e      	bcs.n	80154e2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80154c4:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 80154c8:	4632      	mov	r2, r6
 80154ca:	4643      	mov	r3, r8
 80154cc:	4621      	mov	r1, r4
 80154ce:	47d0      	blx	sl
 80154d0:	f8b9 3000 	ldrh.w	r3, [r9]
 80154d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80154d8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80154dc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80154e0:	e7ec      	b.n	80154bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80154e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80154e4:	4798      	blx	r3
 80154e6:	e7bc      	b.n	8015462 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80154e8:	20002228 	.word	0x20002228
 80154ec:	2000222a 	.word	0x2000222a
 80154f0:	2000222c 	.word	0x2000222c
 80154f4:	20002230 	.word	0x20002230

080154f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80154f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154fc:	b08b      	sub	sp, #44	@ 0x2c
 80154fe:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015502:	460f      	mov	r7, r1
 8015504:	4616      	mov	r6, r2
 8015506:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801550a:	f1bb 0f00 	cmp.w	fp, #0
 801550e:	d04a      	beq.n	80155a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015510:	6810      	ldr	r0, [r2, #0]
 8015512:	6851      	ldr	r1, [r2, #4]
 8015514:	ad06      	add	r5, sp, #24
 8015516:	c503      	stmia	r5!, {r0, r1}
 8015518:	6818      	ldr	r0, [r3, #0]
 801551a:	6859      	ldr	r1, [r3, #4]
 801551c:	ad08      	add	r5, sp, #32
 801551e:	c503      	stmia	r5!, {r0, r1}
 8015520:	a806      	add	r0, sp, #24
 8015522:	f7f9 ff45 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015526:	4631      	mov	r1, r6
 8015528:	a808      	add	r0, sp, #32
 801552a:	f7f9 ff69 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801552e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015532:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015536:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801553a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801553e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015542:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015546:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801554a:	4f60      	ldr	r7, [pc, #384]	@ (80156cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801554c:	440a      	add	r2, r1
 801554e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015552:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015556:	6838      	ldr	r0, [r7, #0]
 8015558:	4413      	add	r3, r2
 801555a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801555e:	6803      	ldr	r3, [r0, #0]
 8015560:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015564:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015566:	4798      	blx	r3
 8015568:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801556c:	46b9      	mov	r9, r7
 801556e:	d11d      	bne.n	80155ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015570:	b9fc      	cbnz	r4, 80155b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015572:	f010 0f01 	tst.w	r0, #1
 8015576:	d01c      	beq.n	80155b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015578:	2700      	movs	r7, #0
 801557a:	f8d9 0000 	ldr.w	r0, [r9]
 801557e:	b2ad      	uxth	r5, r5
 8015580:	6801      	ldr	r1, [r0, #0]
 8015582:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015586:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801558a:	f8cd b00c 	str.w	fp, [sp, #12]
 801558e:	9402      	str	r4, [sp, #8]
 8015590:	fa1f f488 	uxth.w	r4, r8
 8015594:	9501      	str	r5, [sp, #4]
 8015596:	9400      	str	r4, [sp, #0]
 8015598:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 801559a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801559e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80155a2:	4631      	mov	r1, r6
 80155a4:	47a0      	blx	r4
 80155a6:	b00b      	add	sp, #44	@ 0x2c
 80155a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155ac:	f010 0f04 	tst.w	r0, #4
 80155b0:	e7e1      	b.n	8015576 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80155b2:	f8d9 0000 	ldr.w	r0, [r9]
 80155b6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80155ba:	6803      	ldr	r3, [r0, #0]
 80155bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80155be:	4798      	blx	r3
 80155c0:	4b43      	ldr	r3, [pc, #268]	@ (80156d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80155c2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80155c6:	881a      	ldrh	r2, [r3, #0]
 80155c8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80155cc:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80155d0:	fb02 1404 	mla	r4, r2, r4, r1
 80155d4:	469a      	mov	sl, r3
 80155d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80155da:	fb05 f502 	mul.w	r5, r5, r2
 80155de:	d059      	beq.n	8015694 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80155e0:	469e      	mov	lr, r3
 80155e2:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80155e6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80155ea:	fa1f f28b 	uxth.w	r2, fp
 80155ee:	fa1f f989 	uxth.w	r9, r9
 80155f2:	42ac      	cmp	r4, r5
 80155f4:	d264      	bcs.n	80156c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80155f6:	eb04 0a07 	add.w	sl, r4, r7
 80155fa:	4554      	cmp	r4, sl
 80155fc:	d23d      	bcs.n	801567a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80155fe:	8821      	ldrh	r1, [r4, #0]
 8015600:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015604:	1208      	asrs	r0, r1, #8
 8015606:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801560a:	fb10 f009 	smulbb	r0, r0, r9
 801560e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8015612:	00c9      	lsls	r1, r1, #3
 8015614:	b2c9      	uxtb	r1, r1
 8015616:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801561a:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801561e:	fb11 f109 	smulbb	r1, r1, r9
 8015622:	fb1b fb09 	smulbb	fp, fp, r9
 8015626:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801562a:	fb0c 0c02 	mla	ip, ip, r2, r0
 801562e:	10d8      	asrs	r0, r3, #3
 8015630:	00db      	lsls	r3, r3, #3
 8015632:	b2db      	uxtb	r3, r3
 8015634:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015638:	fb03 1302 	mla	r3, r3, r2, r1
 801563c:	fb00 b002 	mla	r0, r0, r2, fp
 8015640:	fa1f fc8c 	uxth.w	ip, ip
 8015644:	f10c 0b01 	add.w	fp, ip, #1
 8015648:	b29b      	uxth	r3, r3
 801564a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801564e:	b280      	uxth	r0, r0
 8015650:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015654:	f103 0c01 	add.w	ip, r3, #1
 8015658:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801565c:	1c43      	adds	r3, r0, #1
 801565e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015662:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015666:	0940      	lsrs	r0, r0, #5
 8015668:	ea4c 0c0b 	orr.w	ip, ip, fp
 801566c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015670:	ea4c 0c00 	orr.w	ip, ip, r0
 8015674:	f824 cb02 	strh.w	ip, [r4], #2
 8015678:	e7bf      	b.n	80155fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801567a:	f8be 3000 	ldrh.w	r3, [lr]
 801567e:	eba3 0308 	sub.w	r3, r3, r8
 8015682:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015686:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801568a:	eba3 0308 	sub.w	r3, r3, r8
 801568e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015692:	e7ae      	b.n	80155f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015694:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015698:	f8d9 0000 	ldr.w	r0, [r9]
 801569c:	42ac      	cmp	r4, r5
 801569e:	6803      	ldr	r3, [r0, #0]
 80156a0:	d20e      	bcs.n	80156c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80156a2:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 80156a6:	4632      	mov	r2, r6
 80156a8:	463b      	mov	r3, r7
 80156aa:	4621      	mov	r1, r4
 80156ac:	47c0      	blx	r8
 80156ae:	f8ba 3000 	ldrh.w	r3, [sl]
 80156b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80156ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80156be:	e7eb      	b.n	8015698 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80156c0:	4b02      	ldr	r3, [pc, #8]	@ (80156cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80156c2:	6818      	ldr	r0, [r3, #0]
 80156c4:	6803      	ldr	r3, [r0, #0]
 80156c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80156c8:	4798      	blx	r3
 80156ca:	e76c      	b.n	80155a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80156cc:	20002230 	.word	0x20002230
 80156d0:	2000222a 	.word	0x2000222a

080156d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80156d4:	b510      	push	{r4, lr}
 80156d6:	4604      	mov	r4, r0
 80156d8:	2104      	movs	r1, #4
 80156da:	f00b fcb8 	bl	802104e <_ZdlPvj>
 80156de:	4620      	mov	r0, r4
 80156e0:	bd10      	pop	{r4, pc}

080156e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80156e2:	b510      	push	{r4, lr}
 80156e4:	4604      	mov	r4, r0
 80156e6:	2104      	movs	r1, #4
 80156e8:	f00b fcb1 	bl	802104e <_ZdlPvj>
 80156ec:	4620      	mov	r0, r4
 80156ee:	bd10      	pop	{r4, pc}

080156f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80156f0:	b510      	push	{r4, lr}
 80156f2:	4604      	mov	r4, r0
 80156f4:	f640 0144 	movw	r1, #2116	@ 0x844
 80156f8:	f00b fca9 	bl	802104e <_ZdlPvj>
 80156fc:	4620      	mov	r0, r4
 80156fe:	bd10      	pop	{r4, pc}

08015700 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8015700:	b510      	push	{r4, lr}
 8015702:	4604      	mov	r4, r0
 8015704:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015708:	f00b fca1 	bl	802104e <_ZdlPvj>
 801570c:	4620      	mov	r0, r4
 801570e:	bd10      	pop	{r4, pc}

08015710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015710:	b510      	push	{r4, lr}
 8015712:	4604      	mov	r4, r0
 8015714:	2104      	movs	r1, #4
 8015716:	f00b fc9a 	bl	802104e <_ZdlPvj>
 801571a:	4620      	mov	r0, r4
 801571c:	bd10      	pop	{r4, pc}

0801571e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801571e:	b510      	push	{r4, lr}
 8015720:	4604      	mov	r4, r0
 8015722:	2104      	movs	r1, #4
 8015724:	f00b fc93 	bl	802104e <_ZdlPvj>
 8015728:	4620      	mov	r0, r4
 801572a:	bd10      	pop	{r4, pc}

0801572c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801572c:	b510      	push	{r4, lr}
 801572e:	4604      	mov	r4, r0
 8015730:	2104      	movs	r1, #4
 8015732:	f00b fc8c 	bl	802104e <_ZdlPvj>
 8015736:	4620      	mov	r0, r4
 8015738:	bd10      	pop	{r4, pc}

0801573a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801573a:	b510      	push	{r4, lr}
 801573c:	4604      	mov	r4, r0
 801573e:	2104      	movs	r1, #4
 8015740:	f00b fc85 	bl	802104e <_ZdlPvj>
 8015744:	4620      	mov	r0, r4
 8015746:	bd10      	pop	{r4, pc}

08015748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015748:	b510      	push	{r4, lr}
 801574a:	4604      	mov	r4, r0
 801574c:	2104      	movs	r1, #4
 801574e:	f00b fc7e 	bl	802104e <_ZdlPvj>
 8015752:	4620      	mov	r0, r4
 8015754:	bd10      	pop	{r4, pc}

08015756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015756:	b510      	push	{r4, lr}
 8015758:	4604      	mov	r4, r0
 801575a:	2104      	movs	r1, #4
 801575c:	f00b fc77 	bl	802104e <_ZdlPvj>
 8015760:	4620      	mov	r0, r4
 8015762:	bd10      	pop	{r4, pc}

08015764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015764:	b510      	push	{r4, lr}
 8015766:	4604      	mov	r4, r0
 8015768:	2104      	movs	r1, #4
 801576a:	f00b fc70 	bl	802104e <_ZdlPvj>
 801576e:	4620      	mov	r0, r4
 8015770:	bd10      	pop	{r4, pc}

08015772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015772:	b510      	push	{r4, lr}
 8015774:	4604      	mov	r4, r0
 8015776:	2104      	movs	r1, #4
 8015778:	f00b fc69 	bl	802104e <_ZdlPvj>
 801577c:	4620      	mov	r0, r4
 801577e:	bd10      	pop	{r4, pc}

08015780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015780:	b510      	push	{r4, lr}
 8015782:	4604      	mov	r4, r0
 8015784:	2104      	movs	r1, #4
 8015786:	f00b fc62 	bl	802104e <_ZdlPvj>
 801578a:	4620      	mov	r0, r4
 801578c:	bd10      	pop	{r4, pc}

0801578e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801578e:	b510      	push	{r4, lr}
 8015790:	4604      	mov	r4, r0
 8015792:	2104      	movs	r1, #4
 8015794:	f00b fc5b 	bl	802104e <_ZdlPvj>
 8015798:	4620      	mov	r0, r4
 801579a:	bd10      	pop	{r4, pc}

0801579c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801579c:	b510      	push	{r4, lr}
 801579e:	4604      	mov	r4, r0
 80157a0:	2104      	movs	r1, #4
 80157a2:	f00b fc54 	bl	802104e <_ZdlPvj>
 80157a6:	4620      	mov	r0, r4
 80157a8:	bd10      	pop	{r4, pc}

080157aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80157aa:	b510      	push	{r4, lr}
 80157ac:	4604      	mov	r4, r0
 80157ae:	2104      	movs	r1, #4
 80157b0:	f00b fc4d 	bl	802104e <_ZdlPvj>
 80157b4:	4620      	mov	r0, r4
 80157b6:	bd10      	pop	{r4, pc}

080157b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80157b8:	b510      	push	{r4, lr}
 80157ba:	4604      	mov	r4, r0
 80157bc:	2104      	movs	r1, #4
 80157be:	f00b fc46 	bl	802104e <_ZdlPvj>
 80157c2:	4620      	mov	r0, r4
 80157c4:	bd10      	pop	{r4, pc}

080157c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80157c6:	b510      	push	{r4, lr}
 80157c8:	4604      	mov	r4, r0
 80157ca:	2104      	movs	r1, #4
 80157cc:	f00b fc3f 	bl	802104e <_ZdlPvj>
 80157d0:	4620      	mov	r0, r4
 80157d2:	bd10      	pop	{r4, pc}

080157d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80157d4:	b510      	push	{r4, lr}
 80157d6:	4604      	mov	r4, r0
 80157d8:	2104      	movs	r1, #4
 80157da:	f00b fc38 	bl	802104e <_ZdlPvj>
 80157de:	4620      	mov	r0, r4
 80157e0:	bd10      	pop	{r4, pc}

080157e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80157e2:	b510      	push	{r4, lr}
 80157e4:	4604      	mov	r4, r0
 80157e6:	2104      	movs	r1, #4
 80157e8:	f00b fc31 	bl	802104e <_ZdlPvj>
 80157ec:	4620      	mov	r0, r4
 80157ee:	bd10      	pop	{r4, pc}

080157f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80157f0:	b510      	push	{r4, lr}
 80157f2:	4604      	mov	r4, r0
 80157f4:	2104      	movs	r1, #4
 80157f6:	f00b fc2a 	bl	802104e <_ZdlPvj>
 80157fa:	4620      	mov	r0, r4
 80157fc:	bd10      	pop	{r4, pc}

080157fe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80157fe:	b510      	push	{r4, lr}
 8015800:	4604      	mov	r4, r0
 8015802:	2104      	movs	r1, #4
 8015804:	f00b fc23 	bl	802104e <_ZdlPvj>
 8015808:	4620      	mov	r0, r4
 801580a:	bd10      	pop	{r4, pc}

0801580c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801580c:	b510      	push	{r4, lr}
 801580e:	4604      	mov	r4, r0
 8015810:	2104      	movs	r1, #4
 8015812:	f00b fc1c 	bl	802104e <_ZdlPvj>
 8015816:	4620      	mov	r0, r4
 8015818:	bd10      	pop	{r4, pc}

0801581a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801581a:	b510      	push	{r4, lr}
 801581c:	4604      	mov	r4, r0
 801581e:	2104      	movs	r1, #4
 8015820:	f00b fc15 	bl	802104e <_ZdlPvj>
 8015824:	4620      	mov	r0, r4
 8015826:	bd10      	pop	{r4, pc}

08015828 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015828:	b510      	push	{r4, lr}
 801582a:	4604      	mov	r4, r0
 801582c:	2104      	movs	r1, #4
 801582e:	f00b fc0e 	bl	802104e <_ZdlPvj>
 8015832:	4620      	mov	r0, r4
 8015834:	bd10      	pop	{r4, pc}

08015836 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015836:	b510      	push	{r4, lr}
 8015838:	4604      	mov	r4, r0
 801583a:	2104      	movs	r1, #4
 801583c:	f00b fc07 	bl	802104e <_ZdlPvj>
 8015840:	4620      	mov	r0, r4
 8015842:	bd10      	pop	{r4, pc}

08015844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015844:	b510      	push	{r4, lr}
 8015846:	4604      	mov	r4, r0
 8015848:	2104      	movs	r1, #4
 801584a:	f00b fc00 	bl	802104e <_ZdlPvj>
 801584e:	4620      	mov	r0, r4
 8015850:	bd10      	pop	{r4, pc}

08015852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015852:	b510      	push	{r4, lr}
 8015854:	4604      	mov	r4, r0
 8015856:	2104      	movs	r1, #4
 8015858:	f00b fbf9 	bl	802104e <_ZdlPvj>
 801585c:	4620      	mov	r0, r4
 801585e:	bd10      	pop	{r4, pc}

08015860 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8015860:	b510      	push	{r4, lr}
 8015862:	4604      	mov	r4, r0
 8015864:	2104      	movs	r1, #4
 8015866:	f00b fbf2 	bl	802104e <_ZdlPvj>
 801586a:	4620      	mov	r0, r4
 801586c:	bd10      	pop	{r4, pc}

0801586e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801586e:	b510      	push	{r4, lr}
 8015870:	4604      	mov	r4, r0
 8015872:	2104      	movs	r1, #4
 8015874:	f00b fbeb 	bl	802104e <_ZdlPvj>
 8015878:	4620      	mov	r0, r4
 801587a:	bd10      	pop	{r4, pc}

0801587c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801587c:	b510      	push	{r4, lr}
 801587e:	4604      	mov	r4, r0
 8015880:	2104      	movs	r1, #4
 8015882:	f00b fbe4 	bl	802104e <_ZdlPvj>
 8015886:	4620      	mov	r0, r4
 8015888:	bd10      	pop	{r4, pc}

0801588a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801588a:	b510      	push	{r4, lr}
 801588c:	4604      	mov	r4, r0
 801588e:	2104      	movs	r1, #4
 8015890:	f00b fbdd 	bl	802104e <_ZdlPvj>
 8015894:	4620      	mov	r0, r4
 8015896:	bd10      	pop	{r4, pc}

08015898 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8015898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801589c:	b08f      	sub	sp, #60	@ 0x3c
 801589e:	4616      	mov	r6, r2
 80158a0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80158a4:	4682      	mov	sl, r0
 80158a6:	460d      	mov	r5, r1
 80158a8:	9205      	str	r2, [sp, #20]
 80158aa:	2a00      	cmp	r2, #0
 80158ac:	f000 82b7 	beq.w	8015e1e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80158b0:	6830      	ldr	r0, [r6, #0]
 80158b2:	6871      	ldr	r1, [r6, #4]
 80158b4:	ac0a      	add	r4, sp, #40	@ 0x28
 80158b6:	c403      	stmia	r4!, {r0, r1}
 80158b8:	6818      	ldr	r0, [r3, #0]
 80158ba:	6859      	ldr	r1, [r3, #4]
 80158bc:	ac0c      	add	r4, sp, #48	@ 0x30
 80158be:	c403      	stmia	r4!, {r0, r1}
 80158c0:	a80a      	add	r0, sp, #40	@ 0x28
 80158c2:	f7f9 fd75 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80158c6:	4631      	mov	r1, r6
 80158c8:	a80c      	add	r0, sp, #48	@ 0x30
 80158ca:	f7f9 fd99 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80158ce:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80158d2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80158d6:	bfdd      	ittte	le
 80158d8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80158dc:	b293      	uxthle	r3, r2
 80158de:	fb91 f3f3 	sdivle	r3, r1, r3
 80158e2:	2301      	movgt	r3, #1
 80158e4:	9300      	str	r3, [sp, #0]
 80158e6:	f105 0308 	add.w	r3, r5, #8
 80158ea:	9900      	ldr	r1, [sp, #0]
 80158ec:	9306      	str	r3, [sp, #24]
 80158ee:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80158f2:	440b      	add	r3, r1
 80158f4:	3b01      	subs	r3, #1
 80158f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80158fa:	9906      	ldr	r1, [sp, #24]
 80158fc:	3b01      	subs	r3, #1
 80158fe:	b29b      	uxth	r3, r3
 8015900:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015904:	9307      	str	r3, [sp, #28]
 8015906:	9900      	ldr	r1, [sp, #0]
 8015908:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801590c:	fb93 f0f1 	sdiv	r0, r3, r1
 8015910:	b284      	uxth	r4, r0
 8015912:	9402      	str	r4, [sp, #8]
 8015914:	9d02      	ldr	r5, [sp, #8]
 8015916:	9c00      	ldr	r4, [sp, #0]
 8015918:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801591c:	fb05 3414 	mls	r4, r5, r4, r3
 8015920:	fb14 f402 	smulbb	r4, r4, r2
 8015924:	440c      	add	r4, r1
 8015926:	b2a4      	uxth	r4, r4
 8015928:	2d00      	cmp	r5, #0
 801592a:	d06c      	beq.n	8015a06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801592c:	9806      	ldr	r0, [sp, #24]
 801592e:	1e6a      	subs	r2, r5, #1
 8015930:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015934:	9a07      	ldr	r2, [sp, #28]
 8015936:	ba36      	rev	r6, r6
 8015938:	4416      	add	r6, r2
 801593a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801593e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8015942:	4411      	add	r1, r2
 8015944:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015948:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801594c:	4413      	add	r3, r2
 801594e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015952:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015956:	f8df 9320 	ldr.w	r9, [pc, #800]	@ 8015c78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801595a:	9301      	str	r3, [sp, #4]
 801595c:	4bc4      	ldr	r3, [pc, #784]	@ (8015c70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801595e:	6818      	ldr	r0, [r3, #0]
 8015960:	6803      	ldr	r3, [r0, #0]
 8015962:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015964:	4798      	blx	r3
 8015966:	4bc3      	ldr	r3, [pc, #780]	@ (8015c74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015968:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801596c:	881b      	ldrh	r3, [r3, #0]
 801596e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8015972:	fb03 2808 	mla	r8, r3, r8, r2
 8015976:	436b      	muls	r3, r5
 8015978:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801597c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8015980:	9309      	str	r3, [sp, #36]	@ 0x24
 8015982:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8015986:	2500      	movs	r5, #0
 8015988:	fb94 f3f3 	sdiv	r3, r4, r3
 801598c:	9304      	str	r3, [sp, #16]
 801598e:	f10a 0304 	add.w	r3, sl, #4
 8015992:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015996:	4629      	mov	r1, r5
 8015998:	4618      	mov	r0, r3
 801599a:	9308      	str	r3, [sp, #32]
 801599c:	f00b fd8b 	bl	80214b6 <memset>
 80159a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80159a2:	4543      	cmp	r3, r8
 80159a4:	f240 8236 	bls.w	8015e14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80159a8:	2203      	movs	r2, #3
 80159aa:	2107      	movs	r1, #7
 80159ac:	200b      	movs	r0, #11
 80159ae:	2c00      	cmp	r4, #0
 80159b0:	f000 8131 	beq.w	8015c16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80159b4:	7833      	ldrb	r3, [r6, #0]
 80159b6:	b2db      	uxtb	r3, r3
 80159b8:	2bfe      	cmp	r3, #254	@ 0xfe
 80159ba:	d126      	bne.n	8015a0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80159bc:	f896 e001 	ldrb.w	lr, [r6, #1]
 80159c0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80159c4:	fa5f fe8e 	uxtb.w	lr, lr
 80159c8:	f896 b003 	ldrb.w	fp, [r6, #3]
 80159cc:	fa5f fc8c 	uxtb.w	ip, ip
 80159d0:	f36e 0507 	bfi	r5, lr, #0, #8
 80159d4:	f36c 250f 	bfi	r5, ip, #8, #8
 80159d8:	fa5f fb8b 	uxtb.w	fp, fp
 80159dc:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80159e0:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 80159e4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80159e8:	f36b 4517 	bfi	r5, fp, #16, #8
 80159ec:	0e2b      	lsrs	r3, r5, #24
 80159ee:	fb10 c303 	smlabb	r3, r0, r3, ip
 80159f2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80159f6:	3c01      	subs	r4, #1
 80159f8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80159fc:	1d37      	adds	r7, r6, #4
 80159fe:	b2a4      	uxth	r4, r4
 8015a00:	605d      	str	r5, [r3, #4]
 8015a02:	463e      	mov	r6, r7
 8015a04:	e7d3      	b.n	80159ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015a06:	9e07      	ldr	r6, [sp, #28]
 8015a08:	e797      	b.n	801593a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015a0a:	2bff      	cmp	r3, #255	@ 0xff
 8015a0c:	d127      	bne.n	8015a5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8015a0e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015a12:	78b3      	ldrb	r3, [r6, #2]
 8015a14:	fa5f fc8c 	uxtb.w	ip, ip
 8015a18:	f896 e003 	ldrb.w	lr, [r6, #3]
 8015a1c:	b2db      	uxtb	r3, r3
 8015a1e:	f36c 0507 	bfi	r5, ip, #0, #8
 8015a22:	f363 250f 	bfi	r5, r3, #8, #8
 8015a26:	fa5f fe8e 	uxtb.w	lr, lr
 8015a2a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015a2e:	fb12 330e 	smlabb	r3, r2, lr, r3
 8015a32:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015a36:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015a3a:	f36e 4517 	bfi	r5, lr, #16, #8
 8015a3e:	fa5f fb8b 	uxtb.w	fp, fp
 8015a42:	f36b 651f 	bfi	r5, fp, #24, #8
 8015a46:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8015a4a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8015a4e:	3c01      	subs	r4, #1
 8015a50:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015a54:	1d77      	adds	r7, r6, #5
 8015a56:	b2a4      	uxth	r4, r4
 8015a58:	f8cb 5004 	str.w	r5, [fp, #4]
 8015a5c:	e7d1      	b.n	8015a02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015a5e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8015a62:	f106 0701 	add.w	r7, r6, #1
 8015a66:	d107      	bne.n	8015a78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015a68:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015a6c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015a70:	685d      	ldr	r5, [r3, #4]
 8015a72:	3c01      	subs	r4, #1
 8015a74:	b2a4      	uxth	r4, r4
 8015a76:	e7c4      	b.n	8015a02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015a78:	f1bc 0f01 	cmp.w	ip, #1
 8015a7c:	d12c      	bne.n	8015ad8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8015a7e:	f003 0e03 	and.w	lr, r3, #3
 8015a82:	f1ae 0e02 	sub.w	lr, lr, #2
 8015a86:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8015a8a:	fa5f fe8e 	uxtb.w	lr, lr
 8015a8e:	f003 0c0c 	and.w	ip, r3, #12
 8015a92:	f36e 0507 	bfi	r5, lr, #0, #8
 8015a96:	f1ac 0c08 	sub.w	ip, ip, #8
 8015a9a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015a9e:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8015aa2:	f36c 250f 	bfi	r5, ip, #8, #8
 8015aa6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015aaa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015aae:	3b02      	subs	r3, #2
 8015ab0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015ab4:	b2db      	uxtb	r3, r3
 8015ab6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015aba:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8015abe:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8015ac2:	f363 4517 	bfi	r5, r3, #16, #8
 8015ac6:	0e2e      	lsrs	r6, r5, #24
 8015ac8:	fb10 c606 	smlabb	r6, r0, r6, ip
 8015acc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8015ad0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015ad4:	6075      	str	r5, [r6, #4]
 8015ad6:	e7cc      	b.n	8015a72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015ad8:	f1bc 0f02 	cmp.w	ip, #2
 8015adc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ae0:	d12a      	bne.n	8015b38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8015ae2:	1cb7      	adds	r7, r6, #2
 8015ae4:	7876      	ldrb	r6, [r6, #1]
 8015ae6:	3b20      	subs	r3, #32
 8015ae8:	b2f6      	uxtb	r6, r6
 8015aea:	f006 0c0f 	and.w	ip, r6, #15
 8015aee:	f1ac 0c08 	sub.w	ip, ip, #8
 8015af2:	449c      	add	ip, r3
 8015af4:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015af8:	fa5f fc8c 	uxtb.w	ip, ip
 8015afc:	f36c 0507 	bfi	r5, ip, #0, #8
 8015b00:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015b04:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015b08:	fa5f fe8e 	uxtb.w	lr, lr
 8015b0c:	1136      	asrs	r6, r6, #4
 8015b0e:	f36e 250f 	bfi	r5, lr, #8, #8
 8015b12:	3e08      	subs	r6, #8
 8015b14:	4433      	add	r3, r6
 8015b16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015b1a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8015b1e:	b2db      	uxtb	r3, r3
 8015b20:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015b24:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015b28:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8015b2c:	f363 4517 	bfi	r5, r3, #16, #8
 8015b30:	0e2e      	lsrs	r6, r5, #24
 8015b32:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015b36:	e7c9      	b.n	8015acc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015b38:	1c5e      	adds	r6, r3, #1
 8015b3a:	42a6      	cmp	r6, r4
 8015b3c:	dd4e      	ble.n	8015bdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8015b3e:	1b36      	subs	r6, r6, r4
 8015b40:	2e00      	cmp	r6, #0
 8015b42:	dc4e      	bgt.n	8015be2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015b44:	2400      	movs	r4, #0
 8015b46:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015b4a:	f1bb 0f00 	cmp.w	fp, #0
 8015b4e:	f340 8122 	ble.w	8015d96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8015b52:	1c7b      	adds	r3, r7, #1
 8015b54:	9303      	str	r3, [sp, #12]
 8015b56:	783b      	ldrb	r3, [r7, #0]
 8015b58:	b2db      	uxtb	r3, r3
 8015b5a:	2bfe      	cmp	r3, #254	@ 0xfe
 8015b5c:	d160      	bne.n	8015c20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8015b5e:	1d3b      	adds	r3, r7, #4
 8015b60:	9303      	str	r3, [sp, #12]
 8015b62:	2303      	movs	r3, #3
 8015b64:	7879      	ldrb	r1, [r7, #1]
 8015b66:	78ba      	ldrb	r2, [r7, #2]
 8015b68:	b2c9      	uxtb	r1, r1
 8015b6a:	78f8      	ldrb	r0, [r7, #3]
 8015b6c:	f361 0507 	bfi	r5, r1, #0, #8
 8015b70:	b2d2      	uxtb	r2, r2
 8015b72:	f362 250f 	bfi	r5, r2, #8, #8
 8015b76:	b2c0      	uxtb	r0, r0
 8015b78:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015b7c:	fb13 2200 	smlabb	r2, r3, r0, r2
 8015b80:	2307      	movs	r3, #7
 8015b82:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015b86:	230b      	movs	r3, #11
 8015b88:	f360 4517 	bfi	r5, r0, #16, #8
 8015b8c:	0e2e      	lsrs	r6, r5, #24
 8015b8e:	fb13 1306 	smlabb	r3, r3, r6, r1
 8015b92:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015b96:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015b9a:	605d      	str	r5, [r3, #4]
 8015b9c:	2601      	movs	r6, #1
 8015b9e:	4637      	mov	r7, r6
 8015ba0:	0e2b      	lsrs	r3, r5, #24
 8015ba2:	ebab 0b07 	sub.w	fp, fp, r7
 8015ba6:	eba6 0607 	sub.w	r6, r6, r7
 8015baa:	f040 80d3 	bne.w	8015d54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8015bae:	b18c      	cbz	r4, 8015bd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8015bb0:	4648      	mov	r0, r9
 8015bb2:	00a1      	lsls	r1, r4, #2
 8015bb4:	f7f5 fcf5 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 8015bb8:	9b05      	ldr	r3, [sp, #20]
 8015bba:	4622      	mov	r2, r4
 8015bbc:	4649      	mov	r1, r9
 8015bbe:	4640      	mov	r0, r8
 8015bc0:	f7f5 fda2 	bl	800b708 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015bc4:	4b2c      	ldr	r3, [pc, #176]	@ (8015c78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8015bc6:	4a2d      	ldr	r2, [pc, #180]	@ (8015c7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8015bc8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015bcc:	4599      	cmp	r9, r3
 8015bce:	bf08      	it	eq
 8015bd0:	4613      	moveq	r3, r2
 8015bd2:	4699      	mov	r9, r3
 8015bd4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015bd8:	2400      	movs	r4, #0
 8015bda:	e0da      	b.n	8015d92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015bdc:	1ba6      	subs	r6, r4, r6
 8015bde:	b2b4      	uxth	r4, r6
 8015be0:	e70f      	b.n	8015a02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8015be2:	9b01      	ldr	r3, [sp, #4]
 8015be4:	9a01      	ldr	r2, [sp, #4]
 8015be6:	42b3      	cmp	r3, r6
 8015be8:	bfa8      	it	ge
 8015bea:	4633      	movge	r3, r6
 8015bec:	0e2c      	lsrs	r4, r5, #24
 8015bee:	eba2 0b03 	sub.w	fp, r2, r3
 8015bf2:	eba6 0603 	sub.w	r6, r6, r3
 8015bf6:	d00b      	beq.n	8015c10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015bf8:	461a      	mov	r2, r3
 8015bfa:	f1a9 0104 	sub.w	r1, r9, #4
 8015bfe:	2a00      	cmp	r2, #0
 8015c00:	dc02      	bgt.n	8015c08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8015c02:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015c06:	e7a0      	b.n	8015b4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015c08:	f841 5f04 	str.w	r5, [r1, #4]!
 8015c0c:	3a01      	subs	r2, #1
 8015c0e:	e7f6      	b.n	8015bfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8015c10:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015c14:	e799      	b.n	8015b4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015c16:	4637      	mov	r7, r6
 8015c18:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015c1c:	4626      	mov	r6, r4
 8015c1e:	e794      	b.n	8015b4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015c20:	2bff      	cmp	r3, #255	@ 0xff
 8015c22:	d11d      	bne.n	8015c60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015c24:	1d7b      	adds	r3, r7, #5
 8015c26:	7878      	ldrb	r0, [r7, #1]
 8015c28:	9303      	str	r3, [sp, #12]
 8015c2a:	78ba      	ldrb	r2, [r7, #2]
 8015c2c:	78fe      	ldrb	r6, [r7, #3]
 8015c2e:	793b      	ldrb	r3, [r7, #4]
 8015c30:	b2c0      	uxtb	r0, r0
 8015c32:	b2d9      	uxtb	r1, r3
 8015c34:	2303      	movs	r3, #3
 8015c36:	f360 0507 	bfi	r5, r0, #0, #8
 8015c3a:	b2d2      	uxtb	r2, r2
 8015c3c:	f362 250f 	bfi	r5, r2, #8, #8
 8015c40:	b2f6      	uxtb	r6, r6
 8015c42:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015c46:	fb13 2206 	smlabb	r2, r3, r6, r2
 8015c4a:	2307      	movs	r3, #7
 8015c4c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015c50:	230b      	movs	r3, #11
 8015c52:	f366 4517 	bfi	r5, r6, #16, #8
 8015c56:	f361 651f 	bfi	r5, r1, #24, #8
 8015c5a:	fb13 0301 	smlabb	r3, r3, r1, r0
 8015c5e:	e798      	b.n	8015b92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8015c60:	119e      	asrs	r6, r3, #6
 8015c62:	d10d      	bne.n	8015c80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015c64:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015c68:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015c6c:	685d      	ldr	r5, [r3, #4]
 8015c6e:	e795      	b.n	8015b9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015c70:	20002230 	.word	0x20002230
 8015c74:	2000222a 	.word	0x2000222a
 8015c78:	20000100 	.word	0x20000100
 8015c7c:	20000200 	.word	0x20000200
 8015c80:	2e01      	cmp	r6, #1
 8015c82:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8015c86:	d12b      	bne.n	8015ce0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8015c88:	f003 0003 	and.w	r0, r3, #3
 8015c8c:	3802      	subs	r0, #2
 8015c8e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8015c92:	b2c0      	uxtb	r0, r0
 8015c94:	f003 020c 	and.w	r2, r3, #12
 8015c98:	f360 0507 	bfi	r5, r0, #0, #8
 8015c9c:	3a08      	subs	r2, #8
 8015c9e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015ca2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8015ca6:	f362 250f 	bfi	r5, r2, #8, #8
 8015caa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015cae:	1e9f      	subs	r7, r3, #2
 8015cb0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8015cb4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8015cb8:	2703      	movs	r7, #3
 8015cba:	b2db      	uxtb	r3, r3
 8015cbc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015cc0:	fb17 2203 	smlabb	r2, r7, r3, r2
 8015cc4:	2707      	movs	r7, #7
 8015cc6:	f363 4517 	bfi	r5, r3, #16, #8
 8015cca:	230b      	movs	r3, #11
 8015ccc:	fb17 2000 	smlabb	r0, r7, r0, r2
 8015cd0:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015cd4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015cd8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015cdc:	604d      	str	r5, [r1, #4]
 8015cde:	e75e      	b.n	8015b9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8015ce0:	2e02      	cmp	r6, #2
 8015ce2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015ce6:	d12f      	bne.n	8015d48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015ce8:	7878      	ldrb	r0, [r7, #1]
 8015cea:	1cba      	adds	r2, r7, #2
 8015cec:	b2c0      	uxtb	r0, r0
 8015cee:	9203      	str	r2, [sp, #12]
 8015cf0:	f000 020f 	and.w	r2, r0, #15
 8015cf4:	3b20      	subs	r3, #32
 8015cf6:	3a08      	subs	r2, #8
 8015cf8:	441a      	add	r2, r3
 8015cfa:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8015cfe:	b2d2      	uxtb	r2, r2
 8015d00:	f362 0507 	bfi	r5, r2, #0, #8
 8015d04:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015d08:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8015d0c:	b2f6      	uxtb	r6, r6
 8015d0e:	1100      	asrs	r0, r0, #4
 8015d10:	f366 250f 	bfi	r5, r6, #8, #8
 8015d14:	3808      	subs	r0, #8
 8015d16:	4403      	add	r3, r0
 8015d18:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8015d1c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015d20:	2003      	movs	r0, #3
 8015d22:	b2db      	uxtb	r3, r3
 8015d24:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015d28:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015d2c:	2007      	movs	r0, #7
 8015d2e:	f363 4517 	bfi	r5, r3, #16, #8
 8015d32:	230b      	movs	r3, #11
 8015d34:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015d38:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015d3c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015d40:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015d44:	604d      	str	r5, [r1, #4]
 8015d46:	e729      	b.n	8015b9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015d48:	1c5e      	adds	r6, r3, #1
 8015d4a:	45b3      	cmp	fp, r6
 8015d4c:	465f      	mov	r7, fp
 8015d4e:	bfa8      	it	ge
 8015d50:	4637      	movge	r7, r6
 8015d52:	e725      	b.n	8015ba0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015d54:	193b      	adds	r3, r7, r4
 8015d56:	2b40      	cmp	r3, #64	@ 0x40
 8015d58:	dd13      	ble.n	8015d82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015d5a:	4648      	mov	r0, r9
 8015d5c:	00a1      	lsls	r1, r4, #2
 8015d5e:	f7f5 fc20 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 8015d62:	4622      	mov	r2, r4
 8015d64:	4640      	mov	r0, r8
 8015d66:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015d6a:	2400      	movs	r4, #0
 8015d6c:	4649      	mov	r1, r9
 8015d6e:	9b05      	ldr	r3, [sp, #20]
 8015d70:	f7f5 fcca 	bl	800b708 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015d74:	4b2b      	ldr	r3, [pc, #172]	@ (8015e24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8015d76:	4599      	cmp	r9, r3
 8015d78:	bf0c      	ite	eq
 8015d7a:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 8015e30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8015d7e:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 8015e24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8015d82:	463b      	mov	r3, r7
 8015d84:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8015d88:	3b01      	subs	r3, #1
 8015d8a:	f842 5b04 	str.w	r5, [r2], #4
 8015d8e:	d1fb      	bne.n	8015d88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8015d90:	443c      	add	r4, r7
 8015d92:	9f03      	ldr	r7, [sp, #12]
 8015d94:	e6d9      	b.n	8015b4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015d96:	b15c      	cbz	r4, 8015db0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8015d98:	00a1      	lsls	r1, r4, #2
 8015d9a:	4648      	mov	r0, r9
 8015d9c:	f7f5 fc01 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 8015da0:	4640      	mov	r0, r8
 8015da2:	9b05      	ldr	r3, [sp, #20]
 8015da4:	4622      	mov	r2, r4
 8015da6:	4649      	mov	r1, r9
 8015da8:	f7f5 fcae 	bl	800b708 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8015dac:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8015db0:	4b1d      	ldr	r3, [pc, #116]	@ (8015e28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8015db2:	9a01      	ldr	r2, [sp, #4]
 8015db4:	881b      	ldrh	r3, [r3, #0]
 8015db6:	1a9b      	subs	r3, r3, r2
 8015db8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015dbc:	9b04      	ldr	r3, [sp, #16]
 8015dbe:	3301      	adds	r3, #1
 8015dc0:	9304      	str	r3, [sp, #16]
 8015dc2:	9a04      	ldr	r2, [sp, #16]
 8015dc4:	9b00      	ldr	r3, [sp, #0]
 8015dc6:	4293      	cmp	r3, r2
 8015dc8:	d11d      	bne.n	8015e06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8015dca:	2500      	movs	r5, #0
 8015dcc:	9b02      	ldr	r3, [sp, #8]
 8015dce:	9a02      	ldr	r2, [sp, #8]
 8015dd0:	f103 0b01 	add.w	fp, r3, #1
 8015dd4:	9b06      	ldr	r3, [sp, #24]
 8015dd6:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015dda:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015dde:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015de2:	9b07      	ldr	r3, [sp, #28]
 8015de4:	ba3f      	rev	r7, r7
 8015de6:	1ba4      	subs	r4, r4, r6
 8015de8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015dec:	4629      	mov	r1, r5
 8015dee:	9808      	ldr	r0, [sp, #32]
 8015df0:	441f      	add	r7, r3
 8015df2:	b2a4      	uxth	r4, r4
 8015df4:	f00b fb5f 	bl	80214b6 <memset>
 8015df8:	f8cd b008 	str.w	fp, [sp, #8]
 8015dfc:	9504      	str	r5, [sp, #16]
 8015dfe:	f7f5 fbc9 	bl	800b594 <_ZN8touchgfx5paint8tearDownEv>
 8015e02:	463e      	mov	r6, r7
 8015e04:	e5cc      	b.n	80159a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015e06:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015e0a:	9b01      	ldr	r3, [sp, #4]
 8015e0c:	1ae4      	subs	r4, r4, r3
 8015e0e:	1ba4      	subs	r4, r4, r6
 8015e10:	b2a4      	uxth	r4, r4
 8015e12:	e7f4      	b.n	8015dfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015e14:	4b05      	ldr	r3, [pc, #20]	@ (8015e2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015e16:	6818      	ldr	r0, [r3, #0]
 8015e18:	6803      	ldr	r3, [r0, #0]
 8015e1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015e1c:	4798      	blx	r3
 8015e1e:	b00f      	add	sp, #60	@ 0x3c
 8015e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e24:	20000100 	.word	0x20000100
 8015e28:	2000222a 	.word	0x2000222a
 8015e2c:	20002230 	.word	0x20002230
 8015e30:	20000200 	.word	0x20000200

08015e34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e38:	b08f      	sub	sp, #60	@ 0x3c
 8015e3a:	9205      	str	r2, [sp, #20]
 8015e3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015e40:	461c      	mov	r4, r3
 8015e42:	9100      	str	r1, [sp, #0]
 8015e44:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015e46:	9201      	str	r2, [sp, #4]
 8015e48:	2a00      	cmp	r2, #0
 8015e4a:	f000 8116 	beq.w	801607a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8015e4e:	6820      	ldr	r0, [r4, #0]
 8015e50:	6861      	ldr	r1, [r4, #4]
 8015e52:	aa0a      	add	r2, sp, #40	@ 0x28
 8015e54:	c203      	stmia	r2!, {r0, r1}
 8015e56:	6818      	ldr	r0, [r3, #0]
 8015e58:	6859      	ldr	r1, [r3, #4]
 8015e5a:	aa0c      	add	r2, sp, #48	@ 0x30
 8015e5c:	c203      	stmia	r2!, {r0, r1}
 8015e5e:	a80a      	add	r0, sp, #40	@ 0x28
 8015e60:	f7f9 faa6 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015e64:	4621      	mov	r1, r4
 8015e66:	a80c      	add	r0, sp, #48	@ 0x30
 8015e68:	f7f9 faca 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015e6c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015e70:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015e74:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015e78:	bfdd      	ittte	le
 8015e7a:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015e7e:	b2b3      	uxthle	r3, r6
 8015e80:	fb92 f3f3 	sdivle	r3, r2, r3
 8015e84:	2301      	movgt	r3, #1
 8015e86:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015e8a:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015e8e:	fb92 f1f3 	sdiv	r1, r2, r3
 8015e92:	fa1f fc81 	uxth.w	ip, r1
 8015e96:	4661      	mov	r1, ip
 8015e98:	fb0c 2413 	mls	r4, ip, r3, r2
 8015e9c:	fb14 f406 	smulbb	r4, r4, r6
 8015ea0:	441d      	add	r5, r3
 8015ea2:	3d01      	subs	r5, #1
 8015ea4:	4404      	add	r4, r0
 8015ea6:	fb95 f5f3 	sdiv	r5, r5, r3
 8015eaa:	b2a4      	uxth	r4, r4
 8015eac:	b131      	cbz	r1, 8015ebc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8015eae:	9b05      	ldr	r3, [sp, #20]
 8015eb0:	9900      	ldr	r1, [sp, #0]
 8015eb2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015eb6:	ba1b      	rev	r3, r3
 8015eb8:	4419      	add	r1, r3
 8015eba:	9100      	str	r1, [sp, #0]
 8015ebc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015ec0:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015ec4:	4418      	add	r0, r3
 8015ec6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015eca:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015ece:	441a      	add	r2, r3
 8015ed0:	4b6b      	ldr	r3, [pc, #428]	@ (8016080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015ed2:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015ed6:	6818      	ldr	r0, [r3, #0]
 8015ed8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015edc:	6803      	ldr	r3, [r0, #0]
 8015ede:	b2ad      	uxth	r5, r5
 8015ee0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ee2:	4798      	blx	r3
 8015ee4:	4967      	ldr	r1, [pc, #412]	@ (8016084 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015ee6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015eea:	880b      	ldrh	r3, [r1, #0]
 8015eec:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015ef0:	00ad      	lsls	r5, r5, #2
 8015ef2:	fb03 c202 	mla	r2, r3, r2, ip
 8015ef6:	4373      	muls	r3, r6
 8015ef8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015efc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015f00:	9306      	str	r3, [sp, #24]
 8015f02:	1d2b      	adds	r3, r5, #4
 8015f04:	9307      	str	r3, [sp, #28]
 8015f06:	9b01      	ldr	r3, [sp, #4]
 8015f08:	2c00      	cmp	r4, #0
 8015f0a:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015f0e:	bf0c      	ite	eq
 8015f10:	46c6      	moveq	lr, r8
 8015f12:	f04f 0e00 	movne.w	lr, #0
 8015f16:	2300      	movs	r3, #0
 8015f18:	9109      	str	r1, [sp, #36]	@ 0x24
 8015f1a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015f1e:	b292      	uxth	r2, r2
 8015f20:	fa1f fe8e 	uxth.w	lr, lr
 8015f24:	9302      	str	r3, [sp, #8]
 8015f26:	9103      	str	r1, [sp, #12]
 8015f28:	9204      	str	r2, [sp, #16]
 8015f2a:	9a06      	ldr	r2, [sp, #24]
 8015f2c:	4282      	cmp	r2, r0
 8015f2e:	f240 809f 	bls.w	8016070 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8015f32:	b963      	cbnz	r3, 8015f4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015f34:	9b00      	ldr	r3, [sp, #0]
 8015f36:	781a      	ldrb	r2, [r3, #0]
 8015f38:	0993      	lsrs	r3, r2, #6
 8015f3a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015f3e:	9202      	str	r2, [sp, #8]
 8015f40:	1e5a      	subs	r2, r3, #1
 8015f42:	2a02      	cmp	r2, #2
 8015f44:	d815      	bhi.n	8015f72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8015f46:	9a00      	ldr	r2, [sp, #0]
 8015f48:	b29b      	uxth	r3, r3
 8015f4a:	3201      	adds	r2, #1
 8015f4c:	9200      	str	r2, [sp, #0]
 8015f4e:	b1b4      	cbz	r4, 8015f7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8015f50:	429c      	cmp	r4, r3
 8015f52:	bf99      	ittee	ls
 8015f54:	1b1c      	subls	r4, r3, r4
 8015f56:	fa1f fa84 	uxthls.w	sl, r4
 8015f5a:	4671      	movhi	r1, lr
 8015f5c:	f04f 0a00 	movhi.w	sl, #0
 8015f60:	bf93      	iteet	ls
 8015f62:	2400      	movls	r4, #0
 8015f64:	1ae4      	subhi	r4, r4, r3
 8015f66:	b2a4      	uxthhi	r4, r4
 8015f68:	fa1f f188 	uxthls.w	r1, r8
 8015f6c:	4653      	mov	r3, sl
 8015f6e:	468e      	mov	lr, r1
 8015f70:	e7db      	b.n	8015f2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8015f72:	9a00      	ldr	r2, [sp, #0]
 8015f74:	9b00      	ldr	r3, [sp, #0]
 8015f76:	3202      	adds	r2, #2
 8015f78:	785b      	ldrb	r3, [r3, #1]
 8015f7a:	9200      	str	r2, [sp, #0]
 8015f7c:	e7e7      	b.n	8015f4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015f7e:	2202      	movs	r2, #2
 8015f80:	4615      	mov	r5, r2
 8015f82:	4573      	cmp	r3, lr
 8015f84:	bf2c      	ite	cs
 8015f86:	46f1      	movcs	r9, lr
 8015f88:	4699      	movcc	r9, r3
 8015f8a:	9907      	ldr	r1, [sp, #28]
 8015f8c:	9a02      	ldr	r2, [sp, #8]
 8015f8e:	bf28      	it	cs
 8015f90:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015f94:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015f98:	9905      	ldr	r1, [sp, #20]
 8015f9a:	bf28      	it	cs
 8015f9c:	fa1f fa8a 	uxthcs.w	sl, sl
 8015fa0:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015fa4:	9a01      	ldr	r2, [sp, #4]
 8015fa6:	bf37      	itett	cc
 8015fa8:	ebae 0103 	subcc.w	r1, lr, r3
 8015fac:	4621      	movcs	r1, r4
 8015fae:	b289      	uxthcc	r1, r1
 8015fb0:	46a2      	movcc	sl, r4
 8015fb2:	2aff      	cmp	r2, #255	@ 0xff
 8015fb4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015fb8:	d105      	bne.n	8015fc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8015fba:	4481      	add	r9, r0
 8015fbc:	4581      	cmp	r9, r0
 8015fbe:	d045      	beq.n	801604c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015fc0:	f820 cb02 	strh.w	ip, [r0], #2
 8015fc4:	e7fa      	b.n	8015fbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015fc6:	9d03      	ldr	r5, [sp, #12]
 8015fc8:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015fcc:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015fd0:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015fd4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015fd8:	436a      	muls	r2, r5
 8015fda:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015fde:	fa5f fc8c 	uxtb.w	ip, ip
 8015fe2:	fb0b fb05 	mul.w	fp, fp, r5
 8015fe6:	fb0c fc05 	mul.w	ip, ip, r5
 8015fea:	9208      	str	r2, [sp, #32]
 8015fec:	4481      	add	r9, r0
 8015fee:	4581      	cmp	r9, r0
 8015ff0:	d02c      	beq.n	801604c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015ff2:	8802      	ldrh	r2, [r0, #0]
 8015ff4:	9d04      	ldr	r5, [sp, #16]
 8015ff6:	1216      	asrs	r6, r2, #8
 8015ff8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015ffc:	fb16 f605 	smulbb	r6, r6, r5
 8016000:	9d08      	ldr	r5, [sp, #32]
 8016002:	9f04      	ldr	r7, [sp, #16]
 8016004:	442e      	add	r6, r5
 8016006:	10d5      	asrs	r5, r2, #3
 8016008:	00d2      	lsls	r2, r2, #3
 801600a:	b2d2      	uxtb	r2, r2
 801600c:	fb12 f207 	smulbb	r2, r2, r7
 8016010:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016014:	fb15 f507 	smulbb	r5, r5, r7
 8016018:	b2b6      	uxth	r6, r6
 801601a:	4462      	add	r2, ip
 801601c:	b292      	uxth	r2, r2
 801601e:	1c77      	adds	r7, r6, #1
 8016020:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016024:	1c57      	adds	r7, r2, #1
 8016026:	445d      	add	r5, fp
 8016028:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801602c:	b2ad      	uxth	r5, r5
 801602e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016032:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016036:	4316      	orrs	r6, r2
 8016038:	1c6a      	adds	r2, r5, #1
 801603a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801603e:	096d      	lsrs	r5, r5, #5
 8016040:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016044:	432e      	orrs	r6, r5
 8016046:	f820 6b02 	strh.w	r6, [r0], #2
 801604a:	e7d0      	b.n	8015fee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 801604c:	4573      	cmp	r3, lr
 801604e:	d38d      	bcc.n	8015f6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016050:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016054:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016056:	fa1f f188 	uxth.w	r1, r8
 801605a:	1a64      	subs	r4, r4, r1
 801605c:	881b      	ldrh	r3, [r3, #0]
 801605e:	b2a4      	uxth	r4, r4
 8016060:	2c00      	cmp	r4, #0
 8016062:	eba3 0308 	sub.w	r3, r3, r8
 8016066:	bf18      	it	ne
 8016068:	2100      	movne	r1, #0
 801606a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801606e:	e77d      	b.n	8015f6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016070:	4b03      	ldr	r3, [pc, #12]	@ (8016080 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016072:	6818      	ldr	r0, [r3, #0]
 8016074:	6803      	ldr	r3, [r0, #0]
 8016076:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016078:	4798      	blx	r3
 801607a:	b00f      	add	sp, #60	@ 0x3c
 801607c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016080:	20002230 	.word	0x20002230
 8016084:	2000222a 	.word	0x2000222a

08016088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801608c:	b09f      	sub	sp, #124	@ 0x7c
 801608e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016092:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016096:	461d      	mov	r5, r3
 8016098:	4604      	mov	r4, r0
 801609a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801609c:	9209      	str	r2, [sp, #36]	@ 0x24
 801609e:	2a00      	cmp	r2, #0
 80160a0:	f000 81e9 	beq.w	8016476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ee>
 80160a4:	6828      	ldr	r0, [r5, #0]
 80160a6:	6869      	ldr	r1, [r5, #4]
 80160a8:	aa1a      	add	r2, sp, #104	@ 0x68
 80160aa:	c203      	stmia	r2!, {r0, r1}
 80160ac:	6818      	ldr	r0, [r3, #0]
 80160ae:	6859      	ldr	r1, [r3, #4]
 80160b0:	aa1c      	add	r2, sp, #112	@ 0x70
 80160b2:	c203      	stmia	r2!, {r0, r1}
 80160b4:	a81a      	add	r0, sp, #104	@ 0x68
 80160b6:	f7f9 f97b 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80160ba:	4629      	mov	r1, r5
 80160bc:	a81c      	add	r0, sp, #112	@ 0x70
 80160be:	f7f9 f99f 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80160c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80160c6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80160ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80160ce:	bfdd      	ittte	le
 80160d0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80160d4:	b29a      	uxthle	r2, r3
 80160d6:	fb91 f2f2 	sdivle	r2, r1, r2
 80160da:	2201      	movgt	r2, #1
 80160dc:	9202      	str	r2, [sp, #8]
 80160de:	9802      	ldr	r0, [sp, #8]
 80160e0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80160e4:	9902      	ldr	r1, [sp, #8]
 80160e6:	fb92 f0f0 	sdiv	r0, r2, r0
 80160ea:	b280      	uxth	r0, r0
 80160ec:	9010      	str	r0, [sp, #64]	@ 0x40
 80160ee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80160f0:	9802      	ldr	r0, [sp, #8]
 80160f2:	4488      	add	r8, r1
 80160f4:	fb05 2510 	mls	r5, r5, r0, r2
 80160f8:	fb15 f503 	smulbb	r5, r5, r3
 80160fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8016100:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016104:	fb98 f8f1 	sdiv	r8, r8, r1
 8016108:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801610c:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8016110:	440d      	add	r5, r1
 8016112:	4419      	add	r1, r3
 8016114:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016118:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801611c:	441a      	add	r2, r3
 801611e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016122:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016126:	9304      	str	r3, [sp, #16]
 8016128:	4b93      	ldr	r3, [pc, #588]	@ (8016378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f0>)
 801612a:	f108 0801 	add.w	r8, r8, #1
 801612e:	6818      	ldr	r0, [r3, #0]
 8016130:	fa1f f888 	uxth.w	r8, r8
 8016134:	6803      	ldr	r3, [r0, #0]
 8016136:	b2ad      	uxth	r5, r5
 8016138:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801613a:	4798      	blx	r3
 801613c:	4b8f      	ldr	r3, [pc, #572]	@ (801637c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801613e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016142:	881a      	ldrh	r2, [r3, #0]
 8016144:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016148:	4356      	muls	r6, r2
 801614a:	fb02 7101 	mla	r1, r2, r1, r7
 801614e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016152:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016156:	920a      	str	r2, [sp, #40]	@ 0x28
 8016158:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801615a:	2d00      	cmp	r5, #0
 801615c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016160:	f108 0204 	add.w	r2, r8, #4
 8016164:	9211      	str	r2, [sp, #68]	@ 0x44
 8016166:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016168:	f04f 0100 	mov.w	r1, #0
 801616c:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016170:	9215      	str	r2, [sp, #84]	@ 0x54
 8016172:	9a04      	ldr	r2, [sp, #16]
 8016174:	bf18      	it	ne
 8016176:	2200      	movne	r2, #0
 8016178:	9318      	str	r3, [sp, #96]	@ 0x60
 801617a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801617e:	b292      	uxth	r2, r2
 8016180:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016182:	4b7f      	ldr	r3, [pc, #508]	@ (8016380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016184:	910d      	str	r1, [sp, #52]	@ 0x34
 8016186:	1b1b      	subs	r3, r3, r4
 8016188:	9319      	str	r3, [sp, #100]	@ 0x64
 801618a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801618c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801618e:	fa11 f383 	uxtah	r3, r1, r3
 8016192:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016194:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016198:	3304      	adds	r3, #4
 801619a:	9306      	str	r3, [sp, #24]
 801619c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801619e:	4283      	cmp	r3, r0
 80161a0:	f240 8164 	bls.w	801646c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e4>
 80161a4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80161a8:	f04f 0a01 	mov.w	sl, #1
 80161ac:	fbb5 f3f3 	udiv	r3, r5, r3
 80161b0:	9902      	ldr	r1, [sp, #8]
 80161b2:	9e06      	ldr	r6, [sp, #24]
 80161b4:	1acb      	subs	r3, r1, r3
 80161b6:	b29b      	uxth	r3, r3
 80161b8:	9316      	str	r3, [sp, #88]	@ 0x58
 80161ba:	9b06      	ldr	r3, [sp, #24]
 80161bc:	7836      	ldrb	r6, [r6, #0]
 80161be:	7859      	ldrb	r1, [r3, #1]
 80161c0:	789b      	ldrb	r3, [r3, #2]
 80161c2:	9612      	str	r6, [sp, #72]	@ 0x48
 80161c4:	021b      	lsls	r3, r3, #8
 80161c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80161ca:	9906      	ldr	r1, [sp, #24]
 80161cc:	3601      	adds	r6, #1
 80161ce:	78c9      	ldrb	r1, [r1, #3]
 80161d0:	9605      	str	r6, [sp, #20]
 80161d2:	430b      	orrs	r3, r1
 80161d4:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80161d6:	46d3      	mov	fp, sl
 80161d8:	4419      	add	r1, r3
 80161da:	1c4e      	adds	r6, r1, #1
 80161dc:	9603      	str	r6, [sp, #12]
 80161de:	7849      	ldrb	r1, [r1, #1]
 80161e0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80161e2:	0209      	lsls	r1, r1, #8
 80161e4:	5cf3      	ldrb	r3, [r6, r3]
 80161e6:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80161ea:	4319      	orrs	r1, r3
 80161ec:	b28b      	uxth	r3, r1
 80161ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80161f0:	2300      	movs	r3, #0
 80161f2:	4657      	mov	r7, sl
 80161f4:	9307      	str	r3, [sp, #28]
 80161f6:	469c      	mov	ip, r3
 80161f8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80161fc:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016200:	930e      	str	r3, [sp, #56]	@ 0x38
 8016202:	2d00      	cmp	r5, #0
 8016204:	d07e      	beq.n	8016304 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016206:	42af      	cmp	r7, r5
 8016208:	d26e      	bcs.n	80162e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801620a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801620c:	1bed      	subs	r5, r5, r7
 801620e:	4283      	cmp	r3, r0
 8016210:	b2ad      	uxth	r5, r5
 8016212:	9201      	str	r2, [sp, #4]
 8016214:	d802      	bhi.n	801621c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016216:	e073      	b.n	8016300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016218:	2b00      	cmp	r3, #0
 801621a:	d15f      	bne.n	80162dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801621c:	9b03      	ldr	r3, [sp, #12]
 801621e:	f1cb 0207 	rsb	r2, fp, #7
 8016222:	785b      	ldrb	r3, [r3, #1]
 8016224:	4093      	lsls	r3, r2
 8016226:	005b      	lsls	r3, r3, #1
 8016228:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801622c:	9b03      	ldr	r3, [sp, #12]
 801622e:	781b      	ldrb	r3, [r3, #0]
 8016230:	fa43 f30b 	asr.w	r3, r3, fp
 8016234:	b2db      	uxtb	r3, r3
 8016236:	4313      	orrs	r3, r2
 8016238:	f10b 0201 	add.w	r2, fp, #1
 801623c:	fa5f fb82 	uxtb.w	fp, r2
 8016240:	9a03      	ldr	r2, [sp, #12]
 8016242:	f1bb 0f08 	cmp.w	fp, #8
 8016246:	bf15      	itete	ne
 8016248:	3201      	addne	r2, #1
 801624a:	3202      	addeq	r2, #2
 801624c:	9203      	strne	r2, [sp, #12]
 801624e:	9203      	streq	r2, [sp, #12]
 8016250:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016252:	b29f      	uxth	r7, r3
 8016254:	bf08      	it	eq
 8016256:	f04f 0b00 	moveq.w	fp, #0
 801625a:	42ba      	cmp	r2, r7
 801625c:	d309      	bcc.n	8016272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801625e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016262:	2301      	movs	r3, #1
 8016264:	9a05      	ldr	r2, [sp, #20]
 8016266:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801626a:	d30e      	bcc.n	801628a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801626c:	469a      	mov	sl, r3
 801626e:	2600      	movs	r6, #0
 8016270:	e035      	b.n	80162de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016272:	9b05      	ldr	r3, [sp, #20]
 8016274:	429f      	cmp	r7, r3
 8016276:	d318      	bcc.n	80162aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016278:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801627c:	eb04 030a 	add.w	r3, r4, sl
 8016280:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016284:	f10a 0301 	add.w	r3, sl, #1
 8016288:	b29b      	uxth	r3, r3
 801628a:	9a05      	ldr	r2, [sp, #20]
 801628c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016290:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016294:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016296:	7116      	strb	r6, [r2, #4]
 8016298:	f10a 0601 	add.w	r6, sl, #1
 801629c:	80d1      	strh	r1, [r2, #6]
 801629e:	7156      	strb	r6, [r2, #5]
 80162a0:	9a05      	ldr	r2, [sp, #20]
 80162a2:	3201      	adds	r2, #1
 80162a4:	b292      	uxth	r2, r2
 80162a6:	9205      	str	r2, [sp, #20]
 80162a8:	e7e0      	b.n	801626c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 80162aa:	463a      	mov	r2, r7
 80162ac:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 80162b0:	795b      	ldrb	r3, [r3, #5]
 80162b2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80162b6:	4426      	add	r6, r4
 80162b8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80162ba:	eb01 0c06 	add.w	ip, r1, r6
 80162be:	f1bc 0f00 	cmp.w	ip, #0
 80162c2:	dd07      	ble.n	80162d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80162c4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80162c8:	f892 c004 	ldrb.w	ip, [r2, #4]
 80162cc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80162d0:	88d2      	ldrh	r2, [r2, #6]
 80162d2:	e7f1      	b.n	80162b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80162d4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80162d8:	b29b      	uxth	r3, r3
 80162da:	e7c3      	b.n	8016264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80162dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80162de:	970c      	str	r7, [sp, #48]	@ 0x30
 80162e0:	9a01      	ldr	r2, [sp, #4]
 80162e2:	46b4      	mov	ip, r6
 80162e4:	461f      	mov	r7, r3
 80162e6:	e78c      	b.n	8016202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80162e8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80162ec:	1b7b      	subs	r3, r7, r5
 80162ee:	eb0c 0605 	add.w	r6, ip, r5
 80162f2:	b29b      	uxth	r3, r3
 80162f4:	9201      	str	r2, [sp, #4]
 80162f6:	b2b6      	uxth	r6, r6
 80162f8:	2500      	movs	r5, #0
 80162fa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80162fc:	4282      	cmp	r2, r0
 80162fe:	d88b      	bhi.n	8016218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016300:	9a01      	ldr	r2, [sp, #4]
 8016302:	e74b      	b.n	801619c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016304:	4297      	cmp	r7, r2
 8016306:	d331      	bcc.n	801636c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e4>
 8016308:	1abb      	subs	r3, r7, r2
 801630a:	b29b      	uxth	r3, r3
 801630c:	9208      	str	r2, [sp, #32]
 801630e:	9501      	str	r5, [sp, #4]
 8016310:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016312:	29ff      	cmp	r1, #255	@ 0xff
 8016314:	9908      	ldr	r1, [sp, #32]
 8016316:	eb0c 0601 	add.w	r6, ip, r1
 801631a:	d133      	bne.n	8016384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>
 801631c:	f1a0 0e02 	sub.w	lr, r0, #2
 8016320:	b2b6      	uxth	r6, r6
 8016322:	45b4      	cmp	ip, r6
 8016324:	f040 808a 	bne.w	801643c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b4>
 8016328:	9908      	ldr	r1, [sp, #32]
 801632a:	4297      	cmp	r7, r2
 801632c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016330:	d3e2      	bcc.n	80162f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016332:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016334:	9904      	ldr	r1, [sp, #16]
 8016336:	8812      	ldrh	r2, [r2, #0]
 8016338:	1a52      	subs	r2, r2, r1
 801633a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801633e:	9a07      	ldr	r2, [sp, #28]
 8016340:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016342:	3201      	adds	r2, #1
 8016344:	428a      	cmp	r2, r1
 8016346:	9207      	str	r2, [sp, #28]
 8016348:	f040 8085 	bne.w	8016456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ce>
 801634c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016350:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016354:	9b04      	ldr	r3, [sp, #16]
 8016356:	1bed      	subs	r5, r5, r7
 8016358:	b2ad      	uxth	r5, r5
 801635a:	2d00      	cmp	r5, #0
 801635c:	bf0c      	ite	eq
 801635e:	461a      	moveq	r2, r3
 8016360:	2200      	movne	r2, #0
 8016362:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016364:	b292      	uxth	r2, r2
 8016366:	3301      	adds	r3, #1
 8016368:	930d      	str	r3, [sp, #52]	@ 0x34
 801636a:	e70e      	b.n	801618a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801636c:	1bd1      	subs	r1, r2, r7
 801636e:	b28b      	uxth	r3, r1
 8016370:	9301      	str	r3, [sp, #4]
 8016372:	9708      	str	r7, [sp, #32]
 8016374:	462b      	mov	r3, r5
 8016376:	e7cb      	b.n	8016310 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8016378:	20002230 	.word	0x20002230
 801637c:	2000222a 	.word	0x2000222a
 8016380:	fffff7fb 	.word	0xfffff7fb
 8016384:	b2b6      	uxth	r6, r6
 8016386:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016388:	45b4      	cmp	ip, r6
 801638a:	d0cd      	beq.n	8016328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801638c:	f10c 0101 	add.w	r1, ip, #1
 8016390:	44a4      	add	ip, r4
 8016392:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016396:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016398:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801639a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801639e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80163a0:	ea4f 2825 	mov.w	r8, r5, asr #8
 80163a4:	f8b1 c000 	ldrh.w	ip, [r1]
 80163a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 80163ae:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80163b2:	fb1e fe01 	smulbb	lr, lr, r1
 80163b6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163b8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80163bc:	fb08 e801 	mla	r8, r8, r1, lr
 80163c0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80163c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163c6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80163ca:	fb19 f901 	smulbb	r9, r9, r1
 80163ce:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80163d2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163d4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80163d8:	fb0e 9e01 	mla	lr, lr, r1, r9
 80163dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80163e0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80163e2:	fa5f fc8c 	uxtb.w	ip, ip
 80163e6:	fb1c fc01 	smulbb	ip, ip, r1
 80163ea:	00ed      	lsls	r5, r5, #3
 80163ec:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80163ee:	b2ed      	uxtb	r5, r5
 80163f0:	fb05 c501 	mla	r5, r5, r1, ip
 80163f4:	fa1f f888 	uxth.w	r8, r8
 80163f8:	fa1f fe8e 	uxth.w	lr, lr
 80163fc:	b2ad      	uxth	r5, r5
 80163fe:	f108 0c01 	add.w	ip, r8, #1
 8016402:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016406:	f10e 0901 	add.w	r9, lr, #1
 801640a:	f105 0c01 	add.w	ip, r5, #1
 801640e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016412:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016416:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801641a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801641e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016422:	ea4c 0808 	orr.w	r8, ip, r8
 8016426:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016428:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801642c:	ea48 0809 	orr.w	r8, r8, r9
 8016430:	f821 8b02 	strh.w	r8, [r1], #2
 8016434:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016436:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801643a:	e7a5      	b.n	8016388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801643c:	f10c 0801 	add.w	r8, ip, #1
 8016440:	44a4      	add	ip, r4
 8016442:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016446:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016448:	fa1f fc88 	uxth.w	ip, r8
 801644c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016450:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016454:	e765      	b.n	8016322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8016456:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801645a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801645e:	1aad      	subs	r5, r5, r2
 8016460:	b2ad      	uxth	r5, r5
 8016462:	2d00      	cmp	r5, #0
 8016464:	bf18      	it	ne
 8016466:	2200      	movne	r2, #0
 8016468:	9201      	str	r2, [sp, #4]
 801646a:	e746      	b.n	80162fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801646c:	4b03      	ldr	r3, [pc, #12]	@ (801647c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f4>)
 801646e:	6818      	ldr	r0, [r3, #0]
 8016470:	6803      	ldr	r3, [r0, #0]
 8016472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016474:	4798      	blx	r3
 8016476:	b01f      	add	sp, #124	@ 0x7c
 8016478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801647c:	20002230 	.word	0x20002230

08016480 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016484:	b093      	sub	sp, #76	@ 0x4c
 8016486:	4616      	mov	r6, r2
 8016488:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801648c:	9003      	str	r0, [sp, #12]
 801648e:	460d      	mov	r5, r1
 8016490:	9201      	str	r2, [sp, #4]
 8016492:	2a00      	cmp	r2, #0
 8016494:	f000 8304 	beq.w	8016aa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016498:	6830      	ldr	r0, [r6, #0]
 801649a:	6871      	ldr	r1, [r6, #4]
 801649c:	ac0e      	add	r4, sp, #56	@ 0x38
 801649e:	c403      	stmia	r4!, {r0, r1}
 80164a0:	6818      	ldr	r0, [r3, #0]
 80164a2:	6859      	ldr	r1, [r3, #4]
 80164a4:	ac10      	add	r4, sp, #64	@ 0x40
 80164a6:	c403      	stmia	r4!, {r0, r1}
 80164a8:	a80e      	add	r0, sp, #56	@ 0x38
 80164aa:	f7f8 ff81 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80164ae:	4631      	mov	r1, r6
 80164b0:	a810      	add	r0, sp, #64	@ 0x40
 80164b2:	f7f8 ffa5 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80164b6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80164ba:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80164be:	bfdd      	ittte	le
 80164c0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80164c4:	b293      	uxthle	r3, r2
 80164c6:	fb91 f3f3 	sdivle	r3, r1, r3
 80164ca:	2301      	movgt	r3, #1
 80164cc:	9304      	str	r3, [sp, #16]
 80164ce:	f105 0308 	add.w	r3, r5, #8
 80164d2:	9904      	ldr	r1, [sp, #16]
 80164d4:	9308      	str	r3, [sp, #32]
 80164d6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80164da:	440b      	add	r3, r1
 80164dc:	3b01      	subs	r3, #1
 80164de:	fb93 f3f1 	sdiv	r3, r3, r1
 80164e2:	9908      	ldr	r1, [sp, #32]
 80164e4:	3b01      	subs	r3, #1
 80164e6:	b29b      	uxth	r3, r3
 80164e8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80164ec:	9309      	str	r3, [sp, #36]	@ 0x24
 80164ee:	9904      	ldr	r1, [sp, #16]
 80164f0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80164f4:	fb93 f0f1 	sdiv	r0, r3, r1
 80164f8:	b284      	uxth	r4, r0
 80164fa:	9405      	str	r4, [sp, #20]
 80164fc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016500:	fb05 3914 	mls	r9, r5, r4, r3
 8016504:	fb19 f902 	smulbb	r9, r9, r2
 8016508:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801650c:	4489      	add	r9, r1
 801650e:	fa1f f989 	uxth.w	r9, r9
 8016512:	2d00      	cmp	r5, #0
 8016514:	d05d      	beq.n	80165d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016516:	9808      	ldr	r0, [sp, #32]
 8016518:	1e6a      	subs	r2, r5, #1
 801651a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801651e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016520:	fa9a fa8a 	rev.w	sl, sl
 8016524:	4492      	add	sl, r2
 8016526:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801652a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801652e:	4411      	add	r1, r2
 8016530:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016534:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016538:	4413      	add	r3, r2
 801653a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801653e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016542:	f04f 0600 	mov.w	r6, #0
 8016546:	9302      	str	r3, [sp, #8]
 8016548:	4bca      	ldr	r3, [pc, #808]	@ (8016874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801654a:	6818      	ldr	r0, [r3, #0]
 801654c:	6803      	ldr	r3, [r0, #0]
 801654e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016550:	4798      	blx	r3
 8016552:	4bc9      	ldr	r3, [pc, #804]	@ (8016878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016554:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016558:	881b      	ldrh	r3, [r3, #0]
 801655a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801655e:	2100      	movs	r1, #0
 8016560:	fb03 2404 	mla	r4, r3, r4, r2
 8016564:	436b      	muls	r3, r5
 8016566:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801656a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801656e:	930d      	str	r3, [sp, #52]	@ 0x34
 8016570:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016574:	2280      	movs	r2, #128	@ 0x80
 8016576:	fb99 f3f3 	sdiv	r3, r9, r3
 801657a:	9306      	str	r3, [sp, #24]
 801657c:	9b01      	ldr	r3, [sp, #4]
 801657e:	43db      	mvns	r3, r3
 8016580:	b2db      	uxtb	r3, r3
 8016582:	930a      	str	r3, [sp, #40]	@ 0x28
 8016584:	9b03      	ldr	r3, [sp, #12]
 8016586:	3304      	adds	r3, #4
 8016588:	4618      	mov	r0, r3
 801658a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801658c:	f00a ff93 	bl	80214b6 <memset>
 8016590:	4bba      	ldr	r3, [pc, #744]	@ (801687c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016592:	9300      	str	r3, [sp, #0]
 8016594:	2300      	movs	r3, #0
 8016596:	9307      	str	r3, [sp, #28]
 8016598:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801659a:	42a3      	cmp	r3, r4
 801659c:	f240 827b 	bls.w	8016a96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80165a0:	f04f 0e07 	mov.w	lr, #7
 80165a4:	f1b9 0f00 	cmp.w	r9, #0
 80165a8:	f000 8159 	beq.w	801685e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80165ac:	f89a 5000 	ldrb.w	r5, [sl]
 80165b0:	f10a 0701 	add.w	r7, sl, #1
 80165b4:	b2ed      	uxtb	r5, r5
 80165b6:	11aa      	asrs	r2, r5, #6
 80165b8:	d10e      	bne.n	80165d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80165ba:	9b03      	ldr	r3, [sp, #12]
 80165bc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80165c0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80165c4:	88ae      	ldrh	r6, [r5, #4]
 80165c6:	f109 39ff 	add.w	r9, r9, #4294967295
 80165ca:	fa1f f989 	uxth.w	r9, r9
 80165ce:	46ba      	mov	sl, r7
 80165d0:	e7e8      	b.n	80165a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80165d2:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80165d6:	e7a6      	b.n	8016526 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80165d8:	2a01      	cmp	r2, #1
 80165da:	d129      	bne.n	8016630 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80165dc:	2103      	movs	r1, #3
 80165de:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80165e2:	f005 0203 	and.w	r2, r5, #3
 80165e6:	3b02      	subs	r3, #2
 80165e8:	4413      	add	r3, r2
 80165ea:	f003 031f 	and.w	r3, r3, #31
 80165ee:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80165f2:	f363 0604 	bfi	r6, r3, #0, #5
 80165f6:	3a02      	subs	r2, #2
 80165f8:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80165fc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016600:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016604:	f362 164a 	bfi	r6, r2, #5, #6
 8016608:	3d02      	subs	r5, #2
 801660a:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801660e:	f005 051f 	and.w	r5, r5, #31
 8016612:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016616:	fb11 2205 	smlabb	r2, r1, r5, r2
 801661a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801661e:	9a03      	ldr	r2, [sp, #12]
 8016620:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016624:	f365 26cf 	bfi	r6, r5, #11, #5
 8016628:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801662c:	809e      	strh	r6, [r3, #4]
 801662e:	e7ca      	b.n	80165c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016630:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016634:	2a02      	cmp	r2, #2
 8016636:	b2ab      	uxth	r3, r5
 8016638:	d136      	bne.n	80166a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801663a:	2101      	movs	r1, #1
 801663c:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016640:	4492      	add	sl, r2
 8016642:	463a      	mov	r2, r7
 8016644:	4552      	cmp	r2, sl
 8016646:	d01c      	beq.n	8016682 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8016648:	4694      	mov	ip, r2
 801664a:	f04f 0b03 	mov.w	fp, #3
 801664e:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016652:	7852      	ldrb	r2, [r2, #1]
 8016654:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8016658:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801665c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016660:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016664:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8016668:	f001 021f 	and.w	r2, r1, #31
 801666c:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016670:	9a03      	ldr	r2, [sp, #12]
 8016672:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016676:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801667a:	460e      	mov	r6, r1
 801667c:	8081      	strh	r1, [r0, #4]
 801667e:	4662      	mov	r2, ip
 8016680:	e7e0      	b.n	8016644 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8016682:	4599      	cmp	r9, r3
 8016684:	d20b      	bcs.n	801669e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8016686:	eba5 0509 	sub.w	r5, r5, r9
 801668a:	2d00      	cmp	r5, #0
 801668c:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8016690:	f300 8209 	bgt.w	8016aa6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8016694:	2301      	movs	r3, #1
 8016696:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801669a:	9307      	str	r3, [sp, #28]
 801669c:	e00c      	b.n	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801669e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80166a2:	eba9 0903 	sub.w	r9, r9, r3
 80166a6:	e790      	b.n	80165ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80166a8:	4599      	cmp	r9, r3
 80166aa:	d2fa      	bcs.n	80166a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80166ac:	eba5 0509 	sub.w	r5, r5, r9
 80166b0:	2d00      	cmp	r5, #0
 80166b2:	dc1d      	bgt.n	80166f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80166b4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80166b8:	f04f 0b00 	mov.w	fp, #0
 80166bc:	f1b8 0f00 	cmp.w	r8, #0
 80166c0:	f340 81a1 	ble.w	8016a06 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80166c4:	783b      	ldrb	r3, [r7, #0]
 80166c6:	f107 0a01 	add.w	sl, r7, #1
 80166ca:	b2db      	uxtb	r3, r3
 80166cc:	119a      	asrs	r2, r3, #6
 80166ce:	f040 80d7 	bne.w	8016880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80166d2:	9a03      	ldr	r2, [sp, #12]
 80166d4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80166d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80166dc:	889e      	ldrh	r6, [r3, #4]
 80166de:	9b01      	ldr	r3, [sp, #4]
 80166e0:	2bff      	cmp	r3, #255	@ 0xff
 80166e2:	f040 81e9 	bne.w	8016ab8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80166e6:	8026      	strh	r6, [r4, #0]
 80166e8:	f108 38ff 	add.w	r8, r8, #4294967295
 80166ec:	3402      	adds	r4, #2
 80166ee:	e0be      	b.n	801686e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80166f0:	9b02      	ldr	r3, [sp, #8]
 80166f2:	9a02      	ldr	r2, [sp, #8]
 80166f4:	42ab      	cmp	r3, r5
 80166f6:	bfa8      	it	ge
 80166f8:	462b      	movge	r3, r5
 80166fa:	eba2 0803 	sub.w	r8, r2, r3
 80166fe:	9a07      	ldr	r2, [sp, #28]
 8016700:	1aed      	subs	r5, r5, r3
 8016702:	2a00      	cmp	r2, #0
 8016704:	d05a      	beq.n	80167bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 8016706:	9a01      	ldr	r2, [sp, #4]
 8016708:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801670c:	2aff      	cmp	r2, #255	@ 0xff
 801670e:	d049      	beq.n	80167a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016710:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016714:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8016718:	42a3      	cmp	r3, r4
 801671a:	f240 80a5 	bls.w	8016868 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801671e:	46bc      	mov	ip, r7
 8016720:	8820      	ldrh	r0, [r4, #0]
 8016722:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8016726:	7879      	ldrb	r1, [r7, #1]
 8016728:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801672c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8016730:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016734:	b212      	sxth	r2, r2
 8016736:	fb1a fa09 	smulbb	sl, sl, r9
 801673a:	b291      	uxth	r1, r2
 801673c:	120f      	asrs	r7, r1, #8
 801673e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016742:	fb07 a70e 	mla	r7, r7, lr, sl
 8016746:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801674a:	00c0      	lsls	r0, r0, #3
 801674c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016750:	b2c0      	uxtb	r0, r0
 8016752:	fb1a fa09 	smulbb	sl, sl, r9
 8016756:	fb10 f009 	smulbb	r0, r0, r9
 801675a:	10c9      	asrs	r1, r1, #3
 801675c:	00d2      	lsls	r2, r2, #3
 801675e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016762:	b2d2      	uxtb	r2, r2
 8016764:	fb01 a10e 	mla	r1, r1, lr, sl
 8016768:	fb02 020e 	mla	r2, r2, lr, r0
 801676c:	b2bf      	uxth	r7, r7
 801676e:	b289      	uxth	r1, r1
 8016770:	b292      	uxth	r2, r2
 8016772:	1c78      	adds	r0, r7, #1
 8016774:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016778:	f101 0a01 	add.w	sl, r1, #1
 801677c:	1c50      	adds	r0, r2, #1
 801677e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016782:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8016786:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801678a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801678e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016792:	4307      	orrs	r7, r0
 8016794:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016798:	ea47 070a 	orr.w	r7, r7, sl
 801679c:	f824 7b02 	strh.w	r7, [r4], #2
 80167a0:	4667      	mov	r7, ip
 80167a2:	e7b9      	b.n	8016718 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80167a4:	42a3      	cmp	r3, r4
 80167a6:	d95f      	bls.n	8016868 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80167a8:	463a      	mov	r2, r7
 80167aa:	f812 1b02 	ldrb.w	r1, [r2], #2
 80167ae:	7878      	ldrb	r0, [r7, #1]
 80167b0:	4617      	mov	r7, r2
 80167b2:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80167b6:	f824 1b02 	strh.w	r1, [r4], #2
 80167ba:	e7f3      	b.n	80167a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80167bc:	9901      	ldr	r1, [sp, #4]
 80167be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80167c2:	29ff      	cmp	r1, #255	@ 0xff
 80167c4:	b2b2      	uxth	r2, r6
 80167c6:	d044      	beq.n	8016852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80167c8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80167cc:	ea4f 2922 	mov.w	r9, r2, asr #8
 80167d0:	4608      	mov	r0, r1
 80167d2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80167d6:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80167da:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80167de:	fb09 f901 	mul.w	r9, r9, r1
 80167e2:	fb0e fe01 	mul.w	lr, lr, r1
 80167e6:	00d1      	lsls	r1, r2, #3
 80167e8:	b2c9      	uxtb	r1, r1
 80167ea:	4341      	muls	r1, r0
 80167ec:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80167f0:	429c      	cmp	r4, r3
 80167f2:	f4bf af61 	bcs.w	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80167f6:	8822      	ldrh	r2, [r4, #0]
 80167f8:	1210      	asrs	r0, r2, #8
 80167fa:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80167fe:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016802:	00d2      	lsls	r2, r2, #3
 8016804:	fb00 900a 	mla	r0, r0, sl, r9
 8016808:	b2d2      	uxtb	r2, r2
 801680a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801680e:	fb02 120a 	mla	r2, r2, sl, r1
 8016812:	fb0c ec0a 	mla	ip, ip, sl, lr
 8016816:	b280      	uxth	r0, r0
 8016818:	b292      	uxth	r2, r2
 801681a:	f100 0b01 	add.w	fp, r0, #1
 801681e:	fa1f fc8c 	uxth.w	ip, ip
 8016822:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8016826:	1c50      	adds	r0, r2, #1
 8016828:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801682c:	f10c 0201 	add.w	r2, ip, #1
 8016830:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016834:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8016838:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801683c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016840:	ea40 0b0b 	orr.w	fp, r0, fp
 8016844:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8016848:	ea4b 0b0c 	orr.w	fp, fp, ip
 801684c:	f824 bb02 	strh.w	fp, [r4], #2
 8016850:	e7ce      	b.n	80167f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016852:	429c      	cmp	r4, r3
 8016854:	f4bf af30 	bcs.w	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016858:	f824 2b02 	strh.w	r2, [r4], #2
 801685c:	e7f9      	b.n	8016852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801685e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016862:	4657      	mov	r7, sl
 8016864:	464d      	mov	r5, r9
 8016866:	e727      	b.n	80166b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8016868:	2300      	movs	r3, #0
 801686a:	e716      	b.n	801669a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801686c:	44bb      	add	fp, r7
 801686e:	4657      	mov	r7, sl
 8016870:	e724      	b.n	80166bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8016872:	bf00      	nop
 8016874:	20002230 	.word	0x20002230
 8016878:	2000222a 	.word	0x2000222a
 801687c:	20000100 	.word	0x20000100
 8016880:	2a01      	cmp	r2, #1
 8016882:	d12a      	bne.n	80168da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8016884:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8016888:	f003 0203 	and.w	r2, r3, #3
 801688c:	3902      	subs	r1, #2
 801688e:	4411      	add	r1, r2
 8016890:	f001 011f 	and.w	r1, r1, #31
 8016894:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8016898:	f361 0604 	bfi	r6, r1, #0, #5
 801689c:	3802      	subs	r0, #2
 801689e:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80168a2:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80168a6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80168aa:	f360 164a 	bfi	r6, r0, #5, #6
 80168ae:	3b02      	subs	r3, #2
 80168b0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80168b4:	f002 031f 	and.w	r3, r2, #31
 80168b8:	2203      	movs	r2, #3
 80168ba:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80168be:	f363 26cf 	bfi	r6, r3, #11, #5
 80168c2:	fb12 0303 	smlabb	r3, r2, r3, r0
 80168c6:	2207      	movs	r2, #7
 80168c8:	fb12 3301 	smlabb	r3, r2, r1, r3
 80168cc:	9a03      	ldr	r2, [sp, #12]
 80168ce:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80168d2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80168d6:	809e      	strh	r6, [r3, #4]
 80168d8:	e701      	b.n	80166de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 80168da:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 80168de:	45a8      	cmp	r8, r5
 80168e0:	4647      	mov	r7, r8
 80168e2:	bfa8      	it	ge
 80168e4:	462f      	movge	r7, r5
 80168e6:	2a02      	cmp	r2, #2
 80168e8:	d154      	bne.n	8016994 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 80168ea:	9b01      	ldr	r3, [sp, #4]
 80168ec:	2bff      	cmp	r3, #255	@ 0xff
 80168ee:	d01a      	beq.n	8016926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80168f0:	eb0b 0307 	add.w	r3, fp, r7
 80168f4:	2b40      	cmp	r3, #64	@ 0x40
 80168f6:	dd16      	ble.n	8016926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80168f8:	ea4f 094b 	mov.w	r9, fp, lsl #1
 80168fc:	4649      	mov	r1, r9
 80168fe:	9800      	ldr	r0, [sp, #0]
 8016900:	f7f4 fe4f 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 8016904:	465a      	mov	r2, fp
 8016906:	9b01      	ldr	r3, [sp, #4]
 8016908:	4620      	mov	r0, r4
 801690a:	9900      	ldr	r1, [sp, #0]
 801690c:	f7f4 fe54 	bl	800b5b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016910:	9b00      	ldr	r3, [sp, #0]
 8016912:	f04f 0b00 	mov.w	fp, #0
 8016916:	461a      	mov	r2, r3
 8016918:	4b6b      	ldr	r3, [pc, #428]	@ (8016ac8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801691a:	444c      	add	r4, r9
 801691c:	429a      	cmp	r2, r3
 801691e:	bf0c      	ite	eq
 8016920:	4b6a      	ldreq	r3, [pc, #424]	@ (8016acc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8016922:	4b69      	ldrne	r3, [pc, #420]	@ (8016ac8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016924:	9300      	str	r3, [sp, #0]
 8016926:	4652      	mov	r2, sl
 8016928:	2100      	movs	r1, #0
 801692a:	42a9      	cmp	r1, r5
 801692c:	da2c      	bge.n	8016988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801692e:	4694      	mov	ip, r2
 8016930:	f04f 0903 	mov.w	r9, #3
 8016934:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8016938:	7852      	ldrb	r2, [r2, #1]
 801693a:	42b9      	cmp	r1, r7
 801693c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016940:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016944:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8016948:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801694c:	fb19 000e 	smlabb	r0, r9, lr, r0
 8016950:	f04f 0e07 	mov.w	lr, #7
 8016954:	f003 021f 	and.w	r2, r3, #31
 8016958:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801695c:	9a03      	ldr	r2, [sp, #12]
 801695e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016962:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016966:	461e      	mov	r6, r3
 8016968:	8083      	strh	r3, [r0, #4]
 801696a:	da0a      	bge.n	8016982 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801696c:	9a01      	ldr	r2, [sp, #4]
 801696e:	2aff      	cmp	r2, #255	@ 0xff
 8016970:	bf15      	itete	ne
 8016972:	9a00      	ldrne	r2, [sp, #0]
 8016974:	8023      	strheq	r3, [r4, #0]
 8016976:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801697a:	3402      	addeq	r4, #2
 801697c:	bf18      	it	ne
 801697e:	f10b 0b01 	addne.w	fp, fp, #1
 8016982:	3101      	adds	r1, #1
 8016984:	4662      	mov	r2, ip
 8016986:	e7d0      	b.n	801692a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8016988:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801698c:	eba8 0807 	sub.w	r8, r8, r7
 8016990:	1bed      	subs	r5, r5, r7
 8016992:	e76c      	b.n	801686e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016994:	9b01      	ldr	r3, [sp, #4]
 8016996:	eba8 0807 	sub.w	r8, r8, r7
 801699a:	2bff      	cmp	r3, #255	@ 0xff
 801699c:	eba5 0507 	sub.w	r5, r5, r7
 80169a0:	fa1f f986 	uxth.w	r9, r6
 80169a4:	d027      	beq.n	80169f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80169a6:	eb0b 0307 	add.w	r3, fp, r7
 80169aa:	2b40      	cmp	r3, #64	@ 0x40
 80169ac:	dd18      	ble.n	80169e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80169ae:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80169b2:	4619      	mov	r1, r3
 80169b4:	9800      	ldr	r0, [sp, #0]
 80169b6:	930c      	str	r3, [sp, #48]	@ 0x30
 80169b8:	f7f4 fdf3 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 80169bc:	465a      	mov	r2, fp
 80169be:	9b01      	ldr	r3, [sp, #4]
 80169c0:	4620      	mov	r0, r4
 80169c2:	9900      	ldr	r1, [sp, #0]
 80169c4:	f7f4 fdf8 	bl	800b5b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80169c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80169ca:	f04f 0b00 	mov.w	fp, #0
 80169ce:	441c      	add	r4, r3
 80169d0:	9b00      	ldr	r3, [sp, #0]
 80169d2:	461a      	mov	r2, r3
 80169d4:	4b3c      	ldr	r3, [pc, #240]	@ (8016ac8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80169d6:	429a      	cmp	r2, r3
 80169d8:	bf0c      	ite	eq
 80169da:	4b3c      	ldreq	r3, [pc, #240]	@ (8016acc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80169dc:	4b3a      	ldrne	r3, [pc, #232]	@ (8016ac8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80169de:	9300      	str	r3, [sp, #0]
 80169e0:	9b00      	ldr	r3, [sp, #0]
 80169e2:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 80169e6:	463b      	mov	r3, r7
 80169e8:	2b00      	cmp	r3, #0
 80169ea:	f43f af3f 	beq.w	801686c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 80169ee:	f822 9b02 	strh.w	r9, [r2], #2
 80169f2:	3b01      	subs	r3, #1
 80169f4:	e7f8      	b.n	80169e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80169f6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80169fa:	42a7      	cmp	r7, r4
 80169fc:	f67f af37 	bls.w	801686e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016a00:	f824 9b02 	strh.w	r9, [r4], #2
 8016a04:	e7f9      	b.n	80169fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8016a06:	f1bb 0f00 	cmp.w	fp, #0
 8016a0a:	d00c      	beq.n	8016a26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8016a0c:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016a10:	4641      	mov	r1, r8
 8016a12:	9800      	ldr	r0, [sp, #0]
 8016a14:	f7f4 fdc5 	bl	800b5a2 <_ZN8touchgfx5paint9flushLineEPmi>
 8016a18:	4620      	mov	r0, r4
 8016a1a:	9b01      	ldr	r3, [sp, #4]
 8016a1c:	465a      	mov	r2, fp
 8016a1e:	9900      	ldr	r1, [sp, #0]
 8016a20:	f7f4 fdca 	bl	800b5b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016a24:	4444      	add	r4, r8
 8016a26:	4b2a      	ldr	r3, [pc, #168]	@ (8016ad0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8016a28:	9a02      	ldr	r2, [sp, #8]
 8016a2a:	881b      	ldrh	r3, [r3, #0]
 8016a2c:	1a9b      	subs	r3, r3, r2
 8016a2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016a32:	9b06      	ldr	r3, [sp, #24]
 8016a34:	3301      	adds	r3, #1
 8016a36:	9306      	str	r3, [sp, #24]
 8016a38:	9a06      	ldr	r2, [sp, #24]
 8016a3a:	9b04      	ldr	r3, [sp, #16]
 8016a3c:	4293      	cmp	r3, r2
 8016a3e:	d120      	bne.n	8016a82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8016a40:	9b05      	ldr	r3, [sp, #20]
 8016a42:	9a05      	ldr	r2, [sp, #20]
 8016a44:	f103 0801 	add.w	r8, r3, #1
 8016a48:	9b08      	ldr	r3, [sp, #32]
 8016a4a:	2100      	movs	r1, #0
 8016a4c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016a50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a52:	ba3f      	rev	r7, r7
 8016a54:	2280      	movs	r2, #128	@ 0x80
 8016a56:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016a58:	441f      	add	r7, r3
 8016a5a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8016a5e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016a62:	f00a fd28 	bl	80214b6 <memset>
 8016a66:	2300      	movs	r3, #0
 8016a68:	f04f 0600 	mov.w	r6, #0
 8016a6c:	eba9 0905 	sub.w	r9, r9, r5
 8016a70:	fa1f f989 	uxth.w	r9, r9
 8016a74:	f8cd 8014 	str.w	r8, [sp, #20]
 8016a78:	9306      	str	r3, [sp, #24]
 8016a7a:	f7f4 fd8b 	bl	800b594 <_ZN8touchgfx5paint8tearDownEv>
 8016a7e:	46ba      	mov	sl, r7
 8016a80:	e58a      	b.n	8016598 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8016a82:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8016a86:	9b02      	ldr	r3, [sp, #8]
 8016a88:	eba9 0903 	sub.w	r9, r9, r3
 8016a8c:	eba9 0505 	sub.w	r5, r9, r5
 8016a90:	fa1f f985 	uxth.w	r9, r5
 8016a94:	e7f1      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8016a96:	4b0f      	ldr	r3, [pc, #60]	@ (8016ad4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8016a98:	6818      	ldr	r0, [r3, #0]
 8016a9a:	6803      	ldr	r3, [r0, #0]
 8016a9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016a9e:	4798      	blx	r3
 8016aa0:	b013      	add	sp, #76	@ 0x4c
 8016aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016aa6:	9b02      	ldr	r3, [sp, #8]
 8016aa8:	9a02      	ldr	r2, [sp, #8]
 8016aaa:	42ab      	cmp	r3, r5
 8016aac:	bfa8      	it	ge
 8016aae:	462b      	movge	r3, r5
 8016ab0:	eba2 0803 	sub.w	r8, r2, r3
 8016ab4:	1aed      	subs	r5, r5, r3
 8016ab6:	e626      	b.n	8016706 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8016ab8:	f108 38ff 	add.w	r8, r8, #4294967295
 8016abc:	fa1f f986 	uxth.w	r9, r6
 8016ac0:	2500      	movs	r5, #0
 8016ac2:	2701      	movs	r7, #1
 8016ac4:	e76f      	b.n	80169a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8016ac6:	bf00      	nop
 8016ac8:	20000100 	.word	0x20000100
 8016acc:	20000200 	.word	0x20000200
 8016ad0:	2000222a 	.word	0x2000222a
 8016ad4:	20002230 	.word	0x20002230

08016ad8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016adc:	b08f      	sub	sp, #60	@ 0x3c
 8016ade:	9203      	str	r2, [sp, #12]
 8016ae0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016ae4:	461c      	mov	r4, r3
 8016ae6:	460f      	mov	r7, r1
 8016ae8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8016aea:	9202      	str	r2, [sp, #8]
 8016aec:	2a00      	cmp	r2, #0
 8016aee:	f000 812a 	beq.w	8016d46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26e>
 8016af2:	6820      	ldr	r0, [r4, #0]
 8016af4:	6861      	ldr	r1, [r4, #4]
 8016af6:	aa0a      	add	r2, sp, #40	@ 0x28
 8016af8:	c203      	stmia	r2!, {r0, r1}
 8016afa:	6818      	ldr	r0, [r3, #0]
 8016afc:	6859      	ldr	r1, [r3, #4]
 8016afe:	aa0c      	add	r2, sp, #48	@ 0x30
 8016b00:	c203      	stmia	r2!, {r0, r1}
 8016b02:	a80a      	add	r0, sp, #40	@ 0x28
 8016b04:	f7f8 fc54 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016b08:	4621      	mov	r1, r4
 8016b0a:	a80c      	add	r0, sp, #48	@ 0x30
 8016b0c:	f7f8 fc78 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016b10:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016b14:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016b18:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016b1c:	bfdd      	ittte	le
 8016b1e:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016b22:	b2b3      	uxthle	r3, r6
 8016b24:	fb92 f3f3 	sdivle	r3, r2, r3
 8016b28:	2301      	movgt	r3, #1
 8016b2a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016b2e:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016b32:	fb92 f1f3 	sdiv	r1, r2, r3
 8016b36:	fa1f fc81 	uxth.w	ip, r1
 8016b3a:	4661      	mov	r1, ip
 8016b3c:	fb0c 2413 	mls	r4, ip, r3, r2
 8016b40:	fb14 f406 	smulbb	r4, r4, r6
 8016b44:	441d      	add	r5, r3
 8016b46:	3d01      	subs	r5, #1
 8016b48:	4404      	add	r4, r0
 8016b4a:	fb95 f5f3 	sdiv	r5, r5, r3
 8016b4e:	b2a4      	uxth	r4, r4
 8016b50:	b121      	cbz	r1, 8016b5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8016b52:	9b03      	ldr	r3, [sp, #12]
 8016b54:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016b58:	ba1b      	rev	r3, r3
 8016b5a:	441f      	add	r7, r3
 8016b5c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016b60:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016b64:	4418      	add	r0, r3
 8016b66:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016b6a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016b6e:	441a      	add	r2, r3
 8016b70:	4b76      	ldr	r3, [pc, #472]	@ (8016d4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016b72:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8016b76:	6818      	ldr	r0, [r3, #0]
 8016b78:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016b7c:	6803      	ldr	r3, [r0, #0]
 8016b7e:	b2ad      	uxth	r5, r5
 8016b80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016b82:	4798      	blx	r3
 8016b84:	4a72      	ldr	r2, [pc, #456]	@ (8016d50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x278>)
 8016b86:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8016b8a:	8813      	ldrh	r3, [r2, #0]
 8016b8c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016b90:	00ad      	lsls	r5, r5, #2
 8016b92:	fb03 c101 	mla	r1, r3, r1, ip
 8016b96:	4373      	muls	r3, r6
 8016b98:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016b9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016ba0:	2c00      	cmp	r4, #0
 8016ba2:	9304      	str	r3, [sp, #16]
 8016ba4:	f105 0304 	add.w	r3, r5, #4
 8016ba8:	9305      	str	r3, [sp, #20]
 8016baa:	bf0c      	ite	eq
 8016bac:	46c8      	moveq	r8, r9
 8016bae:	f04f 0800 	movne.w	r8, #0
 8016bb2:	2300      	movs	r3, #0
 8016bb4:	fa1f f888 	uxth.w	r8, r8
 8016bb8:	9301      	str	r3, [sp, #4]
 8016bba:	9209      	str	r2, [sp, #36]	@ 0x24
 8016bbc:	9a04      	ldr	r2, [sp, #16]
 8016bbe:	4282      	cmp	r2, r0
 8016bc0:	f240 80bc 	bls.w	8016d3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x264>
 8016bc4:	b95b      	cbnz	r3, 8016bde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x106>
 8016bc6:	783a      	ldrb	r2, [r7, #0]
 8016bc8:	0993      	lsrs	r3, r2, #6
 8016bca:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016bce:	9201      	str	r2, [sp, #4]
 8016bd0:	1e5a      	subs	r2, r3, #1
 8016bd2:	2a02      	cmp	r2, #2
 8016bd4:	bf8d      	iteet	hi
 8016bd6:	787b      	ldrbhi	r3, [r7, #1]
 8016bd8:	3701      	addls	r7, #1
 8016bda:	b29b      	uxthls	r3, r3
 8016bdc:	3702      	addhi	r7, #2
 8016bde:	b184      	cbz	r4, 8016c02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12a>
 8016be0:	429c      	cmp	r4, r3
 8016be2:	bf99      	ittee	ls
 8016be4:	1b1c      	subls	r4, r3, r4
 8016be6:	fa1f fa84 	uxthls.w	sl, r4
 8016bea:	46c4      	movhi	ip, r8
 8016bec:	f04f 0a00 	movhi.w	sl, #0
 8016bf0:	bf93      	iteet	ls
 8016bf2:	2400      	movls	r4, #0
 8016bf4:	1ae4      	subhi	r4, r4, r3
 8016bf6:	b2a4      	uxthhi	r4, r4
 8016bf8:	fa1f fc89 	uxthls.w	ip, r9
 8016bfc:	4653      	mov	r3, sl
 8016bfe:	46e0      	mov	r8, ip
 8016c00:	e7dc      	b.n	8016bbc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe4>
 8016c02:	2204      	movs	r2, #4
 8016c04:	4615      	mov	r5, r2
 8016c06:	4543      	cmp	r3, r8
 8016c08:	bf2c      	ite	cs
 8016c0a:	46c6      	movcs	lr, r8
 8016c0c:	469e      	movcc	lr, r3
 8016c0e:	9905      	ldr	r1, [sp, #20]
 8016c10:	9a01      	ldr	r2, [sp, #4]
 8016c12:	bf28      	it	cs
 8016c14:	eba3 0a08 	subcs.w	sl, r3, r8
 8016c18:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016c1c:	9903      	ldr	r1, [sp, #12]
 8016c1e:	bf38      	it	cc
 8016c20:	eba8 0c03 	subcc.w	ip, r8, r3
 8016c24:	588a      	ldr	r2, [r1, r2]
 8016c26:	bf28      	it	cs
 8016c28:	fa1f fa8a 	uxthcs.w	sl, sl
 8016c2c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016c30:	bf2e      	itee	cs
 8016c32:	46a4      	movcs	ip, r4
 8016c34:	fa1f fc8c 	uxthcc.w	ip, ip
 8016c38:	46a2      	movcc	sl, r4
 8016c3a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8016c3e:	2900      	cmp	r1, #0
 8016c40:	d066      	beq.n	8016d10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8016c42:	29ff      	cmp	r1, #255	@ 0xff
 8016c44:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016c48:	d114      	bne.n	8016c74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x19c>
 8016c4a:	9d02      	ldr	r5, [sp, #8]
 8016c4c:	2dff      	cmp	r5, #255	@ 0xff
 8016c4e:	d111      	bne.n	8016c74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x19c>
 8016c50:	0951      	lsrs	r1, r2, #5
 8016c52:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016c56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016c5a:	f026 0607 	bic.w	r6, r6, #7
 8016c5e:	430e      	orrs	r6, r1
 8016c60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016c64:	4316      	orrs	r6, r2
 8016c66:	b2b6      	uxth	r6, r6
 8016c68:	4486      	add	lr, r0
 8016c6a:	4586      	cmp	lr, r0
 8016c6c:	d051      	beq.n	8016d12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23a>
 8016c6e:	f820 6b02 	strh.w	r6, [r0], #2
 8016c72:	e7fa      	b.n	8016c6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x192>
 8016c74:	9d02      	ldr	r5, [sp, #8]
 8016c76:	b2f6      	uxtb	r6, r6
 8016c78:	4369      	muls	r1, r5
 8016c7a:	1c4d      	adds	r5, r1, #1
 8016c7c:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8016c80:	122d      	asrs	r5, r5, #8
 8016c82:	ea6f 0b05 	mvn.w	fp, r5
 8016c86:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016c8a:	b2ad      	uxth	r5, r5
 8016c8c:	b2d2      	uxtb	r2, r2
 8016c8e:	fb11 f105 	smulbb	r1, r1, r5
 8016c92:	fb16 f605 	smulbb	r6, r6, r5
 8016c96:	fb12 f205 	smulbb	r2, r2, r5
 8016c9a:	b289      	uxth	r1, r1
 8016c9c:	b2b6      	uxth	r6, r6
 8016c9e:	b292      	uxth	r2, r2
 8016ca0:	9106      	str	r1, [sp, #24]
 8016ca2:	9607      	str	r6, [sp, #28]
 8016ca4:	9208      	str	r2, [sp, #32]
 8016ca6:	4486      	add	lr, r0
 8016ca8:	fa5f fb8b 	uxtb.w	fp, fp
 8016cac:	4586      	cmp	lr, r0
 8016cae:	d030      	beq.n	8016d12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23a>
 8016cb0:	8802      	ldrh	r2, [r0, #0]
 8016cb2:	9906      	ldr	r1, [sp, #24]
 8016cb4:	1216      	asrs	r6, r2, #8
 8016cb6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016cba:	10d5      	asrs	r5, r2, #3
 8016cbc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016cc0:	fb06 160b 	mla	r6, r6, fp, r1
 8016cc4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016cc8:	9907      	ldr	r1, [sp, #28]
 8016cca:	00d2      	lsls	r2, r2, #3
 8016ccc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016cd0:	fb05 150b 	mla	r5, r5, fp, r1
 8016cd4:	b2d2      	uxtb	r2, r2
 8016cd6:	9908      	ldr	r1, [sp, #32]
 8016cd8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016cdc:	fb02 120b 	mla	r2, r2, fp, r1
 8016ce0:	b2b6      	uxth	r6, r6
 8016ce2:	b292      	uxth	r2, r2
 8016ce4:	1c71      	adds	r1, r6, #1
 8016ce6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016cea:	1c51      	adds	r1, r2, #1
 8016cec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016cf0:	b2ad      	uxth	r5, r5
 8016cf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016cf6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016cfa:	4316      	orrs	r6, r2
 8016cfc:	1c6a      	adds	r2, r5, #1
 8016cfe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016d02:	096d      	lsrs	r5, r5, #5
 8016d04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016d08:	432e      	orrs	r6, r5
 8016d0a:	f820 6b02 	strh.w	r6, [r0], #2
 8016d0e:	e7cd      	b.n	8016cac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d4>
 8016d10:	4470      	add	r0, lr
 8016d12:	4543      	cmp	r3, r8
 8016d14:	f4ff af72 	bcc.w	8016bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x124>
 8016d18:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016d1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016d1e:	fa1f fc89 	uxth.w	ip, r9
 8016d22:	eba4 040c 	sub.w	r4, r4, ip
 8016d26:	881b      	ldrh	r3, [r3, #0]
 8016d28:	b2a4      	uxth	r4, r4
 8016d2a:	2c00      	cmp	r4, #0
 8016d2c:	eba3 0309 	sub.w	r3, r3, r9
 8016d30:	bf18      	it	ne
 8016d32:	f04f 0c00 	movne.w	ip, #0
 8016d36:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016d3a:	e75f      	b.n	8016bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x124>
 8016d3c:	4b03      	ldr	r3, [pc, #12]	@ (8016d4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016d3e:	6818      	ldr	r0, [r3, #0]
 8016d40:	6803      	ldr	r3, [r0, #0]
 8016d42:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016d44:	4798      	blx	r3
 8016d46:	b00f      	add	sp, #60	@ 0x3c
 8016d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d4c:	20002230 	.word	0x20002230
 8016d50:	2000222a 	.word	0x2000222a

08016d54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d58:	b093      	sub	sp, #76	@ 0x4c
 8016d5a:	9205      	str	r2, [sp, #20]
 8016d5c:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8016d60:	461c      	mov	r4, r3
 8016d62:	9101      	str	r1, [sp, #4]
 8016d64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016d66:	9202      	str	r2, [sp, #8]
 8016d68:	2a00      	cmp	r2, #0
 8016d6a:	f000 812d 	beq.w	8016fc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8016d6e:	6820      	ldr	r0, [r4, #0]
 8016d70:	6861      	ldr	r1, [r4, #4]
 8016d72:	aa0e      	add	r2, sp, #56	@ 0x38
 8016d74:	c203      	stmia	r2!, {r0, r1}
 8016d76:	6818      	ldr	r0, [r3, #0]
 8016d78:	6859      	ldr	r1, [r3, #4]
 8016d7a:	aa10      	add	r2, sp, #64	@ 0x40
 8016d7c:	c203      	stmia	r2!, {r0, r1}
 8016d7e:	a80e      	add	r0, sp, #56	@ 0x38
 8016d80:	f7f8 fb16 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016d84:	4621      	mov	r1, r4
 8016d86:	a810      	add	r0, sp, #64	@ 0x40
 8016d88:	f7f8 fb3a 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016d8c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8016d90:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8016d94:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8016d98:	bfdd      	ittte	le
 8016d9a:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016d9e:	b2b3      	uxthle	r3, r6
 8016da0:	fb92 f3f3 	sdivle	r3, r2, r3
 8016da4:	2301      	movgt	r3, #1
 8016da6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016daa:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8016dae:	fb92 f1f3 	sdiv	r1, r2, r3
 8016db2:	fa1f fc81 	uxth.w	ip, r1
 8016db6:	4661      	mov	r1, ip
 8016db8:	fb0c 2413 	mls	r4, ip, r3, r2
 8016dbc:	fb14 f406 	smulbb	r4, r4, r6
 8016dc0:	441d      	add	r5, r3
 8016dc2:	3d01      	subs	r5, #1
 8016dc4:	4404      	add	r4, r0
 8016dc6:	fb95 f5f3 	sdiv	r5, r5, r3
 8016dca:	b2a4      	uxth	r4, r4
 8016dcc:	b131      	cbz	r1, 8016ddc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 8016dce:	9b05      	ldr	r3, [sp, #20]
 8016dd0:	9901      	ldr	r1, [sp, #4]
 8016dd2:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016dd6:	ba1b      	rev	r3, r3
 8016dd8:	4419      	add	r1, r3
 8016dda:	9101      	str	r1, [sp, #4]
 8016ddc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016de0:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016de4:	4418      	add	r0, r3
 8016de6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016dea:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016dee:	441a      	add	r2, r3
 8016df0:	4b77      	ldr	r3, [pc, #476]	@ (8016fd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016df2:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016df6:	6818      	ldr	r0, [r3, #0]
 8016df8:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016dfc:	6803      	ldr	r3, [r0, #0]
 8016dfe:	b2ad      	uxth	r5, r5
 8016e00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016e02:	4798      	blx	r3
 8016e04:	4973      	ldr	r1, [pc, #460]	@ (8016fd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016e06:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016e0a:	880b      	ldrh	r3, [r1, #0]
 8016e0c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016e10:	00ad      	lsls	r5, r5, #2
 8016e12:	fb03 c202 	mla	r2, r3, r2, ip
 8016e16:	4373      	muls	r3, r6
 8016e18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016e1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016e20:	9308      	str	r3, [sp, #32]
 8016e22:	1d2b      	adds	r3, r5, #4
 8016e24:	9309      	str	r3, [sp, #36]	@ 0x24
 8016e26:	9b02      	ldr	r3, [sp, #8]
 8016e28:	2c00      	cmp	r4, #0
 8016e2a:	ea6f 0203 	mvn.w	r2, r3
 8016e2e:	bf0c      	ite	eq
 8016e30:	46dc      	moveq	ip, fp
 8016e32:	f04f 0c00 	movne.w	ip, #0
 8016e36:	2300      	movs	r3, #0
 8016e38:	910d      	str	r1, [sp, #52]	@ 0x34
 8016e3a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016e3e:	b2d2      	uxtb	r2, r2
 8016e40:	fa1f fc8c 	uxth.w	ip, ip
 8016e44:	9303      	str	r3, [sp, #12]
 8016e46:	9106      	str	r1, [sp, #24]
 8016e48:	9207      	str	r2, [sp, #28]
 8016e4a:	9a08      	ldr	r2, [sp, #32]
 8016e4c:	4282      	cmp	r2, r0
 8016e4e:	f240 80b6 	bls.w	8016fbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016e52:	b963      	cbnz	r3, 8016e6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016e54:	9b01      	ldr	r3, [sp, #4]
 8016e56:	781a      	ldrb	r2, [r3, #0]
 8016e58:	0993      	lsrs	r3, r2, #6
 8016e5a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016e5e:	9203      	str	r2, [sp, #12]
 8016e60:	1e5a      	subs	r2, r3, #1
 8016e62:	2a02      	cmp	r2, #2
 8016e64:	d815      	bhi.n	8016e92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016e66:	9a01      	ldr	r2, [sp, #4]
 8016e68:	b29b      	uxth	r3, r3
 8016e6a:	3201      	adds	r2, #1
 8016e6c:	9201      	str	r2, [sp, #4]
 8016e6e:	b1b4      	cbz	r4, 8016e9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8016e70:	429c      	cmp	r4, r3
 8016e72:	bf99      	ittee	ls
 8016e74:	1b1c      	subls	r4, r3, r4
 8016e76:	fa1f f884 	uxthls.w	r8, r4
 8016e7a:	4666      	movhi	r6, ip
 8016e7c:	f04f 0800 	movhi.w	r8, #0
 8016e80:	bf93      	iteet	ls
 8016e82:	2400      	movls	r4, #0
 8016e84:	1ae4      	subhi	r4, r4, r3
 8016e86:	b2a4      	uxthhi	r4, r4
 8016e88:	fa1f f68b 	uxthls.w	r6, fp
 8016e8c:	4643      	mov	r3, r8
 8016e8e:	46b4      	mov	ip, r6
 8016e90:	e7db      	b.n	8016e4a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8016e92:	9a01      	ldr	r2, [sp, #4]
 8016e94:	9b01      	ldr	r3, [sp, #4]
 8016e96:	3202      	adds	r2, #2
 8016e98:	785b      	ldrb	r3, [r3, #1]
 8016e9a:	9201      	str	r2, [sp, #4]
 8016e9c:	e7e7      	b.n	8016e6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016e9e:	2203      	movs	r2, #3
 8016ea0:	4615      	mov	r5, r2
 8016ea2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016ea4:	9a03      	ldr	r2, [sp, #12]
 8016ea6:	4563      	cmp	r3, ip
 8016ea8:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016eac:	9905      	ldr	r1, [sp, #20]
 8016eae:	bf28      	it	cs
 8016eb0:	eba3 080c 	subcs.w	r8, r3, ip
 8016eb4:	eb01 0502 	add.w	r5, r1, r2
 8016eb8:	9902      	ldr	r1, [sp, #8]
 8016eba:	bf31      	iteee	cc
 8016ebc:	ebac 0603 	subcc.w	r6, ip, r3
 8016ec0:	fa1f f888 	uxthcs.w	r8, r8
 8016ec4:	46e1      	movcs	r9, ip
 8016ec6:	4626      	movcs	r6, r4
 8016ec8:	bf3e      	ittt	cc
 8016eca:	b2b6      	uxthcc	r6, r6
 8016ecc:	4699      	movcc	r9, r3
 8016ece:	46a0      	movcc	r8, r4
 8016ed0:	29ff      	cmp	r1, #255	@ 0xff
 8016ed2:	d04a      	beq.n	8016f6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x216>
 8016ed4:	46ca      	mov	sl, r9
 8016ed6:	9f06      	ldr	r7, [sp, #24]
 8016ed8:	78a9      	ldrb	r1, [r5, #2]
 8016eda:	9004      	str	r0, [sp, #16]
 8016edc:	4379      	muls	r1, r7
 8016ede:	910a      	str	r1, [sp, #40]	@ 0x28
 8016ee0:	7869      	ldrb	r1, [r5, #1]
 8016ee2:	4379      	muls	r1, r7
 8016ee4:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016ee6:	9905      	ldr	r1, [sp, #20]
 8016ee8:	5c8a      	ldrb	r2, [r1, r2]
 8016eea:	437a      	muls	r2, r7
 8016eec:	920c      	str	r2, [sp, #48]	@ 0x30
 8016eee:	f1ba 0f00 	cmp.w	sl, #0
 8016ef2:	d03d      	beq.n	8016f70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8016ef4:	9f07      	ldr	r7, [sp, #28]
 8016ef6:	9a04      	ldr	r2, [sp, #16]
 8016ef8:	46be      	mov	lr, r7
 8016efa:	8812      	ldrh	r2, [r2, #0]
 8016efc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016efe:	1215      	asrs	r5, r2, #8
 8016f00:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016f04:	10d1      	asrs	r1, r2, #3
 8016f06:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016f0a:	fb05 750e 	mla	r5, r5, lr, r7
 8016f0e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016f12:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8016f14:	00d2      	lsls	r2, r2, #3
 8016f16:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016f1a:	fb01 710e 	mla	r1, r1, lr, r7
 8016f1e:	b2d2      	uxtb	r2, r2
 8016f20:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016f22:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016f26:	fb02 720e 	mla	r2, r2, lr, r7
 8016f2a:	b2ad      	uxth	r5, r5
 8016f2c:	b292      	uxth	r2, r2
 8016f2e:	f105 0e01 	add.w	lr, r5, #1
 8016f32:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016f36:	f102 0e01 	add.w	lr, r2, #1
 8016f3a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016f3e:	b289      	uxth	r1, r1
 8016f40:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016f44:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016f48:	4315      	orrs	r5, r2
 8016f4a:	1c4a      	adds	r2, r1, #1
 8016f4c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016f50:	0949      	lsrs	r1, r1, #5
 8016f52:	9a04      	ldr	r2, [sp, #16]
 8016f54:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016f58:	430d      	orrs	r5, r1
 8016f5a:	f822 5b02 	strh.w	r5, [r2], #2
 8016f5e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016f62:	9204      	str	r2, [sp, #16]
 8016f64:	fa1f fa8a 	uxth.w	sl, sl
 8016f68:	e7c1      	b.n	8016eee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 8016f6a:	4649      	mov	r1, r9
 8016f6c:	4686      	mov	lr, r0
 8016f6e:	b999      	cbnz	r1, 8016f98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x244>
 8016f70:	4563      	cmp	r3, ip
 8016f72:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016f76:	d389      	bcc.n	8016e8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016f78:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016f7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016f7e:	fa1f f68b 	uxth.w	r6, fp
 8016f82:	1ba4      	subs	r4, r4, r6
 8016f84:	881b      	ldrh	r3, [r3, #0]
 8016f86:	b2a4      	uxth	r4, r4
 8016f88:	2c00      	cmp	r4, #0
 8016f8a:	eba3 030b 	sub.w	r3, r3, fp
 8016f8e:	bf18      	it	ne
 8016f90:	2600      	movne	r6, #0
 8016f92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016f96:	e779      	b.n	8016e8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016f98:	78aa      	ldrb	r2, [r5, #2]
 8016f9a:	4f0f      	ldr	r7, [pc, #60]	@ (8016fd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8016f9c:	3901      	subs	r1, #1
 8016f9e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016fa2:	786a      	ldrb	r2, [r5, #1]
 8016fa4:	b289      	uxth	r1, r1
 8016fa6:	00d2      	lsls	r2, r2, #3
 8016fa8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016fac:	ea4a 0202 	orr.w	r2, sl, r2
 8016fb0:	f895 a000 	ldrb.w	sl, [r5]
 8016fb4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016fb8:	f82e 2b02 	strh.w	r2, [lr], #2
 8016fbc:	e7d7      	b.n	8016f6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8016fbe:	4b04      	ldr	r3, [pc, #16]	@ (8016fd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016fc0:	6818      	ldr	r0, [r3, #0]
 8016fc2:	6803      	ldr	r3, [r0, #0]
 8016fc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016fc6:	4798      	blx	r3
 8016fc8:	b013      	add	sp, #76	@ 0x4c
 8016fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fce:	bf00      	nop
 8016fd0:	20002230 	.word	0x20002230
 8016fd4:	2000222a 	.word	0x2000222a
 8016fd8:	fffff800 	.word	0xfffff800

08016fdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fe0:	b09d      	sub	sp, #116	@ 0x74
 8016fe2:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8016fe6:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016fea:	461c      	mov	r4, r3
 8016fec:	4683      	mov	fp, r0
 8016fee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016ff0:	920e      	str	r2, [sp, #56]	@ 0x38
 8016ff2:	2a00      	cmp	r2, #0
 8016ff4:	f000 81e1 	beq.w	80173ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3de>
 8016ff8:	6820      	ldr	r0, [r4, #0]
 8016ffa:	6861      	ldr	r1, [r4, #4]
 8016ffc:	aa18      	add	r2, sp, #96	@ 0x60
 8016ffe:	c203      	stmia	r2!, {r0, r1}
 8017000:	6818      	ldr	r0, [r3, #0]
 8017002:	6859      	ldr	r1, [r3, #4]
 8017004:	aa1a      	add	r2, sp, #104	@ 0x68
 8017006:	c203      	stmia	r2!, {r0, r1}
 8017008:	a818      	add	r0, sp, #96	@ 0x60
 801700a:	f7f8 f9d1 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801700e:	4621      	mov	r1, r4
 8017010:	a81a      	add	r0, sp, #104	@ 0x68
 8017012:	f7f8 f9f5 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017016:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801701a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801701e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017022:	bfdd      	ittte	le
 8017024:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017028:	b29a      	uxthle	r2, r3
 801702a:	fb91 f2f2 	sdivle	r2, r1, r2
 801702e:	2201      	movgt	r2, #1
 8017030:	9202      	str	r2, [sp, #8]
 8017032:	9802      	ldr	r0, [sp, #8]
 8017034:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8017038:	9902      	ldr	r1, [sp, #8]
 801703a:	fb92 f0f0 	sdiv	r0, r2, r0
 801703e:	b280      	uxth	r0, r0
 8017040:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017042:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8017044:	9802      	ldr	r0, [sp, #8]
 8017046:	440c      	add	r4, r1
 8017048:	fb05 2510 	mls	r5, r5, r0, r2
 801704c:	fb15 f503 	smulbb	r5, r5, r3
 8017050:	3c01      	subs	r4, #1
 8017052:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8017056:	fb94 f4f1 	sdiv	r4, r4, r1
 801705a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801705e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017062:	440d      	add	r5, r1
 8017064:	4419      	add	r1, r3
 8017066:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801706a:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801706e:	441a      	add	r2, r3
 8017070:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017074:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8017078:	9306      	str	r3, [sp, #24]
 801707a:	4bb3      	ldr	r3, [pc, #716]	@ (8017348 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801707c:	3401      	adds	r4, #1
 801707e:	6818      	ldr	r0, [r3, #0]
 8017080:	b2a4      	uxth	r4, r4
 8017082:	6803      	ldr	r3, [r0, #0]
 8017084:	00a4      	lsls	r4, r4, #2
 8017086:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017088:	4798      	blx	r3
 801708a:	4bb0      	ldr	r3, [pc, #704]	@ (801734c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801708c:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8017090:	881a      	ldrh	r2, [r3, #0]
 8017092:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8017096:	4356      	muls	r6, r2
 8017098:	fb02 7101 	mla	r1, r2, r1, r7
 801709c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80170a0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 80170a4:	920a      	str	r2, [sp, #40]	@ 0x28
 80170a6:	1d22      	adds	r2, r4, #4
 80170a8:	b2ad      	uxth	r5, r5
 80170aa:	9213      	str	r2, [sp, #76]	@ 0x4c
 80170ac:	9a06      	ldr	r2, [sp, #24]
 80170ae:	2d00      	cmp	r5, #0
 80170b0:	bf0c      	ite	eq
 80170b2:	4611      	moveq	r1, r2
 80170b4:	2100      	movne	r1, #0
 80170b6:	2200      	movs	r2, #0
 80170b8:	9316      	str	r3, [sp, #88]	@ 0x58
 80170ba:	4ba5      	ldr	r3, [pc, #660]	@ (8017350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 80170bc:	b289      	uxth	r1, r1
 80170be:	eba3 030b 	sub.w	r3, r3, fp
 80170c2:	920d      	str	r2, [sp, #52]	@ 0x34
 80170c4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80170c6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80170c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80170ca:	fa12 f383 	uxtah	r3, r2, r3
 80170ce:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80170d0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80170d4:	3304      	adds	r3, #4
 80170d6:	9308      	str	r3, [sp, #32]
 80170d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80170da:	4543      	cmp	r3, r8
 80170dc:	f240 8168 	bls.w	80173b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d4>
 80170e0:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80170e4:	9a02      	ldr	r2, [sp, #8]
 80170e6:	fbb5 f3f3 	udiv	r3, r5, r3
 80170ea:	1ad3      	subs	r3, r2, r3
 80170ec:	b29b      	uxth	r3, r3
 80170ee:	9314      	str	r3, [sp, #80]	@ 0x50
 80170f0:	9b08      	ldr	r3, [sp, #32]
 80170f2:	9808      	ldr	r0, [sp, #32]
 80170f4:	785a      	ldrb	r2, [r3, #1]
 80170f6:	789b      	ldrb	r3, [r3, #2]
 80170f8:	7800      	ldrb	r0, [r0, #0]
 80170fa:	021b      	lsls	r3, r3, #8
 80170fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017100:	9a08      	ldr	r2, [sp, #32]
 8017102:	9010      	str	r0, [sp, #64]	@ 0x40
 8017104:	78d2      	ldrb	r2, [r2, #3]
 8017106:	3001      	adds	r0, #1
 8017108:	4313      	orrs	r3, r2
 801710a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801710c:	9007      	str	r0, [sp, #28]
 801710e:	441a      	add	r2, r3
 8017110:	1c50      	adds	r0, r2, #1
 8017112:	9005      	str	r0, [sp, #20]
 8017114:	7852      	ldrb	r2, [r2, #1]
 8017116:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017118:	0212      	lsls	r2, r2, #8
 801711a:	5cc3      	ldrb	r3, [r0, r3]
 801711c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017120:	431a      	orrs	r2, r3
 8017122:	b293      	uxth	r3, r2
 8017124:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017126:	2300      	movs	r3, #0
 8017128:	9309      	str	r3, [sp, #36]	@ 0x24
 801712a:	2301      	movs	r3, #1
 801712c:	9301      	str	r3, [sp, #4]
 801712e:	9304      	str	r3, [sp, #16]
 8017130:	2300      	movs	r3, #0
 8017132:	f04f 0e01 	mov.w	lr, #1
 8017136:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801713a:	9303      	str	r3, [sp, #12]
 801713c:	2d00      	cmp	r5, #0
 801713e:	d07c      	beq.n	801723a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017140:	45ae      	cmp	lr, r5
 8017142:	d26b      	bcs.n	801721c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017144:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017146:	eba5 050e 	sub.w	r5, r5, lr
 801714a:	4543      	cmp	r3, r8
 801714c:	b2ad      	uxth	r5, r5
 801714e:	460c      	mov	r4, r1
 8017150:	d802      	bhi.n	8017158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8017152:	e070      	b.n	8017236 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017154:	2b00      	cmp	r3, #0
 8017156:	d15c      	bne.n	8017212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017158:	9b05      	ldr	r3, [sp, #20]
 801715a:	9a04      	ldr	r2, [sp, #16]
 801715c:	785b      	ldrb	r3, [r3, #1]
 801715e:	f1c2 0207 	rsb	r2, r2, #7
 8017162:	4093      	lsls	r3, r2
 8017164:	005b      	lsls	r3, r3, #1
 8017166:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801716a:	9b05      	ldr	r3, [sp, #20]
 801716c:	9904      	ldr	r1, [sp, #16]
 801716e:	781b      	ldrb	r3, [r3, #0]
 8017170:	410b      	asrs	r3, r1
 8017172:	3101      	adds	r1, #1
 8017174:	b2c9      	uxtb	r1, r1
 8017176:	2908      	cmp	r1, #8
 8017178:	9104      	str	r1, [sp, #16]
 801717a:	9905      	ldr	r1, [sp, #20]
 801717c:	b2db      	uxtb	r3, r3
 801717e:	bf03      	ittte	eq
 8017180:	3102      	addeq	r1, #2
 8017182:	9105      	streq	r1, [sp, #20]
 8017184:	2100      	moveq	r1, #0
 8017186:	3101      	addne	r1, #1
 8017188:	bf14      	ite	ne
 801718a:	9105      	strne	r1, [sp, #20]
 801718c:	9104      	streq	r1, [sp, #16]
 801718e:	4313      	orrs	r3, r2
 8017190:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017192:	b29a      	uxth	r2, r3
 8017194:	4291      	cmp	r1, r2
 8017196:	d30a      	bcc.n	80171ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017198:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801719c:	2301      	movs	r3, #1
 801719e:	9907      	ldr	r1, [sp, #28]
 80171a0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80171a4:	d30f      	bcc.n	80171c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 80171a6:	2100      	movs	r1, #0
 80171a8:	9301      	str	r3, [sp, #4]
 80171aa:	9103      	str	r1, [sp, #12]
 80171ac:	e032      	b.n	8017214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 80171ae:	9b07      	ldr	r3, [sp, #28]
 80171b0:	429a      	cmp	r2, r3
 80171b2:	d318      	bcc.n	80171e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 80171b4:	9b01      	ldr	r3, [sp, #4]
 80171b6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80171ba:	445b      	add	r3, fp
 80171bc:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80171c0:	9b01      	ldr	r3, [sp, #4]
 80171c2:	3301      	adds	r3, #1
 80171c4:	b29b      	uxth	r3, r3
 80171c6:	9907      	ldr	r1, [sp, #28]
 80171c8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 80171cc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80171d0:	7108      	strb	r0, [r1, #4]
 80171d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80171d4:	80c8      	strh	r0, [r1, #6]
 80171d6:	9801      	ldr	r0, [sp, #4]
 80171d8:	3001      	adds	r0, #1
 80171da:	7148      	strb	r0, [r1, #5]
 80171dc:	9907      	ldr	r1, [sp, #28]
 80171de:	3101      	adds	r1, #1
 80171e0:	b289      	uxth	r1, r1
 80171e2:	9107      	str	r1, [sp, #28]
 80171e4:	e7df      	b.n	80171a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80171e6:	4611      	mov	r1, r2
 80171e8:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80171ec:	795b      	ldrb	r3, [r3, #5]
 80171ee:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80171f2:	4458      	add	r0, fp
 80171f4:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80171f6:	4406      	add	r6, r0
 80171f8:	2e00      	cmp	r6, #0
 80171fa:	dd06      	ble.n	801720a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80171fc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017200:	790e      	ldrb	r6, [r1, #4]
 8017202:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017206:	88c9      	ldrh	r1, [r1, #6]
 8017208:	e7f4      	b.n	80171f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801720a:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801720e:	b29b      	uxth	r3, r3
 8017210:	e7c5      	b.n	801719e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8017212:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017214:	4621      	mov	r1, r4
 8017216:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017218:	469e      	mov	lr, r3
 801721a:	e78f      	b.n	801713c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801721c:	9a03      	ldr	r2, [sp, #12]
 801721e:	ebae 0305 	sub.w	r3, lr, r5
 8017222:	442a      	add	r2, r5
 8017224:	b292      	uxth	r2, r2
 8017226:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801722a:	b29b      	uxth	r3, r3
 801722c:	9203      	str	r2, [sp, #12]
 801722e:	2500      	movs	r5, #0
 8017230:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017232:	4542      	cmp	r2, r8
 8017234:	d88e      	bhi.n	8017154 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017236:	4621      	mov	r1, r4
 8017238:	e74e      	b.n	80170d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801723a:	458e      	cmp	lr, r1
 801723c:	bf2c      	ite	cs
 801723e:	462c      	movcs	r4, r5
 8017240:	462b      	movcc	r3, r5
 8017242:	f04f 0900 	mov.w	r9, #0
 8017246:	bf29      	itett	cs
 8017248:	ebae 0301 	subcs.w	r3, lr, r1
 801724c:	eba1 040e 	subcc.w	r4, r1, lr
 8017250:	b29b      	uxthcs	r3, r3
 8017252:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017254:	bf3c      	itt	cc
 8017256:	b2a4      	uxthcc	r4, r4
 8017258:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801725c:	9a03      	ldr	r2, [sp, #12]
 801725e:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017260:	444a      	add	r2, r9
 8017262:	4548      	cmp	r0, r9
 8017264:	b292      	uxth	r2, r2
 8017266:	d075      	beq.n	8017354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>
 8017268:	2004      	movs	r0, #4
 801726a:	4605      	mov	r5, r0
 801726c:	445a      	add	r2, fp
 801726e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017270:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017274:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017278:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801727a:	5880      	ldr	r0, [r0, r2]
 801727c:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017280:	d014      	beq.n	80172ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d0>
 8017282:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017286:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801728a:	d112      	bne.n	80172b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801728c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801728e:	2aff      	cmp	r2, #255	@ 0xff
 8017290:	d10f      	bne.n	80172b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017292:	0942      	lsrs	r2, r0, #5
 8017294:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017298:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801729c:	f025 0507 	bic.w	r5, r5, #7
 80172a0:	4315      	orrs	r5, r2
 80172a2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80172a6:	4305      	orrs	r5, r0
 80172a8:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 80172ac:	f109 0901 	add.w	r9, r9, #1
 80172b0:	e7d4      	b.n	801725c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x280>
 80172b2:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 80172b6:	b2ed      	uxtb	r5, r5
 80172b8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80172bc:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80172c0:	9215      	str	r2, [sp, #84]	@ 0x54
 80172c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80172c4:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80172c8:	fb02 fa0a 	mul.w	sl, r2, sl
 80172cc:	f10a 0201 	add.w	r2, sl, #1
 80172d0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80172d4:	1212      	asrs	r2, r2, #8
 80172d6:	fa1f fa82 	uxth.w	sl, r2
 80172da:	43d2      	mvns	r2, r2
 80172dc:	b2c0      	uxtb	r0, r0
 80172de:	fb16 f60a 	smulbb	r6, r6, sl
 80172e2:	fb10 f00a 	smulbb	r0, r0, sl
 80172e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80172ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80172ee:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80172f2:	fa5f fc8c 	uxtb.w	ip, ip
 80172f6:	b2d2      	uxtb	r2, r2
 80172f8:	fb15 f50a 	smulbb	r5, r5, sl
 80172fc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017300:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017304:	fb07 6702 	mla	r7, r7, r2, r6
 8017308:	fb0c 0002 	mla	r0, ip, r2, r0
 801730c:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801730e:	b2bf      	uxth	r7, r7
 8017310:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017314:	fb06 5602 	mla	r6, r6, r2, r5
 8017318:	b280      	uxth	r0, r0
 801731a:	1c7a      	adds	r2, r7, #1
 801731c:	1c45      	adds	r5, r0, #1
 801731e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017322:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017326:	b2b6      	uxth	r6, r6
 8017328:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801732c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017330:	432f      	orrs	r7, r5
 8017332:	1c75      	adds	r5, r6, #1
 8017334:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017338:	096d      	lsrs	r5, r5, #5
 801733a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801733e:	432f      	orrs	r7, r5
 8017340:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017344:	e7b2      	b.n	80172ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d0>
 8017346:	bf00      	nop
 8017348:	20002230 	.word	0x20002230
 801734c:	2000222a 	.word	0x2000222a
 8017350:	fffff7fb 	.word	0xfffff7fb
 8017354:	9203      	str	r2, [sp, #12]
 8017356:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017358:	458e      	cmp	lr, r1
 801735a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801735e:	f4ff af66 	bcc.w	801722e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017362:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017364:	9906      	ldr	r1, [sp, #24]
 8017366:	8812      	ldrh	r2, [r2, #0]
 8017368:	1a52      	subs	r2, r2, r1
 801736a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801736e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017370:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017372:	3201      	adds	r2, #1
 8017374:	428a      	cmp	r2, r1
 8017376:	9209      	str	r2, [sp, #36]	@ 0x24
 8017378:	d110      	bne.n	801739c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c0>
 801737a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801737e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8017382:	9b06      	ldr	r3, [sp, #24]
 8017384:	eba5 0509 	sub.w	r5, r5, r9
 8017388:	b2ad      	uxth	r5, r5
 801738a:	2d00      	cmp	r5, #0
 801738c:	bf0c      	ite	eq
 801738e:	4619      	moveq	r1, r3
 8017390:	2100      	movne	r1, #0
 8017392:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017394:	b289      	uxth	r1, r1
 8017396:	3301      	adds	r3, #1
 8017398:	930d      	str	r3, [sp, #52]	@ 0x34
 801739a:	e694      	b.n	80170c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801739c:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80173a0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80173a4:	1b2d      	subs	r5, r5, r4
 80173a6:	b2ad      	uxth	r5, r5
 80173a8:	2d00      	cmp	r5, #0
 80173aa:	bf18      	it	ne
 80173ac:	2400      	movne	r4, #0
 80173ae:	e73f      	b.n	8017230 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 80173b0:	4b03      	ldr	r3, [pc, #12]	@ (80173c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 80173b2:	6818      	ldr	r0, [r3, #0]
 80173b4:	6803      	ldr	r3, [r0, #0]
 80173b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80173b8:	4798      	blx	r3
 80173ba:	b01d      	add	sp, #116	@ 0x74
 80173bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c0:	20002230 	.word	0x20002230

080173c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80173c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173c8:	b09f      	sub	sp, #124	@ 0x7c
 80173ca:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80173ce:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80173d2:	461d      	mov	r5, r3
 80173d4:	4604      	mov	r4, r0
 80173d6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80173d8:	920a      	str	r2, [sp, #40]	@ 0x28
 80173da:	2a00      	cmp	r2, #0
 80173dc:	f000 81fc 	beq.w	80177d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x414>
 80173e0:	6828      	ldr	r0, [r5, #0]
 80173e2:	6869      	ldr	r1, [r5, #4]
 80173e4:	aa1a      	add	r2, sp, #104	@ 0x68
 80173e6:	c203      	stmia	r2!, {r0, r1}
 80173e8:	6818      	ldr	r0, [r3, #0]
 80173ea:	6859      	ldr	r1, [r3, #4]
 80173ec:	aa1c      	add	r2, sp, #112	@ 0x70
 80173ee:	c203      	stmia	r2!, {r0, r1}
 80173f0:	a81a      	add	r0, sp, #104	@ 0x68
 80173f2:	f7f7 ffdd 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173f6:	4629      	mov	r1, r5
 80173f8:	a81c      	add	r0, sp, #112	@ 0x70
 80173fa:	f7f8 f801 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173fe:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017402:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017406:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801740a:	bfdd      	ittte	le
 801740c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017410:	b29a      	uxthle	r2, r3
 8017412:	fb91 f2f2 	sdivle	r2, r1, r2
 8017416:	2201      	movgt	r2, #1
 8017418:	9201      	str	r2, [sp, #4]
 801741a:	9801      	ldr	r0, [sp, #4]
 801741c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017420:	9901      	ldr	r1, [sp, #4]
 8017422:	fb92 f0f0 	sdiv	r0, r2, r0
 8017426:	b280      	uxth	r0, r0
 8017428:	9010      	str	r0, [sp, #64]	@ 0x40
 801742a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801742c:	9801      	ldr	r0, [sp, #4]
 801742e:	440e      	add	r6, r1
 8017430:	fb05 2510 	mls	r5, r5, r0, r2
 8017434:	fb15 f503 	smulbb	r5, r5, r3
 8017438:	3e01      	subs	r6, #1
 801743a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801743e:	fb96 f6f1 	sdiv	r6, r6, r1
 8017442:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017446:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801744a:	440d      	add	r5, r1
 801744c:	4419      	add	r1, r3
 801744e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017452:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017456:	441a      	add	r2, r3
 8017458:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801745c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017460:	9304      	str	r3, [sp, #16]
 8017462:	4b96      	ldr	r3, [pc, #600]	@ (80176bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017464:	3601      	adds	r6, #1
 8017466:	6818      	ldr	r0, [r3, #0]
 8017468:	b2b6      	uxth	r6, r6
 801746a:	6803      	ldr	r3, [r0, #0]
 801746c:	b2ad      	uxth	r5, r5
 801746e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017470:	4798      	blx	r3
 8017472:	4b93      	ldr	r3, [pc, #588]	@ (80176c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017474:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017478:	881a      	ldrh	r2, [r3, #0]
 801747a:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801747e:	4357      	muls	r7, r2
 8017480:	fb02 c101 	mla	r1, r2, r1, ip
 8017484:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017488:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801748c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801748e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017490:	2d00      	cmp	r5, #0
 8017492:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017496:	f106 0204 	add.w	r2, r6, #4
 801749a:	9206      	str	r2, [sp, #24]
 801749c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801749e:	bf18      	it	ne
 80174a0:	2100      	movne	r1, #0
 80174a2:	ea6f 0202 	mvn.w	r2, r2
 80174a6:	b2d2      	uxtb	r2, r2
 80174a8:	9215      	str	r2, [sp, #84]	@ 0x54
 80174aa:	9a04      	ldr	r2, [sp, #16]
 80174ac:	9318      	str	r3, [sp, #96]	@ 0x60
 80174ae:	bf08      	it	eq
 80174b0:	4611      	moveq	r1, r2
 80174b2:	2200      	movs	r2, #0
 80174b4:	4b83      	ldr	r3, [pc, #524]	@ (80176c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 80174b6:	b289      	uxth	r1, r1
 80174b8:	1b1b      	subs	r3, r3, r4
 80174ba:	920d      	str	r2, [sp, #52]	@ 0x34
 80174bc:	9319      	str	r3, [sp, #100]	@ 0x64
 80174be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80174c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80174c2:	fa12 f383 	uxtah	r3, r2, r3
 80174c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80174c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80174cc:	3304      	adds	r3, #4
 80174ce:	9307      	str	r3, [sp, #28]
 80174d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80174d2:	455b      	cmp	r3, fp
 80174d4:	f240 817b 	bls.w	80177ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40a>
 80174d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80174dc:	f04f 0801 	mov.w	r8, #1
 80174e0:	fbb5 f3f3 	udiv	r3, r5, r3
 80174e4:	9a01      	ldr	r2, [sp, #4]
 80174e6:	9807      	ldr	r0, [sp, #28]
 80174e8:	1ad3      	subs	r3, r2, r3
 80174ea:	b29b      	uxth	r3, r3
 80174ec:	9316      	str	r3, [sp, #88]	@ 0x58
 80174ee:	9b07      	ldr	r3, [sp, #28]
 80174f0:	7800      	ldrb	r0, [r0, #0]
 80174f2:	785a      	ldrb	r2, [r3, #1]
 80174f4:	789b      	ldrb	r3, [r3, #2]
 80174f6:	9011      	str	r0, [sp, #68]	@ 0x44
 80174f8:	021b      	lsls	r3, r3, #8
 80174fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80174fe:	9a07      	ldr	r2, [sp, #28]
 8017500:	3001      	adds	r0, #1
 8017502:	78d2      	ldrb	r2, [r2, #3]
 8017504:	9005      	str	r0, [sp, #20]
 8017506:	4313      	orrs	r3, r2
 8017508:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801750a:	46c4      	mov	ip, r8
 801750c:	441a      	add	r2, r3
 801750e:	1c50      	adds	r0, r2, #1
 8017510:	9003      	str	r0, [sp, #12]
 8017512:	7852      	ldrb	r2, [r2, #1]
 8017514:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017516:	0212      	lsls	r2, r2, #8
 8017518:	5cc3      	ldrb	r3, [r0, r3]
 801751a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801751e:	431a      	orrs	r2, r3
 8017520:	b293      	uxth	r3, r2
 8017522:	930c      	str	r3, [sp, #48]	@ 0x30
 8017524:	2300      	movs	r3, #0
 8017526:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801752a:	9308      	str	r3, [sp, #32]
 801752c:	461a      	mov	r2, r3
 801752e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017532:	f8cd 8008 	str.w	r8, [sp, #8]
 8017536:	930e      	str	r3, [sp, #56]	@ 0x38
 8017538:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801753c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801753e:	2d00      	cmp	r5, #0
 8017540:	d07c      	beq.n	801763c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8017542:	45ac      	cmp	ip, r5
 8017544:	d26c      	bcs.n	8017620 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x25c>
 8017546:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017548:	eba5 050c 	sub.w	r5, r5, ip
 801754c:	455b      	cmp	r3, fp
 801754e:	b2ad      	uxth	r5, r5
 8017550:	4608      	mov	r0, r1
 8017552:	d802      	bhi.n	801755a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8017554:	e070      	b.n	8017638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8017556:	2b00      	cmp	r3, #0
 8017558:	d15c      	bne.n	8017614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 801755a:	9b03      	ldr	r3, [sp, #12]
 801755c:	9a02      	ldr	r2, [sp, #8]
 801755e:	785b      	ldrb	r3, [r3, #1]
 8017560:	f1c2 0207 	rsb	r2, r2, #7
 8017564:	4093      	lsls	r3, r2
 8017566:	005b      	lsls	r3, r3, #1
 8017568:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801756c:	9b03      	ldr	r3, [sp, #12]
 801756e:	9902      	ldr	r1, [sp, #8]
 8017570:	781b      	ldrb	r3, [r3, #0]
 8017572:	410b      	asrs	r3, r1
 8017574:	3101      	adds	r1, #1
 8017576:	b2c9      	uxtb	r1, r1
 8017578:	2908      	cmp	r1, #8
 801757a:	9102      	str	r1, [sp, #8]
 801757c:	9903      	ldr	r1, [sp, #12]
 801757e:	b2db      	uxtb	r3, r3
 8017580:	bf03      	ittte	eq
 8017582:	3102      	addeq	r1, #2
 8017584:	9103      	streq	r1, [sp, #12]
 8017586:	2100      	moveq	r1, #0
 8017588:	3101      	addne	r1, #1
 801758a:	bf14      	ite	ne
 801758c:	9103      	strne	r1, [sp, #12]
 801758e:	9102      	streq	r1, [sp, #8]
 8017590:	4313      	orrs	r3, r2
 8017592:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017594:	b29a      	uxth	r2, r3
 8017596:	4291      	cmp	r1, r2
 8017598:	d30a      	bcc.n	80175b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ec>
 801759a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801759e:	2301      	movs	r3, #1
 80175a0:	9905      	ldr	r1, [sp, #20]
 80175a2:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80175a6:	d30f      	bcc.n	80175c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x204>
 80175a8:	2100      	movs	r1, #0
 80175aa:	4698      	mov	r8, r3
 80175ac:	9100      	str	r1, [sp, #0]
 80175ae:	e032      	b.n	8017616 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80175b0:	9b05      	ldr	r3, [sp, #20]
 80175b2:	429a      	cmp	r2, r3
 80175b4:	d318      	bcc.n	80175e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x224>
 80175b6:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80175ba:	eb04 0308 	add.w	r3, r4, r8
 80175be:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80175c2:	f108 0301 	add.w	r3, r8, #1
 80175c6:	b29b      	uxth	r3, r3
 80175c8:	9905      	ldr	r1, [sp, #20]
 80175ca:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80175ce:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80175d2:	710e      	strb	r6, [r1, #4]
 80175d4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80175d6:	80ce      	strh	r6, [r1, #6]
 80175d8:	f108 0601 	add.w	r6, r8, #1
 80175dc:	714e      	strb	r6, [r1, #5]
 80175de:	9905      	ldr	r1, [sp, #20]
 80175e0:	3101      	adds	r1, #1
 80175e2:	b289      	uxth	r1, r1
 80175e4:	9105      	str	r1, [sp, #20]
 80175e6:	e7df      	b.n	80175a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e4>
 80175e8:	4611      	mov	r1, r2
 80175ea:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80175ee:	795b      	ldrb	r3, [r3, #5]
 80175f0:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80175f4:	4426      	add	r6, r4
 80175f6:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80175f8:	4437      	add	r7, r6
 80175fa:	2f00      	cmp	r7, #0
 80175fc:	dd06      	ble.n	801760c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80175fe:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017602:	790f      	ldrb	r7, [r1, #4]
 8017604:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8017608:	88c9      	ldrh	r1, [r1, #6]
 801760a:	e7f4      	b.n	80175f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x232>
 801760c:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8017610:	b29b      	uxth	r3, r3
 8017612:	e7c5      	b.n	80175a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1dc>
 8017614:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017616:	920c      	str	r2, [sp, #48]	@ 0x30
 8017618:	4601      	mov	r1, r0
 801761a:	9a00      	ldr	r2, [sp, #0]
 801761c:	469c      	mov	ip, r3
 801761e:	e78e      	b.n	801753e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17a>
 8017620:	1957      	adds	r7, r2, r5
 8017622:	ebac 0305 	sub.w	r3, ip, r5
 8017626:	b2ba      	uxth	r2, r7
 8017628:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801762c:	b29b      	uxth	r3, r3
 801762e:	9200      	str	r2, [sp, #0]
 8017630:	2500      	movs	r5, #0
 8017632:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017634:	455a      	cmp	r2, fp
 8017636:	d88e      	bhi.n	8017556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x192>
 8017638:	4601      	mov	r1, r0
 801763a:	e749      	b.n	80174d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x10c>
 801763c:	458c      	cmp	ip, r1
 801763e:	bf2c      	ite	cs
 8017640:	4628      	movcs	r0, r5
 8017642:	462b      	movcc	r3, r5
 8017644:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017646:	bf27      	ittee	cs
 8017648:	ebac 0301 	subcs.w	r3, ip, r1
 801764c:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801764e:	eba1 000c 	subcc.w	r0, r1, ip
 8017652:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017656:	bf2c      	ite	cs
 8017658:	b29b      	uxthcs	r3, r3
 801765a:	b280      	uxthcc	r0, r0
 801765c:	2dff      	cmp	r5, #255	@ 0xff
 801765e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017660:	eb02 0705 	add.w	r7, r2, r5
 8017664:	b2bd      	uxth	r5, r7
 8017666:	9500      	str	r5, [sp, #0]
 8017668:	d12e      	bne.n	80176c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>
 801766a:	465e      	mov	r6, fp
 801766c:	9d00      	ldr	r5, [sp, #0]
 801766e:	42aa      	cmp	r2, r5
 8017670:	f040 8083 	bne.w	801777a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b6>
 8017674:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017676:	458c      	cmp	ip, r1
 8017678:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801767c:	d3d8      	bcc.n	8017630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801767e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017680:	9904      	ldr	r1, [sp, #16]
 8017682:	8812      	ldrh	r2, [r2, #0]
 8017684:	1a52      	subs	r2, r2, r1
 8017686:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801768a:	9a08      	ldr	r2, [sp, #32]
 801768c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801768e:	3201      	adds	r2, #1
 8017690:	428a      	cmp	r2, r1
 8017692:	9208      	str	r2, [sp, #32]
 8017694:	f040 8091 	bne.w	80177ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f6>
 8017698:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801769c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80176a0:	9b04      	ldr	r3, [sp, #16]
 80176a2:	eba5 050c 	sub.w	r5, r5, ip
 80176a6:	b2ad      	uxth	r5, r5
 80176a8:	2d00      	cmp	r5, #0
 80176aa:	bf0c      	ite	eq
 80176ac:	4619      	moveq	r1, r3
 80176ae:	2100      	movne	r1, #0
 80176b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80176b2:	b289      	uxth	r1, r1
 80176b4:	3301      	adds	r3, #1
 80176b6:	930d      	str	r3, [sp, #52]	@ 0x34
 80176b8:	e701      	b.n	80174be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfa>
 80176ba:	bf00      	nop
 80176bc:	20002230 	.word	0x20002230
 80176c0:	2000222a 	.word	0x2000222a
 80176c4:	fffff7fb 	.word	0xfffff7fb
 80176c8:	46d9      	mov	r9, fp
 80176ca:	9d00      	ldr	r5, [sp, #0]
 80176cc:	42aa      	cmp	r2, r5
 80176ce:	d0d1      	beq.n	8017674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b0>
 80176d0:	1c55      	adds	r5, r2, #1
 80176d2:	4422      	add	r2, r4
 80176d4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80176d8:	9a06      	ldr	r2, [sp, #24]
 80176da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80176de:	4472      	add	r2, lr
 80176e0:	9212      	str	r2, [sp, #72]	@ 0x48
 80176e2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80176e4:	f8b9 2000 	ldrh.w	r2, [r9]
 80176e8:	f897 a002 	ldrb.w	sl, [r7, #2]
 80176ec:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80176ee:	1216      	asrs	r6, r2, #8
 80176f0:	fb1a fa07 	smulbb	sl, sl, r7
 80176f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80176f8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80176fa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80176fe:	fb06 a607 	mla	r6, r6, r7, sl
 8017702:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8017704:	9517      	str	r5, [sp, #92]	@ 0x5c
 8017706:	f897 a001 	ldrb.w	sl, [r7, #1]
 801770a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801770c:	10d5      	asrs	r5, r2, #3
 801770e:	fb1a fa07 	smulbb	sl, sl, r7
 8017712:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017716:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017718:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801771c:	fb05 a507 	mla	r5, r5, r7, sl
 8017720:	9f06      	ldr	r7, [sp, #24]
 8017722:	00d2      	lsls	r2, r2, #3
 8017724:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017728:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801772a:	b2d2      	uxtb	r2, r2
 801772c:	fb1e fe07 	smulbb	lr, lr, r7
 8017730:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017732:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017736:	fb02 e207 	mla	r2, r2, r7, lr
 801773a:	b2b6      	uxth	r6, r6
 801773c:	b292      	uxth	r2, r2
 801773e:	b2ad      	uxth	r5, r5
 8017740:	f106 0a01 	add.w	sl, r6, #1
 8017744:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017748:	f102 0e01 	add.w	lr, r2, #1
 801774c:	f105 0a01 	add.w	sl, r5, #1
 8017750:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017754:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017758:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801775c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017760:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017764:	ea4e 0606 	orr.w	r6, lr, r6
 8017768:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801776c:	ea46 060a 	orr.w	r6, r6, sl
 8017770:	f829 6b02 	strh.w	r6, [r9], #2
 8017774:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017778:	e7a7      	b.n	80176ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x306>
 801777a:	f102 0e01 	add.w	lr, r2, #1
 801777e:	4422      	add	r2, r4
 8017780:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8017784:	9a06      	ldr	r2, [sp, #24]
 8017786:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801778a:	eb02 0a05 	add.w	sl, r2, r5
 801778e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017792:	4a13      	ldr	r2, [pc, #76]	@ (80177e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8017794:	9f06      	ldr	r7, [sp, #24]
 8017796:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801779a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801779e:	00d2      	lsls	r2, r2, #3
 80177a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80177a4:	ea49 0202 	orr.w	r2, r9, r2
 80177a8:	f817 9005 	ldrb.w	r9, [r7, r5]
 80177ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80177b0:	f826 2b02 	strh.w	r2, [r6], #2
 80177b4:	fa1f f28e 	uxth.w	r2, lr
 80177b8:	e758      	b.n	801766c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>
 80177ba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80177be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80177c2:	1a2d      	subs	r5, r5, r0
 80177c4:	b2ad      	uxth	r5, r5
 80177c6:	2d00      	cmp	r5, #0
 80177c8:	bf18      	it	ne
 80177ca:	2000      	movne	r0, #0
 80177cc:	e731      	b.n	8017632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80177ce:	4b05      	ldr	r3, [pc, #20]	@ (80177e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80177d0:	6818      	ldr	r0, [r3, #0]
 80177d2:	6803      	ldr	r3, [r0, #0]
 80177d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80177d6:	4798      	blx	r3
 80177d8:	b01f      	add	sp, #124	@ 0x7c
 80177da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177de:	bf00      	nop
 80177e0:	fffff800 	.word	0xfffff800
 80177e4:	20002230 	.word	0x20002230

080177e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80177e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177ec:	469b      	mov	fp, r3
 80177ee:	4616      	mov	r6, r2
 80177f0:	b091      	sub	sp, #68	@ 0x44
 80177f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80177f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80177fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80177fe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017802:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8017806:	4604      	mov	r4, r0
 8017808:	460d      	mov	r5, r1
 801780a:	4640      	mov	r0, r8
 801780c:	4659      	mov	r1, fp
 801780e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017812:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017816:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801781a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801781e:	f7f4 fe11 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8017822:	4631      	mov	r1, r6
 8017824:	4640      	mov	r0, r8
 8017826:	f7f4 fe0d 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 801782a:	4b74      	ldr	r3, [pc, #464]	@ (80179fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801782c:	8818      	ldrh	r0, [r3, #0]
 801782e:	4b74      	ldr	r3, [pc, #464]	@ (8017a00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017830:	b202      	sxth	r2, r0
 8017832:	8819      	ldrh	r1, [r3, #0]
 8017834:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017838:	b20e      	sxth	r6, r1
 801783a:	2b00      	cmp	r3, #0
 801783c:	da07      	bge.n	801784e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801783e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8017842:	4463      	add	r3, ip
 8017844:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017848:	2300      	movs	r3, #0
 801784a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801784e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017852:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017856:	1ad2      	subs	r2, r2, r3
 8017858:	4594      	cmp	ip, r2
 801785a:	bfc4      	itt	gt
 801785c:	1ac2      	subgt	r2, r0, r3
 801785e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8017862:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017866:	2a00      	cmp	r2, #0
 8017868:	da07      	bge.n	801787a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801786a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801786e:	4462      	add	r2, ip
 8017870:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8017874:	2200      	movs	r2, #0
 8017876:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801787a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801787e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017882:	eba6 060a 	sub.w	r6, r6, sl
 8017886:	42b2      	cmp	r2, r6
 8017888:	bfc4      	itt	gt
 801788a:	eba1 020a 	subgt.w	r2, r1, sl
 801788e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8017892:	4a5c      	ldr	r2, [pc, #368]	@ (8017a04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017894:	7812      	ldrb	r2, [r2, #0]
 8017896:	b9a2      	cbnz	r2, 80178c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017898:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801789c:	4286      	cmp	r6, r0
 801789e:	4640      	mov	r0, r8
 80178a0:	9303      	str	r3, [sp, #12]
 80178a2:	bf14      	ite	ne
 80178a4:	2600      	movne	r6, #0
 80178a6:	2601      	moveq	r6, #1
 80178a8:	f7f4 fe0f 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 80178ac:	9b03      	ldr	r3, [sp, #12]
 80178ae:	b160      	cbz	r0, 80178ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80178b0:	2300      	movs	r3, #0
 80178b2:	8023      	strh	r3, [r4, #0]
 80178b4:	8063      	strh	r3, [r4, #2]
 80178b6:	80a3      	strh	r3, [r4, #4]
 80178b8:	4620      	mov	r0, r4
 80178ba:	80e3      	strh	r3, [r4, #6]
 80178bc:	b011      	add	sp, #68	@ 0x44
 80178be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80178c6:	428e      	cmp	r6, r1
 80178c8:	e7e9      	b.n	801789e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80178ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80178ce:	a90e      	add	r1, sp, #56	@ 0x38
 80178d0:	9205      	str	r2, [sp, #20]
 80178d2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80178d6:	900e      	str	r0, [sp, #56]	@ 0x38
 80178d8:	9206      	str	r2, [sp, #24]
 80178da:	f8bb 2000 	ldrh.w	r2, [fp]
 80178de:	a80c      	add	r0, sp, #48	@ 0x30
 80178e0:	1a9b      	subs	r3, r3, r2
 80178e2:	b21b      	sxth	r3, r3
 80178e4:	9303      	str	r3, [sp, #12]
 80178e6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80178ea:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 80178ee:	ebaa 0a03 	sub.w	sl, sl, r3
 80178f2:	fa0f f38a 	sxth.w	r3, sl
 80178f6:	9304      	str	r3, [sp, #16]
 80178f8:	9b03      	ldr	r3, [sp, #12]
 80178fa:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 80178fe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8017902:	9b04      	ldr	r3, [sp, #16]
 8017904:	f8df b104 	ldr.w	fp, [pc, #260]	@ 8017a0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017908:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801790c:	9b05      	ldr	r3, [sp, #20]
 801790e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8017912:	9b06      	ldr	r3, [sp, #24]
 8017914:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017918:	f7f7 fd72 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801791c:	4640      	mov	r0, r8
 801791e:	f7f7 fd47 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017922:	a80e      	add	r0, sp, #56	@ 0x38
 8017924:	f7f7 fd44 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017928:	4b37      	ldr	r3, [pc, #220]	@ (8017a08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801792a:	4628      	mov	r0, r5
 801792c:	881b      	ldrh	r3, [r3, #0]
 801792e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017932:	9307      	str	r3, [sp, #28]
 8017934:	682b      	ldr	r3, [r5, #0]
 8017936:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017938:	4798      	blx	r3
 801793a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801793e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8017942:	4681      	mov	r9, r0
 8017944:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017948:	f8db 0000 	ldr.w	r0, [fp]
 801794c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801794e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017952:	6803      	ldr	r3, [r0, #0]
 8017954:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017956:	4798      	blx	r3
 8017958:	4607      	mov	r7, r0
 801795a:	f8db 0000 	ldr.w	r0, [fp]
 801795e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8017962:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017966:	6803      	ldr	r3, [r0, #0]
 8017968:	9109      	str	r1, [sp, #36]	@ 0x24
 801796a:	9208      	str	r2, [sp, #32]
 801796c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801796e:	4798      	blx	r3
 8017970:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017974:	f010 0f01 	tst.w	r0, #1
 8017978:	d012      	beq.n	80179a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801797a:	f8db 0000 	ldr.w	r0, [fp]
 801797e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8017982:	6803      	ldr	r3, [r0, #0]
 8017984:	9200      	str	r2, [sp, #0]
 8017986:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8017988:	e898 0006 	ldmia.w	r8, {r1, r2}
 801798c:	462b      	mov	r3, r5
 801798e:	47b0      	blx	r6
 8017990:	9b03      	ldr	r3, [sp, #12]
 8017992:	8023      	strh	r3, [r4, #0]
 8017994:	9b04      	ldr	r3, [sp, #16]
 8017996:	8063      	strh	r3, [r4, #2]
 8017998:	9b05      	ldr	r3, [sp, #20]
 801799a:	80a3      	strh	r3, [r4, #4]
 801799c:	9b06      	ldr	r3, [sp, #24]
 801799e:	e78b      	b.n	80178b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80179a0:	fb09 f202 	mul.w	r2, r9, r2
 80179a4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80179a8:	440f      	add	r7, r1
 80179aa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80179ae:	b166      	cbz	r6, 80179ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80179b0:	9a07      	ldr	r2, [sp, #28]
 80179b2:	4592      	cmp	sl, r2
 80179b4:	d109      	bne.n	80179ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80179b6:	f8db 0000 	ldr.w	r0, [fp]
 80179ba:	fb09 f303 	mul.w	r3, r9, r3
 80179be:	6802      	ldr	r2, [r0, #0]
 80179c0:	4629      	mov	r1, r5
 80179c2:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80179c4:	463a      	mov	r2, r7
 80179c6:	47b0      	blx	r6
 80179c8:	e7e2      	b.n	8017990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80179ca:	fb0a f303 	mul.w	r3, sl, r3
 80179ce:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8017a0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80179d2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80179d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80179da:	4545      	cmp	r5, r8
 80179dc:	d2d8      	bcs.n	8017990 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80179de:	f8db 0000 	ldr.w	r0, [fp]
 80179e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80179e6:	6802      	ldr	r2, [r0, #0]
 80179e8:	4629      	mov	r1, r5
 80179ea:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 80179ee:	005b      	lsls	r3, r3, #1
 80179f0:	463a      	mov	r2, r7
 80179f2:	47d0      	blx	sl
 80179f4:	444f      	add	r7, r9
 80179f6:	4435      	add	r5, r6
 80179f8:	e7ef      	b.n	80179da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80179fa:	bf00      	nop
 80179fc:	20002224 	.word	0x20002224
 8017a00:	20002226 	.word	0x20002226
 8017a04:	20002228 	.word	0x20002228
 8017a08:	2000222a 	.word	0x2000222a
 8017a0c:	20002230 	.word	0x20002230

08017a10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017a12:	4606      	mov	r6, r0
 8017a14:	b087      	sub	sp, #28
 8017a16:	460c      	mov	r4, r1
 8017a18:	4617      	mov	r7, r2
 8017a1a:	461d      	mov	r5, r3
 8017a1c:	b333      	cbz	r3, 8017a6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017a1e:	4608      	mov	r0, r1
 8017a20:	f7f4 fd53 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a24:	bb10      	cbnz	r0, 8017a6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017a26:	6820      	ldr	r0, [r4, #0]
 8017a28:	6861      	ldr	r1, [r4, #4]
 8017a2a:	ab04      	add	r3, sp, #16
 8017a2c:	4c1b      	ldr	r4, [pc, #108]	@ (8017a9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017a2e:	c303      	stmia	r3!, {r0, r1}
 8017a30:	a804      	add	r0, sp, #16
 8017a32:	f7f7 fcbd 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a36:	6820      	ldr	r0, [r4, #0]
 8017a38:	6803      	ldr	r3, [r0, #0]
 8017a3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017a3c:	4798      	blx	r3
 8017a3e:	2dff      	cmp	r5, #255	@ 0xff
 8017a40:	d016      	beq.n	8017a70 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017a42:	f010 0f08 	tst.w	r0, #8
 8017a46:	6820      	ldr	r0, [r4, #0]
 8017a48:	d015      	beq.n	8017a76 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017a4a:	2400      	movs	r4, #0
 8017a4c:	6801      	ldr	r1, [r0, #0]
 8017a4e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017a52:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017a56:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017a5a:	9401      	str	r4, [sp, #4]
 8017a5c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017a60:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017a64:	9400      	str	r4, [sp, #0]
 8017a66:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8017a68:	4639      	mov	r1, r7
 8017a6a:	47a0      	blx	r4
 8017a6c:	b007      	add	sp, #28
 8017a6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017a70:	f010 0f02 	tst.w	r0, #2
 8017a74:	e7e7      	b.n	8017a46 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017a76:	6803      	ldr	r3, [r0, #0]
 8017a78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017a7a:	4798      	blx	r3
 8017a7c:	4b08      	ldr	r3, [pc, #32]	@ (8017aa0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017a7e:	4601      	mov	r1, r0
 8017a80:	881a      	ldrh	r2, [r3, #0]
 8017a82:	e9cd 7500 	strd	r7, r5, [sp]
 8017a86:	6833      	ldr	r3, [r6, #0]
 8017a88:	4630      	mov	r0, r6
 8017a8a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8017a8c:	ab04      	add	r3, sp, #16
 8017a8e:	47a8      	blx	r5
 8017a90:	6820      	ldr	r0, [r4, #0]
 8017a92:	6803      	ldr	r3, [r0, #0]
 8017a94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017a96:	4798      	blx	r3
 8017a98:	e7e8      	b.n	8017a6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017a9a:	bf00      	nop
 8017a9c:	20002230 	.word	0x20002230
 8017aa0:	2000222a 	.word	0x2000222a

08017aa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017aa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017aa8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8017aac:	4688      	mov	r8, r1
 8017aae:	4614      	mov	r4, r2
 8017ab0:	461d      	mov	r5, r3
 8017ab2:	9e08      	ldr	r6, [sp, #32]
 8017ab4:	2f00      	cmp	r7, #0
 8017ab6:	f000 80a9 	beq.w	8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017aba:	4618      	mov	r0, r3
 8017abc:	f7f4 fd05 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ac0:	2800      	cmp	r0, #0
 8017ac2:	f040 80a3 	bne.w	8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017ac6:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017aca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017ace:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017ad2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017ad6:	fb04 1303 	mla	r3, r4, r3, r1
 8017ada:	4365      	muls	r5, r4
 8017adc:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017ae0:	2fff      	cmp	r7, #255	@ 0xff
 8017ae2:	eba4 0200 	sub.w	r2, r4, r0
 8017ae6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017aea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017aee:	d04a      	beq.n	8017b86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017af0:	b2bc      	uxth	r4, r7
 8017af2:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017af6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017afa:	fa5f f788 	uxtb.w	r7, r8
 8017afe:	b2f3      	uxtb	r3, r6
 8017b00:	fb0e fe04 	mul.w	lr, lr, r4
 8017b04:	4367      	muls	r7, r4
 8017b06:	4363      	muls	r3, r4
 8017b08:	0040      	lsls	r0, r0, #1
 8017b0a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017b0e:	fa1f fc8c 	uxth.w	ip, ip
 8017b12:	42a9      	cmp	r1, r5
 8017b14:	d27a      	bcs.n	8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b16:	eb01 0900 	add.w	r9, r1, r0
 8017b1a:	4549      	cmp	r1, r9
 8017b1c:	d231      	bcs.n	8017b82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017b1e:	880a      	ldrh	r2, [r1, #0]
 8017b20:	1214      	asrs	r4, r2, #8
 8017b22:	10d6      	asrs	r6, r2, #3
 8017b24:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017b28:	00d2      	lsls	r2, r2, #3
 8017b2a:	b2d2      	uxtb	r2, r2
 8017b2c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017b30:	fb14 f40c 	smulbb	r4, r4, ip
 8017b34:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017b38:	fb12 f20c 	smulbb	r2, r2, ip
 8017b3c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017b40:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017b44:	4474      	add	r4, lr
 8017b46:	fb16 f60c 	smulbb	r6, r6, ip
 8017b4a:	b2a4      	uxth	r4, r4
 8017b4c:	441a      	add	r2, r3
 8017b4e:	b292      	uxth	r2, r2
 8017b50:	f104 0a01 	add.w	sl, r4, #1
 8017b54:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017b58:	f102 0a01 	add.w	sl, r2, #1
 8017b5c:	443e      	add	r6, r7
 8017b5e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017b62:	b2b6      	uxth	r6, r6
 8017b64:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8017b68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b6c:	4322      	orrs	r2, r4
 8017b6e:	1c74      	adds	r4, r6, #1
 8017b70:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017b74:	0976      	lsrs	r6, r6, #5
 8017b76:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017b7a:	4332      	orrs	r2, r6
 8017b7c:	f821 2b02 	strh.w	r2, [r1], #2
 8017b80:	e7cb      	b.n	8017b1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017b82:	4441      	add	r1, r8
 8017b84:	e7c5      	b.n	8017b12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017b86:	4f22      	ldr	r7, [pc, #136]	@ (8017c10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017b88:	0973      	lsrs	r3, r6, #5
 8017b8a:	ea08 0707 	and.w	r7, r8, r7
 8017b8e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017b92:	433b      	orrs	r3, r7
 8017b94:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017b98:	4333      	orrs	r3, r6
 8017b9a:	07e7      	lsls	r7, r4, #31
 8017b9c:	b29b      	uxth	r3, r3
 8017b9e:	d50b      	bpl.n	8017bb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017ba0:	0040      	lsls	r0, r0, #1
 8017ba2:	0052      	lsls	r2, r2, #1
 8017ba4:	42a9      	cmp	r1, r5
 8017ba6:	d231      	bcs.n	8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017ba8:	180c      	adds	r4, r1, r0
 8017baa:	42a1      	cmp	r1, r4
 8017bac:	d202      	bcs.n	8017bb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017bae:	f821 3b02 	strh.w	r3, [r1], #2
 8017bb2:	e7fa      	b.n	8017baa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017bb4:	4411      	add	r1, r2
 8017bb6:	e7f5      	b.n	8017ba4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017bb8:	078e      	lsls	r6, r1, #30
 8017bba:	d008      	beq.n	8017bce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017bbc:	460a      	mov	r2, r1
 8017bbe:	0066      	lsls	r6, r4, #1
 8017bc0:	42aa      	cmp	r2, r5
 8017bc2:	d202      	bcs.n	8017bca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017bc4:	8013      	strh	r3, [r2, #0]
 8017bc6:	4432      	add	r2, r6
 8017bc8:	e7fa      	b.n	8017bc0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017bca:	3102      	adds	r1, #2
 8017bcc:	3801      	subs	r0, #1
 8017bce:	07c2      	lsls	r2, r0, #31
 8017bd0:	d50b      	bpl.n	8017bea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017bd2:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017bd6:	3a01      	subs	r2, #1
 8017bd8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017bdc:	0066      	lsls	r6, r4, #1
 8017bde:	42aa      	cmp	r2, r5
 8017be0:	d202      	bcs.n	8017be8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017be2:	8013      	strh	r3, [r2, #0]
 8017be4:	4432      	add	r2, r6
 8017be6:	e7fa      	b.n	8017bde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017be8:	3801      	subs	r0, #1
 8017bea:	b178      	cbz	r0, 8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017bec:	1040      	asrs	r0, r0, #1
 8017bee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017bf2:	0080      	lsls	r0, r0, #2
 8017bf4:	0064      	lsls	r4, r4, #1
 8017bf6:	42a9      	cmp	r1, r5
 8017bf8:	d208      	bcs.n	8017c0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017bfa:	460a      	mov	r2, r1
 8017bfc:	180e      	adds	r6, r1, r0
 8017bfe:	42b2      	cmp	r2, r6
 8017c00:	d202      	bcs.n	8017c08 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017c02:	f842 3b04 	str.w	r3, [r2], #4
 8017c06:	e7fa      	b.n	8017bfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017c08:	4421      	add	r1, r4
 8017c0a:	e7f4      	b.n	8017bf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017c10:	00fff800 	.word	0x00fff800

08017c14 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017c14:	2200      	movs	r2, #0
 8017c16:	4912      	ldr	r1, [pc, #72]	@ (8017c60 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017c18:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017c1c:	6001      	str	r1, [r0, #0]
 8017c1e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017c22:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017c26:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017c2a:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8017c2e:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8017c32:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017c36:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017c3a:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8017c3e:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8017c42:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017c46:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017c4a:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8017c4e:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8017c52:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017c56:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017c5a:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8017c5e:	4770      	bx	lr
 8017c60:	08024258 	.word	0x08024258

08017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c68:	460d      	mov	r5, r1
 8017c6a:	4604      	mov	r4, r0
 8017c6c:	4699      	mov	r9, r3
 8017c6e:	b08d      	sub	sp, #52	@ 0x34
 8017c70:	6808      	ldr	r0, [r1, #0]
 8017c72:	6849      	ldr	r1, [r1, #4]
 8017c74:	ab08      	add	r3, sp, #32
 8017c76:	c303      	stmia	r3!, {r0, r1}
 8017c78:	6810      	ldr	r0, [r2, #0]
 8017c7a:	6851      	ldr	r1, [r2, #4]
 8017c7c:	ab0a      	add	r3, sp, #40	@ 0x28
 8017c7e:	c303      	stmia	r3!, {r0, r1}
 8017c80:	a808      	add	r0, sp, #32
 8017c82:	f7f7 fb95 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c86:	4629      	mov	r1, r5
 8017c88:	a80a      	add	r0, sp, #40	@ 0x28
 8017c8a:	f7f7 fbb9 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c8e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8017c92:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8017c96:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8017c9a:	4d63      	ldr	r5, [pc, #396]	@ (8017e28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017c9c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ca0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017ca4:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017ca8:	6828      	ldr	r0, [r5, #0]
 8017caa:	440a      	add	r2, r1
 8017cac:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8017cb0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8017cb4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8017cb8:	4413      	add	r3, r2
 8017cba:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8017cbe:	6803      	ldr	r3, [r0, #0]
 8017cc0:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8017cc4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017cc6:	4798      	blx	r3
 8017cc8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017ccc:	d119      	bne.n	8017d02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017cce:	f010 0f20 	tst.w	r0, #32
 8017cd2:	6828      	ldr	r0, [r5, #0]
 8017cd4:	d018      	beq.n	8017d08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017cd6:	2500      	movs	r5, #0
 8017cd8:	6801      	ldr	r1, [r0, #0]
 8017cda:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017cde:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8017ce2:	b2b6      	uxth	r6, r6
 8017ce4:	9502      	str	r5, [sp, #8]
 8017ce6:	fa1f f588 	uxth.w	r5, r8
 8017cea:	9601      	str	r6, [sp, #4]
 8017cec:	9500      	str	r5, [sp, #0]
 8017cee:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8017cf0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017cf4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017cf8:	4621      	mov	r1, r4
 8017cfa:	47a8      	blx	r5
 8017cfc:	b00d      	add	sp, #52	@ 0x34
 8017cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d02:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017d06:	e7e4      	b.n	8017cd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017d08:	6803      	ldr	r3, [r0, #0]
 8017d0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d0c:	4798      	blx	r3
 8017d0e:	4947      	ldr	r1, [pc, #284]	@ (8017e2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017d10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017d14:	468a      	mov	sl, r1
 8017d16:	880b      	ldrh	r3, [r1, #0]
 8017d18:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017d1c:	fb03 5202 	mla	r2, r3, r2, r5
 8017d20:	4373      	muls	r3, r6
 8017d22:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017d26:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017d2a:	9307      	str	r3, [sp, #28]
 8017d2c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017d30:	9306      	str	r3, [sp, #24]
 8017d32:	9b07      	ldr	r3, [sp, #28]
 8017d34:	4298      	cmp	r0, r3
 8017d36:	d270      	bcs.n	8017e1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017d38:	4621      	mov	r1, r4
 8017d3a:	9b06      	ldr	r3, [sp, #24]
 8017d3c:	eb00 0b03 	add.w	fp, r0, r3
 8017d40:	4558      	cmp	r0, fp
 8017d42:	d25d      	bcs.n	8017e00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017d44:	f851 4b04 	ldr.w	r4, [r1], #4
 8017d48:	0e23      	lsrs	r3, r4, #24
 8017d4a:	d014      	beq.n	8017d76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017d4c:	2bff      	cmp	r3, #255	@ 0xff
 8017d4e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017d52:	d112      	bne.n	8017d7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017d54:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017d58:	d10f      	bne.n	8017d7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017d5a:	0963      	lsrs	r3, r4, #5
 8017d5c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8017d60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017d64:	f02c 0c07 	bic.w	ip, ip, #7
 8017d68:	ea43 0c0c 	orr.w	ip, r3, ip
 8017d6c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017d70:	ea4c 0404 	orr.w	r4, ip, r4
 8017d74:	8004      	strh	r4, [r0, #0]
 8017d76:	3002      	adds	r0, #2
 8017d78:	e7e2      	b.n	8017d40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017d7a:	fb09 f303 	mul.w	r3, r9, r3
 8017d7e:	1c5a      	adds	r2, r3, #1
 8017d80:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017d84:	1212      	asrs	r2, r2, #8
 8017d86:	b293      	uxth	r3, r2
 8017d88:	43d2      	mvns	r2, r2
 8017d8a:	8807      	ldrh	r7, [r0, #0]
 8017d8c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017d90:	fb1e fe03 	smulbb	lr, lr, r3
 8017d94:	123e      	asrs	r6, r7, #8
 8017d96:	fa5f fc8c 	uxtb.w	ip, ip
 8017d9a:	b2e4      	uxtb	r4, r4
 8017d9c:	fb1c fc03 	smulbb	ip, ip, r3
 8017da0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017da4:	fb14 f403 	smulbb	r4, r4, r3
 8017da8:	b2d2      	uxtb	r2, r2
 8017daa:	10fd      	asrs	r5, r7, #3
 8017dac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017db0:	00ff      	lsls	r7, r7, #3
 8017db2:	fb06 e602 	mla	r6, r6, r2, lr
 8017db6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017dba:	b2ff      	uxtb	r7, r7
 8017dbc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017dc0:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017dc4:	fb05 c502 	mla	r5, r5, r2, ip
 8017dc8:	fb07 4702 	mla	r7, r7, r2, r4
 8017dcc:	b2b6      	uxth	r6, r6
 8017dce:	f106 0e01 	add.w	lr, r6, #1
 8017dd2:	b2ad      	uxth	r5, r5
 8017dd4:	b2bf      	uxth	r7, r7
 8017dd6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017dda:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017dde:	f105 0c01 	add.w	ip, r5, #1
 8017de2:	1c7e      	adds	r6, r7, #1
 8017de4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017de8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017dec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017df0:	096d      	lsrs	r5, r5, #5
 8017df2:	ea46 060e 	orr.w	r6, r6, lr
 8017df6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017dfa:	432e      	orrs	r6, r5
 8017dfc:	8006      	strh	r6, [r0, #0]
 8017dfe:	e7ba      	b.n	8017d76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017e00:	f8ba 3000 	ldrh.w	r3, [sl]
 8017e04:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017e08:	eba3 0308 	sub.w	r3, r3, r8
 8017e0c:	eba4 0408 	sub.w	r4, r4, r8
 8017e10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e14:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017e18:	e78b      	b.n	8017d32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017e1a:	4b03      	ldr	r3, [pc, #12]	@ (8017e28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017e1c:	6818      	ldr	r0, [r3, #0]
 8017e1e:	6803      	ldr	r3, [r0, #0]
 8017e20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017e22:	4798      	blx	r3
 8017e24:	e76a      	b.n	8017cfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017e26:	bf00      	nop
 8017e28:	20002230 	.word	0x20002230
 8017e2c:	2000222a 	.word	0x2000222a

08017e30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017e30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017e34:	b085      	sub	sp, #20
 8017e36:	466d      	mov	r5, sp
 8017e38:	4616      	mov	r6, r2
 8017e3a:	460c      	mov	r4, r1
 8017e3c:	6810      	ldr	r0, [r2, #0]
 8017e3e:	6851      	ldr	r1, [r2, #4]
 8017e40:	c503      	stmia	r5!, {r0, r1}
 8017e42:	6818      	ldr	r0, [r3, #0]
 8017e44:	6859      	ldr	r1, [r3, #4]
 8017e46:	c503      	stmia	r5!, {r0, r1}
 8017e48:	4668      	mov	r0, sp
 8017e4a:	f7f7 fab1 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e4e:	4631      	mov	r1, r6
 8017e50:	a802      	add	r0, sp, #8
 8017e52:	f7f7 fad5 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017e5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017e5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017e62:	4d28      	ldr	r5, [pc, #160]	@ (8017f04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017e64:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017e68:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017e6c:	f8bd 1000 	ldrh.w	r1, [sp]
 8017e70:	6828      	ldr	r0, [r5, #0]
 8017e72:	440a      	add	r2, r1
 8017e74:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017e78:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017e7c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017e80:	4413      	add	r3, r2
 8017e82:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017e86:	6803      	ldr	r3, [r0, #0]
 8017e88:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017e8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017e8e:	4798      	blx	r3
 8017e90:	4e1d      	ldr	r6, [pc, #116]	@ (8017f08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017e92:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017e96:	8833      	ldrh	r3, [r6, #0]
 8017e98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017e9c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8017f0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017ea0:	fb03 1202 	mla	r2, r3, r2, r1
 8017ea4:	fb08 f303 	mul.w	r3, r8, r3
 8017ea8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017eac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017eb0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017eb4:	4298      	cmp	r0, r3
 8017eb6:	d21d      	bcs.n	8017ef4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017eb8:	eb00 080c 	add.w	r8, r0, ip
 8017ebc:	4540      	cmp	r0, r8
 8017ebe:	d20f      	bcs.n	8017ee0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017ec0:	f854 1b04 	ldr.w	r1, [r4], #4
 8017ec4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017ec8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017ecc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017ed0:	ea42 0209 	orr.w	r2, r2, r9
 8017ed4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017ed8:	430a      	orrs	r2, r1
 8017eda:	f820 2b02 	strh.w	r2, [r0], #2
 8017ede:	e7ed      	b.n	8017ebc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017ee0:	8832      	ldrh	r2, [r6, #0]
 8017ee2:	1bd2      	subs	r2, r2, r7
 8017ee4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ee8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017eec:	1bd2      	subs	r2, r2, r7
 8017eee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017ef2:	e7df      	b.n	8017eb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017ef4:	6828      	ldr	r0, [r5, #0]
 8017ef6:	6803      	ldr	r3, [r0, #0]
 8017ef8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017efa:	4798      	blx	r3
 8017efc:	b005      	add	sp, #20
 8017efe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017f02:	bf00      	nop
 8017f04:	20002230 	.word	0x20002230
 8017f08:	2000222a 	.word	0x2000222a
 8017f0c:	fffff800 	.word	0xfffff800

08017f10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017f10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017f14:	460e      	mov	r6, r1
 8017f16:	4604      	mov	r4, r0
 8017f18:	461d      	mov	r5, r3
 8017f1a:	b08e      	sub	sp, #56	@ 0x38
 8017f1c:	6808      	ldr	r0, [r1, #0]
 8017f1e:	6849      	ldr	r1, [r1, #4]
 8017f20:	ab0a      	add	r3, sp, #40	@ 0x28
 8017f22:	c303      	stmia	r3!, {r0, r1}
 8017f24:	6810      	ldr	r0, [r2, #0]
 8017f26:	6851      	ldr	r1, [r2, #4]
 8017f28:	ab0c      	add	r3, sp, #48	@ 0x30
 8017f2a:	c303      	stmia	r3!, {r0, r1}
 8017f2c:	a80a      	add	r0, sp, #40	@ 0x28
 8017f2e:	f7f7 fa3f 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f32:	4631      	mov	r1, r6
 8017f34:	a80c      	add	r0, sp, #48	@ 0x30
 8017f36:	f7f7 fa63 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f3a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017f3e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017f42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017f46:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 80180f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017f4a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017f4e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017f52:	440c      	add	r4, r1
 8017f54:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017f58:	f8d8 0000 	ldr.w	r0, [r8]
 8017f5c:	440a      	add	r2, r1
 8017f5e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017f62:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017f66:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8017f6a:	4413      	add	r3, r2
 8017f6c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017f70:	6803      	ldr	r3, [r0, #0]
 8017f72:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017f76:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017f78:	4798      	blx	r3
 8017f7a:	2dff      	cmp	r5, #255	@ 0xff
 8017f7c:	f8df 917c 	ldr.w	r9, [pc, #380]	@ 80180fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017f80:	d124      	bne.n	8017fcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017f82:	f010 0f01 	tst.w	r0, #1
 8017f86:	f8d8 0000 	ldr.w	r0, [r8]
 8017f8a:	d022      	beq.n	8017fd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017f8c:	2100      	movs	r1, #0
 8017f8e:	f04f 0e01 	mov.w	lr, #1
 8017f92:	f8d0 c000 	ldr.w	ip, [r0]
 8017f96:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017f9a:	f8cd e018 	str.w	lr, [sp, #24]
 8017f9e:	f8b9 e000 	ldrh.w	lr, [r9]
 8017fa2:	b2b6      	uxth	r6, r6
 8017fa4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017fa8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017fac:	b2bf      	uxth	r7, r7
 8017fae:	9102      	str	r1, [sp, #8]
 8017fb0:	9503      	str	r5, [sp, #12]
 8017fb2:	9601      	str	r6, [sp, #4]
 8017fb4:	9700      	str	r7, [sp, #0]
 8017fb6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017fba:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017fbe:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8017fc2:	4621      	mov	r1, r4
 8017fc4:	47a8      	blx	r5
 8017fc6:	b00e      	add	sp, #56	@ 0x38
 8017fc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017fcc:	f010 0f04 	tst.w	r0, #4
 8017fd0:	e7d9      	b.n	8017f86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017fd2:	6803      	ldr	r3, [r0, #0]
 8017fd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017fd6:	4798      	blx	r3
 8017fd8:	f8b9 3000 	ldrh.w	r3, [r9]
 8017fdc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017fe0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017fe4:	435e      	muls	r6, r3
 8017fe6:	fb03 1202 	mla	r2, r3, r2, r1
 8017fea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017fee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017ff2:	ebac 0c07 	sub.w	ip, ip, r7
 8017ff6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017ffa:	2dff      	cmp	r5, #255	@ 0xff
 8017ffc:	eba3 0707 	sub.w	r7, r3, r7
 8018000:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018004:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018008:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801800c:	d049      	beq.n	80180a2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801800e:	43eb      	mvns	r3, r5
 8018010:	fa1f f985 	uxth.w	r9, r5
 8018014:	b2db      	uxtb	r3, r3
 8018016:	42b0      	cmp	r0, r6
 8018018:	d266      	bcs.n	80180e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801801a:	eb00 0a0e 	add.w	sl, r0, lr
 801801e:	4550      	cmp	r0, sl
 8018020:	4621      	mov	r1, r4
 8018022:	f104 0403 	add.w	r4, r4, #3
 8018026:	d25b      	bcs.n	80180e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018028:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801802c:	8802      	ldrh	r2, [r0, #0]
 801802e:	fb11 f109 	smulbb	r1, r1, r9
 8018032:	ea4f 2822 	mov.w	r8, r2, asr #8
 8018036:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801803a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801803e:	fb08 1803 	mla	r8, r8, r3, r1
 8018042:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018046:	10d5      	asrs	r5, r2, #3
 8018048:	fb11 f109 	smulbb	r1, r1, r9
 801804c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018050:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018054:	fb05 1503 	mla	r5, r5, r3, r1
 8018058:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801805c:	00d2      	lsls	r2, r2, #3
 801805e:	fb11 f109 	smulbb	r1, r1, r9
 8018062:	b2d2      	uxtb	r2, r2
 8018064:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018068:	fb02 1203 	mla	r2, r2, r3, r1
 801806c:	fa1f f888 	uxth.w	r8, r8
 8018070:	b292      	uxth	r2, r2
 8018072:	f108 0101 	add.w	r1, r8, #1
 8018076:	b2ad      	uxth	r5, r5
 8018078:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801807c:	1c51      	adds	r1, r2, #1
 801807e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018082:	1c69      	adds	r1, r5, #1
 8018084:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018088:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801808c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018090:	096d      	lsrs	r5, r5, #5
 8018092:	ea42 0208 	orr.w	r2, r2, r8
 8018096:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801809a:	432a      	orrs	r2, r5
 801809c:	f820 2b02 	strh.w	r2, [r0], #2
 80180a0:	e7bd      	b.n	801801e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80180a2:	4a14      	ldr	r2, [pc, #80]	@ (80180f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80180a4:	42b0      	cmp	r0, r6
 80180a6:	d21f      	bcs.n	80180e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80180a8:	eb00 050e 	add.w	r5, r0, lr
 80180ac:	42a8      	cmp	r0, r5
 80180ae:	4621      	mov	r1, r4
 80180b0:	f104 0403 	add.w	r4, r4, #3
 80180b4:	d210      	bcs.n	80180d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80180b6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80180ba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80180be:	00db      	lsls	r3, r3, #3
 80180c0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80180c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80180c8:	430b      	orrs	r3, r1
 80180ca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80180ce:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80180d2:	f820 3b02 	strh.w	r3, [r0], #2
 80180d6:	e7e9      	b.n	80180ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80180d8:	4438      	add	r0, r7
 80180da:	eb01 040c 	add.w	r4, r1, ip
 80180de:	e7e1      	b.n	80180a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80180e0:	4438      	add	r0, r7
 80180e2:	eb01 040c 	add.w	r4, r1, ip
 80180e6:	e796      	b.n	8018016 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80180e8:	4b03      	ldr	r3, [pc, #12]	@ (80180f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80180ea:	6818      	ldr	r0, [r3, #0]
 80180ec:	6803      	ldr	r3, [r0, #0]
 80180ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80180f0:	4798      	blx	r3
 80180f2:	e768      	b.n	8017fc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80180f4:	fffff800 	.word	0xfffff800
 80180f8:	20002230 	.word	0x20002230
 80180fc:	2000222a 	.word	0x2000222a

08018100 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018100:	b4f0      	push	{r4, r5, r6, r7}
 8018102:	4616      	mov	r6, r2
 8018104:	2e01      	cmp	r6, #1
 8018106:	461c      	mov	r4, r3
 8018108:	460d      	mov	r5, r1
 801810a:	9a04      	ldr	r2, [sp, #16]
 801810c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018110:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018114:	d012      	beq.n	801813c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8018116:	d303      	bcc.n	8018120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018118:	2e02      	cmp	r6, #2
 801811a:	d00a      	beq.n	8018132 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801811c:	bcf0      	pop	{r4, r5, r6, r7}
 801811e:	4770      	bx	lr
 8018120:	6805      	ldr	r5, [r0, #0]
 8018122:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018126:	68ed      	ldr	r5, [r5, #12]
 8018128:	4613      	mov	r3, r2
 801812a:	46ac      	mov	ip, r5
 801812c:	4622      	mov	r2, r4
 801812e:	bcf0      	pop	{r4, r5, r6, r7}
 8018130:	4760      	bx	ip
 8018132:	4621      	mov	r1, r4
 8018134:	4628      	mov	r0, r5
 8018136:	bcf0      	pop	{r4, r5, r6, r7}
 8018138:	f7ff bd94 	b.w	8017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801813c:	4621      	mov	r1, r4
 801813e:	4628      	mov	r0, r5
 8018140:	bcf0      	pop	{r4, r5, r6, r7}
 8018142:	f7ff bee5 	b.w	8017f10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018148 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801814c:	4616      	mov	r6, r2
 801814e:	4681      	mov	r9, r0
 8018150:	b093      	sub	sp, #76	@ 0x4c
 8018152:	6810      	ldr	r0, [r2, #0]
 8018154:	4688      	mov	r8, r1
 8018156:	6851      	ldr	r1, [r2, #4]
 8018158:	ac0e      	add	r4, sp, #56	@ 0x38
 801815a:	c403      	stmia	r4!, {r0, r1}
 801815c:	6818      	ldr	r0, [r3, #0]
 801815e:	6859      	ldr	r1, [r3, #4]
 8018160:	ac10      	add	r4, sp, #64	@ 0x40
 8018162:	c403      	stmia	r4!, {r0, r1}
 8018164:	a80e      	add	r0, sp, #56	@ 0x38
 8018166:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801816a:	f7f7 f921 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801816e:	4631      	mov	r1, r6
 8018170:	a810      	add	r0, sp, #64	@ 0x40
 8018172:	f7f7 f945 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018176:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801817a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801817e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018182:	4e62      	ldr	r6, [pc, #392]	@ (801830c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018184:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018188:	4489      	add	r9, r1
 801818a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801818e:	6830      	ldr	r0, [r6, #0]
 8018190:	440a      	add	r2, r1
 8018192:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018196:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801819a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801819e:	4413      	add	r3, r2
 80181a0:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80181a4:	6803      	ldr	r3, [r0, #0]
 80181a6:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80181aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80181ac:	4798      	blx	r3
 80181ae:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80181b2:	4f57      	ldr	r7, [pc, #348]	@ (8018310 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80181b4:	6830      	ldr	r0, [r6, #0]
 80181b6:	d01d      	beq.n	80181f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80181b8:	2200      	movs	r2, #0
 80181ba:	6801      	ldr	r1, [r0, #0]
 80181bc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80181c0:	220b      	movs	r2, #11
 80181c2:	9207      	str	r2, [sp, #28]
 80181c4:	883a      	ldrh	r2, [r7, #0]
 80181c6:	b2a4      	uxth	r4, r4
 80181c8:	9206      	str	r2, [sp, #24]
 80181ca:	2201      	movs	r2, #1
 80181cc:	e9cd a204 	strd	sl, r2, [sp, #16]
 80181d0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80181d4:	b2ad      	uxth	r5, r5
 80181d6:	9203      	str	r2, [sp, #12]
 80181d8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80181dc:	9502      	str	r5, [sp, #8]
 80181de:	9200      	str	r2, [sp, #0]
 80181e0:	9401      	str	r4, [sp, #4]
 80181e2:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 80181e4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80181e8:	4642      	mov	r2, r8
 80181ea:	4649      	mov	r1, r9
 80181ec:	47a0      	blx	r4
 80181ee:	b013      	add	sp, #76	@ 0x4c
 80181f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181f4:	6803      	ldr	r3, [r0, #0]
 80181f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181f8:	4798      	blx	r3
 80181fa:	f04f 0e04 	mov.w	lr, #4
 80181fe:	883b      	ldrh	r3, [r7, #0]
 8018200:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018204:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018208:	435d      	muls	r5, r3
 801820a:	fb03 1202 	mla	r2, r3, r2, r1
 801820e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018212:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018216:	920c      	str	r2, [sp, #48]	@ 0x30
 8018218:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801821c:	1b12      	subs	r2, r2, r4
 801821e:	920d      	str	r2, [sp, #52]	@ 0x34
 8018220:	0062      	lsls	r2, r4, #1
 8018222:	1b1c      	subs	r4, r3, r4
 8018224:	0063      	lsls	r3, r4, #1
 8018226:	920a      	str	r2, [sp, #40]	@ 0x28
 8018228:	930b      	str	r3, [sp, #44]	@ 0x2c
 801822a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801822c:	4298      	cmp	r0, r3
 801822e:	d266      	bcs.n	80182fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018230:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018232:	eb00 0b03 	add.w	fp, r0, r3
 8018236:	4558      	cmp	r0, fp
 8018238:	d25c      	bcs.n	80182f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801823a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801823e:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018242:	f858 2003 	ldr.w	r2, [r8, r3]
 8018246:	0e11      	lsrs	r1, r2, #24
 8018248:	d012      	beq.n	8018270 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801824a:	29ff      	cmp	r1, #255	@ 0xff
 801824c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018250:	d110      	bne.n	8018274 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018252:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018256:	d10d      	bne.n	8018274 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018258:	0953      	lsrs	r3, r2, #5
 801825a:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801825e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018262:	f027 0707 	bic.w	r7, r7, #7
 8018266:	431f      	orrs	r7, r3
 8018268:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801826c:	433a      	orrs	r2, r7
 801826e:	8002      	strh	r2, [r0, #0]
 8018270:	3002      	adds	r0, #2
 8018272:	e7e0      	b.n	8018236 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018274:	fb0a f101 	mul.w	r1, sl, r1
 8018278:	1c4b      	adds	r3, r1, #1
 801827a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801827e:	121b      	asrs	r3, r3, #8
 8018280:	b299      	uxth	r1, r3
 8018282:	43db      	mvns	r3, r3
 8018284:	8806      	ldrh	r6, [r0, #0]
 8018286:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801828a:	b2d2      	uxtb	r2, r2
 801828c:	fb1c fc01 	smulbb	ip, ip, r1
 8018290:	fb12 f201 	smulbb	r2, r2, r1
 8018294:	1235      	asrs	r5, r6, #8
 8018296:	10f4      	asrs	r4, r6, #3
 8018298:	00f6      	lsls	r6, r6, #3
 801829a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801829e:	b2f6      	uxtb	r6, r6
 80182a0:	b2ff      	uxtb	r7, r7
 80182a2:	b2db      	uxtb	r3, r3
 80182a4:	fb17 f701 	smulbb	r7, r7, r1
 80182a8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80182ac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80182b0:	fb05 c503 	mla	r5, r5, r3, ip
 80182b4:	fb06 2203 	mla	r2, r6, r3, r2
 80182b8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80182bc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80182c0:	fb04 7403 	mla	r4, r4, r3, r7
 80182c4:	b2ad      	uxth	r5, r5
 80182c6:	b292      	uxth	r2, r2
 80182c8:	f105 0c01 	add.w	ip, r5, #1
 80182cc:	1c57      	adds	r7, r2, #1
 80182ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80182d2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80182d6:	b2a4      	uxth	r4, r4
 80182d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80182dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80182e0:	433d      	orrs	r5, r7
 80182e2:	1c67      	adds	r7, r4, #1
 80182e4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80182e8:	0964      	lsrs	r4, r4, #5
 80182ea:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80182ee:	4325      	orrs	r5, r4
 80182f0:	8005      	strh	r5, [r0, #0]
 80182f2:	e7bd      	b.n	8018270 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80182f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80182f6:	4418      	add	r0, r3
 80182f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80182fa:	4499      	add	r9, r3
 80182fc:	e795      	b.n	801822a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80182fe:	4b03      	ldr	r3, [pc, #12]	@ (801830c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018300:	6818      	ldr	r0, [r3, #0]
 8018302:	6803      	ldr	r3, [r0, #0]
 8018304:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018306:	4798      	blx	r3
 8018308:	e771      	b.n	80181ee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801830a:	bf00      	nop
 801830c:	20002230 	.word	0x20002230
 8018310:	2000222a 	.word	0x2000222a

08018314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018318:	b087      	sub	sp, #28
 801831a:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801831e:	4680      	mov	r8, r0
 8018320:	460d      	mov	r5, r1
 8018322:	4614      	mov	r4, r2
 8018324:	2e00      	cmp	r6, #0
 8018326:	f000 80b9 	beq.w	801849c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801832a:	6810      	ldr	r0, [r2, #0]
 801832c:	6851      	ldr	r1, [r2, #4]
 801832e:	af02      	add	r7, sp, #8
 8018330:	c703      	stmia	r7!, {r0, r1}
 8018332:	6818      	ldr	r0, [r3, #0]
 8018334:	6859      	ldr	r1, [r3, #4]
 8018336:	af04      	add	r7, sp, #16
 8018338:	c703      	stmia	r7!, {r0, r1}
 801833a:	a802      	add	r0, sp, #8
 801833c:	f7f7 f838 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018340:	4621      	mov	r1, r4
 8018342:	a804      	add	r0, sp, #16
 8018344:	f7f7 f85c 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018348:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801834c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018350:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018354:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018358:	fb14 2103 	smlabb	r1, r4, r3, r2
 801835c:	eb08 0401 	add.w	r4, r8, r1
 8018360:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018364:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018368:	440a      	add	r2, r1
 801836a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801836e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018372:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018376:	4413      	add	r3, r2
 8018378:	f8ad 3012 	strh.w	r3, [sp, #18]
 801837c:	4b49      	ldr	r3, [pc, #292]	@ (80184a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801837e:	6818      	ldr	r0, [r3, #0]
 8018380:	6803      	ldr	r3, [r0, #0]
 8018382:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018384:	4798      	blx	r3
 8018386:	4b48      	ldr	r3, [pc, #288]	@ (80184a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018388:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801838c:	881a      	ldrh	r2, [r3, #0]
 801838e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018392:	2eff      	cmp	r6, #255	@ 0xff
 8018394:	fb02 c101 	mla	r1, r2, r1, ip
 8018398:	fb02 f207 	mul.w	r2, r2, r7
 801839c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80183a0:	f105 0104 	add.w	r1, r5, #4
 80183a4:	461d      	mov	r5, r3
 80183a6:	d05a      	beq.n	801845e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80183a8:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 80183ac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80183b0:	b2b6      	uxth	r6, r6
 80183b2:	fa1f fe8e 	uxth.w	lr, lr
 80183b6:	9301      	str	r3, [sp, #4]
 80183b8:	4282      	cmp	r2, r0
 80183ba:	d96a      	bls.n	8018492 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80183bc:	eb00 0b0a 	add.w	fp, r0, sl
 80183c0:	4583      	cmp	fp, r0
 80183c2:	d940      	bls.n	8018446 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80183c4:	8805      	ldrh	r5, [r0, #0]
 80183c6:	f814 3b01 	ldrb.w	r3, [r4], #1
 80183ca:	122f      	asrs	r7, r5, #8
 80183cc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80183d0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80183d4:	fb17 f70e 	smulbb	r7, r7, lr
 80183d8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80183dc:	00ed      	lsls	r5, r5, #3
 80183de:	b2ed      	uxtb	r5, r5
 80183e0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80183e4:	fb15 f50e 	smulbb	r5, r5, lr
 80183e8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80183ec:	fb0c 7c06 	mla	ip, ip, r6, r7
 80183f0:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80183f4:	10df      	asrs	r7, r3, #3
 80183f6:	00db      	lsls	r3, r3, #3
 80183f8:	fb19 f90e 	smulbb	r9, r9, lr
 80183fc:	b2db      	uxtb	r3, r3
 80183fe:	fb03 5306 	mla	r3, r3, r6, r5
 8018402:	fa1f fc8c 	uxth.w	ip, ip
 8018406:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801840a:	fb07 9706 	mla	r7, r7, r6, r9
 801840e:	f10c 0901 	add.w	r9, ip, #1
 8018412:	b29b      	uxth	r3, r3
 8018414:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018418:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801841c:	f103 0c01 	add.w	ip, r3, #1
 8018420:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018424:	b2bf      	uxth	r7, r7
 8018426:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801842a:	ea4c 0c09 	orr.w	ip, ip, r9
 801842e:	f107 0901 	add.w	r9, r7, #1
 8018432:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018436:	097f      	lsrs	r7, r7, #5
 8018438:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801843c:	ea4c 0c07 	orr.w	ip, ip, r7
 8018440:	f820 cb02 	strh.w	ip, [r0], #2
 8018444:	e7bc      	b.n	80183c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018446:	9b01      	ldr	r3, [sp, #4]
 8018448:	881b      	ldrh	r3, [r3, #0]
 801844a:	eba3 0308 	sub.w	r3, r3, r8
 801844e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018452:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018456:	eba3 0308 	sub.w	r3, r3, r8
 801845a:	441c      	add	r4, r3
 801845c:	e7ac      	b.n	80183b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801845e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018462:	4282      	cmp	r2, r0
 8018464:	d915      	bls.n	8018492 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018466:	eb00 060a 	add.w	r6, r0, sl
 801846a:	4286      	cmp	r6, r0
 801846c:	d906      	bls.n	801847c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801846e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018472:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018476:	f820 3b02 	strh.w	r3, [r0], #2
 801847a:	e7f6      	b.n	801846a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801847c:	882b      	ldrh	r3, [r5, #0]
 801847e:	eba3 0308 	sub.w	r3, r3, r8
 8018482:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018486:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801848a:	eba3 0308 	sub.w	r3, r3, r8
 801848e:	441c      	add	r4, r3
 8018490:	e7e7      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018492:	4b04      	ldr	r3, [pc, #16]	@ (80184a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018494:	6818      	ldr	r0, [r3, #0]
 8018496:	6803      	ldr	r3, [r0, #0]
 8018498:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801849a:	4798      	blx	r3
 801849c:	b007      	add	sp, #28
 801849e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184a2:	bf00      	nop
 80184a4:	20002230 	.word	0x20002230
 80184a8:	2000222a 	.word	0x2000222a

080184ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80184ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184b0:	b091      	sub	sp, #68	@ 0x44
 80184b2:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80184b6:	4680      	mov	r8, r0
 80184b8:	460f      	mov	r7, r1
 80184ba:	4614      	mov	r4, r2
 80184bc:	2d00      	cmp	r5, #0
 80184be:	d051      	beq.n	8018564 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80184c0:	6810      	ldr	r0, [r2, #0]
 80184c2:	6851      	ldr	r1, [r2, #4]
 80184c4:	ae0c      	add	r6, sp, #48	@ 0x30
 80184c6:	c603      	stmia	r6!, {r0, r1}
 80184c8:	6818      	ldr	r0, [r3, #0]
 80184ca:	6859      	ldr	r1, [r3, #4]
 80184cc:	ae0e      	add	r6, sp, #56	@ 0x38
 80184ce:	c603      	stmia	r6!, {r0, r1}
 80184d0:	a80c      	add	r0, sp, #48	@ 0x30
 80184d2:	f7f6 ff6d 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184d6:	4621      	mov	r1, r4
 80184d8:	a80e      	add	r0, sp, #56	@ 0x38
 80184da:	f7f6 ff91 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184de:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80184e2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80184e6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80184ea:	f8df 91dc 	ldr.w	r9, [pc, #476]	@ 80186c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80184ee:	fb11 2103 	smlabb	r1, r1, r3, r2
 80184f2:	eb08 0401 	add.w	r4, r8, r1
 80184f6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80184fa:	f8d9 0000 	ldr.w	r0, [r9]
 80184fe:	440a      	add	r2, r1
 8018500:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018504:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018508:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801850c:	4413      	add	r3, r2
 801850e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018512:	6803      	ldr	r3, [r0, #0]
 8018514:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8018518:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801851a:	4798      	blx	r3
 801851c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018520:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 80186cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018524:	f8d9 0000 	ldr.w	r0, [r9]
 8018528:	d01f      	beq.n	801856a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801852a:	2200      	movs	r2, #0
 801852c:	6801      	ldr	r1, [r0, #0]
 801852e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018532:	220b      	movs	r2, #11
 8018534:	9207      	str	r2, [sp, #28]
 8018536:	f8b8 2000 	ldrh.w	r2, [r8]
 801853a:	b2b6      	uxth	r6, r6
 801853c:	9206      	str	r2, [sp, #24]
 801853e:	2201      	movs	r2, #1
 8018540:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018544:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018548:	9601      	str	r6, [sp, #4]
 801854a:	9203      	str	r2, [sp, #12]
 801854c:	fa1f f28a 	uxth.w	r2, sl
 8018550:	9202      	str	r2, [sp, #8]
 8018552:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018556:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801855a:	9200      	str	r2, [sp, #0]
 801855c:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 801855e:	463a      	mov	r2, r7
 8018560:	4621      	mov	r1, r4
 8018562:	47a8      	blx	r5
 8018564:	b011      	add	sp, #68	@ 0x44
 8018566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801856a:	6803      	ldr	r3, [r0, #0]
 801856c:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018572:	4798      	blx	r3
 8018574:	f8b8 2000 	ldrh.w	r2, [r8]
 8018578:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801857c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018580:	2dff      	cmp	r5, #255	@ 0xff
 8018582:	fb02 1303 	mla	r3, r2, r3, r1
 8018586:	fb0a fa02 	mul.w	sl, sl, r2
 801858a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801858e:	d062      	beq.n	8018656 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018590:	ea6f 0c05 	mvn.w	ip, r5
 8018594:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018598:	930a      	str	r3, [sp, #40]	@ 0x28
 801859a:	b2ad      	uxth	r5, r5
 801859c:	fa5f fc8c 	uxtb.w	ip, ip
 80185a0:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80185a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80185a6:	4298      	cmp	r0, r3
 80185a8:	f080 8085 	bcs.w	80186b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80185ac:	eb00 0b09 	add.w	fp, r0, r9
 80185b0:	4558      	cmp	r0, fp
 80185b2:	d246      	bcs.n	8018642 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80185b4:	2303      	movs	r3, #3
 80185b6:	2204      	movs	r2, #4
 80185b8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80185bc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80185c0:	eb07 0a0e 	add.w	sl, r7, lr
 80185c4:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80185c8:	8803      	ldrh	r3, [r0, #0]
 80185ca:	fb18 f805 	smulbb	r8, r8, r5
 80185ce:	1219      	asrs	r1, r3, #8
 80185d0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80185d4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80185d8:	fb01 810c 	mla	r1, r1, ip, r8
 80185dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80185e0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80185e4:	fb1e fe05 	smulbb	lr, lr, r5
 80185e8:	fb18 f805 	smulbb	r8, r8, r5
 80185ec:	10da      	asrs	r2, r3, #3
 80185ee:	00db      	lsls	r3, r3, #3
 80185f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80185f4:	b2db      	uxtb	r3, r3
 80185f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80185fa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80185fe:	fb02 820c 	mla	r2, r2, ip, r8
 8018602:	fb03 e30c 	mla	r3, r3, ip, lr
 8018606:	b289      	uxth	r1, r1
 8018608:	b292      	uxth	r2, r2
 801860a:	b29b      	uxth	r3, r3
 801860c:	f101 0801 	add.w	r8, r1, #1
 8018610:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018614:	f103 0e01 	add.w	lr, r3, #1
 8018618:	f102 0801 	add.w	r8, r2, #1
 801861c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018620:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018624:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018628:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801862c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018630:	ea4e 0101 	orr.w	r1, lr, r1
 8018634:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018638:	ea41 0108 	orr.w	r1, r1, r8
 801863c:	f820 1b02 	strh.w	r1, [r0], #2
 8018640:	e7b6      	b.n	80185b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018642:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018644:	881b      	ldrh	r3, [r3, #0]
 8018646:	1b9b      	subs	r3, r3, r6
 8018648:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801864c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018650:	1b9b      	subs	r3, r3, r6
 8018652:	441c      	add	r4, r3
 8018654:	e7a6      	b.n	80185a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018656:	2203      	movs	r2, #3
 8018658:	2504      	movs	r5, #4
 801865a:	491a      	ldr	r1, [pc, #104]	@ (80186c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801865c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018660:	4550      	cmp	r0, sl
 8018662:	d228      	bcs.n	80186b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018664:	eb00 0c09 	add.w	ip, r0, r9
 8018668:	4560      	cmp	r0, ip
 801866a:	4623      	mov	r3, r4
 801866c:	d219      	bcs.n	80186a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801866e:	f893 e000 	ldrb.w	lr, [r3]
 8018672:	3401      	adds	r4, #1
 8018674:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018678:	eb07 0b0e 	add.w	fp, r7, lr
 801867c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018680:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018684:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018688:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801868c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018690:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018694:	ea43 030b 	orr.w	r3, r3, fp
 8018698:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801869c:	f820 3b02 	strh.w	r3, [r0], #2
 80186a0:	e7e2      	b.n	8018668 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80186a2:	f8b8 3000 	ldrh.w	r3, [r8]
 80186a6:	1b9b      	subs	r3, r3, r6
 80186a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80186ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80186b0:	1b9b      	subs	r3, r3, r6
 80186b2:	441c      	add	r4, r3
 80186b4:	e7d4      	b.n	8018660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80186b6:	4b04      	ldr	r3, [pc, #16]	@ (80186c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80186b8:	6818      	ldr	r0, [r3, #0]
 80186ba:	6803      	ldr	r3, [r0, #0]
 80186bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80186be:	4798      	blx	r3
 80186c0:	e750      	b.n	8018564 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80186c2:	bf00      	nop
 80186c4:	fffff800 	.word	0xfffff800
 80186c8:	20002230 	.word	0x20002230
 80186cc:	2000222a 	.word	0x2000222a

080186d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80186d0:	b4f0      	push	{r4, r5, r6, r7}
 80186d2:	460c      	mov	r4, r1
 80186d4:	4611      	mov	r1, r2
 80186d6:	780f      	ldrb	r7, [r1, #0]
 80186d8:	461a      	mov	r2, r3
 80186da:	2f01      	cmp	r7, #1
 80186dc:	9b04      	ldr	r3, [sp, #16]
 80186de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80186e2:	784e      	ldrb	r6, [r1, #1]
 80186e4:	d038      	beq.n	8018758 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80186e6:	d31f      	bcc.n	8018728 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80186e8:	2f02      	cmp	r7, #2
 80186ea:	d14d      	bne.n	8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186ec:	2e03      	cmp	r6, #3
 80186ee:	d84b      	bhi.n	8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80186f0:	e8df f006 	tbb	[pc, r6]
 80186f4:	17140702 	.word	0x17140702
 80186f8:	9504      	str	r5, [sp, #16]
 80186fa:	4620      	mov	r0, r4
 80186fc:	bcf0      	pop	{r4, r5, r6, r7}
 80186fe:	f7ff be09 	b.w	8018314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018702:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018704:	2800      	cmp	r0, #0
 8018706:	d03f      	beq.n	8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018708:	6806      	ldr	r6, [r0, #0]
 801870a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801870e:	68b5      	ldr	r5, [r6, #8]
 8018710:	4613      	mov	r3, r2
 8018712:	46ac      	mov	ip, r5
 8018714:	460a      	mov	r2, r1
 8018716:	4621      	mov	r1, r4
 8018718:	bcf0      	pop	{r4, r5, r6, r7}
 801871a:	4760      	bx	ip
 801871c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018720:	e7f0      	b.n	8018704 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018722:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018726:	e7ed      	b.n	8018704 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018728:	2e03      	cmp	r6, #3
 801872a:	d82d      	bhi.n	8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801872c:	e8df f006 	tbb	[pc, r6]
 8018730:	110e0702 	.word	0x110e0702
 8018734:	9504      	str	r5, [sp, #16]
 8018736:	4620      	mov	r0, r4
 8018738:	bcf0      	pop	{r4, r5, r6, r7}
 801873a:	f7ff bd05 	b.w	8018148 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801873e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018740:	b310      	cbz	r0, 8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018742:	6806      	ldr	r6, [r0, #0]
 8018744:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018748:	68f5      	ldr	r5, [r6, #12]
 801874a:	e7e1      	b.n	8018710 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801874c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018750:	e7f6      	b.n	8018740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018752:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018756:	e7f3      	b.n	8018740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018758:	2e03      	cmp	r6, #3
 801875a:	d815      	bhi.n	8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801875c:	e8df f006 	tbb	[pc, r6]
 8018760:	110e0702 	.word	0x110e0702
 8018764:	9504      	str	r5, [sp, #16]
 8018766:	4620      	mov	r0, r4
 8018768:	bcf0      	pop	{r4, r5, r6, r7}
 801876a:	f7ff be9f 	b.w	80184ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801876e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018770:	b150      	cbz	r0, 8018788 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018772:	6806      	ldr	r6, [r0, #0]
 8018774:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018778:	6935      	ldr	r5, [r6, #16]
 801877a:	e7c9      	b.n	8018710 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801877c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8018780:	e7f6      	b.n	8018770 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018782:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018786:	e7f3      	b.n	8018770 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8018788:	bcf0      	pop	{r4, r5, r6, r7}
 801878a:	4770      	bx	lr

0801878c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801878c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018790:	4617      	mov	r7, r2
 8018792:	4604      	mov	r4, r0
 8018794:	460e      	mov	r6, r1
 8018796:	b087      	sub	sp, #28
 8018798:	6810      	ldr	r0, [r2, #0]
 801879a:	6851      	ldr	r1, [r2, #4]
 801879c:	ad02      	add	r5, sp, #8
 801879e:	c503      	stmia	r5!, {r0, r1}
 80187a0:	6818      	ldr	r0, [r3, #0]
 80187a2:	6859      	ldr	r1, [r3, #4]
 80187a4:	ad04      	add	r5, sp, #16
 80187a6:	c503      	stmia	r5!, {r0, r1}
 80187a8:	a802      	add	r0, sp, #8
 80187aa:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80187ae:	f7f6 fdff 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80187b2:	4639      	mov	r1, r7
 80187b4:	a804      	add	r0, sp, #16
 80187b6:	f7f6 fe23 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80187ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80187be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80187c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80187c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80187ca:	fb11 2103 	smlabb	r1, r1, r3, r2
 80187ce:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80187d2:	440e      	add	r6, r1
 80187d4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80187d8:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80187dc:	440a      	add	r2, r1
 80187de:	f8ad 2010 	strh.w	r2, [sp, #16]
 80187e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80187e6:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 80189d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80187ea:	4413      	add	r3, r2
 80187ec:	f8ad 3012 	strh.w	r3, [sp, #18]
 80187f0:	4b77      	ldr	r3, [pc, #476]	@ (80189d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80187f2:	6818      	ldr	r0, [r3, #0]
 80187f4:	6803      	ldr	r3, [r0, #0]
 80187f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80187f8:	4798      	blx	r3
 80187fa:	f8b9 b000 	ldrh.w	fp, [r9]
 80187fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018802:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018806:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801880a:	fb0b 2303 	mla	r3, fp, r3, r2
 801880e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018812:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018816:	fb05 f50b 	mul.w	r5, r5, fp
 801881a:	9300      	str	r3, [sp, #0]
 801881c:	d069      	beq.n	80188f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801881e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018822:	4558      	cmp	r0, fp
 8018824:	f080 80cc 	bcs.w	80189c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018828:	4631      	mov	r1, r6
 801882a:	9b00      	ldr	r3, [sp, #0]
 801882c:	18c3      	adds	r3, r0, r3
 801882e:	9301      	str	r3, [sp, #4]
 8018830:	9b01      	ldr	r3, [sp, #4]
 8018832:	4298      	cmp	r0, r3
 8018834:	d24f      	bcs.n	80188d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018836:	f811 2b01 	ldrb.w	r2, [r1], #1
 801883a:	2a00      	cmp	r2, #0
 801883c:	d048      	beq.n	80188d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801883e:	fb0a f202 	mul.w	r2, sl, r2
 8018842:	1c53      	adds	r3, r2, #1
 8018844:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018848:	121b      	asrs	r3, r3, #8
 801884a:	d041      	beq.n	80188d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801884c:	b29e      	uxth	r6, r3
 801884e:	43db      	mvns	r3, r3
 8018850:	8802      	ldrh	r2, [r0, #0]
 8018852:	b2db      	uxtb	r3, r3
 8018854:	1215      	asrs	r5, r2, #8
 8018856:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801885a:	f8b4 c000 	ldrh.w	ip, [r4]
 801885e:	fb15 f503 	smulbb	r5, r5, r3
 8018862:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018866:	00d2      	lsls	r2, r2, #3
 8018868:	b2d2      	uxtb	r2, r2
 801886a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801886e:	fb12 f203 	smulbb	r2, r2, r3
 8018872:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018876:	fb07 5706 	mla	r7, r7, r6, r5
 801887a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801887e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018882:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018886:	fb1e fe03 	smulbb	lr, lr, r3
 801888a:	fa5f fc8c 	uxtb.w	ip, ip
 801888e:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018892:	b2bf      	uxth	r7, r7
 8018894:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018898:	fb05 e506 	mla	r5, r5, r6, lr
 801889c:	f107 0e01 	add.w	lr, r7, #1
 80188a0:	fa1f fc8c 	uxth.w	ip, ip
 80188a4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80188a8:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80188ac:	f10c 0701 	add.w	r7, ip, #1
 80188b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80188b4:	b2ad      	uxth	r5, r5
 80188b6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80188ba:	ea47 070e 	orr.w	r7, r7, lr
 80188be:	f105 0e01 	add.w	lr, r5, #1
 80188c2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80188c6:	096d      	lsrs	r5, r5, #5
 80188c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80188cc:	432f      	orrs	r7, r5
 80188ce:	8007      	strh	r7, [r0, #0]
 80188d0:	3002      	adds	r0, #2
 80188d2:	3402      	adds	r4, #2
 80188d4:	e7ac      	b.n	8018830 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80188d6:	f8b9 3000 	ldrh.w	r3, [r9]
 80188da:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80188de:	eba3 0308 	sub.w	r3, r3, r8
 80188e2:	eba6 0608 	sub.w	r6, r6, r8
 80188e6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80188ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188ee:	440e      	add	r6, r1
 80188f0:	e797      	b.n	8018822 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80188f2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80188f6:	42a8      	cmp	r0, r5
 80188f8:	d262      	bcs.n	80189c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80188fa:	4631      	mov	r1, r6
 80188fc:	9b00      	ldr	r3, [sp, #0]
 80188fe:	eb00 0b03 	add.w	fp, r0, r3
 8018902:	4558      	cmp	r0, fp
 8018904:	d24e      	bcs.n	80189a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018906:	f811 3b01 	ldrb.w	r3, [r1], #1
 801890a:	b12b      	cbz	r3, 8018918 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801890c:	2bff      	cmp	r3, #255	@ 0xff
 801890e:	f8b4 e000 	ldrh.w	lr, [r4]
 8018912:	d104      	bne.n	801891e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018914:	f8a0 e000 	strh.w	lr, [r0]
 8018918:	3002      	adds	r0, #2
 801891a:	3402      	adds	r4, #2
 801891c:	e7f1      	b.n	8018902 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801891e:	b29f      	uxth	r7, r3
 8018920:	43db      	mvns	r3, r3
 8018922:	8802      	ldrh	r2, [r0, #0]
 8018924:	b2db      	uxtb	r3, r3
 8018926:	1216      	asrs	r6, r2, #8
 8018928:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801892c:	fb16 f603 	smulbb	r6, r6, r3
 8018930:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018934:	00d2      	lsls	r2, r2, #3
 8018936:	b2d2      	uxtb	r2, r2
 8018938:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801893c:	fb1a fa03 	smulbb	sl, sl, r3
 8018940:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018944:	fb12 f303 	smulbb	r3, r2, r3
 8018948:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801894c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018950:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018954:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018958:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801895c:	fa5f fe8e 	uxtb.w	lr, lr
 8018960:	fb06 a607 	mla	r6, r6, r7, sl
 8018964:	fb0e 3307 	mla	r3, lr, r7, r3
 8018968:	fa1f fc8c 	uxth.w	ip, ip
 801896c:	f10c 0201 	add.w	r2, ip, #1
 8018970:	b2b6      	uxth	r6, r6
 8018972:	b29b      	uxth	r3, r3
 8018974:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018978:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801897c:	f106 0a01 	add.w	sl, r6, #1
 8018980:	f103 0c01 	add.w	ip, r3, #1
 8018984:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018988:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801898c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018990:	0976      	lsrs	r6, r6, #5
 8018992:	ea4c 0c02 	orr.w	ip, ip, r2
 8018996:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801899a:	ea4c 0c06 	orr.w	ip, ip, r6
 801899e:	f8a0 c000 	strh.w	ip, [r0]
 80189a2:	e7b9      	b.n	8018918 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80189a4:	f8b9 3000 	ldrh.w	r3, [r9]
 80189a8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80189ac:	eba3 0308 	sub.w	r3, r3, r8
 80189b0:	eba6 0608 	sub.w	r6, r6, r8
 80189b4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80189b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80189bc:	440e      	add	r6, r1
 80189be:	e79a      	b.n	80188f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80189c0:	4b03      	ldr	r3, [pc, #12]	@ (80189d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80189c2:	6818      	ldr	r0, [r3, #0]
 80189c4:	6803      	ldr	r3, [r0, #0]
 80189c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80189c8:	4798      	blx	r3
 80189ca:	b007      	add	sp, #28
 80189cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189d0:	20002230 	.word	0x20002230
 80189d4:	2000222a 	.word	0x2000222a

080189d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80189d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189dc:	b089      	sub	sp, #36	@ 0x24
 80189de:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 80189e2:	4607      	mov	r7, r0
 80189e4:	4688      	mov	r8, r1
 80189e6:	4692      	mov	sl, r2
 80189e8:	4699      	mov	r9, r3
 80189ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80189ec:	2e00      	cmp	r6, #0
 80189ee:	d048      	beq.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80189f0:	4608      	mov	r0, r1
 80189f2:	f7fa f823 	bl	8012a3c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80189f6:	4605      	mov	r5, r0
 80189f8:	4640      	mov	r0, r8
 80189fa:	f7fa f853 	bl	8012aa4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80189fe:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018a02:	4640      	mov	r0, r8
 8018a04:	f8ad a008 	strh.w	sl, [sp, #8]
 8018a08:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018a0c:	f8ad 900a 	strh.w	r9, [sp, #10]
 8018a10:	f7fa f906 	bl	8012c20 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018a14:	4605      	mov	r5, r0
 8018a16:	4640      	mov	r0, r8
 8018a18:	f7fa f932 	bl	8012c80 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018a1c:	4682      	mov	sl, r0
 8018a1e:	4640      	mov	r0, r8
 8018a20:	f7fa f982 	bl	8012d28 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018a24:	2810      	cmp	r0, #16
 8018a26:	d82c      	bhi.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018a28:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018a2c:	00ba00ca 	.word	0x00ba00ca
 8018a30:	002b0011 	.word	0x002b0011
 8018a34:	002b002b 	.word	0x002b002b
 8018a38:	002b002b 	.word	0x002b002b
 8018a3c:	002b002b 	.word	0x002b002b
 8018a40:	00c1002b 	.word	0x00c1002b
 8018a44:	002b002b 	.word	0x002b002b
 8018a48:	002b0180 	.word	0x002b0180
 8018a4c:	0173      	.short	0x0173
 8018a4e:	4bbc      	ldr	r3, [pc, #752]	@ (8018d40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8018a50:	6818      	ldr	r0, [r3, #0]
 8018a52:	6803      	ldr	r3, [r0, #0]
 8018a54:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018a56:	4798      	blx	r3
 8018a58:	2eff      	cmp	r6, #255	@ 0xff
 8018a5a:	d101      	bne.n	8018a60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018a5c:	0683      	lsls	r3, r0, #26
 8018a5e:	d506      	bpl.n	8018a6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8018a60:	4633      	mov	r3, r6
 8018a62:	4622      	mov	r2, r4
 8018a64:	a902      	add	r1, sp, #8
 8018a66:	4628      	mov	r0, r5
 8018a68:	f7ff f8fc 	bl	8017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a6c:	e009      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018a6e:	4640      	mov	r0, r8
 8018a70:	f7fa f89e 	bl	8012bb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018a74:	b940      	cbnz	r0, 8018a88 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8018a76:	4623      	mov	r3, r4
 8018a78:	aa02      	add	r2, sp, #8
 8018a7a:	4629      	mov	r1, r5
 8018a7c:	4638      	mov	r0, r7
 8018a7e:	f7ff f9d7 	bl	8017e30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a82:	b009      	add	sp, #36	@ 0x24
 8018a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a88:	f10d 0918 	add.w	r9, sp, #24
 8018a8c:	4641      	mov	r1, r8
 8018a8e:	4648      	mov	r0, r9
 8018a90:	f10d 0810 	add.w	r8, sp, #16
 8018a94:	f7fa f83a 	bl	8012b0c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018a98:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018a9c:	e888 0003 	stmia.w	r8, {r0, r1}
 8018aa0:	4640      	mov	r0, r8
 8018aa2:	4621      	mov	r1, r4
 8018aa4:	f7f3 fcce 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8018aa8:	4640      	mov	r0, r8
 8018aaa:	f7f3 fd0e 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8018aae:	2800      	cmp	r0, #0
 8018ab0:	d1d6      	bne.n	8018a60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018ab2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018ab6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018aba:	4293      	cmp	r3, r2
 8018abc:	dd12      	ble.n	8018ae4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8018abe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018ac2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018ac6:	1a9b      	subs	r3, r3, r2
 8018ac8:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018acc:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018ad0:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018ad4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018ad8:	464a      	mov	r2, r9
 8018ada:	4633      	mov	r3, r6
 8018adc:	a902      	add	r1, sp, #8
 8018ade:	4628      	mov	r0, r5
 8018ae0:	f7ff f8c0 	bl	8017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018ae4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018ae8:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018aec:	4293      	cmp	r3, r2
 8018aee:	dd12      	ble.n	8018b16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8018af0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018af4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018af8:	1a9b      	subs	r3, r3, r2
 8018afa:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018afe:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018b02:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b06:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018b0a:	23ff      	movs	r3, #255	@ 0xff
 8018b0c:	464a      	mov	r2, r9
 8018b0e:	a902      	add	r1, sp, #8
 8018b10:	4628      	mov	r0, r5
 8018b12:	f7ff f8a7 	bl	8017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b16:	4643      	mov	r3, r8
 8018b18:	aa02      	add	r2, sp, #8
 8018b1a:	4629      	mov	r1, r5
 8018b1c:	4638      	mov	r0, r7
 8018b1e:	f7ff f987 	bl	8017e30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018b22:	88a2      	ldrh	r2, [r4, #4]
 8018b24:	8823      	ldrh	r3, [r4, #0]
 8018b26:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018b2a:	4413      	add	r3, r2
 8018b2c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018b30:	b29b      	uxth	r3, r3
 8018b32:	440a      	add	r2, r1
 8018b34:	b292      	uxth	r2, r2
 8018b36:	b211      	sxth	r1, r2
 8018b38:	b218      	sxth	r0, r3
 8018b3a:	4288      	cmp	r0, r1
 8018b3c:	dd12      	ble.n	8018b64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8018b3e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018b42:	1a9b      	subs	r3, r3, r2
 8018b44:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018b48:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018b4c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b50:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018b54:	23ff      	movs	r3, #255	@ 0xff
 8018b56:	464a      	mov	r2, r9
 8018b58:	a902      	add	r1, sp, #8
 8018b5a:	4628      	mov	r0, r5
 8018b5c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018b60:	f7ff f880 	bl	8017c64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b64:	88e2      	ldrh	r2, [r4, #6]
 8018b66:	8863      	ldrh	r3, [r4, #2]
 8018b68:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018b6c:	4413      	add	r3, r2
 8018b6e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018b72:	b29b      	uxth	r3, r3
 8018b74:	440a      	add	r2, r1
 8018b76:	b292      	uxth	r2, r2
 8018b78:	b211      	sxth	r1, r2
 8018b7a:	b218      	sxth	r0, r3
 8018b7c:	4288      	cmp	r0, r1
 8018b7e:	dd80      	ble.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018b80:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018b84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018b88:	1a9b      	subs	r3, r3, r2
 8018b8a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b8e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018b92:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018b96:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018b9a:	23ff      	movs	r3, #255	@ 0xff
 8018b9c:	464a      	mov	r2, r9
 8018b9e:	e761      	b.n	8018a64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018ba0:	4633      	mov	r3, r6
 8018ba2:	4622      	mov	r2, r4
 8018ba4:	a902      	add	r1, sp, #8
 8018ba6:	4628      	mov	r0, r5
 8018ba8:	f7ff f9b2 	bl	8017f10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018bac:	e769      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018bae:	e9cd 4600 	strd	r4, r6, [sp]
 8018bb2:	ab02      	add	r3, sp, #8
 8018bb4:	4652      	mov	r2, sl
 8018bb6:	4629      	mov	r1, r5
 8018bb8:	4638      	mov	r0, r7
 8018bba:	f7ff fd89 	bl	80186d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018bbe:	e760      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018bc0:	4640      	mov	r0, r8
 8018bc2:	f7f9 fff5 	bl	8012bb0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018bc6:	b948      	cbnz	r0, 8018bdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018bc8:	683b      	ldr	r3, [r7, #0]
 8018bca:	e9cd 6000 	strd	r6, r0, [sp]
 8018bce:	aa02      	add	r2, sp, #8
 8018bd0:	68de      	ldr	r6, [r3, #12]
 8018bd2:	4629      	mov	r1, r5
 8018bd4:	4623      	mov	r3, r4
 8018bd6:	4638      	mov	r0, r7
 8018bd8:	47b0      	blx	r6
 8018bda:	e752      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018bdc:	f10d 0918 	add.w	r9, sp, #24
 8018be0:	4641      	mov	r1, r8
 8018be2:	4648      	mov	r0, r9
 8018be4:	f10d 0810 	add.w	r8, sp, #16
 8018be8:	f7f9 ff90 	bl	8012b0c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018bec:	e899 0003 	ldmia.w	r9, {r0, r1}
 8018bf0:	e888 0003 	stmia.w	r8, {r0, r1}
 8018bf4:	4640      	mov	r0, r8
 8018bf6:	4621      	mov	r1, r4
 8018bf8:	f7f3 fc24 	bl	800c444 <_ZN8touchgfx4RectaNERKS0_>
 8018bfc:	4640      	mov	r0, r8
 8018bfe:	f7f3 fc64 	bl	800c4ca <_ZNK8touchgfx4Rect7isEmptyEv>
 8018c02:	b138      	cbz	r0, 8018c14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018c04:	4623      	mov	r3, r4
 8018c06:	9600      	str	r6, [sp, #0]
 8018c08:	aa02      	add	r2, sp, #8
 8018c0a:	4651      	mov	r1, sl
 8018c0c:	4628      	mov	r0, r5
 8018c0e:	f7ff fdbd 	bl	801878c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c12:	e736      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018c14:	683b      	ldr	r3, [r7, #0]
 8018c16:	e9cd 6000 	strd	r6, r0, [sp]
 8018c1a:	aa02      	add	r2, sp, #8
 8018c1c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018c20:	4629      	mov	r1, r5
 8018c22:	4643      	mov	r3, r8
 8018c24:	4638      	mov	r0, r7
 8018c26:	47d8      	blx	fp
 8018c28:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018c2c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018c30:	4293      	cmp	r3, r2
 8018c32:	dd13      	ble.n	8018c5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018c34:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018c38:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018c3c:	1a9b      	subs	r3, r3, r2
 8018c3e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018c42:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018c46:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018c4a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018c4e:	9600      	str	r6, [sp, #0]
 8018c50:	464b      	mov	r3, r9
 8018c52:	aa02      	add	r2, sp, #8
 8018c54:	4651      	mov	r1, sl
 8018c56:	4628      	mov	r0, r5
 8018c58:	f7ff fd98 	bl	801878c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c5c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018c60:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018c64:	4293      	cmp	r3, r2
 8018c66:	dd13      	ble.n	8018c90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8018c68:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018c6c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018c70:	1a9b      	subs	r3, r3, r2
 8018c72:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018c76:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018c7a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018c7e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018c82:	9600      	str	r6, [sp, #0]
 8018c84:	464b      	mov	r3, r9
 8018c86:	aa02      	add	r2, sp, #8
 8018c88:	4651      	mov	r1, sl
 8018c8a:	4628      	mov	r0, r5
 8018c8c:	f7ff fd7e 	bl	801878c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c90:	88a2      	ldrh	r2, [r4, #4]
 8018c92:	8823      	ldrh	r3, [r4, #0]
 8018c94:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018c98:	4413      	add	r3, r2
 8018c9a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018c9e:	b29b      	uxth	r3, r3
 8018ca0:	440a      	add	r2, r1
 8018ca2:	b292      	uxth	r2, r2
 8018ca4:	b211      	sxth	r1, r2
 8018ca6:	b218      	sxth	r0, r3
 8018ca8:	4288      	cmp	r0, r1
 8018caa:	dd13      	ble.n	8018cd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8018cac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018cb0:	1a9b      	subs	r3, r3, r2
 8018cb2:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018cb6:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018cba:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018cbe:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018cc2:	9600      	str	r6, [sp, #0]
 8018cc4:	464b      	mov	r3, r9
 8018cc6:	aa02      	add	r2, sp, #8
 8018cc8:	4651      	mov	r1, sl
 8018cca:	4628      	mov	r0, r5
 8018ccc:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018cd0:	f7ff fd5c 	bl	801878c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018cd4:	88e2      	ldrh	r2, [r4, #6]
 8018cd6:	8863      	ldrh	r3, [r4, #2]
 8018cd8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018cdc:	4413      	add	r3, r2
 8018cde:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018ce2:	b29b      	uxth	r3, r3
 8018ce4:	440a      	add	r2, r1
 8018ce6:	b292      	uxth	r2, r2
 8018ce8:	b211      	sxth	r1, r2
 8018cea:	b218      	sxth	r0, r3
 8018cec:	4288      	cmp	r0, r1
 8018cee:	f77f aec8 	ble.w	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018cf2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018cf6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018cfa:	1a9b      	subs	r3, r3, r2
 8018cfc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018d00:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018d04:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018d08:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018d0c:	9600      	str	r6, [sp, #0]
 8018d0e:	464b      	mov	r3, r9
 8018d10:	e77a      	b.n	8018c08 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8018d12:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018d16:	2800      	cmp	r0, #0
 8018d18:	f43f aeb3 	beq.w	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d1c:	6803      	ldr	r3, [r0, #0]
 8018d1e:	9600      	str	r6, [sp, #0]
 8018d20:	68de      	ldr	r6, [r3, #12]
 8018d22:	4623      	mov	r3, r4
 8018d24:	aa02      	add	r2, sp, #8
 8018d26:	4629      	mov	r1, r5
 8018d28:	47b0      	blx	r6
 8018d2a:	e6aa      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d2c:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018d30:	2800      	cmp	r0, #0
 8018d32:	f43f aea6 	beq.w	8018a82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018d36:	6803      	ldr	r3, [r0, #0]
 8018d38:	9600      	str	r6, [sp, #0]
 8018d3a:	689e      	ldr	r6, [r3, #8]
 8018d3c:	e7f1      	b.n	8018d22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8018d3e:	bf00      	nop
 8018d40:	20002230 	.word	0x20002230

08018d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018d44:	b180      	cbz	r0, 8018d68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018d46:	2903      	cmp	r1, #3
 8018d48:	d81c      	bhi.n	8018d84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018d4a:	e8df f001 	tbb	[pc, r1]
 8018d4e:	1d02      	.short	0x1d02
 8018d50:	1f08      	.short	0x1f08
 8018d52:	4b10      	ldr	r3, [pc, #64]	@ (8018d94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018d54:	8818      	ldrh	r0, [r3, #0]
 8018d56:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d5a:	4240      	negs	r0, r0
 8018d5c:	4770      	bx	lr
 8018d5e:	4b0d      	ldr	r3, [pc, #52]	@ (8018d94 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018d60:	8818      	ldrh	r0, [r3, #0]
 8018d62:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d66:	4770      	bx	lr
 8018d68:	2903      	cmp	r1, #3
 8018d6a:	d80b      	bhi.n	8018d84 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018d6c:	a301      	add	r3, pc, #4	@ (adr r3, 8018d74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018d6e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018d72:	bf00      	nop
 8018d74:	08018d89 	.word	0x08018d89
 8018d78:	08018d5f 	.word	0x08018d5f
 8018d7c:	08018d8d 	.word	0x08018d8d
 8018d80:	08018d53 	.word	0x08018d53
 8018d84:	2000      	movs	r0, #0
 8018d86:	4770      	bx	lr
 8018d88:	2001      	movs	r0, #1
 8018d8a:	4770      	bx	lr
 8018d8c:	f04f 30ff 	mov.w	r0, #4294967295
 8018d90:	4770      	bx	lr
 8018d92:	bf00      	nop
 8018d94:	2000222a 	.word	0x2000222a

08018d98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018d98:	b180      	cbz	r0, 8018dbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018d9a:	2903      	cmp	r1, #3
 8018d9c:	d81c      	bhi.n	8018dd8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018d9e:	e8df f001 	tbb	[pc, r1]
 8018da2:	021d      	.short	0x021d
 8018da4:	071f      	.short	0x071f
 8018da6:	4b10      	ldr	r3, [pc, #64]	@ (8018de8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018da8:	8818      	ldrh	r0, [r3, #0]
 8018daa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018dae:	4770      	bx	lr
 8018db0:	4b0d      	ldr	r3, [pc, #52]	@ (8018de8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018db2:	8818      	ldrh	r0, [r3, #0]
 8018db4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018db8:	4240      	negs	r0, r0
 8018dba:	4770      	bx	lr
 8018dbc:	2903      	cmp	r1, #3
 8018dbe:	d80b      	bhi.n	8018dd8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018dc0:	a301      	add	r3, pc, #4	@ (adr r3, 8018dc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018dc2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018dc6:	bf00      	nop
 8018dc8:	08018da7 	.word	0x08018da7
 8018dcc:	08018de1 	.word	0x08018de1
 8018dd0:	08018db1 	.word	0x08018db1
 8018dd4:	08018ddd 	.word	0x08018ddd
 8018dd8:	2000      	movs	r0, #0
 8018dda:	4770      	bx	lr
 8018ddc:	2001      	movs	r0, #1
 8018dde:	4770      	bx	lr
 8018de0:	f04f 30ff 	mov.w	r0, #4294967295
 8018de4:	4770      	bx	lr
 8018de6:	bf00      	nop
 8018de8:	2000222a 	.word	0x2000222a

08018dec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018df0:	b099      	sub	sp, #100	@ 0x64
 8018df2:	910d      	str	r1, [sp, #52]	@ 0x34
 8018df4:	a914      	add	r1, sp, #80	@ 0x50
 8018df6:	e881 000c 	stmia.w	r1, {r2, r3}
 8018dfa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018dfe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018e02:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018e06:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018e08:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018e0c:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018e10:	9310      	str	r3, [sp, #64]	@ 0x40
 8018e12:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018e16:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8018e1a:	9308      	str	r3, [sp, #32]
 8018e1c:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018e20:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8018e22:	9309      	str	r3, [sp, #36]	@ 0x24
 8018e24:	7b4b      	ldrb	r3, [r1, #13]
 8018e26:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8018e2a:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8018e2e:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8018e32:	f891 8006 	ldrb.w	r8, [r1, #6]
 8018e36:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018e3a:	ea58 0800 	orrs.w	r8, r8, r0
 8018e3e:	f000 81cc 	beq.w	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8018e42:	011b      	lsls	r3, r3, #4
 8018e44:	79c8      	ldrb	r0, [r1, #7]
 8018e46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018e4a:	4303      	orrs	r3, r0
 8018e4c:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e4e:	f000 81c4 	beq.w	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8018e52:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018e56:	b29b      	uxth	r3, r3
 8018e58:	2d00      	cmp	r5, #0
 8018e5a:	f000 812a 	beq.w	80190b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c6>
 8018e5e:	1aed      	subs	r5, r5, r3
 8018e60:	b2ad      	uxth	r5, r5
 8018e62:	0429      	lsls	r1, r5, #16
 8018e64:	d502      	bpl.n	8018e6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8018e66:	1b64      	subs	r4, r4, r5
 8018e68:	2500      	movs	r5, #0
 8018e6a:	b224      	sxth	r4, r4
 8018e6c:	f9b2 0000 	ldrsh.w	r0, [r2]
 8018e70:	8891      	ldrh	r1, [r2, #4]
 8018e72:	4284      	cmp	r4, r0
 8018e74:	b283      	uxth	r3, r0
 8018e76:	bfbf      	itttt	lt
 8018e78:	18ed      	addlt	r5, r5, r3
 8018e7a:	1b2c      	sublt	r4, r5, r4
 8018e7c:	b2a5      	uxthlt	r5, r4
 8018e7e:	4604      	movlt	r4, r0
 8018e80:	440b      	add	r3, r1
 8018e82:	b21b      	sxth	r3, r3
 8018e84:	930a      	str	r3, [sp, #40]	@ 0x28
 8018e86:	88d3      	ldrh	r3, [r2, #6]
 8018e88:	8852      	ldrh	r2, [r2, #2]
 8018e8a:	4621      	mov	r1, r4
 8018e8c:	4413      	add	r3, r2
 8018e8e:	b21b      	sxth	r3, r3
 8018e90:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018e92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018e94:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018e96:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e98:	4bb2      	ldr	r3, [pc, #712]	@ (8019164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8018e9a:	a814      	add	r0, sp, #80	@ 0x50
 8018e9c:	f893 b000 	ldrb.w	fp, [r3]
 8018ea0:	4653      	mov	r3, sl
 8018ea2:	f7f6 f8fa 	bl	800f09a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018ea6:	4621      	mov	r1, r4
 8018ea8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018eac:	4653      	mov	r3, sl
 8018eae:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018eb0:	a814      	add	r0, sp, #80	@ 0x50
 8018eb2:	f7f6 f90f 	bl	800f0d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018eb6:	a918      	add	r1, sp, #96	@ 0x60
 8018eb8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018ebc:	a817      	add	r0, sp, #92	@ 0x5c
 8018ebe:	f7f6 fa35 	bl	800f32c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018ec2:	f1ba 0f00 	cmp.w	sl, #0
 8018ec6:	f040 80f7 	bne.w	80190b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8018eca:	f1bb 0f01 	cmp.w	fp, #1
 8018ece:	f040 80fb 	bne.w	80190c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8018ed2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018ed4:	2b00      	cmp	r3, #0
 8018ed6:	f040 81a8 	bne.w	801922a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x43e>
 8018eda:	fa1f f288 	uxth.w	r2, r8
 8018ede:	b905      	cbnz	r5, 8018ee2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8018ee0:	b15e      	cbz	r6, 8018efa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8018ee2:	4631      	mov	r1, r6
 8018ee4:	fb06 5302 	mla	r3, r6, r2, r5
 8018ee8:	9808      	ldr	r0, [sp, #32]
 8018eea:	4343      	muls	r3, r0
 8018eec:	f003 0607 	and.w	r6, r3, #7
 8018ef0:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8018ef4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018ef6:	1a5b      	subs	r3, r3, r1
 8018ef8:	930e      	str	r3, [sp, #56]	@ 0x38
 8018efa:	f10b 31ff 	add.w	r1, fp, #4294967295
 8018efe:	424b      	negs	r3, r1
 8018f00:	414b      	adcs	r3, r1
 8018f02:	4618      	mov	r0, r3
 8018f04:	4651      	mov	r1, sl
 8018f06:	930c      	str	r3, [sp, #48]	@ 0x30
 8018f08:	f7ff ff1c 	bl	8018d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018f0c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018f0e:	4683      	mov	fp, r0
 8018f10:	4618      	mov	r0, r3
 8018f12:	f7ff ff41 	bl	8018d98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018f16:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018f18:	4603      	mov	r3, r0
 8018f1a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018f1c:	eba1 0a00 	sub.w	sl, r1, r0
 8018f20:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018f22:	458a      	cmp	sl, r1
 8018f24:	bfa8      	it	ge
 8018f26:	468a      	movge	sl, r1
 8018f28:	f1ba 0f00 	cmp.w	sl, #0
 8018f2c:	f340 8155 	ble.w	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8018f30:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018f32:	1b64      	subs	r4, r4, r5
 8018f34:	1b0c      	subs	r4, r1, r4
 8018f36:	4544      	cmp	r4, r8
 8018f38:	bfd4      	ite	le
 8018f3a:	ebc5 0504 	rsble	r5, r5, r4
 8018f3e:	ebc5 0508 	rsbgt	r5, r5, r8
 8018f42:	2d00      	cmp	r5, #0
 8018f44:	f340 8149 	ble.w	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8018f48:	9908      	ldr	r1, [sp, #32]
 8018f4a:	1b52      	subs	r2, r2, r5
 8018f4c:	434a      	muls	r2, r1
 8018f4e:	920e      	str	r2, [sp, #56]	@ 0x38
 8018f50:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8018f52:	2a00      	cmp	r2, #0
 8018f54:	f040 8175 	bne.w	8019242 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x456>
 8018f58:	4a83      	ldr	r2, [pc, #524]	@ (8019168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8018f5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8018f5c:	6810      	ldr	r0, [r2, #0]
 8018f5e:	6802      	ldr	r2, [r0, #0]
 8018f60:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8018f62:	4790      	blx	r2
 8018f64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018f66:	2201      	movs	r2, #1
 8018f68:	9908      	ldr	r1, [sp, #32]
 8018f6a:	408a      	lsls	r2, r1
 8018f6c:	3a01      	subs	r2, #1
 8018f6e:	497f      	ldr	r1, [pc, #508]	@ (801916c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8018f70:	b2d2      	uxtb	r2, r2
 8018f72:	880c      	ldrh	r4, [r1, #0]
 8018f74:	920c      	str	r2, [sp, #48]	@ 0x30
 8018f76:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8018f7a:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8018f7e:	fb04 1202 	mla	r2, r4, r2, r1
 8018f82:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018f86:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8018f8a:	920a      	str	r2, [sp, #40]	@ 0x28
 8018f8c:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8018f90:	9212      	str	r2, [sp, #72]	@ 0x48
 8018f92:	b2e2      	uxtb	r2, r4
 8018f94:	9211      	str	r2, [sp, #68]	@ 0x44
 8018f96:	fa5f f289 	uxtb.w	r2, r9
 8018f9a:	9210      	str	r2, [sp, #64]	@ 0x40
 8018f9c:	4a74      	ldr	r2, [pc, #464]	@ (8019170 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8018f9e:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8018fa2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018fa6:	4022      	ands	r2, r4
 8018fa8:	430a      	orrs	r2, r1
 8018faa:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8018fae:	fb05 3b1b 	mls	fp, r5, fp, r3
 8018fb2:	460b      	mov	r3, r1
 8018fb4:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8018fb8:	ea42 0209 	orr.w	r2, r2, r9
 8018fbc:	436b      	muls	r3, r5
 8018fbe:	b292      	uxth	r2, r2
 8018fc0:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018fc2:	783a      	ldrb	r2, [r7, #0]
 8018fc4:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8018fc8:	4132      	asrs	r2, r6
 8018fca:	b2d2      	uxtb	r2, r2
 8018fcc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018fce:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018fd0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018fd4:	f0c0 8149 	bcc.w	801926a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47e>
 8018fd8:	46a9      	mov	r9, r5
 8018fda:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8018fde:	f119 39ff 	adds.w	r9, r9, #4294967295
 8018fe2:	f0c0 8132 	bcc.w	801924a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8018fe6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018fe8:	4013      	ands	r3, r2
 8018fea:	d054      	beq.n	8019096 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8018fec:	20ff      	movs	r0, #255	@ 0xff
 8018fee:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018ff0:	fb90 f1f1 	sdiv	r1, r0, r1
 8018ff4:	434b      	muls	r3, r1
 8018ff6:	2bfe      	cmp	r3, #254	@ 0xfe
 8018ff8:	dd03      	ble.n	8019002 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x216>
 8018ffa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018ffc:	4281      	cmp	r1, r0
 8018ffe:	f000 8122 	beq.w	8019246 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8019002:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019004:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019006:	fb11 f303 	smulbb	r3, r1, r3
 801900a:	b29b      	uxth	r3, r3
 801900c:	1c59      	adds	r1, r3, #1
 801900e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019012:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019016:	fa1f fe83 	uxth.w	lr, r3
 801901a:	43db      	mvns	r3, r3
 801901c:	f8b8 4000 	ldrh.w	r4, [r8]
 8019020:	fb10 fb0e 	smulbb	fp, r0, lr
 8019024:	1221      	asrs	r1, r4, #8
 8019026:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019028:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801902c:	b2db      	uxtb	r3, r3
 801902e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019032:	fb01 b103 	mla	r1, r1, r3, fp
 8019036:	fb10 fb0e 	smulbb	fp, r0, lr
 801903a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801903c:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8019040:	fb10 fe0e 	smulbb	lr, r0, lr
 8019044:	00e4      	lsls	r4, r4, #3
 8019046:	b2e4      	uxtb	r4, r4
 8019048:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801904c:	fb04 e403 	mla	r4, r4, r3, lr
 8019050:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019054:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8019058:	fb0c bc03 	mla	ip, ip, r3, fp
 801905c:	b289      	uxth	r1, r1
 801905e:	b2a4      	uxth	r4, r4
 8019060:	1c4b      	adds	r3, r1, #1
 8019062:	f104 0b01 	add.w	fp, r4, #1
 8019066:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801906a:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 801906e:	fa1f fc8c 	uxth.w	ip, ip
 8019072:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8019076:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801907a:	ea4b 0101 	orr.w	r1, fp, r1
 801907e:	f10c 0b01 	add.w	fp, ip, #1
 8019082:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8019086:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801908a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801908e:	ea41 010b 	orr.w	r1, r1, fp
 8019092:	f8a8 1000 	strh.w	r1, [r8]
 8019096:	9b08      	ldr	r3, [sp, #32]
 8019098:	441e      	add	r6, r3
 801909a:	b2b6      	uxth	r6, r6
 801909c:	2e07      	cmp	r6, #7
 801909e:	bf98      	it	ls
 80190a0:	411a      	asrls	r2, r3
 80190a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80190a4:	bf89      	itett	hi
 80190a6:	787a      	ldrbhi	r2, [r7, #1]
 80190a8:	b2d2      	uxtbls	r2, r2
 80190aa:	3701      	addhi	r7, #1
 80190ac:	2600      	movhi	r6, #0
 80190ae:	4498      	add	r8, r3
 80190b0:	e795      	b.n	8018fde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f2>
 80190b2:	441c      	add	r4, r3
 80190b4:	b224      	sxth	r4, r4
 80190b6:	e6d9      	b.n	8018e6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 80190b8:	f1ba 0f01 	cmp.w	sl, #1
 80190bc:	f47f af09 	bne.w	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 80190c0:	f1bb 0f01 	cmp.w	fp, #1
 80190c4:	f47f af05 	bne.w	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 80190c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80190ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80190cc:	1a99      	subs	r1, r3, r2
 80190ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190d0:	1b9b      	subs	r3, r3, r6
 80190d2:	4299      	cmp	r1, r3
 80190d4:	bfa8      	it	ge
 80190d6:	4619      	movge	r1, r3
 80190d8:	2900      	cmp	r1, #0
 80190da:	9112      	str	r1, [sp, #72]	@ 0x48
 80190dc:	dd7d      	ble.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 80190de:	4a22      	ldr	r2, [pc, #136]	@ (8019168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80190e0:	6810      	ldr	r0, [r2, #0]
 80190e2:	9211      	str	r2, [sp, #68]	@ 0x44
 80190e4:	6803      	ldr	r3, [r0, #0]
 80190e6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80190e8:	4798      	blx	r3
 80190ea:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 80190ee:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80190f0:	d006      	beq.n	8019100 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x314>
 80190f2:	9b08      	ldr	r3, [sp, #32]
 80190f4:	2b04      	cmp	r3, #4
 80190f6:	d133      	bne.n	8019160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 80190f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80190fa:	3300      	adds	r3, #0
 80190fc:	bf18      	it	ne
 80190fe:	2301      	movne	r3, #1
 8019100:	0582      	lsls	r2, r0, #22
 8019102:	fa1f fc88 	uxth.w	ip, r8
 8019106:	f140 80b9 	bpl.w	801927c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x490>
 801910a:	9808      	ldr	r0, [sp, #32]
 801910c:	2808      	cmp	r0, #8
 801910e:	f040 80b5 	bne.w	801927c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x490>
 8019112:	2b00      	cmp	r3, #0
 8019114:	d064      	beq.n	80191e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>
 8019116:	f10c 0c01 	add.w	ip, ip, #1
 801911a:	f02c 0301 	bic.w	r3, ip, #1
 801911e:	b29b      	uxth	r3, r3
 8019120:	bb45      	cbnz	r5, 8019174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 8019122:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019124:	eb08 0004 	add.w	r0, r8, r4
 8019128:	4290      	cmp	r0, r2
 801912a:	dc23      	bgt.n	8019174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 801912c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801912e:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019132:	6810      	ldr	r0, [r2, #0]
 8019134:	b289      	uxth	r1, r1
 8019136:	6804      	ldr	r4, [r0, #0]
 8019138:	9506      	str	r5, [sp, #24]
 801913a:	f44f 7580 	mov.w	r5, #256	@ 0x100
 801913e:	e9cd 3100 	strd	r3, r1, [sp]
 8019142:	9302      	str	r3, [sp, #8]
 8019144:	4673      	mov	r3, lr
 8019146:	9505      	str	r5, [sp, #20]
 8019148:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801914a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801914e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019152:	fb06 710c 	mla	r1, r6, ip, r7
 8019156:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801915a:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 801915c:	47a0      	blx	r4
 801915e:	e03c      	b.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019160:	2300      	movs	r3, #0
 8019162:	e7cd      	b.n	8019100 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x314>
 8019164:	20002228 	.word	0x20002228
 8019168:	20002230 	.word	0x20002230
 801916c:	2000222a 	.word	0x2000222a
 8019170:	00fff800 	.word	0x00fff800
 8019174:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019176:	eba4 0e05 	sub.w	lr, r4, r5
 801917a:	eba2 0e0e 	sub.w	lr, r2, lr
 801917e:	45c6      	cmp	lr, r8
 8019180:	bfd4      	ite	le
 8019182:	ebc5 0e0e 	rsble	lr, r5, lr
 8019186:	ebc5 0e08 	rsbgt	lr, r5, r8
 801918a:	f1be 0f00 	cmp.w	lr, #0
 801918e:	d024      	beq.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019190:	07e8      	lsls	r0, r5, #31
 8019192:	f53f ae9e 	bmi.w	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019196:	f01e 0001 	ands.w	r0, lr, #1
 801919a:	f47f ae9a 	bne.w	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 801919e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80191a0:	086d      	lsrs	r5, r5, #1
 80191a2:	6814      	ldr	r4, [r2, #0]
 80191a4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 80191a8:	fb06 560c 	mla	r6, r6, ip, r5
 80191ac:	6825      	ldr	r5, [r4, #0]
 80191ae:	9006      	str	r0, [sp, #24]
 80191b0:	f44f 7080 	mov.w	r0, #256	@ 0x100
 80191b4:	9005      	str	r0, [sp, #20]
 80191b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80191b8:	9302      	str	r3, [sp, #8]
 80191ba:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80191be:	b289      	uxth	r1, r1
 80191c0:	fa1f f38e 	uxth.w	r3, lr
 80191c4:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 80191c8:	9101      	str	r1, [sp, #4]
 80191ca:	9300      	str	r3, [sp, #0]
 80191cc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80191d0:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 80191d2:	4643      	mov	r3, r8
 80191d4:	19b9      	adds	r1, r7, r6
 80191d6:	4620      	mov	r0, r4
 80191d8:	47a8      	blx	r5
 80191da:	b019      	add	sp, #100	@ 0x64
 80191dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191e0:	4a28      	ldr	r2, [pc, #160]	@ (8019284 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>)
 80191e2:	1b64      	subs	r4, r4, r5
 80191e4:	6810      	ldr	r0, [r2, #0]
 80191e6:	fb06 5608 	mla	r6, r6, r8, r5
 80191ea:	f8d0 a000 	ldr.w	sl, [r0]
 80191ee:	9306      	str	r3, [sp, #24]
 80191f0:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80191f4:	9305      	str	r3, [sp, #20]
 80191f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80191f8:	b289      	uxth	r1, r1
 80191fa:	e9cd 9303 	strd	r9, r3, [sp, #12]
 80191fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019200:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019204:	1b1c      	subs	r4, r3, r4
 8019206:	4544      	cmp	r4, r8
 8019208:	bfd4      	ite	le
 801920a:	ebc5 0504 	rsble	r5, r5, r4
 801920e:	ebc5 0508 	rsbgt	r5, r5, r8
 8019212:	b2ad      	uxth	r5, r5
 8019214:	9101      	str	r1, [sp, #4]
 8019216:	f8cd c008 	str.w	ip, [sp, #8]
 801921a:	9500      	str	r5, [sp, #0]
 801921c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019220:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019224:	4673      	mov	r3, lr
 8019226:	19b9      	adds	r1, r7, r6
 8019228:	e798      	b.n	801915c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>
 801922a:	2208      	movs	r2, #8
 801922c:	9b08      	ldr	r3, [sp, #32]
 801922e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019232:	1e5a      	subs	r2, r3, #1
 8019234:	4442      	add	r2, r8
 8019236:	fb92 f2f3 	sdiv	r2, r2, r3
 801923a:	fb12 f203 	smulbb	r2, r2, r3
 801923e:	b292      	uxth	r2, r2
 8019240:	e64d      	b.n	8018ede <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8019242:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019244:	e68f      	b.n	8018f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 8019246:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019248:	e723      	b.n	8019092 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a6>
 801924a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801924c:	b143      	cbz	r3, 8019260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x474>
 801924e:	441e      	add	r6, r3
 8019250:	b2b6      	uxth	r6, r6
 8019252:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019256:	783a      	ldrb	r2, [r7, #0]
 8019258:	f006 0607 	and.w	r6, r6, #7
 801925c:	4132      	asrs	r2, r6
 801925e:	b2d2      	uxtb	r2, r2
 8019260:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019262:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019264:	4419      	add	r1, r3
 8019266:	910a      	str	r1, [sp, #40]	@ 0x28
 8019268:	e6b2      	b.n	8018fd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e4>
 801926a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801926c:	2b00      	cmp	r3, #0
 801926e:	d1b4      	bne.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019270:	4b04      	ldr	r3, [pc, #16]	@ (8019284 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>)
 8019272:	6818      	ldr	r0, [r3, #0]
 8019274:	6803      	ldr	r3, [r0, #0]
 8019276:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019278:	4798      	blx	r3
 801927a:	e7ae      	b.n	80191da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 801927c:	2b00      	cmp	r3, #0
 801927e:	f47f af4a 	bne.w	8019116 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32a>
 8019282:	e626      	b.n	8018ed2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019284:	20002230 	.word	0x20002230

08019288 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019288:	b538      	push	{r3, r4, r5, lr}
 801928a:	4605      	mov	r5, r0
 801928c:	4c13      	ldr	r4, [pc, #76]	@ (80192dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x54>)
 801928e:	e8d4 3f8f 	ldab	r3, [r4]
 8019292:	07da      	lsls	r2, r3, #31
 8019294:	d40b      	bmi.n	80192ae <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x26>
 8019296:	4620      	mov	r0, r4
 8019298:	f007 fedb 	bl	8021052 <__cxa_guard_acquire>
 801929c:	b138      	cbz	r0, 80192ae <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x26>
 801929e:	4620      	mov	r0, r4
 80192a0:	f007 fee3 	bl	802106a <__cxa_guard_release>
 80192a4:	4a0e      	ldr	r2, [pc, #56]	@ (80192e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80192a6:	490f      	ldr	r1, [pc, #60]	@ (80192e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80192a8:	480f      	ldr	r0, [pc, #60]	@ (80192e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80192aa:	f007 fecb 	bl	8021044 <__aeabi_atexit>
 80192ae:	4c0f      	ldr	r4, [pc, #60]	@ (80192ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80192b0:	e8d4 3f8f 	ldab	r3, [r4]
 80192b4:	07db      	lsls	r3, r3, #31
 80192b6:	d40b      	bmi.n	80192d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x48>
 80192b8:	4620      	mov	r0, r4
 80192ba:	f007 feca 	bl	8021052 <__cxa_guard_acquire>
 80192be:	b138      	cbz	r0, 80192d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x48>
 80192c0:	4620      	mov	r0, r4
 80192c2:	f007 fed2 	bl	802106a <__cxa_guard_release>
 80192c6:	4a06      	ldr	r2, [pc, #24]	@ (80192e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80192c8:	4909      	ldr	r1, [pc, #36]	@ (80192f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80192ca:	480a      	ldr	r0, [pc, #40]	@ (80192f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80192cc:	f007 feba 	bl	8021044 <__aeabi_atexit>
 80192d0:	4b05      	ldr	r3, [pc, #20]	@ (80192e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80192d2:	616b      	str	r3, [r5, #20]
 80192d4:	4b07      	ldr	r3, [pc, #28]	@ (80192f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80192d6:	61ab      	str	r3, [r5, #24]
 80192d8:	bd38      	pop	{r3, r4, r5, pc}
 80192da:	bf00      	nop
 80192dc:	2000230c 	.word	0x2000230c
 80192e0:	20000000 	.word	0x20000000
 80192e4:	0801539f 	.word	0x0801539f
 80192e8:	20000060 	.word	0x20000060
 80192ec:	20002310 	.word	0x20002310
 80192f0:	0801539d 	.word	0x0801539d
 80192f4:	20000064 	.word	0x20000064

080192f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80192f8:	b538      	push	{r3, r4, r5, lr}
 80192fa:	4605      	mov	r5, r0
 80192fc:	4c13      	ldr	r4, [pc, #76]	@ (801934c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x54>)
 80192fe:	e8d4 3f8f 	ldab	r3, [r4]
 8019302:	07da      	lsls	r2, r3, #31
 8019304:	d40b      	bmi.n	801931e <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x26>
 8019306:	4620      	mov	r0, r4
 8019308:	f007 fea3 	bl	8021052 <__cxa_guard_acquire>
 801930c:	b138      	cbz	r0, 801931e <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x26>
 801930e:	4620      	mov	r0, r4
 8019310:	f007 feab 	bl	802106a <__cxa_guard_release>
 8019314:	4a0e      	ldr	r2, [pc, #56]	@ (8019350 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019316:	490f      	ldr	r1, [pc, #60]	@ (8019354 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019318:	480f      	ldr	r0, [pc, #60]	@ (8019358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801931a:	f007 fe93 	bl	8021044 <__aeabi_atexit>
 801931e:	4c0f      	ldr	r4, [pc, #60]	@ (801935c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019320:	e8d4 3f8f 	ldab	r3, [r4]
 8019324:	07db      	lsls	r3, r3, #31
 8019326:	d40b      	bmi.n	8019340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x48>
 8019328:	4620      	mov	r0, r4
 801932a:	f007 fe92 	bl	8021052 <__cxa_guard_acquire>
 801932e:	b138      	cbz	r0, 8019340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x48>
 8019330:	4620      	mov	r0, r4
 8019332:	f007 fe9a 	bl	802106a <__cxa_guard_release>
 8019336:	4a06      	ldr	r2, [pc, #24]	@ (8019350 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019338:	4909      	ldr	r1, [pc, #36]	@ (8019360 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801933a:	480a      	ldr	r0, [pc, #40]	@ (8019364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801933c:	f007 fe82 	bl	8021044 <__aeabi_atexit>
 8019340:	4b05      	ldr	r3, [pc, #20]	@ (8019358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019342:	60eb      	str	r3, [r5, #12]
 8019344:	4b07      	ldr	r3, [pc, #28]	@ (8019364 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019346:	612b      	str	r3, [r5, #16]
 8019348:	bd38      	pop	{r3, r4, r5, pc}
 801934a:	bf00      	nop
 801934c:	200022e4 	.word	0x200022e4
 8019350:	20000000 	.word	0x20000000
 8019354:	080153a3 	.word	0x080153a3
 8019358:	20000038 	.word	0x20000038
 801935c:	200022e8 	.word	0x200022e8
 8019360:	080153a1 	.word	0x080153a1
 8019364:	2000003c 	.word	0x2000003c

08019368 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019368:	b510      	push	{r4, lr}
 801936a:	4604      	mov	r4, r0
 801936c:	f7ff ff8c 	bl	8019288 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019370:	4620      	mov	r0, r4
 8019372:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019376:	f7ff bfbf 	b.w	80192f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801937c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801937c:	b538      	push	{r3, r4, r5, lr}
 801937e:	4605      	mov	r5, r0
 8019380:	4c13      	ldr	r4, [pc, #76]	@ (80193d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x54>)
 8019382:	e8d4 3f8f 	ldab	r3, [r4]
 8019386:	07da      	lsls	r2, r3, #31
 8019388:	d40b      	bmi.n	80193a2 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x26>
 801938a:	4620      	mov	r0, r4
 801938c:	f007 fe61 	bl	8021052 <__cxa_guard_acquire>
 8019390:	b138      	cbz	r0, 80193a2 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x26>
 8019392:	4620      	mov	r0, r4
 8019394:	f007 fe69 	bl	802106a <__cxa_guard_release>
 8019398:	4a0e      	ldr	r2, [pc, #56]	@ (80193d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801939a:	490f      	ldr	r1, [pc, #60]	@ (80193d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801939c:	480f      	ldr	r0, [pc, #60]	@ (80193dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801939e:	f007 fe51 	bl	8021044 <__aeabi_atexit>
 80193a2:	4c0f      	ldr	r4, [pc, #60]	@ (80193e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80193a4:	e8d4 3f8f 	ldab	r3, [r4]
 80193a8:	07db      	lsls	r3, r3, #31
 80193aa:	d40b      	bmi.n	80193c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x48>
 80193ac:	4620      	mov	r0, r4
 80193ae:	f007 fe50 	bl	8021052 <__cxa_guard_acquire>
 80193b2:	b138      	cbz	r0, 80193c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x48>
 80193b4:	4620      	mov	r0, r4
 80193b6:	f007 fe58 	bl	802106a <__cxa_guard_release>
 80193ba:	4a06      	ldr	r2, [pc, #24]	@ (80193d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80193bc:	4909      	ldr	r1, [pc, #36]	@ (80193e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80193be:	480a      	ldr	r0, [pc, #40]	@ (80193e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80193c0:	f007 fe40 	bl	8021044 <__aeabi_atexit>
 80193c4:	4b05      	ldr	r3, [pc, #20]	@ (80193dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80193c6:	626b      	str	r3, [r5, #36]	@ 0x24
 80193c8:	4b07      	ldr	r3, [pc, #28]	@ (80193e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80193ca:	62ab      	str	r3, [r5, #40]	@ 0x28
 80193cc:	bd38      	pop	{r3, r4, r5, pc}
 80193ce:	bf00      	nop
 80193d0:	20002314 	.word	0x20002314
 80193d4:	20000000 	.word	0x20000000
 80193d8:	08015397 	.word	0x08015397
 80193dc:	20000068 	.word	0x20000068
 80193e0:	20002318 	.word	0x20002318
 80193e4:	08015395 	.word	0x08015395
 80193e8:	2000006c 	.word	0x2000006c

080193ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80193ec:	b538      	push	{r3, r4, r5, lr}
 80193ee:	4605      	mov	r5, r0
 80193f0:	4c13      	ldr	r4, [pc, #76]	@ (8019440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x54>)
 80193f2:	e8d4 3f8f 	ldab	r3, [r4]
 80193f6:	07da      	lsls	r2, r3, #31
 80193f8:	d40b      	bmi.n	8019412 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x26>
 80193fa:	4620      	mov	r0, r4
 80193fc:	f007 fe29 	bl	8021052 <__cxa_guard_acquire>
 8019400:	b138      	cbz	r0, 8019412 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x26>
 8019402:	4620      	mov	r0, r4
 8019404:	f007 fe31 	bl	802106a <__cxa_guard_release>
 8019408:	4a0e      	ldr	r2, [pc, #56]	@ (8019444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801940a:	490f      	ldr	r1, [pc, #60]	@ (8019448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801940c:	480f      	ldr	r0, [pc, #60]	@ (801944c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801940e:	f007 fe19 	bl	8021044 <__aeabi_atexit>
 8019412:	4c0f      	ldr	r4, [pc, #60]	@ (8019450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019414:	e8d4 3f8f 	ldab	r3, [r4]
 8019418:	07db      	lsls	r3, r3, #31
 801941a:	d40b      	bmi.n	8019434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x48>
 801941c:	4620      	mov	r0, r4
 801941e:	f007 fe18 	bl	8021052 <__cxa_guard_acquire>
 8019422:	b138      	cbz	r0, 8019434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x48>
 8019424:	4620      	mov	r0, r4
 8019426:	f007 fe20 	bl	802106a <__cxa_guard_release>
 801942a:	4a06      	ldr	r2, [pc, #24]	@ (8019444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801942c:	4909      	ldr	r1, [pc, #36]	@ (8019454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801942e:	480a      	ldr	r0, [pc, #40]	@ (8019458 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019430:	f007 fe08 	bl	8021044 <__aeabi_atexit>
 8019434:	4b05      	ldr	r3, [pc, #20]	@ (801944c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019436:	61eb      	str	r3, [r5, #28]
 8019438:	4b07      	ldr	r3, [pc, #28]	@ (8019458 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801943a:	622b      	str	r3, [r5, #32]
 801943c:	bd38      	pop	{r3, r4, r5, pc}
 801943e:	bf00      	nop
 8019440:	200022ec 	.word	0x200022ec
 8019444:	20000000 	.word	0x20000000
 8019448:	0801539b 	.word	0x0801539b
 801944c:	20000040 	.word	0x20000040
 8019450:	200022f0 	.word	0x200022f0
 8019454:	08015399 	.word	0x08015399
 8019458:	20000044 	.word	0x20000044

0801945c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801945c:	b510      	push	{r4, lr}
 801945e:	4604      	mov	r4, r0
 8019460:	f7ff ff8c 	bl	801937c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019464:	4620      	mov	r0, r4
 8019466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801946a:	f7ff bfbf 	b.w	80193ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019470 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019470:	b538      	push	{r3, r4, r5, lr}
 8019472:	4605      	mov	r5, r0
 8019474:	4c13      	ldr	r4, [pc, #76]	@ (80194c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x54>)
 8019476:	e8d4 3f8f 	ldab	r3, [r4]
 801947a:	07da      	lsls	r2, r3, #31
 801947c:	d40b      	bmi.n	8019496 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x26>
 801947e:	4620      	mov	r0, r4
 8019480:	f007 fde7 	bl	8021052 <__cxa_guard_acquire>
 8019484:	b138      	cbz	r0, 8019496 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x26>
 8019486:	4620      	mov	r0, r4
 8019488:	f007 fdef 	bl	802106a <__cxa_guard_release>
 801948c:	4a0e      	ldr	r2, [pc, #56]	@ (80194c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801948e:	490f      	ldr	r1, [pc, #60]	@ (80194cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019490:	480f      	ldr	r0, [pc, #60]	@ (80194d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019492:	f007 fdd7 	bl	8021044 <__aeabi_atexit>
 8019496:	4c0f      	ldr	r4, [pc, #60]	@ (80194d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019498:	e8d4 3f8f 	ldab	r3, [r4]
 801949c:	07db      	lsls	r3, r3, #31
 801949e:	d40b      	bmi.n	80194b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x48>
 80194a0:	4620      	mov	r0, r4
 80194a2:	f007 fdd6 	bl	8021052 <__cxa_guard_acquire>
 80194a6:	b138      	cbz	r0, 80194b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x48>
 80194a8:	4620      	mov	r0, r4
 80194aa:	f007 fdde 	bl	802106a <__cxa_guard_release>
 80194ae:	4a06      	ldr	r2, [pc, #24]	@ (80194c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80194b0:	4909      	ldr	r1, [pc, #36]	@ (80194d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80194b2:	480a      	ldr	r0, [pc, #40]	@ (80194dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80194b4:	f007 fdc6 	bl	8021044 <__aeabi_atexit>
 80194b8:	4b05      	ldr	r3, [pc, #20]	@ (80194d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80194ba:	636b      	str	r3, [r5, #52]	@ 0x34
 80194bc:	4b07      	ldr	r3, [pc, #28]	@ (80194dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80194be:	63ab      	str	r3, [r5, #56]	@ 0x38
 80194c0:	bd38      	pop	{r3, r4, r5, pc}
 80194c2:	bf00      	nop
 80194c4:	20002324 	.word	0x20002324
 80194c8:	20000000 	.word	0x20000000
 80194cc:	0801538f 	.word	0x0801538f
 80194d0:	20000078 	.word	0x20000078
 80194d4:	20002328 	.word	0x20002328
 80194d8:	0801538d 	.word	0x0801538d
 80194dc:	2000007c 	.word	0x2000007c

080194e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80194e0:	b538      	push	{r3, r4, r5, lr}
 80194e2:	4605      	mov	r5, r0
 80194e4:	4c13      	ldr	r4, [pc, #76]	@ (8019534 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x54>)
 80194e6:	e8d4 3f8f 	ldab	r3, [r4]
 80194ea:	07da      	lsls	r2, r3, #31
 80194ec:	d40b      	bmi.n	8019506 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x26>
 80194ee:	4620      	mov	r0, r4
 80194f0:	f007 fdaf 	bl	8021052 <__cxa_guard_acquire>
 80194f4:	b138      	cbz	r0, 8019506 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x26>
 80194f6:	4620      	mov	r0, r4
 80194f8:	f007 fdb7 	bl	802106a <__cxa_guard_release>
 80194fc:	4a0e      	ldr	r2, [pc, #56]	@ (8019538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80194fe:	490f      	ldr	r1, [pc, #60]	@ (801953c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019500:	480f      	ldr	r0, [pc, #60]	@ (8019540 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019502:	f007 fd9f 	bl	8021044 <__aeabi_atexit>
 8019506:	4c0f      	ldr	r4, [pc, #60]	@ (8019544 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019508:	e8d4 3f8f 	ldab	r3, [r4]
 801950c:	07db      	lsls	r3, r3, #31
 801950e:	d40b      	bmi.n	8019528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x48>
 8019510:	4620      	mov	r0, r4
 8019512:	f007 fd9e 	bl	8021052 <__cxa_guard_acquire>
 8019516:	b138      	cbz	r0, 8019528 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x48>
 8019518:	4620      	mov	r0, r4
 801951a:	f007 fda6 	bl	802106a <__cxa_guard_release>
 801951e:	4a06      	ldr	r2, [pc, #24]	@ (8019538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019520:	4909      	ldr	r1, [pc, #36]	@ (8019548 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019522:	480a      	ldr	r0, [pc, #40]	@ (801954c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019524:	f007 fd8e 	bl	8021044 <__aeabi_atexit>
 8019528:	4b05      	ldr	r3, [pc, #20]	@ (8019540 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801952a:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801952c:	4b07      	ldr	r3, [pc, #28]	@ (801954c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801952e:	632b      	str	r3, [r5, #48]	@ 0x30
 8019530:	bd38      	pop	{r3, r4, r5, pc}
 8019532:	bf00      	nop
 8019534:	200022f4 	.word	0x200022f4
 8019538:	20000000 	.word	0x20000000
 801953c:	08015393 	.word	0x08015393
 8019540:	20000048 	.word	0x20000048
 8019544:	200022f8 	.word	0x200022f8
 8019548:	08015391 	.word	0x08015391
 801954c:	2000004c 	.word	0x2000004c

08019550 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019550:	b510      	push	{r4, lr}
 8019552:	4604      	mov	r4, r0
 8019554:	f7ff ff8c 	bl	8019470 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019558:	4620      	mov	r0, r4
 801955a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801955e:	f7ff bfbf 	b.w	80194e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019564 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019564:	b538      	push	{r3, r4, r5, lr}
 8019566:	4605      	mov	r5, r0
 8019568:	4c13      	ldr	r4, [pc, #76]	@ (80195b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x54>)
 801956a:	e8d4 3f8f 	ldab	r3, [r4]
 801956e:	07da      	lsls	r2, r3, #31
 8019570:	d40b      	bmi.n	801958a <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x26>
 8019572:	4620      	mov	r0, r4
 8019574:	f007 fd6d 	bl	8021052 <__cxa_guard_acquire>
 8019578:	b138      	cbz	r0, 801958a <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x26>
 801957a:	4620      	mov	r0, r4
 801957c:	f007 fd75 	bl	802106a <__cxa_guard_release>
 8019580:	4a0e      	ldr	r2, [pc, #56]	@ (80195bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019582:	490f      	ldr	r1, [pc, #60]	@ (80195c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019584:	480f      	ldr	r0, [pc, #60]	@ (80195c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019586:	f007 fd5d 	bl	8021044 <__aeabi_atexit>
 801958a:	4c0f      	ldr	r4, [pc, #60]	@ (80195c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801958c:	e8d4 3f8f 	ldab	r3, [r4]
 8019590:	07db      	lsls	r3, r3, #31
 8019592:	d40b      	bmi.n	80195ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x48>
 8019594:	4620      	mov	r0, r4
 8019596:	f007 fd5c 	bl	8021052 <__cxa_guard_acquire>
 801959a:	b138      	cbz	r0, 80195ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x48>
 801959c:	4620      	mov	r0, r4
 801959e:	f007 fd64 	bl	802106a <__cxa_guard_release>
 80195a2:	4a06      	ldr	r2, [pc, #24]	@ (80195bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80195a4:	4909      	ldr	r1, [pc, #36]	@ (80195cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80195a6:	480a      	ldr	r0, [pc, #40]	@ (80195d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80195a8:	f007 fd4c 	bl	8021044 <__aeabi_atexit>
 80195ac:	4b05      	ldr	r3, [pc, #20]	@ (80195c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80195ae:	656b      	str	r3, [r5, #84]	@ 0x54
 80195b0:	4b07      	ldr	r3, [pc, #28]	@ (80195d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80195b2:	65ab      	str	r3, [r5, #88]	@ 0x58
 80195b4:	bd38      	pop	{r3, r4, r5, pc}
 80195b6:	bf00      	nop
 80195b8:	2000232c 	.word	0x2000232c
 80195bc:	20000000 	.word	0x20000000
 80195c0:	0801537f 	.word	0x0801537f
 80195c4:	20000080 	.word	0x20000080
 80195c8:	20002330 	.word	0x20002330
 80195cc:	0801537d 	.word	0x0801537d
 80195d0:	20000084 	.word	0x20000084

080195d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80195d4:	b538      	push	{r3, r4, r5, lr}
 80195d6:	4605      	mov	r5, r0
 80195d8:	4c13      	ldr	r4, [pc, #76]	@ (8019628 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x54>)
 80195da:	e8d4 3f8f 	ldab	r3, [r4]
 80195de:	07da      	lsls	r2, r3, #31
 80195e0:	d40b      	bmi.n	80195fa <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x26>
 80195e2:	4620      	mov	r0, r4
 80195e4:	f007 fd35 	bl	8021052 <__cxa_guard_acquire>
 80195e8:	b138      	cbz	r0, 80195fa <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x26>
 80195ea:	4620      	mov	r0, r4
 80195ec:	f007 fd3d 	bl	802106a <__cxa_guard_release>
 80195f0:	4a0e      	ldr	r2, [pc, #56]	@ (801962c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80195f2:	490f      	ldr	r1, [pc, #60]	@ (8019630 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80195f4:	480f      	ldr	r0, [pc, #60]	@ (8019634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80195f6:	f007 fd25 	bl	8021044 <__aeabi_atexit>
 80195fa:	4c0f      	ldr	r4, [pc, #60]	@ (8019638 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80195fc:	e8d4 3f8f 	ldab	r3, [r4]
 8019600:	07db      	lsls	r3, r3, #31
 8019602:	d40b      	bmi.n	801961c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x48>
 8019604:	4620      	mov	r0, r4
 8019606:	f007 fd24 	bl	8021052 <__cxa_guard_acquire>
 801960a:	b138      	cbz	r0, 801961c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x48>
 801960c:	4620      	mov	r0, r4
 801960e:	f007 fd2c 	bl	802106a <__cxa_guard_release>
 8019612:	4a06      	ldr	r2, [pc, #24]	@ (801962c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019614:	4909      	ldr	r1, [pc, #36]	@ (801963c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019616:	480a      	ldr	r0, [pc, #40]	@ (8019640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019618:	f007 fd14 	bl	8021044 <__aeabi_atexit>
 801961c:	4b05      	ldr	r3, [pc, #20]	@ (8019634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801961e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 8019620:	4b07      	ldr	r3, [pc, #28]	@ (8019640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019622:	652b      	str	r3, [r5, #80]	@ 0x50
 8019624:	bd38      	pop	{r3, r4, r5, pc}
 8019626:	bf00      	nop
 8019628:	20002334 	.word	0x20002334
 801962c:	20000000 	.word	0x20000000
 8019630:	08015383 	.word	0x08015383
 8019634:	20000088 	.word	0x20000088
 8019638:	20002338 	.word	0x20002338
 801963c:	08015381 	.word	0x08015381
 8019640:	2000008c 	.word	0x2000008c

08019644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019644:	b538      	push	{r3, r4, r5, lr}
 8019646:	4605      	mov	r5, r0
 8019648:	4c13      	ldr	r4, [pc, #76]	@ (8019698 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x54>)
 801964a:	e8d4 3f8f 	ldab	r3, [r4]
 801964e:	07da      	lsls	r2, r3, #31
 8019650:	d40b      	bmi.n	801966a <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x26>
 8019652:	4620      	mov	r0, r4
 8019654:	f007 fcfd 	bl	8021052 <__cxa_guard_acquire>
 8019658:	b138      	cbz	r0, 801966a <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x26>
 801965a:	4620      	mov	r0, r4
 801965c:	f007 fd05 	bl	802106a <__cxa_guard_release>
 8019660:	4a0e      	ldr	r2, [pc, #56]	@ (801969c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019662:	490f      	ldr	r1, [pc, #60]	@ (80196a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019664:	480f      	ldr	r0, [pc, #60]	@ (80196a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019666:	f007 fced 	bl	8021044 <__aeabi_atexit>
 801966a:	4c0f      	ldr	r4, [pc, #60]	@ (80196a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801966c:	e8d4 3f8f 	ldab	r3, [r4]
 8019670:	07db      	lsls	r3, r3, #31
 8019672:	d40b      	bmi.n	801968c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x48>
 8019674:	4620      	mov	r0, r4
 8019676:	f007 fcec 	bl	8021052 <__cxa_guard_acquire>
 801967a:	b138      	cbz	r0, 801968c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x48>
 801967c:	4620      	mov	r0, r4
 801967e:	f007 fcf4 	bl	802106a <__cxa_guard_release>
 8019682:	4a06      	ldr	r2, [pc, #24]	@ (801969c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019684:	4909      	ldr	r1, [pc, #36]	@ (80196ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019686:	480a      	ldr	r0, [pc, #40]	@ (80196b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019688:	f007 fcdc 	bl	8021044 <__aeabi_atexit>
 801968c:	4b05      	ldr	r3, [pc, #20]	@ (80196a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801968e:	646b      	str	r3, [r5, #68]	@ 0x44
 8019690:	4b07      	ldr	r3, [pc, #28]	@ (80196b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019692:	64ab      	str	r3, [r5, #72]	@ 0x48
 8019694:	bd38      	pop	{r3, r4, r5, pc}
 8019696:	bf00      	nop
 8019698:	200022fc 	.word	0x200022fc
 801969c:	20000000 	.word	0x20000000
 80196a0:	08015387 	.word	0x08015387
 80196a4:	20000050 	.word	0x20000050
 80196a8:	20002300 	.word	0x20002300
 80196ac:	08015385 	.word	0x08015385
 80196b0:	20000054 	.word	0x20000054

080196b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80196b4:	b538      	push	{r3, r4, r5, lr}
 80196b6:	4605      	mov	r5, r0
 80196b8:	4c13      	ldr	r4, [pc, #76]	@ (8019708 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x54>)
 80196ba:	e8d4 3f8f 	ldab	r3, [r4]
 80196be:	07da      	lsls	r2, r3, #31
 80196c0:	d40b      	bmi.n	80196da <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x26>
 80196c2:	4620      	mov	r0, r4
 80196c4:	f007 fcc5 	bl	8021052 <__cxa_guard_acquire>
 80196c8:	b138      	cbz	r0, 80196da <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x26>
 80196ca:	4620      	mov	r0, r4
 80196cc:	f007 fccd 	bl	802106a <__cxa_guard_release>
 80196d0:	4a0e      	ldr	r2, [pc, #56]	@ (801970c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80196d2:	490f      	ldr	r1, [pc, #60]	@ (8019710 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80196d4:	480f      	ldr	r0, [pc, #60]	@ (8019714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80196d6:	f007 fcb5 	bl	8021044 <__aeabi_atexit>
 80196da:	4c0f      	ldr	r4, [pc, #60]	@ (8019718 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80196dc:	e8d4 3f8f 	ldab	r3, [r4]
 80196e0:	07db      	lsls	r3, r3, #31
 80196e2:	d40b      	bmi.n	80196fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x48>
 80196e4:	4620      	mov	r0, r4
 80196e6:	f007 fcb4 	bl	8021052 <__cxa_guard_acquire>
 80196ea:	b138      	cbz	r0, 80196fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x48>
 80196ec:	4620      	mov	r0, r4
 80196ee:	f007 fcbc 	bl	802106a <__cxa_guard_release>
 80196f2:	4a06      	ldr	r2, [pc, #24]	@ (801970c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80196f4:	4909      	ldr	r1, [pc, #36]	@ (801971c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80196f6:	480a      	ldr	r0, [pc, #40]	@ (8019720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80196f8:	f007 fca4 	bl	8021044 <__aeabi_atexit>
 80196fc:	4b05      	ldr	r3, [pc, #20]	@ (8019714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80196fe:	63eb      	str	r3, [r5, #60]	@ 0x3c
 8019700:	4b07      	ldr	r3, [pc, #28]	@ (8019720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019702:	642b      	str	r3, [r5, #64]	@ 0x40
 8019704:	bd38      	pop	{r3, r4, r5, pc}
 8019706:	bf00      	nop
 8019708:	2000231c 	.word	0x2000231c
 801970c:	20000000 	.word	0x20000000
 8019710:	0801538b 	.word	0x0801538b
 8019714:	20000070 	.word	0x20000070
 8019718:	20002320 	.word	0x20002320
 801971c:	08015389 	.word	0x08015389
 8019720:	20000074 	.word	0x20000074

08019724 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019724:	b510      	push	{r4, lr}
 8019726:	4604      	mov	r4, r0
 8019728:	f7ff ff1c 	bl	8019564 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801972c:	4620      	mov	r0, r4
 801972e:	f7ff ff89 	bl	8019644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019732:	4620      	mov	r0, r4
 8019734:	f7ff ff4e 	bl	80195d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019738:	4620      	mov	r0, r4
 801973a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801973e:	f7ff bfb9 	b.w	80196b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019744 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019744:	b538      	push	{r3, r4, r5, lr}
 8019746:	4605      	mov	r5, r0
 8019748:	4c13      	ldr	r4, [pc, #76]	@ (8019798 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x54>)
 801974a:	e8d4 3f8f 	ldab	r3, [r4]
 801974e:	07da      	lsls	r2, r3, #31
 8019750:	d40b      	bmi.n	801976a <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x26>
 8019752:	4620      	mov	r0, r4
 8019754:	f007 fc7d 	bl	8021052 <__cxa_guard_acquire>
 8019758:	b138      	cbz	r0, 801976a <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x26>
 801975a:	4620      	mov	r0, r4
 801975c:	f007 fc85 	bl	802106a <__cxa_guard_release>
 8019760:	4a0e      	ldr	r2, [pc, #56]	@ (801979c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019762:	490f      	ldr	r1, [pc, #60]	@ (80197a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019764:	480f      	ldr	r0, [pc, #60]	@ (80197a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019766:	f007 fc6d 	bl	8021044 <__aeabi_atexit>
 801976a:	4c0f      	ldr	r4, [pc, #60]	@ (80197a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801976c:	e8d4 3f8f 	ldab	r3, [r4]
 8019770:	07db      	lsls	r3, r3, #31
 8019772:	d40b      	bmi.n	801978c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x48>
 8019774:	4620      	mov	r0, r4
 8019776:	f007 fc6c 	bl	8021052 <__cxa_guard_acquire>
 801977a:	b138      	cbz	r0, 801978c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x48>
 801977c:	4620      	mov	r0, r4
 801977e:	f007 fc74 	bl	802106a <__cxa_guard_release>
 8019782:	4a06      	ldr	r2, [pc, #24]	@ (801979c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019784:	4909      	ldr	r1, [pc, #36]	@ (80197ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019786:	480a      	ldr	r0, [pc, #40]	@ (80197b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019788:	f007 fc5c 	bl	8021044 <__aeabi_atexit>
 801978c:	4b05      	ldr	r3, [pc, #20]	@ (80197a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801978e:	666b      	str	r3, [r5, #100]	@ 0x64
 8019790:	4b07      	ldr	r3, [pc, #28]	@ (80197b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019792:	66ab      	str	r3, [r5, #104]	@ 0x68
 8019794:	bd38      	pop	{r3, r4, r5, pc}
 8019796:	bf00      	nop
 8019798:	20002304 	.word	0x20002304
 801979c:	20000000 	.word	0x20000000
 80197a0:	08015377 	.word	0x08015377
 80197a4:	20000058 	.word	0x20000058
 80197a8:	20002308 	.word	0x20002308
 80197ac:	08015375 	.word	0x08015375
 80197b0:	2000005c 	.word	0x2000005c

080197b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80197b4:	b538      	push	{r3, r4, r5, lr}
 80197b6:	4605      	mov	r5, r0
 80197b8:	4c13      	ldr	r4, [pc, #76]	@ (8019808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x54>)
 80197ba:	e8d4 3f8f 	ldab	r3, [r4]
 80197be:	07da      	lsls	r2, r3, #31
 80197c0:	d40b      	bmi.n	80197da <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x26>
 80197c2:	4620      	mov	r0, r4
 80197c4:	f007 fc45 	bl	8021052 <__cxa_guard_acquire>
 80197c8:	b138      	cbz	r0, 80197da <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x26>
 80197ca:	4620      	mov	r0, r4
 80197cc:	f007 fc4d 	bl	802106a <__cxa_guard_release>
 80197d0:	4a0e      	ldr	r2, [pc, #56]	@ (801980c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80197d2:	490f      	ldr	r1, [pc, #60]	@ (8019810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80197d4:	480f      	ldr	r0, [pc, #60]	@ (8019814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80197d6:	f007 fc35 	bl	8021044 <__aeabi_atexit>
 80197da:	4c0f      	ldr	r4, [pc, #60]	@ (8019818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80197dc:	e8d4 3f8f 	ldab	r3, [r4]
 80197e0:	07db      	lsls	r3, r3, #31
 80197e2:	d40b      	bmi.n	80197fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x48>
 80197e4:	4620      	mov	r0, r4
 80197e6:	f007 fc34 	bl	8021052 <__cxa_guard_acquire>
 80197ea:	b138      	cbz	r0, 80197fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x48>
 80197ec:	4620      	mov	r0, r4
 80197ee:	f007 fc3c 	bl	802106a <__cxa_guard_release>
 80197f2:	4a06      	ldr	r2, [pc, #24]	@ (801980c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80197f4:	4909      	ldr	r1, [pc, #36]	@ (801981c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80197f6:	480a      	ldr	r0, [pc, #40]	@ (8019820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80197f8:	f007 fc24 	bl	8021044 <__aeabi_atexit>
 80197fc:	4b05      	ldr	r3, [pc, #20]	@ (8019814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80197fe:	65eb      	str	r3, [r5, #92]	@ 0x5c
 8019800:	4b07      	ldr	r3, [pc, #28]	@ (8019820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019802:	662b      	str	r3, [r5, #96]	@ 0x60
 8019804:	bd38      	pop	{r3, r4, r5, pc}
 8019806:	bf00      	nop
 8019808:	200022dc 	.word	0x200022dc
 801980c:	20000000 	.word	0x20000000
 8019810:	0801537b 	.word	0x0801537b
 8019814:	20000030 	.word	0x20000030
 8019818:	200022e0 	.word	0x200022e0
 801981c:	08015379 	.word	0x08015379
 8019820:	20000034 	.word	0x20000034

08019824 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019824:	b510      	push	{r4, lr}
 8019826:	4604      	mov	r4, r0
 8019828:	f7ff ff8c 	bl	8019744 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801982c:	4620      	mov	r0, r4
 801982e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019832:	f7ff bfbf 	b.w	80197b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019838:	b538      	push	{r3, r4, r5, lr}
 801983a:	4605      	mov	r5, r0
 801983c:	4c13      	ldr	r4, [pc, #76]	@ (801988c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x54>)
 801983e:	e8d4 3f8f 	ldab	r3, [r4]
 8019842:	07da      	lsls	r2, r3, #31
 8019844:	d40b      	bmi.n	801985e <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x26>
 8019846:	4620      	mov	r0, r4
 8019848:	f007 fc03 	bl	8021052 <__cxa_guard_acquire>
 801984c:	b138      	cbz	r0, 801985e <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x26>
 801984e:	4620      	mov	r0, r4
 8019850:	f007 fc0b 	bl	802106a <__cxa_guard_release>
 8019854:	4a0e      	ldr	r2, [pc, #56]	@ (8019890 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019856:	490f      	ldr	r1, [pc, #60]	@ (8019894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019858:	480f      	ldr	r0, [pc, #60]	@ (8019898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801985a:	f007 fbf3 	bl	8021044 <__aeabi_atexit>
 801985e:	4c0f      	ldr	r4, [pc, #60]	@ (801989c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019860:	e8d4 3f8f 	ldab	r3, [r4]
 8019864:	07db      	lsls	r3, r3, #31
 8019866:	d40b      	bmi.n	8019880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x48>
 8019868:	4620      	mov	r0, r4
 801986a:	f007 fbf2 	bl	8021052 <__cxa_guard_acquire>
 801986e:	b138      	cbz	r0, 8019880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x48>
 8019870:	4620      	mov	r0, r4
 8019872:	f007 fbfa 	bl	802106a <__cxa_guard_release>
 8019876:	4a06      	ldr	r2, [pc, #24]	@ (8019890 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019878:	4909      	ldr	r1, [pc, #36]	@ (80198a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801987a:	480a      	ldr	r0, [pc, #40]	@ (80198a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801987c:	f007 fbe2 	bl	8021044 <__aeabi_atexit>
 8019880:	4b05      	ldr	r3, [pc, #20]	@ (8019898 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019882:	676b      	str	r3, [r5, #116]	@ 0x74
 8019884:	4b07      	ldr	r3, [pc, #28]	@ (80198a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019886:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019888:	bd38      	pop	{r3, r4, r5, pc}
 801988a:	bf00      	nop
 801988c:	200022d4 	.word	0x200022d4
 8019890:	20000000 	.word	0x20000000
 8019894:	0801536f 	.word	0x0801536f
 8019898:	20000028 	.word	0x20000028
 801989c:	200022d8 	.word	0x200022d8
 80198a0:	0801536d 	.word	0x0801536d
 80198a4:	2000002c 	.word	0x2000002c

080198a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80198a8:	b538      	push	{r3, r4, r5, lr}
 80198aa:	4605      	mov	r5, r0
 80198ac:	4c13      	ldr	r4, [pc, #76]	@ (80198fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x54>)
 80198ae:	e8d4 3f8f 	ldab	r3, [r4]
 80198b2:	07da      	lsls	r2, r3, #31
 80198b4:	d40b      	bmi.n	80198ce <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x26>
 80198b6:	4620      	mov	r0, r4
 80198b8:	f007 fbcb 	bl	8021052 <__cxa_guard_acquire>
 80198bc:	b138      	cbz	r0, 80198ce <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x26>
 80198be:	4620      	mov	r0, r4
 80198c0:	f007 fbd3 	bl	802106a <__cxa_guard_release>
 80198c4:	4a0e      	ldr	r2, [pc, #56]	@ (8019900 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80198c6:	490f      	ldr	r1, [pc, #60]	@ (8019904 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80198c8:	480f      	ldr	r0, [pc, #60]	@ (8019908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80198ca:	f007 fbbb 	bl	8021044 <__aeabi_atexit>
 80198ce:	4c0f      	ldr	r4, [pc, #60]	@ (801990c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80198d0:	e8d4 3f8f 	ldab	r3, [r4]
 80198d4:	07db      	lsls	r3, r3, #31
 80198d6:	d40b      	bmi.n	80198f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x48>
 80198d8:	4620      	mov	r0, r4
 80198da:	f007 fbba 	bl	8021052 <__cxa_guard_acquire>
 80198de:	b138      	cbz	r0, 80198f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x48>
 80198e0:	4620      	mov	r0, r4
 80198e2:	f007 fbc2 	bl	802106a <__cxa_guard_release>
 80198e6:	4a06      	ldr	r2, [pc, #24]	@ (8019900 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80198e8:	4909      	ldr	r1, [pc, #36]	@ (8019910 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80198ea:	480a      	ldr	r0, [pc, #40]	@ (8019914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80198ec:	f007 fbaa 	bl	8021044 <__aeabi_atexit>
 80198f0:	4b05      	ldr	r3, [pc, #20]	@ (8019908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80198f2:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80198f4:	4b07      	ldr	r3, [pc, #28]	@ (8019914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80198f6:	672b      	str	r3, [r5, #112]	@ 0x70
 80198f8:	bd38      	pop	{r3, r4, r5, pc}
 80198fa:	bf00      	nop
 80198fc:	200022cc 	.word	0x200022cc
 8019900:	20000000 	.word	0x20000000
 8019904:	08015373 	.word	0x08015373
 8019908:	20000020 	.word	0x20000020
 801990c:	200022d0 	.word	0x200022d0
 8019910:	08015371 	.word	0x08015371
 8019914:	20000024 	.word	0x20000024

08019918 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019918:	b510      	push	{r4, lr}
 801991a:	4604      	mov	r4, r0
 801991c:	f7ff ff8c 	bl	8019838 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019920:	4620      	mov	r0, r4
 8019922:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019926:	f7ff bfbf 	b.w	80198a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801992a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801992a:	b510      	push	{r4, lr}
 801992c:	4604      	mov	r4, r0
 801992e:	f7ff fff3 	bl	8019918 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019932:	4620      	mov	r0, r4
 8019934:	f7ff ff76 	bl	8019824 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019938:	4620      	mov	r0, r4
 801993a:	f7ff fe09 	bl	8019550 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801993e:	4620      	mov	r0, r4
 8019940:	f7ff fd12 	bl	8019368 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019944:	4620      	mov	r0, r4
 8019946:	f7ff fd89 	bl	801945c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801994a:	4620      	mov	r0, r4
 801994c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019950:	f7ff bee8 	b.w	8019724 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019954 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019954:	b538      	push	{r3, r4, r5, lr}
 8019956:	4605      	mov	r5, r0
 8019958:	4c09      	ldr	r4, [pc, #36]	@ (8019980 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x2c>)
 801995a:	e8d4 3f8f 	ldab	r3, [r4]
 801995e:	07db      	lsls	r3, r3, #31
 8019960:	d40b      	bmi.n	801997a <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x26>
 8019962:	4620      	mov	r0, r4
 8019964:	f007 fb75 	bl	8021052 <__cxa_guard_acquire>
 8019968:	b138      	cbz	r0, 801997a <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x26>
 801996a:	4620      	mov	r0, r4
 801996c:	f007 fb7d 	bl	802106a <__cxa_guard_release>
 8019970:	4a04      	ldr	r2, [pc, #16]	@ (8019984 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019972:	4905      	ldr	r1, [pc, #20]	@ (8019988 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019974:	4805      	ldr	r0, [pc, #20]	@ (801998c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019976:	f007 fb65 	bl	8021044 <__aeabi_atexit>
 801997a:	4b04      	ldr	r3, [pc, #16]	@ (801998c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801997c:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801997e:	bd38      	pop	{r3, r4, r5, pc}
 8019980:	200022c0 	.word	0x200022c0
 8019984:	20000000 	.word	0x20000000
 8019988:	0801536b 	.word	0x0801536b
 801998c:	20000018 	.word	0x20000018

08019990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019990:	b538      	push	{r3, r4, r5, lr}
 8019992:	4605      	mov	r5, r0
 8019994:	4c0a      	ldr	r4, [pc, #40]	@ (80199c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019996:	e8d4 3f8f 	ldab	r3, [r4]
 801999a:	07db      	lsls	r3, r3, #31
 801999c:	d40b      	bmi.n	80199b6 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x26>
 801999e:	4620      	mov	r0, r4
 80199a0:	f007 fb57 	bl	8021052 <__cxa_guard_acquire>
 80199a4:	b138      	cbz	r0, 80199b6 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x26>
 80199a6:	4620      	mov	r0, r4
 80199a8:	f007 fb5f 	bl	802106a <__cxa_guard_release>
 80199ac:	4a05      	ldr	r2, [pc, #20]	@ (80199c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80199ae:	4906      	ldr	r1, [pc, #24]	@ (80199c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80199b0:	4806      	ldr	r0, [pc, #24]	@ (80199cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80199b2:	f007 fb47 	bl	8021044 <__aeabi_atexit>
 80199b6:	4b05      	ldr	r3, [pc, #20]	@ (80199cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80199b8:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 80199bc:	bd38      	pop	{r3, r4, r5, pc}
 80199be:	bf00      	nop
 80199c0:	200022c4 	.word	0x200022c4
 80199c4:	20000000 	.word	0x20000000
 80199c8:	08015369 	.word	0x08015369
 80199cc:	2000001c 	.word	0x2000001c

080199d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80199d0:	b570      	push	{r4, r5, r6, lr}
 80199d2:	4606      	mov	r6, r0
 80199d4:	4d0b      	ldr	r5, [pc, #44]	@ (8019a04 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x34>)
 80199d6:	e8d5 3f8f 	ldab	r3, [r5]
 80199da:	f013 0f01 	tst.w	r3, #1
 80199de:	4c0a      	ldr	r4, [pc, #40]	@ (8019a08 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80199e0:	d10d      	bne.n	80199fe <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x2e>
 80199e2:	4628      	mov	r0, r5
 80199e4:	f007 fb35 	bl	8021052 <__cxa_guard_acquire>
 80199e8:	b148      	cbz	r0, 80199fe <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x2e>
 80199ea:	4b08      	ldr	r3, [pc, #32]	@ (8019a0c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80199ec:	4628      	mov	r0, r5
 80199ee:	6023      	str	r3, [r4, #0]
 80199f0:	f007 fb3b 	bl	802106a <__cxa_guard_release>
 80199f4:	4a06      	ldr	r2, [pc, #24]	@ (8019a10 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80199f6:	4907      	ldr	r1, [pc, #28]	@ (8019a14 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80199f8:	4620      	mov	r0, r4
 80199fa:	f007 fb23 	bl	8021044 <__aeabi_atexit>
 80199fe:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 8019a02:	bd70      	pop	{r4, r5, r6, pc}
 8019a04:	200022c8 	.word	0x200022c8
 8019a08:	20002440 	.word	0x20002440
 8019a0c:	08023ff4 	.word	0x08023ff4
 8019a10:	20000000 	.word	0x20000000
 8019a14:	08015367 	.word	0x08015367

08019a18 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8019a18:	b510      	push	{r4, lr}
 8019a1a:	4604      	mov	r4, r0
 8019a1c:	f7ff ff9a 	bl	8019954 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8019a20:	4620      	mov	r0, r4
 8019a22:	f7ff ffb5 	bl	8019990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8019a26:	4620      	mov	r0, r4
 8019a28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019a2c:	f7ff bfd0 	b.w	80199d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019a30 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8019a30:	b570      	push	{r4, r5, r6, lr}
 8019a32:	4606      	mov	r6, r0
 8019a34:	4d0b      	ldr	r5, [pc, #44]	@ (8019a64 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x34>)
 8019a36:	e8d5 3f8f 	ldab	r3, [r5]
 8019a3a:	f013 0f01 	tst.w	r3, #1
 8019a3e:	4c0a      	ldr	r4, [pc, #40]	@ (8019a68 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019a40:	d10d      	bne.n	8019a5e <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x2e>
 8019a42:	4628      	mov	r0, r5
 8019a44:	f007 fb05 	bl	8021052 <__cxa_guard_acquire>
 8019a48:	b148      	cbz	r0, 8019a5e <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x2e>
 8019a4a:	4b08      	ldr	r3, [pc, #32]	@ (8019a6c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 8019a4c:	4628      	mov	r0, r5
 8019a4e:	6023      	str	r3, [r4, #0]
 8019a50:	f007 fb0b 	bl	802106a <__cxa_guard_release>
 8019a54:	4a06      	ldr	r2, [pc, #24]	@ (8019a70 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8019a56:	4907      	ldr	r1, [pc, #28]	@ (8019a74 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 8019a58:	4620      	mov	r0, r4
 8019a5a:	f007 faf3 	bl	8021044 <__aeabi_atexit>
 8019a5e:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8019a62:	bd70      	pop	{r4, r5, r6, pc}
 8019a64:	200022bc 	.word	0x200022bc
 8019a68:	2000233c 	.word	0x2000233c
 8019a6c:	08024010 	.word	0x08024010
 8019a70:	20000000 	.word	0x20000000
 8019a74:	08015365 	.word	0x08015365

08019a78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a7c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 8019a80:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019a84:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019a88:	2d00      	cmp	r5, #0
 8019a8a:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019a8e:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8019a92:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8019a96:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019a9a:	eb02 0a0c 	add.w	sl, r2, ip
 8019a9e:	8808      	ldrh	r0, [r1, #0]
 8019aa0:	f2c0 80b0 	blt.w	8019c04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019aa4:	45ab      	cmp	fp, r5
 8019aa6:	f340 80ad 	ble.w	8019c04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019aaa:	2c00      	cmp	r4, #0
 8019aac:	f2c0 80a8 	blt.w	8019c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019ab0:	45a6      	cmp	lr, r4
 8019ab2:	f340 80a5 	ble.w	8019c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019ab6:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019aba:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019abe:	1c62      	adds	r2, r4, #1
 8019ac0:	f100 80a3 	bmi.w	8019c0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019ac4:	4596      	cmp	lr, r2
 8019ac6:	f340 80a0 	ble.w	8019c0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019aca:	f1b9 0f00 	cmp.w	r9, #0
 8019ace:	f000 809c 	beq.w	8019c0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019ad2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019ad6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019ada:	3501      	adds	r5, #1
 8019adc:	f100 8099 	bmi.w	8019c12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019ae0:	45ab      	cmp	fp, r5
 8019ae2:	f340 8096 	ble.w	8019c12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019ae6:	2f00      	cmp	r7, #0
 8019ae8:	f000 8093 	beq.w	8019c12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019aec:	2c00      	cmp	r4, #0
 8019aee:	f2c0 808e 	blt.w	8019c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019af2:	45a6      	cmp	lr, r4
 8019af4:	f340 808b 	ble.w	8019c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019af8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019afc:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019b00:	3401      	adds	r4, #1
 8019b02:	f100 8089 	bmi.w	8019c18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019b06:	45a6      	cmp	lr, r4
 8019b08:	f340 8086 	ble.w	8019c18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019b0c:	f1b9 0f00 	cmp.w	r9, #0
 8019b10:	f000 8082 	beq.w	8019c18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019b14:	44d6      	add	lr, sl
 8019b16:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019b1a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019b1e:	fb19 fe07 	smulbb	lr, r9, r7
 8019b22:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019b26:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019b2a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8019b2e:	ea44 0808 	orr.w	r8, r4, r8
 8019b32:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019b36:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019b3a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019b3e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019b42:	ea44 0c0c 	orr.w	ip, r4, ip
 8019b46:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019b4a:	fb04 f40c 	mul.w	r4, r4, ip
 8019b4e:	f1c7 0210 	rsb	r2, r7, #16
 8019b52:	eba2 0209 	sub.w	r2, r2, r9
 8019b56:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019b5a:	fb02 4808 	mla	r8, r2, r8, r4
 8019b5e:	b2b4      	uxth	r4, r6
 8019b60:	43f6      	mvns	r6, r6
 8019b62:	041a      	lsls	r2, r3, #16
 8019b64:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019b68:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019b6c:	4313      	orrs	r3, r2
 8019b6e:	fb0e 8303 	mla	r3, lr, r3, r8
 8019b72:	042a      	lsls	r2, r5, #16
 8019b74:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019b78:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019b7c:	432a      	orrs	r2, r5
 8019b7e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019b82:	fb07 3202 	mla	r2, r7, r2, r3
 8019b86:	0d53      	lsrs	r3, r2, #21
 8019b88:	0952      	lsrs	r2, r2, #5
 8019b8a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019b8e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019b92:	431a      	orrs	r2, r3
 8019b94:	b293      	uxth	r3, r2
 8019b96:	1202      	asrs	r2, r0, #8
 8019b98:	b2f6      	uxtb	r6, r6
 8019b9a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019b9e:	fb12 f206 	smulbb	r2, r2, r6
 8019ba2:	10c7      	asrs	r7, r0, #3
 8019ba4:	00c0      	lsls	r0, r0, #3
 8019ba6:	b2c0      	uxtb	r0, r0
 8019ba8:	121d      	asrs	r5, r3, #8
 8019baa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019bae:	fb10 f006 	smulbb	r0, r0, r6
 8019bb2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019bb6:	fb17 f706 	smulbb	r7, r7, r6
 8019bba:	fb05 2504 	mla	r5, r5, r4, r2
 8019bbe:	10da      	asrs	r2, r3, #3
 8019bc0:	00db      	lsls	r3, r3, #3
 8019bc2:	b2db      	uxtb	r3, r3
 8019bc4:	fb03 0004 	mla	r0, r3, r4, r0
 8019bc8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019bcc:	fb02 7204 	mla	r2, r2, r4, r7
 8019bd0:	b2ad      	uxth	r5, r5
 8019bd2:	b280      	uxth	r0, r0
 8019bd4:	1c6b      	adds	r3, r5, #1
 8019bd6:	b292      	uxth	r2, r2
 8019bd8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019bdc:	1c43      	adds	r3, r0, #1
 8019bde:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019be2:	1c50      	adds	r0, r2, #1
 8019be4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019be8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019bec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019bf0:	0952      	lsrs	r2, r2, #5
 8019bf2:	432b      	orrs	r3, r5
 8019bf4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019bf8:	4313      	orrs	r3, r2
 8019bfa:	800b      	strh	r3, [r1, #0]
 8019bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c00:	4680      	mov	r8, r0
 8019c02:	e75c      	b.n	8019abe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019c04:	4684      	mov	ip, r0
 8019c06:	4680      	mov	r8, r0
 8019c08:	e767      	b.n	8019ada <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019c0a:	4684      	mov	ip, r0
 8019c0c:	e765      	b.n	8019ada <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019c0e:	4605      	mov	r5, r0
 8019c10:	e776      	b.n	8019b00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019c12:	4603      	mov	r3, r0
 8019c14:	4605      	mov	r5, r0
 8019c16:	e782      	b.n	8019b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019c18:	4603      	mov	r3, r0
 8019c1a:	e780      	b.n	8019b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019c1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c20:	b099      	sub	sp, #100	@ 0x64
 8019c22:	9215      	str	r2, [sp, #84]	@ 0x54
 8019c24:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019c26:	9016      	str	r0, [sp, #88]	@ 0x58
 8019c28:	9309      	str	r3, [sp, #36]	@ 0x24
 8019c2a:	6850      	ldr	r0, [r2, #4]
 8019c2c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019c30:	910c      	str	r1, [sp, #48]	@ 0x30
 8019c32:	930d      	str	r3, [sp, #52]	@ 0x34
 8019c34:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019c38:	fb00 1303 	mla	r3, r0, r3, r1
 8019c3c:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019c40:	6812      	ldr	r2, [r2, #0]
 8019c42:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019c46:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c48:	681b      	ldr	r3, [r3, #0]
 8019c4a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019c4c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c4e:	685e      	ldr	r6, [r3, #4]
 8019c50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019c52:	3604      	adds	r6, #4
 8019c54:	43db      	mvns	r3, r3
 8019c56:	b2db      	uxtb	r3, r3
 8019c58:	930a      	str	r3, [sp, #40]	@ 0x28
 8019c5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019c5c:	2b00      	cmp	r3, #0
 8019c5e:	dc03      	bgt.n	8019c68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019c60:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8019c62:	2b00      	cmp	r3, #0
 8019c64:	f340 8225 	ble.w	801a0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019c68:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019c6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019c72:	1e48      	subs	r0, r1, #1
 8019c74:	1e57      	subs	r7, r2, #1
 8019c76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019c78:	2b00      	cmp	r3, #0
 8019c7a:	f340 80e3 	ble.w	8019e44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c7e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019c82:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019c86:	d406      	bmi.n	8019c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c88:	4584      	cmp	ip, r0
 8019c8a:	da04      	bge.n	8019c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c8c:	2b00      	cmp	r3, #0
 8019c8e:	db02      	blt.n	8019c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019c90:	42bb      	cmp	r3, r7
 8019c92:	f2c0 80d8 	blt.w	8019e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019c96:	f11c 0c01 	adds.w	ip, ip, #1
 8019c9a:	f100 80c9 	bmi.w	8019e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c9e:	4561      	cmp	r1, ip
 8019ca0:	f2c0 80c6 	blt.w	8019e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ca4:	3301      	adds	r3, #1
 8019ca6:	f100 80c3 	bmi.w	8019e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019caa:	429a      	cmp	r2, r3
 8019cac:	f2c0 80c0 	blt.w	8019e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019cb0:	4647      	mov	r7, r8
 8019cb2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8019cb6:	f1bb 0f00 	cmp.w	fp, #0
 8019cba:	f340 80e3 	ble.w	8019e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019cbe:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019cc0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019cc2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019cc6:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019cca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019cce:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019cd2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019cd6:	689b      	ldr	r3, [r3, #8]
 8019cd8:	f100 8121 	bmi.w	8019f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019cdc:	f103 39ff 	add.w	r9, r3, #4294967295
 8019ce0:	454a      	cmp	r2, r9
 8019ce2:	f280 811c 	bge.w	8019f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019ce6:	f1bc 0f00 	cmp.w	ip, #0
 8019cea:	f2c0 8118 	blt.w	8019f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019cee:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019cf2:	45cc      	cmp	ip, r9
 8019cf4:	f280 8113 	bge.w	8019f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019cf8:	b21b      	sxth	r3, r3
 8019cfa:	fb0c 2203 	mla	r2, ip, r3, r2
 8019cfe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019d00:	eb04 0902 	add.w	r9, r4, r2
 8019d04:	5ca2      	ldrb	r2, [r4, r2]
 8019d06:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019d0a:	2800      	cmp	r0, #0
 8019d0c:	f000 80fe 	beq.w	8019f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019d10:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019d14:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019d18:	9211      	str	r2, [sp, #68]	@ 0x44
 8019d1a:	b151      	cbz	r1, 8019d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019d1c:	eb09 0203 	add.w	r2, r9, r3
 8019d20:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019d24:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019d28:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019d2a:	7853      	ldrb	r3, [r2, #1]
 8019d2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019d30:	9312      	str	r3, [sp, #72]	@ 0x48
 8019d32:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019d34:	fb10 f201 	smulbb	r2, r0, r1
 8019d38:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019d3c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019d40:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d44:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d48:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019d4a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019d4c:	041b      	lsls	r3, r3, #16
 8019d4e:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8019d52:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019d56:	10d2      	asrs	r2, r2, #3
 8019d58:	4323      	orrs	r3, r4
 8019d5a:	4353      	muls	r3, r2
 8019d5c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019d60:	fb09 330c 	mla	r3, r9, ip, r3
 8019d64:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019d68:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019d6c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019d70:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019d74:	f1c1 0c10 	rsb	ip, r1, #16
 8019d78:	ebac 0c00 	sub.w	ip, ip, r0
 8019d7c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019d80:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019d84:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019d86:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019d8a:	0418      	lsls	r0, r3, #16
 8019d8c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019d90:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019d94:	4318      	orrs	r0, r3
 8019d96:	fb02 c200 	mla	r2, r2, r0, ip
 8019d9a:	8838      	ldrh	r0, [r7, #0]
 8019d9c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019d9e:	0d53      	lsrs	r3, r2, #21
 8019da0:	1201      	asrs	r1, r0, #8
 8019da2:	0952      	lsrs	r2, r2, #5
 8019da4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019da8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019dac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019db0:	431a      	orrs	r2, r3
 8019db2:	fb11 f104 	smulbb	r1, r1, r4
 8019db6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019dba:	00c0      	lsls	r0, r0, #3
 8019dbc:	b292      	uxth	r2, r2
 8019dbe:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019dc2:	b2c0      	uxtb	r0, r0
 8019dc4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019dc8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019dcc:	fb1e fe04 	smulbb	lr, lr, r4
 8019dd0:	fb10 f004 	smulbb	r0, r0, r4
 8019dd4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019dd8:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019ddc:	10d1      	asrs	r1, r2, #3
 8019dde:	00d2      	lsls	r2, r2, #3
 8019de0:	b2d2      	uxtb	r2, r2
 8019de2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019de6:	fb01 e103 	mla	r1, r1, r3, lr
 8019dea:	fb02 0303 	mla	r3, r2, r3, r0
 8019dee:	fa1f fc8c 	uxth.w	ip, ip
 8019df2:	b29a      	uxth	r2, r3
 8019df4:	f10c 0301 	add.w	r3, ip, #1
 8019df8:	b289      	uxth	r1, r1
 8019dfa:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019dfe:	1c53      	adds	r3, r2, #1
 8019e00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019e04:	1c4a      	adds	r2, r1, #1
 8019e06:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019e0a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019e0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019e12:	0949      	lsrs	r1, r1, #5
 8019e14:	ea43 030c 	orr.w	r3, r3, ip
 8019e18:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019e1c:	430b      	orrs	r3, r1
 8019e1e:	803b      	strh	r3, [r7, #0]
 8019e20:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019e22:	3702      	adds	r7, #2
 8019e24:	449a      	add	sl, r3
 8019e26:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019e28:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019e2c:	441d      	add	r5, r3
 8019e2e:	e742      	b.n	8019cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019e30:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019e32:	f108 0802 	add.w	r8, r8, #2
 8019e36:	449a      	add	sl, r3
 8019e38:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019e3a:	441d      	add	r5, r3
 8019e3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e3e:	3b01      	subs	r3, #1
 8019e40:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e42:	e718      	b.n	8019c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019e44:	d023      	beq.n	8019e8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019e46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e48:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019e4a:	3b01      	subs	r3, #1
 8019e4c:	fb00 a003 	mla	r0, r0, r3, sl
 8019e50:	1400      	asrs	r0, r0, #16
 8019e52:	f53f af2d 	bmi.w	8019cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e56:	3901      	subs	r1, #1
 8019e58:	4288      	cmp	r0, r1
 8019e5a:	f6bf af29 	bge.w	8019cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e5e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8019e60:	fb01 5303 	mla	r3, r1, r3, r5
 8019e64:	141b      	asrs	r3, r3, #16
 8019e66:	f53f af23 	bmi.w	8019cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e6a:	3a01      	subs	r2, #1
 8019e6c:	4293      	cmp	r3, r2
 8019e6e:	f6bf af1f 	bge.w	8019cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019e72:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019e76:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019e7a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8019e7e:	f1be 0f00 	cmp.w	lr, #0
 8019e82:	dc6c      	bgt.n	8019f5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019e84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019e86:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019e8a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019e8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019e90:	2b00      	cmp	r3, #0
 8019e92:	f340 810e 	ble.w	801a0b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019e96:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019e9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ea2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019ea6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019eaa:	eef0 6a62 	vmov.f32	s13, s5
 8019eae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019eb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019eb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019eba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ebe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ec2:	ee16 aa90 	vmov	sl, s13
 8019ec6:	eef0 6a43 	vmov.f32	s13, s6
 8019eca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ece:	ee12 2a90 	vmov	r2, s5
 8019ed2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ed6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019ed8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019edc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ee0:	ee13 2a10 	vmov	r2, s6
 8019ee4:	9325      	str	r3, [sp, #148]	@ 0x94
 8019ee6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019ee8:	ee16 5a90 	vmov	r5, s13
 8019eec:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ef0:	9326      	str	r3, [sp, #152]	@ 0x98
 8019ef2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019ef4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019ef6:	3b01      	subs	r3, #1
 8019ef8:	930c      	str	r3, [sp, #48]	@ 0x30
 8019efa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019efc:	bf08      	it	eq
 8019efe:	4613      	moveq	r3, r2
 8019f00:	eeb0 3a67 	vmov.f32	s6, s15
 8019f04:	9309      	str	r3, [sp, #36]	@ 0x24
 8019f06:	eef0 2a47 	vmov.f32	s5, s14
 8019f0a:	e6a6      	b.n	8019c5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019f0c:	2900      	cmp	r1, #0
 8019f0e:	f43f af10 	beq.w	8019d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f12:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019f16:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f1a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019f1c:	e709      	b.n	8019d32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f1e:	f112 0901 	adds.w	r9, r2, #1
 8019f22:	f53f af7d 	bmi.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f26:	454b      	cmp	r3, r9
 8019f28:	f6ff af7a 	blt.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f2c:	f11c 0901 	adds.w	r9, ip, #1
 8019f30:	f53f af76 	bmi.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f34:	45ce      	cmp	lr, r9
 8019f36:	f6ff af73 	blt.w	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f3a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019f3c:	9202      	str	r2, [sp, #8]
 8019f3e:	b21b      	sxth	r3, r3
 8019f40:	fa0f f28e 	sxth.w	r2, lr
 8019f44:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019f48:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019f4c:	9201      	str	r2, [sp, #4]
 8019f4e:	9300      	str	r3, [sp, #0]
 8019f50:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019f52:	4633      	mov	r3, r6
 8019f54:	4639      	mov	r1, r7
 8019f56:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019f58:	f7ff fd8e 	bl	8019a78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019f5c:	e760      	b.n	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f5e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019f60:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019f64:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019f68:	1429      	asrs	r1, r5, #16
 8019f6a:	fb03 2101 	mla	r1, r3, r1, r2
 8019f6e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019f70:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019f72:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019f76:	440a      	add	r2, r1
 8019f78:	5c61      	ldrb	r1, [r4, r1]
 8019f7a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019f7e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019f82:	f1bc 0f00 	cmp.w	ip, #0
 8019f86:	f000 808c 	beq.w	801a0a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019f8a:	7857      	ldrb	r7, [r2, #1]
 8019f8c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019f90:	9413      	str	r4, [sp, #76]	@ 0x4c
 8019f92:	b140      	cbz	r0, 8019fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019f94:	18d7      	adds	r7, r2, r3
 8019f96:	5cd3      	ldrb	r3, [r2, r3]
 8019f98:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019f9c:	9310      	str	r3, [sp, #64]	@ 0x40
 8019f9e:	787b      	ldrb	r3, [r7, #1]
 8019fa0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019fa4:	9314      	str	r3, [sp, #80]	@ 0x50
 8019fa6:	fb1c f200 	smulbb	r2, ip, r0
 8019faa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019fac:	10d2      	asrs	r2, r2, #3
 8019fae:	041f      	lsls	r7, r3, #16
 8019fb0:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8019fb4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019fb8:	431f      	orrs	r7, r3
 8019fba:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019fbe:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019fc0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019fc2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019fc4:	041b      	lsls	r3, r3, #16
 8019fc6:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8019fca:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019fce:	ea43 030b 	orr.w	r3, r3, fp
 8019fd2:	4353      	muls	r3, r2
 8019fd4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019fd6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019fda:	fb04 3707 	mla	r7, r4, r7, r3
 8019fde:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019fe2:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019fe6:	ea43 0b01 	orr.w	fp, r3, r1
 8019fea:	f1c0 0110 	rsb	r1, r0, #16
 8019fee:	eba1 0c0c 	sub.w	ip, r1, ip
 8019ff2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019ff6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019ff8:	fb0c 770b 	mla	r7, ip, fp, r7
 8019ffc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a000:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801a004:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a008:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a00c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a010:	fb02 770c 	mla	r7, r2, ip, r7
 801a014:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801a016:	0d79      	lsrs	r1, r7, #21
 801a018:	8812      	ldrh	r2, [r2, #0]
 801a01a:	097f      	lsrs	r7, r7, #5
 801a01c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a020:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a024:	430f      	orrs	r7, r1
 801a026:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a028:	1211      	asrs	r1, r2, #8
 801a02a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a02e:	b2bb      	uxth	r3, r7
 801a030:	fb11 f104 	smulbb	r1, r1, r4
 801a034:	10d7      	asrs	r7, r2, #3
 801a036:	00d2      	lsls	r2, r2, #3
 801a038:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a03c:	b2d2      	uxtb	r2, r2
 801a03e:	1218      	asrs	r0, r3, #8
 801a040:	fb17 f704 	smulbb	r7, r7, r4
 801a044:	fb12 f204 	smulbb	r2, r2, r4
 801a048:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a04c:	fb00 1009 	mla	r0, r0, r9, r1
 801a050:	10d9      	asrs	r1, r3, #3
 801a052:	00db      	lsls	r3, r3, #3
 801a054:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a058:	b2db      	uxtb	r3, r3
 801a05a:	fb01 7109 	mla	r1, r1, r9, r7
 801a05e:	fb03 2309 	mla	r3, r3, r9, r2
 801a062:	b280      	uxth	r0, r0
 801a064:	b29b      	uxth	r3, r3
 801a066:	b289      	uxth	r1, r1
 801a068:	1c42      	adds	r2, r0, #1
 801a06a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a06e:	1c4f      	adds	r7, r1, #1
 801a070:	1c5a      	adds	r2, r3, #1
 801a072:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a076:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a07a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a07e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a082:	0949      	lsrs	r1, r1, #5
 801a084:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a086:	4310      	orrs	r0, r2
 801a088:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a08c:	4308      	orrs	r0, r1
 801a08e:	f823 0b02 	strh.w	r0, [r3], #2
 801a092:	930e      	str	r3, [sp, #56]	@ 0x38
 801a094:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a096:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a09a:	449a      	add	sl, r3
 801a09c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a09e:	441d      	add	r5, r3
 801a0a0:	e6ed      	b.n	8019e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a0a2:	2800      	cmp	r0, #0
 801a0a4:	f43f af7f 	beq.w	8019fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a0a8:	5cd3      	ldrb	r3, [r2, r3]
 801a0aa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a0ae:	9310      	str	r3, [sp, #64]	@ 0x40
 801a0b0:	e779      	b.n	8019fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a0b2:	b019      	add	sp, #100	@ 0x64
 801a0b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a0b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a0bc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a0c0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801a0c4:	fb08 470e 	mla	r7, r8, lr, r4
 801a0c8:	f1b8 0f00 	cmp.w	r8, #0
 801a0cc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801a0d0:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801a0d4:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801a0d8:	eb02 0907 	add.w	r9, r2, r7
 801a0dc:	8808      	ldrh	r0, [r1, #0]
 801a0de:	db67      	blt.n	801a1b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a0e0:	45c2      	cmp	sl, r8
 801a0e2:	dd65      	ble.n	801a1b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a0e4:	2c00      	cmp	r4, #0
 801a0e6:	db61      	blt.n	801a1ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a0e8:	45a6      	cmp	lr, r4
 801a0ea:	dd5f      	ble.n	801a1ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a0ec:	5dd2      	ldrb	r2, [r2, r7]
 801a0ee:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a0f2:	1c62      	adds	r2, r4, #1
 801a0f4:	d45f      	bmi.n	801a1b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0f6:	4596      	cmp	lr, r2
 801a0f8:	dd5d      	ble.n	801a1b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0fa:	2d00      	cmp	r5, #0
 801a0fc:	d05b      	beq.n	801a1b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a0fe:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a102:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a106:	f118 0801 	adds.w	r8, r8, #1
 801a10a:	d458      	bmi.n	801a1be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a10c:	45c2      	cmp	sl, r8
 801a10e:	dd56      	ble.n	801a1be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a110:	2e00      	cmp	r6, #0
 801a112:	d054      	beq.n	801a1be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a114:	2c00      	cmp	r4, #0
 801a116:	db50      	blt.n	801a1ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a118:	45a6      	cmp	lr, r4
 801a11a:	dd4e      	ble.n	801a1ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a11c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a120:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a124:	3401      	adds	r4, #1
 801a126:	d407      	bmi.n	801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a128:	45a6      	cmp	lr, r4
 801a12a:	dd05      	ble.n	801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a12c:	b125      	cbz	r5, 801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a12e:	44ce      	add	lr, r9
 801a130:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a134:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a138:	fb15 f406 	smulbb	r4, r5, r6
 801a13c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a140:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a144:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a148:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a14c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a150:	ea43 0c0c 	orr.w	ip, r3, ip
 801a154:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801a158:	f1c6 0310 	rsb	r3, r6, #16
 801a15c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801a160:	1b5b      	subs	r3, r3, r5
 801a162:	ea4e 0707 	orr.w	r7, lr, r7
 801a166:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a16a:	437d      	muls	r5, r7
 801a16c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a170:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a174:	0403      	lsls	r3, r0, #16
 801a176:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a17a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a17e:	4318      	orrs	r0, r3
 801a180:	fb04 c000 	mla	r0, r4, r0, ip
 801a184:	0413      	lsls	r3, r2, #16
 801a186:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a18a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a18e:	4313      	orrs	r3, r2
 801a190:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a194:	fb06 0003 	mla	r0, r6, r3, r0
 801a198:	0d43      	lsrs	r3, r0, #21
 801a19a:	0940      	lsrs	r0, r0, #5
 801a19c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a1a0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801a1a4:	4318      	orrs	r0, r3
 801a1a6:	8008      	strh	r0, [r1, #0]
 801a1a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a1ac:	4684      	mov	ip, r0
 801a1ae:	e7a0      	b.n	801a0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a1b0:	4607      	mov	r7, r0
 801a1b2:	4684      	mov	ip, r0
 801a1b4:	e7a7      	b.n	801a106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a1b6:	4607      	mov	r7, r0
 801a1b8:	e7a5      	b.n	801a106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a1ba:	4602      	mov	r2, r0
 801a1bc:	e7b2      	b.n	801a124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a1be:	4602      	mov	r2, r0
 801a1c0:	e7ba      	b.n	801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a1c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1c2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a1c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1ca:	b093      	sub	sp, #76	@ 0x4c
 801a1cc:	920f      	str	r2, [sp, #60]	@ 0x3c
 801a1ce:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a1d0:	9010      	str	r0, [sp, #64]	@ 0x40
 801a1d2:	6850      	ldr	r0, [r2, #4]
 801a1d4:	9108      	str	r1, [sp, #32]
 801a1d6:	9306      	str	r3, [sp, #24]
 801a1d8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801a1dc:	fb00 1303 	mla	r3, r0, r3, r1
 801a1e0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801a1e4:	6812      	ldr	r2, [r2, #0]
 801a1e6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a1ea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1ec:	681b      	ldr	r3, [r3, #0]
 801a1ee:	9307      	str	r3, [sp, #28]
 801a1f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a1f2:	685f      	ldr	r7, [r3, #4]
 801a1f4:	3704      	adds	r7, #4
 801a1f6:	9b08      	ldr	r3, [sp, #32]
 801a1f8:	2b00      	cmp	r3, #0
 801a1fa:	dc03      	bgt.n	801a204 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a1fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a1fe:	2b00      	cmp	r3, #0
 801a200:	f340 81b2 	ble.w	801a568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a204:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a206:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a20a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a20e:	1e48      	subs	r0, r1, #1
 801a210:	f102 3cff 	add.w	ip, r2, #4294967295
 801a214:	9b06      	ldr	r3, [sp, #24]
 801a216:	2b00      	cmp	r3, #0
 801a218:	f340 80a9 	ble.w	801a36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a21c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a220:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a224:	d406      	bmi.n	801a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a226:	4586      	cmp	lr, r0
 801a228:	da04      	bge.n	801a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a22a:	2b00      	cmp	r3, #0
 801a22c:	db02      	blt.n	801a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a22e:	4563      	cmp	r3, ip
 801a230:	f2c0 809e 	blt.w	801a370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a234:	f11e 0e01 	adds.w	lr, lr, #1
 801a238:	f100 808f 	bmi.w	801a35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a23c:	4571      	cmp	r1, lr
 801a23e:	f2c0 808c 	blt.w	801a35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a242:	3301      	adds	r3, #1
 801a244:	f100 8089 	bmi.w	801a35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a248:	429a      	cmp	r2, r3
 801a24a:	f2c0 8086 	blt.w	801a35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a24e:	46c8      	mov	r8, r9
 801a250:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a254:	f1bb 0f00 	cmp.w	fp, #0
 801a258:	f340 80a6 	ble.w	801a3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a25c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801a25e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a260:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a264:	1422      	asrs	r2, r4, #16
 801a266:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a26a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a26e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a272:	689b      	ldr	r3, [r3, #8]
 801a274:	f100 80e3 	bmi.w	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a278:	f103 3aff 	add.w	sl, r3, #4294967295
 801a27c:	4552      	cmp	r2, sl
 801a27e:	f280 80de 	bge.w	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a282:	f1bc 0f00 	cmp.w	ip, #0
 801a286:	f2c0 80da 	blt.w	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a28a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a28e:	45d4      	cmp	ip, sl
 801a290:	f280 80d5 	bge.w	801a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a294:	b21b      	sxth	r3, r3
 801a296:	fb0c 2203 	mla	r2, ip, r3, r2
 801a29a:	9d07      	ldr	r5, [sp, #28]
 801a29c:	eb05 0a02 	add.w	sl, r5, r2
 801a2a0:	5caa      	ldrb	r2, [r5, r2]
 801a2a2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a2a6:	2800      	cmp	r0, #0
 801a2a8:	f000 80c0 	beq.w	801a42c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a2ac:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a2b0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a2b4:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a2b6:	b151      	cbz	r1, 801a2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a2b8:	eb0a 0203 	add.w	r2, sl, r3
 801a2bc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a2c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a2c4:	9309      	str	r3, [sp, #36]	@ 0x24
 801a2c6:	7853      	ldrb	r3, [r2, #1]
 801a2c8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a2cc:	930c      	str	r3, [sp, #48]	@ 0x30
 801a2ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a2d0:	fb10 f201 	smulbb	r2, r0, r1
 801a2d4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a2d8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a2dc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a2e0:	ea4c 0c03 	orr.w	ip, ip, r3
 801a2e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a2e6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801a2e8:	041b      	lsls	r3, r3, #16
 801a2ea:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a2ee:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a2f2:	10d2      	asrs	r2, r2, #3
 801a2f4:	432b      	orrs	r3, r5
 801a2f6:	4353      	muls	r3, r2
 801a2f8:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a2fc:	fb0a 330c 	mla	r3, sl, ip, r3
 801a300:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a304:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a308:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a30c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a310:	f1c1 0c10 	rsb	ip, r1, #16
 801a314:	ebac 0c00 	sub.w	ip, ip, r0
 801a318:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a31c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a320:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a322:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a326:	0418      	lsls	r0, r3, #16
 801a328:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a32c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a330:	4318      	orrs	r0, r3
 801a332:	fb02 c200 	mla	r2, r2, r0, ip
 801a336:	0d53      	lsrs	r3, r2, #21
 801a338:	0952      	lsrs	r2, r2, #5
 801a33a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a33e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a342:	431a      	orrs	r2, r3
 801a344:	f8a8 2000 	strh.w	r2, [r8]
 801a348:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a34a:	f108 0802 	add.w	r8, r8, #2
 801a34e:	441c      	add	r4, r3
 801a350:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a352:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a356:	441e      	add	r6, r3
 801a358:	e77c      	b.n	801a254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a35a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a35c:	f109 0902 	add.w	r9, r9, #2
 801a360:	441c      	add	r4, r3
 801a362:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a364:	441e      	add	r6, r3
 801a366:	9b06      	ldr	r3, [sp, #24]
 801a368:	3b01      	subs	r3, #1
 801a36a:	9306      	str	r3, [sp, #24]
 801a36c:	e752      	b.n	801a214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a36e:	d020      	beq.n	801a3b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a370:	9b06      	ldr	r3, [sp, #24]
 801a372:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a374:	3b01      	subs	r3, #1
 801a376:	fb00 4003 	mla	r0, r0, r3, r4
 801a37a:	1400      	asrs	r0, r0, #16
 801a37c:	f53f af67 	bmi.w	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a380:	3901      	subs	r1, #1
 801a382:	4288      	cmp	r0, r1
 801a384:	f6bf af63 	bge.w	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a388:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801a38a:	fb01 6303 	mla	r3, r1, r3, r6
 801a38e:	141b      	asrs	r3, r3, #16
 801a390:	f53f af5d 	bmi.w	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a394:	3a01      	subs	r2, #1
 801a396:	4293      	cmp	r3, r2
 801a398:	f6bf af59 	bge.w	801a24e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a39c:	46ca      	mov	sl, r9
 801a39e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a3a2:	f1b8 0f00 	cmp.w	r8, #0
 801a3a6:	dc67      	bgt.n	801a478 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a3a8:	9b06      	ldr	r3, [sp, #24]
 801a3aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a3ae:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a3b2:	9b08      	ldr	r3, [sp, #32]
 801a3b4:	2b00      	cmp	r3, #0
 801a3b6:	f340 80d7 	ble.w	801a568 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a3ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3ca:	eeb0 6a62 	vmov.f32	s12, s5
 801a3ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3e2:	ee16 4a10 	vmov	r4, s12
 801a3e6:	eeb0 6a43 	vmov.f32	s12, s6
 801a3ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3ee:	ee12 2a90 	vmov	r2, s5
 801a3f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3f6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a3f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a400:	ee13 2a10 	vmov	r2, s6
 801a404:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a406:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a408:	ee16 6a10 	vmov	r6, s12
 801a40c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a410:	9320      	str	r3, [sp, #128]	@ 0x80
 801a412:	9b08      	ldr	r3, [sp, #32]
 801a414:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a416:	3b01      	subs	r3, #1
 801a418:	9308      	str	r3, [sp, #32]
 801a41a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801a41c:	bf08      	it	eq
 801a41e:	4613      	moveq	r3, r2
 801a420:	eeb0 3a67 	vmov.f32	s6, s15
 801a424:	9306      	str	r3, [sp, #24]
 801a426:	eef0 2a47 	vmov.f32	s5, s14
 801a42a:	e6e4      	b.n	801a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a42c:	2900      	cmp	r1, #0
 801a42e:	f43f af4e 	beq.w	801a2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a432:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a436:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a43a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a43c:	e747      	b.n	801a2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a43e:	f112 0a01 	adds.w	sl, r2, #1
 801a442:	d481      	bmi.n	801a348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a444:	4553      	cmp	r3, sl
 801a446:	f6ff af7f 	blt.w	801a348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a44a:	f11c 0a01 	adds.w	sl, ip, #1
 801a44e:	f53f af7b 	bmi.w	801a348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a452:	45d6      	cmp	lr, sl
 801a454:	f6ff af78 	blt.w	801a348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a458:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a45c:	b21b      	sxth	r3, r3
 801a45e:	fa0f f28e 	sxth.w	r2, lr
 801a462:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a466:	9201      	str	r2, [sp, #4]
 801a468:	9300      	str	r3, [sp, #0]
 801a46a:	9a07      	ldr	r2, [sp, #28]
 801a46c:	463b      	mov	r3, r7
 801a46e:	4641      	mov	r1, r8
 801a470:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a472:	f7ff fe21 	bl	801a0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a476:	e767      	b.n	801a348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a478:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a47a:	1422      	asrs	r2, r4, #16
 801a47c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a480:	1431      	asrs	r1, r6, #16
 801a482:	fb03 2101 	mla	r1, r3, r1, r2
 801a486:	9d07      	ldr	r5, [sp, #28]
 801a488:	9a07      	ldr	r2, [sp, #28]
 801a48a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a48e:	440a      	add	r2, r1
 801a490:	5c69      	ldrb	r1, [r5, r1]
 801a492:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a496:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a49a:	f1be 0f00 	cmp.w	lr, #0
 801a49e:	d05c      	beq.n	801a55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a4a0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a4a4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a4a8:	950d      	str	r5, [sp, #52]	@ 0x34
 801a4aa:	b150      	cbz	r0, 801a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a4ac:	eb02 0c03 	add.w	ip, r2, r3
 801a4b0:	5cd3      	ldrb	r3, [r2, r3]
 801a4b2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4b6:	930a      	str	r3, [sp, #40]	@ 0x28
 801a4b8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a4bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a4c0:	930e      	str	r3, [sp, #56]	@ 0x38
 801a4c2:	fb1e f200 	smulbb	r2, lr, r0
 801a4c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a4c8:	10d2      	asrs	r2, r2, #3
 801a4ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a4ce:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a4d2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a4d6:	ea4c 0c03 	orr.w	ip, ip, r3
 801a4da:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a4de:	9311      	str	r3, [sp, #68]	@ 0x44
 801a4e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a4e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a4e4:	041b      	lsls	r3, r3, #16
 801a4e6:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a4ea:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a4ee:	ea43 030b 	orr.w	r3, r3, fp
 801a4f2:	4353      	muls	r3, r2
 801a4f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a4f6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a4fa:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a4fe:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a502:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a506:	ea43 0b01 	orr.w	fp, r3, r1
 801a50a:	f1c0 0110 	rsb	r1, r0, #16
 801a50e:	eba1 0e0e 	sub.w	lr, r1, lr
 801a512:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a516:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a518:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a51c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a520:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a524:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a528:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a52c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a530:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a534:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a538:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a53c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a540:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a544:	ea43 0c0c 	orr.w	ip, r3, ip
 801a548:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a54a:	f82a cb02 	strh.w	ip, [sl], #2
 801a54e:	441c      	add	r4, r3
 801a550:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a552:	f108 38ff 	add.w	r8, r8, #4294967295
 801a556:	441e      	add	r6, r3
 801a558:	e723      	b.n	801a3a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a55a:	2800      	cmp	r0, #0
 801a55c:	d0b1      	beq.n	801a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a55e:	5cd3      	ldrb	r3, [r2, r3]
 801a560:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a564:	930a      	str	r3, [sp, #40]	@ 0x28
 801a566:	e7ac      	b.n	801a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a568:	b013      	add	sp, #76	@ 0x4c
 801a56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a56e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a572:	880d      	ldrh	r5, [r1, #0]
 801a574:	b087      	sub	sp, #28
 801a576:	10ef      	asrs	r7, r5, #3
 801a578:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a57c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a580:	00ed      	lsls	r5, r5, #3
 801a582:	9701      	str	r7, [sp, #4]
 801a584:	b2ed      	uxtb	r5, r5
 801a586:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a58a:	9502      	str	r5, [sp, #8]
 801a58c:	9d01      	ldr	r5, [sp, #4]
 801a58e:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a592:	fb06 0709 	mla	r7, r6, r9, r0
 801a596:	9103      	str	r1, [sp, #12]
 801a598:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a59c:	022d      	lsls	r5, r5, #8
 801a59e:	9902      	ldr	r1, [sp, #8]
 801a5a0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a5a4:	430d      	orrs	r5, r1
 801a5a6:	2e00      	cmp	r6, #0
 801a5a8:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a5ac:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a5b0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a5b4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a5b8:	eb02 0c07 	add.w	ip, r2, r7
 801a5bc:	9505      	str	r5, [sp, #20]
 801a5be:	f2c0 80b6 	blt.w	801a72e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a5c2:	45b3      	cmp	fp, r6
 801a5c4:	f340 80b3 	ble.w	801a72e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a5c8:	2800      	cmp	r0, #0
 801a5ca:	f2c0 80ae 	blt.w	801a72a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a5ce:	4581      	cmp	r9, r0
 801a5d0:	f340 80ab 	ble.w	801a72a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a5d4:	5dd7      	ldrb	r7, [r2, r7]
 801a5d6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a5da:	441f      	add	r7, r3
 801a5dc:	1c42      	adds	r2, r0, #1
 801a5de:	f100 80a9 	bmi.w	801a734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a5e2:	4591      	cmp	r9, r2
 801a5e4:	f340 80a6 	ble.w	801a734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a5e8:	2c00      	cmp	r4, #0
 801a5ea:	f000 80a3 	beq.w	801a734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a5ee:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a5f2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a5f6:	441d      	add	r5, r3
 801a5f8:	3601      	adds	r6, #1
 801a5fa:	f100 809f 	bmi.w	801a73c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a5fe:	45b3      	cmp	fp, r6
 801a600:	f340 809c 	ble.w	801a73c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a604:	f1be 0f00 	cmp.w	lr, #0
 801a608:	f000 8098 	beq.w	801a73c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a60c:	2800      	cmp	r0, #0
 801a60e:	f2c0 8093 	blt.w	801a738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a612:	4581      	cmp	r9, r0
 801a614:	f340 8090 	ble.w	801a738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a618:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a61c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a620:	441e      	add	r6, r3
 801a622:	3001      	adds	r0, #1
 801a624:	f100 808d 	bmi.w	801a742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a628:	4581      	cmp	r9, r0
 801a62a:	f340 808a 	ble.w	801a742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a62e:	2c00      	cmp	r4, #0
 801a630:	f000 8087 	beq.w	801a742 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a634:	44e1      	add	r9, ip
 801a636:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a63a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a63e:	4413      	add	r3, r2
 801a640:	b2a4      	uxth	r4, r4
 801a642:	fa1f fe8e 	uxth.w	lr, lr
 801a646:	fb04 fb0e 	mul.w	fp, r4, lr
 801a64a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a64e:	fa1f f08e 	uxth.w	r0, lr
 801a652:	fa1f fe88 	uxth.w	lr, r8
 801a656:	ea6f 0808 	mvn.w	r8, r8
 801a65a:	0124      	lsls	r4, r4, #4
 801a65c:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a660:	eba4 040b 	sub.w	r4, r4, fp
 801a664:	b2a2      	uxth	r2, r4
 801a666:	78ac      	ldrb	r4, [r5, #2]
 801a668:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a66c:	4354      	muls	r4, r2
 801a66e:	eba9 0900 	sub.w	r9, r9, r0
 801a672:	fa1f f989 	uxth.w	r9, r9
 801a676:	fb09 440c 	mla	r4, r9, ip, r4
 801a67a:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a67e:	fa5f f888 	uxtb.w	r8, r8
 801a682:	fb00 440c 	mla	r4, r0, ip, r4
 801a686:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a68a:	fb1a fa08 	smulbb	sl, sl, r8
 801a68e:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a692:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a696:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a69a:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a69e:	782d      	ldrb	r5, [r5, #0]
 801a6a0:	fb02 fa0a 	mul.w	sl, r2, sl
 801a6a4:	436a      	muls	r2, r5
 801a6a6:	787c      	ldrb	r4, [r7, #1]
 801a6a8:	783f      	ldrb	r7, [r7, #0]
 801a6aa:	fb09 aa04 	mla	sl, r9, r4, sl
 801a6ae:	fb09 2207 	mla	r2, r9, r7, r2
 801a6b2:	7874      	ldrb	r4, [r6, #1]
 801a6b4:	7835      	ldrb	r5, [r6, #0]
 801a6b6:	fb00 aa04 	mla	sl, r0, r4, sl
 801a6ba:	fb00 2005 	mla	r0, r0, r5, r2
 801a6be:	785c      	ldrb	r4, [r3, #1]
 801a6c0:	781b      	ldrb	r3, [r3, #0]
 801a6c2:	fb0b a404 	mla	r4, fp, r4, sl
 801a6c6:	9901      	ldr	r1, [sp, #4]
 801a6c8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a6cc:	9b02      	ldr	r3, [sp, #8]
 801a6ce:	fb11 fa08 	smulbb	sl, r1, r8
 801a6d2:	fb13 f808 	smulbb	r8, r3, r8
 801a6d6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a6da:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a6de:	fb04 a40e 	mla	r4, r4, lr, sl
 801a6e2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a6e6:	fa1f fc8c 	uxth.w	ip, ip
 801a6ea:	f10c 0301 	add.w	r3, ip, #1
 801a6ee:	fa1f fe8e 	uxth.w	lr, lr
 801a6f2:	b2a4      	uxth	r4, r4
 801a6f4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a6f8:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a6fc:	f104 0a01 	add.w	sl, r4, #1
 801a700:	f10e 0c01 	add.w	ip, lr, #1
 801a704:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a708:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a70c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a710:	0964      	lsrs	r4, r4, #5
 801a712:	ea4c 0c03 	orr.w	ip, ip, r3
 801a716:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a71a:	9b03      	ldr	r3, [sp, #12]
 801a71c:	ea4c 0c04 	orr.w	ip, ip, r4
 801a720:	f8a3 c000 	strh.w	ip, [r3]
 801a724:	b007      	add	sp, #28
 801a726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a72a:	af05      	add	r7, sp, #20
 801a72c:	e756      	b.n	801a5dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a72e:	ad05      	add	r5, sp, #20
 801a730:	462f      	mov	r7, r5
 801a732:	e761      	b.n	801a5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a734:	ad05      	add	r5, sp, #20
 801a736:	e75f      	b.n	801a5f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a738:	ae05      	add	r6, sp, #20
 801a73a:	e772      	b.n	801a622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a73c:	ab05      	add	r3, sp, #20
 801a73e:	461e      	mov	r6, r3
 801a740:	e77e      	b.n	801a640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a742:	ab05      	add	r3, sp, #20
 801a744:	e77c      	b.n	801a640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a746 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a746:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a74a:	b095      	sub	sp, #84	@ 0x54
 801a74c:	9212      	str	r2, [sp, #72]	@ 0x48
 801a74e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a750:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a752:	9309      	str	r3, [sp, #36]	@ 0x24
 801a754:	6850      	ldr	r0, [r2, #4]
 801a756:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a75a:	910e      	str	r1, [sp, #56]	@ 0x38
 801a75c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a75e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a762:	fb00 1303 	mla	r3, r0, r3, r1
 801a766:	6812      	ldr	r2, [r2, #0]
 801a768:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a76c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a76e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a770:	681b      	ldr	r3, [r3, #0]
 801a772:	930d      	str	r3, [sp, #52]	@ 0x34
 801a774:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a776:	685c      	ldr	r4, [r3, #4]
 801a778:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a77a:	3404      	adds	r4, #4
 801a77c:	43db      	mvns	r3, r3
 801a77e:	b2db      	uxtb	r3, r3
 801a780:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a782:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a784:	2b00      	cmp	r3, #0
 801a786:	dc03      	bgt.n	801a790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a788:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a78a:	2b00      	cmp	r3, #0
 801a78c:	f340 8255 	ble.w	801ac3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a790:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a792:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a796:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a79a:	1e48      	subs	r0, r1, #1
 801a79c:	1e55      	subs	r5, r2, #1
 801a79e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7a0:	2b00      	cmp	r3, #0
 801a7a2:	f340 80f9 	ble.w	801a998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a7a6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a7a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7aa:	1436      	asrs	r6, r6, #16
 801a7ac:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a7b0:	d406      	bmi.n	801a7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a7b2:	4286      	cmp	r6, r0
 801a7b4:	da04      	bge.n	801a7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a7b6:	2b00      	cmp	r3, #0
 801a7b8:	db02      	blt.n	801a7c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a7ba:	42ab      	cmp	r3, r5
 801a7bc:	f2c0 80ed 	blt.w	801a99a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a7c0:	3601      	adds	r6, #1
 801a7c2:	f100 80da 	bmi.w	801a97a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7c6:	42b1      	cmp	r1, r6
 801a7c8:	f2c0 80d7 	blt.w	801a97a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7cc:	3301      	adds	r3, #1
 801a7ce:	f100 80d4 	bmi.w	801a97a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7d2:	429a      	cmp	r2, r3
 801a7d4:	f2c0 80d1 	blt.w	801a97a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a7d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a7da:	9311      	str	r3, [sp, #68]	@ 0x44
 801a7dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a7de:	930c      	str	r3, [sp, #48]	@ 0x30
 801a7e0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a7e2:	2b00      	cmp	r3, #0
 801a7e4:	f340 80fa 	ble.w	801a9dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a7e8:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a7ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7ec:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a7ee:	68c6      	ldr	r6, [r0, #12]
 801a7f0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a7f2:	141d      	asrs	r5, r3, #16
 801a7f4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a7f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a7fa:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a7fc:	1400      	asrs	r0, r0, #16
 801a7fe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a802:	6892      	ldr	r2, [r2, #8]
 801a804:	f100 813e 	bmi.w	801aa84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a808:	1e57      	subs	r7, r2, #1
 801a80a:	42b8      	cmp	r0, r7
 801a80c:	f280 813a 	bge.w	801aa84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a810:	2d00      	cmp	r5, #0
 801a812:	f2c0 8137 	blt.w	801aa84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a816:	1e77      	subs	r7, r6, #1
 801a818:	42bd      	cmp	r5, r7
 801a81a:	f280 8133 	bge.w	801aa84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a81e:	b212      	sxth	r2, r2
 801a820:	fb05 0002 	mla	r0, r5, r2, r0
 801a824:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a826:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a82a:	182e      	adds	r6, r5, r0
 801a82c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a830:	eb04 050a 	add.w	r5, r4, sl
 801a834:	2b00      	cmp	r3, #0
 801a836:	f000 8117 	beq.w	801aa68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a83a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a83e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a842:	44a4      	add	ip, r4
 801a844:	2900      	cmp	r1, #0
 801a846:	f000 8117 	beq.w	801aa78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a84a:	18b0      	adds	r0, r6, r2
 801a84c:	7840      	ldrb	r0, [r0, #1]
 801a84e:	5cb2      	ldrb	r2, [r6, r2]
 801a850:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a854:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a858:	4422      	add	r2, r4
 801a85a:	4420      	add	r0, r4
 801a85c:	b29b      	uxth	r3, r3
 801a85e:	b289      	uxth	r1, r1
 801a860:	fb03 f901 	mul.w	r9, r3, r1
 801a864:	011b      	lsls	r3, r3, #4
 801a866:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a86a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a86e:	eba3 0309 	sub.w	r3, r3, r9
 801a872:	b29b      	uxth	r3, r3
 801a874:	435f      	muls	r7, r3
 801a876:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a87a:	b289      	uxth	r1, r1
 801a87c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a880:	eba8 0801 	sub.w	r8, r8, r1
 801a884:	fa1f f888 	uxth.w	r8, r8
 801a888:	fb08 770b 	mla	r7, r8, fp, r7
 801a88c:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a890:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a892:	fb01 770b 	mla	r7, r1, fp, r7
 801a896:	f8b6 e000 	ldrh.w	lr, [r6]
 801a89a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a89e:	9310      	str	r3, [sp, #64]	@ 0x40
 801a8a0:	fb09 770b 	mla	r7, r9, fp, r7
 801a8a4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a8a6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a8aa:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a8ae:	fb1b fb03 	smulbb	fp, fp, r3
 801a8b2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a8b6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a8ba:	fb07 b706 	mla	r7, r7, r6, fp
 801a8be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a8c0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a8c4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a8c8:	f89c c000 	ldrb.w	ip, [ip]
 801a8cc:	435d      	muls	r5, r3
 801a8ce:	fb08 550b 	mla	r5, r8, fp, r5
 801a8d2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a8d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a8d8:	fb01 550b 	mla	r5, r1, fp, r5
 801a8dc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a8e0:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a8e4:	fb09 550b 	mla	r5, r9, fp, r5
 801a8e8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a8ec:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a8f0:	fb1b fb03 	smulbb	fp, fp, r3
 801a8f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a8f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8fa:	fb03 f30c 	mul.w	r3, r3, ip
 801a8fe:	fb08 330a 	mla	r3, r8, sl, r3
 801a902:	f892 c000 	ldrb.w	ip, [r2]
 801a906:	fa5f fe8e 	uxtb.w	lr, lr
 801a90a:	fb01 330c 	mla	r3, r1, ip, r3
 801a90e:	f890 c000 	ldrb.w	ip, [r0]
 801a912:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a916:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a91a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a91c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a920:	fb1e fe03 	smulbb	lr, lr, r3
 801a924:	fb05 b506 	mla	r5, r5, r6, fp
 801a928:	fb0c e606 	mla	r6, ip, r6, lr
 801a92c:	b2bf      	uxth	r7, r7
 801a92e:	1c7b      	adds	r3, r7, #1
 801a930:	b2ad      	uxth	r5, r5
 801a932:	b2b6      	uxth	r6, r6
 801a934:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a938:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a93c:	f105 0b01 	add.w	fp, r5, #1
 801a940:	1c77      	adds	r7, r6, #1
 801a942:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a946:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a94a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a94e:	096d      	lsrs	r5, r5, #5
 801a950:	431f      	orrs	r7, r3
 801a952:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a956:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a958:	433d      	orrs	r5, r7
 801a95a:	801d      	strh	r5, [r3, #0]
 801a95c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a95e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a960:	3302      	adds	r3, #2
 801a962:	930c      	str	r3, [sp, #48]	@ 0x30
 801a964:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a966:	4413      	add	r3, r2
 801a968:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a96a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a96c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a96e:	4413      	add	r3, r2
 801a970:	9320      	str	r3, [sp, #128]	@ 0x80
 801a972:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a974:	3b01      	subs	r3, #1
 801a976:	9311      	str	r3, [sp, #68]	@ 0x44
 801a978:	e732      	b.n	801a7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a97a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a97c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a97e:	4433      	add	r3, r6
 801a980:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a982:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a984:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a986:	4433      	add	r3, r6
 801a988:	9320      	str	r3, [sp, #128]	@ 0x80
 801a98a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a98c:	3b01      	subs	r3, #1
 801a98e:	9309      	str	r3, [sp, #36]	@ 0x24
 801a990:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a992:	3302      	adds	r3, #2
 801a994:	930a      	str	r3, [sp, #40]	@ 0x28
 801a996:	e702      	b.n	801a79e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a998:	d027      	beq.n	801a9ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a99a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a99c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a99e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a9a0:	3b01      	subs	r3, #1
 801a9a2:	fb00 5003 	mla	r0, r0, r3, r5
 801a9a6:	1400      	asrs	r0, r0, #16
 801a9a8:	f53f af16 	bmi.w	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a9ac:	3901      	subs	r1, #1
 801a9ae:	4288      	cmp	r0, r1
 801a9b0:	f6bf af12 	bge.w	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a9b4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a9b6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a9b8:	fb01 0303 	mla	r3, r1, r3, r0
 801a9bc:	141b      	asrs	r3, r3, #16
 801a9be:	f53f af0b 	bmi.w	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a9c2:	3a01      	subs	r2, #1
 801a9c4:	4293      	cmp	r3, r2
 801a9c6:	f6bf af07 	bge.w	801a7d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a9ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9cc:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a9d0:	9311      	str	r3, [sp, #68]	@ 0x44
 801a9d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a9d4:	930c      	str	r3, [sp, #48]	@ 0x30
 801a9d6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a9d8:	2b00      	cmp	r3, #0
 801a9da:	dc70      	bgt.n	801aabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a9dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a9de:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a9e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a9e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801a9ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a9ec:	2b00      	cmp	r3, #0
 801a9ee:	f340 8124 	ble.w	801ac3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a9f2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a9f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aa02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa06:	eef0 6a62 	vmov.f32	s13, s5
 801aa0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa1e:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801aa22:	eef0 6a43 	vmov.f32	s13, s6
 801aa26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa2a:	ee12 2a90 	vmov	r2, s5
 801aa2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa32:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aa38:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa3c:	ee13 2a10 	vmov	r2, s6
 801aa40:	9321      	str	r3, [sp, #132]	@ 0x84
 801aa42:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa44:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801aa48:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa4c:	9322      	str	r3, [sp, #136]	@ 0x88
 801aa4e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aa50:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801aa52:	3b01      	subs	r3, #1
 801aa54:	930e      	str	r3, [sp, #56]	@ 0x38
 801aa56:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801aa58:	bf08      	it	eq
 801aa5a:	4613      	moveq	r3, r2
 801aa5c:	eeb0 3a67 	vmov.f32	s6, s15
 801aa60:	9309      	str	r3, [sp, #36]	@ 0x24
 801aa62:	eef0 2a47 	vmov.f32	s5, s14
 801aa66:	e68c      	b.n	801a782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa68:	b149      	cbz	r1, 801aa7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801aa6a:	4628      	mov	r0, r5
 801aa6c:	5cb2      	ldrb	r2, [r6, r2]
 801aa6e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa72:	4422      	add	r2, r4
 801aa74:	46ac      	mov	ip, r5
 801aa76:	e6f1      	b.n	801a85c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aa78:	4628      	mov	r0, r5
 801aa7a:	462a      	mov	r2, r5
 801aa7c:	e6ee      	b.n	801a85c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801aa7e:	4628      	mov	r0, r5
 801aa80:	462a      	mov	r2, r5
 801aa82:	e7f7      	b.n	801aa74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801aa84:	1c47      	adds	r7, r0, #1
 801aa86:	f53f af69 	bmi.w	801a95c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa8a:	42ba      	cmp	r2, r7
 801aa8c:	f6ff af66 	blt.w	801a95c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa90:	1c6f      	adds	r7, r5, #1
 801aa92:	f53f af63 	bmi.w	801a95c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa96:	42be      	cmp	r6, r7
 801aa98:	f6ff af60 	blt.w	801a95c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aa9c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801aa9e:	b236      	sxth	r6, r6
 801aaa0:	b212      	sxth	r2, r2
 801aaa2:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801aaa6:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801aaaa:	9002      	str	r0, [sp, #8]
 801aaac:	9200      	str	r2, [sp, #0]
 801aaae:	9601      	str	r6, [sp, #4]
 801aab0:	4623      	mov	r3, r4
 801aab2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801aab6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aab8:	f7ff fd59 	bl	801a56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801aabc:	e74e      	b.n	801a95c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801aabe:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aac0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801aac2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801aac6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801aac8:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801aaca:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aace:	142d      	asrs	r5, r5, #16
 801aad0:	1400      	asrs	r0, r0, #16
 801aad2:	fb02 5000 	mla	r0, r2, r0, r5
 801aad6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801aad8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801aada:	f815 9000 	ldrb.w	r9, [r5, r0]
 801aade:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801aae2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801aae6:	182e      	adds	r6, r5, r0
 801aae8:	eb04 0509 	add.w	r5, r4, r9
 801aaec:	2b00      	cmp	r3, #0
 801aaee:	f000 8096 	beq.w	801ac1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801aaf2:	7877      	ldrb	r7, [r6, #1]
 801aaf4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aaf8:	4427      	add	r7, r4
 801aafa:	2900      	cmp	r1, #0
 801aafc:	f000 8097 	beq.w	801ac2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ab00:	18b0      	adds	r0, r6, r2
 801ab02:	7840      	ldrb	r0, [r0, #1]
 801ab04:	5cb2      	ldrb	r2, [r6, r2]
 801ab06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ab0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab0e:	4422      	add	r2, r4
 801ab10:	4420      	add	r0, r4
 801ab12:	b29b      	uxth	r3, r3
 801ab14:	b289      	uxth	r1, r1
 801ab16:	fb03 f801 	mul.w	r8, r3, r1
 801ab1a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801ab1c:	011b      	lsls	r3, r3, #4
 801ab1e:	f8b6 c000 	ldrh.w	ip, [r6]
 801ab22:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801ab26:	78be      	ldrb	r6, [r7, #2]
 801ab28:	eba3 0308 	sub.w	r3, r3, r8
 801ab2c:	b29b      	uxth	r3, r3
 801ab2e:	435e      	muls	r6, r3
 801ab30:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ab34:	b289      	uxth	r1, r1
 801ab36:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ab3a:	ebae 0e01 	sub.w	lr, lr, r1
 801ab3e:	fa1f fe8e 	uxth.w	lr, lr
 801ab42:	fb0e 660b 	mla	r6, lr, fp, r6
 801ab46:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ab4a:	9310      	str	r3, [sp, #64]	@ 0x40
 801ab4c:	fb01 660b 	mla	r6, r1, fp, r6
 801ab50:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ab54:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab56:	fb08 660b 	mla	r6, r8, fp, r6
 801ab5a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ab5e:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ab62:	fb1b fb03 	smulbb	fp, fp, r3
 801ab66:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ab6a:	fb06 b60a 	mla	r6, r6, sl, fp
 801ab6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ab70:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ab74:	787d      	ldrb	r5, [r7, #1]
 801ab76:	783f      	ldrb	r7, [r7, #0]
 801ab78:	435d      	muls	r5, r3
 801ab7a:	fb0e 550b 	mla	r5, lr, fp, r5
 801ab7e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ab82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab84:	fb01 550b 	mla	r5, r1, fp, r5
 801ab88:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ab8c:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ab90:	fb08 550b 	mla	r5, r8, fp, r5
 801ab94:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ab98:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ab9c:	fb1b fb03 	smulbb	fp, fp, r3
 801aba0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aba2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aba6:	437b      	muls	r3, r7
 801aba8:	fb0e 3309 	mla	r3, lr, r9, r3
 801abac:	7817      	ldrb	r7, [r2, #0]
 801abae:	fa5f fc8c 	uxtb.w	ip, ip
 801abb2:	fb01 3307 	mla	r3, r1, r7, r3
 801abb6:	7807      	ldrb	r7, [r0, #0]
 801abb8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801abbc:	fb08 3707 	mla	r7, r8, r7, r3
 801abc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801abc2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801abc6:	fb1c fc03 	smulbb	ip, ip, r3
 801abca:	fb05 b50a 	mla	r5, r5, sl, fp
 801abce:	fb07 c70a 	mla	r7, r7, sl, ip
 801abd2:	b2b6      	uxth	r6, r6
 801abd4:	b2ad      	uxth	r5, r5
 801abd6:	b2bf      	uxth	r7, r7
 801abd8:	1c73      	adds	r3, r6, #1
 801abda:	1c7a      	adds	r2, r7, #1
 801abdc:	f105 0b01 	add.w	fp, r5, #1
 801abe0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801abe4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801abe8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801abec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801abf0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801abf4:	096d      	lsrs	r5, r5, #5
 801abf6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801abf8:	4316      	orrs	r6, r2
 801abfa:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801abfe:	432e      	orrs	r6, r5
 801ac00:	f823 6b02 	strh.w	r6, [r3], #2
 801ac04:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ac06:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac08:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ac0a:	4413      	add	r3, r2
 801ac0c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ac0e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801ac10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ac12:	4413      	add	r3, r2
 801ac14:	9320      	str	r3, [sp, #128]	@ 0x80
 801ac16:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ac18:	3b01      	subs	r3, #1
 801ac1a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ac1c:	e6db      	b.n	801a9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801ac1e:	b149      	cbz	r1, 801ac34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ac20:	4628      	mov	r0, r5
 801ac22:	5cb2      	ldrb	r2, [r6, r2]
 801ac24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac28:	4422      	add	r2, r4
 801ac2a:	462f      	mov	r7, r5
 801ac2c:	e771      	b.n	801ab12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ac2e:	4628      	mov	r0, r5
 801ac30:	462a      	mov	r2, r5
 801ac32:	e76e      	b.n	801ab12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801ac34:	4628      	mov	r0, r5
 801ac36:	462a      	mov	r2, r5
 801ac38:	e7f7      	b.n	801ac2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ac3a:	b015      	add	sp, #84	@ 0x54
 801ac3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801ac40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac44:	880f      	ldrh	r7, [r1, #0]
 801ac46:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801ac4a:	023c      	lsls	r4, r7, #8
 801ac4c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801ac50:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801ac54:	fb05 ca0e 	mla	sl, r5, lr, ip
 801ac58:	017c      	lsls	r4, r7, #5
 801ac5a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801ac5e:	00ff      	lsls	r7, r7, #3
 801ac60:	ea4b 0404 	orr.w	r4, fp, r4
 801ac64:	b2ff      	uxtb	r7, r7
 801ac66:	4327      	orrs	r7, r4
 801ac68:	2d00      	cmp	r5, #0
 801ac6a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801ac6e:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801ac72:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ac76:	eb02 080a 	add.w	r8, r2, sl
 801ac7a:	9701      	str	r7, [sp, #4]
 801ac7c:	db7e      	blt.n	801ad7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ac7e:	45a9      	cmp	r9, r5
 801ac80:	dd7c      	ble.n	801ad7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801ac82:	f1bc 0f00 	cmp.w	ip, #0
 801ac86:	db77      	blt.n	801ad78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac88:	45e6      	cmp	lr, ip
 801ac8a:	dd75      	ble.n	801ad78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801ac8c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801ac90:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ac94:	441f      	add	r7, r3
 801ac96:	f11c 0201 	adds.w	r2, ip, #1
 801ac9a:	d472      	bmi.n	801ad82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801ac9c:	4596      	cmp	lr, r2
 801ac9e:	dd70      	ble.n	801ad82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aca0:	2800      	cmp	r0, #0
 801aca2:	d06e      	beq.n	801ad82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aca4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801aca8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801acac:	441c      	add	r4, r3
 801acae:	3501      	adds	r5, #1
 801acb0:	d46b      	bmi.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801acb2:	45a9      	cmp	r9, r5
 801acb4:	dd69      	ble.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801acb6:	2e00      	cmp	r6, #0
 801acb8:	d067      	beq.n	801ad8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801acba:	f1bc 0f00 	cmp.w	ip, #0
 801acbe:	db62      	blt.n	801ad86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801acc0:	45e6      	cmp	lr, ip
 801acc2:	dd60      	ble.n	801ad86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801acc4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801acc8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801accc:	441d      	add	r5, r3
 801acce:	f11c 0201 	adds.w	r2, ip, #1
 801acd2:	d45d      	bmi.n	801ad90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801acd4:	4596      	cmp	lr, r2
 801acd6:	dd5b      	ble.n	801ad90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801acd8:	2800      	cmp	r0, #0
 801acda:	d059      	beq.n	801ad90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801acdc:	44c6      	add	lr, r8
 801acde:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ace2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ace6:	4413      	add	r3, r2
 801ace8:	b280      	uxth	r0, r0
 801acea:	b2b2      	uxth	r2, r6
 801acec:	fb00 f602 	mul.w	r6, r0, r2
 801acf0:	0100      	lsls	r0, r0, #4
 801acf2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801acf6:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801acfa:	1b80      	subs	r0, r0, r6
 801acfc:	fa1f fc82 	uxth.w	ip, r2
 801ad00:	b282      	uxth	r2, r0
 801ad02:	78a0      	ldrb	r0, [r4, #2]
 801ad04:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ad08:	4350      	muls	r0, r2
 801ad0a:	eba8 080c 	sub.w	r8, r8, ip
 801ad0e:	fa1f f888 	uxth.w	r8, r8
 801ad12:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ad16:	78a8      	ldrb	r0, [r5, #2]
 801ad18:	f897 9000 	ldrb.w	r9, [r7]
 801ad1c:	fb0c e000 	mla	r0, ip, r0, lr
 801ad20:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ad24:	787f      	ldrb	r7, [r7, #1]
 801ad26:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ad2a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801ad2e:	f894 e000 	ldrb.w	lr, [r4]
 801ad32:	fb02 fe0e 	mul.w	lr, r2, lr
 801ad36:	fb08 e909 	mla	r9, r8, r9, lr
 801ad3a:	f895 e000 	ldrb.w	lr, [r5]
 801ad3e:	fb0c 990e 	mla	r9, ip, lr, r9
 801ad42:	f893 e000 	ldrb.w	lr, [r3]
 801ad46:	785b      	ldrb	r3, [r3, #1]
 801ad48:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ad4c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ad50:	ea4e 0e00 	orr.w	lr, lr, r0
 801ad54:	7860      	ldrb	r0, [r4, #1]
 801ad56:	4350      	muls	r0, r2
 801ad58:	fb08 0007 	mla	r0, r8, r7, r0
 801ad5c:	786a      	ldrb	r2, [r5, #1]
 801ad5e:	fb0c 0202 	mla	r2, ip, r2, r0
 801ad62:	fb06 2303 	mla	r3, r6, r3, r2
 801ad66:	095b      	lsrs	r3, r3, #5
 801ad68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ad6c:	ea4e 0303 	orr.w	r3, lr, r3
 801ad70:	800b      	strh	r3, [r1, #0]
 801ad72:	b003      	add	sp, #12
 801ad74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad78:	af01      	add	r7, sp, #4
 801ad7a:	e78c      	b.n	801ac96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801ad7c:	ac01      	add	r4, sp, #4
 801ad7e:	4627      	mov	r7, r4
 801ad80:	e795      	b.n	801acae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ad82:	ac01      	add	r4, sp, #4
 801ad84:	e793      	b.n	801acae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801ad86:	ad01      	add	r5, sp, #4
 801ad88:	e7a1      	b.n	801acce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801ad8a:	ab01      	add	r3, sp, #4
 801ad8c:	461d      	mov	r5, r3
 801ad8e:	e7ab      	b.n	801ace8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801ad90:	ab01      	add	r3, sp, #4
 801ad92:	e7a9      	b.n	801ace8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801ad94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad98:	b08f      	sub	sp, #60	@ 0x3c
 801ad9a:	920c      	str	r2, [sp, #48]	@ 0x30
 801ad9c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801ad9e:	900d      	str	r0, [sp, #52]	@ 0x34
 801ada0:	6850      	ldr	r0, [r2, #4]
 801ada2:	910a      	str	r1, [sp, #40]	@ 0x28
 801ada4:	9306      	str	r3, [sp, #24]
 801ada6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801adaa:	fb00 1303 	mla	r3, r0, r3, r1
 801adae:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801adb2:	6812      	ldr	r2, [r2, #0]
 801adb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801adb8:	9307      	str	r3, [sp, #28]
 801adba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801adbc:	681b      	ldr	r3, [r3, #0]
 801adbe:	9308      	str	r3, [sp, #32]
 801adc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801adc2:	685c      	ldr	r4, [r3, #4]
 801adc4:	3404      	adds	r4, #4
 801adc6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801adc8:	2b00      	cmp	r3, #0
 801adca:	dc03      	bgt.n	801add4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801adcc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801adce:	2b00      	cmp	r3, #0
 801add0:	f340 81d6 	ble.w	801b180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801add4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801add6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801adde:	1e48      	subs	r0, r1, #1
 801ade0:	1e56      	subs	r6, r2, #1
 801ade2:	9b06      	ldr	r3, [sp, #24]
 801ade4:	2b00      	cmp	r3, #0
 801ade6:	f340 80b7 	ble.w	801af58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801adea:	ea5f 472b 	movs.w	r7, fp, asr #16
 801adee:	ea4f 4325 	mov.w	r3, r5, asr #16
 801adf2:	d406      	bmi.n	801ae02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adf4:	4287      	cmp	r7, r0
 801adf6:	da04      	bge.n	801ae02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adf8:	2b00      	cmp	r3, #0
 801adfa:	db02      	blt.n	801ae02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801adfc:	42b3      	cmp	r3, r6
 801adfe:	f2c0 80ac 	blt.w	801af5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ae02:	3701      	adds	r7, #1
 801ae04:	f100 809d 	bmi.w	801af42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ae08:	42b9      	cmp	r1, r7
 801ae0a:	f2c0 809a 	blt.w	801af42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ae0e:	3301      	adds	r3, #1
 801ae10:	f100 8097 	bmi.w	801af42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ae14:	429a      	cmp	r2, r3
 801ae16:	f2c0 8094 	blt.w	801af42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ae1a:	9b06      	ldr	r3, [sp, #24]
 801ae1c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ae1e:	9b07      	ldr	r3, [sp, #28]
 801ae20:	9309      	str	r3, [sp, #36]	@ 0x24
 801ae22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ae24:	2b00      	cmp	r3, #0
 801ae26:	f340 80b5 	ble.w	801af94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ae2a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801ae2c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ae2e:	68c7      	ldr	r7, [r0, #12]
 801ae30:	ea5f 402b 	movs.w	r0, fp, asr #16
 801ae34:	ea4f 4625 	mov.w	r6, r5, asr #16
 801ae38:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ae3c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ae40:	6892      	ldr	r2, [r2, #8]
 801ae42:	f100 80fb 	bmi.w	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae46:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae4a:	4560      	cmp	r0, ip
 801ae4c:	f280 80f6 	bge.w	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae50:	2e00      	cmp	r6, #0
 801ae52:	f2c0 80f3 	blt.w	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae56:	f107 3cff 	add.w	ip, r7, #4294967295
 801ae5a:	4566      	cmp	r6, ip
 801ae5c:	f280 80ee 	bge.w	801b03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ae60:	b212      	sxth	r2, r2
 801ae62:	fb06 0002 	mla	r0, r6, r2, r0
 801ae66:	9e08      	ldr	r6, [sp, #32]
 801ae68:	1837      	adds	r7, r6, r0
 801ae6a:	5c30      	ldrb	r0, [r6, r0]
 801ae6c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801ae70:	eb04 0c08 	add.w	ip, r4, r8
 801ae74:	2b00      	cmp	r3, #0
 801ae76:	f000 80d3 	beq.w	801b020 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ae7a:	787e      	ldrb	r6, [r7, #1]
 801ae7c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ae80:	4426      	add	r6, r4
 801ae82:	2900      	cmp	r1, #0
 801ae84:	f000 80d4 	beq.w	801b030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ae88:	18b8      	adds	r0, r7, r2
 801ae8a:	7840      	ldrb	r0, [r0, #1]
 801ae8c:	5cba      	ldrb	r2, [r7, r2]
 801ae8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ae92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae96:	4422      	add	r2, r4
 801ae98:	4420      	add	r0, r4
 801ae9a:	b29b      	uxth	r3, r3
 801ae9c:	b289      	uxth	r1, r1
 801ae9e:	fb03 f901 	mul.w	r9, r3, r1
 801aea2:	011b      	lsls	r3, r3, #4
 801aea4:	78b7      	ldrb	r7, [r6, #2]
 801aea6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801aeaa:	eba3 0309 	sub.w	r3, r3, r9
 801aeae:	b29b      	uxth	r3, r3
 801aeb0:	435f      	muls	r7, r3
 801aeb2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aeb6:	b289      	uxth	r1, r1
 801aeb8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801aebc:	ebae 0e01 	sub.w	lr, lr, r1
 801aec0:	fa1f fe8e 	uxth.w	lr, lr
 801aec4:	fb0e 770a 	mla	r7, lr, sl, r7
 801aec8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801aecc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801aed0:	fb01 770a 	mla	r7, r1, sl, r7
 801aed4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801aed8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801aedc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801aee0:	f896 8000 	ldrb.w	r8, [r6]
 801aee4:	7876      	ldrb	r6, [r6, #1]
 801aee6:	fb03 f808 	mul.w	r8, r3, r8
 801aeea:	fb0e 8807 	mla	r8, lr, r7, r8
 801aeee:	7817      	ldrb	r7, [r2, #0]
 801aef0:	4373      	muls	r3, r6
 801aef2:	fb01 8807 	mla	r8, r1, r7, r8
 801aef6:	7807      	ldrb	r7, [r0, #0]
 801aef8:	fb0e 330c 	mla	r3, lr, ip, r3
 801aefc:	fb09 8707 	mla	r7, r9, r7, r8
 801af00:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801af04:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801af08:	ea47 070a 	orr.w	r7, r7, sl
 801af0c:	f892 a001 	ldrb.w	sl, [r2, #1]
 801af10:	fb01 310a 	mla	r1, r1, sl, r3
 801af14:	f890 a001 	ldrb.w	sl, [r0, #1]
 801af18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af1a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801af1e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af22:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801af26:	ea47 070a 	orr.w	r7, r7, sl
 801af2a:	801f      	strh	r7, [r3, #0]
 801af2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af2e:	3302      	adds	r3, #2
 801af30:	9309      	str	r3, [sp, #36]	@ 0x24
 801af32:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801af34:	449b      	add	fp, r3
 801af36:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801af38:	441d      	add	r5, r3
 801af3a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801af3c:	3b01      	subs	r3, #1
 801af3e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801af40:	e76f      	b.n	801ae22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af42:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801af44:	449b      	add	fp, r3
 801af46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801af48:	441d      	add	r5, r3
 801af4a:	9b06      	ldr	r3, [sp, #24]
 801af4c:	3b01      	subs	r3, #1
 801af4e:	9306      	str	r3, [sp, #24]
 801af50:	9b07      	ldr	r3, [sp, #28]
 801af52:	3302      	adds	r3, #2
 801af54:	9307      	str	r3, [sp, #28]
 801af56:	e744      	b.n	801ade2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801af58:	d023      	beq.n	801afa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801af5a:	9b06      	ldr	r3, [sp, #24]
 801af5c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801af5e:	3b01      	subs	r3, #1
 801af60:	fb00 b003 	mla	r0, r0, r3, fp
 801af64:	1400      	asrs	r0, r0, #16
 801af66:	f53f af58 	bmi.w	801ae1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af6a:	3901      	subs	r1, #1
 801af6c:	4288      	cmp	r0, r1
 801af6e:	f6bf af54 	bge.w	801ae1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af72:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801af74:	fb01 5303 	mla	r3, r1, r3, r5
 801af78:	141b      	asrs	r3, r3, #16
 801af7a:	f53f af4e 	bmi.w	801ae1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af7e:	3a01      	subs	r2, #1
 801af80:	4293      	cmp	r3, r2
 801af82:	f6bf af4a 	bge.w	801ae1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801af86:	9b06      	ldr	r3, [sp, #24]
 801af88:	9309      	str	r3, [sp, #36]	@ 0x24
 801af8a:	9b07      	ldr	r3, [sp, #28]
 801af8c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801af8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801af90:	2b00      	cmp	r3, #0
 801af92:	dc70      	bgt.n	801b076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801af94:	9b06      	ldr	r3, [sp, #24]
 801af96:	9a07      	ldr	r2, [sp, #28]
 801af98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afa0:	9307      	str	r3, [sp, #28]
 801afa2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801afa4:	2b00      	cmp	r3, #0
 801afa6:	f340 80eb 	ble.w	801b180 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801afaa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801afae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afbe:	eef0 6a62 	vmov.f32	s13, s5
 801afc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afca:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afd6:	ee16 ba90 	vmov	fp, s13
 801afda:	eef0 6a43 	vmov.f32	s13, s6
 801afde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afe2:	ee12 2a90 	vmov	r2, s5
 801afe6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801afec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aff0:	fb92 f3f3 	sdiv	r3, r2, r3
 801aff4:	ee13 2a10 	vmov	r2, s6
 801aff8:	931b      	str	r3, [sp, #108]	@ 0x6c
 801affa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801affc:	ee16 5a90 	vmov	r5, s13
 801b000:	fb92 f3f3 	sdiv	r3, r2, r3
 801b004:	931c      	str	r3, [sp, #112]	@ 0x70
 801b006:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b008:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801b00a:	3b01      	subs	r3, #1
 801b00c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b00e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b010:	bf08      	it	eq
 801b012:	4613      	moveq	r3, r2
 801b014:	eeb0 3a67 	vmov.f32	s6, s15
 801b018:	9306      	str	r3, [sp, #24]
 801b01a:	eef0 2a47 	vmov.f32	s5, s14
 801b01e:	e6d2      	b.n	801adc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b020:	b149      	cbz	r1, 801b036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b022:	4660      	mov	r0, ip
 801b024:	5cba      	ldrb	r2, [r7, r2]
 801b026:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b02a:	4422      	add	r2, r4
 801b02c:	4666      	mov	r6, ip
 801b02e:	e734      	b.n	801ae9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b030:	4660      	mov	r0, ip
 801b032:	4662      	mov	r2, ip
 801b034:	e731      	b.n	801ae9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b036:	4660      	mov	r0, ip
 801b038:	4662      	mov	r2, ip
 801b03a:	e7f7      	b.n	801b02c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b03c:	f110 0c01 	adds.w	ip, r0, #1
 801b040:	f53f af74 	bmi.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b044:	4562      	cmp	r2, ip
 801b046:	f6ff af71 	blt.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b04a:	f116 0c01 	adds.w	ip, r6, #1
 801b04e:	f53f af6d 	bmi.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b052:	4567      	cmp	r7, ip
 801b054:	f6ff af6a 	blt.w	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b058:	b23f      	sxth	r7, r7
 801b05a:	b212      	sxth	r2, r2
 801b05c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b060:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b064:	9200      	str	r2, [sp, #0]
 801b066:	9701      	str	r7, [sp, #4]
 801b068:	4623      	mov	r3, r4
 801b06a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b06e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801b070:	f7ff fde6 	bl	801ac40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b074:	e75a      	b.n	801af2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b076:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b078:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b07c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b080:	1428      	asrs	r0, r5, #16
 801b082:	fb02 6000 	mla	r0, r2, r0, r6
 801b086:	9e08      	ldr	r6, [sp, #32]
 801b088:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b08c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b090:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b094:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b098:	1837      	adds	r7, r6, r0
 801b09a:	eb04 0c08 	add.w	ip, r4, r8
 801b09e:	2b00      	cmp	r3, #0
 801b0a0:	d060      	beq.n	801b164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b0a2:	787e      	ldrb	r6, [r7, #1]
 801b0a4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b0a8:	4426      	add	r6, r4
 801b0aa:	2900      	cmp	r1, #0
 801b0ac:	d062      	beq.n	801b174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b0ae:	18b8      	adds	r0, r7, r2
 801b0b0:	7840      	ldrb	r0, [r0, #1]
 801b0b2:	5cba      	ldrb	r2, [r7, r2]
 801b0b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b0b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0bc:	4422      	add	r2, r4
 801b0be:	4420      	add	r0, r4
 801b0c0:	b29b      	uxth	r3, r3
 801b0c2:	b289      	uxth	r1, r1
 801b0c4:	fb03 f901 	mul.w	r9, r3, r1
 801b0c8:	011b      	lsls	r3, r3, #4
 801b0ca:	78b7      	ldrb	r7, [r6, #2]
 801b0cc:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b0d0:	eba3 0309 	sub.w	r3, r3, r9
 801b0d4:	b29b      	uxth	r3, r3
 801b0d6:	435f      	muls	r7, r3
 801b0d8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b0dc:	b289      	uxth	r1, r1
 801b0de:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b0e2:	ebae 0e01 	sub.w	lr, lr, r1
 801b0e6:	fa1f fe8e 	uxth.w	lr, lr
 801b0ea:	fb0e 770a 	mla	r7, lr, sl, r7
 801b0ee:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b0f2:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b0f6:	fb01 770a 	mla	r7, r1, sl, r7
 801b0fa:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b0fe:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b102:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b106:	f896 8000 	ldrb.w	r8, [r6]
 801b10a:	7876      	ldrb	r6, [r6, #1]
 801b10c:	fb03 f808 	mul.w	r8, r3, r8
 801b110:	fb0e 8807 	mla	r8, lr, r7, r8
 801b114:	7817      	ldrb	r7, [r2, #0]
 801b116:	4373      	muls	r3, r6
 801b118:	fb01 8807 	mla	r8, r1, r7, r8
 801b11c:	7807      	ldrb	r7, [r0, #0]
 801b11e:	fb0e 330c 	mla	r3, lr, ip, r3
 801b122:	fb09 8707 	mla	r7, r9, r7, r8
 801b126:	7856      	ldrb	r6, [r2, #1]
 801b128:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b12c:	fb01 3306 	mla	r3, r1, r6, r3
 801b130:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b134:	ea47 070a 	orr.w	r7, r7, sl
 801b138:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b13c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b140:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b144:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b146:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b14a:	ea47 070a 	orr.w	r7, r7, sl
 801b14e:	f823 7b02 	strh.w	r7, [r3], #2
 801b152:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b154:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b156:	449b      	add	fp, r3
 801b158:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b15a:	441d      	add	r5, r3
 801b15c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b15e:	3b01      	subs	r3, #1
 801b160:	9309      	str	r3, [sp, #36]	@ 0x24
 801b162:	e714      	b.n	801af8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b164:	b149      	cbz	r1, 801b17a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b166:	4660      	mov	r0, ip
 801b168:	5cba      	ldrb	r2, [r7, r2]
 801b16a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b16e:	4422      	add	r2, r4
 801b170:	4666      	mov	r6, ip
 801b172:	e7a5      	b.n	801b0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b174:	4660      	mov	r0, ip
 801b176:	4662      	mov	r2, ip
 801b178:	e7a2      	b.n	801b0c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b17a:	4660      	mov	r0, ip
 801b17c:	4662      	mov	r2, ip
 801b17e:	e7f7      	b.n	801b170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b180:	b00f      	add	sp, #60	@ 0x3c
 801b182:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b186 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b186:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b18a:	b085      	sub	sp, #20
 801b18c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801b190:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801b194:	9102      	str	r1, [sp, #8]
 801b196:	fb04 710c 	mla	r1, r4, ip, r7
 801b19a:	2c00      	cmp	r4, #0
 801b19c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801b1a0:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801b1a4:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801b1a8:	eb02 0e01 	add.w	lr, r2, r1
 801b1ac:	f2c0 8122 	blt.w	801b3f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b1b0:	45a0      	cmp	r8, r4
 801b1b2:	f340 811f 	ble.w	801b3f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b1b6:	2f00      	cmp	r7, #0
 801b1b8:	f2c0 811a 	blt.w	801b3f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b1bc:	45bc      	cmp	ip, r7
 801b1be:	f340 8117 	ble.w	801b3f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b1c2:	5c52      	ldrb	r2, [r2, r1]
 801b1c4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b1c8:	1c7a      	adds	r2, r7, #1
 801b1ca:	f100 8116 	bmi.w	801b3fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b1ce:	4594      	cmp	ip, r2
 801b1d0:	f340 8113 	ble.w	801b3fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b1d4:	2e00      	cmp	r6, #0
 801b1d6:	f000 8112 	beq.w	801b3fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b1da:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b1de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b1e2:	3401      	adds	r4, #1
 801b1e4:	f100 810f 	bmi.w	801b406 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b1e8:	45a0      	cmp	r8, r4
 801b1ea:	f340 810c 	ble.w	801b406 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b1ee:	2800      	cmp	r0, #0
 801b1f0:	f000 810c 	beq.w	801b40c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b1f4:	2f00      	cmp	r7, #0
 801b1f6:	f2c0 8104 	blt.w	801b402 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b1fa:	45bc      	cmp	ip, r7
 801b1fc:	f340 8101 	ble.w	801b402 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b200:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b204:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b208:	3701      	adds	r7, #1
 801b20a:	f100 8102 	bmi.w	801b412 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b20e:	45bc      	cmp	ip, r7
 801b210:	f340 80ff 	ble.w	801b412 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b214:	2e00      	cmp	r6, #0
 801b216:	f000 80fe 	beq.w	801b416 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b21a:	44f4      	add	ip, lr
 801b21c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b220:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b224:	b2b6      	uxth	r6, r6
 801b226:	b280      	uxth	r0, r0
 801b228:	fb00 fe06 	mul.w	lr, r0, r6
 801b22c:	0136      	lsls	r6, r6, #4
 801b22e:	eba6 070e 	sub.w	r7, r6, lr
 801b232:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b236:	b2bf      	uxth	r7, r7
 801b238:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801b23c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b240:	fb0a f607 	mul.w	r6, sl, r7
 801b244:	b280      	uxth	r0, r0
 801b246:	1a1b      	subs	r3, r3, r0
 801b248:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b24c:	b29b      	uxth	r3, r3
 801b24e:	fb0b 6603 	mla	r6, fp, r3, r6
 801b252:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b256:	fb00 6609 	mla	r6, r0, r9, r6
 801b25a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b25e:	fb0e 6608 	mla	r6, lr, r8, r6
 801b262:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b266:	9600      	str	r6, [sp, #0]
 801b268:	2e00      	cmp	r6, #0
 801b26a:	f000 80be 	beq.w	801b3ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b26e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801b272:	fb0b fc0c 	mul.w	ip, fp, ip
 801b276:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801b27a:	fb0b f505 	mul.w	r5, fp, r5
 801b27e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b282:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801b286:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b28a:	44dc      	add	ip, fp
 801b28c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b290:	9501      	str	r5, [sp, #4]
 801b292:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801b296:	9503      	str	r5, [sp, #12]
 801b298:	9d01      	ldr	r5, [sp, #4]
 801b29a:	9e02      	ldr	r6, [sp, #8]
 801b29c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801b2a0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b2a4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801b2a8:	fb0a fc0c 	mul.w	ip, sl, ip
 801b2ac:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b2b0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b2b4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b2b8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b2bc:	4465      	add	r5, ip
 801b2be:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b2c2:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801b2c6:	fb09 fc0c 	mul.w	ip, r9, ip
 801b2ca:	fb09 f904 	mul.w	r9, r9, r4
 801b2ce:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801b2d2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b2d6:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801b2da:	fb08 f404 	mul.w	r4, r8, r4
 801b2de:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801b2e2:	fb08 f802 	mul.w	r8, r8, r2
 801b2e6:	0a2d      	lsrs	r5, r5, #8
 801b2e8:	0a22      	lsrs	r2, r4, #8
 801b2ea:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b2ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801b2f2:	437d      	muls	r5, r7
 801b2f4:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801b2f8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b2fc:	4414      	add	r4, r2
 801b2fe:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801b302:	fb0a fa01 	mul.w	sl, sl, r1
 801b306:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b30a:	9a03      	ldr	r2, [sp, #12]
 801b30c:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801b310:	fb02 5503 	mla	r5, r2, r3, r5
 801b314:	0a24      	lsrs	r4, r4, #8
 801b316:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b31a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801b31e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b322:	fb04 540e 	mla	r4, r4, lr, r5
 801b326:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b32a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b32e:	4461      	add	r1, ip
 801b330:	0a09      	lsrs	r1, r1, #8
 801b332:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801b336:	fb01 4100 	mla	r1, r1, r0, r4
 801b33a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b33e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b342:	fb07 f70a 	mul.w	r7, r7, sl
 801b346:	0a09      	lsrs	r1, r1, #8
 801b348:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801b34c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801b350:	fb03 7101 	mla	r1, r3, r1, r7
 801b354:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b358:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801b35c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b360:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b364:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801b368:	fb00 e101 	mla	r1, r0, r1, lr
 801b36c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801b370:	9a00      	ldr	r2, [sp, #0]
 801b372:	b287      	uxth	r7, r0
 801b374:	437a      	muls	r2, r7
 801b376:	1c53      	adds	r3, r2, #1
 801b378:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b37c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b380:	0a09      	lsrs	r1, r1, #8
 801b382:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b386:	4321      	orrs	r1, r4
 801b388:	0c0a      	lsrs	r2, r1, #16
 801b38a:	8836      	ldrh	r6, [r6, #0]
 801b38c:	fb12 f207 	smulbb	r2, r2, r7
 801b390:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b394:	b2c8      	uxtb	r0, r1
 801b396:	1235      	asrs	r5, r6, #8
 801b398:	fb14 f407 	smulbb	r4, r4, r7
 801b39c:	fb10 f007 	smulbb	r0, r0, r7
 801b3a0:	b2db      	uxtb	r3, r3
 801b3a2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b3a6:	fb05 2503 	mla	r5, r5, r3, r2
 801b3aa:	10f2      	asrs	r2, r6, #3
 801b3ac:	00f6      	lsls	r6, r6, #3
 801b3ae:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b3b2:	b2f6      	uxtb	r6, r6
 801b3b4:	fb02 4203 	mla	r2, r2, r3, r4
 801b3b8:	fb06 0303 	mla	r3, r6, r3, r0
 801b3bc:	b2ad      	uxth	r5, r5
 801b3be:	b299      	uxth	r1, r3
 801b3c0:	b294      	uxth	r4, r2
 801b3c2:	1c6b      	adds	r3, r5, #1
 801b3c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b3c8:	1c62      	adds	r2, r4, #1
 801b3ca:	1c4b      	adds	r3, r1, #1
 801b3cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b3d0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b3d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b3d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b3dc:	0952      	lsrs	r2, r2, #5
 801b3de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b3e2:	432b      	orrs	r3, r5
 801b3e4:	4313      	orrs	r3, r2
 801b3e6:	9a02      	ldr	r2, [sp, #8]
 801b3e8:	8013      	strh	r3, [r2, #0]
 801b3ea:	b005      	add	sp, #20
 801b3ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3f0:	2500      	movs	r5, #0
 801b3f2:	e6e9      	b.n	801b1c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b3f4:	2100      	movs	r1, #0
 801b3f6:	460d      	mov	r5, r1
 801b3f8:	e6f3      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b3fa:	2100      	movs	r1, #0
 801b3fc:	e6f1      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b3fe:	4631      	mov	r1, r6
 801b400:	e6ef      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b402:	2400      	movs	r4, #0
 801b404:	e700      	b.n	801b208 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b406:	2200      	movs	r2, #0
 801b408:	4614      	mov	r4, r2
 801b40a:	e70b      	b.n	801b224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b40c:	4602      	mov	r2, r0
 801b40e:	4604      	mov	r4, r0
 801b410:	e708      	b.n	801b224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b412:	2200      	movs	r2, #0
 801b414:	e706      	b.n	801b224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b416:	4632      	mov	r2, r6
 801b418:	e704      	b.n	801b224 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b41a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b41a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b41e:	b09f      	sub	sp, #124	@ 0x7c
 801b420:	921b      	str	r2, [sp, #108]	@ 0x6c
 801b422:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801b424:	901d      	str	r0, [sp, #116]	@ 0x74
 801b426:	9309      	str	r3, [sp, #36]	@ 0x24
 801b428:	6850      	ldr	r0, [r2, #4]
 801b42a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b42e:	9119      	str	r1, [sp, #100]	@ 0x64
 801b430:	931c      	str	r3, [sp, #112]	@ 0x70
 801b432:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b436:	fb00 1303 	mla	r3, r0, r3, r1
 801b43a:	6812      	ldr	r2, [r2, #0]
 801b43c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b43e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b442:	930c      	str	r3, [sp, #48]	@ 0x30
 801b444:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b446:	681b      	ldr	r3, [r3, #0]
 801b448:	9312      	str	r3, [sp, #72]	@ 0x48
 801b44a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b44c:	685e      	ldr	r6, [r3, #4]
 801b44e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b452:	3604      	adds	r6, #4
 801b454:	930d      	str	r3, [sp, #52]	@ 0x34
 801b456:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b458:	2b00      	cmp	r3, #0
 801b45a:	dc03      	bgt.n	801b464 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b45c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b45e:	2b00      	cmp	r3, #0
 801b460:	f340 8387 	ble.w	801bb72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b464:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b466:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b46a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b46e:	1e48      	subs	r0, r1, #1
 801b470:	1e57      	subs	r7, r2, #1
 801b472:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b474:	2b00      	cmp	r3, #0
 801b476:	f340 8194 	ble.w	801b7a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801b47a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b47c:	142b      	asrs	r3, r5, #16
 801b47e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b482:	d406      	bmi.n	801b492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b484:	4584      	cmp	ip, r0
 801b486:	da04      	bge.n	801b492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b488:	2b00      	cmp	r3, #0
 801b48a:	db02      	blt.n	801b492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b48c:	42bb      	cmp	r3, r7
 801b48e:	f2c0 8189 	blt.w	801b7a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b492:	f11c 0c01 	adds.w	ip, ip, #1
 801b496:	f100 8177 	bmi.w	801b788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b49a:	4561      	cmp	r1, ip
 801b49c:	f2c0 8174 	blt.w	801b788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b4a0:	3301      	adds	r3, #1
 801b4a2:	f100 8171 	bmi.w	801b788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b4a6:	429a      	cmp	r2, r3
 801b4a8:	f2c0 816e 	blt.w	801b788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b4ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b4ae:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b4b0:	931a      	str	r3, [sp, #104]	@ 0x68
 801b4b2:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b4b4:	2b00      	cmp	r3, #0
 801b4b6:	f340 8193 	ble.w	801b7e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801b4ba:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b4bc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b4c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b4c4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b4c6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b4ca:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b4ce:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b4d0:	141b      	asrs	r3, r3, #16
 801b4d2:	f100 81d6 	bmi.w	801b882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b4d6:	f100 38ff 	add.w	r8, r0, #4294967295
 801b4da:	4543      	cmp	r3, r8
 801b4dc:	f280 81d1 	bge.w	801b882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b4e0:	f1bc 0f00 	cmp.w	ip, #0
 801b4e4:	f2c0 81cd 	blt.w	801b882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b4e8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b4ec:	45c4      	cmp	ip, r8
 801b4ee:	f280 81c8 	bge.w	801b882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b4f2:	b200      	sxth	r0, r0
 801b4f4:	fb0c 3300 	mla	r3, ip, r0, r3
 801b4f8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b4fa:	eb04 0803 	add.w	r8, r4, r3
 801b4fe:	5ce3      	ldrb	r3, [r4, r3]
 801b500:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b504:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b508:	2a00      	cmp	r2, #0
 801b50a:	f000 81af 	beq.w	801b86c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b50e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b512:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b516:	940e      	str	r4, [sp, #56]	@ 0x38
 801b518:	0e24      	lsrs	r4, r4, #24
 801b51a:	9415      	str	r4, [sp, #84]	@ 0x54
 801b51c:	b179      	cbz	r1, 801b53e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b51e:	eb08 0c00 	add.w	ip, r8, r0
 801b522:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b526:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b52a:	900a      	str	r0, [sp, #40]	@ 0x28
 801b52c:	0e00      	lsrs	r0, r0, #24
 801b52e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b530:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b534:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b538:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b53a:	0e00      	lsrs	r0, r0, #24
 801b53c:	9016      	str	r0, [sp, #88]	@ 0x58
 801b53e:	b292      	uxth	r2, r2
 801b540:	b289      	uxth	r1, r1
 801b542:	fb02 f901 	mul.w	r9, r2, r1
 801b546:	0112      	lsls	r2, r2, #4
 801b548:	eba2 0809 	sub.w	r8, r2, r9
 801b54c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b54e:	fa1f f888 	uxth.w	r8, r8
 801b552:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b556:	fb08 f000 	mul.w	r0, r8, r0
 801b55a:	b289      	uxth	r1, r1
 801b55c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b560:	1a52      	subs	r2, r2, r1
 801b562:	b292      	uxth	r2, r2
 801b564:	fb02 000e 	mla	r0, r2, lr, r0
 801b568:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b56a:	fb01 0004 	mla	r0, r1, r4, r0
 801b56e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b570:	fb09 0004 	mla	r0, r9, r4, r0
 801b574:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b578:	2800      	cmp	r0, #0
 801b57a:	f000 80fa 	beq.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b57e:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b582:	d01b      	beq.n	801b5bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801b584:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b588:	fb0e fa0a 	mul.w	sl, lr, sl
 801b58c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b590:	fb0e fe03 	mul.w	lr, lr, r3
 801b594:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b598:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b59c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b5a0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b5a4:	4453      	add	r3, sl
 801b5a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b5aa:	0a1b      	lsrs	r3, r3, #8
 801b5ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5b0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b5b4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b5b8:	ea43 030c 	orr.w	r3, r3, ip
 801b5bc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b5be:	2cff      	cmp	r4, #255	@ 0xff
 801b5c0:	d021      	beq.n	801b606 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b5c2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b5c4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b5c8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b5ca:	fb04 fb0b 	mul.w	fp, r4, fp
 801b5ce:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b5d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5d4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b5d8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b5da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5de:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5e2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b5e6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b5ea:	44de      	add	lr, fp
 801b5ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b5fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b600:	ea4e 040a 	orr.w	r4, lr, sl
 801b604:	940e      	str	r4, [sp, #56]	@ 0x38
 801b606:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b608:	2cff      	cmp	r4, #255	@ 0xff
 801b60a:	d021      	beq.n	801b650 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b60c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b60e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b612:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b614:	fb04 fb0b 	mul.w	fp, r4, fp
 801b618:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b61a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b61e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b622:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b624:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b628:	fb04 fa0a 	mul.w	sl, r4, sl
 801b62c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b630:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b634:	44de      	add	lr, fp
 801b636:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b63a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b63e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b642:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b646:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b64a:	ea4e 040a 	orr.w	r4, lr, sl
 801b64e:	940a      	str	r4, [sp, #40]	@ 0x28
 801b650:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b652:	2cff      	cmp	r4, #255	@ 0xff
 801b654:	d021      	beq.n	801b69a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801b656:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b658:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b65c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b65e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b662:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b664:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b668:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b66c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b66e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b672:	fb04 fa0a 	mul.w	sl, r4, sl
 801b676:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b67a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b67e:	44de      	add	lr, fp
 801b680:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b684:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b688:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b68c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b690:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b694:	ea4e 040a 	orr.w	r4, lr, sl
 801b698:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b69a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b69c:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b6a0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b6a4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b6a8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b6ac:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b6ae:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b6b2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b6b6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b6ba:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b6bc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b6c0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b6c2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b6c6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b6ca:	fb08 f80e 	mul.w	r8, r8, lr
 801b6ce:	fb02 8303 	mla	r3, r2, r3, r8
 801b6d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b6d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6d8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b6dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b6de:	fb01 330a 	mla	r3, r1, sl, r3
 801b6e2:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b6e6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b6e8:	fb09 3901 	mla	r9, r9, r1, r3
 801b6ec:	4342      	muls	r2, r0
 801b6ee:	1c50      	adds	r0, r2, #1
 801b6f0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b6f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b6f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b6fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b700:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b704:	ea4c 0c09 	orr.w	ip, ip, r9
 801b708:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b70a:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b70e:	883b      	ldrh	r3, [r7, #0]
 801b710:	fb12 f204 	smulbb	r2, r2, r4
 801b714:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b718:	fa5f fc8c 	uxtb.w	ip, ip
 801b71c:	1219      	asrs	r1, r3, #8
 801b71e:	fb1c fc04 	smulbb	ip, ip, r4
 801b722:	b2c0      	uxtb	r0, r0
 801b724:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b728:	fb01 2100 	mla	r1, r1, r0, r2
 801b72c:	10da      	asrs	r2, r3, #3
 801b72e:	00db      	lsls	r3, r3, #3
 801b730:	fb1e fe04 	smulbb	lr, lr, r4
 801b734:	b2db      	uxtb	r3, r3
 801b736:	fb03 c300 	mla	r3, r3, r0, ip
 801b73a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b73e:	b289      	uxth	r1, r1
 801b740:	fb02 e200 	mla	r2, r2, r0, lr
 801b744:	fa1f fc83 	uxth.w	ip, r3
 801b748:	1c4b      	adds	r3, r1, #1
 801b74a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b74e:	f10c 0301 	add.w	r3, ip, #1
 801b752:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b756:	b292      	uxth	r2, r2
 801b758:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b75c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b760:	430b      	orrs	r3, r1
 801b762:	1c51      	adds	r1, r2, #1
 801b764:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b768:	0952      	lsrs	r2, r2, #5
 801b76a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b76e:	4313      	orrs	r3, r2
 801b770:	803b      	strh	r3, [r7, #0]
 801b772:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b774:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b776:	3702      	adds	r7, #2
 801b778:	441a      	add	r2, r3
 801b77a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b77c:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b77e:	441d      	add	r5, r3
 801b780:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b782:	3b01      	subs	r3, #1
 801b784:	931a      	str	r3, [sp, #104]	@ 0x68
 801b786:	e694      	b.n	801b4b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b788:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b78a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b78c:	441c      	add	r4, r3
 801b78e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b790:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b792:	441d      	add	r5, r3
 801b794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b796:	3b01      	subs	r3, #1
 801b798:	9309      	str	r3, [sp, #36]	@ 0x24
 801b79a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b79c:	3302      	adds	r3, #2
 801b79e:	930c      	str	r3, [sp, #48]	@ 0x30
 801b7a0:	e667      	b.n	801b472 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b7a2:	d024      	beq.n	801b7ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801b7a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b7a6:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b7a8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b7aa:	3b01      	subs	r3, #1
 801b7ac:	fb00 4003 	mla	r0, r0, r3, r4
 801b7b0:	1400      	asrs	r0, r0, #16
 801b7b2:	f53f ae7b 	bmi.w	801b4ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7b6:	3901      	subs	r1, #1
 801b7b8:	4288      	cmp	r0, r1
 801b7ba:	f6bf ae77 	bge.w	801b4ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7be:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b7c0:	fb01 5303 	mla	r3, r1, r3, r5
 801b7c4:	141b      	asrs	r3, r3, #16
 801b7c6:	f53f ae71 	bmi.w	801b4ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7ca:	3a01      	subs	r2, #1
 801b7cc:	4293      	cmp	r3, r2
 801b7ce:	f6bf ae6d 	bge.w	801b4ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b7d2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b7d6:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b7da:	f1bb 0f00 	cmp.w	fp, #0
 801b7de:	dc70      	bgt.n	801b8c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801b7e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b7e2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b7e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b7e8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b7ec:	930c      	str	r3, [sp, #48]	@ 0x30
 801b7ee:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b7f0:	2b00      	cmp	r3, #0
 801b7f2:	f340 81be 	ble.w	801bb72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b7f6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b7fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b802:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b806:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b80a:	eef0 6a62 	vmov.f32	s13, s5
 801b80e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b812:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b816:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b81a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b81e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b822:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b826:	eef0 6a43 	vmov.f32	s13, s6
 801b82a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b82e:	ee12 2a90 	vmov	r2, s5
 801b832:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b836:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b838:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b83c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b840:	ee13 2a10 	vmov	r2, s6
 801b844:	932b      	str	r3, [sp, #172]	@ 0xac
 801b846:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b848:	ee16 5a90 	vmov	r5, s13
 801b84c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b850:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b852:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b854:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b856:	3b01      	subs	r3, #1
 801b858:	9319      	str	r3, [sp, #100]	@ 0x64
 801b85a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b85c:	bf08      	it	eq
 801b85e:	4613      	moveq	r3, r2
 801b860:	eeb0 3a67 	vmov.f32	s6, s15
 801b864:	9309      	str	r3, [sp, #36]	@ 0x24
 801b866:	eef0 2a47 	vmov.f32	s5, s14
 801b86a:	e5f4      	b.n	801b456 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b86c:	2900      	cmp	r1, #0
 801b86e:	f43f ae66 	beq.w	801b53e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b872:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b876:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b87a:	900a      	str	r0, [sp, #40]	@ 0x28
 801b87c:	0e00      	lsrs	r0, r0, #24
 801b87e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b880:	e65d      	b.n	801b53e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b882:	f113 0801 	adds.w	r8, r3, #1
 801b886:	f53f af74 	bmi.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b88a:	4540      	cmp	r0, r8
 801b88c:	f6ff af71 	blt.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b890:	f11c 0801 	adds.w	r8, ip, #1
 801b894:	f53f af6d 	bmi.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b898:	45c6      	cmp	lr, r8
 801b89a:	f6ff af6a 	blt.w	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b89e:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b8a0:	9302      	str	r3, [sp, #8]
 801b8a2:	b200      	sxth	r0, r0
 801b8a4:	fa0f f38e 	sxth.w	r3, lr
 801b8a8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b8ac:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b8b0:	9301      	str	r3, [sp, #4]
 801b8b2:	9000      	str	r0, [sp, #0]
 801b8b4:	4633      	mov	r3, r6
 801b8b6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b8b8:	4639      	mov	r1, r7
 801b8ba:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b8bc:	f7ff fc63 	bl	801b186 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b8c0:	e757      	b.n	801b772 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b8c2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b8c4:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b8c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b8ca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b8cc:	1427      	asrs	r7, r4, #16
 801b8ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b8d2:	142b      	asrs	r3, r5, #16
 801b8d4:	fb01 7303 	mla	r3, r1, r3, r7
 801b8d8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b8da:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b8de:	18e7      	adds	r7, r4, r3
 801b8e0:	5ce3      	ldrb	r3, [r4, r3]
 801b8e2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b8e6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8ea:	2a00      	cmp	r2, #0
 801b8ec:	f000 8137 	beq.w	801bb5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b8f0:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b8f4:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b8f8:	9410      	str	r4, [sp, #64]	@ 0x40
 801b8fa:	0e24      	lsrs	r4, r4, #24
 801b8fc:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b8fe:	b170      	cbz	r0, 801b91e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b900:	eb07 0e01 	add.w	lr, r7, r1
 801b904:	5c79      	ldrb	r1, [r7, r1]
 801b906:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b90a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b90c:	0e09      	lsrs	r1, r1, #24
 801b90e:	9114      	str	r1, [sp, #80]	@ 0x50
 801b910:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b914:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b918:	9111      	str	r1, [sp, #68]	@ 0x44
 801b91a:	0e09      	lsrs	r1, r1, #24
 801b91c:	9118      	str	r1, [sp, #96]	@ 0x60
 801b91e:	b292      	uxth	r2, r2
 801b920:	b280      	uxth	r0, r0
 801b922:	fb02 f800 	mul.w	r8, r2, r0
 801b926:	0112      	lsls	r2, r2, #4
 801b928:	eba2 0e08 	sub.w	lr, r2, r8
 801b92c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b92e:	fa1f fe8e 	uxth.w	lr, lr
 801b932:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b936:	fb0e f101 	mul.w	r1, lr, r1
 801b93a:	b280      	uxth	r0, r0
 801b93c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b940:	1a12      	subs	r2, r2, r0
 801b942:	b292      	uxth	r2, r2
 801b944:	fb02 110c 	mla	r1, r2, ip, r1
 801b948:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b94a:	fb00 1104 	mla	r1, r0, r4, r1
 801b94e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b950:	fb08 1104 	mla	r1, r8, r4, r1
 801b954:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b958:	2900      	cmp	r1, #0
 801b95a:	f000 80f5 	beq.w	801bb48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801b95e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b962:	d019      	beq.n	801b998 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801b964:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b968:	fb0c fa0a 	mul.w	sl, ip, sl
 801b96c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b970:	fb0c fc03 	mul.w	ip, ip, r3
 801b974:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b978:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b97c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b980:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b984:	4453      	add	r3, sl
 801b986:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b98a:	0a1b      	lsrs	r3, r3, #8
 801b98c:	0a3f      	lsrs	r7, r7, #8
 801b98e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b992:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b996:	433b      	orrs	r3, r7
 801b998:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b99a:	2cff      	cmp	r4, #255	@ 0xff
 801b99c:	d020      	beq.n	801b9e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801b99e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9a0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9a4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b9a6:	4367      	muls	r7, r4
 801b9a8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b9aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9ae:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b9b2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b9b4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b9b8:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9c0:	44bc      	add	ip, r7
 801b9c2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b9c6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b9d6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b9da:	ea4c 040a 	orr.w	r4, ip, sl
 801b9de:	9410      	str	r4, [sp, #64]	@ 0x40
 801b9e0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9e2:	2cff      	cmp	r4, #255	@ 0xff
 801b9e4:	d020      	beq.n	801ba28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801b9e6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9e8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b9ec:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9ee:	4367      	muls	r7, r4
 801b9f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b9f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9f6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b9fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b9fc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ba00:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba08:	44bc      	add	ip, r7
 801ba0a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ba0e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba1e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ba22:	ea4c 040a 	orr.w	r4, ip, sl
 801ba26:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ba28:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801ba2a:	2cff      	cmp	r4, #255	@ 0xff
 801ba2c:	d020      	beq.n	801ba70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801ba2e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba30:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ba34:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801ba36:	4367      	muls	r7, r4
 801ba38:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ba3e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ba42:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801ba44:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ba48:	fb04 fa0a 	mul.w	sl, r4, sl
 801ba4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba50:	44bc      	add	ip, r7
 801ba52:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ba56:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba62:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ba66:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ba6a:	ea4c 040a 	orr.w	r4, ip, sl
 801ba6e:	9411      	str	r4, [sp, #68]	@ 0x44
 801ba70:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ba72:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ba76:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ba7a:	fb0e f707 	mul.w	r7, lr, r7
 801ba7e:	fb02 770c 	mla	r7, r2, ip, r7
 801ba82:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ba84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ba88:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba8c:	fb00 770c 	mla	r7, r0, ip, r7
 801ba90:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ba92:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ba96:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ba98:	fb08 770c 	mla	r7, r8, ip, r7
 801ba9c:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801baa0:	fb0e fe0c 	mul.w	lr, lr, ip
 801baa4:	fb02 e303 	mla	r3, r2, r3, lr
 801baa8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801baaa:	0a3f      	lsrs	r7, r7, #8
 801baac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801bab0:	fb00 330a 	mla	r3, r0, sl, r3
 801bab4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bab6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801baba:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801babe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bac2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bac4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bac8:	434b      	muls	r3, r1
 801baca:	1c59      	adds	r1, r3, #1
 801bacc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801bad0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801bad4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bad8:	ea47 070c 	orr.w	r7, r7, ip
 801badc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bade:	0c3b      	lsrs	r3, r7, #16
 801bae0:	f8b9 0000 	ldrh.w	r0, [r9]
 801bae4:	fb13 f304 	smulbb	r3, r3, r4
 801bae8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801baec:	b2ff      	uxtb	r7, r7
 801baee:	1202      	asrs	r2, r0, #8
 801baf0:	fb17 f704 	smulbb	r7, r7, r4
 801baf4:	b2c9      	uxtb	r1, r1
 801baf6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801bafa:	fb02 3201 	mla	r2, r2, r1, r3
 801bafe:	10c3      	asrs	r3, r0, #3
 801bb00:	00c0      	lsls	r0, r0, #3
 801bb02:	fb1c fc04 	smulbb	ip, ip, r4
 801bb06:	b2c0      	uxtb	r0, r0
 801bb08:	fb00 7001 	mla	r0, r0, r1, r7
 801bb0c:	b292      	uxth	r2, r2
 801bb0e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801bb12:	fb03 c301 	mla	r3, r3, r1, ip
 801bb16:	f102 0c01 	add.w	ip, r2, #1
 801bb1a:	b280      	uxth	r0, r0
 801bb1c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801bb20:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801bb24:	1c42      	adds	r2, r0, #1
 801bb26:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bb2a:	b29b      	uxth	r3, r3
 801bb2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bb30:	ea42 020c 	orr.w	r2, r2, ip
 801bb34:	f103 0c01 	add.w	ip, r3, #1
 801bb38:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801bb3c:	095b      	lsrs	r3, r3, #5
 801bb3e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bb42:	431a      	orrs	r2, r3
 801bb44:	f8a9 2000 	strh.w	r2, [r9]
 801bb48:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801bb4a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801bb4c:	f109 0902 	add.w	r9, r9, #2
 801bb50:	441a      	add	r2, r3
 801bb52:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801bb54:	9229      	str	r2, [sp, #164]	@ 0xa4
 801bb56:	441d      	add	r5, r3
 801bb58:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bb5c:	e63d      	b.n	801b7da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801bb5e:	2800      	cmp	r0, #0
 801bb60:	f43f aedd 	beq.w	801b91e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801bb64:	5c79      	ldrb	r1, [r7, r1]
 801bb66:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb6a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bb6c:	0e09      	lsrs	r1, r1, #24
 801bb6e:	9114      	str	r1, [sp, #80]	@ 0x50
 801bb70:	e6d5      	b.n	801b91e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801bb72:	b01f      	add	sp, #124	@ 0x7c
 801bb74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801bb78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb7c:	b089      	sub	sp, #36	@ 0x24
 801bb7e:	9101      	str	r1, [sp, #4]
 801bb80:	9801      	ldr	r0, [sp, #4]
 801bb82:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801bb86:	8800      	ldrh	r0, [r0, #0]
 801bb88:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801bb8c:	1206      	asrs	r6, r0, #8
 801bb8e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bb92:	9602      	str	r6, [sp, #8]
 801bb94:	10c6      	asrs	r6, r0, #3
 801bb96:	00c0      	lsls	r0, r0, #3
 801bb98:	b2c0      	uxtb	r0, r0
 801bb9a:	9004      	str	r0, [sp, #16]
 801bb9c:	fb07 100c 	mla	r0, r7, ip, r1
 801bba0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801bba4:	2f00      	cmp	r7, #0
 801bba6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801bbaa:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801bbae:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801bbb2:	9603      	str	r6, [sp, #12]
 801bbb4:	eb02 0e00 	add.w	lr, r2, r0
 801bbb8:	f2c0 810a 	blt.w	801bdd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bbbc:	45b8      	cmp	r8, r7
 801bbbe:	f340 8107 	ble.w	801bdd0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bbc2:	2900      	cmp	r1, #0
 801bbc4:	f2c0 8102 	blt.w	801bdcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bbc8:	458c      	cmp	ip, r1
 801bbca:	f340 80ff 	ble.w	801bdcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bbce:	5c12      	ldrb	r2, [r2, r0]
 801bbd0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bbd4:	1c4a      	adds	r2, r1, #1
 801bbd6:	f100 80fe 	bmi.w	801bdd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bbda:	4594      	cmp	ip, r2
 801bbdc:	f340 80fb 	ble.w	801bdd6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bbe0:	2d00      	cmp	r5, #0
 801bbe2:	f000 80fa 	beq.w	801bdda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801bbe6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bbea:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801bbee:	3701      	adds	r7, #1
 801bbf0:	f100 80f7 	bmi.w	801bde2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bbf4:	45b8      	cmp	r8, r7
 801bbf6:	f340 80f4 	ble.w	801bde2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bbfa:	2c00      	cmp	r4, #0
 801bbfc:	f000 80f4 	beq.w	801bde8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bc00:	2900      	cmp	r1, #0
 801bc02:	eb0e 020c 	add.w	r2, lr, ip
 801bc06:	f2c0 80ea 	blt.w	801bdde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bc0a:	458c      	cmp	ip, r1
 801bc0c:	f340 80e7 	ble.w	801bdde <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bc10:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801bc14:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bc18:	3101      	adds	r1, #1
 801bc1a:	f100 80e8 	bmi.w	801bdee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bc1e:	458c      	cmp	ip, r1
 801bc20:	f340 80e5 	ble.w	801bdee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bc24:	2d00      	cmp	r5, #0
 801bc26:	f000 80e4 	beq.w	801bdf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bc2a:	7852      	ldrb	r2, [r2, #1]
 801bc2c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bc30:	0e0b      	lsrs	r3, r1, #24
 801bc32:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bc36:	9300      	str	r3, [sp, #0]
 801bc38:	b2a4      	uxth	r4, r4
 801bc3a:	b2ab      	uxth	r3, r5
 801bc3c:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801bc40:	fb03 f904 	mul.w	r9, r3, r4
 801bc44:	fb0a f505 	mul.w	r5, sl, r5
 801bc48:	011b      	lsls	r3, r3, #4
 801bc4a:	eba3 0e09 	sub.w	lr, r3, r9
 801bc4e:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801bc52:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801bc56:	0a28      	lsrs	r0, r5, #8
 801bc58:	fb0a f303 	mul.w	r3, sl, r3
 801bc5c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bc60:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801bc64:	4405      	add	r5, r0
 801bc66:	0a2d      	lsrs	r5, r5, #8
 801bc68:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801bc6c:	9005      	str	r0, [sp, #20]
 801bc6e:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801bc72:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bc76:	0a1b      	lsrs	r3, r3, #8
 801bc78:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bc7c:	9306      	str	r3, [sp, #24]
 801bc7e:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801bc82:	fb0b f303 	mul.w	r3, fp, r3
 801bc86:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bc8a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bc8e:	fb0b f606 	mul.w	r6, fp, r6
 801bc92:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801bc96:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bc9a:	fb08 f707 	mul.w	r7, r8, r7
 801bc9e:	0a1d      	lsrs	r5, r3, #8
 801bca0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bca4:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801bca8:	441d      	add	r5, r3
 801bcaa:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801bcae:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bcb2:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801bcb6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bcba:	fb08 fc0c 	mul.w	ip, r8, ip
 801bcbe:	0a1b      	lsrs	r3, r3, #8
 801bcc0:	9307      	str	r3, [sp, #28]
 801bcc2:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801bcc6:	0e0b      	lsrs	r3, r1, #24
 801bcc8:	0a2d      	lsrs	r5, r5, #8
 801bcca:	fa1f fe8e 	uxth.w	lr, lr
 801bcce:	435f      	muls	r7, r3
 801bcd0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bcd4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bcd8:	fb05 f50e 	mul.w	r5, r5, lr
 801bcdc:	b2a4      	uxth	r4, r4
 801bcde:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801bce2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bce6:	4359      	muls	r1, r3
 801bce8:	1b12      	subs	r2, r2, r4
 801bcea:	9b05      	ldr	r3, [sp, #20]
 801bcec:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bcf0:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bcf4:	b292      	uxth	r2, r2
 801bcf6:	4460      	add	r0, ip
 801bcf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcfc:	fb03 5502 	mla	r5, r3, r2, r5
 801bd00:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bd04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd08:	44bc      	add	ip, r7
 801bd0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd0e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bd12:	0a36      	lsrs	r6, r6, #8
 801bd14:	fb0c 5509 	mla	r5, ip, r9, r5
 801bd18:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801bd1c:	fb0e f606 	mul.w	r6, lr, r6
 801bd20:	9b06      	ldr	r3, [sp, #24]
 801bd22:	0a00      	lsrs	r0, r0, #8
 801bd24:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801bd28:	fb00 5504 	mla	r5, r0, r4, r5
 801bd2c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801bd30:	fb02 6000 	mla	r0, r2, r0, r6
 801bd34:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801bd38:	fb0e fe0b 	mul.w	lr, lr, fp
 801bd3c:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bd40:	0a09      	lsrs	r1, r1, #8
 801bd42:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd46:	fb09 0001 	mla	r0, r9, r1, r0
 801bd4a:	fb02 e20a 	mla	r2, r2, sl, lr
 801bd4e:	9b07      	ldr	r3, [sp, #28]
 801bd50:	0a2d      	lsrs	r5, r5, #8
 801bd52:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bd56:	fb04 0003 	mla	r0, r4, r3, r0
 801bd5a:	fb04 2408 	mla	r4, r4, r8, r2
 801bd5e:	9b00      	ldr	r3, [sp, #0]
 801bd60:	9a04      	ldr	r2, [sp, #16]
 801bd62:	fb09 4903 	mla	r9, r9, r3, r4
 801bd66:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bd6a:	9b02      	ldr	r3, [sp, #8]
 801bd6c:	fa5f f989 	uxtb.w	r9, r9
 801bd70:	fb03 f109 	mul.w	r1, r3, r9
 801bd74:	9b03      	ldr	r3, [sp, #12]
 801bd76:	0a00      	lsrs	r0, r0, #8
 801bd78:	fb03 f309 	mul.w	r3, r3, r9
 801bd7c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801bd80:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bd84:	4305      	orrs	r5, r0
 801bd86:	fb02 f909 	mul.w	r9, r2, r9
 801bd8a:	1c58      	adds	r0, r3, #1
 801bd8c:	1c4a      	adds	r2, r1, #1
 801bd8e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd92:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd96:	0a2b      	lsrs	r3, r5, #8
 801bd98:	0c2a      	lsrs	r2, r5, #16
 801bd9a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bd9e:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bda2:	00db      	lsls	r3, r3, #3
 801bda4:	0212      	lsls	r2, r2, #8
 801bda6:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801bdaa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bdae:	4313      	orrs	r3, r2
 801bdb0:	f109 0201 	add.w	r2, r9, #1
 801bdb4:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bdb8:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bdbc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bdc0:	431d      	orrs	r5, r3
 801bdc2:	9b01      	ldr	r3, [sp, #4]
 801bdc4:	801d      	strh	r5, [r3, #0]
 801bdc6:	b009      	add	sp, #36	@ 0x24
 801bdc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdcc:	2000      	movs	r0, #0
 801bdce:	e701      	b.n	801bbd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bdd0:	2600      	movs	r6, #0
 801bdd2:	4630      	mov	r0, r6
 801bdd4:	e70b      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bdd6:	2600      	movs	r6, #0
 801bdd8:	e709      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bdda:	462e      	mov	r6, r5
 801bddc:	e707      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bdde:	2700      	movs	r7, #0
 801bde0:	e71a      	b.n	801bc18 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bde2:	2100      	movs	r1, #0
 801bde4:	460f      	mov	r7, r1
 801bde6:	e723      	b.n	801bc30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bde8:	4621      	mov	r1, r4
 801bdea:	4627      	mov	r7, r4
 801bdec:	e720      	b.n	801bc30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bdee:	2100      	movs	r1, #0
 801bdf0:	e71e      	b.n	801bc30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bdf2:	4629      	mov	r1, r5
 801bdf4:	e71c      	b.n	801bc30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
	...

0801bdf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdfc:	b09b      	sub	sp, #108	@ 0x6c
 801bdfe:	9218      	str	r2, [sp, #96]	@ 0x60
 801be00:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801be02:	9019      	str	r0, [sp, #100]	@ 0x64
 801be04:	6850      	ldr	r0, [r2, #4]
 801be06:	9116      	str	r1, [sp, #88]	@ 0x58
 801be08:	9307      	str	r3, [sp, #28]
 801be0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801be0e:	fb00 1303 	mla	r3, r0, r3, r1
 801be12:	6812      	ldr	r2, [r2, #0]
 801be14:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801be16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801be1a:	930a      	str	r3, [sp, #40]	@ 0x28
 801be1c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be1e:	681b      	ldr	r3, [r3, #0]
 801be20:	930f      	str	r3, [sp, #60]	@ 0x3c
 801be22:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be24:	685e      	ldr	r6, [r3, #4]
 801be26:	3604      	adds	r6, #4
 801be28:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801be2a:	2b00      	cmp	r3, #0
 801be2c:	dc03      	bgt.n	801be36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801be2e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801be30:	2b00      	cmp	r3, #0
 801be32:	f340 8373 	ble.w	801c51c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801be36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be3c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801be40:	1e48      	subs	r0, r1, #1
 801be42:	1e57      	subs	r7, r2, #1
 801be44:	9b07      	ldr	r3, [sp, #28]
 801be46:	2b00      	cmp	r3, #0
 801be48:	f340 818f 	ble.w	801c16a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801be4c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801be4e:	142b      	asrs	r3, r5, #16
 801be50:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801be54:	d406      	bmi.n	801be64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801be56:	4584      	cmp	ip, r0
 801be58:	da04      	bge.n	801be64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801be5a:	2b00      	cmp	r3, #0
 801be5c:	db02      	blt.n	801be64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801be5e:	42bb      	cmp	r3, r7
 801be60:	f2c0 8184 	blt.w	801c16c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801be64:	f11c 0c01 	adds.w	ip, ip, #1
 801be68:	f100 8172 	bmi.w	801c150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801be6c:	4561      	cmp	r1, ip
 801be6e:	f2c0 816f 	blt.w	801c150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801be72:	3301      	adds	r3, #1
 801be74:	f100 816c 	bmi.w	801c150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801be78:	429a      	cmp	r2, r3
 801be7a:	f2c0 8169 	blt.w	801c150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801be7e:	9b07      	ldr	r3, [sp, #28]
 801be80:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801be82:	9317      	str	r3, [sp, #92]	@ 0x5c
 801be84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801be86:	2b00      	cmp	r3, #0
 801be88:	f340 818e 	ble.w	801c1a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801be8c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be8e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801be92:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be96:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be98:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801be9c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801bea0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801bea2:	141b      	asrs	r3, r3, #16
 801bea4:	f100 81d1 	bmi.w	801c24a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801bea8:	f101 38ff 	add.w	r8, r1, #4294967295
 801beac:	4543      	cmp	r3, r8
 801beae:	f280 81cc 	bge.w	801c24a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801beb2:	f1bc 0f00 	cmp.w	ip, #0
 801beb6:	f2c0 81c8 	blt.w	801c24a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801beba:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bebe:	45c4      	cmp	ip, r8
 801bec0:	f280 81c3 	bge.w	801c24a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801bec4:	b209      	sxth	r1, r1
 801bec6:	fb0c 3301 	mla	r3, ip, r1, r3
 801beca:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801becc:	eb04 0803 	add.w	r8, r4, r3
 801bed0:	5ce3      	ldrb	r3, [r4, r3]
 801bed2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bed6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801beda:	2a00      	cmp	r2, #0
 801bedc:	f000 81aa 	beq.w	801c234 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801bee0:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bee4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bee8:	940b      	str	r4, [sp, #44]	@ 0x2c
 801beea:	0e24      	lsrs	r4, r4, #24
 801beec:	9412      	str	r4, [sp, #72]	@ 0x48
 801beee:	b178      	cbz	r0, 801bf10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801bef0:	eb08 0c01 	add.w	ip, r8, r1
 801bef4:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bef8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801befc:	9108      	str	r1, [sp, #32]
 801befe:	0e09      	lsrs	r1, r1, #24
 801bf00:	9110      	str	r1, [sp, #64]	@ 0x40
 801bf02:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bf06:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf0a:	910c      	str	r1, [sp, #48]	@ 0x30
 801bf0c:	0e09      	lsrs	r1, r1, #24
 801bf0e:	9113      	str	r1, [sp, #76]	@ 0x4c
 801bf10:	b292      	uxth	r2, r2
 801bf12:	b280      	uxth	r0, r0
 801bf14:	fb02 f900 	mul.w	r9, r2, r0
 801bf18:	0112      	lsls	r2, r2, #4
 801bf1a:	eba2 0809 	sub.w	r8, r2, r9
 801bf1e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bf20:	fa1f f888 	uxth.w	r8, r8
 801bf24:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bf28:	fb08 f101 	mul.w	r1, r8, r1
 801bf2c:	b280      	uxth	r0, r0
 801bf2e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bf32:	1a12      	subs	r2, r2, r0
 801bf34:	b292      	uxth	r2, r2
 801bf36:	fb02 110e 	mla	r1, r2, lr, r1
 801bf3a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bf3c:	fb00 1104 	mla	r1, r0, r4, r1
 801bf40:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf42:	fb09 1104 	mla	r1, r9, r4, r1
 801bf46:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bf4a:	2900      	cmp	r1, #0
 801bf4c:	f000 80f5 	beq.w	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bf50:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bf54:	d01b      	beq.n	801bf8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801bf56:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bf5a:	fb0e fa0a 	mul.w	sl, lr, sl
 801bf5e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf62:	fb0e fe03 	mul.w	lr, lr, r3
 801bf66:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bf6a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf6e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf72:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bf76:	4453      	add	r3, sl
 801bf78:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bf7c:	0a1b      	lsrs	r3, r3, #8
 801bf7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf82:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf86:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bf8a:	ea43 030c 	orr.w	r3, r3, ip
 801bf8e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf90:	2cff      	cmp	r4, #255	@ 0xff
 801bf92:	d021      	beq.n	801bfd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801bf94:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bf96:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bf9a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf9c:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfa0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bfa2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bfa6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfaa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bfac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfb0:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfb4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bfb8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bfbc:	44de      	add	lr, fp
 801bfbe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bfc2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bfc6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bfce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfd2:	ea4e 040a 	orr.w	r4, lr, sl
 801bfd6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bfd8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bfda:	2cff      	cmp	r4, #255	@ 0xff
 801bfdc:	d021      	beq.n	801c022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bfde:	9c08      	ldr	r4, [sp, #32]
 801bfe0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bfe4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bfe6:	fb04 fb0b 	mul.w	fp, r4, fp
 801bfea:	9c08      	ldr	r4, [sp, #32]
 801bfec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bff0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bff4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bff6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bffa:	fb04 fa0a 	mul.w	sl, r4, sl
 801bffe:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c002:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c006:	44de      	add	lr, fp
 801c008:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c00c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c014:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c018:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c01c:	ea4e 040a 	orr.w	r4, lr, sl
 801c020:	9408      	str	r4, [sp, #32]
 801c022:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c024:	2cff      	cmp	r4, #255	@ 0xff
 801c026:	d021      	beq.n	801c06c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c028:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c02a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c02e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c030:	fb04 fb0b 	mul.w	fp, r4, fp
 801c034:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c036:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c03a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c03e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c040:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c044:	fb04 fa0a 	mul.w	sl, r4, sl
 801c048:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c04c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c050:	44de      	add	lr, fp
 801c052:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c056:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c05a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c05e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c062:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c066:	ea4e 040a 	orr.w	r4, lr, sl
 801c06a:	940c      	str	r4, [sp, #48]	@ 0x30
 801c06c:	43c9      	mvns	r1, r1
 801c06e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c070:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c074:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c078:	fb08 fc0c 	mul.w	ip, r8, ip
 801c07c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c080:	9c08      	ldr	r4, [sp, #32]
 801c082:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c086:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c08a:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c08e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c090:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c094:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c096:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c09a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c09e:	fb08 f80e 	mul.w	r8, r8, lr
 801c0a2:	fb02 8303 	mla	r3, r2, r3, r8
 801c0a6:	9a08      	ldr	r2, [sp, #32]
 801c0a8:	f8b7 8000 	ldrh.w	r8, [r7]
 801c0ac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c0b0:	fb00 330a 	mla	r3, r0, sl, r3
 801c0b4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c0b6:	fa5f fe81 	uxtb.w	lr, r1
 801c0ba:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801c0be:	fb09 3900 	mla	r9, r9, r0, r3
 801c0c2:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c0c6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c0ca:	fb02 f20e 	mul.w	r2, r2, lr
 801c0ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0d2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c0d6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c0da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c0de:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c0e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c0e6:	ea4c 0c09 	orr.w	ip, ip, r9
 801c0ea:	fb00 f00e 	mul.w	r0, r0, lr
 801c0ee:	1c53      	adds	r3, r2, #1
 801c0f0:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c0f4:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c0f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c0fc:	4a62      	ldr	r2, [pc, #392]	@ (801c288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c0fe:	b2db      	uxtb	r3, r3
 801c100:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c104:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c108:	b2c9      	uxtb	r1, r1
 801c10a:	1c43      	adds	r3, r0, #1
 801c10c:	fb01 f10e 	mul.w	r1, r1, lr
 801c110:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c114:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c118:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c11c:	00db      	lsls	r3, r3, #3
 801c11e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c122:	4313      	orrs	r3, r2
 801c124:	1c4a      	adds	r2, r1, #1
 801c126:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c12a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c12e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c132:	ea4c 0c03 	orr.w	ip, ip, r3
 801c136:	f8a7 c000 	strh.w	ip, [r7]
 801c13a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c13c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c13e:	3702      	adds	r7, #2
 801c140:	441a      	add	r2, r3
 801c142:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c144:	9225      	str	r2, [sp, #148]	@ 0x94
 801c146:	441d      	add	r5, r3
 801c148:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c14a:	3b01      	subs	r3, #1
 801c14c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c14e:	e699      	b.n	801be84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c150:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c152:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c154:	441c      	add	r4, r3
 801c156:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c158:	9425      	str	r4, [sp, #148]	@ 0x94
 801c15a:	441d      	add	r5, r3
 801c15c:	9b07      	ldr	r3, [sp, #28]
 801c15e:	3b01      	subs	r3, #1
 801c160:	9307      	str	r3, [sp, #28]
 801c162:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c164:	3302      	adds	r3, #2
 801c166:	930a      	str	r3, [sp, #40]	@ 0x28
 801c168:	e66c      	b.n	801be44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c16a:	d024      	beq.n	801c1b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801c16c:	9b07      	ldr	r3, [sp, #28]
 801c16e:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801c170:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c172:	3b01      	subs	r3, #1
 801c174:	fb00 4003 	mla	r0, r0, r3, r4
 801c178:	1400      	asrs	r0, r0, #16
 801c17a:	f53f ae80 	bmi.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c17e:	3901      	subs	r1, #1
 801c180:	4288      	cmp	r0, r1
 801c182:	f6bf ae7c 	bge.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c186:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801c188:	fb01 5303 	mla	r3, r1, r3, r5
 801c18c:	141b      	asrs	r3, r3, #16
 801c18e:	f53f ae76 	bmi.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c192:	3a01      	subs	r2, #1
 801c194:	4293      	cmp	r3, r2
 801c196:	f6bf ae72 	bge.w	801be7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c19a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c19e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801c1a2:	f1bb 0f00 	cmp.w	fp, #0
 801c1a6:	dc71      	bgt.n	801c28c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c1a8:	9b07      	ldr	r3, [sp, #28]
 801c1aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c1ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c1b0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c1b4:	930a      	str	r3, [sp, #40]	@ 0x28
 801c1b6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c1b8:	2b00      	cmp	r3, #0
 801c1ba:	f340 81af 	ble.w	801c51c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c1be:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c1c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c1c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c1ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c1ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c1d2:	eef0 6a62 	vmov.f32	s13, s5
 801c1d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c1da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c1de:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c1e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c1e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c1ea:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801c1ee:	eef0 6a43 	vmov.f32	s13, s6
 801c1f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c1f6:	ee12 2a90 	vmov	r2, s5
 801c1fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c1fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c200:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c204:	fb92 f3f3 	sdiv	r3, r2, r3
 801c208:	ee13 2a10 	vmov	r2, s6
 801c20c:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c20e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c210:	ee16 5a90 	vmov	r5, s13
 801c214:	fb92 f3f3 	sdiv	r3, r2, r3
 801c218:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c21a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c21c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c21e:	3b01      	subs	r3, #1
 801c220:	9316      	str	r3, [sp, #88]	@ 0x58
 801c222:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c224:	bf08      	it	eq
 801c226:	4613      	moveq	r3, r2
 801c228:	eeb0 3a67 	vmov.f32	s6, s15
 801c22c:	9307      	str	r3, [sp, #28]
 801c22e:	eef0 2a47 	vmov.f32	s5, s14
 801c232:	e5f9      	b.n	801be28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c234:	2800      	cmp	r0, #0
 801c236:	f43f ae6b 	beq.w	801bf10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c23a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c23e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c242:	9108      	str	r1, [sp, #32]
 801c244:	0e09      	lsrs	r1, r1, #24
 801c246:	9110      	str	r1, [sp, #64]	@ 0x40
 801c248:	e662      	b.n	801bf10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c24a:	f113 0801 	adds.w	r8, r3, #1
 801c24e:	f53f af74 	bmi.w	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c252:	4541      	cmp	r1, r8
 801c254:	f6ff af71 	blt.w	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c258:	f11c 0801 	adds.w	r8, ip, #1
 801c25c:	f53f af6d 	bmi.w	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c260:	45c6      	cmp	lr, r8
 801c262:	f6ff af6a 	blt.w	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c266:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c26a:	b209      	sxth	r1, r1
 801c26c:	fa0f f38e 	sxth.w	r3, lr
 801c270:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c274:	9301      	str	r3, [sp, #4]
 801c276:	9100      	str	r1, [sp, #0]
 801c278:	4633      	mov	r3, r6
 801c27a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c27c:	4639      	mov	r1, r7
 801c27e:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801c280:	f7ff fc7a 	bl	801bb78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c284:	e759      	b.n	801c13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c286:	bf00      	nop
 801c288:	fffff800 	.word	0xfffff800
 801c28c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c28e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c290:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c294:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c296:	1427      	asrs	r7, r4, #16
 801c298:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c29c:	142b      	asrs	r3, r5, #16
 801c29e:	fb01 7303 	mla	r3, r1, r3, r7
 801c2a2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c2a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c2a8:	18e7      	adds	r7, r4, r3
 801c2aa:	5ce3      	ldrb	r3, [r4, r3]
 801c2ac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c2b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c2b4:	2a00      	cmp	r2, #0
 801c2b6:	f000 8127 	beq.w	801c508 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c2ba:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c2be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c2c2:	940d      	str	r4, [sp, #52]	@ 0x34
 801c2c4:	0e24      	lsrs	r4, r4, #24
 801c2c6:	9414      	str	r4, [sp, #80]	@ 0x50
 801c2c8:	b170      	cbz	r0, 801c2e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c2ca:	eb07 0e01 	add.w	lr, r7, r1
 801c2ce:	5c79      	ldrb	r1, [r7, r1]
 801c2d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c2d4:	9109      	str	r1, [sp, #36]	@ 0x24
 801c2d6:	0e09      	lsrs	r1, r1, #24
 801c2d8:	9111      	str	r1, [sp, #68]	@ 0x44
 801c2da:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c2de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c2e2:	910e      	str	r1, [sp, #56]	@ 0x38
 801c2e4:	0e09      	lsrs	r1, r1, #24
 801c2e6:	9115      	str	r1, [sp, #84]	@ 0x54
 801c2e8:	b292      	uxth	r2, r2
 801c2ea:	b280      	uxth	r0, r0
 801c2ec:	fb02 f800 	mul.w	r8, r2, r0
 801c2f0:	0112      	lsls	r2, r2, #4
 801c2f2:	eba2 0e08 	sub.w	lr, r2, r8
 801c2f6:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801c2fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c2fc:	fa1f fe8e 	uxth.w	lr, lr
 801c300:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c304:	fb0e f202 	mul.w	r2, lr, r2
 801c308:	b280      	uxth	r0, r0
 801c30a:	1a09      	subs	r1, r1, r0
 801c30c:	b289      	uxth	r1, r1
 801c30e:	fb01 220c 	mla	r2, r1, ip, r2
 801c312:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c314:	fb00 2204 	mla	r2, r0, r4, r2
 801c318:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c31a:	fb08 2204 	mla	r2, r8, r4, r2
 801c31e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c322:	2a00      	cmp	r2, #0
 801c324:	f000 80e5 	beq.w	801c4f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c328:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c32c:	d019      	beq.n	801c362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c32e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c332:	fb0c fa0a 	mul.w	sl, ip, sl
 801c336:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c33a:	fb0c fc03 	mul.w	ip, ip, r3
 801c33e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c342:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c346:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c34a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c34e:	4453      	add	r3, sl
 801c350:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c354:	0a1b      	lsrs	r3, r3, #8
 801c356:	0a3f      	lsrs	r7, r7, #8
 801c358:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c35c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c360:	433b      	orrs	r3, r7
 801c362:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c364:	2cff      	cmp	r4, #255	@ 0xff
 801c366:	d020      	beq.n	801c3aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c368:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c36a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c36e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c370:	4367      	muls	r7, r4
 801c372:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c374:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c378:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c37c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c37e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c382:	fb04 fa0a 	mul.w	sl, r4, sl
 801c386:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c38a:	44bc      	add	ip, r7
 801c38c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c390:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c394:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c398:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c39c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3a0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3a4:	ea4c 040a 	orr.w	r4, ip, sl
 801c3a8:	940d      	str	r4, [sp, #52]	@ 0x34
 801c3aa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3ac:	2cff      	cmp	r4, #255	@ 0xff
 801c3ae:	d020      	beq.n	801c3f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c3b0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c3b2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3b6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3b8:	4367      	muls	r7, r4
 801c3ba:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c3bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c3c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c3c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3ca:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3d2:	44bc      	add	ip, r7
 801c3d4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c3e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3e8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c3ec:	ea4c 040a 	orr.w	r4, ip, sl
 801c3f0:	9409      	str	r4, [sp, #36]	@ 0x24
 801c3f2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c3f4:	2cff      	cmp	r4, #255	@ 0xff
 801c3f6:	d020      	beq.n	801c43a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c3f8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c3fa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3fe:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c400:	4367      	muls	r7, r4
 801c402:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c404:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c408:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c40c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c40e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c412:	fb04 fa0a 	mul.w	sl, r4, sl
 801c416:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c41a:	44bc      	add	ip, r7
 801c41c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c420:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c42c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c430:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c434:	ea4c 040a 	orr.w	r4, ip, sl
 801c438:	940e      	str	r4, [sp, #56]	@ 0x38
 801c43a:	43d2      	mvns	r2, r2
 801c43c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c43e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c442:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c446:	fb0e f707 	mul.w	r7, lr, r7
 801c44a:	fb01 770c 	mla	r7, r1, ip, r7
 801c44e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c450:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c454:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c458:	fb00 770c 	mla	r7, r0, ip, r7
 801c45c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c45e:	b2d2      	uxtb	r2, r2
 801c460:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c464:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c466:	fb08 770c 	mla	r7, r8, ip, r7
 801c46a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c46e:	fb0e fe0c 	mul.w	lr, lr, ip
 801c472:	fb01 e303 	mla	r3, r1, r3, lr
 801c476:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c478:	0a3f      	lsrs	r7, r7, #8
 801c47a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c47e:	fb00 330a 	mla	r3, r0, sl, r3
 801c482:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c484:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c488:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c48c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c490:	f8b9 3000 	ldrh.w	r3, [r9]
 801c494:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c498:	1218      	asrs	r0, r3, #8
 801c49a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c49e:	4350      	muls	r0, r2
 801c4a0:	10d9      	asrs	r1, r3, #3
 801c4a2:	00db      	lsls	r3, r3, #3
 801c4a4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c4a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c4ac:	b2db      	uxtb	r3, r3
 801c4ae:	ea47 070c 	orr.w	r7, r7, ip
 801c4b2:	4351      	muls	r1, r2
 801c4b4:	4353      	muls	r3, r2
 801c4b6:	1c42      	adds	r2, r0, #1
 801c4b8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c4bc:	0c3a      	lsrs	r2, r7, #16
 801c4be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c4c2:	4a18      	ldr	r2, [pc, #96]	@ (801c524 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c4c4:	b2c0      	uxtb	r0, r0
 801c4c6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c4ca:	1c4a      	adds	r2, r1, #1
 801c4cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c4d0:	0a3a      	lsrs	r2, r7, #8
 801c4d2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c4d6:	00c9      	lsls	r1, r1, #3
 801c4d8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c4dc:	4301      	orrs	r1, r0
 801c4de:	1c58      	adds	r0, r3, #1
 801c4e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c4e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c4e8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c4ec:	4308      	orrs	r0, r1
 801c4ee:	f8a9 0000 	strh.w	r0, [r9]
 801c4f2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4f4:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c4f6:	f109 0902 	add.w	r9, r9, #2
 801c4fa:	441a      	add	r2, r3
 801c4fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c4fe:	9225      	str	r2, [sp, #148]	@ 0x94
 801c500:	441d      	add	r5, r3
 801c502:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c506:	e64c      	b.n	801c1a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c508:	2800      	cmp	r0, #0
 801c50a:	f43f aeed 	beq.w	801c2e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c50e:	5c79      	ldrb	r1, [r7, r1]
 801c510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c514:	9109      	str	r1, [sp, #36]	@ 0x24
 801c516:	0e09      	lsrs	r1, r1, #24
 801c518:	9111      	str	r1, [sp, #68]	@ 0x44
 801c51a:	e6e5      	b.n	801c2e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c51c:	b01b      	add	sp, #108	@ 0x6c
 801c51e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c522:	bf00      	nop
 801c524:	fffff800 	.word	0xfffff800

0801c528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c52c:	b085      	sub	sp, #20
 801c52e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c532:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c536:	fb00 7406 	mla	r4, r0, r6, r7
 801c53a:	2800      	cmp	r0, #0
 801c53c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c540:	9103      	str	r1, [sp, #12]
 801c542:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c546:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c54a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c54e:	9501      	str	r5, [sp, #4]
 801c550:	eb03 0904 	add.w	r9, r3, r4
 801c554:	f2c0 8150 	blt.w	801c7f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c558:	4583      	cmp	fp, r0
 801c55a:	f340 814d 	ble.w	801c7f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c55e:	2f00      	cmp	r7, #0
 801c560:	f2c0 8146 	blt.w	801c7f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c564:	42be      	cmp	r6, r7
 801c566:	f340 8143 	ble.w	801c7f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c56a:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c56e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c572:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c576:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c57a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c57e:	4355      	muls	r5, r2
 801c580:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c584:	fb0c f203 	mul.w	r2, ip, r3
 801c588:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c58c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c590:	441d      	add	r5, r3
 801c592:	f102 0320 	add.w	r3, r2, #32
 801c596:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c59a:	0a1b      	lsrs	r3, r3, #8
 801c59c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c5a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c5a4:	431c      	orrs	r4, r3
 801c5a6:	1c7b      	adds	r3, r7, #1
 801c5a8:	f100 812b 	bmi.w	801c802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c5ac:	429e      	cmp	r6, r3
 801c5ae:	f340 8128 	ble.w	801c802 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c5b2:	2900      	cmp	r1, #0
 801c5b4:	f000 8128 	beq.w	801c808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c5b8:	9a01      	ldr	r2, [sp, #4]
 801c5ba:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c5be:	8855      	ldrh	r5, [r2, #2]
 801c5c0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c5c4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c5c8:	fb08 f802 	mul.w	r8, r8, r2
 801c5cc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c5d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c5d4:	435d      	muls	r5, r3
 801c5d6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c5da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c5de:	44d0      	add	r8, sl
 801c5e0:	f105 0a20 	add.w	sl, r5, #32
 801c5e4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c5e8:	0a2d      	lsrs	r5, r5, #8
 801c5ea:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c5ee:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c5f2:	432a      	orrs	r2, r5
 801c5f4:	3001      	adds	r0, #1
 801c5f6:	f100 810d 	bmi.w	801c814 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c5fa:	4583      	cmp	fp, r0
 801c5fc:	f340 810a 	ble.w	801c814 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c600:	f1be 0f00 	cmp.w	lr, #0
 801c604:	f000 810b 	beq.w	801c81e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c608:	2f00      	cmp	r7, #0
 801c60a:	f2c0 8100 	blt.w	801c80e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c60e:	42be      	cmp	r6, r7
 801c610:	f340 80fd 	ble.w	801c80e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c614:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c618:	9801      	ldr	r0, [sp, #4]
 801c61a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c61e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c622:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c626:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c62a:	fb0a fa00 	mul.w	sl, sl, r0
 801c62e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c632:	fb05 f808 	mul.w	r8, r5, r8
 801c636:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c63a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c63e:	4482      	add	sl, r0
 801c640:	f108 0020 	add.w	r0, r8, #32
 801c644:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c648:	0a00      	lsrs	r0, r0, #8
 801c64a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c64e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c652:	ea4b 0b00 	orr.w	fp, fp, r0
 801c656:	3701      	adds	r7, #1
 801c658:	f100 80e6 	bmi.w	801c828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c65c:	42be      	cmp	r6, r7
 801c65e:	f340 80e3 	ble.w	801c828 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c662:	2900      	cmp	r1, #0
 801c664:	f000 80e3 	beq.w	801c82e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c668:	9801      	ldr	r0, [sp, #4]
 801c66a:	3601      	adds	r6, #1
 801c66c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c670:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c674:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c678:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c67c:	fb07 f800 	mul.w	r8, r7, r0
 801c680:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c684:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c688:	fb09 f906 	mul.w	r9, r9, r6
 801c68c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c690:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c694:	44d1      	add	r9, sl
 801c696:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c69a:	f108 0020 	add.w	r0, r8, #32
 801c69e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c6a2:	0a00      	lsrs	r0, r0, #8
 801c6a4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c6a8:	4330      	orrs	r0, r6
 801c6aa:	b28e      	uxth	r6, r1
 801c6ac:	fa1f f98e 	uxth.w	r9, lr
 801c6b0:	fb06 f809 	mul.w	r8, r6, r9
 801c6b4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c6b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c6bc:	0136      	lsls	r6, r6, #4
 801c6be:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c6c2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c6c6:	9601      	str	r6, [sp, #4]
 801c6c8:	ea4a 0404 	orr.w	r4, sl, r4
 801c6cc:	fa1f f689 	uxth.w	r6, r9
 801c6d0:	9602      	str	r6, [sp, #8]
 801c6d2:	4626      	mov	r6, r4
 801c6d4:	fb11 f90e 	smulbb	r9, r1, lr
 801c6d8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c6dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c6e0:	f1ce 0410 	rsb	r4, lr, #16
 801c6e4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c6e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c6ec:	1a64      	subs	r4, r4, r1
 801c6ee:	ea4a 0202 	orr.w	r2, sl, r2
 801c6f2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c6f6:	434a      	muls	r2, r1
 801c6f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c6fc:	fb04 2406 	mla	r4, r4, r6, r2
 801c700:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c704:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c708:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c70c:	ea4a 0000 	orr.w	r0, sl, r0
 801c710:	fb09 4200 	mla	r2, r9, r0, r4
 801c714:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c718:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c71c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c720:	ea44 0b0b 	orr.w	fp, r4, fp
 801c724:	9c01      	ldr	r4, [sp, #4]
 801c726:	9e02      	ldr	r6, [sp, #8]
 801c728:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c72c:	1ba4      	subs	r4, r4, r6
 801c72e:	9e01      	ldr	r6, [sp, #4]
 801c730:	b2a4      	uxth	r4, r4
 801c732:	eba6 0608 	sub.w	r6, r6, r8
 801c736:	b2b6      	uxth	r6, r6
 801c738:	4373      	muls	r3, r6
 801c73a:	fb0c 3304 	mla	r3, ip, r4, r3
 801c73e:	9c02      	ldr	r4, [sp, #8]
 801c740:	9903      	ldr	r1, [sp, #12]
 801c742:	fb04 3505 	mla	r5, r4, r5, r3
 801c746:	fb08 5707 	mla	r7, r8, r7, r5
 801c74a:	8808      	ldrh	r0, [r1, #0]
 801c74c:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c750:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c754:	b289      	uxth	r1, r1
 801c756:	434f      	muls	r7, r1
 801c758:	1c7b      	adds	r3, r7, #1
 801c75a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c75e:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c762:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c766:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c76a:	1203      	asrs	r3, r0, #8
 801c76c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c770:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c774:	b2ff      	uxtb	r7, r7
 801c776:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c77a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c77e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c782:	fb13 f307 	smulbb	r3, r3, r7
 801c786:	ea42 0e0e 	orr.w	lr, r2, lr
 801c78a:	fa1f f28e 	uxth.w	r2, lr
 801c78e:	1215      	asrs	r5, r2, #8
 801c790:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c794:	fb05 3501 	mla	r5, r5, r1, r3
 801c798:	10c3      	asrs	r3, r0, #3
 801c79a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c79e:	fb13 f307 	smulbb	r3, r3, r7
 801c7a2:	10d4      	asrs	r4, r2, #3
 801c7a4:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c7a8:	fb04 3401 	mla	r4, r4, r1, r3
 801c7ac:	00c3      	lsls	r3, r0, #3
 801c7ae:	b2db      	uxtb	r3, r3
 801c7b0:	fb13 f307 	smulbb	r3, r3, r7
 801c7b4:	00d2      	lsls	r2, r2, #3
 801c7b6:	b2d2      	uxtb	r2, r2
 801c7b8:	fb02 3101 	mla	r1, r2, r1, r3
 801c7bc:	b2ad      	uxth	r5, r5
 801c7be:	b289      	uxth	r1, r1
 801c7c0:	b2a4      	uxth	r4, r4
 801c7c2:	1c6b      	adds	r3, r5, #1
 801c7c4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c7c8:	1c62      	adds	r2, r4, #1
 801c7ca:	1c4b      	adds	r3, r1, #1
 801c7cc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c7d0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c7d4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c7d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c7dc:	0964      	lsrs	r4, r4, #5
 801c7de:	432b      	orrs	r3, r5
 801c7e0:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c7e4:	9a03      	ldr	r2, [sp, #12]
 801c7e6:	4323      	orrs	r3, r4
 801c7e8:	8013      	strh	r3, [r2, #0]
 801c7ea:	b005      	add	sp, #20
 801c7ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7f0:	f04f 0c00 	mov.w	ip, #0
 801c7f4:	4664      	mov	r4, ip
 801c7f6:	e6d6      	b.n	801c5a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c7f8:	2300      	movs	r3, #0
 801c7fa:	469c      	mov	ip, r3
 801c7fc:	461a      	mov	r2, r3
 801c7fe:	461c      	mov	r4, r3
 801c800:	e6f8      	b.n	801c5f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c802:	2300      	movs	r3, #0
 801c804:	461a      	mov	r2, r3
 801c806:	e6f5      	b.n	801c5f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c808:	460b      	mov	r3, r1
 801c80a:	460a      	mov	r2, r1
 801c80c:	e6f2      	b.n	801c5f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c80e:	2500      	movs	r5, #0
 801c810:	46ab      	mov	fp, r5
 801c812:	e720      	b.n	801c656 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c814:	2700      	movs	r7, #0
 801c816:	463d      	mov	r5, r7
 801c818:	4638      	mov	r0, r7
 801c81a:	46bb      	mov	fp, r7
 801c81c:	e745      	b.n	801c6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c81e:	4677      	mov	r7, lr
 801c820:	4675      	mov	r5, lr
 801c822:	4670      	mov	r0, lr
 801c824:	46f3      	mov	fp, lr
 801c826:	e740      	b.n	801c6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c828:	2700      	movs	r7, #0
 801c82a:	4638      	mov	r0, r7
 801c82c:	e73d      	b.n	801c6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c82e:	460f      	mov	r7, r1
 801c830:	4608      	mov	r0, r1
 801c832:	e73a      	b.n	801c6aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c838:	b097      	sub	sp, #92	@ 0x5c
 801c83a:	9214      	str	r2, [sp, #80]	@ 0x50
 801c83c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c83e:	9015      	str	r0, [sp, #84]	@ 0x54
 801c840:	9308      	str	r3, [sp, #32]
 801c842:	6850      	ldr	r0, [r2, #4]
 801c844:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c848:	9111      	str	r1, [sp, #68]	@ 0x44
 801c84a:	9312      	str	r3, [sp, #72]	@ 0x48
 801c84c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c850:	fb00 1303 	mla	r3, r0, r3, r1
 801c854:	6812      	ldr	r2, [r2, #0]
 801c856:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c85a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c85c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c85e:	681b      	ldr	r3, [r3, #0]
 801c860:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c862:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c864:	685b      	ldr	r3, [r3, #4]
 801c866:	930c      	str	r3, [sp, #48]	@ 0x30
 801c868:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c86c:	930a      	str	r3, [sp, #40]	@ 0x28
 801c86e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c870:	2b00      	cmp	r3, #0
 801c872:	dc03      	bgt.n	801c87c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c874:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c876:	2b00      	cmp	r3, #0
 801c878:	f340 83cb 	ble.w	801d012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c87c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c87e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c882:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c886:	1e48      	subs	r0, r1, #1
 801c888:	1e55      	subs	r5, r2, #1
 801c88a:	9b08      	ldr	r3, [sp, #32]
 801c88c:	2b00      	cmp	r3, #0
 801c88e:	f340 81a3 	ble.w	801cbd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c892:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c894:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c896:	1436      	asrs	r6, r6, #16
 801c898:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c89c:	d406      	bmi.n	801c8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c89e:	4286      	cmp	r6, r0
 801c8a0:	da04      	bge.n	801c8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c8a2:	2b00      	cmp	r3, #0
 801c8a4:	db02      	blt.n	801c8ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c8a6:	42ab      	cmp	r3, r5
 801c8a8:	f2c0 8197 	blt.w	801cbda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c8ac:	3601      	adds	r6, #1
 801c8ae:	f100 8184 	bmi.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c8b2:	42b1      	cmp	r1, r6
 801c8b4:	f2c0 8181 	blt.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c8b8:	3301      	adds	r3, #1
 801c8ba:	f100 817e 	bmi.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c8be:	429a      	cmp	r2, r3
 801c8c0:	f2c0 817b 	blt.w	801cbba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c8c4:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c8c8:	9b08      	ldr	r3, [sp, #32]
 801c8ca:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c8cc:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c8ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c8d0:	2b00      	cmp	r3, #0
 801c8d2:	f340 81a4 	ble.w	801cc1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c8d6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c8d8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c8da:	1418      	asrs	r0, r3, #16
 801c8dc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c8de:	142d      	asrs	r5, r5, #16
 801c8e0:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c8e4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c8e6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c8ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c8ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c8f0:	f100 81f8 	bmi.w	801cce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8f4:	f102 3eff 	add.w	lr, r2, #4294967295
 801c8f8:	4575      	cmp	r5, lr
 801c8fa:	f280 81f3 	bge.w	801cce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8fe:	2800      	cmp	r0, #0
 801c900:	f2c0 81f0 	blt.w	801cce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c904:	f103 3eff 	add.w	lr, r3, #4294967295
 801c908:	4570      	cmp	r0, lr
 801c90a:	f280 81eb 	bge.w	801cce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c90e:	b212      	sxth	r2, r2
 801c910:	fb00 5002 	mla	r0, r0, r2, r5
 801c914:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c916:	fa1f fe81 	uxth.w	lr, r1
 801c91a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c91e:	eb03 0a00 	add.w	sl, r3, r0
 801c922:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c926:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c92a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c92e:	b29b      	uxth	r3, r3
 801c930:	f1bc 0f00 	cmp.w	ip, #0
 801c934:	f000 81b9 	beq.w	801ccaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c938:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c93c:	eb0a 0b02 	add.w	fp, sl, r2
 801c940:	fa1f fa8c 	uxth.w	sl, ip
 801c944:	fb0a fe0e 	mul.w	lr, sl, lr
 801c948:	eba5 050e 	sub.w	r5, r5, lr
 801c94c:	b2ad      	uxth	r5, r5
 801c94e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c952:	fb08 f505 	mul.w	r5, r8, r5
 801c956:	fa1f fa8a 	uxth.w	sl, sl
 801c95a:	eba3 030a 	sub.w	r3, r3, sl
 801c95e:	b29b      	uxth	r3, r3
 801c960:	940d      	str	r4, [sp, #52]	@ 0x34
 801c962:	fb09 5303 	mla	r3, r9, r3, r5
 801c966:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c96a:	940e      	str	r4, [sp, #56]	@ 0x38
 801c96c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c96e:	fb0a 3304 	mla	r3, sl, r4, r3
 801c972:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c974:	fb0e 3304 	mla	r3, lr, r4, r3
 801c978:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c97c:	2b00      	cmp	r3, #0
 801c97e:	f000 810f 	beq.w	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c982:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c984:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c988:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c98c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c990:	f000 8190 	beq.w	801ccb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c994:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c998:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c99c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c9a0:	fb09 f000 	mul.w	r0, r9, r0
 801c9a4:	fb0a fe0e 	mul.w	lr, sl, lr
 801c9a8:	f100 0b20 	add.w	fp, r0, #32
 801c9ac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c9b0:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c9b4:	44ce      	add	lr, r9
 801c9b6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c9ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c9be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c9c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c9c6:	ea4e 0909 	orr.w	r9, lr, r9
 801c9ca:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c9ce:	8868      	ldrh	r0, [r5, #2]
 801c9d0:	d019      	beq.n	801ca06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c9d2:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c9d6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c9da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c9de:	fb08 f800 	mul.w	r8, r8, r0
 801c9e2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c9e6:	f108 0b20 	add.w	fp, r8, #32
 801c9ea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c9ee:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c9f2:	4486      	add	lr, r0
 801c9f4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c9f8:	0a00      	lsrs	r0, r0, #8
 801c9fa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c9fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca02:	ea4e 0000 	orr.w	r0, lr, r0
 801ca06:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ca0a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca0e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ca12:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ca16:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca1a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ca1e:	ea4e 0909 	orr.w	r9, lr, r9
 801ca22:	ea4a 0000 	orr.w	r0, sl, r0
 801ca26:	f1bc 0f00 	cmp.w	ip, #0
 801ca2a:	f000 8145 	beq.w	801ccb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801ca2e:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801ca32:	3a01      	subs	r2, #1
 801ca34:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ca36:	0052      	lsls	r2, r2, #1
 801ca38:	3202      	adds	r2, #2
 801ca3a:	2cff      	cmp	r4, #255	@ 0xff
 801ca3c:	eb05 0e02 	add.w	lr, r5, r2
 801ca40:	5aaa      	ldrh	r2, [r5, r2]
 801ca42:	d018      	beq.n	801ca76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801ca44:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801ca48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca4c:	fb04 fa02 	mul.w	sl, r4, r2
 801ca50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca54:	fb08 f805 	mul.w	r8, r8, r5
 801ca58:	f10a 0520 	add.w	r5, sl, #32
 801ca5c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ca60:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ca64:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ca68:	4442      	add	r2, r8
 801ca6a:	0a2d      	lsrs	r5, r5, #8
 801ca6c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ca70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ca74:	432a      	orrs	r2, r5
 801ca76:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ca78:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801ca7c:	2cff      	cmp	r4, #255	@ 0xff
 801ca7e:	d01a      	beq.n	801cab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ca80:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801ca84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ca88:	fb04 fa05 	mul.w	sl, r4, r5
 801ca8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca90:	fb08 f80e 	mul.w	r8, r8, lr
 801ca94:	f10a 0e20 	add.w	lr, sl, #32
 801ca98:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801ca9c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801caa0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801caa4:	4445      	add	r5, r8
 801caa6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801caaa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801caae:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801cab2:	ea45 050e 	orr.w	r5, r5, lr
 801cab6:	fb1c fe01 	smulbb	lr, ip, r1
 801caba:	f1cc 0810 	rsb	r8, ip, #16
 801cabe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cac2:	eba8 0801 	sub.w	r8, r8, r1
 801cac6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801caca:	4341      	muls	r1, r0
 801cacc:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cad0:	fb09 1108 	mla	r1, r9, r8, r1
 801cad4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cad8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cadc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cae0:	ea4a 0202 	orr.w	r2, sl, r2
 801cae4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cae8:	fb0c 1102 	mla	r1, ip, r2, r1
 801caec:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801caf0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801caf4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801caf8:	ea4b 0505 	orr.w	r5, fp, r5
 801cafc:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cb00:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cb04:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cb08:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cb0c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cb10:	ea42 0e0e 	orr.w	lr, r2, lr
 801cb14:	fa1f f28e 	uxth.w	r2, lr
 801cb18:	2bff      	cmp	r3, #255	@ 0xff
 801cb1a:	d103      	bne.n	801cb24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801cb1c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cb1e:	29ff      	cmp	r1, #255	@ 0xff
 801cb20:	f000 80de 	beq.w	801cce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801cb24:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801cb26:	8838      	ldrh	r0, [r7, #0]
 801cb28:	434b      	muls	r3, r1
 801cb2a:	f103 0c01 	add.w	ip, r3, #1
 801cb2e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801cb32:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cb36:	fa5f fc83 	uxtb.w	ip, r3
 801cb3a:	1203      	asrs	r3, r0, #8
 801cb3c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801cb40:	fb13 f30c 	smulbb	r3, r3, ip
 801cb44:	1215      	asrs	r5, r2, #8
 801cb46:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cb4a:	fb05 3501 	mla	r5, r5, r1, r3
 801cb4e:	10c3      	asrs	r3, r0, #3
 801cb50:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cb54:	fb13 f30c 	smulbb	r3, r3, ip
 801cb58:	10d1      	asrs	r1, r2, #3
 801cb5a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cb5c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cb60:	fb01 3104 	mla	r1, r1, r4, r3
 801cb64:	00c3      	lsls	r3, r0, #3
 801cb66:	b2db      	uxtb	r3, r3
 801cb68:	fb13 f30c 	smulbb	r3, r3, ip
 801cb6c:	00d2      	lsls	r2, r2, #3
 801cb6e:	b2d2      	uxtb	r2, r2
 801cb70:	fb02 3304 	mla	r3, r2, r4, r3
 801cb74:	b2ad      	uxth	r5, r5
 801cb76:	b29a      	uxth	r2, r3
 801cb78:	1c6b      	adds	r3, r5, #1
 801cb7a:	b289      	uxth	r1, r1
 801cb7c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cb80:	1c53      	adds	r3, r2, #1
 801cb82:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb86:	1c4a      	adds	r2, r1, #1
 801cb88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb8c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cb90:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cb94:	0949      	lsrs	r1, r1, #5
 801cb96:	432b      	orrs	r3, r5
 801cb98:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cb9c:	430b      	orrs	r3, r1
 801cb9e:	803b      	strh	r3, [r7, #0]
 801cba0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cba2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cba4:	3702      	adds	r7, #2
 801cba6:	4413      	add	r3, r2
 801cba8:	9321      	str	r3, [sp, #132]	@ 0x84
 801cbaa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cbac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbae:	441a      	add	r2, r3
 801cbb0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cbb2:	9222      	str	r2, [sp, #136]	@ 0x88
 801cbb4:	3b01      	subs	r3, #1
 801cbb6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cbb8:	e689      	b.n	801c8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cbba:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cbbc:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801cbbe:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801cbc0:	4433      	add	r3, r6
 801cbc2:	9321      	str	r3, [sp, #132]	@ 0x84
 801cbc4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cbc6:	441c      	add	r4, r3
 801cbc8:	9b08      	ldr	r3, [sp, #32]
 801cbca:	9422      	str	r4, [sp, #136]	@ 0x88
 801cbcc:	3b01      	subs	r3, #1
 801cbce:	9308      	str	r3, [sp, #32]
 801cbd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cbd2:	3302      	adds	r3, #2
 801cbd4:	9309      	str	r3, [sp, #36]	@ 0x24
 801cbd6:	e658      	b.n	801c88a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cbd8:	d028      	beq.n	801cc2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cbda:	9b08      	ldr	r3, [sp, #32]
 801cbdc:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801cbde:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801cbe0:	3b01      	subs	r3, #1
 801cbe2:	fb00 5003 	mla	r0, r0, r3, r5
 801cbe6:	1400      	asrs	r0, r0, #16
 801cbe8:	f53f ae6c 	bmi.w	801c8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cbec:	3901      	subs	r1, #1
 801cbee:	4288      	cmp	r0, r1
 801cbf0:	f6bf ae68 	bge.w	801c8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cbf4:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801cbf6:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801cbf8:	fb01 0303 	mla	r3, r1, r3, r0
 801cbfc:	141b      	asrs	r3, r3, #16
 801cbfe:	f53f ae61 	bmi.w	801c8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc02:	3a01      	subs	r2, #1
 801cc04:	4293      	cmp	r3, r2
 801cc06:	f6bf ae5d 	bge.w	801c8c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc0a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cc0e:	9b08      	ldr	r3, [sp, #32]
 801cc10:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801cc14:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cc16:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cc18:	2b00      	cmp	r3, #0
 801cc1a:	f300 8082 	bgt.w	801cd22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cc1e:	9b08      	ldr	r3, [sp, #32]
 801cc20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cc24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cc26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cc2a:	9309      	str	r3, [sp, #36]	@ 0x24
 801cc2c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cc2e:	2b00      	cmp	r3, #0
 801cc30:	f340 81ef 	ble.w	801d012 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cc34:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cc38:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cc40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc48:	eef0 6a62 	vmov.f32	s13, s5
 801cc4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cc54:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cc58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cc60:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801cc64:	eef0 6a43 	vmov.f32	s13, s6
 801cc68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc6c:	ee12 2a90 	vmov	r2, s5
 801cc70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cc74:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc7e:	ee13 2a10 	vmov	r2, s6
 801cc82:	9323      	str	r3, [sp, #140]	@ 0x8c
 801cc84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc86:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801cc8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc8e:	9324      	str	r3, [sp, #144]	@ 0x90
 801cc90:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801cc92:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cc94:	3b01      	subs	r3, #1
 801cc96:	9311      	str	r3, [sp, #68]	@ 0x44
 801cc98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc9a:	bf08      	it	eq
 801cc9c:	4613      	moveq	r3, r2
 801cc9e:	eeb0 3a67 	vmov.f32	s6, s15
 801cca2:	9308      	str	r3, [sp, #32]
 801cca4:	eef0 2a47 	vmov.f32	s5, s14
 801cca8:	e5e1      	b.n	801c86e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ccaa:	fb08 f505 	mul.w	r5, r8, r5
 801ccae:	fb09 5303 	mla	r3, r9, r3, r5
 801ccb2:	e661      	b.n	801c978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801ccb4:	4681      	mov	r9, r0
 801ccb6:	e688      	b.n	801c9ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ccb8:	f1c1 0210 	rsb	r2, r1, #16
 801ccbc:	4341      	muls	r1, r0
 801ccbe:	fb09 1902 	mla	r9, r9, r2, r1
 801ccc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ccc6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801ccca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ccce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ccd2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ccd6:	ea42 0909 	orr.w	r9, r2, r9
 801ccda:	fa1f f289 	uxth.w	r2, r9
 801ccde:	e71b      	b.n	801cb18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cce0:	803a      	strh	r2, [r7, #0]
 801cce2:	e75d      	b.n	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cce4:	f115 0e01 	adds.w	lr, r5, #1
 801cce8:	f53f af5a 	bmi.w	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccec:	4572      	cmp	r2, lr
 801ccee:	f6ff af57 	blt.w	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccf2:	f110 0e01 	adds.w	lr, r0, #1
 801ccf6:	f53f af53 	bmi.w	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccfa:	4573      	cmp	r3, lr
 801ccfc:	f6ff af50 	blt.w	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cd00:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801cd02:	b21b      	sxth	r3, r3
 801cd04:	b212      	sxth	r2, r2
 801cd06:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cd0a:	9301      	str	r3, [sp, #4]
 801cd0c:	9200      	str	r2, [sp, #0]
 801cd0e:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cd12:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801cd16:	9502      	str	r5, [sp, #8]
 801cd18:	4639      	mov	r1, r7
 801cd1a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801cd1c:	f7ff fc04 	bl	801c528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cd20:	e73e      	b.n	801cba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cd22:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cd24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cd28:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cd2a:	fa1f fc82 	uxth.w	ip, r2
 801cd2e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cd32:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cd34:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cd38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cd3c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cd3e:	141f      	asrs	r7, r3, #16
 801cd40:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cd42:	141b      	asrs	r3, r3, #16
 801cd44:	fb01 3707 	mla	r7, r1, r7, r3
 801cd48:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cd4a:	eb03 0a07 	add.w	sl, r3, r7
 801cd4e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cd52:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801cd56:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cd5a:	b29b      	uxth	r3, r3
 801cd5c:	2d00      	cmp	r5, #0
 801cd5e:	f000 813d 	beq.w	801cfdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cd62:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cd66:	eb0a 0b01 	add.w	fp, sl, r1
 801cd6a:	fa1f fa85 	uxth.w	sl, r5
 801cd6e:	fb0a fc0c 	mul.w	ip, sl, ip
 801cd72:	eba0 000c 	sub.w	r0, r0, ip
 801cd76:	b280      	uxth	r0, r0
 801cd78:	fb08 f000 	mul.w	r0, r8, r0
 801cd7c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cd80:	fa1f fa8a 	uxth.w	sl, sl
 801cd84:	eba3 030a 	sub.w	r3, r3, sl
 801cd88:	b29b      	uxth	r3, r3
 801cd8a:	fb09 0303 	mla	r3, r9, r3, r0
 801cd8e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801cd90:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801cd92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd96:	fb0a 3300 	mla	r3, sl, r0, r3
 801cd9a:	fb0c 3304 	mla	r3, ip, r4, r3
 801cd9e:	9410      	str	r4, [sp, #64]	@ 0x40
 801cda0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cda4:	2b00      	cmp	r3, #0
 801cda6:	f000 810b 	beq.w	801cfc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cdaa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cdac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cdae:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801cdb2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cdb6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cdba:	f000 8114 	beq.w	801cfe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cdbe:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801cdc2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cdc6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cdca:	fb09 f707 	mul.w	r7, r9, r7
 801cdce:	fb0a fc0c 	mul.w	ip, sl, ip
 801cdd2:	f107 0b20 	add.w	fp, r7, #32
 801cdd6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cdda:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801cdde:	44cc      	add	ip, r9
 801cde0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cde4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cde8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cdec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cdf0:	ea4c 0909 	orr.w	r9, ip, r9
 801cdf4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801cdf8:	8847      	ldrh	r7, [r0, #2]
 801cdfa:	d019      	beq.n	801ce30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cdfc:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801ce00:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ce04:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ce08:	fb08 f807 	mul.w	r8, r8, r7
 801ce0c:	fb0a fc0c 	mul.w	ip, sl, ip
 801ce10:	f108 0b20 	add.w	fp, r8, #32
 801ce14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801ce18:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ce1c:	44bc      	add	ip, r7
 801ce1e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ce22:	0a3f      	lsrs	r7, r7, #8
 801ce24:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ce28:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ce2c:	ea4c 0707 	orr.w	r7, ip, r7
 801ce30:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ce34:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ce38:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ce3c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ce40:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ce44:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ce48:	ea4c 0909 	orr.w	r9, ip, r9
 801ce4c:	ea4a 0707 	orr.w	r7, sl, r7
 801ce50:	2d00      	cmp	r5, #0
 801ce52:	f000 80ca 	beq.w	801cfea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801ce56:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ce5a:	3901      	subs	r1, #1
 801ce5c:	0049      	lsls	r1, r1, #1
 801ce5e:	3102      	adds	r1, #2
 801ce60:	eb00 0c01 	add.w	ip, r0, r1
 801ce64:	5a41      	ldrh	r1, [r0, r1]
 801ce66:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801ce68:	28ff      	cmp	r0, #255	@ 0xff
 801ce6a:	d019      	beq.n	801cea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801ce6c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ce6e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801ce72:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce76:	fb04 fa01 	mul.w	sl, r4, r1
 801ce7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce7e:	fb08 f800 	mul.w	r8, r8, r0
 801ce82:	f10a 0020 	add.w	r0, sl, #32
 801ce86:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ce8a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ce8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ce92:	4441      	add	r1, r8
 801ce94:	0a00      	lsrs	r0, r0, #8
 801ce96:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ce9a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ce9e:	4301      	orrs	r1, r0
 801cea0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cea2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cea6:	2cff      	cmp	r4, #255	@ 0xff
 801cea8:	d01a      	beq.n	801cee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801ceaa:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ceae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ceb2:	fb04 fa00 	mul.w	sl, r4, r0
 801ceb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ceba:	fb08 f80c 	mul.w	r8, r8, ip
 801cebe:	f10a 0c20 	add.w	ip, sl, #32
 801cec2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cec6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ceca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cece:	4440      	add	r0, r8
 801ced0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ced4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801ced8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801cedc:	ea40 000c 	orr.w	r0, r0, ip
 801cee0:	fb15 fc02 	smulbb	ip, r5, r2
 801cee4:	f1c5 0810 	rsb	r8, r5, #16
 801cee8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ceec:	eba8 0802 	sub.w	r8, r8, r2
 801cef0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cef4:	437a      	muls	r2, r7
 801cef6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cefa:	fb09 2208 	mla	r2, r9, r8, r2
 801cefe:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cf02:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cf06:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cf0a:	ea4a 0101 	orr.w	r1, sl, r1
 801cf0e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cf12:	fb05 2201 	mla	r2, r5, r1, r2
 801cf16:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cf1a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cf1e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cf22:	ea4b 0000 	orr.w	r0, fp, r0
 801cf26:	fb0c 2200 	mla	r2, ip, r0, r2
 801cf2a:	0d57      	lsrs	r7, r2, #21
 801cf2c:	0952      	lsrs	r2, r2, #5
 801cf2e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cf32:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf36:	433a      	orrs	r2, r7
 801cf38:	2bff      	cmp	r3, #255	@ 0xff
 801cf3a:	b292      	uxth	r2, r2
 801cf3c:	d102      	bne.n	801cf44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cf3e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cf40:	29ff      	cmp	r1, #255	@ 0xff
 801cf42:	d063      	beq.n	801d00c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cf44:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801cf46:	f8be 1000 	ldrh.w	r1, [lr]
 801cf4a:	4343      	muls	r3, r0
 801cf4c:	1c58      	adds	r0, r3, #1
 801cf4e:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cf52:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cf56:	1208      	asrs	r0, r1, #8
 801cf58:	b2db      	uxtb	r3, r3
 801cf5a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cf5e:	fb10 f003 	smulbb	r0, r0, r3
 801cf62:	10cf      	asrs	r7, r1, #3
 801cf64:	00c9      	lsls	r1, r1, #3
 801cf66:	b2c9      	uxtb	r1, r1
 801cf68:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cf6a:	1215      	asrs	r5, r2, #8
 801cf6c:	fb11 f103 	smulbb	r1, r1, r3
 801cf70:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cf74:	fb05 0504 	mla	r5, r5, r4, r0
 801cf78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cf7c:	10d0      	asrs	r0, r2, #3
 801cf7e:	00d2      	lsls	r2, r2, #3
 801cf80:	fb17 f703 	smulbb	r7, r7, r3
 801cf84:	b2d2      	uxtb	r2, r2
 801cf86:	fb02 1204 	mla	r2, r2, r4, r1
 801cf8a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cf8e:	fb00 7004 	mla	r0, r0, r4, r7
 801cf92:	b2ad      	uxth	r5, r5
 801cf94:	b292      	uxth	r2, r2
 801cf96:	1c6b      	adds	r3, r5, #1
 801cf98:	1c57      	adds	r7, r2, #1
 801cf9a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cf9e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cfa2:	b280      	uxth	r0, r0
 801cfa4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cfa8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cfac:	433d      	orrs	r5, r7
 801cfae:	1c47      	adds	r7, r0, #1
 801cfb0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cfb4:	097f      	lsrs	r7, r7, #5
 801cfb6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cfba:	433d      	orrs	r5, r7
 801cfbc:	f8ae 5000 	strh.w	r5, [lr]
 801cfc0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cfc2:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cfc4:	f10e 0e02 	add.w	lr, lr, #2
 801cfc8:	4413      	add	r3, r2
 801cfca:	9321      	str	r3, [sp, #132]	@ 0x84
 801cfcc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cfce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cfd0:	441a      	add	r2, r3
 801cfd2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cfd4:	9222      	str	r2, [sp, #136]	@ 0x88
 801cfd6:	3b01      	subs	r3, #1
 801cfd8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cfda:	e61c      	b.n	801cc16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801cfdc:	fb08 f000 	mul.w	r0, r8, r0
 801cfe0:	fb09 0303 	mla	r3, r9, r3, r0
 801cfe4:	e6dc      	b.n	801cda0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801cfe6:	46b9      	mov	r9, r7
 801cfe8:	e704      	b.n	801cdf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801cfea:	f1c2 0110 	rsb	r1, r2, #16
 801cfee:	437a      	muls	r2, r7
 801cff0:	fb09 2901 	mla	r9, r9, r1, r2
 801cff4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cff8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cffc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d000:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d004:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d008:	4302      	orrs	r2, r0
 801d00a:	e795      	b.n	801cf38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d00c:	f8ae 2000 	strh.w	r2, [lr]
 801d010:	e7d6      	b.n	801cfc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d012:	b017      	add	sp, #92	@ 0x5c
 801d014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d01c:	b085      	sub	sp, #20
 801d01e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d022:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d026:	fb00 7406 	mla	r4, r0, r6, r7
 801d02a:	2800      	cmp	r0, #0
 801d02c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d030:	9103      	str	r1, [sp, #12]
 801d032:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d036:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d03a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d03e:	9501      	str	r5, [sp, #4]
 801d040:	eb02 0904 	add.w	r9, r2, r4
 801d044:	f2c0 8141 	blt.w	801d2ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d048:	4583      	cmp	fp, r0
 801d04a:	f340 813e 	ble.w	801d2ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d04e:	2f00      	cmp	r7, #0
 801d050:	f2c0 8137 	blt.w	801d2c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d054:	42be      	cmp	r6, r7
 801d056:	f340 8134 	ble.w	801d2c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d05a:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d05e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d062:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d066:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d06a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d06e:	4355      	muls	r5, r2
 801d070:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d074:	fb0c f203 	mul.w	r2, ip, r3
 801d078:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d07c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d080:	441d      	add	r5, r3
 801d082:	f102 0320 	add.w	r3, r2, #32
 801d086:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d08a:	0a1b      	lsrs	r3, r3, #8
 801d08c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d090:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d094:	431c      	orrs	r4, r3
 801d096:	1c7b      	adds	r3, r7, #1
 801d098:	f100 811c 	bmi.w	801d2d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d09c:	429e      	cmp	r6, r3
 801d09e:	f340 8119 	ble.w	801d2d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d0a2:	2900      	cmp	r1, #0
 801d0a4:	f000 8119 	beq.w	801d2da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d0a8:	9a01      	ldr	r2, [sp, #4]
 801d0aa:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d0ae:	8855      	ldrh	r5, [r2, #2]
 801d0b0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d0b4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d0b8:	fb08 f802 	mul.w	r8, r8, r2
 801d0bc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d0c0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d0c4:	435d      	muls	r5, r3
 801d0c6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d0ca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d0ce:	44d0      	add	r8, sl
 801d0d0:	f105 0a20 	add.w	sl, r5, #32
 801d0d4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d0d8:	0a2d      	lsrs	r5, r5, #8
 801d0da:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d0de:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d0e2:	432a      	orrs	r2, r5
 801d0e4:	3001      	adds	r0, #1
 801d0e6:	f100 80fe 	bmi.w	801d2e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d0ea:	4583      	cmp	fp, r0
 801d0ec:	f340 80fb 	ble.w	801d2e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d0f0:	f1be 0f00 	cmp.w	lr, #0
 801d0f4:	f000 80fc 	beq.w	801d2f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d0f8:	2f00      	cmp	r7, #0
 801d0fa:	f2c0 80f1 	blt.w	801d2e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d0fe:	42be      	cmp	r6, r7
 801d100:	f340 80ee 	ble.w	801d2e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d104:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d108:	9801      	ldr	r0, [sp, #4]
 801d10a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d10e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d112:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d116:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d11a:	fb0a fa00 	mul.w	sl, sl, r0
 801d11e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d122:	fb05 f808 	mul.w	r8, r5, r8
 801d126:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d12a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d12e:	4482      	add	sl, r0
 801d130:	f108 0020 	add.w	r0, r8, #32
 801d134:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d138:	0a00      	lsrs	r0, r0, #8
 801d13a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d13e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d142:	ea4b 0b00 	orr.w	fp, fp, r0
 801d146:	3701      	adds	r7, #1
 801d148:	f100 80d7 	bmi.w	801d2fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d14c:	42be      	cmp	r6, r7
 801d14e:	f340 80d4 	ble.w	801d2fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d152:	2900      	cmp	r1, #0
 801d154:	f000 80d4 	beq.w	801d300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d158:	9801      	ldr	r0, [sp, #4]
 801d15a:	3601      	adds	r6, #1
 801d15c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d160:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d164:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d168:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d16c:	fb07 f800 	mul.w	r8, r7, r0
 801d170:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d174:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d178:	fb09 f906 	mul.w	r9, r9, r6
 801d17c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d180:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d184:	44d1      	add	r9, sl
 801d186:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d18a:	f108 0020 	add.w	r0, r8, #32
 801d18e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d192:	0a00      	lsrs	r0, r0, #8
 801d194:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d198:	4330      	orrs	r0, r6
 801d19a:	b28e      	uxth	r6, r1
 801d19c:	fa1f f98e 	uxth.w	r9, lr
 801d1a0:	fb06 f809 	mul.w	r8, r6, r9
 801d1a4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d1a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d1ac:	0136      	lsls	r6, r6, #4
 801d1ae:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1b2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d1b6:	9601      	str	r6, [sp, #4]
 801d1b8:	ea4a 0404 	orr.w	r4, sl, r4
 801d1bc:	fa1f f689 	uxth.w	r6, r9
 801d1c0:	9602      	str	r6, [sp, #8]
 801d1c2:	4626      	mov	r6, r4
 801d1c4:	fb11 f90e 	smulbb	r9, r1, lr
 801d1c8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d1cc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d1d0:	f1ce 0410 	rsb	r4, lr, #16
 801d1d4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1d8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d1dc:	1a64      	subs	r4, r4, r1
 801d1de:	ea4a 0202 	orr.w	r2, sl, r2
 801d1e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d1e6:	434a      	muls	r2, r1
 801d1e8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d1ec:	fb04 2406 	mla	r4, r4, r6, r2
 801d1f0:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d1f4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d1f8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d1fc:	ea4a 0000 	orr.w	r0, sl, r0
 801d200:	fb09 4200 	mla	r2, r9, r0, r4
 801d204:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d208:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d20c:	9801      	ldr	r0, [sp, #4]
 801d20e:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d212:	ea44 0b0b 	orr.w	fp, r4, fp
 801d216:	9c02      	ldr	r4, [sp, #8]
 801d218:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801d21c:	1b00      	subs	r0, r0, r4
 801d21e:	9c01      	ldr	r4, [sp, #4]
 801d220:	b280      	uxth	r0, r0
 801d222:	eba4 0608 	sub.w	r6, r4, r8
 801d226:	b2b6      	uxth	r6, r6
 801d228:	4373      	muls	r3, r6
 801d22a:	fb0c 3300 	mla	r3, ip, r0, r3
 801d22e:	9802      	ldr	r0, [sp, #8]
 801d230:	9903      	ldr	r1, [sp, #12]
 801d232:	fb00 3505 	mla	r5, r0, r5, r3
 801d236:	fb08 5707 	mla	r7, r8, r7, r5
 801d23a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d23e:	8809      	ldrh	r1, [r1, #0]
 801d240:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d244:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d248:	120b      	asrs	r3, r1, #8
 801d24a:	b2ff      	uxtb	r7, r7
 801d24c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d250:	437b      	muls	r3, r7
 801d252:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d256:	10c8      	asrs	r0, r1, #3
 801d258:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d25c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d260:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d264:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d268:	00c9      	lsls	r1, r1, #3
 801d26a:	4378      	muls	r0, r7
 801d26c:	ea42 0e0e 	orr.w	lr, r2, lr
 801d270:	b2c9      	uxtb	r1, r1
 801d272:	fa1f f28e 	uxth.w	r2, lr
 801d276:	434f      	muls	r7, r1
 801d278:	1c59      	adds	r1, r3, #1
 801d27a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d27e:	1213      	asrs	r3, r2, #8
 801d280:	f023 0307 	bic.w	r3, r3, #7
 801d284:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d288:	1c41      	adds	r1, r0, #1
 801d28a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d28e:	10d1      	asrs	r1, r2, #3
 801d290:	f021 0103 	bic.w	r1, r1, #3
 801d294:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d298:	021b      	lsls	r3, r3, #8
 801d29a:	00c9      	lsls	r1, r1, #3
 801d29c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d2a0:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801d2a4:	430b      	orrs	r3, r1
 801d2a6:	1c79      	adds	r1, r7, #1
 801d2a8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d2ac:	00d2      	lsls	r2, r2, #3
 801d2ae:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d2b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d2b6:	431a      	orrs	r2, r3
 801d2b8:	9b03      	ldr	r3, [sp, #12]
 801d2ba:	801a      	strh	r2, [r3, #0]
 801d2bc:	b005      	add	sp, #20
 801d2be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2c2:	f04f 0c00 	mov.w	ip, #0
 801d2c6:	4664      	mov	r4, ip
 801d2c8:	e6e5      	b.n	801d096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d2ca:	2300      	movs	r3, #0
 801d2cc:	469c      	mov	ip, r3
 801d2ce:	461a      	mov	r2, r3
 801d2d0:	461c      	mov	r4, r3
 801d2d2:	e707      	b.n	801d0e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d2d4:	2300      	movs	r3, #0
 801d2d6:	461a      	mov	r2, r3
 801d2d8:	e704      	b.n	801d0e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d2da:	460b      	mov	r3, r1
 801d2dc:	460a      	mov	r2, r1
 801d2de:	e701      	b.n	801d0e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d2e0:	2500      	movs	r5, #0
 801d2e2:	46ab      	mov	fp, r5
 801d2e4:	e72f      	b.n	801d146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d2e6:	2700      	movs	r7, #0
 801d2e8:	463d      	mov	r5, r7
 801d2ea:	4638      	mov	r0, r7
 801d2ec:	46bb      	mov	fp, r7
 801d2ee:	e754      	b.n	801d19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d2f0:	4677      	mov	r7, lr
 801d2f2:	4675      	mov	r5, lr
 801d2f4:	4670      	mov	r0, lr
 801d2f6:	46f3      	mov	fp, lr
 801d2f8:	e74f      	b.n	801d19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d2fa:	2700      	movs	r7, #0
 801d2fc:	4638      	mov	r0, r7
 801d2fe:	e74c      	b.n	801d19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d300:	460f      	mov	r7, r1
 801d302:	4608      	mov	r0, r1
 801d304:	e749      	b.n	801d19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d30c:	b093      	sub	sp, #76	@ 0x4c
 801d30e:	9210      	str	r2, [sp, #64]	@ 0x40
 801d310:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d312:	9011      	str	r0, [sp, #68]	@ 0x44
 801d314:	6850      	ldr	r0, [r2, #4]
 801d316:	910e      	str	r1, [sp, #56]	@ 0x38
 801d318:	9306      	str	r3, [sp, #24]
 801d31a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801d31e:	fb00 1303 	mla	r3, r0, r3, r1
 801d322:	6812      	ldr	r2, [r2, #0]
 801d324:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d328:	9307      	str	r3, [sp, #28]
 801d32a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d32c:	681b      	ldr	r3, [r3, #0]
 801d32e:	9308      	str	r3, [sp, #32]
 801d330:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d332:	685b      	ldr	r3, [r3, #4]
 801d334:	9309      	str	r3, [sp, #36]	@ 0x24
 801d336:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d338:	2b00      	cmp	r3, #0
 801d33a:	dc03      	bgt.n	801d344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d33c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d33e:	2b00      	cmp	r3, #0
 801d340:	f340 83b4 	ble.w	801daac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d344:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d346:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d34a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d34e:	1e48      	subs	r0, r1, #1
 801d350:	1e55      	subs	r5, r2, #1
 801d352:	9b06      	ldr	r3, [sp, #24]
 801d354:	2b00      	cmp	r3, #0
 801d356:	f340 8163 	ble.w	801d620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d35a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801d35c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d35e:	1436      	asrs	r6, r6, #16
 801d360:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d364:	d406      	bmi.n	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d366:	4286      	cmp	r6, r0
 801d368:	da04      	bge.n	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d36a:	2b00      	cmp	r3, #0
 801d36c:	db02      	blt.n	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d36e:	42ab      	cmp	r3, r5
 801d370:	f2c0 8157 	blt.w	801d622 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d374:	3601      	adds	r6, #1
 801d376:	f100 8144 	bmi.w	801d602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d37a:	42b1      	cmp	r1, r6
 801d37c:	f2c0 8141 	blt.w	801d602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d380:	3301      	adds	r3, #1
 801d382:	f100 813e 	bmi.w	801d602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d386:	429a      	cmp	r2, r3
 801d388:	f2c0 813b 	blt.w	801d602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d38c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d390:	9b06      	ldr	r3, [sp, #24]
 801d392:	9f07      	ldr	r7, [sp, #28]
 801d394:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d396:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d398:	2b00      	cmp	r3, #0
 801d39a:	f340 8164 	ble.w	801d666 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d39e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d3a0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d3a2:	1418      	asrs	r0, r3, #16
 801d3a4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d3a6:	142d      	asrs	r5, r5, #16
 801d3a8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d3ac:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d3ae:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d3b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d3b4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d3b8:	f100 81ee 	bmi.w	801d798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d3bc:	f102 3eff 	add.w	lr, r2, #4294967295
 801d3c0:	4575      	cmp	r5, lr
 801d3c2:	f280 81e9 	bge.w	801d798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d3c6:	2800      	cmp	r0, #0
 801d3c8:	f2c0 81e6 	blt.w	801d798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d3cc:	f103 3eff 	add.w	lr, r3, #4294967295
 801d3d0:	4570      	cmp	r0, lr
 801d3d2:	f280 81e1 	bge.w	801d798 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d3d6:	b212      	sxth	r2, r2
 801d3d8:	fb00 5002 	mla	r0, r0, r2, r5
 801d3dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3de:	fa1f fe81 	uxth.w	lr, r1
 801d3e2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d3e6:	eb03 0a00 	add.w	sl, r3, r0
 801d3ea:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d3ee:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d3f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d3f6:	b29b      	uxth	r3, r3
 801d3f8:	f1bc 0f00 	cmp.w	ip, #0
 801d3fc:	f000 8179 	beq.w	801d6f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d400:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d404:	eb0a 0b02 	add.w	fp, sl, r2
 801d408:	fa1f fa8c 	uxth.w	sl, ip
 801d40c:	fb0a fe0e 	mul.w	lr, sl, lr
 801d410:	eba5 050e 	sub.w	r5, r5, lr
 801d414:	b2ad      	uxth	r5, r5
 801d416:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d41a:	fb08 f505 	mul.w	r5, r8, r5
 801d41e:	fa1f fa8a 	uxth.w	sl, sl
 801d422:	eba3 030a 	sub.w	r3, r3, sl
 801d426:	b29b      	uxth	r3, r3
 801d428:	940a      	str	r4, [sp, #40]	@ 0x28
 801d42a:	fb09 5303 	mla	r3, r9, r3, r5
 801d42e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d432:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d434:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d436:	fb0a 3304 	mla	r3, sl, r4, r3
 801d43a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d43c:	fb0e 3304 	mla	r3, lr, r4, r3
 801d440:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d444:	2b00      	cmp	r3, #0
 801d446:	f000 80cf 	beq.w	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d44a:	9c08      	ldr	r4, [sp, #32]
 801d44c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d450:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d454:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d458:	f000 8150 	beq.w	801d6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d45c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d460:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d464:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d468:	fb09 f000 	mul.w	r0, r9, r0
 801d46c:	fb0a fe0e 	mul.w	lr, sl, lr
 801d470:	f100 0b20 	add.w	fp, r0, #32
 801d474:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d478:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d47c:	44ce      	add	lr, r9
 801d47e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d482:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d486:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d48a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d48e:	ea4e 0909 	orr.w	r9, lr, r9
 801d492:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d496:	8868      	ldrh	r0, [r5, #2]
 801d498:	d019      	beq.n	801d4ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d49a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d49e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d4a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d4a6:	fb08 f800 	mul.w	r8, r8, r0
 801d4aa:	fb0a fe0e 	mul.w	lr, sl, lr
 801d4ae:	f108 0b20 	add.w	fp, r8, #32
 801d4b2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d4b6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d4ba:	4486      	add	lr, r0
 801d4bc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d4c0:	0a00      	lsrs	r0, r0, #8
 801d4c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d4c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d4ca:	ea4e 0000 	orr.w	r0, lr, r0
 801d4ce:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d4d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d4d6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d4da:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d4de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d4e2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d4e6:	ea4e 0909 	orr.w	r9, lr, r9
 801d4ea:	ea4a 0000 	orr.w	r0, sl, r0
 801d4ee:	f1bc 0f00 	cmp.w	ip, #0
 801d4f2:	f000 8105 	beq.w	801d700 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d4f6:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d4fa:	3a01      	subs	r2, #1
 801d4fc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d4fe:	0052      	lsls	r2, r2, #1
 801d500:	3202      	adds	r2, #2
 801d502:	2cff      	cmp	r4, #255	@ 0xff
 801d504:	eb05 0e02 	add.w	lr, r5, r2
 801d508:	5aaa      	ldrh	r2, [r5, r2]
 801d50a:	d018      	beq.n	801d53e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d50c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d510:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d514:	fb04 fa02 	mul.w	sl, r4, r2
 801d518:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d51c:	fb08 f805 	mul.w	r8, r8, r5
 801d520:	f10a 0520 	add.w	r5, sl, #32
 801d524:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d528:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d52c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d530:	4442      	add	r2, r8
 801d532:	0a2d      	lsrs	r5, r5, #8
 801d534:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d538:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d53c:	432a      	orrs	r2, r5
 801d53e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d540:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d544:	2cff      	cmp	r4, #255	@ 0xff
 801d546:	d01a      	beq.n	801d57e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d548:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d54c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d550:	fb04 fa05 	mul.w	sl, r4, r5
 801d554:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d558:	fb08 f80e 	mul.w	r8, r8, lr
 801d55c:	f10a 0e20 	add.w	lr, sl, #32
 801d560:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d564:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d568:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d56c:	4445      	add	r5, r8
 801d56e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d572:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d576:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d57a:	ea45 050e 	orr.w	r5, r5, lr
 801d57e:	fb1c fe01 	smulbb	lr, ip, r1
 801d582:	f1cc 0810 	rsb	r8, ip, #16
 801d586:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d58a:	eba8 0801 	sub.w	r8, r8, r1
 801d58e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d592:	4341      	muls	r1, r0
 801d594:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d598:	fb09 1108 	mla	r1, r9, r8, r1
 801d59c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d5a0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d5a4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d5a8:	ea4a 0202 	orr.w	r2, sl, r2
 801d5ac:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d5b0:	fb0c 1102 	mla	r1, ip, r2, r1
 801d5b4:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d5b8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d5bc:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d5c0:	ea4b 0505 	orr.w	r5, fp, r5
 801d5c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d5c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d5cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d5d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d5d4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d5d8:	ea42 0e0e 	orr.w	lr, r2, lr
 801d5dc:	fa1f f28e 	uxth.w	r2, lr
 801d5e0:	2bff      	cmp	r3, #255	@ 0xff
 801d5e2:	f040 80a1 	bne.w	801d728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d5e6:	803a      	strh	r2, [r7, #0]
 801d5e8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5ea:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d5ec:	3702      	adds	r7, #2
 801d5ee:	4413      	add	r3, r2
 801d5f0:	931d      	str	r3, [sp, #116]	@ 0x74
 801d5f2:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d5f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5f6:	441a      	add	r2, r3
 801d5f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5fa:	921e      	str	r2, [sp, #120]	@ 0x78
 801d5fc:	3b01      	subs	r3, #1
 801d5fe:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d600:	e6c9      	b.n	801d396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d602:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d604:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d606:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d608:	4433      	add	r3, r6
 801d60a:	931d      	str	r3, [sp, #116]	@ 0x74
 801d60c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d60e:	441c      	add	r4, r3
 801d610:	9b06      	ldr	r3, [sp, #24]
 801d612:	941e      	str	r4, [sp, #120]	@ 0x78
 801d614:	3b01      	subs	r3, #1
 801d616:	9306      	str	r3, [sp, #24]
 801d618:	9b07      	ldr	r3, [sp, #28]
 801d61a:	3302      	adds	r3, #2
 801d61c:	9307      	str	r3, [sp, #28]
 801d61e:	e698      	b.n	801d352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d620:	d028      	beq.n	801d674 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d622:	9b06      	ldr	r3, [sp, #24]
 801d624:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d626:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d628:	3b01      	subs	r3, #1
 801d62a:	fb00 5003 	mla	r0, r0, r3, r5
 801d62e:	1400      	asrs	r0, r0, #16
 801d630:	f53f aeac 	bmi.w	801d38c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d634:	3901      	subs	r1, #1
 801d636:	4288      	cmp	r0, r1
 801d638:	f6bf aea8 	bge.w	801d38c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d63c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d63e:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d640:	fb01 0303 	mla	r3, r1, r3, r0
 801d644:	141b      	asrs	r3, r3, #16
 801d646:	f53f aea1 	bmi.w	801d38c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d64a:	3a01      	subs	r2, #1
 801d64c:	4293      	cmp	r3, r2
 801d64e:	f6bf ae9d 	bge.w	801d38c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d652:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d656:	9b06      	ldr	r3, [sp, #24]
 801d658:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d65c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d65e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d660:	2b00      	cmp	r3, #0
 801d662:	f300 80b6 	bgt.w	801d7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d666:	9b06      	ldr	r3, [sp, #24]
 801d668:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d66c:	9b07      	ldr	r3, [sp, #28]
 801d66e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d672:	9307      	str	r3, [sp, #28]
 801d674:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d676:	2b00      	cmp	r3, #0
 801d678:	f340 8218 	ble.w	801daac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d67c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d680:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d684:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d688:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d68c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d690:	eef0 6a62 	vmov.f32	s13, s5
 801d694:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d698:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d69c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d6a8:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d6ac:	eef0 6a43 	vmov.f32	s13, s6
 801d6b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d6b4:	ee12 2a90 	vmov	r2, s5
 801d6b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d6bc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d6be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6c6:	ee13 2a10 	vmov	r2, s6
 801d6ca:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d6cc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d6ce:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d6d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6d6:	9320      	str	r3, [sp, #128]	@ 0x80
 801d6d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d6da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d6dc:	3b01      	subs	r3, #1
 801d6de:	930e      	str	r3, [sp, #56]	@ 0x38
 801d6e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d6e2:	bf08      	it	eq
 801d6e4:	4613      	moveq	r3, r2
 801d6e6:	eeb0 3a67 	vmov.f32	s6, s15
 801d6ea:	9306      	str	r3, [sp, #24]
 801d6ec:	eef0 2a47 	vmov.f32	s5, s14
 801d6f0:	e621      	b.n	801d336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d6f2:	fb08 f505 	mul.w	r5, r8, r5
 801d6f6:	fb09 5303 	mla	r3, r9, r3, r5
 801d6fa:	e6a1      	b.n	801d440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d6fc:	4681      	mov	r9, r0
 801d6fe:	e6c8      	b.n	801d492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d700:	f1c1 0210 	rsb	r2, r1, #16
 801d704:	4341      	muls	r1, r0
 801d706:	fb09 1902 	mla	r9, r9, r2, r1
 801d70a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d70e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d712:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d716:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d71a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d71e:	ea42 0909 	orr.w	r9, r2, r9
 801d722:	fa1f f289 	uxth.w	r2, r9
 801d726:	e75b      	b.n	801d5e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d728:	43db      	mvns	r3, r3
 801d72a:	f8b7 c000 	ldrh.w	ip, [r7]
 801d72e:	fa5f fe83 	uxtb.w	lr, r3
 801d732:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d736:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d73a:	fb00 f00e 	mul.w	r0, r0, lr
 801d73e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d742:	1c41      	adds	r1, r0, #1
 801d744:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d748:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d74c:	fb05 f50e 	mul.w	r5, r5, lr
 801d750:	1211      	asrs	r1, r2, #8
 801d752:	f021 0107 	bic.w	r1, r1, #7
 801d756:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d75a:	48d6      	ldr	r0, [pc, #856]	@ (801dab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d75c:	b2c9      	uxtb	r1, r1
 801d75e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d762:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d766:	1c69      	adds	r1, r5, #1
 801d768:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d76c:	b2db      	uxtb	r3, r3
 801d76e:	10d1      	asrs	r1, r2, #3
 801d770:	fb03 f30e 	mul.w	r3, r3, lr
 801d774:	f021 0103 	bic.w	r1, r1, #3
 801d778:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d77c:	00c9      	lsls	r1, r1, #3
 801d77e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d782:	4301      	orrs	r1, r0
 801d784:	1c58      	adds	r0, r3, #1
 801d786:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d78a:	00d2      	lsls	r2, r2, #3
 801d78c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d790:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d794:	430a      	orrs	r2, r1
 801d796:	e726      	b.n	801d5e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d798:	f115 0e01 	adds.w	lr, r5, #1
 801d79c:	f53f af24 	bmi.w	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d7a0:	4572      	cmp	r2, lr
 801d7a2:	f6ff af21 	blt.w	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d7a6:	f110 0e01 	adds.w	lr, r0, #1
 801d7aa:	f53f af1d 	bmi.w	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d7ae:	4573      	cmp	r3, lr
 801d7b0:	f6ff af1a 	blt.w	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d7b4:	b21b      	sxth	r3, r3
 801d7b6:	b212      	sxth	r2, r2
 801d7b8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d7bc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d7c0:	9301      	str	r3, [sp, #4]
 801d7c2:	9200      	str	r2, [sp, #0]
 801d7c4:	4639      	mov	r1, r7
 801d7c6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d7ca:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d7cc:	f7ff fc24 	bl	801d018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d7d0:	e70a      	b.n	801d5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d7d2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d7d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d7d8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d7da:	fa1f fc82 	uxth.w	ip, r2
 801d7de:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d7e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d7e4:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d7e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d7ec:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d7ee:	141f      	asrs	r7, r3, #16
 801d7f0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d7f2:	141b      	asrs	r3, r3, #16
 801d7f4:	fb01 3707 	mla	r7, r1, r7, r3
 801d7f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7fa:	eb03 0a07 	add.w	sl, r3, r7
 801d7fe:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d802:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d806:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d80a:	b29b      	uxth	r3, r3
 801d80c:	2d00      	cmp	r5, #0
 801d80e:	f000 80fe 	beq.w	801da0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d812:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d816:	eb0a 0b01 	add.w	fp, sl, r1
 801d81a:	fa1f fa85 	uxth.w	sl, r5
 801d81e:	fb0a fc0c 	mul.w	ip, sl, ip
 801d822:	eba0 000c 	sub.w	r0, r0, ip
 801d826:	b280      	uxth	r0, r0
 801d828:	fb08 f000 	mul.w	r0, r8, r0
 801d82c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d830:	fa1f fa8a 	uxth.w	sl, sl
 801d834:	eba3 030a 	sub.w	r3, r3, sl
 801d838:	b29b      	uxth	r3, r3
 801d83a:	fb09 0303 	mla	r3, r9, r3, r0
 801d83e:	940c      	str	r4, [sp, #48]	@ 0x30
 801d840:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d842:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d846:	fb0a 3300 	mla	r3, sl, r0, r3
 801d84a:	fb0c 3304 	mla	r3, ip, r4, r3
 801d84e:	940d      	str	r4, [sp, #52]	@ 0x34
 801d850:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d854:	2b00      	cmp	r3, #0
 801d856:	f000 80cc 	beq.w	801d9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d85a:	9808      	ldr	r0, [sp, #32]
 801d85c:	9c08      	ldr	r4, [sp, #32]
 801d85e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d862:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d866:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d86a:	f000 80d5 	beq.w	801da18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d86e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d872:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d876:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d87a:	fb09 f707 	mul.w	r7, r9, r7
 801d87e:	fb0a fc0c 	mul.w	ip, sl, ip
 801d882:	f107 0b20 	add.w	fp, r7, #32
 801d886:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d88a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d88e:	44cc      	add	ip, r9
 801d890:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d894:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d898:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d89c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d8a0:	ea4c 0909 	orr.w	r9, ip, r9
 801d8a4:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d8a8:	8847      	ldrh	r7, [r0, #2]
 801d8aa:	d019      	beq.n	801d8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d8ac:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d8b0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d8b4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d8b8:	fb08 f807 	mul.w	r8, r8, r7
 801d8bc:	fb0a fc0c 	mul.w	ip, sl, ip
 801d8c0:	f108 0b20 	add.w	fp, r8, #32
 801d8c4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d8c8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d8cc:	44bc      	add	ip, r7
 801d8ce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d8d2:	0a3f      	lsrs	r7, r7, #8
 801d8d4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d8d8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d8dc:	ea4c 0707 	orr.w	r7, ip, r7
 801d8e0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d8e4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d8e8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d8ec:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d8f0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d8f4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d8f8:	ea4c 0909 	orr.w	r9, ip, r9
 801d8fc:	ea4a 0707 	orr.w	r7, sl, r7
 801d900:	2d00      	cmp	r5, #0
 801d902:	f000 808b 	beq.w	801da1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d906:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d90a:	3901      	subs	r1, #1
 801d90c:	0049      	lsls	r1, r1, #1
 801d90e:	3102      	adds	r1, #2
 801d910:	eb00 0c01 	add.w	ip, r0, r1
 801d914:	5a41      	ldrh	r1, [r0, r1]
 801d916:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d918:	28ff      	cmp	r0, #255	@ 0xff
 801d91a:	d019      	beq.n	801d950 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d91c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d91e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d922:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d926:	fb04 fa01 	mul.w	sl, r4, r1
 801d92a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d92e:	fb08 f800 	mul.w	r8, r8, r0
 801d932:	f10a 0020 	add.w	r0, sl, #32
 801d936:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d93a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d93e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d942:	4441      	add	r1, r8
 801d944:	0a00      	lsrs	r0, r0, #8
 801d946:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d94a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d94e:	4301      	orrs	r1, r0
 801d950:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d952:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d956:	2cff      	cmp	r4, #255	@ 0xff
 801d958:	d01a      	beq.n	801d990 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d95a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d95e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d962:	fb04 fa00 	mul.w	sl, r4, r0
 801d966:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d96a:	fb08 f80c 	mul.w	r8, r8, ip
 801d96e:	f10a 0c20 	add.w	ip, sl, #32
 801d972:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d976:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d97a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d97e:	4440      	add	r0, r8
 801d980:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d984:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d988:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d98c:	ea40 000c 	orr.w	r0, r0, ip
 801d990:	fb15 fc02 	smulbb	ip, r5, r2
 801d994:	f1c5 0810 	rsb	r8, r5, #16
 801d998:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d99c:	eba8 0802 	sub.w	r8, r8, r2
 801d9a0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d9a4:	437a      	muls	r2, r7
 801d9a6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d9aa:	fb09 2208 	mla	r2, r9, r8, r2
 801d9ae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d9b2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d9b6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d9ba:	ea4a 0101 	orr.w	r1, sl, r1
 801d9be:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d9c2:	fb05 2201 	mla	r2, r5, r1, r2
 801d9c6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d9ca:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d9ce:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d9d2:	ea4b 0000 	orr.w	r0, fp, r0
 801d9d6:	fb0c 2200 	mla	r2, ip, r0, r2
 801d9da:	0d57      	lsrs	r7, r2, #21
 801d9dc:	0952      	lsrs	r2, r2, #5
 801d9de:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d9e2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d9e6:	433a      	orrs	r2, r7
 801d9e8:	2bff      	cmp	r3, #255	@ 0xff
 801d9ea:	b292      	uxth	r2, r2
 801d9ec:	d127      	bne.n	801da3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d9ee:	f8ae 2000 	strh.w	r2, [lr]
 801d9f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d9f4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d9f6:	f10e 0e02 	add.w	lr, lr, #2
 801d9fa:	4413      	add	r3, r2
 801d9fc:	931d      	str	r3, [sp, #116]	@ 0x74
 801d9fe:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801da00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da02:	441a      	add	r2, r3
 801da04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801da06:	921e      	str	r2, [sp, #120]	@ 0x78
 801da08:	3b01      	subs	r3, #1
 801da0a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801da0c:	e627      	b.n	801d65e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801da0e:	fb08 f000 	mul.w	r0, r8, r0
 801da12:	fb09 0303 	mla	r3, r9, r3, r0
 801da16:	e71b      	b.n	801d850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801da18:	46b9      	mov	r9, r7
 801da1a:	e743      	b.n	801d8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801da1c:	f1c2 0110 	rsb	r1, r2, #16
 801da20:	437a      	muls	r2, r7
 801da22:	fb09 2901 	mla	r9, r9, r1, r2
 801da26:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801da2a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801da2e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801da32:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801da36:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801da3a:	4302      	orrs	r2, r0
 801da3c:	e7d4      	b.n	801d9e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801da3e:	43db      	mvns	r3, r3
 801da40:	f8be 7000 	ldrh.w	r7, [lr]
 801da44:	fa5f fc83 	uxtb.w	ip, r3
 801da48:	1238      	asrs	r0, r7, #8
 801da4a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801da4e:	fb00 f00c 	mul.w	r0, r0, ip
 801da52:	10fd      	asrs	r5, r7, #3
 801da54:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801da58:	fb05 f10c 	mul.w	r1, r5, ip
 801da5c:	1c45      	adds	r5, r0, #1
 801da5e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801da62:	1215      	asrs	r5, r2, #8
 801da64:	f025 0507 	bic.w	r5, r5, #7
 801da68:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801da6c:	00fb      	lsls	r3, r7, #3
 801da6e:	1c4d      	adds	r5, r1, #1
 801da70:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801da74:	b2db      	uxtb	r3, r3
 801da76:	10d1      	asrs	r1, r2, #3
 801da78:	fb03 f30c 	mul.w	r3, r3, ip
 801da7c:	f021 0103 	bic.w	r1, r1, #3
 801da80:	4c0c      	ldr	r4, [pc, #48]	@ (801dab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801da82:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801da86:	b2c0      	uxtb	r0, r0
 801da88:	00c9      	lsls	r1, r1, #3
 801da8a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da8e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801da92:	4308      	orrs	r0, r1
 801da94:	1c59      	adds	r1, r3, #1
 801da96:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da9a:	00d2      	lsls	r2, r2, #3
 801da9c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801daa0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801daa4:	4318      	orrs	r0, r3
 801daa6:	f8ae 0000 	strh.w	r0, [lr]
 801daaa:	e7a2      	b.n	801d9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801daac:	b013      	add	sp, #76	@ 0x4c
 801daae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dab2:	bf00      	nop
 801dab4:	fffff800 	.word	0xfffff800

0801dab8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801dab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dabc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801dac0:	fb05 4c03 	mla	ip, r5, r3, r4
 801dac4:	2d00      	cmp	r5, #0
 801dac6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801daca:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801dace:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801dad2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801dad6:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801dada:	8808      	ldrh	r0, [r1, #0]
 801dadc:	f2c0 80a7 	blt.w	801dc2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dae0:	45aa      	cmp	sl, r5
 801dae2:	f340 80a4 	ble.w	801dc2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801dae6:	2c00      	cmp	r4, #0
 801dae8:	f2c0 809f 	blt.w	801dc2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801daec:	42a3      	cmp	r3, r4
 801daee:	f340 809c 	ble.w	801dc2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801daf2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801daf6:	1c62      	adds	r2, r4, #1
 801daf8:	f100 809c 	bmi.w	801dc34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801dafc:	4293      	cmp	r3, r2
 801dafe:	f340 8099 	ble.w	801dc34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801db02:	f1b9 0f00 	cmp.w	r9, #0
 801db06:	f000 8095 	beq.w	801dc34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801db0a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801db0e:	3501      	adds	r5, #1
 801db10:	f100 8094 	bmi.w	801dc3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801db14:	45aa      	cmp	sl, r5
 801db16:	f340 8091 	ble.w	801dc3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801db1a:	2f00      	cmp	r7, #0
 801db1c:	f000 808e 	beq.w	801dc3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801db20:	2c00      	cmp	r4, #0
 801db22:	f2c0 8089 	blt.w	801dc38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801db26:	42a3      	cmp	r3, r4
 801db28:	f340 8086 	ble.w	801dc38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801db2c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801db30:	3401      	adds	r4, #1
 801db32:	f100 8086 	bmi.w	801dc42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801db36:	42a3      	cmp	r3, r4
 801db38:	f340 8083 	ble.w	801dc42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801db3c:	f1b9 0f00 	cmp.w	r9, #0
 801db40:	d07f      	beq.n	801dc42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801db42:	3301      	adds	r3, #1
 801db44:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801db48:	fb19 fe07 	smulbb	lr, r9, r7
 801db4c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801db50:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801db54:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801db58:	ea44 0808 	orr.w	r8, r4, r8
 801db5c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801db60:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801db64:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801db68:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801db6c:	ea44 0c0c 	orr.w	ip, r4, ip
 801db70:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801db74:	fb04 f40c 	mul.w	r4, r4, ip
 801db78:	f1c7 0210 	rsb	r2, r7, #16
 801db7c:	eba2 0209 	sub.w	r2, r2, r9
 801db80:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801db84:	fb02 4808 	mla	r8, r2, r8, r4
 801db88:	b2b4      	uxth	r4, r6
 801db8a:	43f6      	mvns	r6, r6
 801db8c:	041a      	lsls	r2, r3, #16
 801db8e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801db92:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801db96:	4313      	orrs	r3, r2
 801db98:	fb0e 8303 	mla	r3, lr, r3, r8
 801db9c:	042a      	lsls	r2, r5, #16
 801db9e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dba2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801dba6:	432a      	orrs	r2, r5
 801dba8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801dbac:	fb07 3202 	mla	r2, r7, r2, r3
 801dbb0:	0d53      	lsrs	r3, r2, #21
 801dbb2:	0952      	lsrs	r2, r2, #5
 801dbb4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dbb8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dbbc:	431a      	orrs	r2, r3
 801dbbe:	b293      	uxth	r3, r2
 801dbc0:	1202      	asrs	r2, r0, #8
 801dbc2:	b2f6      	uxtb	r6, r6
 801dbc4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801dbc8:	fb12 f206 	smulbb	r2, r2, r6
 801dbcc:	10c7      	asrs	r7, r0, #3
 801dbce:	00c0      	lsls	r0, r0, #3
 801dbd0:	b2c0      	uxtb	r0, r0
 801dbd2:	121d      	asrs	r5, r3, #8
 801dbd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801dbd8:	fb10 f006 	smulbb	r0, r0, r6
 801dbdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dbe0:	fb17 f706 	smulbb	r7, r7, r6
 801dbe4:	fb05 2504 	mla	r5, r5, r4, r2
 801dbe8:	10da      	asrs	r2, r3, #3
 801dbea:	00db      	lsls	r3, r3, #3
 801dbec:	b2db      	uxtb	r3, r3
 801dbee:	fb03 0004 	mla	r0, r3, r4, r0
 801dbf2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801dbf6:	fb02 7204 	mla	r2, r2, r4, r7
 801dbfa:	b2ad      	uxth	r5, r5
 801dbfc:	b280      	uxth	r0, r0
 801dbfe:	1c6b      	adds	r3, r5, #1
 801dc00:	b292      	uxth	r2, r2
 801dc02:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dc06:	1c43      	adds	r3, r0, #1
 801dc08:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801dc0c:	1c50      	adds	r0, r2, #1
 801dc0e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801dc12:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dc16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dc1a:	0952      	lsrs	r2, r2, #5
 801dc1c:	432b      	orrs	r3, r5
 801dc1e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dc22:	4313      	orrs	r3, r2
 801dc24:	800b      	strh	r3, [r1, #0]
 801dc26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dc2a:	4680      	mov	r8, r0
 801dc2c:	e763      	b.n	801daf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801dc2e:	4684      	mov	ip, r0
 801dc30:	4680      	mov	r8, r0
 801dc32:	e76c      	b.n	801db0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dc34:	4684      	mov	ip, r0
 801dc36:	e76a      	b.n	801db0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801dc38:	4605      	mov	r5, r0
 801dc3a:	e779      	b.n	801db30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801dc3c:	4603      	mov	r3, r0
 801dc3e:	4605      	mov	r5, r0
 801dc40:	e782      	b.n	801db48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801dc42:	4603      	mov	r3, r0
 801dc44:	e780      	b.n	801db48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801dc46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc4a:	b093      	sub	sp, #76	@ 0x4c
 801dc4c:	461d      	mov	r5, r3
 801dc4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801dc52:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dc54:	910a      	str	r1, [sp, #40]	@ 0x28
 801dc56:	9210      	str	r2, [sp, #64]	@ 0x40
 801dc58:	6859      	ldr	r1, [r3, #4]
 801dc5a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801dc5e:	681b      	ldr	r3, [r3, #0]
 801dc60:	920b      	str	r2, [sp, #44]	@ 0x2c
 801dc62:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801dc66:	fb01 2707 	mla	r7, r1, r7, r2
 801dc6a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801dc6e:	9307      	str	r3, [sp, #28]
 801dc70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc72:	9011      	str	r0, [sp, #68]	@ 0x44
 801dc74:	681b      	ldr	r3, [r3, #0]
 801dc76:	9309      	str	r3, [sp, #36]	@ 0x24
 801dc78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc7a:	43db      	mvns	r3, r3
 801dc7c:	b2db      	uxtb	r3, r3
 801dc7e:	9308      	str	r3, [sp, #32]
 801dc80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc82:	2b00      	cmp	r3, #0
 801dc84:	dc03      	bgt.n	801dc8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc86:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dc88:	2b00      	cmp	r3, #0
 801dc8a:	f340 8203 	ble.w	801e094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dc8e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dc90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dc94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dc98:	1e48      	subs	r0, r1, #1
 801dc9a:	f102 3cff 	add.w	ip, r2, #4294967295
 801dc9e:	2d00      	cmp	r5, #0
 801dca0:	f340 80da 	ble.w	801de58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dca4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dca8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dcac:	d406      	bmi.n	801dcbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcae:	4586      	cmp	lr, r0
 801dcb0:	da04      	bge.n	801dcbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcb2:	2b00      	cmp	r3, #0
 801dcb4:	db02      	blt.n	801dcbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcb6:	4563      	cmp	r3, ip
 801dcb8:	f2c0 80cf 	blt.w	801de5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dcbc:	f11e 0e01 	adds.w	lr, lr, #1
 801dcc0:	f100 80c1 	bmi.w	801de46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dcc4:	4571      	cmp	r1, lr
 801dcc6:	f2c0 80be 	blt.w	801de46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dcca:	3301      	adds	r3, #1
 801dccc:	f100 80bb 	bmi.w	801de46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dcd0:	429a      	cmp	r2, r3
 801dcd2:	f2c0 80b8 	blt.w	801de46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dcd6:	46a9      	mov	r9, r5
 801dcd8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801dcdc:	f1b9 0f00 	cmp.w	r9, #0
 801dce0:	f340 80d8 	ble.w	801de94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801dce4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dce6:	1421      	asrs	r1, r4, #16
 801dce8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801dcec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dcf0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801dcf4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801dcf8:	f100 8111 	bmi.w	801df1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dcfc:	f10e 3aff 	add.w	sl, lr, #4294967295
 801dd00:	4551      	cmp	r1, sl
 801dd02:	f280 810c 	bge.w	801df1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dd06:	2800      	cmp	r0, #0
 801dd08:	f2c0 8109 	blt.w	801df1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dd0c:	f103 3aff 	add.w	sl, r3, #4294967295
 801dd10:	4550      	cmp	r0, sl
 801dd12:	f280 8104 	bge.w	801df1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dd16:	fa0f f38e 	sxth.w	r3, lr
 801dd1a:	fb00 1103 	mla	r1, r0, r3, r1
 801dd1e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801dd20:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801dd24:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801dd28:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801dd2c:	f1bc 0f00 	cmp.w	ip, #0
 801dd30:	d007      	beq.n	801dd42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801dd32:	005b      	lsls	r3, r3, #1
 801dd34:	eb0a 0003 	add.w	r0, sl, r3
 801dd38:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801dd3c:	930c      	str	r3, [sp, #48]	@ 0x30
 801dd3e:	8843      	ldrh	r3, [r0, #2]
 801dd40:	930d      	str	r3, [sp, #52]	@ 0x34
 801dd42:	fb12 f30c 	smulbb	r3, r2, ip
 801dd46:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801dd4a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dd4e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dd52:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd56:	10db      	asrs	r3, r3, #3
 801dd58:	ea40 000e 	orr.w	r0, r0, lr
 801dd5c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dd60:	f1cc 0e10 	rsb	lr, ip, #16
 801dd64:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801dd68:	ebae 0e02 	sub.w	lr, lr, r2
 801dd6c:	ea4a 0101 	orr.w	r1, sl, r1
 801dd70:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dd74:	4351      	muls	r1, r2
 801dd76:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dd7a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801dd7c:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dd80:	0410      	lsls	r0, r2, #16
 801dd82:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dd86:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dd8a:	4310      	orrs	r0, r2
 801dd8c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dd8e:	fb03 e000 	mla	r0, r3, r0, lr
 801dd92:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dd94:	0412      	lsls	r2, r2, #16
 801dd96:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801dd9a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dd9e:	ea42 020e 	orr.w	r2, r2, lr
 801dda2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dda6:	fb03 0302 	mla	r3, r3, r2, r0
 801ddaa:	f8b8 0000 	ldrh.w	r0, [r8]
 801ddae:	9f08      	ldr	r7, [sp, #32]
 801ddb0:	0d5a      	lsrs	r2, r3, #21
 801ddb2:	1201      	asrs	r1, r0, #8
 801ddb4:	095b      	lsrs	r3, r3, #5
 801ddb6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ddba:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ddbe:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ddc2:	4313      	orrs	r3, r2
 801ddc4:	fb11 f107 	smulbb	r1, r1, r7
 801ddc8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ddcc:	00c0      	lsls	r0, r0, #3
 801ddce:	b29b      	uxth	r3, r3
 801ddd0:	b2c0      	uxtb	r0, r0
 801ddd2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801ddd6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ddda:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ddde:	fb10 f007 	smulbb	r0, r0, r7
 801dde2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801dde6:	fb1e fe07 	smulbb	lr, lr, r7
 801ddea:	fb0c 1c02 	mla	ip, ip, r2, r1
 801ddee:	10d9      	asrs	r1, r3, #3
 801ddf0:	00db      	lsls	r3, r3, #3
 801ddf2:	b2db      	uxtb	r3, r3
 801ddf4:	fb03 0302 	mla	r3, r3, r2, r0
 801ddf8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ddfc:	fb01 e102 	mla	r1, r1, r2, lr
 801de00:	fa1f fc8c 	uxth.w	ip, ip
 801de04:	b29a      	uxth	r2, r3
 801de06:	f10c 0301 	add.w	r3, ip, #1
 801de0a:	b289      	uxth	r1, r1
 801de0c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801de10:	1c53      	adds	r3, r2, #1
 801de12:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de16:	1c4a      	adds	r2, r1, #1
 801de18:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801de1c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801de20:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de24:	0949      	lsrs	r1, r1, #5
 801de26:	ea43 030c 	orr.w	r3, r3, ip
 801de2a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801de2e:	430b      	orrs	r3, r1
 801de30:	f8a8 3000 	strh.w	r3, [r8]
 801de34:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801de36:	f108 0802 	add.w	r8, r8, #2
 801de3a:	441c      	add	r4, r3
 801de3c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801de3e:	f109 39ff 	add.w	r9, r9, #4294967295
 801de42:	441e      	add	r6, r3
 801de44:	e74a      	b.n	801dcdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801de46:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801de48:	3d01      	subs	r5, #1
 801de4a:	441c      	add	r4, r3
 801de4c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801de4e:	441e      	add	r6, r3
 801de50:	9b07      	ldr	r3, [sp, #28]
 801de52:	3302      	adds	r3, #2
 801de54:	9307      	str	r3, [sp, #28]
 801de56:	e722      	b.n	801dc9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801de58:	d022      	beq.n	801dea0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801de5a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801de5c:	1e6b      	subs	r3, r5, #1
 801de5e:	fb00 4003 	mla	r0, r0, r3, r4
 801de62:	1400      	asrs	r0, r0, #16
 801de64:	f53f af37 	bmi.w	801dcd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de68:	3901      	subs	r1, #1
 801de6a:	4288      	cmp	r0, r1
 801de6c:	f6bf af33 	bge.w	801dcd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de70:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801de72:	fb01 6303 	mla	r3, r1, r3, r6
 801de76:	141b      	asrs	r3, r3, #16
 801de78:	f53f af2d 	bmi.w	801dcd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de7c:	3a01      	subs	r2, #1
 801de7e:	4293      	cmp	r3, r2
 801de80:	f6bf af29 	bge.w	801dcd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801de84:	46a8      	mov	r8, r5
 801de86:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801de8a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801de8e:	f1b8 0f00 	cmp.w	r8, #0
 801de92:	dc5e      	bgt.n	801df52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801de94:	9b07      	ldr	r3, [sp, #28]
 801de96:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801de9a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801de9e:	9307      	str	r3, [sp, #28]
 801dea0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dea2:	2b00      	cmp	r3, #0
 801dea4:	f340 80f6 	ble.w	801e094 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dea8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801deac:	ee30 0a04 	vadd.f32	s0, s0, s8
 801deb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801deb4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801deb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801debc:	eef0 6a62 	vmov.f32	s13, s5
 801dec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dec4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dec8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801decc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ded0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ded4:	ee16 4a90 	vmov	r4, s13
 801ded8:	eef0 6a43 	vmov.f32	s13, s6
 801dedc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dee0:	ee12 2a90 	vmov	r2, s5
 801dee4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dee8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801deea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801deee:	fb92 f3f3 	sdiv	r3, r2, r3
 801def2:	ee13 2a10 	vmov	r2, s6
 801def6:	931f      	str	r3, [sp, #124]	@ 0x7c
 801def8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801defa:	ee16 6a90 	vmov	r6, s13
 801defe:	fb92 f3f3 	sdiv	r3, r2, r3
 801df02:	9320      	str	r3, [sp, #128]	@ 0x80
 801df04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801df06:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801df08:	3b01      	subs	r3, #1
 801df0a:	930a      	str	r3, [sp, #40]	@ 0x28
 801df0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801df0e:	bf0c      	ite	eq
 801df10:	4615      	moveq	r5, r2
 801df12:	461d      	movne	r5, r3
 801df14:	eeb0 3a67 	vmov.f32	s6, s15
 801df18:	eef0 2a47 	vmov.f32	s5, s14
 801df1c:	e6b0      	b.n	801dc80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801df1e:	f111 0a01 	adds.w	sl, r1, #1
 801df22:	d487      	bmi.n	801de34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df24:	45d6      	cmp	lr, sl
 801df26:	db85      	blt.n	801de34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df28:	f110 0a01 	adds.w	sl, r0, #1
 801df2c:	d482      	bmi.n	801de34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df2e:	4553      	cmp	r3, sl
 801df30:	db80      	blt.n	801de34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df32:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801df34:	b21b      	sxth	r3, r3
 801df36:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801df3a:	9101      	str	r1, [sp, #4]
 801df3c:	9300      	str	r3, [sp, #0]
 801df3e:	e9cd c704 	strd	ip, r7, [sp, #16]
 801df42:	fa0f f38e 	sxth.w	r3, lr
 801df46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801df48:	4641      	mov	r1, r8
 801df4a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801df4c:	f7ff fdb4 	bl	801dab8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801df50:	e770      	b.n	801de34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801df52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801df54:	1430      	asrs	r0, r6, #16
 801df56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df5a:	1423      	asrs	r3, r4, #16
 801df5c:	fb01 3000 	mla	r0, r1, r0, r3
 801df60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801df62:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801df64:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801df68:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801df6c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801df70:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801df74:	8858      	ldrh	r0, [r3, #2]
 801df76:	f1be 0f00 	cmp.w	lr, #0
 801df7a:	d00b      	beq.n	801df94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801df7c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801df80:	3901      	subs	r1, #1
 801df82:	0049      	lsls	r1, r1, #1
 801df84:	3102      	adds	r1, #2
 801df86:	eb03 0b01 	add.w	fp, r3, r1
 801df8a:	5a5b      	ldrh	r3, [r3, r1]
 801df8c:	930e      	str	r3, [sp, #56]	@ 0x38
 801df8e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801df92:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df94:	fb12 f30e 	smulbb	r3, r2, lr
 801df98:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801df9c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dfa0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dfa4:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801dfa8:	10db      	asrs	r3, r3, #3
 801dfaa:	ea41 010c 	orr.w	r1, r1, ip
 801dfae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dfb2:	f1ce 0c10 	rsb	ip, lr, #16
 801dfb6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dfba:	ebac 0c02 	sub.w	ip, ip, r2
 801dfbe:	ea4b 0000 	orr.w	r0, fp, r0
 801dfc2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dfc6:	4350      	muls	r0, r2
 801dfc8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dfcc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801dfce:	fb0c 0c01 	mla	ip, ip, r1, r0
 801dfd2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dfd6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dfda:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801dfde:	ea4b 0101 	orr.w	r1, fp, r1
 801dfe2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801dfe4:	fb03 c101 	mla	r1, r3, r1, ip
 801dfe8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801dfea:	0412      	lsls	r2, r2, #16
 801dfec:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dff0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dff4:	4302      	orrs	r2, r0
 801dff6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dffa:	fb03 1202 	mla	r2, r3, r2, r1
 801dffe:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e002:	0952      	lsrs	r2, r2, #5
 801e004:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801e008:	f8b9 2000 	ldrh.w	r2, [r9]
 801e00c:	9f08      	ldr	r7, [sp, #32]
 801e00e:	1211      	asrs	r1, r2, #8
 801e010:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801e014:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e018:	fb11 f107 	smulbb	r1, r1, r7
 801e01c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e020:	ea4b 0303 	orr.w	r3, fp, r3
 801e024:	00d2      	lsls	r2, r2, #3
 801e026:	b29b      	uxth	r3, r3
 801e028:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801e02c:	b2d2      	uxtb	r2, r2
 801e02e:	1218      	asrs	r0, r3, #8
 801e030:	fb1c fc07 	smulbb	ip, ip, r7
 801e034:	fb12 f207 	smulbb	r2, r2, r7
 801e038:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e03c:	fb00 100a 	mla	r0, r0, sl, r1
 801e040:	10d9      	asrs	r1, r3, #3
 801e042:	00db      	lsls	r3, r3, #3
 801e044:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e048:	b2db      	uxtb	r3, r3
 801e04a:	fb01 c10a 	mla	r1, r1, sl, ip
 801e04e:	fb03 230a 	mla	r3, r3, sl, r2
 801e052:	b280      	uxth	r0, r0
 801e054:	b29b      	uxth	r3, r3
 801e056:	b289      	uxth	r1, r1
 801e058:	1c42      	adds	r2, r0, #1
 801e05a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e05e:	f101 0c01 	add.w	ip, r1, #1
 801e062:	1c5a      	adds	r2, r3, #1
 801e064:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e068:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e06c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e06e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e072:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e076:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e07a:	4310      	orrs	r0, r2
 801e07c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e080:	441c      	add	r4, r3
 801e082:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e084:	ea40 000c 	orr.w	r0, r0, ip
 801e088:	f829 0b02 	strh.w	r0, [r9], #2
 801e08c:	441e      	add	r6, r3
 801e08e:	f108 38ff 	add.w	r8, r8, #4294967295
 801e092:	e6fc      	b.n	801de8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e094:	b013      	add	sp, #76	@ 0x4c
 801e096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e09a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e09a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e09e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e0a2:	fb0e 4703 	mla	r7, lr, r3, r4
 801e0a6:	f1be 0f00 	cmp.w	lr, #0
 801e0aa:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e0ae:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801e0b2:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801e0b6:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e0ba:	8808      	ldrh	r0, [r1, #0]
 801e0bc:	db60      	blt.n	801e180 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e0be:	45f1      	cmp	r9, lr
 801e0c0:	dd5e      	ble.n	801e180 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e0c2:	2c00      	cmp	r4, #0
 801e0c4:	db5a      	blt.n	801e17c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e0c6:	42a3      	cmp	r3, r4
 801e0c8:	dd58      	ble.n	801e17c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e0ca:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e0ce:	1c62      	adds	r2, r4, #1
 801e0d0:	d459      	bmi.n	801e186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e0d2:	4293      	cmp	r3, r2
 801e0d4:	dd57      	ble.n	801e186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e0d6:	2d00      	cmp	r5, #0
 801e0d8:	d055      	beq.n	801e186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e0da:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e0de:	f11e 0e01 	adds.w	lr, lr, #1
 801e0e2:	d454      	bmi.n	801e18e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0e4:	45f1      	cmp	r9, lr
 801e0e6:	dd52      	ble.n	801e18e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0e8:	2e00      	cmp	r6, #0
 801e0ea:	d050      	beq.n	801e18e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e0ec:	2c00      	cmp	r4, #0
 801e0ee:	db4c      	blt.n	801e18a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e0f0:	42a3      	cmp	r3, r4
 801e0f2:	dd4a      	ble.n	801e18a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e0f4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e0f8:	3401      	adds	r4, #1
 801e0fa:	d405      	bmi.n	801e108 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e0fc:	42a3      	cmp	r3, r4
 801e0fe:	dd03      	ble.n	801e108 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e100:	b115      	cbz	r5, 801e108 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e102:	3301      	adds	r3, #1
 801e104:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e108:	fb15 f406 	smulbb	r4, r5, r6
 801e10c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e110:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e114:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e118:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e11c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e120:	ea43 0c0c 	orr.w	ip, r3, ip
 801e124:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e128:	f1c6 0310 	rsb	r3, r6, #16
 801e12c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e130:	1b5b      	subs	r3, r3, r5
 801e132:	ea4e 0707 	orr.w	r7, lr, r7
 801e136:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e13a:	437d      	muls	r5, r7
 801e13c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e140:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e144:	0403      	lsls	r3, r0, #16
 801e146:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e14a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e14e:	4318      	orrs	r0, r3
 801e150:	fb04 c000 	mla	r0, r4, r0, ip
 801e154:	0413      	lsls	r3, r2, #16
 801e156:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e15a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e15e:	4313      	orrs	r3, r2
 801e160:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e164:	fb06 0003 	mla	r0, r6, r3, r0
 801e168:	0d43      	lsrs	r3, r0, #21
 801e16a:	0940      	lsrs	r0, r0, #5
 801e16c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e170:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e174:	4318      	orrs	r0, r3
 801e176:	8008      	strh	r0, [r1, #0]
 801e178:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e17c:	4684      	mov	ip, r0
 801e17e:	e7a6      	b.n	801e0ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e180:	4607      	mov	r7, r0
 801e182:	4684      	mov	ip, r0
 801e184:	e7ab      	b.n	801e0de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e186:	4607      	mov	r7, r0
 801e188:	e7a9      	b.n	801e0de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e18a:	4602      	mov	r2, r0
 801e18c:	e7b4      	b.n	801e0f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e18e:	4602      	mov	r2, r0
 801e190:	e7ba      	b.n	801e108 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e192 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e192:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e196:	b08f      	sub	sp, #60	@ 0x3c
 801e198:	461d      	mov	r5, r3
 801e19a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801e19e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e1a0:	9107      	str	r1, [sp, #28]
 801e1a2:	6859      	ldr	r1, [r3, #4]
 801e1a4:	920c      	str	r2, [sp, #48]	@ 0x30
 801e1a6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801e1aa:	fb01 2707 	mla	r7, r1, r7, r2
 801e1ae:	681b      	ldr	r3, [r3, #0]
 801e1b0:	900d      	str	r0, [sp, #52]	@ 0x34
 801e1b2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e1b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e1b8:	f8d3 8000 	ldr.w	r8, [r3]
 801e1bc:	9b07      	ldr	r3, [sp, #28]
 801e1be:	2b00      	cmp	r3, #0
 801e1c0:	dc03      	bgt.n	801e1ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e1c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e1c4:	2b00      	cmp	r3, #0
 801e1c6:	f340 8181 	ble.w	801e4cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e1ca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e1cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e1d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e1d4:	1e48      	subs	r0, r1, #1
 801e1d6:	f102 3cff 	add.w	ip, r2, #4294967295
 801e1da:	2d00      	cmp	r5, #0
 801e1dc:	f340 809b 	ble.w	801e316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e1e0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e1e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e1e8:	d406      	bmi.n	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1ea:	4586      	cmp	lr, r0
 801e1ec:	da04      	bge.n	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1ee:	2b00      	cmp	r3, #0
 801e1f0:	db02      	blt.n	801e1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e1f2:	4563      	cmp	r3, ip
 801e1f4:	f2c0 8090 	blt.w	801e318 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e1f8:	f11e 0e01 	adds.w	lr, lr, #1
 801e1fc:	f100 8084 	bmi.w	801e308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e200:	4571      	cmp	r1, lr
 801e202:	f2c0 8081 	blt.w	801e308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e206:	3301      	adds	r3, #1
 801e208:	d47e      	bmi.n	801e308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e20a:	429a      	cmp	r2, r3
 801e20c:	db7c      	blt.n	801e308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e20e:	46aa      	mov	sl, r5
 801e210:	46b9      	mov	r9, r7
 801e212:	f1ba 0f00 	cmp.w	sl, #0
 801e216:	f340 8099 	ble.w	801e34c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e21a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e21c:	1421      	asrs	r1, r4, #16
 801e21e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e222:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e226:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e22a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e22e:	f100 80d0 	bmi.w	801e3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e232:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e236:	4559      	cmp	r1, fp
 801e238:	f280 80cb 	bge.w	801e3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e23c:	2800      	cmp	r0, #0
 801e23e:	f2c0 80c8 	blt.w	801e3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e242:	f103 3bff 	add.w	fp, r3, #4294967295
 801e246:	4558      	cmp	r0, fp
 801e248:	f280 80c3 	bge.w	801e3d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e24c:	fa0f fe8e 	sxth.w	lr, lr
 801e250:	fb00 110e 	mla	r1, r0, lr, r1
 801e254:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e258:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e25c:	8841      	ldrh	r1, [r0, #2]
 801e25e:	f1bc 0f00 	cmp.w	ip, #0
 801e262:	d00b      	beq.n	801e27c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e264:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801e268:	3b01      	subs	r3, #1
 801e26a:	005b      	lsls	r3, r3, #1
 801e26c:	3302      	adds	r3, #2
 801e26e:	eb00 0e03 	add.w	lr, r0, r3
 801e272:	5ac3      	ldrh	r3, [r0, r3]
 801e274:	9308      	str	r3, [sp, #32]
 801e276:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e27a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e27c:	fb12 f30c 	smulbb	r3, r2, ip
 801e280:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e284:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e288:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e28c:	ea40 000b 	orr.w	r0, r0, fp
 801e290:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e294:	10db      	asrs	r3, r3, #3
 801e296:	f1cc 0e10 	rsb	lr, ip, #16
 801e29a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e29e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e2a2:	ebae 0e02 	sub.w	lr, lr, r2
 801e2a6:	ea4b 0101 	orr.w	r1, fp, r1
 801e2aa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e2ae:	4351      	muls	r1, r2
 801e2b0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e2b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e2b6:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e2ba:	0410      	lsls	r0, r2, #16
 801e2bc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e2c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e2c4:	4310      	orrs	r0, r2
 801e2c6:	9a08      	ldr	r2, [sp, #32]
 801e2c8:	fb03 e000 	mla	r0, r3, r0, lr
 801e2cc:	9908      	ldr	r1, [sp, #32]
 801e2ce:	0412      	lsls	r2, r2, #16
 801e2d0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e2d4:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e2d8:	ea42 020e 	orr.w	r2, r2, lr
 801e2dc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e2e0:	fb03 0302 	mla	r3, r3, r2, r0
 801e2e4:	0d5a      	lsrs	r2, r3, #21
 801e2e6:	095b      	lsrs	r3, r3, #5
 801e2e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2ec:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e2f0:	4313      	orrs	r3, r2
 801e2f2:	f8a9 3000 	strh.w	r3, [r9]
 801e2f6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e2f8:	f109 0902 	add.w	r9, r9, #2
 801e2fc:	441c      	add	r4, r3
 801e2fe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e300:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e304:	441e      	add	r6, r3
 801e306:	e784      	b.n	801e212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e308:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e30a:	3d01      	subs	r5, #1
 801e30c:	441c      	add	r4, r3
 801e30e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e310:	3702      	adds	r7, #2
 801e312:	441e      	add	r6, r3
 801e314:	e761      	b.n	801e1da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e316:	d01d      	beq.n	801e354 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e318:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e31a:	1e6b      	subs	r3, r5, #1
 801e31c:	fb00 4003 	mla	r0, r0, r3, r4
 801e320:	1400      	asrs	r0, r0, #16
 801e322:	f53f af74 	bmi.w	801e20e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e326:	3901      	subs	r1, #1
 801e328:	4288      	cmp	r0, r1
 801e32a:	f6bf af70 	bge.w	801e20e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e32e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801e330:	fb01 6303 	mla	r3, r1, r3, r6
 801e334:	141b      	asrs	r3, r3, #16
 801e336:	f53f af6a 	bmi.w	801e20e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e33a:	3a01      	subs	r2, #1
 801e33c:	4293      	cmp	r3, r2
 801e33e:	f6bf af66 	bge.w	801e20e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e342:	46a9      	mov	r9, r5
 801e344:	46ba      	mov	sl, r7
 801e346:	f1b9 0f00 	cmp.w	r9, #0
 801e34a:	dc5a      	bgt.n	801e402 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e34c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e350:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e354:	9b07      	ldr	r3, [sp, #28]
 801e356:	2b00      	cmp	r3, #0
 801e358:	f340 80b8 	ble.w	801e4cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e35c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e360:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e364:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e368:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e36c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e370:	eef0 6a62 	vmov.f32	s13, s5
 801e374:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e378:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e37c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e380:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e384:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e388:	ee16 4a90 	vmov	r4, s13
 801e38c:	eef0 6a43 	vmov.f32	s13, s6
 801e390:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e394:	ee12 2a90 	vmov	r2, s5
 801e398:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e39c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e39e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3a6:	ee13 2a10 	vmov	r2, s6
 801e3aa:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e3ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e3ae:	ee16 6a90 	vmov	r6, s13
 801e3b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3b6:	931c      	str	r3, [sp, #112]	@ 0x70
 801e3b8:	9b07      	ldr	r3, [sp, #28]
 801e3ba:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e3bc:	3b01      	subs	r3, #1
 801e3be:	9307      	str	r3, [sp, #28]
 801e3c0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e3c2:	bf0c      	ite	eq
 801e3c4:	4615      	moveq	r5, r2
 801e3c6:	461d      	movne	r5, r3
 801e3c8:	eeb0 3a67 	vmov.f32	s6, s15
 801e3cc:	eef0 2a47 	vmov.f32	s5, s14
 801e3d0:	e6f4      	b.n	801e1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e3d2:	f111 0b01 	adds.w	fp, r1, #1
 801e3d6:	d48e      	bmi.n	801e2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3d8:	45de      	cmp	lr, fp
 801e3da:	db8c      	blt.n	801e2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3dc:	f110 0b01 	adds.w	fp, r0, #1
 801e3e0:	d489      	bmi.n	801e2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3e2:	455b      	cmp	r3, fp
 801e3e4:	db87      	blt.n	801e2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3e6:	b21b      	sxth	r3, r3
 801e3e8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e3ec:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e3f0:	9300      	str	r3, [sp, #0]
 801e3f2:	4642      	mov	r2, r8
 801e3f4:	fa0f f38e 	sxth.w	r3, lr
 801e3f8:	4649      	mov	r1, r9
 801e3fa:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801e3fc:	f7ff fe4d 	bl	801e09a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e400:	e779      	b.n	801e2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e402:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e404:	1420      	asrs	r0, r4, #16
 801e406:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e40a:	1431      	asrs	r1, r6, #16
 801e40c:	fb03 0101 	mla	r1, r3, r1, r0
 801e410:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e414:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e418:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e41c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e420:	8841      	ldrh	r1, [r0, #2]
 801e422:	f1be 0f00 	cmp.w	lr, #0
 801e426:	d00b      	beq.n	801e440 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e428:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e42c:	3b01      	subs	r3, #1
 801e42e:	005b      	lsls	r3, r3, #1
 801e430:	3302      	adds	r3, #2
 801e432:	eb00 0b03 	add.w	fp, r0, r3
 801e436:	5ac3      	ldrh	r3, [r0, r3]
 801e438:	930a      	str	r3, [sp, #40]	@ 0x28
 801e43a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e43e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e440:	fb12 f30e 	smulbb	r3, r2, lr
 801e444:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e448:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e44c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e450:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e454:	10db      	asrs	r3, r3, #3
 801e456:	ea40 000c 	orr.w	r0, r0, ip
 801e45a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e45e:	f1ce 0c10 	rsb	ip, lr, #16
 801e462:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e466:	ebac 0c02 	sub.w	ip, ip, r2
 801e46a:	ea4b 0101 	orr.w	r1, fp, r1
 801e46e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e472:	4351      	muls	r1, r2
 801e474:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e478:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e47a:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e47e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e482:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e486:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e48a:	ea4b 0000 	orr.w	r0, fp, r0
 801e48e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e490:	fb03 c000 	mla	r0, r3, r0, ip
 801e494:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e496:	0412      	lsls	r2, r2, #16
 801e498:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e49c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e4a0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e4a4:	ea42 0b0b 	orr.w	fp, r2, fp
 801e4a8:	fb03 000b 	mla	r0, r3, fp, r0
 801e4ac:	0d43      	lsrs	r3, r0, #21
 801e4ae:	0940      	lsrs	r0, r0, #5
 801e4b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e4b4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e4b8:	4318      	orrs	r0, r3
 801e4ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e4bc:	f82a 0b02 	strh.w	r0, [sl], #2
 801e4c0:	441c      	add	r4, r3
 801e4c2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e4c4:	f109 39ff 	add.w	r9, r9, #4294967295
 801e4c8:	441e      	add	r6, r3
 801e4ca:	e73c      	b.n	801e346 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e4cc:	b00f      	add	sp, #60	@ 0x3c
 801e4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e4d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e4d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d6:	b085      	sub	sp, #20
 801e4d8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e4dc:	9102      	str	r1, [sp, #8]
 801e4de:	fb04 7103 	mla	r1, r4, r3, r7
 801e4e2:	2c00      	cmp	r4, #0
 801e4e4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e4e8:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e4ec:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e4f0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e4f4:	f2c0 811b 	blt.w	801e72e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e4f8:	45a6      	cmp	lr, r4
 801e4fa:	f340 8118 	ble.w	801e72e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e4fe:	2f00      	cmp	r7, #0
 801e500:	f2c0 8113 	blt.w	801e72a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e504:	42bb      	cmp	r3, r7
 801e506:	f340 8110 	ble.w	801e72a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e50a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e50e:	1c7a      	adds	r2, r7, #1
 801e510:	f100 8110 	bmi.w	801e734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e514:	4293      	cmp	r3, r2
 801e516:	f340 810d 	ble.w	801e734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e51a:	2e00      	cmp	r6, #0
 801e51c:	f000 810c 	beq.w	801e738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e520:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e524:	3401      	adds	r4, #1
 801e526:	f100 810b 	bmi.w	801e740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e52a:	45a6      	cmp	lr, r4
 801e52c:	f340 8108 	ble.w	801e740 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e530:	2800      	cmp	r0, #0
 801e532:	f000 8108 	beq.w	801e746 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e536:	2f00      	cmp	r7, #0
 801e538:	f2c0 8100 	blt.w	801e73c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e53c:	42bb      	cmp	r3, r7
 801e53e:	f340 80fd 	ble.w	801e73c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e542:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e546:	3701      	adds	r7, #1
 801e548:	f100 8100 	bmi.w	801e74c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e54c:	42bb      	cmp	r3, r7
 801e54e:	f340 80fd 	ble.w	801e74c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e552:	2e00      	cmp	r6, #0
 801e554:	f000 80fc 	beq.w	801e750 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e558:	3301      	adds	r3, #1
 801e55a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e55e:	b2b6      	uxth	r6, r6
 801e560:	b280      	uxth	r0, r0
 801e562:	fb00 fe06 	mul.w	lr, r0, r6
 801e566:	0136      	lsls	r6, r6, #4
 801e568:	eba6 070e 	sub.w	r7, r6, lr
 801e56c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e570:	b2bf      	uxth	r7, r7
 801e572:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e576:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e57a:	fb0a f607 	mul.w	r6, sl, r7
 801e57e:	b280      	uxth	r0, r0
 801e580:	1a1b      	subs	r3, r3, r0
 801e582:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e586:	b29b      	uxth	r3, r3
 801e588:	fb0b 6603 	mla	r6, fp, r3, r6
 801e58c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e590:	fb00 6609 	mla	r6, r0, r9, r6
 801e594:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e598:	fb0e 6608 	mla	r6, lr, r8, r6
 801e59c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e5a0:	9600      	str	r6, [sp, #0]
 801e5a2:	2e00      	cmp	r6, #0
 801e5a4:	f000 80be 	beq.w	801e724 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e5a8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e5ac:	fb0b fc0c 	mul.w	ip, fp, ip
 801e5b0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e5b4:	fb0b f505 	mul.w	r5, fp, r5
 801e5b8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e5bc:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e5c0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e5c4:	44dc      	add	ip, fp
 801e5c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5ca:	9501      	str	r5, [sp, #4]
 801e5cc:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e5d0:	9503      	str	r5, [sp, #12]
 801e5d2:	9d01      	ldr	r5, [sp, #4]
 801e5d4:	9e02      	ldr	r6, [sp, #8]
 801e5d6:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e5da:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e5de:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e5e2:	fb0a fc0c 	mul.w	ip, sl, ip
 801e5e6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e5ea:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e5ee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e5f2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e5f6:	4465      	add	r5, ip
 801e5f8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e5fc:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e600:	fb09 fc0c 	mul.w	ip, r9, ip
 801e604:	fb09 f904 	mul.w	r9, r9, r4
 801e608:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e60c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e610:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e614:	fb08 f404 	mul.w	r4, r8, r4
 801e618:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e61c:	fb08 f802 	mul.w	r8, r8, r2
 801e620:	0a2d      	lsrs	r5, r5, #8
 801e622:	0a22      	lsrs	r2, r4, #8
 801e624:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e628:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e62c:	437d      	muls	r5, r7
 801e62e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e632:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e636:	4414      	add	r4, r2
 801e638:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e63c:	fb0a fa01 	mul.w	sl, sl, r1
 801e640:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e644:	9a03      	ldr	r2, [sp, #12]
 801e646:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e64a:	fb02 5503 	mla	r5, r2, r3, r5
 801e64e:	0a24      	lsrs	r4, r4, #8
 801e650:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e654:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e658:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e65c:	fb04 540e 	mla	r4, r4, lr, r5
 801e660:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e664:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e668:	4461      	add	r1, ip
 801e66a:	0a09      	lsrs	r1, r1, #8
 801e66c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e670:	fb01 4100 	mla	r1, r1, r0, r4
 801e674:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e678:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e67c:	fb07 f70a 	mul.w	r7, r7, sl
 801e680:	0a09      	lsrs	r1, r1, #8
 801e682:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e686:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e68a:	fb03 7101 	mla	r1, r3, r1, r7
 801e68e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e692:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e696:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e69a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e69e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e6a2:	fb00 e101 	mla	r1, r0, r1, lr
 801e6a6:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e6aa:	9a00      	ldr	r2, [sp, #0]
 801e6ac:	b287      	uxth	r7, r0
 801e6ae:	437a      	muls	r2, r7
 801e6b0:	1c53      	adds	r3, r2, #1
 801e6b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e6b6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e6ba:	0a09      	lsrs	r1, r1, #8
 801e6bc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e6c0:	4321      	orrs	r1, r4
 801e6c2:	0c0a      	lsrs	r2, r1, #16
 801e6c4:	8836      	ldrh	r6, [r6, #0]
 801e6c6:	fb12 f207 	smulbb	r2, r2, r7
 801e6ca:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e6ce:	b2c8      	uxtb	r0, r1
 801e6d0:	1235      	asrs	r5, r6, #8
 801e6d2:	fb14 f407 	smulbb	r4, r4, r7
 801e6d6:	fb10 f007 	smulbb	r0, r0, r7
 801e6da:	b2db      	uxtb	r3, r3
 801e6dc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e6e0:	fb05 2503 	mla	r5, r5, r3, r2
 801e6e4:	10f2      	asrs	r2, r6, #3
 801e6e6:	00f6      	lsls	r6, r6, #3
 801e6e8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e6ec:	b2f6      	uxtb	r6, r6
 801e6ee:	fb02 4203 	mla	r2, r2, r3, r4
 801e6f2:	fb06 0303 	mla	r3, r6, r3, r0
 801e6f6:	b2ad      	uxth	r5, r5
 801e6f8:	b299      	uxth	r1, r3
 801e6fa:	b294      	uxth	r4, r2
 801e6fc:	1c6b      	adds	r3, r5, #1
 801e6fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e702:	1c62      	adds	r2, r4, #1
 801e704:	1c4b      	adds	r3, r1, #1
 801e706:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e70a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e70e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e712:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e716:	0952      	lsrs	r2, r2, #5
 801e718:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e71c:	432b      	orrs	r3, r5
 801e71e:	4313      	orrs	r3, r2
 801e720:	9a02      	ldr	r2, [sp, #8]
 801e722:	8013      	strh	r3, [r2, #0]
 801e724:	b005      	add	sp, #20
 801e726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e72a:	2500      	movs	r5, #0
 801e72c:	e6ef      	b.n	801e50e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e72e:	2100      	movs	r1, #0
 801e730:	460d      	mov	r5, r1
 801e732:	e6f7      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e734:	2100      	movs	r1, #0
 801e736:	e6f5      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e738:	4631      	mov	r1, r6
 801e73a:	e6f3      	b.n	801e524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e73c:	2400      	movs	r4, #0
 801e73e:	e702      	b.n	801e546 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e740:	2200      	movs	r2, #0
 801e742:	4614      	mov	r4, r2
 801e744:	e70b      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e746:	4602      	mov	r2, r0
 801e748:	4604      	mov	r4, r0
 801e74a:	e708      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e74c:	2200      	movs	r2, #0
 801e74e:	e706      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e750:	4632      	mov	r2, r6
 801e752:	e704      	b.n	801e55e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e758:	b09d      	sub	sp, #116	@ 0x74
 801e75a:	9219      	str	r2, [sp, #100]	@ 0x64
 801e75c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e75e:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e760:	9307      	str	r3, [sp, #28]
 801e762:	6850      	ldr	r0, [r2, #4]
 801e764:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e768:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e76a:	931a      	str	r3, [sp, #104]	@ 0x68
 801e76c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e770:	fb00 1303 	mla	r3, r0, r3, r1
 801e774:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e778:	6812      	ldr	r2, [r2, #0]
 801e77a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e77e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e780:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e782:	681b      	ldr	r3, [r3, #0]
 801e784:	9310      	str	r3, [sp, #64]	@ 0x40
 801e786:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e78a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e78c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e78e:	2b00      	cmp	r3, #0
 801e790:	dc03      	bgt.n	801e79a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e792:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e794:	2b00      	cmp	r3, #0
 801e796:	f340 8375 	ble.w	801ee84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e79a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e79c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e7a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e7a4:	1e48      	subs	r0, r1, #1
 801e7a6:	1e57      	subs	r7, r2, #1
 801e7a8:	9b07      	ldr	r3, [sp, #28]
 801e7aa:	2b00      	cmp	r3, #0
 801e7ac:	f340 818e 	ble.w	801eacc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e7b0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e7b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e7b8:	d406      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e7ba:	4584      	cmp	ip, r0
 801e7bc:	da04      	bge.n	801e7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e7be:	2b00      	cmp	r3, #0
 801e7c0:	db02      	blt.n	801e7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e7c2:	42bb      	cmp	r3, r7
 801e7c4:	f2c0 8183 	blt.w	801eace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e7c8:	f11c 0c01 	adds.w	ip, ip, #1
 801e7cc:	f100 8173 	bmi.w	801eab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e7d0:	4561      	cmp	r1, ip
 801e7d2:	f2c0 8170 	blt.w	801eab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e7d6:	3301      	adds	r3, #1
 801e7d8:	f100 816d 	bmi.w	801eab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e7dc:	429a      	cmp	r2, r3
 801e7de:	f2c0 816a 	blt.w	801eab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e7e2:	9b07      	ldr	r3, [sp, #28]
 801e7e4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e7e6:	9318      	str	r3, [sp, #96]	@ 0x60
 801e7e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e7ea:	2b00      	cmp	r3, #0
 801e7ec:	f340 818c 	ble.w	801eb08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e7f0:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e7f2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e7f4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e7f8:	1422      	asrs	r2, r4, #16
 801e7fa:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e7fe:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e802:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e806:	689b      	ldr	r3, [r3, #8]
 801e808:	f100 81cd 	bmi.w	801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e80c:	f103 38ff 	add.w	r8, r3, #4294967295
 801e810:	4542      	cmp	r2, r8
 801e812:	f280 81c8 	bge.w	801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e816:	f1bc 0f00 	cmp.w	ip, #0
 801e81a:	f2c0 81c4 	blt.w	801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e81e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e822:	45c4      	cmp	ip, r8
 801e824:	f280 81bf 	bge.w	801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e828:	b21b      	sxth	r3, r3
 801e82a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e82e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e830:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e834:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e838:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e83c:	2800      	cmp	r0, #0
 801e83e:	f000 81a9 	beq.w	801eb94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e842:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e846:	950c      	str	r5, [sp, #48]	@ 0x30
 801e848:	0e2d      	lsrs	r5, r5, #24
 801e84a:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e84c:	b181      	cbz	r1, 801e870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e84e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e852:	3b01      	subs	r3, #1
 801e854:	009b      	lsls	r3, r3, #2
 801e856:	3304      	adds	r3, #4
 801e858:	eb08 0c03 	add.w	ip, r8, r3
 801e85c:	f858 3003 	ldr.w	r3, [r8, r3]
 801e860:	9308      	str	r3, [sp, #32]
 801e862:	0e1b      	lsrs	r3, r3, #24
 801e864:	9311      	str	r3, [sp, #68]	@ 0x44
 801e866:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e86a:	930d      	str	r3, [sp, #52]	@ 0x34
 801e86c:	0e1b      	lsrs	r3, r3, #24
 801e86e:	9314      	str	r3, [sp, #80]	@ 0x50
 801e870:	b280      	uxth	r0, r0
 801e872:	b289      	uxth	r1, r1
 801e874:	fb00 f901 	mul.w	r9, r0, r1
 801e878:	0100      	lsls	r0, r0, #4
 801e87a:	eba0 0809 	sub.w	r8, r0, r9
 801e87e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e882:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e884:	fa1f f888 	uxth.w	r8, r8
 801e888:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e88c:	fb08 f000 	mul.w	r0, r8, r0
 801e890:	b289      	uxth	r1, r1
 801e892:	1a5b      	subs	r3, r3, r1
 801e894:	b29b      	uxth	r3, r3
 801e896:	fb03 000e 	mla	r0, r3, lr, r0
 801e89a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e89c:	fb01 0005 	mla	r0, r1, r5, r0
 801e8a0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e8a2:	fb09 0005 	mla	r0, r9, r5, r0
 801e8a6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e8aa:	2800      	cmp	r0, #0
 801e8ac:	f000 80fa 	beq.w	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e8b0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e8b4:	d01b      	beq.n	801e8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e8b6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e8ba:	fb0e fa0a 	mul.w	sl, lr, sl
 801e8be:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e8c2:	fb0e fe02 	mul.w	lr, lr, r2
 801e8c6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e8ca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e8ce:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e8d2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e8d6:	4452      	add	r2, sl
 801e8d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e8dc:	0a12      	lsrs	r2, r2, #8
 801e8de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8e2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e8e6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e8ea:	ea42 020c 	orr.w	r2, r2, ip
 801e8ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e8f0:	2dff      	cmp	r5, #255	@ 0xff
 801e8f2:	d021      	beq.n	801e938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e8f4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e8f6:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e8fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e8fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e900:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e902:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e906:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e90a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e90c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e910:	fb05 fa0a 	mul.w	sl, r5, sl
 801e914:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e918:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e91c:	44de      	add	lr, fp
 801e91e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e922:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e926:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e92a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e92e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e932:	ea4e 050a 	orr.w	r5, lr, sl
 801e936:	950c      	str	r5, [sp, #48]	@ 0x30
 801e938:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e93a:	2dff      	cmp	r5, #255	@ 0xff
 801e93c:	d021      	beq.n	801e982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e93e:	9d08      	ldr	r5, [sp, #32]
 801e940:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e944:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e946:	fb05 fb0b 	mul.w	fp, r5, fp
 801e94a:	9d08      	ldr	r5, [sp, #32]
 801e94c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e950:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e954:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e956:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e95a:	fb05 fa0a 	mul.w	sl, r5, sl
 801e95e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e962:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e966:	44de      	add	lr, fp
 801e968:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e96c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e970:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e974:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e978:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e97c:	ea4e 050a 	orr.w	r5, lr, sl
 801e980:	9508      	str	r5, [sp, #32]
 801e982:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e984:	2dff      	cmp	r5, #255	@ 0xff
 801e986:	d021      	beq.n	801e9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e988:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e98a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e98e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e990:	fb05 fb0b 	mul.w	fp, r5, fp
 801e994:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e996:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e99a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e99e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e9a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e9a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801e9a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e9ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e9b0:	44de      	add	lr, fp
 801e9b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e9b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e9ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e9c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e9c6:	ea4e 050a 	orr.w	r5, lr, sl
 801e9ca:	950d      	str	r5, [sp, #52]	@ 0x34
 801e9cc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e9ce:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e9d2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e9d6:	fb08 fc0c 	mul.w	ip, r8, ip
 801e9da:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e9de:	9d08      	ldr	r5, [sp, #32]
 801e9e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e9e4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e9e8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e9ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e9ee:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e9f2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e9f4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e9f8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e9fc:	fb08 f80e 	mul.w	r8, r8, lr
 801ea00:	fb03 8202 	mla	r2, r3, r2, r8
 801ea04:	9b08      	ldr	r3, [sp, #32]
 801ea06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea0a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801ea0e:	fb01 220a 	mla	r2, r1, sl, r2
 801ea12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ea14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ea18:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801ea1c:	fb09 2901 	mla	r9, r9, r1, r2
 801ea20:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ea22:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ea26:	4342      	muls	r2, r0
 801ea28:	1c50      	adds	r0, r2, #1
 801ea2a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ea2e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ea32:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ea36:	ea4c 0c09 	orr.w	ip, ip, r9
 801ea3a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ea3c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ea40:	883b      	ldrh	r3, [r7, #0]
 801ea42:	fb12 f205 	smulbb	r2, r2, r5
 801ea46:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ea4a:	fa5f fc8c 	uxtb.w	ip, ip
 801ea4e:	1219      	asrs	r1, r3, #8
 801ea50:	fb1c fc05 	smulbb	ip, ip, r5
 801ea54:	b2c0      	uxtb	r0, r0
 801ea56:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea5a:	fb01 2100 	mla	r1, r1, r0, r2
 801ea5e:	10da      	asrs	r2, r3, #3
 801ea60:	00db      	lsls	r3, r3, #3
 801ea62:	fb1e fe05 	smulbb	lr, lr, r5
 801ea66:	b2db      	uxtb	r3, r3
 801ea68:	fb03 c300 	mla	r3, r3, r0, ip
 801ea6c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ea70:	b289      	uxth	r1, r1
 801ea72:	fb02 e200 	mla	r2, r2, r0, lr
 801ea76:	fa1f fc83 	uxth.w	ip, r3
 801ea7a:	1c4b      	adds	r3, r1, #1
 801ea7c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ea80:	f10c 0301 	add.w	r3, ip, #1
 801ea84:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ea88:	b292      	uxth	r2, r2
 801ea8a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801ea8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea92:	430b      	orrs	r3, r1
 801ea94:	1c51      	adds	r1, r2, #1
 801ea96:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ea9a:	0952      	lsrs	r2, r2, #5
 801ea9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eaa0:	4313      	orrs	r3, r2
 801eaa2:	803b      	strh	r3, [r7, #0]
 801eaa4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801eaa6:	3702      	adds	r7, #2
 801eaa8:	441c      	add	r4, r3
 801eaaa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801eaac:	441e      	add	r6, r3
 801eaae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801eab0:	3b01      	subs	r3, #1
 801eab2:	9318      	str	r3, [sp, #96]	@ 0x60
 801eab4:	e698      	b.n	801e7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eab6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801eab8:	441c      	add	r4, r3
 801eaba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801eabc:	441e      	add	r6, r3
 801eabe:	9b07      	ldr	r3, [sp, #28]
 801eac0:	3b01      	subs	r3, #1
 801eac2:	9307      	str	r3, [sp, #28]
 801eac4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eac6:	3302      	adds	r3, #2
 801eac8:	930a      	str	r3, [sp, #40]	@ 0x28
 801eaca:	e66d      	b.n	801e7a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801eacc:	d023      	beq.n	801eb16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801eace:	9b07      	ldr	r3, [sp, #28]
 801ead0:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801ead2:	3b01      	subs	r3, #1
 801ead4:	fb00 4003 	mla	r0, r0, r3, r4
 801ead8:	1400      	asrs	r0, r0, #16
 801eada:	f53f ae82 	bmi.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eade:	3901      	subs	r1, #1
 801eae0:	4288      	cmp	r0, r1
 801eae2:	f6bf ae7e 	bge.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eae6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801eae8:	fb01 6303 	mla	r3, r1, r3, r6
 801eaec:	141b      	asrs	r3, r3, #16
 801eaee:	f53f ae78 	bmi.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eaf2:	3a01      	subs	r2, #1
 801eaf4:	4293      	cmp	r3, r2
 801eaf6:	f6bf ae74 	bge.w	801e7e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801eafa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801eafe:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801eb02:	f1bb 0f00 	cmp.w	fp, #0
 801eb06:	dc6c      	bgt.n	801ebe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801eb08:	9b07      	ldr	r3, [sp, #28]
 801eb0a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eb0e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eb10:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801eb14:	930a      	str	r3, [sp, #40]	@ 0x28
 801eb16:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eb18:	2b00      	cmp	r3, #0
 801eb1a:	f340 81b3 	ble.w	801ee84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801eb1e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eb22:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb32:	eef0 6a62 	vmov.f32	s13, s5
 801eb36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb4a:	ee16 4a90 	vmov	r4, s13
 801eb4e:	eef0 6a43 	vmov.f32	s13, s6
 801eb52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb56:	ee12 2a90 	vmov	r2, s5
 801eb5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb5e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb64:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb68:	ee13 2a10 	vmov	r2, s6
 801eb6c:	9329      	str	r3, [sp, #164]	@ 0xa4
 801eb6e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb70:	ee16 6a90 	vmov	r6, s13
 801eb74:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb78:	932a      	str	r3, [sp, #168]	@ 0xa8
 801eb7a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801eb7c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801eb7e:	3b01      	subs	r3, #1
 801eb80:	9317      	str	r3, [sp, #92]	@ 0x5c
 801eb82:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eb84:	bf08      	it	eq
 801eb86:	4613      	moveq	r3, r2
 801eb88:	eeb0 3a67 	vmov.f32	s6, s15
 801eb8c:	9307      	str	r3, [sp, #28]
 801eb8e:	eef0 2a47 	vmov.f32	s5, s14
 801eb92:	e5fb      	b.n	801e78c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eb94:	2900      	cmp	r1, #0
 801eb96:	f43f ae6b 	beq.w	801e870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb9a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eb9e:	9308      	str	r3, [sp, #32]
 801eba0:	0e1b      	lsrs	r3, r3, #24
 801eba2:	9311      	str	r3, [sp, #68]	@ 0x44
 801eba4:	e664      	b.n	801e870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eba6:	f112 0801 	adds.w	r8, r2, #1
 801ebaa:	f53f af7b 	bmi.w	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebae:	4543      	cmp	r3, r8
 801ebb0:	f6ff af78 	blt.w	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebb4:	f11c 0801 	adds.w	r8, ip, #1
 801ebb8:	f53f af74 	bmi.w	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebbc:	45c6      	cmp	lr, r8
 801ebbe:	f6ff af71 	blt.w	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebc2:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ebc4:	9201      	str	r2, [sp, #4]
 801ebc6:	fa0f f28e 	sxth.w	r2, lr
 801ebca:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801ebce:	e9cd c002 	strd	ip, r0, [sp, #8]
 801ebd2:	9200      	str	r2, [sp, #0]
 801ebd4:	b21b      	sxth	r3, r3
 801ebd6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801ebd8:	4639      	mov	r1, r7
 801ebda:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ebdc:	f7ff fc79 	bl	801e4d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801ebe0:	e760      	b.n	801eaa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebe2:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801ebe4:	1427      	asrs	r7, r4, #16
 801ebe6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ebea:	1433      	asrs	r3, r6, #16
 801ebec:	fb01 7303 	mla	r3, r1, r3, r7
 801ebf0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ebf2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ebf6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ebfa:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ebfe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ec02:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ec06:	2a00      	cmp	r2, #0
 801ec08:	f000 8133 	beq.w	801ee72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ec0c:	687d      	ldr	r5, [r7, #4]
 801ec0e:	950e      	str	r5, [sp, #56]	@ 0x38
 801ec10:	0e2d      	lsrs	r5, r5, #24
 801ec12:	9515      	str	r5, [sp, #84]	@ 0x54
 801ec14:	b178      	cbz	r0, 801ec36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ec16:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801ec1a:	3901      	subs	r1, #1
 801ec1c:	0089      	lsls	r1, r1, #2
 801ec1e:	3104      	adds	r1, #4
 801ec20:	eb07 0e01 	add.w	lr, r7, r1
 801ec24:	5879      	ldr	r1, [r7, r1]
 801ec26:	9109      	str	r1, [sp, #36]	@ 0x24
 801ec28:	0e09      	lsrs	r1, r1, #24
 801ec2a:	9112      	str	r1, [sp, #72]	@ 0x48
 801ec2c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ec30:	910f      	str	r1, [sp, #60]	@ 0x3c
 801ec32:	0e09      	lsrs	r1, r1, #24
 801ec34:	9116      	str	r1, [sp, #88]	@ 0x58
 801ec36:	b292      	uxth	r2, r2
 801ec38:	b280      	uxth	r0, r0
 801ec3a:	fb02 f800 	mul.w	r8, r2, r0
 801ec3e:	0112      	lsls	r2, r2, #4
 801ec40:	eba2 0e08 	sub.w	lr, r2, r8
 801ec44:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801ec46:	fa1f fe8e 	uxth.w	lr, lr
 801ec4a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ec4e:	fb0e f101 	mul.w	r1, lr, r1
 801ec52:	b280      	uxth	r0, r0
 801ec54:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ec58:	1a12      	subs	r2, r2, r0
 801ec5a:	b292      	uxth	r2, r2
 801ec5c:	fb02 110c 	mla	r1, r2, ip, r1
 801ec60:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec62:	fb00 1105 	mla	r1, r0, r5, r1
 801ec66:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ec68:	fb08 1105 	mla	r1, r8, r5, r1
 801ec6c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ec70:	2900      	cmp	r1, #0
 801ec72:	f000 80f5 	beq.w	801ee60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801ec76:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801ec7a:	d019      	beq.n	801ecb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801ec7c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ec80:	fb0c fa0a 	mul.w	sl, ip, sl
 801ec84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ec88:	fb0c fc03 	mul.w	ip, ip, r3
 801ec8c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ec90:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ec94:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ec98:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ec9c:	4453      	add	r3, sl
 801ec9e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eca2:	0a1b      	lsrs	r3, r3, #8
 801eca4:	0a3f      	lsrs	r7, r7, #8
 801eca6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ecaa:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ecae:	433b      	orrs	r3, r7
 801ecb0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ecb2:	2dff      	cmp	r5, #255	@ 0xff
 801ecb4:	d020      	beq.n	801ecf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801ecb6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ecb8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ecbc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801ecbe:	436f      	muls	r7, r5
 801ecc0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ecc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ecc6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ecca:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801eccc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ecd0:	fb05 fa0a 	mul.w	sl, r5, sl
 801ecd4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecd8:	44bc      	add	ip, r7
 801ecda:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ecde:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ece2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ece6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ecee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ecf2:	ea4c 050a 	orr.w	r5, ip, sl
 801ecf6:	950e      	str	r5, [sp, #56]	@ 0x38
 801ecf8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ecfa:	2dff      	cmp	r5, #255	@ 0xff
 801ecfc:	d020      	beq.n	801ed40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801ecfe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ed00:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed04:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ed06:	436f      	muls	r7, r5
 801ed08:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ed0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed0e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ed12:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ed14:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ed18:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed20:	44bc      	add	ip, r7
 801ed22:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ed26:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed36:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ed3a:	ea4c 050a 	orr.w	r5, ip, sl
 801ed3e:	9509      	str	r5, [sp, #36]	@ 0x24
 801ed40:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ed42:	2dff      	cmp	r5, #255	@ 0xff
 801ed44:	d020      	beq.n	801ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801ed46:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed48:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed4c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ed4e:	436f      	muls	r7, r5
 801ed50:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed52:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ed56:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ed5a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801ed5c:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ed60:	fb05 fa0a 	mul.w	sl, r5, sl
 801ed64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed68:	44bc      	add	ip, r7
 801ed6a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ed6e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ed72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ed7a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ed7e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ed82:	ea4c 050a 	orr.w	r5, ip, sl
 801ed86:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ed88:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ed8a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ed8e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ed92:	fb0e f707 	mul.w	r7, lr, r7
 801ed96:	fb02 770c 	mla	r7, r2, ip, r7
 801ed9a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ed9c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eda0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eda4:	fb00 770c 	mla	r7, r0, ip, r7
 801eda8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801edaa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801edae:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801edb0:	fb08 770c 	mla	r7, r8, ip, r7
 801edb4:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801edb8:	fb0e fe0c 	mul.w	lr, lr, ip
 801edbc:	fb02 e303 	mla	r3, r2, r3, lr
 801edc0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801edc2:	0a3f      	lsrs	r7, r7, #8
 801edc4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801edc8:	fb00 330a 	mla	r3, r0, sl, r3
 801edcc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801edce:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801edd2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801edd6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801edda:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801eddc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ede0:	4359      	muls	r1, r3
 801ede2:	1c4b      	adds	r3, r1, #1
 801ede4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ede8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801edec:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801edf0:	ea47 070c 	orr.w	r7, r7, ip
 801edf4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801edf6:	0c3b      	lsrs	r3, r7, #16
 801edf8:	f8b9 0000 	ldrh.w	r0, [r9]
 801edfc:	fb13 f305 	smulbb	r3, r3, r5
 801ee00:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ee04:	b2ff      	uxtb	r7, r7
 801ee06:	1202      	asrs	r2, r0, #8
 801ee08:	fb17 f705 	smulbb	r7, r7, r5
 801ee0c:	b2c9      	uxtb	r1, r1
 801ee0e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ee12:	fb02 3201 	mla	r2, r2, r1, r3
 801ee16:	10c3      	asrs	r3, r0, #3
 801ee18:	00c0      	lsls	r0, r0, #3
 801ee1a:	fb1c fc05 	smulbb	ip, ip, r5
 801ee1e:	b2c0      	uxtb	r0, r0
 801ee20:	fb00 7001 	mla	r0, r0, r1, r7
 801ee24:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ee28:	fb03 c301 	mla	r3, r3, r1, ip
 801ee2c:	b292      	uxth	r2, r2
 801ee2e:	b280      	uxth	r0, r0
 801ee30:	1c51      	adds	r1, r2, #1
 801ee32:	f100 0c01 	add.w	ip, r0, #1
 801ee36:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ee3a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ee3e:	b29b      	uxth	r3, r3
 801ee40:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee44:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ee48:	ea4c 0202 	orr.w	r2, ip, r2
 801ee4c:	f103 0c01 	add.w	ip, r3, #1
 801ee50:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ee54:	095b      	lsrs	r3, r3, #5
 801ee56:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee5a:	431a      	orrs	r2, r3
 801ee5c:	f8a9 2000 	strh.w	r2, [r9]
 801ee60:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ee62:	f109 0902 	add.w	r9, r9, #2
 801ee66:	441c      	add	r4, r3
 801ee68:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ee6a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ee6e:	441e      	add	r6, r3
 801ee70:	e647      	b.n	801eb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ee72:	2800      	cmp	r0, #0
 801ee74:	f43f aedf 	beq.w	801ec36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee78:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801ee7c:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee7e:	0e09      	lsrs	r1, r1, #24
 801ee80:	9112      	str	r1, [sp, #72]	@ 0x48
 801ee82:	e6d8      	b.n	801ec36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ee84:	b01d      	add	sp, #116	@ 0x74
 801ee86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ee8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee8e:	b085      	sub	sp, #20
 801ee90:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ee94:	9102      	str	r1, [sp, #8]
 801ee96:	fb04 7103 	mla	r1, r4, r3, r7
 801ee9a:	2c00      	cmp	r4, #0
 801ee9c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801eea0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801eea4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801eea8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801eeac:	f2c0 810c 	blt.w	801f0c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801eeb0:	45a6      	cmp	lr, r4
 801eeb2:	f340 8109 	ble.w	801f0c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801eeb6:	2f00      	cmp	r7, #0
 801eeb8:	f2c0 8104 	blt.w	801f0c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801eebc:	42bb      	cmp	r3, r7
 801eebe:	f340 8101 	ble.w	801f0c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801eec2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801eec6:	1c7a      	adds	r2, r7, #1
 801eec8:	f100 8101 	bmi.w	801f0ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eecc:	4293      	cmp	r3, r2
 801eece:	f340 80fe 	ble.w	801f0ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eed2:	2e00      	cmp	r6, #0
 801eed4:	f000 80fd 	beq.w	801f0d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801eed8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eedc:	3401      	adds	r4, #1
 801eede:	f100 80fc 	bmi.w	801f0da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eee2:	45a6      	cmp	lr, r4
 801eee4:	f340 80f9 	ble.w	801f0da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eee8:	2800      	cmp	r0, #0
 801eeea:	f000 80f9 	beq.w	801f0e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801eeee:	2f00      	cmp	r7, #0
 801eef0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801eef4:	f2c0 80ef 	blt.w	801f0d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eef8:	42bb      	cmp	r3, r7
 801eefa:	f340 80ec 	ble.w	801f0d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eefe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ef02:	3701      	adds	r7, #1
 801ef04:	f100 80ef 	bmi.w	801f0e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ef08:	42bb      	cmp	r3, r7
 801ef0a:	f340 80ec 	ble.w	801f0e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ef0e:	2e00      	cmp	r6, #0
 801ef10:	f000 80eb 	beq.w	801f0ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ef14:	6852      	ldr	r2, [r2, #4]
 801ef16:	b2b6      	uxth	r6, r6
 801ef18:	b280      	uxth	r0, r0
 801ef1a:	fb00 fe06 	mul.w	lr, r0, r6
 801ef1e:	0136      	lsls	r6, r6, #4
 801ef20:	eba6 070e 	sub.w	r7, r6, lr
 801ef24:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ef28:	b2bf      	uxth	r7, r7
 801ef2a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ef2e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ef32:	fb07 f60a 	mul.w	r6, r7, sl
 801ef36:	b280      	uxth	r0, r0
 801ef38:	1a1b      	subs	r3, r3, r0
 801ef3a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ef3e:	b29b      	uxth	r3, r3
 801ef40:	fb0b 6603 	mla	r6, fp, r3, r6
 801ef44:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ef48:	fb00 6609 	mla	r6, r0, r9, r6
 801ef4c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ef50:	fb0e 6608 	mla	r6, lr, r8, r6
 801ef54:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ef58:	9600      	str	r6, [sp, #0]
 801ef5a:	2e00      	cmp	r6, #0
 801ef5c:	f000 80af 	beq.w	801f0be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ef60:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ef64:	fb0b fc0c 	mul.w	ip, fp, ip
 801ef68:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ef6c:	fb0b f505 	mul.w	r5, fp, r5
 801ef70:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ef74:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ef78:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ef7c:	44dc      	add	ip, fp
 801ef7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef82:	9501      	str	r5, [sp, #4]
 801ef84:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ef88:	9503      	str	r5, [sp, #12]
 801ef8a:	9d01      	ldr	r5, [sp, #4]
 801ef8c:	9e02      	ldr	r6, [sp, #8]
 801ef8e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ef92:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ef96:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ef9a:	fb0a fc0c 	mul.w	ip, sl, ip
 801ef9e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801efa2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801efa6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801efaa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801efae:	4465      	add	r5, ip
 801efb0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801efb4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801efb8:	fb09 fc0c 	mul.w	ip, r9, ip
 801efbc:	fb09 f904 	mul.w	r9, r9, r4
 801efc0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801efc4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801efc8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801efcc:	fb08 f404 	mul.w	r4, r8, r4
 801efd0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801efd4:	fb08 f802 	mul.w	r8, r8, r2
 801efd8:	0a2d      	lsrs	r5, r5, #8
 801efda:	0a22      	lsrs	r2, r4, #8
 801efdc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801efe0:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801efe4:	437d      	muls	r5, r7
 801efe6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801efea:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801efee:	4414      	add	r4, r2
 801eff0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801eff4:	fb0a fa01 	mul.w	sl, sl, r1
 801eff8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801effc:	9a03      	ldr	r2, [sp, #12]
 801effe:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f002:	fb02 5503 	mla	r5, r2, r3, r5
 801f006:	0a24      	lsrs	r4, r4, #8
 801f008:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f00c:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f010:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f014:	fb04 540e 	mla	r4, r4, lr, r5
 801f018:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f01c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f020:	4461      	add	r1, ip
 801f022:	0a09      	lsrs	r1, r1, #8
 801f024:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f028:	fb01 4100 	mla	r1, r1, r0, r4
 801f02c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f030:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f034:	fb07 f70a 	mul.w	r7, r7, sl
 801f038:	0a09      	lsrs	r1, r1, #8
 801f03a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f03e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f042:	fb03 7101 	mla	r1, r3, r1, r7
 801f046:	9b00      	ldr	r3, [sp, #0]
 801f048:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f04c:	43da      	mvns	r2, r3
 801f04e:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f052:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f056:	8836      	ldrh	r6, [r6, #0]
 801f058:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f05c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f060:	fb00 e101 	mla	r1, r0, r1, lr
 801f064:	1233      	asrs	r3, r6, #8
 801f066:	b2d2      	uxtb	r2, r2
 801f068:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f06c:	4353      	muls	r3, r2
 801f06e:	10f0      	asrs	r0, r6, #3
 801f070:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f074:	4350      	muls	r0, r2
 801f076:	0a09      	lsrs	r1, r1, #8
 801f078:	00f6      	lsls	r6, r6, #3
 801f07a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f07e:	b2f6      	uxtb	r6, r6
 801f080:	4321      	orrs	r1, r4
 801f082:	4356      	muls	r6, r2
 801f084:	1c5a      	adds	r2, r3, #1
 801f086:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f08a:	0c0b      	lsrs	r3, r1, #16
 801f08c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f090:	1c42      	adds	r2, r0, #1
 801f092:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f096:	0a0a      	lsrs	r2, r1, #8
 801f098:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f09c:	021b      	lsls	r3, r3, #8
 801f09e:	00d2      	lsls	r2, r2, #3
 801f0a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f0a4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801f0a8:	4313      	orrs	r3, r2
 801f0aa:	1c72      	adds	r2, r6, #1
 801f0ac:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f0b0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f0b4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f0b8:	4319      	orrs	r1, r3
 801f0ba:	9b02      	ldr	r3, [sp, #8]
 801f0bc:	8019      	strh	r1, [r3, #0]
 801f0be:	b005      	add	sp, #20
 801f0c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0c4:	2500      	movs	r5, #0
 801f0c6:	e6fe      	b.n	801eec6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f0c8:	2100      	movs	r1, #0
 801f0ca:	460d      	mov	r5, r1
 801f0cc:	e706      	b.n	801eedc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f0ce:	2100      	movs	r1, #0
 801f0d0:	e704      	b.n	801eedc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f0d2:	4631      	mov	r1, r6
 801f0d4:	e702      	b.n	801eedc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f0d6:	2400      	movs	r4, #0
 801f0d8:	e713      	b.n	801ef02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f0da:	2200      	movs	r2, #0
 801f0dc:	4614      	mov	r4, r2
 801f0de:	e71a      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f0e0:	4602      	mov	r2, r0
 801f0e2:	4604      	mov	r4, r0
 801f0e4:	e717      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f0e6:	2200      	movs	r2, #0
 801f0e8:	e715      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f0ea:	4632      	mov	r2, r6
 801f0ec:	e713      	b.n	801ef16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f0f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0f4:	b09b      	sub	sp, #108	@ 0x6c
 801f0f6:	9218      	str	r2, [sp, #96]	@ 0x60
 801f0f8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801f0fa:	9019      	str	r0, [sp, #100]	@ 0x64
 801f0fc:	6850      	ldr	r0, [r2, #4]
 801f0fe:	9116      	str	r1, [sp, #88]	@ 0x58
 801f100:	9307      	str	r3, [sp, #28]
 801f102:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801f106:	fb00 1303 	mla	r3, r0, r3, r1
 801f10a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801f10e:	6812      	ldr	r2, [r2, #0]
 801f110:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f114:	930a      	str	r3, [sp, #40]	@ 0x28
 801f116:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f118:	681b      	ldr	r3, [r3, #0]
 801f11a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f11c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f11e:	2b00      	cmp	r3, #0
 801f120:	dc03      	bgt.n	801f12a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f122:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f124:	2b00      	cmp	r3, #0
 801f126:	f340 8387 	ble.w	801f838 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f12a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f12c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f130:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f134:	1e48      	subs	r0, r1, #1
 801f136:	1e57      	subs	r7, r2, #1
 801f138:	9b07      	ldr	r3, [sp, #28]
 801f13a:	2b00      	cmp	r3, #0
 801f13c:	f340 8166 	ble.w	801f40c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f140:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f144:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f148:	d406      	bmi.n	801f158 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f14a:	4584      	cmp	ip, r0
 801f14c:	da04      	bge.n	801f158 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f14e:	2b00      	cmp	r3, #0
 801f150:	db02      	blt.n	801f158 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f152:	42bb      	cmp	r3, r7
 801f154:	f2c0 815b 	blt.w	801f40e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f158:	f11c 0c01 	adds.w	ip, ip, #1
 801f15c:	f100 814b 	bmi.w	801f3f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f160:	4561      	cmp	r1, ip
 801f162:	f2c0 8148 	blt.w	801f3f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f166:	3301      	adds	r3, #1
 801f168:	f100 8145 	bmi.w	801f3f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f16c:	429a      	cmp	r2, r3
 801f16e:	f2c0 8142 	blt.w	801f3f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f172:	9b07      	ldr	r3, [sp, #28]
 801f174:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f176:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f178:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f17a:	2b00      	cmp	r3, #0
 801f17c:	f340 8165 	ble.w	801f44a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f180:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801f182:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f184:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f188:	1422      	asrs	r2, r4, #16
 801f18a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f18e:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f192:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f196:	689b      	ldr	r3, [r3, #8]
 801f198:	f100 81d5 	bmi.w	801f546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f19c:	f103 38ff 	add.w	r8, r3, #4294967295
 801f1a0:	4542      	cmp	r2, r8
 801f1a2:	f280 81d0 	bge.w	801f546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f1a6:	f1bc 0f00 	cmp.w	ip, #0
 801f1aa:	f2c0 81cc 	blt.w	801f546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f1ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f1b2:	45c4      	cmp	ip, r8
 801f1b4:	f280 81c7 	bge.w	801f546 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f1b8:	b21b      	sxth	r3, r3
 801f1ba:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1be:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f1c0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f1c4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f1c8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f1cc:	2900      	cmp	r1, #0
 801f1ce:	f000 8182 	beq.w	801f4d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f1d2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f1d6:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f1d8:	0e2d      	lsrs	r5, r5, #24
 801f1da:	9512      	str	r5, [sp, #72]	@ 0x48
 801f1dc:	b180      	cbz	r0, 801f200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f1de:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f1e2:	3b01      	subs	r3, #1
 801f1e4:	009b      	lsls	r3, r3, #2
 801f1e6:	3304      	adds	r3, #4
 801f1e8:	eb08 0c03 	add.w	ip, r8, r3
 801f1ec:	f858 3003 	ldr.w	r3, [r8, r3]
 801f1f0:	9308      	str	r3, [sp, #32]
 801f1f2:	0e1b      	lsrs	r3, r3, #24
 801f1f4:	9310      	str	r3, [sp, #64]	@ 0x40
 801f1f6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f1fa:	930c      	str	r3, [sp, #48]	@ 0x30
 801f1fc:	0e1b      	lsrs	r3, r3, #24
 801f1fe:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f200:	b289      	uxth	r1, r1
 801f202:	b280      	uxth	r0, r0
 801f204:	fb01 f900 	mul.w	r9, r1, r0
 801f208:	0109      	lsls	r1, r1, #4
 801f20a:	eba1 0809 	sub.w	r8, r1, r9
 801f20e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f210:	fa1f f888 	uxth.w	r8, r8
 801f214:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f218:	fb08 f303 	mul.w	r3, r8, r3
 801f21c:	b280      	uxth	r0, r0
 801f21e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801f222:	1a09      	subs	r1, r1, r0
 801f224:	b289      	uxth	r1, r1
 801f226:	fb01 330e 	mla	r3, r1, lr, r3
 801f22a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f22c:	fb00 3305 	mla	r3, r0, r5, r3
 801f230:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f232:	fb09 3305 	mla	r3, r9, r5, r3
 801f236:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f23a:	2b00      	cmp	r3, #0
 801f23c:	f000 80d2 	beq.w	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f240:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f244:	d01b      	beq.n	801f27e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f246:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f24a:	fb0e fa0a 	mul.w	sl, lr, sl
 801f24e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f252:	fb0e fe02 	mul.w	lr, lr, r2
 801f256:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f25a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f25e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f262:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f266:	4452      	add	r2, sl
 801f268:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f26c:	0a12      	lsrs	r2, r2, #8
 801f26e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f272:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f276:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f27a:	ea42 020c 	orr.w	r2, r2, ip
 801f27e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f280:	2dff      	cmp	r5, #255	@ 0xff
 801f282:	d021      	beq.n	801f2c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f284:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f286:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f28a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f28c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f290:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f292:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f296:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f29a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f29c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2a0:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2a4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2a8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2ac:	44de      	add	lr, fp
 801f2ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f2b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2ba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2be:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2c2:	ea4e 050a 	orr.w	r5, lr, sl
 801f2c6:	950b      	str	r5, [sp, #44]	@ 0x2c
 801f2c8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f2ca:	2dff      	cmp	r5, #255	@ 0xff
 801f2cc:	d021      	beq.n	801f312 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f2ce:	9d08      	ldr	r5, [sp, #32]
 801f2d0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f2d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f2d6:	fb05 fb0b 	mul.w	fp, r5, fp
 801f2da:	9d08      	ldr	r5, [sp, #32]
 801f2dc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f2e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f2e2:	fb05 fa0e 	mul.w	sl, r5, lr
 801f2e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f2ea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f2ee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f2f2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f2f6:	44de      	add	lr, fp
 801f2f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f2fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f300:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f304:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f308:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f30c:	ea4e 050a 	orr.w	r5, lr, sl
 801f310:	9508      	str	r5, [sp, #32]
 801f312:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f314:	2dff      	cmp	r5, #255	@ 0xff
 801f316:	d021      	beq.n	801f35c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f318:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f31a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f31e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f320:	fb05 fb0b 	mul.w	fp, r5, fp
 801f324:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f326:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f32a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f32e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f330:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f334:	fb05 fa0a 	mul.w	sl, r5, sl
 801f338:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f33c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f340:	44de      	add	lr, fp
 801f342:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f346:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f34a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f34e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f352:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f356:	ea4e 050a 	orr.w	r5, lr, sl
 801f35a:	950c      	str	r5, [sp, #48]	@ 0x30
 801f35c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f35e:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f362:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f366:	fb08 fc0c 	mul.w	ip, r8, ip
 801f36a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f36e:	9d08      	ldr	r5, [sp, #32]
 801f370:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f374:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f378:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f37c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f37e:	2bff      	cmp	r3, #255	@ 0xff
 801f380:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f384:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f386:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f38a:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f38e:	fb08 f80e 	mul.w	r8, r8, lr
 801f392:	fb01 8202 	mla	r2, r1, r2, r8
 801f396:	9908      	ldr	r1, [sp, #32]
 801f398:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f39c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f3a0:	fb00 220a 	mla	r2, r0, sl, r2
 801f3a4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f3a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f3aa:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801f3ae:	fb09 2900 	mla	r9, r9, r0, r2
 801f3b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f3b6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f3ba:	ea4c 0c09 	orr.w	ip, ip, r9
 801f3be:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f3c2:	f040 8091 	bne.w	801f4e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f3c6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f3ca:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801f3ce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f3d2:	f022 0207 	bic.w	r2, r2, #7
 801f3d6:	431a      	orrs	r2, r3
 801f3d8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f3dc:	ea4c 0c02 	orr.w	ip, ip, r2
 801f3e0:	f8a7 c000 	strh.w	ip, [r7]
 801f3e4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f3e6:	3702      	adds	r7, #2
 801f3e8:	441c      	add	r4, r3
 801f3ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f3ec:	441e      	add	r6, r3
 801f3ee:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f3f0:	3b01      	subs	r3, #1
 801f3f2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f3f4:	e6c0      	b.n	801f178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f3f6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f3f8:	441c      	add	r4, r3
 801f3fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f3fc:	441e      	add	r6, r3
 801f3fe:	9b07      	ldr	r3, [sp, #28]
 801f400:	3b01      	subs	r3, #1
 801f402:	9307      	str	r3, [sp, #28]
 801f404:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f406:	3302      	adds	r3, #2
 801f408:	930a      	str	r3, [sp, #40]	@ 0x28
 801f40a:	e695      	b.n	801f138 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f40c:	d024      	beq.n	801f458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f40e:	9b07      	ldr	r3, [sp, #28]
 801f410:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801f412:	3b01      	subs	r3, #1
 801f414:	fb00 4003 	mla	r0, r0, r3, r4
 801f418:	1400      	asrs	r0, r0, #16
 801f41a:	f53f aeaa 	bmi.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f41e:	3901      	subs	r1, #1
 801f420:	4288      	cmp	r0, r1
 801f422:	f6bf aea6 	bge.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f426:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f428:	fb01 6303 	mla	r3, r1, r3, r6
 801f42c:	141b      	asrs	r3, r3, #16
 801f42e:	f53f aea0 	bmi.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f432:	3a01      	subs	r2, #1
 801f434:	4293      	cmp	r3, r2
 801f436:	f6bf ae9c 	bge.w	801f172 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f43a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f43e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f442:	f1bb 0f00 	cmp.w	fp, #0
 801f446:	f300 809a 	bgt.w	801f57e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f44a:	9b07      	ldr	r3, [sp, #28]
 801f44c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f450:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f452:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f456:	930a      	str	r3, [sp, #40]	@ 0x28
 801f458:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f45a:	2b00      	cmp	r3, #0
 801f45c:	f340 81ec 	ble.w	801f838 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f460:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f464:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f468:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f46c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f470:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f474:	eef0 6a62 	vmov.f32	s13, s5
 801f478:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f47c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f480:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f484:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f48c:	ee16 4a90 	vmov	r4, s13
 801f490:	eef0 6a43 	vmov.f32	s13, s6
 801f494:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f498:	ee12 2a90 	vmov	r2, s5
 801f49c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4aa:	ee13 2a10 	vmov	r2, s6
 801f4ae:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f4b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4b2:	ee16 6a90 	vmov	r6, s13
 801f4b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4ba:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f4bc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f4be:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f4c0:	3b01      	subs	r3, #1
 801f4c2:	9316      	str	r3, [sp, #88]	@ 0x58
 801f4c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f4c6:	bf08      	it	eq
 801f4c8:	4613      	moveq	r3, r2
 801f4ca:	eeb0 3a67 	vmov.f32	s6, s15
 801f4ce:	9307      	str	r3, [sp, #28]
 801f4d0:	eef0 2a47 	vmov.f32	s5, s14
 801f4d4:	e622      	b.n	801f11c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f4d6:	2800      	cmp	r0, #0
 801f4d8:	f43f ae92 	beq.w	801f200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f4dc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f4e0:	9308      	str	r3, [sp, #32]
 801f4e2:	0e1b      	lsrs	r3, r3, #24
 801f4e4:	9310      	str	r3, [sp, #64]	@ 0x40
 801f4e6:	e68b      	b.n	801f200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f4e8:	43db      	mvns	r3, r3
 801f4ea:	8839      	ldrh	r1, [r7, #0]
 801f4ec:	fa5f f883 	uxtb.w	r8, r3
 801f4f0:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f4f4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f4f8:	fb0e fe08 	mul.w	lr, lr, r8
 801f4fc:	10c8      	asrs	r0, r1, #3
 801f4fe:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f502:	fb00 f008 	mul.w	r0, r0, r8
 801f506:	00cb      	lsls	r3, r1, #3
 801f508:	f10e 0101 	add.w	r1, lr, #1
 801f50c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f510:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f514:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f518:	b2db      	uxtb	r3, r3
 801f51a:	f100 0e01 	add.w	lr, r0, #1
 801f51e:	fb03 f308 	mul.w	r3, r3, r8
 801f522:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f526:	4dc6      	ldr	r5, [pc, #792]	@ (801f840 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f528:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f52c:	b2c9      	uxtb	r1, r1
 801f52e:	00d2      	lsls	r2, r2, #3
 801f530:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f534:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f538:	430a      	orrs	r2, r1
 801f53a:	1c59      	adds	r1, r3, #1
 801f53c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f540:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f544:	e748      	b.n	801f3d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f546:	f112 0801 	adds.w	r8, r2, #1
 801f54a:	f53f af4b 	bmi.w	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f54e:	4543      	cmp	r3, r8
 801f550:	f6ff af48 	blt.w	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f554:	f11c 0801 	adds.w	r8, ip, #1
 801f558:	f53f af44 	bmi.w	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f55c:	45c6      	cmp	lr, r8
 801f55e:	f6ff af41 	blt.w	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f562:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f566:	fa0f f28e 	sxth.w	r2, lr
 801f56a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f56e:	9200      	str	r2, [sp, #0]
 801f570:	b21b      	sxth	r3, r3
 801f572:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f574:	4639      	mov	r1, r7
 801f576:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f578:	f7ff fc87 	bl	801ee8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f57c:	e732      	b.n	801f3e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f57e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f580:	1421      	asrs	r1, r4, #16
 801f582:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f586:	1433      	asrs	r3, r6, #16
 801f588:	fb07 1303 	mla	r3, r7, r3, r1
 801f58c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f58e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f590:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f594:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f598:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f59c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f5a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f5a4:	2a00      	cmp	r2, #0
 801f5a6:	f000 8108 	beq.w	801f7ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801f5aa:	684d      	ldr	r5, [r1, #4]
 801f5ac:	950d      	str	r5, [sp, #52]	@ 0x34
 801f5ae:	0e2d      	lsrs	r5, r5, #24
 801f5b0:	9514      	str	r5, [sp, #80]	@ 0x50
 801f5b2:	b178      	cbz	r0, 801f5d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f5b4:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f5b8:	3f01      	subs	r7, #1
 801f5ba:	00bf      	lsls	r7, r7, #2
 801f5bc:	3704      	adds	r7, #4
 801f5be:	eb01 0e07 	add.w	lr, r1, r7
 801f5c2:	59c9      	ldr	r1, [r1, r7]
 801f5c4:	9109      	str	r1, [sp, #36]	@ 0x24
 801f5c6:	0e09      	lsrs	r1, r1, #24
 801f5c8:	9111      	str	r1, [sp, #68]	@ 0x44
 801f5ca:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f5ce:	910e      	str	r1, [sp, #56]	@ 0x38
 801f5d0:	0e09      	lsrs	r1, r1, #24
 801f5d2:	9115      	str	r1, [sp, #84]	@ 0x54
 801f5d4:	b292      	uxth	r2, r2
 801f5d6:	b280      	uxth	r0, r0
 801f5d8:	fb02 f900 	mul.w	r9, r2, r0
 801f5dc:	0112      	lsls	r2, r2, #4
 801f5de:	eba2 0e09 	sub.w	lr, r2, r9
 801f5e2:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f5e6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f5e8:	fa1f fe8e 	uxth.w	lr, lr
 801f5ec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f5f0:	fb0e f202 	mul.w	r2, lr, r2
 801f5f4:	b280      	uxth	r0, r0
 801f5f6:	1a09      	subs	r1, r1, r0
 801f5f8:	b289      	uxth	r1, r1
 801f5fa:	fb01 220c 	mla	r2, r1, ip, r2
 801f5fe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f600:	fb00 2205 	mla	r2, r0, r5, r2
 801f604:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f606:	fb09 2205 	mla	r2, r9, r5, r2
 801f60a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f60e:	2a00      	cmp	r2, #0
 801f610:	f000 80ca 	beq.w	801f7a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f614:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f618:	d019      	beq.n	801f64e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f61a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f61e:	fb0c fa0a 	mul.w	sl, ip, sl
 801f622:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f626:	fb0c fc03 	mul.w	ip, ip, r3
 801f62a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f62e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f632:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f636:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f63a:	4453      	add	r3, sl
 801f63c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f640:	0a1b      	lsrs	r3, r3, #8
 801f642:	0a3f      	lsrs	r7, r7, #8
 801f644:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f648:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f64c:	433b      	orrs	r3, r7
 801f64e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f650:	2dff      	cmp	r5, #255	@ 0xff
 801f652:	d020      	beq.n	801f696 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f654:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f656:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f65a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f65c:	436f      	muls	r7, r5
 801f65e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f660:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f664:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f668:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f66a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f66e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f672:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f676:	44bc      	add	ip, r7
 801f678:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f67c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f680:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f684:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f688:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f68c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f690:	ea4c 050a 	orr.w	r5, ip, sl
 801f694:	950d      	str	r5, [sp, #52]	@ 0x34
 801f696:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f698:	2dff      	cmp	r5, #255	@ 0xff
 801f69a:	d020      	beq.n	801f6de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f69c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f69e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6a2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f6a4:	436f      	muls	r7, r5
 801f6a6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f6a8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f6ac:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f6ae:	fb05 fa0c 	mul.w	sl, r5, ip
 801f6b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6ba:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6be:	44bc      	add	ip, r7
 801f6c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f6c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f6c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f6d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f6d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f6d8:	ea4c 050a 	orr.w	r5, ip, sl
 801f6dc:	9509      	str	r5, [sp, #36]	@ 0x24
 801f6de:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6e0:	2dff      	cmp	r5, #255	@ 0xff
 801f6e2:	d020      	beq.n	801f726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f6e4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6e6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6ea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6ec:	436f      	muls	r7, r5
 801f6ee:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6f4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6f8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f6fe:	fb05 fa0a 	mul.w	sl, r5, sl
 801f702:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f706:	44bc      	add	ip, r7
 801f708:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f70c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f710:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f714:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f718:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f71c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f720:	ea4c 050a 	orr.w	r5, ip, sl
 801f724:	950e      	str	r5, [sp, #56]	@ 0x38
 801f726:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f728:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f72c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f730:	fb0e f707 	mul.w	r7, lr, r7
 801f734:	fb01 770c 	mla	r7, r1, ip, r7
 801f738:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f73a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f73e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f742:	fb00 770c 	mla	r7, r0, ip, r7
 801f746:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f748:	2aff      	cmp	r2, #255	@ 0xff
 801f74a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f74e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f750:	fb09 770c 	mla	r7, r9, ip, r7
 801f754:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f758:	fb0e fe0c 	mul.w	lr, lr, ip
 801f75c:	fb01 e303 	mla	r3, r1, r3, lr
 801f760:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f762:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801f766:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f76a:	fb00 330a 	mla	r3, r0, sl, r3
 801f76e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f770:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f774:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f778:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f77c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f780:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f784:	ea47 070c 	orr.w	r7, r7, ip
 801f788:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f78c:	d11e      	bne.n	801f7cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801f78e:	097a      	lsrs	r2, r7, #5
 801f790:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f794:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f798:	f023 0307 	bic.w	r3, r3, #7
 801f79c:	4313      	orrs	r3, r2
 801f79e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f7a2:	431f      	orrs	r7, r3
 801f7a4:	f8a8 7000 	strh.w	r7, [r8]
 801f7a8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f7aa:	f108 0802 	add.w	r8, r8, #2
 801f7ae:	441c      	add	r4, r3
 801f7b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f7b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f7b6:	441e      	add	r6, r3
 801f7b8:	e643      	b.n	801f442 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f7ba:	2800      	cmp	r0, #0
 801f7bc:	f43f af0a 	beq.w	801f5d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f7c0:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f7c4:	9109      	str	r1, [sp, #36]	@ 0x24
 801f7c6:	0e09      	lsrs	r1, r1, #24
 801f7c8:	9111      	str	r1, [sp, #68]	@ 0x44
 801f7ca:	e703      	b.n	801f5d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f7cc:	43d2      	mvns	r2, r2
 801f7ce:	f8b8 1000 	ldrh.w	r1, [r8]
 801f7d2:	fa5f fe82 	uxtb.w	lr, r2
 801f7d6:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f7da:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f7de:	fb0c fc0e 	mul.w	ip, ip, lr
 801f7e2:	10c8      	asrs	r0, r1, #3
 801f7e4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f7e8:	fb00 f00e 	mul.w	r0, r0, lr
 801f7ec:	00ca      	lsls	r2, r1, #3
 801f7ee:	f10c 0101 	add.w	r1, ip, #1
 801f7f2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f7f6:	b2d2      	uxtb	r2, r2
 801f7f8:	0c39      	lsrs	r1, r7, #16
 801f7fa:	fb02 f20e 	mul.w	r2, r2, lr
 801f7fe:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f802:	490f      	ldr	r1, [pc, #60]	@ (801f840 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f804:	fa5f fc8c 	uxtb.w	ip, ip
 801f808:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f80c:	1c41      	adds	r1, r0, #1
 801f80e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f812:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f816:	1c51      	adds	r1, r2, #1
 801f818:	00c0      	lsls	r0, r0, #3
 801f81a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f81e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f822:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f826:	ea4c 0c00 	orr.w	ip, ip, r0
 801f82a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f82e:	ea47 0c0c 	orr.w	ip, r7, ip
 801f832:	f8a8 c000 	strh.w	ip, [r8]
 801f836:	e7b7      	b.n	801f7a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f838:	b01b      	add	sp, #108	@ 0x6c
 801f83a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f83e:	bf00      	nop
 801f840:	fffff800 	.word	0xfffff800

0801f844 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f844:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f848:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f84c:	2d00      	cmp	r5, #0
 801f84e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f852:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f856:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f85a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f85e:	fb05 0e03 	mla	lr, r5, r3, r0
 801f862:	f2c0 808c 	blt.w	801f97e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f866:	45a9      	cmp	r9, r5
 801f868:	f340 8089 	ble.w	801f97e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f86c:	2800      	cmp	r0, #0
 801f86e:	f2c0 8084 	blt.w	801f97a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f872:	4580      	cmp	r8, r0
 801f874:	f340 8081 	ble.w	801f97a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f878:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f87c:	5d16      	ldrb	r6, [r2, r4]
 801f87e:	f01e 0f01 	tst.w	lr, #1
 801f882:	bf0c      	ite	eq
 801f884:	f006 060f 	andeq.w	r6, r6, #15
 801f888:	1136      	asrne	r6, r6, #4
 801f88a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f88e:	b2f6      	uxtb	r6, r6
 801f890:	1c44      	adds	r4, r0, #1
 801f892:	d477      	bmi.n	801f984 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f894:	45a0      	cmp	r8, r4
 801f896:	dd75      	ble.n	801f984 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f898:	2f00      	cmp	r7, #0
 801f89a:	d075      	beq.n	801f988 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f89c:	f10e 0a01 	add.w	sl, lr, #1
 801f8a0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f8a4:	5d14      	ldrb	r4, [r2, r4]
 801f8a6:	f01a 0f01 	tst.w	sl, #1
 801f8aa:	bf0c      	ite	eq
 801f8ac:	f004 040f 	andeq.w	r4, r4, #15
 801f8b0:	1124      	asrne	r4, r4, #4
 801f8b2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f8b6:	b2e4      	uxtb	r4, r4
 801f8b8:	3501      	adds	r5, #1
 801f8ba:	d469      	bmi.n	801f990 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f8bc:	45a9      	cmp	r9, r5
 801f8be:	dd67      	ble.n	801f990 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f8c0:	f1bc 0f00 	cmp.w	ip, #0
 801f8c4:	d067      	beq.n	801f996 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f8c6:	2800      	cmp	r0, #0
 801f8c8:	db60      	blt.n	801f98c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f8ca:	4580      	cmp	r8, r0
 801f8cc:	dd5e      	ble.n	801f98c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f8ce:	eb03 090e 	add.w	r9, r3, lr
 801f8d2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f8d6:	5d55      	ldrb	r5, [r2, r5]
 801f8d8:	f019 0f01 	tst.w	r9, #1
 801f8dc:	bf0c      	ite	eq
 801f8de:	f005 050f 	andeq.w	r5, r5, #15
 801f8e2:	112d      	asrne	r5, r5, #4
 801f8e4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f8e8:	b2ed      	uxtb	r5, r5
 801f8ea:	3001      	adds	r0, #1
 801f8ec:	d456      	bmi.n	801f99c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f8ee:	4580      	cmp	r8, r0
 801f8f0:	dd54      	ble.n	801f99c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f8f2:	2f00      	cmp	r7, #0
 801f8f4:	d054      	beq.n	801f9a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f8f6:	3301      	adds	r3, #1
 801f8f8:	449e      	add	lr, r3
 801f8fa:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f8fe:	5cd0      	ldrb	r0, [r2, r3]
 801f900:	f01e 0f01 	tst.w	lr, #1
 801f904:	bf0c      	ite	eq
 801f906:	f000 000f 	andeq.w	r0, r0, #15
 801f90a:	1100      	asrne	r0, r0, #4
 801f90c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f910:	b2c3      	uxtb	r3, r0
 801f912:	b2ba      	uxth	r2, r7
 801f914:	fa1f fc8c 	uxth.w	ip, ip
 801f918:	fb02 f00c 	mul.w	r0, r2, ip
 801f91c:	0112      	lsls	r2, r2, #4
 801f91e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f922:	1a12      	subs	r2, r2, r0
 801f924:	b292      	uxth	r2, r2
 801f926:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f92a:	4362      	muls	r2, r4
 801f92c:	fa1f fc8c 	uxth.w	ip, ip
 801f930:	eba7 070c 	sub.w	r7, r7, ip
 801f934:	b2bf      	uxth	r7, r7
 801f936:	fb06 2207 	mla	r2, r6, r7, r2
 801f93a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f93e:	fb00 5303 	mla	r3, r0, r3, r5
 801f942:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f946:	b1b3      	cbz	r3, 801f976 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f948:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f94c:	435a      	muls	r2, r3
 801f94e:	1c53      	adds	r3, r2, #1
 801f950:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f954:	4a2d      	ldr	r2, [pc, #180]	@ (801fa0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f956:	121b      	asrs	r3, r3, #8
 801f958:	6812      	ldr	r2, [r2, #0]
 801f95a:	2bff      	cmp	r3, #255	@ 0xff
 801f95c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f960:	d120      	bne.n	801f9a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f962:	4b2b      	ldr	r3, [pc, #172]	@ (801fa10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f964:	0950      	lsrs	r0, r2, #5
 801f966:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f96a:	4033      	ands	r3, r6
 801f96c:	4318      	orrs	r0, r3
 801f96e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f972:	4302      	orrs	r2, r0
 801f974:	800a      	strh	r2, [r1, #0]
 801f976:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f97a:	2600      	movs	r6, #0
 801f97c:	e788      	b.n	801f890 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f97e:	2400      	movs	r4, #0
 801f980:	4626      	mov	r6, r4
 801f982:	e799      	b.n	801f8b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f984:	2400      	movs	r4, #0
 801f986:	e797      	b.n	801f8b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f988:	463c      	mov	r4, r7
 801f98a:	e795      	b.n	801f8b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f98c:	2500      	movs	r5, #0
 801f98e:	e7ac      	b.n	801f8ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f990:	2300      	movs	r3, #0
 801f992:	461d      	mov	r5, r3
 801f994:	e7bd      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f996:	4663      	mov	r3, ip
 801f998:	4665      	mov	r5, ip
 801f99a:	e7ba      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f99c:	2300      	movs	r3, #0
 801f99e:	e7b8      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f9a0:	463b      	mov	r3, r7
 801f9a2:	e7b6      	b.n	801f912 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f9a4:	b29f      	uxth	r7, r3
 801f9a6:	43db      	mvns	r3, r3
 801f9a8:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f9ac:	880d      	ldrh	r5, [r1, #0]
 801f9ae:	fb10 f007 	smulbb	r0, r0, r7
 801f9b2:	b2f6      	uxtb	r6, r6
 801f9b4:	b2d2      	uxtb	r2, r2
 801f9b6:	122c      	asrs	r4, r5, #8
 801f9b8:	fb12 f207 	smulbb	r2, r2, r7
 801f9bc:	fb16 f607 	smulbb	r6, r6, r7
 801f9c0:	b2db      	uxtb	r3, r3
 801f9c2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f9c6:	fb04 0403 	mla	r4, r4, r3, r0
 801f9ca:	10e8      	asrs	r0, r5, #3
 801f9cc:	00ed      	lsls	r5, r5, #3
 801f9ce:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f9d2:	b2ed      	uxtb	r5, r5
 801f9d4:	fb00 6603 	mla	r6, r0, r3, r6
 801f9d8:	fb05 2303 	mla	r3, r5, r3, r2
 801f9dc:	b2a4      	uxth	r4, r4
 801f9de:	b29a      	uxth	r2, r3
 801f9e0:	1c63      	adds	r3, r4, #1
 801f9e2:	b2b0      	uxth	r0, r6
 801f9e4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f9e8:	1c53      	adds	r3, r2, #1
 801f9ea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9ee:	1c42      	adds	r2, r0, #1
 801f9f0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f9f4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f9f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f9fc:	0940      	lsrs	r0, r0, #5
 801f9fe:	4323      	orrs	r3, r4
 801fa00:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa04:	4303      	orrs	r3, r0
 801fa06:	800b      	strh	r3, [r1, #0]
 801fa08:	e7b5      	b.n	801f976 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fa0a:	bf00      	nop
 801fa0c:	20002238 	.word	0x20002238
 801fa10:	00fff800 	.word	0x00fff800

0801fa14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa18:	b097      	sub	sp, #92	@ 0x5c
 801fa1a:	9214      	str	r2, [sp, #80]	@ 0x50
 801fa1c:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801fa1e:	9015      	str	r0, [sp, #84]	@ 0x54
 801fa20:	9309      	str	r3, [sp, #36]	@ 0x24
 801fa22:	6850      	ldr	r0, [r2, #4]
 801fa24:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801fa28:	910d      	str	r1, [sp, #52]	@ 0x34
 801fa2a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fa2c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801fa30:	fb00 1303 	mla	r3, r0, r3, r1
 801fa34:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801fa38:	6812      	ldr	r2, [r2, #0]
 801fa3a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fa3e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa40:	689b      	ldr	r3, [r3, #8]
 801fa42:	3301      	adds	r3, #1
 801fa44:	f023 0301 	bic.w	r3, r3, #1
 801fa48:	930a      	str	r3, [sp, #40]	@ 0x28
 801fa4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa4c:	681f      	ldr	r7, [r3, #0]
 801fa4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fa50:	2b00      	cmp	r3, #0
 801fa52:	dc03      	bgt.n	801fa5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fa54:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801fa56:	2b00      	cmp	r3, #0
 801fa58:	f340 8287 	ble.w	801ff6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fa5c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fa5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa66:	1e48      	subs	r0, r1, #1
 801fa68:	f102 3cff 	add.w	ip, r2, #4294967295
 801fa6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fa6e:	2b00      	cmp	r3, #0
 801fa70:	f340 80c3 	ble.w	801fbfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fa74:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fa78:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fa7c:	d406      	bmi.n	801fa8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa7e:	4586      	cmp	lr, r0
 801fa80:	da04      	bge.n	801fa8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa82:	2b00      	cmp	r3, #0
 801fa84:	db02      	blt.n	801fa8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fa86:	4563      	cmp	r3, ip
 801fa88:	f2c0 80b8 	blt.w	801fbfc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fa8c:	f11e 0e01 	adds.w	lr, lr, #1
 801fa90:	f100 80a9 	bmi.w	801fbe6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fa94:	4571      	cmp	r1, lr
 801fa96:	f2c0 80a6 	blt.w	801fbe6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801fa9a:	3301      	adds	r3, #1
 801fa9c:	f100 80a3 	bmi.w	801fbe6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801faa0:	429a      	cmp	r2, r3
 801faa2:	f2c0 80a0 	blt.w	801fbe6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801faa6:	46c8      	mov	r8, r9
 801faa8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801faaa:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801faae:	930e      	str	r3, [sp, #56]	@ 0x38
 801fab0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fab2:	2b00      	cmp	r3, #0
 801fab4:	f340 80c2 	ble.w	801fc3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801fab8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801faba:	1430      	asrs	r0, r6, #16
 801fabc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fac0:	1423      	asrs	r3, r4, #16
 801fac2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fac6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801faca:	f100 814d 	bmi.w	801fd68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801face:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fad2:	455b      	cmp	r3, fp
 801fad4:	f280 8148 	bge.w	801fd68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801fad8:	2800      	cmp	r0, #0
 801fada:	f2c0 8145 	blt.w	801fd68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801fade:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fae2:	4558      	cmp	r0, fp
 801fae4:	f280 8140 	bge.w	801fd68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801fae8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801faea:	fb00 3305 	mla	r3, r0, r5, r3
 801faee:	0858      	lsrs	r0, r3, #1
 801faf0:	f817 c000 	ldrb.w	ip, [r7, r0]
 801faf4:	07dd      	lsls	r5, r3, #31
 801faf6:	bf54      	ite	pl
 801faf8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fafc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb00:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb04:	fa5f fc8c 	uxtb.w	ip, ip
 801fb08:	2a00      	cmp	r2, #0
 801fb0a:	f000 80db 	beq.w	801fcc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801fb0e:	1c58      	adds	r0, r3, #1
 801fb10:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fb14:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fb18:	07c0      	lsls	r0, r0, #31
 801fb1a:	bf54      	ite	pl
 801fb1c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fb20:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fb24:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fb28:	fa5f f08e 	uxtb.w	r0, lr
 801fb2c:	9010      	str	r0, [sp, #64]	@ 0x40
 801fb2e:	b1c9      	cbz	r1, 801fb64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 801fb30:	4453      	add	r3, sl
 801fb32:	0858      	lsrs	r0, r3, #1
 801fb34:	5c38      	ldrb	r0, [r7, r0]
 801fb36:	07dd      	lsls	r5, r3, #31
 801fb38:	bf54      	ite	pl
 801fb3a:	f000 000f 	andpl.w	r0, r0, #15
 801fb3e:	1100      	asrmi	r0, r0, #4
 801fb40:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fb44:	3301      	adds	r3, #1
 801fb46:	b2c0      	uxtb	r0, r0
 801fb48:	900b      	str	r0, [sp, #44]	@ 0x2c
 801fb4a:	0858      	lsrs	r0, r3, #1
 801fb4c:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fb50:	07dd      	lsls	r5, r3, #31
 801fb52:	bf54      	ite	pl
 801fb54:	f00e 030f 	andpl.w	r3, lr, #15
 801fb58:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fb5c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb60:	b2db      	uxtb	r3, r3
 801fb62:	9311      	str	r3, [sp, #68]	@ 0x44
 801fb64:	b292      	uxth	r2, r2
 801fb66:	b289      	uxth	r1, r1
 801fb68:	fb02 f301 	mul.w	r3, r2, r1
 801fb6c:	0112      	lsls	r2, r2, #4
 801fb6e:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fb72:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fb74:	1ad2      	subs	r2, r2, r3
 801fb76:	b292      	uxth	r2, r2
 801fb78:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fb7c:	436a      	muls	r2, r5
 801fb7e:	b289      	uxth	r1, r1
 801fb80:	1a40      	subs	r0, r0, r1
 801fb82:	b280      	uxth	r0, r0
 801fb84:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fb88:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fb8a:	fb01 c102 	mla	r1, r1, r2, ip
 801fb8e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801fb90:	fb03 1302 	mla	r3, r3, r2, r1
 801fb94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fb98:	b1db      	cbz	r3, 801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fb9a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fb9c:	4353      	muls	r3, r2
 801fb9e:	1c5a      	adds	r2, r3, #1
 801fba0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fba4:	4ac6      	ldr	r2, [pc, #792]	@ (801fec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fba6:	121b      	asrs	r3, r3, #8
 801fba8:	6812      	ldr	r2, [r2, #0]
 801fbaa:	2bff      	cmp	r3, #255	@ 0xff
 801fbac:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fbb0:	f040 8099 	bne.w	801fce6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801fbb4:	0953      	lsrs	r3, r2, #5
 801fbb6:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fbba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fbbe:	f02c 0c07 	bic.w	ip, ip, #7
 801fbc2:	ea43 0c0c 	orr.w	ip, r3, ip
 801fbc6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fbca:	ea4c 0202 	orr.w	r2, ip, r2
 801fbce:	f8a8 2000 	strh.w	r2, [r8]
 801fbd2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fbd4:	f108 0802 	add.w	r8, r8, #2
 801fbd8:	441c      	add	r4, r3
 801fbda:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fbdc:	441e      	add	r6, r3
 801fbde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fbe0:	3b01      	subs	r3, #1
 801fbe2:	930e      	str	r3, [sp, #56]	@ 0x38
 801fbe4:	e764      	b.n	801fab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fbe6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fbe8:	f109 0902 	add.w	r9, r9, #2
 801fbec:	441c      	add	r4, r3
 801fbee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fbf0:	441e      	add	r6, r3
 801fbf2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbf4:	3b01      	subs	r3, #1
 801fbf6:	9309      	str	r3, [sp, #36]	@ 0x24
 801fbf8:	e738      	b.n	801fa6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fbfa:	d024      	beq.n	801fc46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801fbfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbfe:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801fc00:	3b01      	subs	r3, #1
 801fc02:	fb00 4003 	mla	r0, r0, r3, r4
 801fc06:	1400      	asrs	r0, r0, #16
 801fc08:	f53f af4d 	bmi.w	801faa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc0c:	3901      	subs	r1, #1
 801fc0e:	4288      	cmp	r0, r1
 801fc10:	f6bf af49 	bge.w	801faa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc14:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801fc16:	fb01 6303 	mla	r3, r1, r3, r6
 801fc1a:	141b      	asrs	r3, r3, #16
 801fc1c:	f53f af43 	bmi.w	801faa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc20:	3a01      	subs	r2, #1
 801fc22:	4293      	cmp	r3, r2
 801fc24:	f6bf af3f 	bge.w	801faa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc28:	46c8      	mov	r8, r9
 801fc2a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801fc2e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801fc32:	930e      	str	r3, [sp, #56]	@ 0x38
 801fc34:	f1bb 0f00 	cmp.w	fp, #0
 801fc38:	f300 80b7 	bgt.w	801fdaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 801fc3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc3e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fc42:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fc46:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fc48:	2b00      	cmp	r3, #0
 801fc4a:	f340 818e 	ble.w	801ff6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fc4e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fc52:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc62:	eef0 6a62 	vmov.f32	s13, s5
 801fc66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc7a:	ee16 4a90 	vmov	r4, s13
 801fc7e:	eef0 6a43 	vmov.f32	s13, s6
 801fc82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc86:	ee12 2a90 	vmov	r2, s5
 801fc8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fc90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc94:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc98:	ee13 2a10 	vmov	r2, s6
 801fc9c:	9323      	str	r3, [sp, #140]	@ 0x8c
 801fc9e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fca0:	ee16 6a90 	vmov	r6, s13
 801fca4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fca8:	9324      	str	r3, [sp, #144]	@ 0x90
 801fcaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fcac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801fcae:	3b01      	subs	r3, #1
 801fcb0:	930d      	str	r3, [sp, #52]	@ 0x34
 801fcb2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fcb4:	bf08      	it	eq
 801fcb6:	4613      	moveq	r3, r2
 801fcb8:	eeb0 3a67 	vmov.f32	s6, s15
 801fcbc:	9309      	str	r3, [sp, #36]	@ 0x24
 801fcbe:	eef0 2a47 	vmov.f32	s5, s14
 801fcc2:	e6c4      	b.n	801fa4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fcc4:	2900      	cmp	r1, #0
 801fcc6:	f43f af4d 	beq.w	801fb64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 801fcca:	eb0a 0003 	add.w	r0, sl, r3
 801fcce:	0843      	lsrs	r3, r0, #1
 801fcd0:	5cfb      	ldrb	r3, [r7, r3]
 801fcd2:	07c0      	lsls	r0, r0, #31
 801fcd4:	bf54      	ite	pl
 801fcd6:	f003 030f 	andpl.w	r3, r3, #15
 801fcda:	111b      	asrmi	r3, r3, #4
 801fcdc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fce0:	b2db      	uxtb	r3, r3
 801fce2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fce4:	e73e      	b.n	801fb64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 801fce6:	fa1f fb83 	uxth.w	fp, r3
 801fcea:	43db      	mvns	r3, r3
 801fcec:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fcf0:	f8b8 e000 	ldrh.w	lr, [r8]
 801fcf4:	fb11 f10b 	smulbb	r1, r1, fp
 801fcf8:	fa5f fc8c 	uxtb.w	ip, ip
 801fcfc:	b2d2      	uxtb	r2, r2
 801fcfe:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fd02:	fb1c fc0b 	smulbb	ip, ip, fp
 801fd06:	fb12 fb0b 	smulbb	fp, r2, fp
 801fd0a:	b2db      	uxtb	r3, r3
 801fd0c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fd10:	fb00 1003 	mla	r0, r0, r3, r1
 801fd14:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fd18:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fd1c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fd20:	fa5f fe8e 	uxtb.w	lr, lr
 801fd24:	fb01 cc03 	mla	ip, r1, r3, ip
 801fd28:	fb0e bb03 	mla	fp, lr, r3, fp
 801fd2c:	b280      	uxth	r0, r0
 801fd2e:	1c43      	adds	r3, r0, #1
 801fd30:	fa1f fc8c 	uxth.w	ip, ip
 801fd34:	fa1f fb8b 	uxth.w	fp, fp
 801fd38:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fd3c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801fd40:	f10c 0101 	add.w	r1, ip, #1
 801fd44:	f10b 0001 	add.w	r0, fp, #1
 801fd48:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fd4c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fd50:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fd54:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fd58:	4318      	orrs	r0, r3
 801fd5a:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fd5e:	ea40 000c 	orr.w	r0, r0, ip
 801fd62:	f8a8 0000 	strh.w	r0, [r8]
 801fd66:	e734      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fd68:	f113 0b01 	adds.w	fp, r3, #1
 801fd6c:	f53f af31 	bmi.w	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fd70:	45dc      	cmp	ip, fp
 801fd72:	f6ff af2e 	blt.w	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fd76:	f110 0b01 	adds.w	fp, r0, #1
 801fd7a:	f53f af2a 	bmi.w	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fd7e:	45de      	cmp	lr, fp
 801fd80:	f6ff af27 	blt.w	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fd84:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fd86:	9302      	str	r3, [sp, #8]
 801fd88:	fa0f f38e 	sxth.w	r3, lr
 801fd8c:	9301      	str	r3, [sp, #4]
 801fd8e:	fa0f f38c 	sxth.w	r3, ip
 801fd92:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fd96:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fd9a:	9300      	str	r3, [sp, #0]
 801fd9c:	463a      	mov	r2, r7
 801fd9e:	4653      	mov	r3, sl
 801fda0:	4641      	mov	r1, r8
 801fda2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fda4:	f7ff fd4e 	bl	801f844 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fda8:	e713      	b.n	801fbd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801fdaa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801fdac:	1422      	asrs	r2, r4, #16
 801fdae:	1433      	asrs	r3, r6, #16
 801fdb0:	fb05 2303 	mla	r3, r5, r3, r2
 801fdb4:	085a      	lsrs	r2, r3, #1
 801fdb6:	5cba      	ldrb	r2, [r7, r2]
 801fdb8:	07dd      	lsls	r5, r3, #31
 801fdba:	bf54      	ite	pl
 801fdbc:	f002 020f 	andpl.w	r2, r2, #15
 801fdc0:	1112      	asrmi	r2, r2, #4
 801fdc2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fdc6:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fdca:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fdce:	b2d2      	uxtb	r2, r2
 801fdd0:	2900      	cmp	r1, #0
 801fdd2:	d077      	beq.n	801fec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fdd4:	f103 0e01 	add.w	lr, r3, #1
 801fdd8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fddc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fde0:	f01e 0f01 	tst.w	lr, #1
 801fde4:	bf0c      	ite	eq
 801fde6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fdea:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fdee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdf2:	fa5f f58c 	uxtb.w	r5, ip
 801fdf6:	9512      	str	r5, [sp, #72]	@ 0x48
 801fdf8:	b300      	cbz	r0, 801fe3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 801fdfa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fdfc:	442b      	add	r3, r5
 801fdfe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fe02:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fe06:	07dd      	lsls	r5, r3, #31
 801fe08:	bf54      	ite	pl
 801fe0a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe0e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe12:	3301      	adds	r3, #1
 801fe14:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe18:	fa5f f58c 	uxtb.w	r5, ip
 801fe1c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fe20:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fe24:	950c      	str	r5, [sp, #48]	@ 0x30
 801fe26:	07dd      	lsls	r5, r3, #31
 801fe28:	bf54      	ite	pl
 801fe2a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe2e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe32:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe36:	fa5f f38c 	uxtb.w	r3, ip
 801fe3a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fe3c:	b289      	uxth	r1, r1
 801fe3e:	b280      	uxth	r0, r0
 801fe40:	fb01 f300 	mul.w	r3, r1, r0
 801fe44:	0109      	lsls	r1, r1, #4
 801fe46:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801fe4a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe4c:	1ac9      	subs	r1, r1, r3
 801fe4e:	b289      	uxth	r1, r1
 801fe50:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fe54:	4369      	muls	r1, r5
 801fe56:	b280      	uxth	r0, r0
 801fe58:	ebac 0c00 	sub.w	ip, ip, r0
 801fe5c:	fa1f fc8c 	uxth.w	ip, ip
 801fe60:	fb02 120c 	mla	r2, r2, ip, r1
 801fe64:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fe66:	fb00 2001 	mla	r0, r0, r1, r2
 801fe6a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fe6c:	fb03 0302 	mla	r3, r3, r2, r0
 801fe70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe74:	b1d3      	cbz	r3, 801feac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 801fe76:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fe78:	4353      	muls	r3, r2
 801fe7a:	1c5a      	adds	r2, r3, #1
 801fe7c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fe80:	4a0f      	ldr	r2, [pc, #60]	@ (801fec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fe82:	121b      	asrs	r3, r3, #8
 801fe84:	6812      	ldr	r2, [r2, #0]
 801fe86:	2bff      	cmp	r3, #255	@ 0xff
 801fe88:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fe8c:	d12e      	bne.n	801feec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fe8e:	0953      	lsrs	r3, r2, #5
 801fe90:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fe94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe98:	f02c 0c07 	bic.w	ip, ip, #7
 801fe9c:	ea43 0c0c 	orr.w	ip, r3, ip
 801fea0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fea4:	ea4c 0202 	orr.w	r2, ip, r2
 801fea8:	f8a8 2000 	strh.w	r2, [r8]
 801feac:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801feae:	f108 0802 	add.w	r8, r8, #2
 801feb2:	441c      	add	r4, r3
 801feb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801feb6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801feba:	441e      	add	r6, r3
 801febc:	e6ba      	b.n	801fc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 801febe:	bf00      	nop
 801fec0:	20002238 	.word	0x20002238
 801fec4:	2800      	cmp	r0, #0
 801fec6:	d0b9      	beq.n	801fe3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 801fec8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801feca:	442b      	add	r3, r5
 801fecc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fed0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fed4:	07db      	lsls	r3, r3, #31
 801fed6:	bf54      	ite	pl
 801fed8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fedc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fee0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fee4:	fa5f f38c 	uxtb.w	r3, ip
 801fee8:	930c      	str	r3, [sp, #48]	@ 0x30
 801feea:	e7a7      	b.n	801fe3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 801feec:	fa1f fa83 	uxth.w	sl, r3
 801fef0:	43db      	mvns	r3, r3
 801fef2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fef6:	f8b8 e000 	ldrh.w	lr, [r8]
 801fefa:	fb11 f10a 	smulbb	r1, r1, sl
 801fefe:	b2d2      	uxtb	r2, r2
 801ff00:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ff04:	fb12 f20a 	smulbb	r2, r2, sl
 801ff08:	b2db      	uxtb	r3, r3
 801ff0a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ff0e:	fb00 1003 	mla	r0, r0, r3, r1
 801ff12:	fa5f fc8c 	uxtb.w	ip, ip
 801ff16:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ff1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ff1e:	fb1c fc0a 	smulbb	ip, ip, sl
 801ff22:	fa5f fe8e 	uxtb.w	lr, lr
 801ff26:	fb0e 2203 	mla	r2, lr, r3, r2
 801ff2a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ff2e:	fb01 cc03 	mla	ip, r1, r3, ip
 801ff32:	b280      	uxth	r0, r0
 801ff34:	b292      	uxth	r2, r2
 801ff36:	1c43      	adds	r3, r0, #1
 801ff38:	1c51      	adds	r1, r2, #1
 801ff3a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ff3e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801ff42:	fa1f fc8c 	uxth.w	ip, ip
 801ff46:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ff4a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ff4e:	4308      	orrs	r0, r1
 801ff50:	f10c 0101 	add.w	r1, ip, #1
 801ff54:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ff58:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ff5c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ff60:	ea40 000c 	orr.w	r0, r0, ip
 801ff64:	f8a8 0000 	strh.w	r0, [r8]
 801ff68:	e7a0      	b.n	801feac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 801ff6a:	b017      	add	sp, #92	@ 0x5c
 801ff6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ff70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ff74:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801ff78:	2d00      	cmp	r5, #0
 801ff7a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ff7e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801ff82:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801ff86:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801ff8a:	fb05 0e03 	mla	lr, r5, r3, r0
 801ff8e:	f2c0 80b0 	blt.w	80200f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff92:	45a9      	cmp	r9, r5
 801ff94:	f340 80ad 	ble.w	80200f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ff98:	2800      	cmp	r0, #0
 801ff9a:	f2c0 80a8 	blt.w	80200ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ff9e:	4580      	cmp	r8, r0
 801ffa0:	f340 80a5 	ble.w	80200ee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ffa4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ffa8:	5d16      	ldrb	r6, [r2, r4]
 801ffaa:	f01e 0f01 	tst.w	lr, #1
 801ffae:	bf0c      	ite	eq
 801ffb0:	f006 060f 	andeq.w	r6, r6, #15
 801ffb4:	1136      	asrne	r6, r6, #4
 801ffb6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ffba:	b2f6      	uxtb	r6, r6
 801ffbc:	1c44      	adds	r4, r0, #1
 801ffbe:	f100 809b 	bmi.w	80200f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ffc2:	45a0      	cmp	r8, r4
 801ffc4:	f340 8098 	ble.w	80200f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801ffc8:	2f00      	cmp	r7, #0
 801ffca:	f000 8097 	beq.w	80200fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801ffce:	f10e 0a01 	add.w	sl, lr, #1
 801ffd2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ffd6:	5d14      	ldrb	r4, [r2, r4]
 801ffd8:	f01a 0f01 	tst.w	sl, #1
 801ffdc:	bf0c      	ite	eq
 801ffde:	f004 040f 	andeq.w	r4, r4, #15
 801ffe2:	1124      	asrne	r4, r4, #4
 801ffe4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ffe8:	b2e4      	uxtb	r4, r4
 801ffea:	3501      	adds	r5, #1
 801ffec:	f100 808a 	bmi.w	8020104 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fff0:	45a9      	cmp	r9, r5
 801fff2:	f340 8087 	ble.w	8020104 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fff6:	f1bc 0f00 	cmp.w	ip, #0
 801fffa:	f000 8086 	beq.w	802010a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fffe:	2800      	cmp	r0, #0
 8020000:	db7e      	blt.n	8020100 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020002:	4580      	cmp	r8, r0
 8020004:	dd7c      	ble.n	8020100 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020006:	eb03 090e 	add.w	r9, r3, lr
 802000a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802000e:	5d55      	ldrb	r5, [r2, r5]
 8020010:	f019 0f01 	tst.w	r9, #1
 8020014:	bf0c      	ite	eq
 8020016:	f005 050f 	andeq.w	r5, r5, #15
 802001a:	112d      	asrne	r5, r5, #4
 802001c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020020:	b2ed      	uxtb	r5, r5
 8020022:	3001      	adds	r0, #1
 8020024:	d474      	bmi.n	8020110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020026:	4580      	cmp	r8, r0
 8020028:	dd72      	ble.n	8020110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802002a:	2f00      	cmp	r7, #0
 802002c:	d072      	beq.n	8020114 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802002e:	3301      	adds	r3, #1
 8020030:	449e      	add	lr, r3
 8020032:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020036:	5cd0      	ldrb	r0, [r2, r3]
 8020038:	f01e 0f01 	tst.w	lr, #1
 802003c:	bf0c      	ite	eq
 802003e:	f000 000f 	andeq.w	r0, r0, #15
 8020042:	1100      	asrne	r0, r0, #4
 8020044:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020048:	b2c3      	uxtb	r3, r0
 802004a:	b2ba      	uxth	r2, r7
 802004c:	fa1f fc8c 	uxth.w	ip, ip
 8020050:	fb02 f00c 	mul.w	r0, r2, ip
 8020054:	0112      	lsls	r2, r2, #4
 8020056:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802005a:	1a12      	subs	r2, r2, r0
 802005c:	b292      	uxth	r2, r2
 802005e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020062:	4362      	muls	r2, r4
 8020064:	fa1f fc8c 	uxth.w	ip, ip
 8020068:	eba7 070c 	sub.w	r7, r7, ip
 802006c:	b2bf      	uxth	r7, r7
 802006e:	fb06 2207 	mla	r2, r6, r7, r2
 8020072:	fb0c 2505 	mla	r5, ip, r5, r2
 8020076:	fb00 5303 	mla	r3, r0, r3, r5
 802007a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802007e:	b3a3      	cbz	r3, 80200ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020080:	4a25      	ldr	r2, [pc, #148]	@ (8020118 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020082:	880e      	ldrh	r6, [r1, #0]
 8020084:	6815      	ldr	r5, [r2, #0]
 8020086:	b29a      	uxth	r2, r3
 8020088:	43db      	mvns	r3, r3
 802008a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802008e:	fb10 f002 	smulbb	r0, r0, r2
 8020092:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020096:	b2ed      	uxtb	r5, r5
 8020098:	1234      	asrs	r4, r6, #8
 802009a:	fb17 f702 	smulbb	r7, r7, r2
 802009e:	fb15 f202 	smulbb	r2, r5, r2
 80200a2:	b2db      	uxtb	r3, r3
 80200a4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80200a8:	fb04 0403 	mla	r4, r4, r3, r0
 80200ac:	10f0      	asrs	r0, r6, #3
 80200ae:	00f6      	lsls	r6, r6, #3
 80200b0:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80200b4:	b2f6      	uxtb	r6, r6
 80200b6:	fb00 7003 	mla	r0, r0, r3, r7
 80200ba:	fb06 2303 	mla	r3, r6, r3, r2
 80200be:	b2a4      	uxth	r4, r4
 80200c0:	b29a      	uxth	r2, r3
 80200c2:	1c63      	adds	r3, r4, #1
 80200c4:	b280      	uxth	r0, r0
 80200c6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80200ca:	1c53      	adds	r3, r2, #1
 80200cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80200d0:	1c42      	adds	r2, r0, #1
 80200d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80200d6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80200da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80200de:	0940      	lsrs	r0, r0, #5
 80200e0:	4323      	orrs	r3, r4
 80200e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80200e6:	4303      	orrs	r3, r0
 80200e8:	800b      	strh	r3, [r1, #0]
 80200ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80200ee:	2600      	movs	r6, #0
 80200f0:	e764      	b.n	801ffbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80200f2:	2400      	movs	r4, #0
 80200f4:	4626      	mov	r6, r4
 80200f6:	e778      	b.n	801ffea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80200f8:	2400      	movs	r4, #0
 80200fa:	e776      	b.n	801ffea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80200fc:	463c      	mov	r4, r7
 80200fe:	e774      	b.n	801ffea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020100:	2500      	movs	r5, #0
 8020102:	e78e      	b.n	8020022 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020104:	2300      	movs	r3, #0
 8020106:	461d      	mov	r5, r3
 8020108:	e79f      	b.n	802004a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802010a:	4663      	mov	r3, ip
 802010c:	4665      	mov	r5, ip
 802010e:	e79c      	b.n	802004a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020110:	2300      	movs	r3, #0
 8020112:	e79a      	b.n	802004a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020114:	463b      	mov	r3, r7
 8020116:	e798      	b.n	802004a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020118:	20002238 	.word	0x20002238

0802011c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802011c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020120:	b093      	sub	sp, #76	@ 0x4c
 8020122:	920c      	str	r2, [sp, #48]	@ 0x30
 8020124:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020126:	9011      	str	r0, [sp, #68]	@ 0x44
 8020128:	6850      	ldr	r0, [r2, #4]
 802012a:	9107      	str	r1, [sp, #28]
 802012c:	461d      	mov	r5, r3
 802012e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020132:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020136:	fb00 1303 	mla	r3, r0, r3, r1
 802013a:	6812      	ldr	r2, [r2, #0]
 802013c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020140:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020142:	689b      	ldr	r3, [r3, #8]
 8020144:	3301      	adds	r3, #1
 8020146:	f023 0301 	bic.w	r3, r3, #1
 802014a:	9306      	str	r3, [sp, #24]
 802014c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802014e:	681f      	ldr	r7, [r3, #0]
 8020150:	9b07      	ldr	r3, [sp, #28]
 8020152:	2b00      	cmp	r3, #0
 8020154:	dc03      	bgt.n	802015e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020156:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020158:	2b00      	cmp	r3, #0
 802015a:	f340 8265 	ble.w	8020628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 802015e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020160:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020164:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020168:	1e48      	subs	r0, r1, #1
 802016a:	f102 3cff 	add.w	ip, r2, #4294967295
 802016e:	2d00      	cmp	r5, #0
 8020170:	f340 80b7 	ble.w	80202e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020174:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020178:	ea4f 4326 	mov.w	r3, r6, asr #16
 802017c:	d406      	bmi.n	802018c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802017e:	4586      	cmp	lr, r0
 8020180:	da04      	bge.n	802018c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020182:	2b00      	cmp	r3, #0
 8020184:	db02      	blt.n	802018c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020186:	4563      	cmp	r3, ip
 8020188:	f2c0 80ac 	blt.w	80202e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802018c:	f11e 0e01 	adds.w	lr, lr, #1
 8020190:	f100 809f 	bmi.w	80202d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020194:	4571      	cmp	r1, lr
 8020196:	f2c0 809c 	blt.w	80202d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802019a:	3301      	adds	r3, #1
 802019c:	f100 8099 	bmi.w	80202d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80201a0:	429a      	cmp	r2, r3
 80201a2:	f2c0 8096 	blt.w	80202d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80201a6:	46c8      	mov	r8, r9
 80201a8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80201ac:	9509      	str	r5, [sp, #36]	@ 0x24
 80201ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201b0:	2b00      	cmp	r3, #0
 80201b2:	f340 80b5 	ble.w	8020320 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80201b6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80201ba:	9308      	str	r3, [sp, #32]
 80201bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80201be:	1430      	asrs	r0, r6, #16
 80201c0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80201c4:	1423      	asrs	r3, r4, #16
 80201c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80201ca:	f100 813e 	bmi.w	802044a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80201ce:	f10c 3bff 	add.w	fp, ip, #4294967295
 80201d2:	455b      	cmp	r3, fp
 80201d4:	f280 8139 	bge.w	802044a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80201d8:	2800      	cmp	r0, #0
 80201da:	f2c0 8136 	blt.w	802044a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80201de:	f10e 3bff 	add.w	fp, lr, #4294967295
 80201e2:	4558      	cmp	r0, fp
 80201e4:	f280 8131 	bge.w	802044a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80201e8:	9a06      	ldr	r2, [sp, #24]
 80201ea:	fb00 3302 	mla	r3, r0, r2, r3
 80201ee:	0858      	lsrs	r0, r3, #1
 80201f0:	f817 c000 	ldrb.w	ip, [r7, r0]
 80201f4:	07da      	lsls	r2, r3, #31
 80201f6:	bf54      	ite	pl
 80201f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80201fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020200:	9a08      	ldr	r2, [sp, #32]
 8020202:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020206:	fa5f fc8c 	uxtb.w	ip, ip
 802020a:	2a00      	cmp	r2, #0
 802020c:	f000 80cb 	beq.w	80203a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8020210:	1c58      	adds	r0, r3, #1
 8020212:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020216:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802021a:	07c0      	lsls	r0, r0, #31
 802021c:	bf54      	ite	pl
 802021e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020222:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020226:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802022a:	fa5f fe8e 	uxtb.w	lr, lr
 802022e:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020232:	b1b9      	cbz	r1, 8020264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020234:	4453      	add	r3, sl
 8020236:	0858      	lsrs	r0, r3, #1
 8020238:	5c38      	ldrb	r0, [r7, r0]
 802023a:	07da      	lsls	r2, r3, #31
 802023c:	bf54      	ite	pl
 802023e:	f000 000f 	andpl.w	r0, r0, #15
 8020242:	1100      	asrmi	r0, r0, #4
 8020244:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020248:	b2c0      	uxtb	r0, r0
 802024a:	900a      	str	r0, [sp, #40]	@ 0x28
 802024c:	1c58      	adds	r0, r3, #1
 802024e:	0843      	lsrs	r3, r0, #1
 8020250:	5cfb      	ldrb	r3, [r7, r3]
 8020252:	07c2      	lsls	r2, r0, #31
 8020254:	bf54      	ite	pl
 8020256:	f003 030f 	andpl.w	r3, r3, #15
 802025a:	111b      	asrmi	r3, r3, #4
 802025c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020260:	b2db      	uxtb	r3, r3
 8020262:	930e      	str	r3, [sp, #56]	@ 0x38
 8020264:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020268:	b289      	uxth	r1, r1
 802026a:	fb02 f301 	mul.w	r3, r2, r1
 802026e:	0112      	lsls	r2, r2, #4
 8020270:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020274:	b289      	uxth	r1, r1
 8020276:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802027a:	1a40      	subs	r0, r0, r1
 802027c:	fa1f fe80 	uxth.w	lr, r0
 8020280:	1ad2      	subs	r2, r2, r3
 8020282:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020284:	b292      	uxth	r2, r2
 8020286:	4342      	muls	r2, r0
 8020288:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802028c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802028e:	fb01 c102 	mla	r1, r1, r2, ip
 8020292:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020294:	fb03 1302 	mla	r3, r3, r2, r1
 8020298:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802029c:	2bff      	cmp	r3, #255	@ 0xff
 802029e:	f040 8093 	bne.w	80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 80202a2:	4bbe      	ldr	r3, [pc, #760]	@ (802059c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 80202a4:	681a      	ldr	r2, [r3, #0]
 80202a6:	4bbe      	ldr	r3, [pc, #760]	@ (80205a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80202a8:	0951      	lsrs	r1, r2, #5
 80202aa:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80202ae:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80202b2:	430b      	orrs	r3, r1
 80202b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80202b8:	4313      	orrs	r3, r2
 80202ba:	f8a8 3000 	strh.w	r3, [r8]
 80202be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80202c0:	f108 0802 	add.w	r8, r8, #2
 80202c4:	441c      	add	r4, r3
 80202c6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80202c8:	441e      	add	r6, r3
 80202ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80202cc:	3b01      	subs	r3, #1
 80202ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80202d0:	e76d      	b.n	80201ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80202d2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80202d4:	3d01      	subs	r5, #1
 80202d6:	441c      	add	r4, r3
 80202d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80202da:	f109 0902 	add.w	r9, r9, #2
 80202de:	441e      	add	r6, r3
 80202e0:	e745      	b.n	802016e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80202e2:	d021      	beq.n	8020328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80202e4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80202e6:	1e6b      	subs	r3, r5, #1
 80202e8:	fb00 4003 	mla	r0, r0, r3, r4
 80202ec:	1400      	asrs	r0, r0, #16
 80202ee:	f53f af5a 	bmi.w	80201a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202f2:	3901      	subs	r1, #1
 80202f4:	4288      	cmp	r0, r1
 80202f6:	f6bf af56 	bge.w	80201a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80202fa:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80202fc:	fb01 6303 	mla	r3, r1, r3, r6
 8020300:	141b      	asrs	r3, r3, #16
 8020302:	f53f af50 	bmi.w	80201a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020306:	3a01      	subs	r2, #1
 8020308:	4293      	cmp	r3, r2
 802030a:	f6bf af4c 	bge.w	80201a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802030e:	46a8      	mov	r8, r5
 8020310:	46ce      	mov	lr, r9
 8020312:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020316:	9308      	str	r3, [sp, #32]
 8020318:	f1b8 0f00 	cmp.w	r8, #0
 802031c:	f300 80b5 	bgt.w	802048a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8020320:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020324:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020328:	9b07      	ldr	r3, [sp, #28]
 802032a:	2b00      	cmp	r3, #0
 802032c:	f340 817c 	ble.w	8020628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8020330:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020334:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020338:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802033c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020340:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020344:	eef0 6a62 	vmov.f32	s13, s5
 8020348:	ee31 1a05 	vadd.f32	s2, s2, s10
 802034c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020350:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020354:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020358:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802035c:	ee16 4a90 	vmov	r4, s13
 8020360:	eef0 6a43 	vmov.f32	s13, s6
 8020364:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020368:	ee12 2a90 	vmov	r2, s5
 802036c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020370:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020372:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020376:	fb92 f3f3 	sdiv	r3, r2, r3
 802037a:	ee13 2a10 	vmov	r2, s6
 802037e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020380:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020382:	ee16 6a90 	vmov	r6, s13
 8020386:	fb92 f3f3 	sdiv	r3, r2, r3
 802038a:	9320      	str	r3, [sp, #128]	@ 0x80
 802038c:	9b07      	ldr	r3, [sp, #28]
 802038e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020390:	3b01      	subs	r3, #1
 8020392:	9307      	str	r3, [sp, #28]
 8020394:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020396:	bf0c      	ite	eq
 8020398:	4615      	moveq	r5, r2
 802039a:	461d      	movne	r5, r3
 802039c:	eeb0 3a67 	vmov.f32	s6, s15
 80203a0:	eef0 2a47 	vmov.f32	s5, s14
 80203a4:	e6d4      	b.n	8020150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80203a6:	2900      	cmp	r1, #0
 80203a8:	f43f af5c 	beq.w	8020264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80203ac:	eb0a 0003 	add.w	r0, sl, r3
 80203b0:	0843      	lsrs	r3, r0, #1
 80203b2:	5cfb      	ldrb	r3, [r7, r3]
 80203b4:	07c0      	lsls	r0, r0, #31
 80203b6:	bf54      	ite	pl
 80203b8:	f003 030f 	andpl.w	r3, r3, #15
 80203bc:	111b      	asrmi	r3, r3, #4
 80203be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80203c2:	b2db      	uxtb	r3, r3
 80203c4:	930a      	str	r3, [sp, #40]	@ 0x28
 80203c6:	e74d      	b.n	8020264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80203c8:	2b00      	cmp	r3, #0
 80203ca:	f43f af78 	beq.w	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80203ce:	fa1f fe83 	uxth.w	lr, r3
 80203d2:	43db      	mvns	r3, r3
 80203d4:	4a71      	ldr	r2, [pc, #452]	@ (802059c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 80203d6:	f8b8 c000 	ldrh.w	ip, [r8]
 80203da:	6810      	ldr	r0, [r2, #0]
 80203dc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80203e0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80203e4:	fb12 f20e 	smulbb	r2, r2, lr
 80203e8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80203ec:	b2c0      	uxtb	r0, r0
 80203ee:	fb1b fb0e 	smulbb	fp, fp, lr
 80203f2:	fb10 fe0e 	smulbb	lr, r0, lr
 80203f6:	b2db      	uxtb	r3, r3
 80203f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80203fc:	fb01 2103 	mla	r1, r1, r3, r2
 8020400:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020404:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020408:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802040c:	fa5f fc8c 	uxtb.w	ip, ip
 8020410:	fb02 b203 	mla	r2, r2, r3, fp
 8020414:	fb0c e303 	mla	r3, ip, r3, lr
 8020418:	b289      	uxth	r1, r1
 802041a:	1c48      	adds	r0, r1, #1
 802041c:	b292      	uxth	r2, r2
 802041e:	b29b      	uxth	r3, r3
 8020420:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020424:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020428:	f102 0b01 	add.w	fp, r2, #1
 802042c:	1c59      	adds	r1, r3, #1
 802042e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020432:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020436:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802043a:	0952      	lsrs	r2, r2, #5
 802043c:	4301      	orrs	r1, r0
 802043e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020442:	4311      	orrs	r1, r2
 8020444:	f8a8 1000 	strh.w	r1, [r8]
 8020448:	e739      	b.n	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802044a:	f113 0b01 	adds.w	fp, r3, #1
 802044e:	f53f af36 	bmi.w	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020452:	45dc      	cmp	ip, fp
 8020454:	f6ff af33 	blt.w	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020458:	f110 0b01 	adds.w	fp, r0, #1
 802045c:	f53f af2f 	bmi.w	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020460:	45de      	cmp	lr, fp
 8020462:	f6ff af2c 	blt.w	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020466:	9a08      	ldr	r2, [sp, #32]
 8020468:	9302      	str	r3, [sp, #8]
 802046a:	fa0f f38e 	sxth.w	r3, lr
 802046e:	9301      	str	r3, [sp, #4]
 8020470:	fa0f f38c 	sxth.w	r3, ip
 8020474:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020478:	9105      	str	r1, [sp, #20]
 802047a:	9300      	str	r3, [sp, #0]
 802047c:	463a      	mov	r2, r7
 802047e:	4653      	mov	r3, sl
 8020480:	4641      	mov	r1, r8
 8020482:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020484:	f7ff fd74 	bl	801ff70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020488:	e719      	b.n	80202be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802048a:	9906      	ldr	r1, [sp, #24]
 802048c:	1422      	asrs	r2, r4, #16
 802048e:	1433      	asrs	r3, r6, #16
 8020490:	fb01 2303 	mla	r3, r1, r3, r2
 8020494:	085a      	lsrs	r2, r3, #1
 8020496:	5cba      	ldrb	r2, [r7, r2]
 8020498:	07d9      	lsls	r1, r3, #31
 802049a:	bf54      	ite	pl
 802049c:	f002 020f 	andpl.w	r2, r2, #15
 80204a0:	1112      	asrmi	r2, r2, #4
 80204a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80204a6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80204aa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80204ae:	b2d2      	uxtb	r2, r2
 80204b0:	2800      	cmp	r0, #0
 80204b2:	d062      	beq.n	802057a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 80204b4:	f103 0a01 	add.w	sl, r3, #1
 80204b8:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80204bc:	5c79      	ldrb	r1, [r7, r1]
 80204be:	f01a 0f01 	tst.w	sl, #1
 80204c2:	bf0c      	ite	eq
 80204c4:	f001 010f 	andeq.w	r1, r1, #15
 80204c8:	1109      	asrne	r1, r1, #4
 80204ca:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80204ce:	b2c9      	uxtb	r1, r1
 80204d0:	910f      	str	r1, [sp, #60]	@ 0x3c
 80204d2:	f1bc 0f00 	cmp.w	ip, #0
 80204d6:	d019      	beq.n	802050c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80204d8:	9908      	ldr	r1, [sp, #32]
 80204da:	440b      	add	r3, r1
 80204dc:	0859      	lsrs	r1, r3, #1
 80204de:	5c79      	ldrb	r1, [r7, r1]
 80204e0:	f013 0f01 	tst.w	r3, #1
 80204e4:	bf0c      	ite	eq
 80204e6:	f001 010f 	andeq.w	r1, r1, #15
 80204ea:	1109      	asrne	r1, r1, #4
 80204ec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80204f0:	b2c9      	uxtb	r1, r1
 80204f2:	3301      	adds	r3, #1
 80204f4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80204f6:	0859      	lsrs	r1, r3, #1
 80204f8:	5c79      	ldrb	r1, [r7, r1]
 80204fa:	07db      	lsls	r3, r3, #31
 80204fc:	bf54      	ite	pl
 80204fe:	f001 010f 	andpl.w	r1, r1, #15
 8020502:	1109      	asrmi	r1, r1, #4
 8020504:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020508:	b2c9      	uxtb	r1, r1
 802050a:	9110      	str	r1, [sp, #64]	@ 0x40
 802050c:	b280      	uxth	r0, r0
 802050e:	fa1f fc8c 	uxth.w	ip, ip
 8020512:	fb00 f30c 	mul.w	r3, r0, ip
 8020516:	0100      	lsls	r0, r0, #4
 8020518:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802051c:	fa1f fc8c 	uxth.w	ip, ip
 8020520:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020524:	eba1 010c 	sub.w	r1, r1, ip
 8020528:	fa1f fa81 	uxth.w	sl, r1
 802052c:	1ac0      	subs	r0, r0, r3
 802052e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020530:	b280      	uxth	r0, r0
 8020532:	4348      	muls	r0, r1
 8020534:	fb02 020a 	mla	r2, r2, sl, r0
 8020538:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802053a:	fb0c 2c01 	mla	ip, ip, r1, r2
 802053e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020540:	fb03 c302 	mla	r3, r3, r2, ip
 8020544:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020548:	2bff      	cmp	r3, #255	@ 0xff
 802054a:	d12b      	bne.n	80205a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802054c:	4b13      	ldr	r3, [pc, #76]	@ (802059c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 802054e:	681a      	ldr	r2, [r3, #0]
 8020550:	4b13      	ldr	r3, [pc, #76]	@ (80205a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020552:	0951      	lsrs	r1, r2, #5
 8020554:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020558:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802055c:	430b      	orrs	r3, r1
 802055e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020562:	4313      	orrs	r3, r2
 8020564:	f8ae 3000 	strh.w	r3, [lr]
 8020568:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802056a:	f10e 0e02 	add.w	lr, lr, #2
 802056e:	441c      	add	r4, r3
 8020570:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020572:	f108 38ff 	add.w	r8, r8, #4294967295
 8020576:	441e      	add	r6, r3
 8020578:	e6ce      	b.n	8020318 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 802057a:	f1bc 0f00 	cmp.w	ip, #0
 802057e:	d0c5      	beq.n	802050c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8020580:	9908      	ldr	r1, [sp, #32]
 8020582:	440b      	add	r3, r1
 8020584:	0859      	lsrs	r1, r3, #1
 8020586:	5c79      	ldrb	r1, [r7, r1]
 8020588:	07db      	lsls	r3, r3, #31
 802058a:	bf54      	ite	pl
 802058c:	f001 010f 	andpl.w	r1, r1, #15
 8020590:	1109      	asrmi	r1, r1, #4
 8020592:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020596:	b2c9      	uxtb	r1, r1
 8020598:	910b      	str	r1, [sp, #44]	@ 0x2c
 802059a:	e7b7      	b.n	802050c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 802059c:	20002238 	.word	0x20002238
 80205a0:	fffff800 	.word	0xfffff800
 80205a4:	2b00      	cmp	r3, #0
 80205a6:	d0df      	beq.n	8020568 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 80205a8:	fa1f fa83 	uxth.w	sl, r3
 80205ac:	43db      	mvns	r3, r3
 80205ae:	4a20      	ldr	r2, [pc, #128]	@ (8020630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>)
 80205b0:	f8be c000 	ldrh.w	ip, [lr]
 80205b4:	6810      	ldr	r0, [r2, #0]
 80205b6:	ea4f 212c 	mov.w	r1, ip, asr #8
 80205ba:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80205be:	fb12 f20a 	smulbb	r2, r2, sl
 80205c2:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80205c6:	b2c0      	uxtb	r0, r0
 80205c8:	fb10 f00a 	smulbb	r0, r0, sl
 80205cc:	b2db      	uxtb	r3, r3
 80205ce:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80205d2:	fb01 2103 	mla	r1, r1, r3, r2
 80205d6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80205da:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80205de:	fb1b fb0a 	smulbb	fp, fp, sl
 80205e2:	fa5f fc8c 	uxtb.w	ip, ip
 80205e6:	fb0c 0003 	mla	r0, ip, r3, r0
 80205ea:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80205ee:	fb02 b203 	mla	r2, r2, r3, fp
 80205f2:	b289      	uxth	r1, r1
 80205f4:	b280      	uxth	r0, r0
 80205f6:	1c4b      	adds	r3, r1, #1
 80205f8:	f100 0b01 	add.w	fp, r0, #1
 80205fc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020600:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020604:	b292      	uxth	r2, r2
 8020606:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802060a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802060e:	ea4b 0101 	orr.w	r1, fp, r1
 8020612:	f102 0b01 	add.w	fp, r2, #1
 8020616:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802061a:	0952      	lsrs	r2, r2, #5
 802061c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020620:	4311      	orrs	r1, r2
 8020622:	f8ae 1000 	strh.w	r1, [lr]
 8020626:	e79f      	b.n	8020568 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8020628:	b013      	add	sp, #76	@ 0x4c
 802062a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802062e:	bf00      	nop
 8020630:	20002238 	.word	0x20002238

08020634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020634:	b570      	push	{r4, r5, r6, lr}
 8020636:	1208      	asrs	r0, r1, #8
 8020638:	b29e      	uxth	r6, r3
 802063a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802063e:	1213      	asrs	r3, r2, #8
 8020640:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020644:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020648:	fb13 f305 	smulbb	r3, r3, r5
 802064c:	fb10 f006 	smulbb	r0, r0, r6
 8020650:	10cc      	asrs	r4, r1, #3
 8020652:	4418      	add	r0, r3
 8020654:	10d3      	asrs	r3, r2, #3
 8020656:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802065a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802065e:	fb13 f305 	smulbb	r3, r3, r5
 8020662:	fb14 f406 	smulbb	r4, r4, r6
 8020666:	00c9      	lsls	r1, r1, #3
 8020668:	00d2      	lsls	r2, r2, #3
 802066a:	441c      	add	r4, r3
 802066c:	b2d2      	uxtb	r2, r2
 802066e:	b2cb      	uxtb	r3, r1
 8020670:	fb12 f205 	smulbb	r2, r2, r5
 8020674:	fb13 f306 	smulbb	r3, r3, r6
 8020678:	b280      	uxth	r0, r0
 802067a:	4413      	add	r3, r2
 802067c:	1c42      	adds	r2, r0, #1
 802067e:	b29b      	uxth	r3, r3
 8020680:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020684:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8020688:	1c58      	adds	r0, r3, #1
 802068a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802068e:	b2a4      	uxth	r4, r4
 8020690:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020694:	4310      	orrs	r0, r2
 8020696:	1c62      	adds	r2, r4, #1
 8020698:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802069c:	0964      	lsrs	r4, r4, #5
 802069e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80206a2:	4320      	orrs	r0, r4
 80206a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080206a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80206a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80206ac:	b08f      	sub	sp, #60	@ 0x3c
 80206ae:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80206b2:	461c      	mov	r4, r3
 80206b4:	9004      	str	r0, [sp, #16]
 80206b6:	460d      	mov	r5, r1
 80206b8:	4616      	mov	r6, r2
 80206ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80206bc:	2f00      	cmp	r7, #0
 80206be:	f000 80f5 	beq.w	80208ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x204>
 80206c2:	f04f 0802 	mov.w	r8, #2
 80206c6:	6820      	ldr	r0, [r4, #0]
 80206c8:	6861      	ldr	r1, [r4, #4]
 80206ca:	aa0a      	add	r2, sp, #40	@ 0x28
 80206cc:	c203      	stmia	r2!, {r0, r1}
 80206ce:	6818      	ldr	r0, [r3, #0]
 80206d0:	6859      	ldr	r1, [r3, #4]
 80206d2:	aa0c      	add	r2, sp, #48	@ 0x30
 80206d4:	c203      	stmia	r2!, {r0, r1}
 80206d6:	a80a      	add	r0, sp, #40	@ 0x28
 80206d8:	f7ee fe6a 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80206dc:	4621      	mov	r1, r4
 80206de:	a80c      	add	r0, sp, #48	@ 0x30
 80206e0:	f7ee fe8e 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80206e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80206e8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80206ec:	f002 0301 	and.w	r3, r2, #1
 80206f0:	9306      	str	r3, [sp, #24]
 80206f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80206f6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80206fa:	f003 0101 	and.w	r1, r3, #1
 80206fe:	9105      	str	r1, [sp, #20]
 8020700:	9805      	ldr	r0, [sp, #20]
 8020702:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020706:	4403      	add	r3, r0
 8020708:	fb01 2303 	mla	r3, r1, r3, r2
 802070c:	fb93 f3f8 	sdiv	r3, r3, r8
 8020710:	441d      	add	r5, r3
 8020712:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020716:	3604      	adds	r6, #4
 8020718:	441a      	add	r2, r3
 802071a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802071e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020722:	4419      	add	r1, r3
 8020724:	4b63      	ldr	r3, [pc, #396]	@ (80208b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020726:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802072a:	6818      	ldr	r0, [r3, #0]
 802072c:	6803      	ldr	r3, [r0, #0]
 802072e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020730:	4798      	blx	r3
 8020732:	4a61      	ldr	r2, [pc, #388]	@ (80208b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020734:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020738:	8813      	ldrh	r3, [r2, #0]
 802073a:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802073e:	2fff      	cmp	r7, #255	@ 0xff
 8020740:	fb03 a404 	mla	r4, r3, r4, sl
 8020744:	4611      	mov	r1, r2
 8020746:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802074a:	fb03 fb0b 	mul.w	fp, r3, fp
 802074e:	d06b      	beq.n	8020828 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8020750:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8020754:	9303      	str	r3, [sp, #12]
 8020756:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802075a:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802075e:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020762:	9b07      	ldr	r3, [sp, #28]
 8020764:	42a3      	cmp	r3, r4
 8020766:	f240 809c 	bls.w	80208a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fa>
 802076a:	9b06      	ldr	r3, [sp, #24]
 802076c:	2b00      	cmp	r3, #0
 802076e:	d039      	beq.n	80207e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8020770:	782b      	ldrb	r3, [r5, #0]
 8020772:	8822      	ldrh	r2, [r4, #0]
 8020774:	f003 030f 	and.w	r3, r3, #15
 8020778:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802077c:	9b03      	ldr	r3, [sp, #12]
 802077e:	9804      	ldr	r0, [sp, #16]
 8020780:	9300      	str	r3, [sp, #0]
 8020782:	463b      	mov	r3, r7
 8020784:	f7ff ff56 	bl	8020634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020788:	f105 0801 	add.w	r8, r5, #1
 802078c:	f824 0b02 	strh.w	r0, [r4], #2
 8020790:	f109 3bff 	add.w	fp, r9, #4294967295
 8020794:	f1bb 0f01 	cmp.w	fp, #1
 8020798:	46a2      	mov	sl, r4
 802079a:	f104 0404 	add.w	r4, r4, #4
 802079e:	dd24      	ble.n	80207ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 80207a0:	f898 3000 	ldrb.w	r3, [r8]
 80207a4:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80207a8:	091b      	lsrs	r3, r3, #4
 80207aa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80207ae:	9b03      	ldr	r3, [sp, #12]
 80207b0:	9804      	ldr	r0, [sp, #16]
 80207b2:	9300      	str	r3, [sp, #0]
 80207b4:	463b      	mov	r3, r7
 80207b6:	f7ff ff3d 	bl	8020634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80207ba:	f824 0c04 	strh.w	r0, [r4, #-4]
 80207be:	f818 3b01 	ldrb.w	r3, [r8], #1
 80207c2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80207c6:	f003 030f 	and.w	r3, r3, #15
 80207ca:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80207ce:	9b03      	ldr	r3, [sp, #12]
 80207d0:	9804      	ldr	r0, [sp, #16]
 80207d2:	9300      	str	r3, [sp, #0]
 80207d4:	463b      	mov	r3, r7
 80207d6:	f7ff ff2d 	bl	8020634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80207da:	f1ab 0b02 	sub.w	fp, fp, #2
 80207de:	f824 0c02 	strh.w	r0, [r4, #-2]
 80207e2:	e7d7      	b.n	8020794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80207e4:	46a8      	mov	r8, r5
 80207e6:	46cb      	mov	fp, r9
 80207e8:	e7d4      	b.n	8020794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80207ea:	d10e      	bne.n	802080a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 80207ec:	f898 3000 	ldrb.w	r3, [r8]
 80207f0:	f8ba 2000 	ldrh.w	r2, [sl]
 80207f4:	091b      	lsrs	r3, r3, #4
 80207f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80207fa:	9b03      	ldr	r3, [sp, #12]
 80207fc:	9804      	ldr	r0, [sp, #16]
 80207fe:	9300      	str	r3, [sp, #0]
 8020800:	463b      	mov	r3, r7
 8020802:	f7ff ff17 	bl	8020634 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020806:	f82a 0b02 	strh.w	r0, [sl], #2
 802080a:	9b08      	ldr	r3, [sp, #32]
 802080c:	9a05      	ldr	r2, [sp, #20]
 802080e:	881c      	ldrh	r4, [r3, #0]
 8020810:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020814:	eba4 0409 	sub.w	r4, r4, r9
 8020818:	4413      	add	r3, r2
 802081a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802081c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020820:	fb93 f3f2 	sdiv	r3, r3, r2
 8020824:	441d      	add	r5, r3
 8020826:	e79c      	b.n	8020762 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8020828:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802082c:	45a3      	cmp	fp, r4
 802082e:	d938      	bls.n	80208a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fa>
 8020830:	9b06      	ldr	r3, [sp, #24]
 8020832:	b1f3      	cbz	r3, 8020872 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ca>
 8020834:	782b      	ldrb	r3, [r5, #0]
 8020836:	1c6a      	adds	r2, r5, #1
 8020838:	f003 030f 	and.w	r3, r3, #15
 802083c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020840:	f109 30ff 	add.w	r0, r9, #4294967295
 8020844:	8023      	strh	r3, [r4, #0]
 8020846:	3402      	adds	r4, #2
 8020848:	2801      	cmp	r0, #1
 802084a:	4623      	mov	r3, r4
 802084c:	f104 0404 	add.w	r4, r4, #4
 8020850:	dd12      	ble.n	8020878 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d0>
 8020852:	7813      	ldrb	r3, [r2, #0]
 8020854:	3802      	subs	r0, #2
 8020856:	091b      	lsrs	r3, r3, #4
 8020858:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802085c:	f824 3c04 	strh.w	r3, [r4, #-4]
 8020860:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020864:	f003 030f 	and.w	r3, r3, #15
 8020868:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802086c:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020870:	e7ea      	b.n	8020848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a0>
 8020872:	462a      	mov	r2, r5
 8020874:	4648      	mov	r0, r9
 8020876:	e7e7      	b.n	8020848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a0>
 8020878:	d106      	bne.n	8020888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 802087a:	7812      	ldrb	r2, [r2, #0]
 802087c:	3302      	adds	r3, #2
 802087e:	0912      	lsrs	r2, r2, #4
 8020880:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020884:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020888:	880c      	ldrh	r4, [r1, #0]
 802088a:	9a05      	ldr	r2, [sp, #20]
 802088c:	eba4 0409 	sub.w	r4, r4, r9
 8020890:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020894:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020898:	4413      	add	r3, r2
 802089a:	fb93 f3f8 	sdiv	r3, r3, r8
 802089e:	441d      	add	r5, r3
 80208a0:	e7c4      	b.n	802082c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 80208a2:	4b04      	ldr	r3, [pc, #16]	@ (80208b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80208a4:	6818      	ldr	r0, [r3, #0]
 80208a6:	6803      	ldr	r3, [r0, #0]
 80208a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80208aa:	4798      	blx	r3
 80208ac:	b00f      	add	sp, #60	@ 0x3c
 80208ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80208b2:	bf00      	nop
 80208b4:	20002230 	.word	0x20002230
 80208b8:	2000222a 	.word	0x2000222a

080208bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80208bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80208be:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80208c2:	0a0f      	lsrs	r7, r1, #8
 80208c4:	2dff      	cmp	r5, #255	@ 0xff
 80208c6:	d10c      	bne.n	80208e2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80208c8:	2bff      	cmp	r3, #255	@ 0xff
 80208ca:	d10a      	bne.n	80208e2 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80208cc:	4b25      	ldr	r3, [pc, #148]	@ (8020964 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80208ce:	0948      	lsrs	r0, r1, #5
 80208d0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80208d4:	403b      	ands	r3, r7
 80208d6:	4318      	orrs	r0, r3
 80208d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80208dc:	4308      	orrs	r0, r1
 80208de:	b280      	uxth	r0, r0
 80208e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80208e2:	fb15 f503 	smulbb	r5, r5, r3
 80208e6:	b2ab      	uxth	r3, r5
 80208e8:	1c5d      	adds	r5, r3, #1
 80208ea:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80208ee:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80208f2:	fa1f fc85 	uxth.w	ip, r5
 80208f6:	43ed      	mvns	r5, r5
 80208f8:	1214      	asrs	r4, r2, #8
 80208fa:	10d6      	asrs	r6, r2, #3
 80208fc:	00d0      	lsls	r0, r2, #3
 80208fe:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020902:	fb12 f20c 	smulbb	r2, r2, ip
 8020906:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802090a:	b2eb      	uxtb	r3, r5
 802090c:	b2c0      	uxtb	r0, r0
 802090e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020912:	fb04 2403 	mla	r4, r4, r3, r2
 8020916:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802091a:	b2c8      	uxtb	r0, r1
 802091c:	b2fd      	uxtb	r5, r7
 802091e:	fb10 f00c 	smulbb	r0, r0, ip
 8020922:	fb15 f50c 	smulbb	r5, r5, ip
 8020926:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802092a:	fb02 0003 	mla	r0, r2, r3, r0
 802092e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020932:	fb06 5503 	mla	r5, r6, r3, r5
 8020936:	b2a4      	uxth	r4, r4
 8020938:	b283      	uxth	r3, r0
 802093a:	1c60      	adds	r0, r4, #1
 802093c:	b2ad      	uxth	r5, r5
 802093e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020942:	1c58      	adds	r0, r3, #1
 8020944:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020948:	1c6b      	adds	r3, r5, #1
 802094a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802094e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020952:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020956:	096d      	lsrs	r5, r5, #5
 8020958:	4320      	orrs	r0, r4
 802095a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802095e:	4328      	orrs	r0, r5
 8020960:	e7be      	b.n	80208e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8020962:	bf00      	nop
 8020964:	00fff800 	.word	0x00fff800

08020968 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802096c:	461c      	mov	r4, r3
 802096e:	f04f 0a02 	mov.w	sl, #2
 8020972:	b08d      	sub	sp, #52	@ 0x34
 8020974:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020976:	460d      	mov	r5, r1
 8020978:	4680      	mov	r8, r0
 802097a:	6861      	ldr	r1, [r4, #4]
 802097c:	6820      	ldr	r0, [r4, #0]
 802097e:	4616      	mov	r6, r2
 8020980:	aa08      	add	r2, sp, #32
 8020982:	c203      	stmia	r2!, {r0, r1}
 8020984:	6818      	ldr	r0, [r3, #0]
 8020986:	6859      	ldr	r1, [r3, #4]
 8020988:	aa0a      	add	r2, sp, #40	@ 0x28
 802098a:	c203      	stmia	r2!, {r0, r1}
 802098c:	a808      	add	r0, sp, #32
 802098e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8020992:	f7ee fd0d 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020996:	4621      	mov	r1, r4
 8020998:	a80a      	add	r0, sp, #40	@ 0x28
 802099a:	f7ee fd31 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802099e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80209a2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80209a6:	f002 0301 	and.w	r3, r2, #1
 80209aa:	9303      	str	r3, [sp, #12]
 80209ac:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80209b0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80209b4:	f003 0101 	and.w	r1, r3, #1
 80209b8:	9102      	str	r1, [sp, #8]
 80209ba:	9802      	ldr	r0, [sp, #8]
 80209bc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80209c0:	4403      	add	r3, r0
 80209c2:	fb01 2303 	mla	r3, r1, r3, r2
 80209c6:	fb93 f3fa 	sdiv	r3, r3, sl
 80209ca:	441d      	add	r5, r3
 80209cc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80209d0:	3604      	adds	r6, #4
 80209d2:	441a      	add	r2, r3
 80209d4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80209d8:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80209dc:	4a3e      	ldr	r2, [pc, #248]	@ (8020ad8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80209de:	4419      	add	r1, r3
 80209e0:	6810      	ldr	r0, [r2, #0]
 80209e2:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80209e6:	6803      	ldr	r3, [r0, #0]
 80209e8:	9205      	str	r2, [sp, #20]
 80209ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80209ec:	4798      	blx	r3
 80209ee:	4b3b      	ldr	r3, [pc, #236]	@ (8020adc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80209f0:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80209f4:	8819      	ldrh	r1, [r3, #0]
 80209f6:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80209fa:	434f      	muls	r7, r1
 80209fc:	fb01 c404 	mla	r4, r1, r4, ip
 8020a00:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8020a04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020a08:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8020a0c:	9204      	str	r2, [sp, #16]
 8020a0e:	9b04      	ldr	r3, [sp, #16]
 8020a10:	429c      	cmp	r4, r3
 8020a12:	d258      	bcs.n	8020ac6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8020a14:	9b03      	ldr	r3, [sp, #12]
 8020a16:	2b00      	cmp	r3, #0
 8020a18:	d034      	beq.n	8020a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020a1a:	782b      	ldrb	r3, [r5, #0]
 8020a1c:	1c6f      	adds	r7, r5, #1
 8020a1e:	f003 030f 	and.w	r3, r3, #15
 8020a22:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a26:	0e0b      	lsrs	r3, r1, #24
 8020a28:	d006      	beq.n	8020a38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020a2a:	8822      	ldrh	r2, [r4, #0]
 8020a2c:	4640      	mov	r0, r8
 8020a2e:	9300      	str	r3, [sp, #0]
 8020a30:	464b      	mov	r3, r9
 8020a32:	f7ff ff43 	bl	80208bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a36:	8020      	strh	r0, [r4, #0]
 8020a38:	3402      	adds	r4, #2
 8020a3a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020a3e:	f1ba 0f01 	cmp.w	sl, #1
 8020a42:	dd22      	ble.n	8020a8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8020a44:	783b      	ldrb	r3, [r7, #0]
 8020a46:	091b      	lsrs	r3, r3, #4
 8020a48:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a4c:	0e0b      	lsrs	r3, r1, #24
 8020a4e:	d006      	beq.n	8020a5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020a50:	8822      	ldrh	r2, [r4, #0]
 8020a52:	4640      	mov	r0, r8
 8020a54:	9300      	str	r3, [sp, #0]
 8020a56:	464b      	mov	r3, r9
 8020a58:	f7ff ff30 	bl	80208bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a5c:	8020      	strh	r0, [r4, #0]
 8020a5e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8020a62:	f003 030f 	and.w	r3, r3, #15
 8020a66:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a6a:	0e0b      	lsrs	r3, r1, #24
 8020a6c:	d006      	beq.n	8020a7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020a6e:	8862      	ldrh	r2, [r4, #2]
 8020a70:	4640      	mov	r0, r8
 8020a72:	9300      	str	r3, [sp, #0]
 8020a74:	464b      	mov	r3, r9
 8020a76:	f7ff ff21 	bl	80208bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020a7a:	8060      	strh	r0, [r4, #2]
 8020a7c:	3404      	adds	r4, #4
 8020a7e:	f1aa 0a02 	sub.w	sl, sl, #2
 8020a82:	e7dc      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a84:	462f      	mov	r7, r5
 8020a86:	46da      	mov	sl, fp
 8020a88:	e7d9      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020a8a:	d10d      	bne.n	8020aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020a8c:	783b      	ldrb	r3, [r7, #0]
 8020a8e:	091b      	lsrs	r3, r3, #4
 8020a90:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020a94:	0e0b      	lsrs	r3, r1, #24
 8020a96:	d006      	beq.n	8020aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020a98:	8822      	ldrh	r2, [r4, #0]
 8020a9a:	4640      	mov	r0, r8
 8020a9c:	9300      	str	r3, [sp, #0]
 8020a9e:	464b      	mov	r3, r9
 8020aa0:	f7ff ff0c 	bl	80208bc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020aa4:	8020      	strh	r0, [r4, #0]
 8020aa6:	3402      	adds	r4, #2
 8020aa8:	9b06      	ldr	r3, [sp, #24]
 8020aaa:	9a02      	ldr	r2, [sp, #8]
 8020aac:	881b      	ldrh	r3, [r3, #0]
 8020aae:	eba3 030b 	sub.w	r3, r3, fp
 8020ab2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020ab6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8020aba:	4413      	add	r3, r2
 8020abc:	9a07      	ldr	r2, [sp, #28]
 8020abe:	fb93 f3f2 	sdiv	r3, r3, r2
 8020ac2:	441d      	add	r5, r3
 8020ac4:	e7a3      	b.n	8020a0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8020ac6:	9b05      	ldr	r3, [sp, #20]
 8020ac8:	6818      	ldr	r0, [r3, #0]
 8020aca:	6803      	ldr	r3, [r0, #0]
 8020acc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020ace:	4798      	blx	r3
 8020ad0:	b00d      	add	sp, #52	@ 0x34
 8020ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ad6:	bf00      	nop
 8020ad8:	20002230 	.word	0x20002230
 8020adc:	2000222a 	.word	0x2000222a

08020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8020ae0:	b570      	push	{r4, r5, r6, lr}
 8020ae2:	788d      	ldrb	r5, [r1, #2]
 8020ae4:	1214      	asrs	r4, r2, #8
 8020ae6:	fb15 f503 	smulbb	r5, r5, r3
 8020aea:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8020aee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020af2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020af6:	fb04 5506 	mla	r5, r4, r6, r5
 8020afa:	784c      	ldrb	r4, [r1, #1]
 8020afc:	7809      	ldrb	r1, [r1, #0]
 8020afe:	fb14 f403 	smulbb	r4, r4, r3
 8020b02:	fb11 f303 	smulbb	r3, r1, r3
 8020b06:	10d0      	asrs	r0, r2, #3
 8020b08:	00d2      	lsls	r2, r2, #3
 8020b0a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020b0e:	b2d2      	uxtb	r2, r2
 8020b10:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8020b14:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020b18:	fb00 4406 	mla	r4, r0, r6, r4
 8020b1c:	fb02 3306 	mla	r3, r2, r6, r3
 8020b20:	b2ad      	uxth	r5, r5
 8020b22:	b29b      	uxth	r3, r3
 8020b24:	b2a4      	uxth	r4, r4
 8020b26:	1c68      	adds	r0, r5, #1
 8020b28:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020b2c:	1c62      	adds	r2, r4, #1
 8020b2e:	1c58      	adds	r0, r3, #1
 8020b30:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020b34:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020b38:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020b3c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020b40:	0964      	lsrs	r4, r4, #5
 8020b42:	4328      	orrs	r0, r5
 8020b44:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020b48:	4320      	orrs	r0, r4
 8020b4a:	bd70      	pop	{r4, r5, r6, pc}

08020b4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b50:	b08f      	sub	sp, #60	@ 0x3c
 8020b52:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020b56:	461c      	mov	r4, r3
 8020b58:	4682      	mov	sl, r0
 8020b5a:	460e      	mov	r6, r1
 8020b5c:	4615      	mov	r5, r2
 8020b5e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020b60:	2f00      	cmp	r7, #0
 8020b62:	f000 8141 	beq.w	8020de8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8020b66:	f04f 0802 	mov.w	r8, #2
 8020b6a:	6820      	ldr	r0, [r4, #0]
 8020b6c:	6861      	ldr	r1, [r4, #4]
 8020b6e:	aa0a      	add	r2, sp, #40	@ 0x28
 8020b70:	c203      	stmia	r2!, {r0, r1}
 8020b72:	6818      	ldr	r0, [r3, #0]
 8020b74:	6859      	ldr	r1, [r3, #4]
 8020b76:	aa0c      	add	r2, sp, #48	@ 0x30
 8020b78:	c203      	stmia	r2!, {r0, r1}
 8020b7a:	a80a      	add	r0, sp, #40	@ 0x28
 8020b7c:	f7ee fc18 	bl	800f3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b80:	4621      	mov	r1, r4
 8020b82:	a80c      	add	r0, sp, #48	@ 0x30
 8020b84:	f7ee fc3c 	bl	800f400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b88:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020b8c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8020b90:	f002 0301 	and.w	r3, r2, #1
 8020b94:	9306      	str	r3, [sp, #24]
 8020b96:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020b9a:	3504      	adds	r5, #4
 8020b9c:	f003 0101 	and.w	r1, r3, #1
 8020ba0:	9105      	str	r1, [sp, #20]
 8020ba2:	9805      	ldr	r0, [sp, #20]
 8020ba4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020ba8:	4403      	add	r3, r0
 8020baa:	fb01 2303 	mla	r3, r1, r3, r2
 8020bae:	fb93 f3f8 	sdiv	r3, r3, r8
 8020bb2:	441e      	add	r6, r3
 8020bb4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020bb8:	441a      	add	r2, r3
 8020bba:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020bbe:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8020bc2:	4419      	add	r1, r3
 8020bc4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8020bc8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020bcc:	9303      	str	r3, [sp, #12]
 8020bce:	4b88      	ldr	r3, [pc, #544]	@ (8020df0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020bd0:	6818      	ldr	r0, [r3, #0]
 8020bd2:	6803      	ldr	r3, [r0, #0]
 8020bd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020bd6:	4798      	blx	r3
 8020bd8:	4a86      	ldr	r2, [pc, #536]	@ (8020df4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8020bda:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020bde:	8813      	ldrh	r3, [r2, #0]
 8020be0:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8020be4:	2fff      	cmp	r7, #255	@ 0xff
 8020be6:	fb03 9404 	mla	r4, r3, r4, r9
 8020bea:	4694      	mov	ip, r2
 8020bec:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020bf0:	fb03 f30b 	mul.w	r3, r3, fp
 8020bf4:	d071      	beq.n	8020cda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8020bf6:	43f9      	mvns	r1, r7
 8020bf8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020bfc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020c00:	b2c9      	uxtb	r1, r1
 8020c02:	9104      	str	r1, [sp, #16]
 8020c04:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020c08:	9b07      	ldr	r3, [sp, #28]
 8020c0a:	42a3      	cmp	r3, r4
 8020c0c:	f240 80e7 	bls.w	8020dde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8020c10:	9b06      	ldr	r3, [sp, #24]
 8020c12:	2b00      	cmp	r3, #0
 8020c14:	d03d      	beq.n	8020c92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8020c16:	7831      	ldrb	r1, [r6, #0]
 8020c18:	9b04      	ldr	r3, [sp, #16]
 8020c1a:	f001 010f 	and.w	r1, r1, #15
 8020c1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c22:	8822      	ldrh	r2, [r4, #0]
 8020c24:	4429      	add	r1, r5
 8020c26:	9300      	str	r3, [sp, #0]
 8020c28:	4650      	mov	r0, sl
 8020c2a:	463b      	mov	r3, r7
 8020c2c:	f7ff ff58 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c30:	9b03      	ldr	r3, [sp, #12]
 8020c32:	f106 0801 	add.w	r8, r6, #1
 8020c36:	f824 0b02 	strh.w	r0, [r4], #2
 8020c3a:	f103 3bff 	add.w	fp, r3, #4294967295
 8020c3e:	f1bb 0f01 	cmp.w	fp, #1
 8020c42:	46a1      	mov	r9, r4
 8020c44:	f104 0404 	add.w	r4, r4, #4
 8020c48:	dd27      	ble.n	8020c9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020c4a:	f898 1000 	ldrb.w	r1, [r8]
 8020c4e:	9b04      	ldr	r3, [sp, #16]
 8020c50:	0909      	lsrs	r1, r1, #4
 8020c52:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c56:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020c5a:	4429      	add	r1, r5
 8020c5c:	9300      	str	r3, [sp, #0]
 8020c5e:	4650      	mov	r0, sl
 8020c60:	463b      	mov	r3, r7
 8020c62:	f7ff ff3d 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c66:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020c6a:	f818 1b01 	ldrb.w	r1, [r8], #1
 8020c6e:	9b04      	ldr	r3, [sp, #16]
 8020c70:	f001 010f 	and.w	r1, r1, #15
 8020c74:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020c78:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020c7c:	4429      	add	r1, r5
 8020c7e:	9300      	str	r3, [sp, #0]
 8020c80:	4650      	mov	r0, sl
 8020c82:	463b      	mov	r3, r7
 8020c84:	f7ff ff2c 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020c88:	f1ab 0b02 	sub.w	fp, fp, #2
 8020c8c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020c90:	e7d5      	b.n	8020c3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020c92:	46b0      	mov	r8, r6
 8020c94:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020c98:	e7d1      	b.n	8020c3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020c9a:	d10f      	bne.n	8020cbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8020c9c:	f898 1000 	ldrb.w	r1, [r8]
 8020ca0:	9b04      	ldr	r3, [sp, #16]
 8020ca2:	0909      	lsrs	r1, r1, #4
 8020ca4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020ca8:	f8b9 2000 	ldrh.w	r2, [r9]
 8020cac:	4429      	add	r1, r5
 8020cae:	9300      	str	r3, [sp, #0]
 8020cb0:	4650      	mov	r0, sl
 8020cb2:	463b      	mov	r3, r7
 8020cb4:	f7ff ff14 	bl	8020ae0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020cb8:	f829 0b02 	strh.w	r0, [r9], #2
 8020cbc:	9b08      	ldr	r3, [sp, #32]
 8020cbe:	9a05      	ldr	r2, [sp, #20]
 8020cc0:	881c      	ldrh	r4, [r3, #0]
 8020cc2:	9b03      	ldr	r3, [sp, #12]
 8020cc4:	1ae4      	subs	r4, r4, r3
 8020cc6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020cca:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020cce:	4413      	add	r3, r2
 8020cd0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020cd2:	fb93 f3f2 	sdiv	r3, r3, r2
 8020cd6:	441e      	add	r6, r3
 8020cd8:	e796      	b.n	8020c08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 8020cda:	4f47      	ldr	r7, [pc, #284]	@ (8020df8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8020cdc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020ce0:	42a3      	cmp	r3, r4
 8020ce2:	d97c      	bls.n	8020dde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8020ce4:	9a06      	ldr	r2, [sp, #24]
 8020ce6:	2a00      	cmp	r2, #0
 8020ce8:	d054      	beq.n	8020d94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 8020cea:	7830      	ldrb	r0, [r6, #0]
 8020cec:	1c71      	adds	r1, r6, #1
 8020cee:	f000 000f 	and.w	r0, r0, #15
 8020cf2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cf6:	eb05 0e00 	add.w	lr, r5, r0
 8020cfa:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8020cfe:	f89e e001 	ldrb.w	lr, [lr, #1]
 8020d02:	5c28      	ldrb	r0, [r5, r0]
 8020d04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020d08:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8020d0c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020d10:	ea42 020e 	orr.w	r2, r2, lr
 8020d14:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020d18:	f824 2b02 	strh.w	r2, [r4], #2
 8020d1c:	9a03      	ldr	r2, [sp, #12]
 8020d1e:	f102 3eff 	add.w	lr, r2, #4294967295
 8020d22:	f1be 0f01 	cmp.w	lr, #1
 8020d26:	4620      	mov	r0, r4
 8020d28:	f104 0404 	add.w	r4, r4, #4
 8020d2c:	dd36      	ble.n	8020d9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8020d2e:	7808      	ldrb	r0, [r1, #0]
 8020d30:	f1ae 0e02 	sub.w	lr, lr, #2
 8020d34:	0900      	lsrs	r0, r0, #4
 8020d36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020d3a:	eb05 0a00 	add.w	sl, r5, r0
 8020d3e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020d42:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020d46:	00d2      	lsls	r2, r2, #3
 8020d48:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020d4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d50:	ea49 0202 	orr.w	r2, r9, r2
 8020d54:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020d58:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020d5c:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020d60:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020d64:	f000 000f 	and.w	r0, r0, #15
 8020d68:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020d6c:	eb05 0a00 	add.w	sl, r5, r0
 8020d70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020d74:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020d78:	00d2      	lsls	r2, r2, #3
 8020d7a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020d7e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020d82:	ea49 0202 	orr.w	r2, r9, r2
 8020d86:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020d8a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020d8e:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020d92:	e7c6      	b.n	8020d22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020d94:	4631      	mov	r1, r6
 8020d96:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020d9a:	e7c2      	b.n	8020d22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020d9c:	d111      	bne.n	8020dc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8020d9e:	7809      	ldrb	r1, [r1, #0]
 8020da0:	0909      	lsrs	r1, r1, #4
 8020da2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020da6:	186c      	adds	r4, r5, r1
 8020da8:	78a2      	ldrb	r2, [r4, #2]
 8020daa:	7864      	ldrb	r4, [r4, #1]
 8020dac:	5c69      	ldrb	r1, [r5, r1]
 8020dae:	00e4      	lsls	r4, r4, #3
 8020db0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020db4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020db8:	4322      	orrs	r2, r4
 8020dba:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8020dbe:	f820 2b02 	strh.w	r2, [r0], #2
 8020dc2:	9a03      	ldr	r2, [sp, #12]
 8020dc4:	f8bc 4000 	ldrh.w	r4, [ip]
 8020dc8:	9905      	ldr	r1, [sp, #20]
 8020dca:	1aa4      	subs	r4, r4, r2
 8020dcc:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8020dd0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020dd4:	440a      	add	r2, r1
 8020dd6:	fb92 f2f8 	sdiv	r2, r2, r8
 8020dda:	4416      	add	r6, r2
 8020ddc:	e780      	b.n	8020ce0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 8020dde:	4b04      	ldr	r3, [pc, #16]	@ (8020df0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8020de0:	6818      	ldr	r0, [r3, #0]
 8020de2:	6803      	ldr	r3, [r0, #0]
 8020de4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020de6:	4798      	blx	r3
 8020de8:	b00f      	add	sp, #60	@ 0x3c
 8020dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020dee:	bf00      	nop
 8020df0:	20002230 	.word	0x20002230
 8020df4:	2000222a 	.word	0x2000222a
 8020df8:	fffff800 	.word	0xfffff800

08020dfc <CRC_Lock>:
 8020dfc:	b530      	push	{r4, r5, lr}
 8020dfe:	4a2d      	ldr	r2, [pc, #180]	@ (8020eb4 <CRC_Lock+0xb8>)
 8020e00:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8020e04:	6813      	ldr	r3, [r2, #0]
 8020e06:	f023 0301 	bic.w	r3, r3, #1
 8020e0a:	6013      	str	r3, [r2, #0]
 8020e0c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8020e10:	4b29      	ldr	r3, [pc, #164]	@ (8020eb8 <CRC_Lock+0xbc>)
 8020e12:	681c      	ldr	r4, [r3, #0]
 8020e14:	4014      	ands	r4, r2
 8020e16:	42ac      	cmp	r4, r5
 8020e18:	d005      	beq.n	8020e26 <CRC_Lock+0x2a>
 8020e1a:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020e1e:	681c      	ldr	r4, [r3, #0]
 8020e20:	4014      	ands	r4, r2
 8020e22:	42ac      	cmp	r4, r5
 8020e24:	d125      	bne.n	8020e72 <CRC_Lock+0x76>
 8020e26:	4b25      	ldr	r3, [pc, #148]	@ (8020ebc <CRC_Lock+0xc0>)
 8020e28:	681b      	ldr	r3, [r3, #0]
 8020e2a:	2b00      	cmp	r3, #0
 8020e2c:	d139      	bne.n	8020ea2 <CRC_Lock+0xa6>
 8020e2e:	4b24      	ldr	r3, [pc, #144]	@ (8020ec0 <CRC_Lock+0xc4>)
 8020e30:	681a      	ldr	r2, [r3, #0]
 8020e32:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020e36:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020e3a:	d00d      	beq.n	8020e58 <CRC_Lock+0x5c>
 8020e3c:	f240 4483 	movw	r4, #1155	@ 0x483
 8020e40:	681a      	ldr	r2, [r3, #0]
 8020e42:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020e46:	42a2      	cmp	r2, r4
 8020e48:	d006      	beq.n	8020e58 <CRC_Lock+0x5c>
 8020e4a:	f240 4285 	movw	r2, #1157	@ 0x485
 8020e4e:	681b      	ldr	r3, [r3, #0]
 8020e50:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020e54:	4293      	cmp	r3, r2
 8020e56:	d124      	bne.n	8020ea2 <CRC_Lock+0xa6>
 8020e58:	2201      	movs	r2, #1
 8020e5a:	4b1a      	ldr	r3, [pc, #104]	@ (8020ec4 <CRC_Lock+0xc8>)
 8020e5c:	601a      	str	r2, [r3, #0]
 8020e5e:	681a      	ldr	r2, [r3, #0]
 8020e60:	2a00      	cmp	r2, #0
 8020e62:	d1fc      	bne.n	8020e5e <CRC_Lock+0x62>
 8020e64:	4b18      	ldr	r3, [pc, #96]	@ (8020ec8 <CRC_Lock+0xcc>)
 8020e66:	6018      	str	r0, [r3, #0]
 8020e68:	6818      	ldr	r0, [r3, #0]
 8020e6a:	1a43      	subs	r3, r0, r1
 8020e6c:	4258      	negs	r0, r3
 8020e6e:	4158      	adcs	r0, r3
 8020e70:	e00e      	b.n	8020e90 <CRC_Lock+0x94>
 8020e72:	681b      	ldr	r3, [r3, #0]
 8020e74:	4013      	ands	r3, r2
 8020e76:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8020e7a:	4293      	cmp	r3, r2
 8020e7c:	d111      	bne.n	8020ea2 <CRC_Lock+0xa6>
 8020e7e:	f240 4286 	movw	r2, #1158	@ 0x486
 8020e82:	4b12      	ldr	r3, [pc, #72]	@ (8020ecc <CRC_Lock+0xd0>)
 8020e84:	681b      	ldr	r3, [r3, #0]
 8020e86:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020e8a:	4293      	cmp	r3, r2
 8020e8c:	d001      	beq.n	8020e92 <CRC_Lock+0x96>
 8020e8e:	2000      	movs	r0, #0
 8020e90:	bd30      	pop	{r4, r5, pc}
 8020e92:	2201      	movs	r2, #1
 8020e94:	4b0e      	ldr	r3, [pc, #56]	@ (8020ed0 <CRC_Lock+0xd4>)
 8020e96:	601a      	str	r2, [r3, #0]
 8020e98:	681a      	ldr	r2, [r3, #0]
 8020e9a:	2a00      	cmp	r2, #0
 8020e9c:	d1fc      	bne.n	8020e98 <CRC_Lock+0x9c>
 8020e9e:	4b0d      	ldr	r3, [pc, #52]	@ (8020ed4 <CRC_Lock+0xd8>)
 8020ea0:	e7e1      	b.n	8020e66 <CRC_Lock+0x6a>
 8020ea2:	2201      	movs	r2, #1
 8020ea4:	4b0c      	ldr	r3, [pc, #48]	@ (8020ed8 <CRC_Lock+0xdc>)
 8020ea6:	601a      	str	r2, [r3, #0]
 8020ea8:	681a      	ldr	r2, [r3, #0]
 8020eaa:	2a00      	cmp	r2, #0
 8020eac:	d1fc      	bne.n	8020ea8 <CRC_Lock+0xac>
 8020eae:	4b0b      	ldr	r3, [pc, #44]	@ (8020edc <CRC_Lock+0xe0>)
 8020eb0:	e7d9      	b.n	8020e66 <CRC_Lock+0x6a>
 8020eb2:	bf00      	nop
 8020eb4:	e0002000 	.word	0xe0002000
 8020eb8:	e000ed00 	.word	0xe000ed00
 8020ebc:	e0042000 	.word	0xe0042000
 8020ec0:	5c001000 	.word	0x5c001000
 8020ec4:	58024c08 	.word	0x58024c08
 8020ec8:	58024c00 	.word	0x58024c00
 8020ecc:	46008ff0 	.word	0x46008ff0
 8020ed0:	46024c08 	.word	0x46024c08
 8020ed4:	46024c00 	.word	0x46024c00
 8020ed8:	40023008 	.word	0x40023008
 8020edc:	40023000 	.word	0x40023000

08020ee0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020ee0:	6101      	str	r1, [r0, #16]
 8020ee2:	4770      	bx	lr

08020ee4 <_ZN8touchgfx8Gestures4tickEv>:
 8020ee4:	7b83      	ldrb	r3, [r0, #14]
 8020ee6:	b14b      	cbz	r3, 8020efc <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020ee8:	8903      	ldrh	r3, [r0, #8]
 8020eea:	3301      	adds	r3, #1
 8020eec:	b29b      	uxth	r3, r3
 8020eee:	2b07      	cmp	r3, #7
 8020ef0:	8103      	strh	r3, [r0, #8]
 8020ef2:	bf81      	itttt	hi
 8020ef4:	2300      	movhi	r3, #0
 8020ef6:	8143      	strhhi	r3, [r0, #10]
 8020ef8:	8183      	strhhi	r3, [r0, #12]
 8020efa:	7383      	strbhi	r3, [r0, #14]
 8020efc:	4770      	bx	lr
	...

08020f00 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020f00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020f04:	4698      	mov	r8, r3
 8020f06:	4604      	mov	r4, r0
 8020f08:	8883      	ldrh	r3, [r0, #4]
 8020f0a:	460e      	mov	r6, r1
 8020f0c:	88c1      	ldrh	r1, [r0, #6]
 8020f0e:	2000      	movs	r0, #0
 8020f10:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020f14:	eba8 0303 	sub.w	r3, r8, r3
 8020f18:	b21b      	sxth	r3, r3
 8020f1a:	4617      	mov	r7, r2
 8020f1c:	4a17      	ldr	r2, [pc, #92]	@ (8020f7c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020f1e:	2b00      	cmp	r3, #0
 8020f20:	bfb8      	it	lt
 8020f22:	425b      	neglt	r3, r3
 8020f24:	9200      	str	r2, [sp, #0]
 8020f26:	8aa2      	ldrh	r2, [r4, #20]
 8020f28:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8020f2c:	b21b      	sxth	r3, r3
 8020f2e:	4293      	cmp	r3, r2
 8020f30:	f88d 0004 	strb.w	r0, [sp, #4]
 8020f34:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020f38:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020f3c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020f40:	dc07      	bgt.n	8020f52 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8020f42:	1a69      	subs	r1, r5, r1
 8020f44:	b209      	sxth	r1, r1
 8020f46:	2900      	cmp	r1, #0
 8020f48:	bfb8      	it	lt
 8020f4a:	4249      	neglt	r1, r1
 8020f4c:	b209      	sxth	r1, r1
 8020f4e:	428a      	cmp	r2, r1
 8020f50:	da10      	bge.n	8020f74 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8020f52:	6920      	ldr	r0, [r4, #16]
 8020f54:	4669      	mov	r1, sp
 8020f56:	6803      	ldr	r3, [r0, #0]
 8020f58:	eba8 0606 	sub.w	r6, r8, r6
 8020f5c:	685b      	ldr	r3, [r3, #4]
 8020f5e:	4798      	blx	r3
 8020f60:	2300      	movs	r3, #0
 8020f62:	2001      	movs	r0, #1
 8020f64:	1bef      	subs	r7, r5, r7
 8020f66:	8123      	strh	r3, [r4, #8]
 8020f68:	8166      	strh	r6, [r4, #10]
 8020f6a:	81a7      	strh	r7, [r4, #12]
 8020f6c:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020f70:	80e5      	strh	r5, [r4, #6]
 8020f72:	73a0      	strb	r0, [r4, #14]
 8020f74:	b004      	add	sp, #16
 8020f76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020f7a:	bf00      	nop
 8020f7c:	08023f60 	.word	0x08023f60

08020f80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020f82:	461e      	mov	r6, r3
 8020f84:	1e4b      	subs	r3, r1, #1
 8020f86:	2b01      	cmp	r3, #1
 8020f88:	b085      	sub	sp, #20
 8020f8a:	4604      	mov	r4, r0
 8020f8c:	460d      	mov	r5, r1
 8020f8e:	4617      	mov	r7, r2
 8020f90:	d84b      	bhi.n	802102a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020f92:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020f96:	1cd3      	adds	r3, r2, #3
 8020f98:	b29b      	uxth	r3, r3
 8020f9a:	2b06      	cmp	r3, #6
 8020f9c:	d916      	bls.n	8020fcc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020f9e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8021040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020fa2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020fa6:	f8cd c004 	str.w	ip, [sp, #4]
 8020faa:	f04f 0c00 	mov.w	ip, #0
 8020fae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020fb2:	6900      	ldr	r0, [r0, #16]
 8020fb4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020fb8:	f88d c008 	strb.w	ip, [sp, #8]
 8020fbc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020fc0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020fc4:	6803      	ldr	r3, [r0, #0]
 8020fc6:	a901      	add	r1, sp, #4
 8020fc8:	689b      	ldr	r3, [r3, #8]
 8020fca:	4798      	blx	r3
 8020fcc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020fd0:	1cd3      	adds	r3, r2, #3
 8020fd2:	b29b      	uxth	r3, r3
 8020fd4:	2b06      	cmp	r3, #6
 8020fd6:	d916      	bls.n	8021006 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020fd8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8021040 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020fdc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020fe0:	f8cd c004 	str.w	ip, [sp, #4]
 8020fe4:	f04f 0c01 	mov.w	ip, #1
 8020fe8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020fec:	6920      	ldr	r0, [r4, #16]
 8020fee:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020ff2:	f88d c008 	strb.w	ip, [sp, #8]
 8020ff6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020ffa:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020ffe:	6803      	ldr	r3, [r0, #0]
 8021000:	a901      	add	r1, sp, #4
 8021002:	689b      	ldr	r3, [r3, #8]
 8021004:	4798      	blx	r3
 8021006:	4b0d      	ldr	r3, [pc, #52]	@ (802103c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8021008:	6920      	ldr	r0, [r4, #16]
 802100a:	9301      	str	r3, [sp, #4]
 802100c:	2300      	movs	r3, #0
 802100e:	f88d 5008 	strb.w	r5, [sp, #8]
 8021012:	f8ad 700a 	strh.w	r7, [sp, #10]
 8021016:	f8ad 600c 	strh.w	r6, [sp, #12]
 802101a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802101e:	6803      	ldr	r3, [r0, #0]
 8021020:	a901      	add	r1, sp, #4
 8021022:	681b      	ldr	r3, [r3, #0]
 8021024:	4798      	blx	r3
 8021026:	b005      	add	sp, #20
 8021028:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802102a:	2900      	cmp	r1, #0
 802102c:	d1eb      	bne.n	8021006 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802102e:	80a2      	strh	r2, [r4, #4]
 8021030:	80c6      	strh	r6, [r0, #6]
 8021032:	60a1      	str	r1, [r4, #8]
 8021034:	81a1      	strh	r1, [r4, #12]
 8021036:	73a1      	strb	r1, [r4, #14]
 8021038:	e7e5      	b.n	8021006 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802103a:	bf00      	nop
 802103c:	08023f4c 	.word	0x08023f4c
 8021040:	08023f74 	.word	0x08023f74

08021044 <__aeabi_atexit>:
 8021044:	460b      	mov	r3, r1
 8021046:	4601      	mov	r1, r0
 8021048:	4618      	mov	r0, r3
 802104a:	f000 b90f 	b.w	802126c <__cxa_atexit>

0802104e <_ZdlPvj>:
 802104e:	f000 b812 	b.w	8021076 <_ZdlPv>

08021052 <__cxa_guard_acquire>:
 8021052:	6802      	ldr	r2, [r0, #0]
 8021054:	4603      	mov	r3, r0
 8021056:	07d2      	lsls	r2, r2, #31
 8021058:	d405      	bmi.n	8021066 <__cxa_guard_acquire+0x14>
 802105a:	7842      	ldrb	r2, [r0, #1]
 802105c:	b102      	cbz	r2, 8021060 <__cxa_guard_acquire+0xe>
 802105e:	deff      	udf	#255	@ 0xff
 8021060:	2001      	movs	r0, #1
 8021062:	7058      	strb	r0, [r3, #1]
 8021064:	4770      	bx	lr
 8021066:	2000      	movs	r0, #0
 8021068:	4770      	bx	lr

0802106a <__cxa_guard_release>:
 802106a:	2301      	movs	r3, #1
 802106c:	6003      	str	r3, [r0, #0]
 802106e:	4770      	bx	lr

08021070 <__cxa_pure_virtual>:
 8021070:	b508      	push	{r3, lr}
 8021072:	f000 f80d 	bl	8021090 <_ZSt9terminatev>

08021076 <_ZdlPv>:
 8021076:	f000 b843 	b.w	8021100 <free>

0802107a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802107a:	b508      	push	{r3, lr}
 802107c:	4780      	blx	r0
 802107e:	f000 f80c 	bl	802109a <abort>
	...

08021084 <_ZSt13get_terminatev>:
 8021084:	4b01      	ldr	r3, [pc, #4]	@ (802108c <_ZSt13get_terminatev+0x8>)
 8021086:	e8d3 0faf 	lda	r0, [r3]
 802108a:	4770      	bx	lr
 802108c:	20000090 	.word	0x20000090

08021090 <_ZSt9terminatev>:
 8021090:	b508      	push	{r3, lr}
 8021092:	f7ff fff7 	bl	8021084 <_ZSt13get_terminatev>
 8021096:	f7ff fff0 	bl	802107a <_ZN10__cxxabiv111__terminateEPFvvE>

0802109a <abort>:
 802109a:	2006      	movs	r0, #6
 802109c:	b508      	push	{r3, lr}
 802109e:	f000 fa3b 	bl	8021518 <raise>
 80210a2:	2001      	movs	r0, #1
 80210a4:	f7df ffa8 	bl	8000ff8 <_exit>

080210a8 <__assert_func>:
 80210a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80210aa:	4614      	mov	r4, r2
 80210ac:	461a      	mov	r2, r3
 80210ae:	4b09      	ldr	r3, [pc, #36]	@ (80210d4 <__assert_func+0x2c>)
 80210b0:	4605      	mov	r5, r0
 80210b2:	681b      	ldr	r3, [r3, #0]
 80210b4:	68d8      	ldr	r0, [r3, #12]
 80210b6:	b954      	cbnz	r4, 80210ce <__assert_func+0x26>
 80210b8:	4b07      	ldr	r3, [pc, #28]	@ (80210d8 <__assert_func+0x30>)
 80210ba:	461c      	mov	r4, r3
 80210bc:	9100      	str	r1, [sp, #0]
 80210be:	4907      	ldr	r1, [pc, #28]	@ (80210dc <__assert_func+0x34>)
 80210c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80210c4:	462b      	mov	r3, r5
 80210c6:	f000 f983 	bl	80213d0 <fiprintf>
 80210ca:	f7ff ffe6 	bl	802109a <abort>
 80210ce:	4b04      	ldr	r3, [pc, #16]	@ (80210e0 <__assert_func+0x38>)
 80210d0:	e7f4      	b.n	80210bc <__assert_func+0x14>
 80210d2:	bf00      	nop
 80210d4:	200000a0 	.word	0x200000a0
 80210d8:	080242e3 	.word	0x080242e3
 80210dc:	080242b5 	.word	0x080242b5
 80210e0:	080242a8 	.word	0x080242a8

080210e4 <atexit>:
 80210e4:	2300      	movs	r3, #0
 80210e6:	4601      	mov	r1, r0
 80210e8:	461a      	mov	r2, r3
 80210ea:	4618      	mov	r0, r3
 80210ec:	f000 bac0 	b.w	8021670 <__register_exitproc>

080210f0 <malloc>:
 80210f0:	4b02      	ldr	r3, [pc, #8]	@ (80210fc <malloc+0xc>)
 80210f2:	4601      	mov	r1, r0
 80210f4:	6818      	ldr	r0, [r3, #0]
 80210f6:	f000 b82d 	b.w	8021154 <_malloc_r>
 80210fa:	bf00      	nop
 80210fc:	200000a0 	.word	0x200000a0

08021100 <free>:
 8021100:	4b02      	ldr	r3, [pc, #8]	@ (802110c <free+0xc>)
 8021102:	4601      	mov	r1, r0
 8021104:	6818      	ldr	r0, [r3, #0]
 8021106:	f000 bb11 	b.w	802172c <_free_r>
 802110a:	bf00      	nop
 802110c:	200000a0 	.word	0x200000a0

08021110 <sbrk_aligned>:
 8021110:	b570      	push	{r4, r5, r6, lr}
 8021112:	4e0f      	ldr	r6, [pc, #60]	@ (8021150 <sbrk_aligned+0x40>)
 8021114:	460c      	mov	r4, r1
 8021116:	4605      	mov	r5, r0
 8021118:	6831      	ldr	r1, [r6, #0]
 802111a:	b911      	cbnz	r1, 8021122 <sbrk_aligned+0x12>
 802111c:	f000 fa4c 	bl	80215b8 <_sbrk_r>
 8021120:	6030      	str	r0, [r6, #0]
 8021122:	4621      	mov	r1, r4
 8021124:	4628      	mov	r0, r5
 8021126:	f000 fa47 	bl	80215b8 <_sbrk_r>
 802112a:	1c43      	adds	r3, r0, #1
 802112c:	d103      	bne.n	8021136 <sbrk_aligned+0x26>
 802112e:	f04f 34ff 	mov.w	r4, #4294967295
 8021132:	4620      	mov	r0, r4
 8021134:	bd70      	pop	{r4, r5, r6, pc}
 8021136:	1cc4      	adds	r4, r0, #3
 8021138:	f024 0403 	bic.w	r4, r4, #3
 802113c:	42a0      	cmp	r0, r4
 802113e:	d0f8      	beq.n	8021132 <sbrk_aligned+0x22>
 8021140:	1a21      	subs	r1, r4, r0
 8021142:	4628      	mov	r0, r5
 8021144:	f000 fa38 	bl	80215b8 <_sbrk_r>
 8021148:	3001      	adds	r0, #1
 802114a:	d1f2      	bne.n	8021132 <sbrk_aligned+0x22>
 802114c:	e7ef      	b.n	802112e <sbrk_aligned+0x1e>
 802114e:	bf00      	nop
 8021150:	20002c84 	.word	0x20002c84

08021154 <_malloc_r>:
 8021154:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021158:	1ccd      	adds	r5, r1, #3
 802115a:	4606      	mov	r6, r0
 802115c:	f025 0503 	bic.w	r5, r5, #3
 8021160:	3508      	adds	r5, #8
 8021162:	2d0c      	cmp	r5, #12
 8021164:	bf38      	it	cc
 8021166:	250c      	movcc	r5, #12
 8021168:	2d00      	cmp	r5, #0
 802116a:	db01      	blt.n	8021170 <_malloc_r+0x1c>
 802116c:	42a9      	cmp	r1, r5
 802116e:	d904      	bls.n	802117a <_malloc_r+0x26>
 8021170:	230c      	movs	r3, #12
 8021172:	6033      	str	r3, [r6, #0]
 8021174:	2000      	movs	r0, #0
 8021176:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802117a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8021250 <_malloc_r+0xfc>
 802117e:	f000 f869 	bl	8021254 <__malloc_lock>
 8021182:	f8d8 3000 	ldr.w	r3, [r8]
 8021186:	461c      	mov	r4, r3
 8021188:	bb44      	cbnz	r4, 80211dc <_malloc_r+0x88>
 802118a:	4629      	mov	r1, r5
 802118c:	4630      	mov	r0, r6
 802118e:	f7ff ffbf 	bl	8021110 <sbrk_aligned>
 8021192:	1c43      	adds	r3, r0, #1
 8021194:	4604      	mov	r4, r0
 8021196:	d158      	bne.n	802124a <_malloc_r+0xf6>
 8021198:	f8d8 4000 	ldr.w	r4, [r8]
 802119c:	4627      	mov	r7, r4
 802119e:	2f00      	cmp	r7, #0
 80211a0:	d143      	bne.n	802122a <_malloc_r+0xd6>
 80211a2:	2c00      	cmp	r4, #0
 80211a4:	d04b      	beq.n	802123e <_malloc_r+0xea>
 80211a6:	6823      	ldr	r3, [r4, #0]
 80211a8:	4639      	mov	r1, r7
 80211aa:	4630      	mov	r0, r6
 80211ac:	eb04 0903 	add.w	r9, r4, r3
 80211b0:	f000 fa02 	bl	80215b8 <_sbrk_r>
 80211b4:	4581      	cmp	r9, r0
 80211b6:	d142      	bne.n	802123e <_malloc_r+0xea>
 80211b8:	6821      	ldr	r1, [r4, #0]
 80211ba:	4630      	mov	r0, r6
 80211bc:	1a6d      	subs	r5, r5, r1
 80211be:	4629      	mov	r1, r5
 80211c0:	f7ff ffa6 	bl	8021110 <sbrk_aligned>
 80211c4:	3001      	adds	r0, #1
 80211c6:	d03a      	beq.n	802123e <_malloc_r+0xea>
 80211c8:	6823      	ldr	r3, [r4, #0]
 80211ca:	442b      	add	r3, r5
 80211cc:	6023      	str	r3, [r4, #0]
 80211ce:	f8d8 3000 	ldr.w	r3, [r8]
 80211d2:	685a      	ldr	r2, [r3, #4]
 80211d4:	bb62      	cbnz	r2, 8021230 <_malloc_r+0xdc>
 80211d6:	f8c8 7000 	str.w	r7, [r8]
 80211da:	e00f      	b.n	80211fc <_malloc_r+0xa8>
 80211dc:	6822      	ldr	r2, [r4, #0]
 80211de:	1b52      	subs	r2, r2, r5
 80211e0:	d420      	bmi.n	8021224 <_malloc_r+0xd0>
 80211e2:	2a0b      	cmp	r2, #11
 80211e4:	d917      	bls.n	8021216 <_malloc_r+0xc2>
 80211e6:	1961      	adds	r1, r4, r5
 80211e8:	42a3      	cmp	r3, r4
 80211ea:	6025      	str	r5, [r4, #0]
 80211ec:	bf18      	it	ne
 80211ee:	6059      	strne	r1, [r3, #4]
 80211f0:	6863      	ldr	r3, [r4, #4]
 80211f2:	bf08      	it	eq
 80211f4:	f8c8 1000 	streq.w	r1, [r8]
 80211f8:	5162      	str	r2, [r4, r5]
 80211fa:	604b      	str	r3, [r1, #4]
 80211fc:	4630      	mov	r0, r6
 80211fe:	f000 f82f 	bl	8021260 <__malloc_unlock>
 8021202:	f104 000b 	add.w	r0, r4, #11
 8021206:	1d23      	adds	r3, r4, #4
 8021208:	f020 0007 	bic.w	r0, r0, #7
 802120c:	1ac2      	subs	r2, r0, r3
 802120e:	bf1c      	itt	ne
 8021210:	1a1b      	subne	r3, r3, r0
 8021212:	50a3      	strne	r3, [r4, r2]
 8021214:	e7af      	b.n	8021176 <_malloc_r+0x22>
 8021216:	6862      	ldr	r2, [r4, #4]
 8021218:	42a3      	cmp	r3, r4
 802121a:	bf0c      	ite	eq
 802121c:	f8c8 2000 	streq.w	r2, [r8]
 8021220:	605a      	strne	r2, [r3, #4]
 8021222:	e7eb      	b.n	80211fc <_malloc_r+0xa8>
 8021224:	4623      	mov	r3, r4
 8021226:	6864      	ldr	r4, [r4, #4]
 8021228:	e7ae      	b.n	8021188 <_malloc_r+0x34>
 802122a:	463c      	mov	r4, r7
 802122c:	687f      	ldr	r7, [r7, #4]
 802122e:	e7b6      	b.n	802119e <_malloc_r+0x4a>
 8021230:	461a      	mov	r2, r3
 8021232:	685b      	ldr	r3, [r3, #4]
 8021234:	42a3      	cmp	r3, r4
 8021236:	d1fb      	bne.n	8021230 <_malloc_r+0xdc>
 8021238:	2300      	movs	r3, #0
 802123a:	6053      	str	r3, [r2, #4]
 802123c:	e7de      	b.n	80211fc <_malloc_r+0xa8>
 802123e:	230c      	movs	r3, #12
 8021240:	4630      	mov	r0, r6
 8021242:	6033      	str	r3, [r6, #0]
 8021244:	f000 f80c 	bl	8021260 <__malloc_unlock>
 8021248:	e794      	b.n	8021174 <_malloc_r+0x20>
 802124a:	6005      	str	r5, [r0, #0]
 802124c:	e7d6      	b.n	80211fc <_malloc_r+0xa8>
 802124e:	bf00      	nop
 8021250:	20002c88 	.word	0x20002c88

08021254 <__malloc_lock>:
 8021254:	4801      	ldr	r0, [pc, #4]	@ (802125c <__malloc_lock+0x8>)
 8021256:	f000 b9fc 	b.w	8021652 <__retarget_lock_acquire_recursive>
 802125a:	bf00      	nop
 802125c:	20002dcc 	.word	0x20002dcc

08021260 <__malloc_unlock>:
 8021260:	4801      	ldr	r0, [pc, #4]	@ (8021268 <__malloc_unlock+0x8>)
 8021262:	f000 b9f7 	b.w	8021654 <__retarget_lock_release_recursive>
 8021266:	bf00      	nop
 8021268:	20002dcc 	.word	0x20002dcc

0802126c <__cxa_atexit>:
 802126c:	b510      	push	{r4, lr}
 802126e:	4604      	mov	r4, r0
 8021270:	4804      	ldr	r0, [pc, #16]	@ (8021284 <__cxa_atexit+0x18>)
 8021272:	4613      	mov	r3, r2
 8021274:	b120      	cbz	r0, 8021280 <__cxa_atexit+0x14>
 8021276:	460a      	mov	r2, r1
 8021278:	2002      	movs	r0, #2
 802127a:	4621      	mov	r1, r4
 802127c:	f000 f9f8 	bl	8021670 <__register_exitproc>
 8021280:	bd10      	pop	{r4, pc}
 8021282:	bf00      	nop
 8021284:	08021671 	.word	0x08021671

08021288 <std>:
 8021288:	2300      	movs	r3, #0
 802128a:	b510      	push	{r4, lr}
 802128c:	4604      	mov	r4, r0
 802128e:	6083      	str	r3, [r0, #8]
 8021290:	8181      	strh	r1, [r0, #12]
 8021292:	4619      	mov	r1, r3
 8021294:	6643      	str	r3, [r0, #100]	@ 0x64
 8021296:	81c2      	strh	r2, [r0, #14]
 8021298:	2208      	movs	r2, #8
 802129a:	6183      	str	r3, [r0, #24]
 802129c:	e9c0 3300 	strd	r3, r3, [r0]
 80212a0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80212a4:	305c      	adds	r0, #92	@ 0x5c
 80212a6:	f000 f906 	bl	80214b6 <memset>
 80212aa:	4b0d      	ldr	r3, [pc, #52]	@ (80212e0 <std+0x58>)
 80212ac:	6224      	str	r4, [r4, #32]
 80212ae:	6263      	str	r3, [r4, #36]	@ 0x24
 80212b0:	4b0c      	ldr	r3, [pc, #48]	@ (80212e4 <std+0x5c>)
 80212b2:	62a3      	str	r3, [r4, #40]	@ 0x28
 80212b4:	4b0c      	ldr	r3, [pc, #48]	@ (80212e8 <std+0x60>)
 80212b6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80212b8:	4b0c      	ldr	r3, [pc, #48]	@ (80212ec <std+0x64>)
 80212ba:	6323      	str	r3, [r4, #48]	@ 0x30
 80212bc:	4b0c      	ldr	r3, [pc, #48]	@ (80212f0 <std+0x68>)
 80212be:	429c      	cmp	r4, r3
 80212c0:	d006      	beq.n	80212d0 <std+0x48>
 80212c2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80212c6:	4294      	cmp	r4, r2
 80212c8:	d002      	beq.n	80212d0 <std+0x48>
 80212ca:	33d0      	adds	r3, #208	@ 0xd0
 80212cc:	429c      	cmp	r4, r3
 80212ce:	d105      	bne.n	80212dc <std+0x54>
 80212d0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80212d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80212d8:	f000 b9ba 	b.w	8021650 <__retarget_lock_init_recursive>
 80212dc:	bd10      	pop	{r4, pc}
 80212de:	bf00      	nop
 80212e0:	08021431 	.word	0x08021431
 80212e4:	08021453 	.word	0x08021453
 80212e8:	0802148b 	.word	0x0802148b
 80212ec:	080214af 	.word	0x080214af
 80212f0:	20002c8c 	.word	0x20002c8c

080212f4 <stdio_exit_handler>:
 80212f4:	4a02      	ldr	r2, [pc, #8]	@ (8021300 <stdio_exit_handler+0xc>)
 80212f6:	4903      	ldr	r1, [pc, #12]	@ (8021304 <stdio_exit_handler+0x10>)
 80212f8:	4803      	ldr	r0, [pc, #12]	@ (8021308 <stdio_exit_handler+0x14>)
 80212fa:	f000 b87b 	b.w	80213f4 <_fwalk_sglue>
 80212fe:	bf00      	nop
 8021300:	20000094 	.word	0x20000094
 8021304:	08021e71 	.word	0x08021e71
 8021308:	200000a4 	.word	0x200000a4

0802130c <cleanup_stdio>:
 802130c:	6841      	ldr	r1, [r0, #4]
 802130e:	4b0c      	ldr	r3, [pc, #48]	@ (8021340 <cleanup_stdio+0x34>)
 8021310:	4299      	cmp	r1, r3
 8021312:	b510      	push	{r4, lr}
 8021314:	4604      	mov	r4, r0
 8021316:	d001      	beq.n	802131c <cleanup_stdio+0x10>
 8021318:	f000 fdaa 	bl	8021e70 <_fflush_r>
 802131c:	68a1      	ldr	r1, [r4, #8]
 802131e:	4b09      	ldr	r3, [pc, #36]	@ (8021344 <cleanup_stdio+0x38>)
 8021320:	4299      	cmp	r1, r3
 8021322:	d002      	beq.n	802132a <cleanup_stdio+0x1e>
 8021324:	4620      	mov	r0, r4
 8021326:	f000 fda3 	bl	8021e70 <_fflush_r>
 802132a:	68e1      	ldr	r1, [r4, #12]
 802132c:	4b06      	ldr	r3, [pc, #24]	@ (8021348 <cleanup_stdio+0x3c>)
 802132e:	4299      	cmp	r1, r3
 8021330:	d004      	beq.n	802133c <cleanup_stdio+0x30>
 8021332:	4620      	mov	r0, r4
 8021334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021338:	f000 bd9a 	b.w	8021e70 <_fflush_r>
 802133c:	bd10      	pop	{r4, pc}
 802133e:	bf00      	nop
 8021340:	20002c8c 	.word	0x20002c8c
 8021344:	20002cf4 	.word	0x20002cf4
 8021348:	20002d5c 	.word	0x20002d5c

0802134c <global_stdio_init.part.0>:
 802134c:	b510      	push	{r4, lr}
 802134e:	4b0b      	ldr	r3, [pc, #44]	@ (802137c <global_stdio_init.part.0+0x30>)
 8021350:	2104      	movs	r1, #4
 8021352:	4c0b      	ldr	r4, [pc, #44]	@ (8021380 <global_stdio_init.part.0+0x34>)
 8021354:	4a0b      	ldr	r2, [pc, #44]	@ (8021384 <global_stdio_init.part.0+0x38>)
 8021356:	4620      	mov	r0, r4
 8021358:	601a      	str	r2, [r3, #0]
 802135a:	2200      	movs	r2, #0
 802135c:	f7ff ff94 	bl	8021288 <std>
 8021360:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8021364:	2201      	movs	r2, #1
 8021366:	2109      	movs	r1, #9
 8021368:	f7ff ff8e 	bl	8021288 <std>
 802136c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8021370:	2202      	movs	r2, #2
 8021372:	2112      	movs	r1, #18
 8021374:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021378:	f7ff bf86 	b.w	8021288 <std>
 802137c:	20002dc4 	.word	0x20002dc4
 8021380:	20002c8c 	.word	0x20002c8c
 8021384:	080212f5 	.word	0x080212f5

08021388 <__sfp_lock_acquire>:
 8021388:	4801      	ldr	r0, [pc, #4]	@ (8021390 <__sfp_lock_acquire+0x8>)
 802138a:	f000 b962 	b.w	8021652 <__retarget_lock_acquire_recursive>
 802138e:	bf00      	nop
 8021390:	20002dce 	.word	0x20002dce

08021394 <__sfp_lock_release>:
 8021394:	4801      	ldr	r0, [pc, #4]	@ (802139c <__sfp_lock_release+0x8>)
 8021396:	f000 b95d 	b.w	8021654 <__retarget_lock_release_recursive>
 802139a:	bf00      	nop
 802139c:	20002dce 	.word	0x20002dce

080213a0 <__sinit>:
 80213a0:	b510      	push	{r4, lr}
 80213a2:	4604      	mov	r4, r0
 80213a4:	f7ff fff0 	bl	8021388 <__sfp_lock_acquire>
 80213a8:	6a23      	ldr	r3, [r4, #32]
 80213aa:	b11b      	cbz	r3, 80213b4 <__sinit+0x14>
 80213ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80213b0:	f7ff bff0 	b.w	8021394 <__sfp_lock_release>
 80213b4:	4b04      	ldr	r3, [pc, #16]	@ (80213c8 <__sinit+0x28>)
 80213b6:	6223      	str	r3, [r4, #32]
 80213b8:	4b04      	ldr	r3, [pc, #16]	@ (80213cc <__sinit+0x2c>)
 80213ba:	681b      	ldr	r3, [r3, #0]
 80213bc:	2b00      	cmp	r3, #0
 80213be:	d1f5      	bne.n	80213ac <__sinit+0xc>
 80213c0:	f7ff ffc4 	bl	802134c <global_stdio_init.part.0>
 80213c4:	e7f2      	b.n	80213ac <__sinit+0xc>
 80213c6:	bf00      	nop
 80213c8:	0802130d 	.word	0x0802130d
 80213cc:	20002dc4 	.word	0x20002dc4

080213d0 <fiprintf>:
 80213d0:	b40e      	push	{r1, r2, r3}
 80213d2:	b503      	push	{r0, r1, lr}
 80213d4:	ab03      	add	r3, sp, #12
 80213d6:	4601      	mov	r1, r0
 80213d8:	4805      	ldr	r0, [pc, #20]	@ (80213f0 <fiprintf+0x20>)
 80213da:	f853 2b04 	ldr.w	r2, [r3], #4
 80213de:	6800      	ldr	r0, [r0, #0]
 80213e0:	9301      	str	r3, [sp, #4]
 80213e2:	f000 fa17 	bl	8021814 <_vfiprintf_r>
 80213e6:	b002      	add	sp, #8
 80213e8:	f85d eb04 	ldr.w	lr, [sp], #4
 80213ec:	b003      	add	sp, #12
 80213ee:	4770      	bx	lr
 80213f0:	200000a0 	.word	0x200000a0

080213f4 <_fwalk_sglue>:
 80213f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80213f8:	4607      	mov	r7, r0
 80213fa:	4688      	mov	r8, r1
 80213fc:	4614      	mov	r4, r2
 80213fe:	2600      	movs	r6, #0
 8021400:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021404:	f1b9 0901 	subs.w	r9, r9, #1
 8021408:	d505      	bpl.n	8021416 <_fwalk_sglue+0x22>
 802140a:	6824      	ldr	r4, [r4, #0]
 802140c:	2c00      	cmp	r4, #0
 802140e:	d1f7      	bne.n	8021400 <_fwalk_sglue+0xc>
 8021410:	4630      	mov	r0, r6
 8021412:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021416:	89ab      	ldrh	r3, [r5, #12]
 8021418:	2b01      	cmp	r3, #1
 802141a:	d907      	bls.n	802142c <_fwalk_sglue+0x38>
 802141c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021420:	3301      	adds	r3, #1
 8021422:	d003      	beq.n	802142c <_fwalk_sglue+0x38>
 8021424:	4629      	mov	r1, r5
 8021426:	4638      	mov	r0, r7
 8021428:	47c0      	blx	r8
 802142a:	4306      	orrs	r6, r0
 802142c:	3568      	adds	r5, #104	@ 0x68
 802142e:	e7e9      	b.n	8021404 <_fwalk_sglue+0x10>

08021430 <__sread>:
 8021430:	b510      	push	{r4, lr}
 8021432:	460c      	mov	r4, r1
 8021434:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021438:	f000 f898 	bl	802156c <_read_r>
 802143c:	2800      	cmp	r0, #0
 802143e:	bfab      	itete	ge
 8021440:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8021442:	89a3      	ldrhlt	r3, [r4, #12]
 8021444:	181b      	addge	r3, r3, r0
 8021446:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 802144a:	bfac      	ite	ge
 802144c:	6563      	strge	r3, [r4, #84]	@ 0x54
 802144e:	81a3      	strhlt	r3, [r4, #12]
 8021450:	bd10      	pop	{r4, pc}

08021452 <__swrite>:
 8021452:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021456:	461f      	mov	r7, r3
 8021458:	898b      	ldrh	r3, [r1, #12]
 802145a:	4605      	mov	r5, r0
 802145c:	460c      	mov	r4, r1
 802145e:	05db      	lsls	r3, r3, #23
 8021460:	4616      	mov	r6, r2
 8021462:	d505      	bpl.n	8021470 <__swrite+0x1e>
 8021464:	2302      	movs	r3, #2
 8021466:	2200      	movs	r2, #0
 8021468:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802146c:	f000 f86c 	bl	8021548 <_lseek_r>
 8021470:	89a3      	ldrh	r3, [r4, #12]
 8021472:	4632      	mov	r2, r6
 8021474:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021478:	4628      	mov	r0, r5
 802147a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 802147e:	81a3      	strh	r3, [r4, #12]
 8021480:	463b      	mov	r3, r7
 8021482:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021486:	f000 b8a7 	b.w	80215d8 <_write_r>

0802148a <__sseek>:
 802148a:	b510      	push	{r4, lr}
 802148c:	460c      	mov	r4, r1
 802148e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021492:	f000 f859 	bl	8021548 <_lseek_r>
 8021496:	1c43      	adds	r3, r0, #1
 8021498:	89a3      	ldrh	r3, [r4, #12]
 802149a:	bf15      	itete	ne
 802149c:	6560      	strne	r0, [r4, #84]	@ 0x54
 802149e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80214a2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80214a6:	81a3      	strheq	r3, [r4, #12]
 80214a8:	bf18      	it	ne
 80214aa:	81a3      	strhne	r3, [r4, #12]
 80214ac:	bd10      	pop	{r4, pc}

080214ae <__sclose>:
 80214ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214b2:	f000 b839 	b.w	8021528 <_close_r>

080214b6 <memset>:
 80214b6:	4402      	add	r2, r0
 80214b8:	4603      	mov	r3, r0
 80214ba:	4293      	cmp	r3, r2
 80214bc:	d100      	bne.n	80214c0 <memset+0xa>
 80214be:	4770      	bx	lr
 80214c0:	f803 1b01 	strb.w	r1, [r3], #1
 80214c4:	e7f9      	b.n	80214ba <memset+0x4>

080214c6 <_raise_r>:
 80214c6:	291f      	cmp	r1, #31
 80214c8:	b538      	push	{r3, r4, r5, lr}
 80214ca:	4605      	mov	r5, r0
 80214cc:	460c      	mov	r4, r1
 80214ce:	d904      	bls.n	80214da <_raise_r+0x14>
 80214d0:	2316      	movs	r3, #22
 80214d2:	6003      	str	r3, [r0, #0]
 80214d4:	f04f 30ff 	mov.w	r0, #4294967295
 80214d8:	bd38      	pop	{r3, r4, r5, pc}
 80214da:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80214dc:	b112      	cbz	r2, 80214e4 <_raise_r+0x1e>
 80214de:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80214e2:	b94b      	cbnz	r3, 80214f8 <_raise_r+0x32>
 80214e4:	4628      	mov	r0, r5
 80214e6:	f000 f865 	bl	80215b4 <_getpid_r>
 80214ea:	4622      	mov	r2, r4
 80214ec:	4601      	mov	r1, r0
 80214ee:	4628      	mov	r0, r5
 80214f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80214f4:	f000 b84c 	b.w	8021590 <_kill_r>
 80214f8:	2b01      	cmp	r3, #1
 80214fa:	d00a      	beq.n	8021512 <_raise_r+0x4c>
 80214fc:	1c59      	adds	r1, r3, #1
 80214fe:	d103      	bne.n	8021508 <_raise_r+0x42>
 8021500:	2316      	movs	r3, #22
 8021502:	6003      	str	r3, [r0, #0]
 8021504:	2001      	movs	r0, #1
 8021506:	e7e7      	b.n	80214d8 <_raise_r+0x12>
 8021508:	2100      	movs	r1, #0
 802150a:	4620      	mov	r0, r4
 802150c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8021510:	4798      	blx	r3
 8021512:	2000      	movs	r0, #0
 8021514:	e7e0      	b.n	80214d8 <_raise_r+0x12>
	...

08021518 <raise>:
 8021518:	4b02      	ldr	r3, [pc, #8]	@ (8021524 <raise+0xc>)
 802151a:	4601      	mov	r1, r0
 802151c:	6818      	ldr	r0, [r3, #0]
 802151e:	f7ff bfd2 	b.w	80214c6 <_raise_r>
 8021522:	bf00      	nop
 8021524:	200000a0 	.word	0x200000a0

08021528 <_close_r>:
 8021528:	b538      	push	{r3, r4, r5, lr}
 802152a:	2300      	movs	r3, #0
 802152c:	4d05      	ldr	r5, [pc, #20]	@ (8021544 <_close_r+0x1c>)
 802152e:	4604      	mov	r4, r0
 8021530:	4608      	mov	r0, r1
 8021532:	602b      	str	r3, [r5, #0]
 8021534:	f7df fda4 	bl	8001080 <_close>
 8021538:	1c43      	adds	r3, r0, #1
 802153a:	d102      	bne.n	8021542 <_close_r+0x1a>
 802153c:	682b      	ldr	r3, [r5, #0]
 802153e:	b103      	cbz	r3, 8021542 <_close_r+0x1a>
 8021540:	6023      	str	r3, [r4, #0]
 8021542:	bd38      	pop	{r3, r4, r5, pc}
 8021544:	20002dc8 	.word	0x20002dc8

08021548 <_lseek_r>:
 8021548:	b538      	push	{r3, r4, r5, lr}
 802154a:	4604      	mov	r4, r0
 802154c:	4d06      	ldr	r5, [pc, #24]	@ (8021568 <_lseek_r+0x20>)
 802154e:	4608      	mov	r0, r1
 8021550:	4611      	mov	r1, r2
 8021552:	2200      	movs	r2, #0
 8021554:	602a      	str	r2, [r5, #0]
 8021556:	461a      	mov	r2, r3
 8021558:	f7df fdb9 	bl	80010ce <_lseek>
 802155c:	1c43      	adds	r3, r0, #1
 802155e:	d102      	bne.n	8021566 <_lseek_r+0x1e>
 8021560:	682b      	ldr	r3, [r5, #0]
 8021562:	b103      	cbz	r3, 8021566 <_lseek_r+0x1e>
 8021564:	6023      	str	r3, [r4, #0]
 8021566:	bd38      	pop	{r3, r4, r5, pc}
 8021568:	20002dc8 	.word	0x20002dc8

0802156c <_read_r>:
 802156c:	b538      	push	{r3, r4, r5, lr}
 802156e:	4604      	mov	r4, r0
 8021570:	4d06      	ldr	r5, [pc, #24]	@ (802158c <_read_r+0x20>)
 8021572:	4608      	mov	r0, r1
 8021574:	4611      	mov	r1, r2
 8021576:	2200      	movs	r2, #0
 8021578:	602a      	str	r2, [r5, #0]
 802157a:	461a      	mov	r2, r3
 802157c:	f7df fd47 	bl	800100e <_read>
 8021580:	1c43      	adds	r3, r0, #1
 8021582:	d102      	bne.n	802158a <_read_r+0x1e>
 8021584:	682b      	ldr	r3, [r5, #0]
 8021586:	b103      	cbz	r3, 802158a <_read_r+0x1e>
 8021588:	6023      	str	r3, [r4, #0]
 802158a:	bd38      	pop	{r3, r4, r5, pc}
 802158c:	20002dc8 	.word	0x20002dc8

08021590 <_kill_r>:
 8021590:	b538      	push	{r3, r4, r5, lr}
 8021592:	2300      	movs	r3, #0
 8021594:	4d06      	ldr	r5, [pc, #24]	@ (80215b0 <_kill_r+0x20>)
 8021596:	4604      	mov	r4, r0
 8021598:	4608      	mov	r0, r1
 802159a:	4611      	mov	r1, r2
 802159c:	602b      	str	r3, [r5, #0]
 802159e:	f7df fd1b 	bl	8000fd8 <_kill>
 80215a2:	1c43      	adds	r3, r0, #1
 80215a4:	d102      	bne.n	80215ac <_kill_r+0x1c>
 80215a6:	682b      	ldr	r3, [r5, #0]
 80215a8:	b103      	cbz	r3, 80215ac <_kill_r+0x1c>
 80215aa:	6023      	str	r3, [r4, #0]
 80215ac:	bd38      	pop	{r3, r4, r5, pc}
 80215ae:	bf00      	nop
 80215b0:	20002dc8 	.word	0x20002dc8

080215b4 <_getpid_r>:
 80215b4:	f7df bd08 	b.w	8000fc8 <_getpid>

080215b8 <_sbrk_r>:
 80215b8:	b538      	push	{r3, r4, r5, lr}
 80215ba:	2300      	movs	r3, #0
 80215bc:	4d05      	ldr	r5, [pc, #20]	@ (80215d4 <_sbrk_r+0x1c>)
 80215be:	4604      	mov	r4, r0
 80215c0:	4608      	mov	r0, r1
 80215c2:	602b      	str	r3, [r5, #0]
 80215c4:	f7df fd90 	bl	80010e8 <_sbrk>
 80215c8:	1c43      	adds	r3, r0, #1
 80215ca:	d102      	bne.n	80215d2 <_sbrk_r+0x1a>
 80215cc:	682b      	ldr	r3, [r5, #0]
 80215ce:	b103      	cbz	r3, 80215d2 <_sbrk_r+0x1a>
 80215d0:	6023      	str	r3, [r4, #0]
 80215d2:	bd38      	pop	{r3, r4, r5, pc}
 80215d4:	20002dc8 	.word	0x20002dc8

080215d8 <_write_r>:
 80215d8:	b538      	push	{r3, r4, r5, lr}
 80215da:	4604      	mov	r4, r0
 80215dc:	4d06      	ldr	r5, [pc, #24]	@ (80215f8 <_write_r+0x20>)
 80215de:	4608      	mov	r0, r1
 80215e0:	4611      	mov	r1, r2
 80215e2:	2200      	movs	r2, #0
 80215e4:	602a      	str	r2, [r5, #0]
 80215e6:	461a      	mov	r2, r3
 80215e8:	f7df fd2e 	bl	8001048 <_write>
 80215ec:	1c43      	adds	r3, r0, #1
 80215ee:	d102      	bne.n	80215f6 <_write_r+0x1e>
 80215f0:	682b      	ldr	r3, [r5, #0]
 80215f2:	b103      	cbz	r3, 80215f6 <_write_r+0x1e>
 80215f4:	6023      	str	r3, [r4, #0]
 80215f6:	bd38      	pop	{r3, r4, r5, pc}
 80215f8:	20002dc8 	.word	0x20002dc8

080215fc <__errno>:
 80215fc:	4b01      	ldr	r3, [pc, #4]	@ (8021604 <__errno+0x8>)
 80215fe:	6818      	ldr	r0, [r3, #0]
 8021600:	4770      	bx	lr
 8021602:	bf00      	nop
 8021604:	200000a0 	.word	0x200000a0

08021608 <__libc_init_array>:
 8021608:	b570      	push	{r4, r5, r6, lr}
 802160a:	4d0d      	ldr	r5, [pc, #52]	@ (8021640 <__libc_init_array+0x38>)
 802160c:	2600      	movs	r6, #0
 802160e:	4c0d      	ldr	r4, [pc, #52]	@ (8021644 <__libc_init_array+0x3c>)
 8021610:	1b64      	subs	r4, r4, r5
 8021612:	10a4      	asrs	r4, r4, #2
 8021614:	42a6      	cmp	r6, r4
 8021616:	d109      	bne.n	802162c <__libc_init_array+0x24>
 8021618:	4d0b      	ldr	r5, [pc, #44]	@ (8021648 <__libc_init_array+0x40>)
 802161a:	2600      	movs	r6, #0
 802161c:	4c0b      	ldr	r4, [pc, #44]	@ (802164c <__libc_init_array+0x44>)
 802161e:	f000 fd75 	bl	802210c <_init>
 8021622:	1b64      	subs	r4, r4, r5
 8021624:	10a4      	asrs	r4, r4, #2
 8021626:	42a6      	cmp	r6, r4
 8021628:	d105      	bne.n	8021636 <__libc_init_array+0x2e>
 802162a:	bd70      	pop	{r4, r5, r6, pc}
 802162c:	f855 3b04 	ldr.w	r3, [r5], #4
 8021630:	3601      	adds	r6, #1
 8021632:	4798      	blx	r3
 8021634:	e7ee      	b.n	8021614 <__libc_init_array+0xc>
 8021636:	f855 3b04 	ldr.w	r3, [r5], #4
 802163a:	3601      	adds	r6, #1
 802163c:	4798      	blx	r3
 802163e:	e7f2      	b.n	8021626 <__libc_init_array+0x1e>
 8021640:	08027c28 	.word	0x08027c28
 8021644:	08027c28 	.word	0x08027c28
 8021648:	08027c28 	.word	0x08027c28
 802164c:	08027c40 	.word	0x08027c40

08021650 <__retarget_lock_init_recursive>:
 8021650:	4770      	bx	lr

08021652 <__retarget_lock_acquire_recursive>:
 8021652:	4770      	bx	lr

08021654 <__retarget_lock_release_recursive>:
 8021654:	4770      	bx	lr

08021656 <memcpy>:
 8021656:	440a      	add	r2, r1
 8021658:	1e43      	subs	r3, r0, #1
 802165a:	4291      	cmp	r1, r2
 802165c:	d100      	bne.n	8021660 <memcpy+0xa>
 802165e:	4770      	bx	lr
 8021660:	b510      	push	{r4, lr}
 8021662:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021666:	4291      	cmp	r1, r2
 8021668:	f803 4f01 	strb.w	r4, [r3, #1]!
 802166c:	d1f9      	bne.n	8021662 <memcpy+0xc>
 802166e:	bd10      	pop	{r4, pc}

08021670 <__register_exitproc>:
 8021670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021674:	4d28      	ldr	r5, [pc, #160]	@ (8021718 <__register_exitproc+0xa8>)
 8021676:	4607      	mov	r7, r0
 8021678:	4691      	mov	r9, r2
 802167a:	460e      	mov	r6, r1
 802167c:	6828      	ldr	r0, [r5, #0]
 802167e:	4698      	mov	r8, r3
 8021680:	f7ff ffe7 	bl	8021652 <__retarget_lock_acquire_recursive>
 8021684:	4a25      	ldr	r2, [pc, #148]	@ (802171c <__register_exitproc+0xac>)
 8021686:	6814      	ldr	r4, [r2, #0]
 8021688:	b93c      	cbnz	r4, 802169a <__register_exitproc+0x2a>
 802168a:	4b25      	ldr	r3, [pc, #148]	@ (8021720 <__register_exitproc+0xb0>)
 802168c:	6013      	str	r3, [r2, #0]
 802168e:	4a25      	ldr	r2, [pc, #148]	@ (8021724 <__register_exitproc+0xb4>)
 8021690:	b112      	cbz	r2, 8021698 <__register_exitproc+0x28>
 8021692:	6812      	ldr	r2, [r2, #0]
 8021694:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8021698:	4c21      	ldr	r4, [pc, #132]	@ (8021720 <__register_exitproc+0xb0>)
 802169a:	6863      	ldr	r3, [r4, #4]
 802169c:	2b1f      	cmp	r3, #31
 802169e:	dd06      	ble.n	80216ae <__register_exitproc+0x3e>
 80216a0:	6828      	ldr	r0, [r5, #0]
 80216a2:	f7ff ffd7 	bl	8021654 <__retarget_lock_release_recursive>
 80216a6:	f04f 30ff 	mov.w	r0, #4294967295
 80216aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80216ae:	b33f      	cbz	r7, 8021700 <__register_exitproc+0x90>
 80216b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80216b4:	b968      	cbnz	r0, 80216d2 <__register_exitproc+0x62>
 80216b6:	4b1c      	ldr	r3, [pc, #112]	@ (8021728 <__register_exitproc+0xb8>)
 80216b8:	2b00      	cmp	r3, #0
 80216ba:	d0f1      	beq.n	80216a0 <__register_exitproc+0x30>
 80216bc:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80216c0:	f7ff fd16 	bl	80210f0 <malloc>
 80216c4:	2800      	cmp	r0, #0
 80216c6:	d0eb      	beq.n	80216a0 <__register_exitproc+0x30>
 80216c8:	2300      	movs	r3, #0
 80216ca:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80216ce:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80216d2:	6863      	ldr	r3, [r4, #4]
 80216d4:	2201      	movs	r2, #1
 80216d6:	2f02      	cmp	r7, #2
 80216d8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80216dc:	fa02 f203 	lsl.w	r2, r2, r3
 80216e0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80216e4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80216e8:	ea43 0302 	orr.w	r3, r3, r2
 80216ec:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80216f0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80216f4:	bf02      	ittt	eq
 80216f6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80216fa:	4313      	orreq	r3, r2
 80216fc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8021700:	6863      	ldr	r3, [r4, #4]
 8021702:	6828      	ldr	r0, [r5, #0]
 8021704:	1c5a      	adds	r2, r3, #1
 8021706:	3302      	adds	r3, #2
 8021708:	6062      	str	r2, [r4, #4]
 802170a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802170e:	f7ff ffa1 	bl	8021654 <__retarget_lock_release_recursive>
 8021712:	2000      	movs	r0, #0
 8021714:	e7c9      	b.n	80216aa <__register_exitproc+0x3a>
 8021716:	bf00      	nop
 8021718:	200000f0 	.word	0x200000f0
 802171c:	20002e5c 	.word	0x20002e5c
 8021720:	20002dd0 	.word	0x20002dd0
 8021724:	080242e4 	.word	0x080242e4
 8021728:	080210f1 	.word	0x080210f1

0802172c <_free_r>:
 802172c:	b538      	push	{r3, r4, r5, lr}
 802172e:	4605      	mov	r5, r0
 8021730:	2900      	cmp	r1, #0
 8021732:	d041      	beq.n	80217b8 <_free_r+0x8c>
 8021734:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021738:	1f0c      	subs	r4, r1, #4
 802173a:	2b00      	cmp	r3, #0
 802173c:	bfb8      	it	lt
 802173e:	18e4      	addlt	r4, r4, r3
 8021740:	f7ff fd88 	bl	8021254 <__malloc_lock>
 8021744:	4a1d      	ldr	r2, [pc, #116]	@ (80217bc <_free_r+0x90>)
 8021746:	6813      	ldr	r3, [r2, #0]
 8021748:	b933      	cbnz	r3, 8021758 <_free_r+0x2c>
 802174a:	6063      	str	r3, [r4, #4]
 802174c:	6014      	str	r4, [r2, #0]
 802174e:	4628      	mov	r0, r5
 8021750:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021754:	f7ff bd84 	b.w	8021260 <__malloc_unlock>
 8021758:	42a3      	cmp	r3, r4
 802175a:	d908      	bls.n	802176e <_free_r+0x42>
 802175c:	6820      	ldr	r0, [r4, #0]
 802175e:	1821      	adds	r1, r4, r0
 8021760:	428b      	cmp	r3, r1
 8021762:	bf01      	itttt	eq
 8021764:	6819      	ldreq	r1, [r3, #0]
 8021766:	685b      	ldreq	r3, [r3, #4]
 8021768:	1809      	addeq	r1, r1, r0
 802176a:	6021      	streq	r1, [r4, #0]
 802176c:	e7ed      	b.n	802174a <_free_r+0x1e>
 802176e:	461a      	mov	r2, r3
 8021770:	685b      	ldr	r3, [r3, #4]
 8021772:	b10b      	cbz	r3, 8021778 <_free_r+0x4c>
 8021774:	42a3      	cmp	r3, r4
 8021776:	d9fa      	bls.n	802176e <_free_r+0x42>
 8021778:	6811      	ldr	r1, [r2, #0]
 802177a:	1850      	adds	r0, r2, r1
 802177c:	42a0      	cmp	r0, r4
 802177e:	d10b      	bne.n	8021798 <_free_r+0x6c>
 8021780:	6820      	ldr	r0, [r4, #0]
 8021782:	4401      	add	r1, r0
 8021784:	1850      	adds	r0, r2, r1
 8021786:	6011      	str	r1, [r2, #0]
 8021788:	4283      	cmp	r3, r0
 802178a:	d1e0      	bne.n	802174e <_free_r+0x22>
 802178c:	6818      	ldr	r0, [r3, #0]
 802178e:	685b      	ldr	r3, [r3, #4]
 8021790:	4408      	add	r0, r1
 8021792:	6053      	str	r3, [r2, #4]
 8021794:	6010      	str	r0, [r2, #0]
 8021796:	e7da      	b.n	802174e <_free_r+0x22>
 8021798:	d902      	bls.n	80217a0 <_free_r+0x74>
 802179a:	230c      	movs	r3, #12
 802179c:	602b      	str	r3, [r5, #0]
 802179e:	e7d6      	b.n	802174e <_free_r+0x22>
 80217a0:	6820      	ldr	r0, [r4, #0]
 80217a2:	1821      	adds	r1, r4, r0
 80217a4:	428b      	cmp	r3, r1
 80217a6:	bf02      	ittt	eq
 80217a8:	6819      	ldreq	r1, [r3, #0]
 80217aa:	685b      	ldreq	r3, [r3, #4]
 80217ac:	1809      	addeq	r1, r1, r0
 80217ae:	6063      	str	r3, [r4, #4]
 80217b0:	bf08      	it	eq
 80217b2:	6021      	streq	r1, [r4, #0]
 80217b4:	6054      	str	r4, [r2, #4]
 80217b6:	e7ca      	b.n	802174e <_free_r+0x22>
 80217b8:	bd38      	pop	{r3, r4, r5, pc}
 80217ba:	bf00      	nop
 80217bc:	20002c88 	.word	0x20002c88

080217c0 <__sfputc_r>:
 80217c0:	6893      	ldr	r3, [r2, #8]
 80217c2:	3b01      	subs	r3, #1
 80217c4:	2b00      	cmp	r3, #0
 80217c6:	6093      	str	r3, [r2, #8]
 80217c8:	b410      	push	{r4}
 80217ca:	da08      	bge.n	80217de <__sfputc_r+0x1e>
 80217cc:	6994      	ldr	r4, [r2, #24]
 80217ce:	42a3      	cmp	r3, r4
 80217d0:	db01      	blt.n	80217d6 <__sfputc_r+0x16>
 80217d2:	290a      	cmp	r1, #10
 80217d4:	d103      	bne.n	80217de <__sfputc_r+0x1e>
 80217d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80217da:	f000 bb71 	b.w	8021ec0 <__swbuf_r>
 80217de:	6813      	ldr	r3, [r2, #0]
 80217e0:	1c58      	adds	r0, r3, #1
 80217e2:	6010      	str	r0, [r2, #0]
 80217e4:	4608      	mov	r0, r1
 80217e6:	7019      	strb	r1, [r3, #0]
 80217e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80217ec:	4770      	bx	lr

080217ee <__sfputs_r>:
 80217ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80217f0:	4606      	mov	r6, r0
 80217f2:	460f      	mov	r7, r1
 80217f4:	4614      	mov	r4, r2
 80217f6:	18d5      	adds	r5, r2, r3
 80217f8:	42ac      	cmp	r4, r5
 80217fa:	d101      	bne.n	8021800 <__sfputs_r+0x12>
 80217fc:	2000      	movs	r0, #0
 80217fe:	e007      	b.n	8021810 <__sfputs_r+0x22>
 8021800:	463a      	mov	r2, r7
 8021802:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021806:	4630      	mov	r0, r6
 8021808:	f7ff ffda 	bl	80217c0 <__sfputc_r>
 802180c:	1c43      	adds	r3, r0, #1
 802180e:	d1f3      	bne.n	80217f8 <__sfputs_r+0xa>
 8021810:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021814 <_vfiprintf_r>:
 8021814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021818:	460d      	mov	r5, r1
 802181a:	b09d      	sub	sp, #116	@ 0x74
 802181c:	4614      	mov	r4, r2
 802181e:	4698      	mov	r8, r3
 8021820:	4606      	mov	r6, r0
 8021822:	b118      	cbz	r0, 802182c <_vfiprintf_r+0x18>
 8021824:	6a03      	ldr	r3, [r0, #32]
 8021826:	b90b      	cbnz	r3, 802182c <_vfiprintf_r+0x18>
 8021828:	f7ff fdba 	bl	80213a0 <__sinit>
 802182c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802182e:	07d9      	lsls	r1, r3, #31
 8021830:	d405      	bmi.n	802183e <_vfiprintf_r+0x2a>
 8021832:	89ab      	ldrh	r3, [r5, #12]
 8021834:	059a      	lsls	r2, r3, #22
 8021836:	d402      	bmi.n	802183e <_vfiprintf_r+0x2a>
 8021838:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802183a:	f7ff ff0a 	bl	8021652 <__retarget_lock_acquire_recursive>
 802183e:	89ab      	ldrh	r3, [r5, #12]
 8021840:	071b      	lsls	r3, r3, #28
 8021842:	d501      	bpl.n	8021848 <_vfiprintf_r+0x34>
 8021844:	692b      	ldr	r3, [r5, #16]
 8021846:	b99b      	cbnz	r3, 8021870 <_vfiprintf_r+0x5c>
 8021848:	4629      	mov	r1, r5
 802184a:	4630      	mov	r0, r6
 802184c:	f000 fb76 	bl	8021f3c <__swsetup_r>
 8021850:	b170      	cbz	r0, 8021870 <_vfiprintf_r+0x5c>
 8021852:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8021854:	07dc      	lsls	r4, r3, #31
 8021856:	d504      	bpl.n	8021862 <_vfiprintf_r+0x4e>
 8021858:	f04f 30ff 	mov.w	r0, #4294967295
 802185c:	b01d      	add	sp, #116	@ 0x74
 802185e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021862:	89ab      	ldrh	r3, [r5, #12]
 8021864:	0598      	lsls	r0, r3, #22
 8021866:	d4f7      	bmi.n	8021858 <_vfiprintf_r+0x44>
 8021868:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802186a:	f7ff fef3 	bl	8021654 <__retarget_lock_release_recursive>
 802186e:	e7f3      	b.n	8021858 <_vfiprintf_r+0x44>
 8021870:	2300      	movs	r3, #0
 8021872:	f8cd 800c 	str.w	r8, [sp, #12]
 8021876:	f04f 0901 	mov.w	r9, #1
 802187a:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8021a30 <_vfiprintf_r+0x21c>
 802187e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021880:	2320      	movs	r3, #32
 8021882:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8021886:	2330      	movs	r3, #48	@ 0x30
 8021888:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 802188c:	4623      	mov	r3, r4
 802188e:	469a      	mov	sl, r3
 8021890:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021894:	b10a      	cbz	r2, 802189a <_vfiprintf_r+0x86>
 8021896:	2a25      	cmp	r2, #37	@ 0x25
 8021898:	d1f9      	bne.n	802188e <_vfiprintf_r+0x7a>
 802189a:	ebba 0b04 	subs.w	fp, sl, r4
 802189e:	d00b      	beq.n	80218b8 <_vfiprintf_r+0xa4>
 80218a0:	465b      	mov	r3, fp
 80218a2:	4622      	mov	r2, r4
 80218a4:	4629      	mov	r1, r5
 80218a6:	4630      	mov	r0, r6
 80218a8:	f7ff ffa1 	bl	80217ee <__sfputs_r>
 80218ac:	3001      	adds	r0, #1
 80218ae:	f000 80a7 	beq.w	8021a00 <_vfiprintf_r+0x1ec>
 80218b2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80218b4:	445a      	add	r2, fp
 80218b6:	9209      	str	r2, [sp, #36]	@ 0x24
 80218b8:	f89a 3000 	ldrb.w	r3, [sl]
 80218bc:	2b00      	cmp	r3, #0
 80218be:	f000 809f 	beq.w	8021a00 <_vfiprintf_r+0x1ec>
 80218c2:	2300      	movs	r3, #0
 80218c4:	f04f 32ff 	mov.w	r2, #4294967295
 80218c8:	f10a 0a01 	add.w	sl, sl, #1
 80218cc:	9304      	str	r3, [sp, #16]
 80218ce:	9307      	str	r3, [sp, #28]
 80218d0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80218d4:	931a      	str	r3, [sp, #104]	@ 0x68
 80218d6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80218da:	4654      	mov	r4, sl
 80218dc:	2205      	movs	r2, #5
 80218de:	4854      	ldr	r0, [pc, #336]	@ (8021a30 <_vfiprintf_r+0x21c>)
 80218e0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80218e4:	f000 fb80 	bl	8021fe8 <memchr>
 80218e8:	9a04      	ldr	r2, [sp, #16]
 80218ea:	b9d8      	cbnz	r0, 8021924 <_vfiprintf_r+0x110>
 80218ec:	06d1      	lsls	r1, r2, #27
 80218ee:	bf44      	itt	mi
 80218f0:	2320      	movmi	r3, #32
 80218f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80218f6:	0713      	lsls	r3, r2, #28
 80218f8:	bf44      	itt	mi
 80218fa:	232b      	movmi	r3, #43	@ 0x2b
 80218fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8021900:	f89a 3000 	ldrb.w	r3, [sl]
 8021904:	2b2a      	cmp	r3, #42	@ 0x2a
 8021906:	d015      	beq.n	8021934 <_vfiprintf_r+0x120>
 8021908:	9a07      	ldr	r2, [sp, #28]
 802190a:	4654      	mov	r4, sl
 802190c:	2000      	movs	r0, #0
 802190e:	f04f 0c0a 	mov.w	ip, #10
 8021912:	4621      	mov	r1, r4
 8021914:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021918:	3b30      	subs	r3, #48	@ 0x30
 802191a:	2b09      	cmp	r3, #9
 802191c:	d94b      	bls.n	80219b6 <_vfiprintf_r+0x1a2>
 802191e:	b1b0      	cbz	r0, 802194e <_vfiprintf_r+0x13a>
 8021920:	9207      	str	r2, [sp, #28]
 8021922:	e014      	b.n	802194e <_vfiprintf_r+0x13a>
 8021924:	eba0 0308 	sub.w	r3, r0, r8
 8021928:	46a2      	mov	sl, r4
 802192a:	fa09 f303 	lsl.w	r3, r9, r3
 802192e:	4313      	orrs	r3, r2
 8021930:	9304      	str	r3, [sp, #16]
 8021932:	e7d2      	b.n	80218da <_vfiprintf_r+0xc6>
 8021934:	9b03      	ldr	r3, [sp, #12]
 8021936:	1d19      	adds	r1, r3, #4
 8021938:	681b      	ldr	r3, [r3, #0]
 802193a:	2b00      	cmp	r3, #0
 802193c:	9103      	str	r1, [sp, #12]
 802193e:	bfbb      	ittet	lt
 8021940:	425b      	neglt	r3, r3
 8021942:	f042 0202 	orrlt.w	r2, r2, #2
 8021946:	9307      	strge	r3, [sp, #28]
 8021948:	9307      	strlt	r3, [sp, #28]
 802194a:	bfb8      	it	lt
 802194c:	9204      	strlt	r2, [sp, #16]
 802194e:	7823      	ldrb	r3, [r4, #0]
 8021950:	2b2e      	cmp	r3, #46	@ 0x2e
 8021952:	d10a      	bne.n	802196a <_vfiprintf_r+0x156>
 8021954:	7863      	ldrb	r3, [r4, #1]
 8021956:	2b2a      	cmp	r3, #42	@ 0x2a
 8021958:	d132      	bne.n	80219c0 <_vfiprintf_r+0x1ac>
 802195a:	9b03      	ldr	r3, [sp, #12]
 802195c:	3402      	adds	r4, #2
 802195e:	1d1a      	adds	r2, r3, #4
 8021960:	681b      	ldr	r3, [r3, #0]
 8021962:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8021966:	9203      	str	r2, [sp, #12]
 8021968:	9305      	str	r3, [sp, #20]
 802196a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8021a40 <_vfiprintf_r+0x22c>
 802196e:	2203      	movs	r2, #3
 8021970:	7821      	ldrb	r1, [r4, #0]
 8021972:	4650      	mov	r0, sl
 8021974:	f000 fb38 	bl	8021fe8 <memchr>
 8021978:	b138      	cbz	r0, 802198a <_vfiprintf_r+0x176>
 802197a:	eba0 000a 	sub.w	r0, r0, sl
 802197e:	2240      	movs	r2, #64	@ 0x40
 8021980:	9b04      	ldr	r3, [sp, #16]
 8021982:	3401      	adds	r4, #1
 8021984:	4082      	lsls	r2, r0
 8021986:	4313      	orrs	r3, r2
 8021988:	9304      	str	r3, [sp, #16]
 802198a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802198e:	2206      	movs	r2, #6
 8021990:	4828      	ldr	r0, [pc, #160]	@ (8021a34 <_vfiprintf_r+0x220>)
 8021992:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8021996:	f000 fb27 	bl	8021fe8 <memchr>
 802199a:	2800      	cmp	r0, #0
 802199c:	d03f      	beq.n	8021a1e <_vfiprintf_r+0x20a>
 802199e:	4b26      	ldr	r3, [pc, #152]	@ (8021a38 <_vfiprintf_r+0x224>)
 80219a0:	bb1b      	cbnz	r3, 80219ea <_vfiprintf_r+0x1d6>
 80219a2:	9b03      	ldr	r3, [sp, #12]
 80219a4:	3307      	adds	r3, #7
 80219a6:	f023 0307 	bic.w	r3, r3, #7
 80219aa:	3308      	adds	r3, #8
 80219ac:	9303      	str	r3, [sp, #12]
 80219ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80219b0:	443b      	add	r3, r7
 80219b2:	9309      	str	r3, [sp, #36]	@ 0x24
 80219b4:	e76a      	b.n	802188c <_vfiprintf_r+0x78>
 80219b6:	fb0c 3202 	mla	r2, ip, r2, r3
 80219ba:	460c      	mov	r4, r1
 80219bc:	2001      	movs	r0, #1
 80219be:	e7a8      	b.n	8021912 <_vfiprintf_r+0xfe>
 80219c0:	2300      	movs	r3, #0
 80219c2:	3401      	adds	r4, #1
 80219c4:	f04f 0c0a 	mov.w	ip, #10
 80219c8:	4619      	mov	r1, r3
 80219ca:	9305      	str	r3, [sp, #20]
 80219cc:	4620      	mov	r0, r4
 80219ce:	f810 2b01 	ldrb.w	r2, [r0], #1
 80219d2:	3a30      	subs	r2, #48	@ 0x30
 80219d4:	2a09      	cmp	r2, #9
 80219d6:	d903      	bls.n	80219e0 <_vfiprintf_r+0x1cc>
 80219d8:	2b00      	cmp	r3, #0
 80219da:	d0c6      	beq.n	802196a <_vfiprintf_r+0x156>
 80219dc:	9105      	str	r1, [sp, #20]
 80219de:	e7c4      	b.n	802196a <_vfiprintf_r+0x156>
 80219e0:	fb0c 2101 	mla	r1, ip, r1, r2
 80219e4:	4604      	mov	r4, r0
 80219e6:	2301      	movs	r3, #1
 80219e8:	e7f0      	b.n	80219cc <_vfiprintf_r+0x1b8>
 80219ea:	ab03      	add	r3, sp, #12
 80219ec:	462a      	mov	r2, r5
 80219ee:	a904      	add	r1, sp, #16
 80219f0:	4630      	mov	r0, r6
 80219f2:	9300      	str	r3, [sp, #0]
 80219f4:	4b11      	ldr	r3, [pc, #68]	@ (8021a3c <_vfiprintf_r+0x228>)
 80219f6:	f3af 8000 	nop.w
 80219fa:	4607      	mov	r7, r0
 80219fc:	1c78      	adds	r0, r7, #1
 80219fe:	d1d6      	bne.n	80219ae <_vfiprintf_r+0x19a>
 8021a00:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8021a02:	07d9      	lsls	r1, r3, #31
 8021a04:	d405      	bmi.n	8021a12 <_vfiprintf_r+0x1fe>
 8021a06:	89ab      	ldrh	r3, [r5, #12]
 8021a08:	059a      	lsls	r2, r3, #22
 8021a0a:	d402      	bmi.n	8021a12 <_vfiprintf_r+0x1fe>
 8021a0c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8021a0e:	f7ff fe21 	bl	8021654 <__retarget_lock_release_recursive>
 8021a12:	89ab      	ldrh	r3, [r5, #12]
 8021a14:	065b      	lsls	r3, r3, #25
 8021a16:	f53f af1f 	bmi.w	8021858 <_vfiprintf_r+0x44>
 8021a1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8021a1c:	e71e      	b.n	802185c <_vfiprintf_r+0x48>
 8021a1e:	ab03      	add	r3, sp, #12
 8021a20:	462a      	mov	r2, r5
 8021a22:	a904      	add	r1, sp, #16
 8021a24:	4630      	mov	r0, r6
 8021a26:	9300      	str	r3, [sp, #0]
 8021a28:	4b04      	ldr	r3, [pc, #16]	@ (8021a3c <_vfiprintf_r+0x228>)
 8021a2a:	f000 f87d 	bl	8021b28 <_printf_i>
 8021a2e:	e7e4      	b.n	80219fa <_vfiprintf_r+0x1e6>
 8021a30:	080242e8 	.word	0x080242e8
 8021a34:	080242f2 	.word	0x080242f2
 8021a38:	00000000 	.word	0x00000000
 8021a3c:	080217ef 	.word	0x080217ef
 8021a40:	080242ee 	.word	0x080242ee

08021a44 <_printf_common>:
 8021a44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021a48:	4616      	mov	r6, r2
 8021a4a:	4698      	mov	r8, r3
 8021a4c:	688a      	ldr	r2, [r1, #8]
 8021a4e:	4607      	mov	r7, r0
 8021a50:	690b      	ldr	r3, [r1, #16]
 8021a52:	460c      	mov	r4, r1
 8021a54:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8021a58:	4293      	cmp	r3, r2
 8021a5a:	bfb8      	it	lt
 8021a5c:	4613      	movlt	r3, r2
 8021a5e:	6033      	str	r3, [r6, #0]
 8021a60:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8021a64:	b10a      	cbz	r2, 8021a6a <_printf_common+0x26>
 8021a66:	3301      	adds	r3, #1
 8021a68:	6033      	str	r3, [r6, #0]
 8021a6a:	6823      	ldr	r3, [r4, #0]
 8021a6c:	0699      	lsls	r1, r3, #26
 8021a6e:	bf42      	ittt	mi
 8021a70:	6833      	ldrmi	r3, [r6, #0]
 8021a72:	3302      	addmi	r3, #2
 8021a74:	6033      	strmi	r3, [r6, #0]
 8021a76:	6825      	ldr	r5, [r4, #0]
 8021a78:	f015 0506 	ands.w	r5, r5, #6
 8021a7c:	d106      	bne.n	8021a8c <_printf_common+0x48>
 8021a7e:	f104 0a19 	add.w	sl, r4, #25
 8021a82:	68e3      	ldr	r3, [r4, #12]
 8021a84:	6832      	ldr	r2, [r6, #0]
 8021a86:	1a9b      	subs	r3, r3, r2
 8021a88:	42ab      	cmp	r3, r5
 8021a8a:	dc2b      	bgt.n	8021ae4 <_printf_common+0xa0>
 8021a8c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8021a90:	6822      	ldr	r2, [r4, #0]
 8021a92:	3b00      	subs	r3, #0
 8021a94:	bf18      	it	ne
 8021a96:	2301      	movne	r3, #1
 8021a98:	0692      	lsls	r2, r2, #26
 8021a9a:	d430      	bmi.n	8021afe <_printf_common+0xba>
 8021a9c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8021aa0:	4641      	mov	r1, r8
 8021aa2:	4638      	mov	r0, r7
 8021aa4:	47c8      	blx	r9
 8021aa6:	3001      	adds	r0, #1
 8021aa8:	d023      	beq.n	8021af2 <_printf_common+0xae>
 8021aaa:	6823      	ldr	r3, [r4, #0]
 8021aac:	341a      	adds	r4, #26
 8021aae:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 8021ab2:	f003 0306 	and.w	r3, r3, #6
 8021ab6:	2b04      	cmp	r3, #4
 8021ab8:	bf0a      	itet	eq
 8021aba:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 8021abe:	2500      	movne	r5, #0
 8021ac0:	6833      	ldreq	r3, [r6, #0]
 8021ac2:	f04f 0600 	mov.w	r6, #0
 8021ac6:	bf08      	it	eq
 8021ac8:	1aed      	subeq	r5, r5, r3
 8021aca:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8021ace:	bf08      	it	eq
 8021ad0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021ad4:	4293      	cmp	r3, r2
 8021ad6:	bfc4      	itt	gt
 8021ad8:	1a9b      	subgt	r3, r3, r2
 8021ada:	18ed      	addgt	r5, r5, r3
 8021adc:	42b5      	cmp	r5, r6
 8021ade:	d11a      	bne.n	8021b16 <_printf_common+0xd2>
 8021ae0:	2000      	movs	r0, #0
 8021ae2:	e008      	b.n	8021af6 <_printf_common+0xb2>
 8021ae4:	2301      	movs	r3, #1
 8021ae6:	4652      	mov	r2, sl
 8021ae8:	4641      	mov	r1, r8
 8021aea:	4638      	mov	r0, r7
 8021aec:	47c8      	blx	r9
 8021aee:	3001      	adds	r0, #1
 8021af0:	d103      	bne.n	8021afa <_printf_common+0xb6>
 8021af2:	f04f 30ff 	mov.w	r0, #4294967295
 8021af6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021afa:	3501      	adds	r5, #1
 8021afc:	e7c1      	b.n	8021a82 <_printf_common+0x3e>
 8021afe:	18e1      	adds	r1, r4, r3
 8021b00:	1c5a      	adds	r2, r3, #1
 8021b02:	2030      	movs	r0, #48	@ 0x30
 8021b04:	3302      	adds	r3, #2
 8021b06:	4422      	add	r2, r4
 8021b08:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8021b0c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8021b10:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8021b14:	e7c2      	b.n	8021a9c <_printf_common+0x58>
 8021b16:	2301      	movs	r3, #1
 8021b18:	4622      	mov	r2, r4
 8021b1a:	4641      	mov	r1, r8
 8021b1c:	4638      	mov	r0, r7
 8021b1e:	47c8      	blx	r9
 8021b20:	3001      	adds	r0, #1
 8021b22:	d0e6      	beq.n	8021af2 <_printf_common+0xae>
 8021b24:	3601      	adds	r6, #1
 8021b26:	e7d9      	b.n	8021adc <_printf_common+0x98>

08021b28 <_printf_i>:
 8021b28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021b2c:	7e0f      	ldrb	r7, [r1, #24]
 8021b2e:	4691      	mov	r9, r2
 8021b30:	4680      	mov	r8, r0
 8021b32:	460c      	mov	r4, r1
 8021b34:	2f78      	cmp	r7, #120	@ 0x78
 8021b36:	469a      	mov	sl, r3
 8021b38:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8021b3a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8021b3e:	d807      	bhi.n	8021b50 <_printf_i+0x28>
 8021b40:	2f62      	cmp	r7, #98	@ 0x62
 8021b42:	d80a      	bhi.n	8021b5a <_printf_i+0x32>
 8021b44:	2f00      	cmp	r7, #0
 8021b46:	f000 80d2 	beq.w	8021cee <_printf_i+0x1c6>
 8021b4a:	2f58      	cmp	r7, #88	@ 0x58
 8021b4c:	f000 80b9 	beq.w	8021cc2 <_printf_i+0x19a>
 8021b50:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8021b54:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8021b58:	e03a      	b.n	8021bd0 <_printf_i+0xa8>
 8021b5a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8021b5e:	2b15      	cmp	r3, #21
 8021b60:	d8f6      	bhi.n	8021b50 <_printf_i+0x28>
 8021b62:	a101      	add	r1, pc, #4	@ (adr r1, 8021b68 <_printf_i+0x40>)
 8021b64:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021b68:	08021bc1 	.word	0x08021bc1
 8021b6c:	08021bd5 	.word	0x08021bd5
 8021b70:	08021b51 	.word	0x08021b51
 8021b74:	08021b51 	.word	0x08021b51
 8021b78:	08021b51 	.word	0x08021b51
 8021b7c:	08021b51 	.word	0x08021b51
 8021b80:	08021bd5 	.word	0x08021bd5
 8021b84:	08021b51 	.word	0x08021b51
 8021b88:	08021b51 	.word	0x08021b51
 8021b8c:	08021b51 	.word	0x08021b51
 8021b90:	08021b51 	.word	0x08021b51
 8021b94:	08021cd5 	.word	0x08021cd5
 8021b98:	08021bff 	.word	0x08021bff
 8021b9c:	08021c8f 	.word	0x08021c8f
 8021ba0:	08021b51 	.word	0x08021b51
 8021ba4:	08021b51 	.word	0x08021b51
 8021ba8:	08021cf7 	.word	0x08021cf7
 8021bac:	08021b51 	.word	0x08021b51
 8021bb0:	08021bff 	.word	0x08021bff
 8021bb4:	08021b51 	.word	0x08021b51
 8021bb8:	08021b51 	.word	0x08021b51
 8021bbc:	08021c97 	.word	0x08021c97
 8021bc0:	6833      	ldr	r3, [r6, #0]
 8021bc2:	1d1a      	adds	r2, r3, #4
 8021bc4:	681b      	ldr	r3, [r3, #0]
 8021bc6:	6032      	str	r2, [r6, #0]
 8021bc8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8021bcc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8021bd0:	2301      	movs	r3, #1
 8021bd2:	e09d      	b.n	8021d10 <_printf_i+0x1e8>
 8021bd4:	6833      	ldr	r3, [r6, #0]
 8021bd6:	6820      	ldr	r0, [r4, #0]
 8021bd8:	1d19      	adds	r1, r3, #4
 8021bda:	6031      	str	r1, [r6, #0]
 8021bdc:	0606      	lsls	r6, r0, #24
 8021bde:	d501      	bpl.n	8021be4 <_printf_i+0xbc>
 8021be0:	681d      	ldr	r5, [r3, #0]
 8021be2:	e003      	b.n	8021bec <_printf_i+0xc4>
 8021be4:	0645      	lsls	r5, r0, #25
 8021be6:	d5fb      	bpl.n	8021be0 <_printf_i+0xb8>
 8021be8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8021bec:	2d00      	cmp	r5, #0
 8021bee:	da03      	bge.n	8021bf8 <_printf_i+0xd0>
 8021bf0:	232d      	movs	r3, #45	@ 0x2d
 8021bf2:	426d      	negs	r5, r5
 8021bf4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8021bf8:	4859      	ldr	r0, [pc, #356]	@ (8021d60 <_printf_i+0x238>)
 8021bfa:	230a      	movs	r3, #10
 8021bfc:	e011      	b.n	8021c22 <_printf_i+0xfa>
 8021bfe:	6821      	ldr	r1, [r4, #0]
 8021c00:	6833      	ldr	r3, [r6, #0]
 8021c02:	0608      	lsls	r0, r1, #24
 8021c04:	f853 5b04 	ldr.w	r5, [r3], #4
 8021c08:	d402      	bmi.n	8021c10 <_printf_i+0xe8>
 8021c0a:	0649      	lsls	r1, r1, #25
 8021c0c:	bf48      	it	mi
 8021c0e:	b2ad      	uxthmi	r5, r5
 8021c10:	2f6f      	cmp	r7, #111	@ 0x6f
 8021c12:	6033      	str	r3, [r6, #0]
 8021c14:	4852      	ldr	r0, [pc, #328]	@ (8021d60 <_printf_i+0x238>)
 8021c16:	bf14      	ite	ne
 8021c18:	230a      	movne	r3, #10
 8021c1a:	2308      	moveq	r3, #8
 8021c1c:	2100      	movs	r1, #0
 8021c1e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8021c22:	6866      	ldr	r6, [r4, #4]
 8021c24:	2e00      	cmp	r6, #0
 8021c26:	60a6      	str	r6, [r4, #8]
 8021c28:	bfa2      	ittt	ge
 8021c2a:	6821      	ldrge	r1, [r4, #0]
 8021c2c:	f021 0104 	bicge.w	r1, r1, #4
 8021c30:	6021      	strge	r1, [r4, #0]
 8021c32:	b90d      	cbnz	r5, 8021c38 <_printf_i+0x110>
 8021c34:	2e00      	cmp	r6, #0
 8021c36:	d04b      	beq.n	8021cd0 <_printf_i+0x1a8>
 8021c38:	4616      	mov	r6, r2
 8021c3a:	fbb5 f1f3 	udiv	r1, r5, r3
 8021c3e:	fb03 5711 	mls	r7, r3, r1, r5
 8021c42:	5dc7      	ldrb	r7, [r0, r7]
 8021c44:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8021c48:	462f      	mov	r7, r5
 8021c4a:	460d      	mov	r5, r1
 8021c4c:	42bb      	cmp	r3, r7
 8021c4e:	d9f4      	bls.n	8021c3a <_printf_i+0x112>
 8021c50:	2b08      	cmp	r3, #8
 8021c52:	d10b      	bne.n	8021c6c <_printf_i+0x144>
 8021c54:	6823      	ldr	r3, [r4, #0]
 8021c56:	07df      	lsls	r7, r3, #31
 8021c58:	d508      	bpl.n	8021c6c <_printf_i+0x144>
 8021c5a:	6923      	ldr	r3, [r4, #16]
 8021c5c:	6861      	ldr	r1, [r4, #4]
 8021c5e:	4299      	cmp	r1, r3
 8021c60:	bfde      	ittt	le
 8021c62:	2330      	movle	r3, #48	@ 0x30
 8021c64:	f806 3c01 	strble.w	r3, [r6, #-1]
 8021c68:	f106 36ff 	addle.w	r6, r6, #4294967295
 8021c6c:	1b92      	subs	r2, r2, r6
 8021c6e:	6122      	str	r2, [r4, #16]
 8021c70:	464b      	mov	r3, r9
 8021c72:	aa03      	add	r2, sp, #12
 8021c74:	4621      	mov	r1, r4
 8021c76:	4640      	mov	r0, r8
 8021c78:	f8cd a000 	str.w	sl, [sp]
 8021c7c:	f7ff fee2 	bl	8021a44 <_printf_common>
 8021c80:	3001      	adds	r0, #1
 8021c82:	d14a      	bne.n	8021d1a <_printf_i+0x1f2>
 8021c84:	f04f 30ff 	mov.w	r0, #4294967295
 8021c88:	b004      	add	sp, #16
 8021c8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021c8e:	6823      	ldr	r3, [r4, #0]
 8021c90:	f043 0320 	orr.w	r3, r3, #32
 8021c94:	6023      	str	r3, [r4, #0]
 8021c96:	2778      	movs	r7, #120	@ 0x78
 8021c98:	4832      	ldr	r0, [pc, #200]	@ (8021d64 <_printf_i+0x23c>)
 8021c9a:	6823      	ldr	r3, [r4, #0]
 8021c9c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8021ca0:	061f      	lsls	r7, r3, #24
 8021ca2:	6831      	ldr	r1, [r6, #0]
 8021ca4:	f851 5b04 	ldr.w	r5, [r1], #4
 8021ca8:	d402      	bmi.n	8021cb0 <_printf_i+0x188>
 8021caa:	065f      	lsls	r7, r3, #25
 8021cac:	bf48      	it	mi
 8021cae:	b2ad      	uxthmi	r5, r5
 8021cb0:	6031      	str	r1, [r6, #0]
 8021cb2:	07d9      	lsls	r1, r3, #31
 8021cb4:	bf44      	itt	mi
 8021cb6:	f043 0320 	orrmi.w	r3, r3, #32
 8021cba:	6023      	strmi	r3, [r4, #0]
 8021cbc:	b11d      	cbz	r5, 8021cc6 <_printf_i+0x19e>
 8021cbe:	2310      	movs	r3, #16
 8021cc0:	e7ac      	b.n	8021c1c <_printf_i+0xf4>
 8021cc2:	4827      	ldr	r0, [pc, #156]	@ (8021d60 <_printf_i+0x238>)
 8021cc4:	e7e9      	b.n	8021c9a <_printf_i+0x172>
 8021cc6:	6823      	ldr	r3, [r4, #0]
 8021cc8:	f023 0320 	bic.w	r3, r3, #32
 8021ccc:	6023      	str	r3, [r4, #0]
 8021cce:	e7f6      	b.n	8021cbe <_printf_i+0x196>
 8021cd0:	4616      	mov	r6, r2
 8021cd2:	e7bd      	b.n	8021c50 <_printf_i+0x128>
 8021cd4:	6833      	ldr	r3, [r6, #0]
 8021cd6:	6825      	ldr	r5, [r4, #0]
 8021cd8:	1d18      	adds	r0, r3, #4
 8021cda:	6961      	ldr	r1, [r4, #20]
 8021cdc:	6030      	str	r0, [r6, #0]
 8021cde:	062e      	lsls	r6, r5, #24
 8021ce0:	681b      	ldr	r3, [r3, #0]
 8021ce2:	d501      	bpl.n	8021ce8 <_printf_i+0x1c0>
 8021ce4:	6019      	str	r1, [r3, #0]
 8021ce6:	e002      	b.n	8021cee <_printf_i+0x1c6>
 8021ce8:	0668      	lsls	r0, r5, #25
 8021cea:	d5fb      	bpl.n	8021ce4 <_printf_i+0x1bc>
 8021cec:	8019      	strh	r1, [r3, #0]
 8021cee:	2300      	movs	r3, #0
 8021cf0:	4616      	mov	r6, r2
 8021cf2:	6123      	str	r3, [r4, #16]
 8021cf4:	e7bc      	b.n	8021c70 <_printf_i+0x148>
 8021cf6:	6833      	ldr	r3, [r6, #0]
 8021cf8:	2100      	movs	r1, #0
 8021cfa:	1d1a      	adds	r2, r3, #4
 8021cfc:	6032      	str	r2, [r6, #0]
 8021cfe:	681e      	ldr	r6, [r3, #0]
 8021d00:	6862      	ldr	r2, [r4, #4]
 8021d02:	4630      	mov	r0, r6
 8021d04:	f000 f970 	bl	8021fe8 <memchr>
 8021d08:	b108      	cbz	r0, 8021d0e <_printf_i+0x1e6>
 8021d0a:	1b80      	subs	r0, r0, r6
 8021d0c:	6060      	str	r0, [r4, #4]
 8021d0e:	6863      	ldr	r3, [r4, #4]
 8021d10:	6123      	str	r3, [r4, #16]
 8021d12:	2300      	movs	r3, #0
 8021d14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8021d18:	e7aa      	b.n	8021c70 <_printf_i+0x148>
 8021d1a:	6923      	ldr	r3, [r4, #16]
 8021d1c:	4632      	mov	r2, r6
 8021d1e:	4649      	mov	r1, r9
 8021d20:	4640      	mov	r0, r8
 8021d22:	47d0      	blx	sl
 8021d24:	3001      	adds	r0, #1
 8021d26:	d0ad      	beq.n	8021c84 <_printf_i+0x15c>
 8021d28:	6823      	ldr	r3, [r4, #0]
 8021d2a:	079b      	lsls	r3, r3, #30
 8021d2c:	d413      	bmi.n	8021d56 <_printf_i+0x22e>
 8021d2e:	68e0      	ldr	r0, [r4, #12]
 8021d30:	9b03      	ldr	r3, [sp, #12]
 8021d32:	4298      	cmp	r0, r3
 8021d34:	bfb8      	it	lt
 8021d36:	4618      	movlt	r0, r3
 8021d38:	e7a6      	b.n	8021c88 <_printf_i+0x160>
 8021d3a:	2301      	movs	r3, #1
 8021d3c:	4632      	mov	r2, r6
 8021d3e:	4649      	mov	r1, r9
 8021d40:	4640      	mov	r0, r8
 8021d42:	47d0      	blx	sl
 8021d44:	3001      	adds	r0, #1
 8021d46:	d09d      	beq.n	8021c84 <_printf_i+0x15c>
 8021d48:	3501      	adds	r5, #1
 8021d4a:	68e3      	ldr	r3, [r4, #12]
 8021d4c:	9903      	ldr	r1, [sp, #12]
 8021d4e:	1a5b      	subs	r3, r3, r1
 8021d50:	42ab      	cmp	r3, r5
 8021d52:	dcf2      	bgt.n	8021d3a <_printf_i+0x212>
 8021d54:	e7eb      	b.n	8021d2e <_printf_i+0x206>
 8021d56:	2500      	movs	r5, #0
 8021d58:	f104 0619 	add.w	r6, r4, #25
 8021d5c:	e7f5      	b.n	8021d4a <_printf_i+0x222>
 8021d5e:	bf00      	nop
 8021d60:	080242f9 	.word	0x080242f9
 8021d64:	0802430a 	.word	0x0802430a

08021d68 <__sflush_r>:
 8021d68:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8021d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021d70:	0716      	lsls	r6, r2, #28
 8021d72:	4605      	mov	r5, r0
 8021d74:	460c      	mov	r4, r1
 8021d76:	d454      	bmi.n	8021e22 <__sflush_r+0xba>
 8021d78:	684b      	ldr	r3, [r1, #4]
 8021d7a:	2b00      	cmp	r3, #0
 8021d7c:	dc02      	bgt.n	8021d84 <__sflush_r+0x1c>
 8021d7e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8021d80:	2b00      	cmp	r3, #0
 8021d82:	dd48      	ble.n	8021e16 <__sflush_r+0xae>
 8021d84:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021d86:	2e00      	cmp	r6, #0
 8021d88:	d045      	beq.n	8021e16 <__sflush_r+0xae>
 8021d8a:	2300      	movs	r3, #0
 8021d8c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8021d90:	682f      	ldr	r7, [r5, #0]
 8021d92:	6a21      	ldr	r1, [r4, #32]
 8021d94:	602b      	str	r3, [r5, #0]
 8021d96:	d030      	beq.n	8021dfa <__sflush_r+0x92>
 8021d98:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8021d9a:	89a3      	ldrh	r3, [r4, #12]
 8021d9c:	0759      	lsls	r1, r3, #29
 8021d9e:	d505      	bpl.n	8021dac <__sflush_r+0x44>
 8021da0:	6863      	ldr	r3, [r4, #4]
 8021da2:	1ad2      	subs	r2, r2, r3
 8021da4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8021da6:	b10b      	cbz	r3, 8021dac <__sflush_r+0x44>
 8021da8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8021daa:	1ad2      	subs	r2, r2, r3
 8021dac:	2300      	movs	r3, #0
 8021dae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021db0:	6a21      	ldr	r1, [r4, #32]
 8021db2:	4628      	mov	r0, r5
 8021db4:	47b0      	blx	r6
 8021db6:	1c43      	adds	r3, r0, #1
 8021db8:	89a3      	ldrh	r3, [r4, #12]
 8021dba:	d106      	bne.n	8021dca <__sflush_r+0x62>
 8021dbc:	6829      	ldr	r1, [r5, #0]
 8021dbe:	291d      	cmp	r1, #29
 8021dc0:	d82b      	bhi.n	8021e1a <__sflush_r+0xb2>
 8021dc2:	4a2a      	ldr	r2, [pc, #168]	@ (8021e6c <__sflush_r+0x104>)
 8021dc4:	410a      	asrs	r2, r1
 8021dc6:	07d6      	lsls	r6, r2, #31
 8021dc8:	d427      	bmi.n	8021e1a <__sflush_r+0xb2>
 8021dca:	2200      	movs	r2, #0
 8021dcc:	04d9      	lsls	r1, r3, #19
 8021dce:	6062      	str	r2, [r4, #4]
 8021dd0:	6922      	ldr	r2, [r4, #16]
 8021dd2:	6022      	str	r2, [r4, #0]
 8021dd4:	d504      	bpl.n	8021de0 <__sflush_r+0x78>
 8021dd6:	1c42      	adds	r2, r0, #1
 8021dd8:	d101      	bne.n	8021dde <__sflush_r+0x76>
 8021dda:	682b      	ldr	r3, [r5, #0]
 8021ddc:	b903      	cbnz	r3, 8021de0 <__sflush_r+0x78>
 8021dde:	6560      	str	r0, [r4, #84]	@ 0x54
 8021de0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021de2:	602f      	str	r7, [r5, #0]
 8021de4:	b1b9      	cbz	r1, 8021e16 <__sflush_r+0xae>
 8021de6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8021dea:	4299      	cmp	r1, r3
 8021dec:	d002      	beq.n	8021df4 <__sflush_r+0x8c>
 8021dee:	4628      	mov	r0, r5
 8021df0:	f7ff fc9c 	bl	802172c <_free_r>
 8021df4:	2300      	movs	r3, #0
 8021df6:	6363      	str	r3, [r4, #52]	@ 0x34
 8021df8:	e00d      	b.n	8021e16 <__sflush_r+0xae>
 8021dfa:	2301      	movs	r3, #1
 8021dfc:	4628      	mov	r0, r5
 8021dfe:	47b0      	blx	r6
 8021e00:	4602      	mov	r2, r0
 8021e02:	1c50      	adds	r0, r2, #1
 8021e04:	d1c9      	bne.n	8021d9a <__sflush_r+0x32>
 8021e06:	682b      	ldr	r3, [r5, #0]
 8021e08:	2b00      	cmp	r3, #0
 8021e0a:	d0c6      	beq.n	8021d9a <__sflush_r+0x32>
 8021e0c:	2b1d      	cmp	r3, #29
 8021e0e:	d001      	beq.n	8021e14 <__sflush_r+0xac>
 8021e10:	2b16      	cmp	r3, #22
 8021e12:	d11d      	bne.n	8021e50 <__sflush_r+0xe8>
 8021e14:	602f      	str	r7, [r5, #0]
 8021e16:	2000      	movs	r0, #0
 8021e18:	e021      	b.n	8021e5e <__sflush_r+0xf6>
 8021e1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021e1e:	b21b      	sxth	r3, r3
 8021e20:	e01a      	b.n	8021e58 <__sflush_r+0xf0>
 8021e22:	690f      	ldr	r7, [r1, #16]
 8021e24:	2f00      	cmp	r7, #0
 8021e26:	d0f6      	beq.n	8021e16 <__sflush_r+0xae>
 8021e28:	0793      	lsls	r3, r2, #30
 8021e2a:	680e      	ldr	r6, [r1, #0]
 8021e2c:	600f      	str	r7, [r1, #0]
 8021e2e:	bf0c      	ite	eq
 8021e30:	694b      	ldreq	r3, [r1, #20]
 8021e32:	2300      	movne	r3, #0
 8021e34:	eba6 0807 	sub.w	r8, r6, r7
 8021e38:	608b      	str	r3, [r1, #8]
 8021e3a:	f1b8 0f00 	cmp.w	r8, #0
 8021e3e:	ddea      	ble.n	8021e16 <__sflush_r+0xae>
 8021e40:	4643      	mov	r3, r8
 8021e42:	463a      	mov	r2, r7
 8021e44:	6a21      	ldr	r1, [r4, #32]
 8021e46:	4628      	mov	r0, r5
 8021e48:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8021e4a:	47b0      	blx	r6
 8021e4c:	2800      	cmp	r0, #0
 8021e4e:	dc08      	bgt.n	8021e62 <__sflush_r+0xfa>
 8021e50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021e58:	f04f 30ff 	mov.w	r0, #4294967295
 8021e5c:	81a3      	strh	r3, [r4, #12]
 8021e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021e62:	4407      	add	r7, r0
 8021e64:	eba8 0800 	sub.w	r8, r8, r0
 8021e68:	e7e7      	b.n	8021e3a <__sflush_r+0xd2>
 8021e6a:	bf00      	nop
 8021e6c:	dfbffffe 	.word	0xdfbffffe

08021e70 <_fflush_r>:
 8021e70:	b538      	push	{r3, r4, r5, lr}
 8021e72:	690b      	ldr	r3, [r1, #16]
 8021e74:	4605      	mov	r5, r0
 8021e76:	460c      	mov	r4, r1
 8021e78:	b913      	cbnz	r3, 8021e80 <_fflush_r+0x10>
 8021e7a:	2500      	movs	r5, #0
 8021e7c:	4628      	mov	r0, r5
 8021e7e:	bd38      	pop	{r3, r4, r5, pc}
 8021e80:	b118      	cbz	r0, 8021e8a <_fflush_r+0x1a>
 8021e82:	6a03      	ldr	r3, [r0, #32]
 8021e84:	b90b      	cbnz	r3, 8021e8a <_fflush_r+0x1a>
 8021e86:	f7ff fa8b 	bl	80213a0 <__sinit>
 8021e8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e8e:	2b00      	cmp	r3, #0
 8021e90:	d0f3      	beq.n	8021e7a <_fflush_r+0xa>
 8021e92:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8021e94:	07d0      	lsls	r0, r2, #31
 8021e96:	d404      	bmi.n	8021ea2 <_fflush_r+0x32>
 8021e98:	0599      	lsls	r1, r3, #22
 8021e9a:	d402      	bmi.n	8021ea2 <_fflush_r+0x32>
 8021e9c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021e9e:	f7ff fbd8 	bl	8021652 <__retarget_lock_acquire_recursive>
 8021ea2:	4628      	mov	r0, r5
 8021ea4:	4621      	mov	r1, r4
 8021ea6:	f7ff ff5f 	bl	8021d68 <__sflush_r>
 8021eaa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8021eac:	4605      	mov	r5, r0
 8021eae:	07da      	lsls	r2, r3, #31
 8021eb0:	d4e4      	bmi.n	8021e7c <_fflush_r+0xc>
 8021eb2:	89a3      	ldrh	r3, [r4, #12]
 8021eb4:	059b      	lsls	r3, r3, #22
 8021eb6:	d4e1      	bmi.n	8021e7c <_fflush_r+0xc>
 8021eb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021eba:	f7ff fbcb 	bl	8021654 <__retarget_lock_release_recursive>
 8021ebe:	e7dd      	b.n	8021e7c <_fflush_r+0xc>

08021ec0 <__swbuf_r>:
 8021ec0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021ec2:	460e      	mov	r6, r1
 8021ec4:	4614      	mov	r4, r2
 8021ec6:	4605      	mov	r5, r0
 8021ec8:	b118      	cbz	r0, 8021ed2 <__swbuf_r+0x12>
 8021eca:	6a03      	ldr	r3, [r0, #32]
 8021ecc:	b90b      	cbnz	r3, 8021ed2 <__swbuf_r+0x12>
 8021ece:	f7ff fa67 	bl	80213a0 <__sinit>
 8021ed2:	69a3      	ldr	r3, [r4, #24]
 8021ed4:	60a3      	str	r3, [r4, #8]
 8021ed6:	89a3      	ldrh	r3, [r4, #12]
 8021ed8:	071a      	lsls	r2, r3, #28
 8021eda:	d501      	bpl.n	8021ee0 <__swbuf_r+0x20>
 8021edc:	6923      	ldr	r3, [r4, #16]
 8021ede:	b943      	cbnz	r3, 8021ef2 <__swbuf_r+0x32>
 8021ee0:	4621      	mov	r1, r4
 8021ee2:	4628      	mov	r0, r5
 8021ee4:	f000 f82a 	bl	8021f3c <__swsetup_r>
 8021ee8:	b118      	cbz	r0, 8021ef2 <__swbuf_r+0x32>
 8021eea:	f04f 37ff 	mov.w	r7, #4294967295
 8021eee:	4638      	mov	r0, r7
 8021ef0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021ef2:	6823      	ldr	r3, [r4, #0]
 8021ef4:	b2f6      	uxtb	r6, r6
 8021ef6:	6922      	ldr	r2, [r4, #16]
 8021ef8:	4637      	mov	r7, r6
 8021efa:	1a98      	subs	r0, r3, r2
 8021efc:	6963      	ldr	r3, [r4, #20]
 8021efe:	4283      	cmp	r3, r0
 8021f00:	dc05      	bgt.n	8021f0e <__swbuf_r+0x4e>
 8021f02:	4621      	mov	r1, r4
 8021f04:	4628      	mov	r0, r5
 8021f06:	f7ff ffb3 	bl	8021e70 <_fflush_r>
 8021f0a:	2800      	cmp	r0, #0
 8021f0c:	d1ed      	bne.n	8021eea <__swbuf_r+0x2a>
 8021f0e:	68a3      	ldr	r3, [r4, #8]
 8021f10:	3b01      	subs	r3, #1
 8021f12:	60a3      	str	r3, [r4, #8]
 8021f14:	6823      	ldr	r3, [r4, #0]
 8021f16:	1c5a      	adds	r2, r3, #1
 8021f18:	6022      	str	r2, [r4, #0]
 8021f1a:	701e      	strb	r6, [r3, #0]
 8021f1c:	1c43      	adds	r3, r0, #1
 8021f1e:	6962      	ldr	r2, [r4, #20]
 8021f20:	429a      	cmp	r2, r3
 8021f22:	d004      	beq.n	8021f2e <__swbuf_r+0x6e>
 8021f24:	89a3      	ldrh	r3, [r4, #12]
 8021f26:	07db      	lsls	r3, r3, #31
 8021f28:	d5e1      	bpl.n	8021eee <__swbuf_r+0x2e>
 8021f2a:	2e0a      	cmp	r6, #10
 8021f2c:	d1df      	bne.n	8021eee <__swbuf_r+0x2e>
 8021f2e:	4621      	mov	r1, r4
 8021f30:	4628      	mov	r0, r5
 8021f32:	f7ff ff9d 	bl	8021e70 <_fflush_r>
 8021f36:	2800      	cmp	r0, #0
 8021f38:	d0d9      	beq.n	8021eee <__swbuf_r+0x2e>
 8021f3a:	e7d6      	b.n	8021eea <__swbuf_r+0x2a>

08021f3c <__swsetup_r>:
 8021f3c:	b538      	push	{r3, r4, r5, lr}
 8021f3e:	4b29      	ldr	r3, [pc, #164]	@ (8021fe4 <__swsetup_r+0xa8>)
 8021f40:	4605      	mov	r5, r0
 8021f42:	460c      	mov	r4, r1
 8021f44:	6818      	ldr	r0, [r3, #0]
 8021f46:	b118      	cbz	r0, 8021f50 <__swsetup_r+0x14>
 8021f48:	6a03      	ldr	r3, [r0, #32]
 8021f4a:	b90b      	cbnz	r3, 8021f50 <__swsetup_r+0x14>
 8021f4c:	f7ff fa28 	bl	80213a0 <__sinit>
 8021f50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021f54:	0719      	lsls	r1, r3, #28
 8021f56:	d422      	bmi.n	8021f9e <__swsetup_r+0x62>
 8021f58:	06da      	lsls	r2, r3, #27
 8021f5a:	d407      	bmi.n	8021f6c <__swsetup_r+0x30>
 8021f5c:	2209      	movs	r2, #9
 8021f5e:	602a      	str	r2, [r5, #0]
 8021f60:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021f64:	f04f 30ff 	mov.w	r0, #4294967295
 8021f68:	81a3      	strh	r3, [r4, #12]
 8021f6a:	e033      	b.n	8021fd4 <__swsetup_r+0x98>
 8021f6c:	0758      	lsls	r0, r3, #29
 8021f6e:	d512      	bpl.n	8021f96 <__swsetup_r+0x5a>
 8021f70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021f72:	b141      	cbz	r1, 8021f86 <__swsetup_r+0x4a>
 8021f74:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8021f78:	4299      	cmp	r1, r3
 8021f7a:	d002      	beq.n	8021f82 <__swsetup_r+0x46>
 8021f7c:	4628      	mov	r0, r5
 8021f7e:	f7ff fbd5 	bl	802172c <_free_r>
 8021f82:	2300      	movs	r3, #0
 8021f84:	6363      	str	r3, [r4, #52]	@ 0x34
 8021f86:	89a3      	ldrh	r3, [r4, #12]
 8021f88:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8021f8c:	81a3      	strh	r3, [r4, #12]
 8021f8e:	2300      	movs	r3, #0
 8021f90:	6063      	str	r3, [r4, #4]
 8021f92:	6923      	ldr	r3, [r4, #16]
 8021f94:	6023      	str	r3, [r4, #0]
 8021f96:	89a3      	ldrh	r3, [r4, #12]
 8021f98:	f043 0308 	orr.w	r3, r3, #8
 8021f9c:	81a3      	strh	r3, [r4, #12]
 8021f9e:	6923      	ldr	r3, [r4, #16]
 8021fa0:	b94b      	cbnz	r3, 8021fb6 <__swsetup_r+0x7a>
 8021fa2:	89a3      	ldrh	r3, [r4, #12]
 8021fa4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8021fa8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8021fac:	d003      	beq.n	8021fb6 <__swsetup_r+0x7a>
 8021fae:	4621      	mov	r1, r4
 8021fb0:	4628      	mov	r0, r5
 8021fb2:	f000 f84c 	bl	802204e <__smakebuf_r>
 8021fb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021fba:	f013 0201 	ands.w	r2, r3, #1
 8021fbe:	d00a      	beq.n	8021fd6 <__swsetup_r+0x9a>
 8021fc0:	2200      	movs	r2, #0
 8021fc2:	60a2      	str	r2, [r4, #8]
 8021fc4:	6962      	ldr	r2, [r4, #20]
 8021fc6:	4252      	negs	r2, r2
 8021fc8:	61a2      	str	r2, [r4, #24]
 8021fca:	6922      	ldr	r2, [r4, #16]
 8021fcc:	b942      	cbnz	r2, 8021fe0 <__swsetup_r+0xa4>
 8021fce:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021fd2:	d1c5      	bne.n	8021f60 <__swsetup_r+0x24>
 8021fd4:	bd38      	pop	{r3, r4, r5, pc}
 8021fd6:	0799      	lsls	r1, r3, #30
 8021fd8:	bf58      	it	pl
 8021fda:	6962      	ldrpl	r2, [r4, #20]
 8021fdc:	60a2      	str	r2, [r4, #8]
 8021fde:	e7f4      	b.n	8021fca <__swsetup_r+0x8e>
 8021fe0:	2000      	movs	r0, #0
 8021fe2:	e7f7      	b.n	8021fd4 <__swsetup_r+0x98>
 8021fe4:	200000a0 	.word	0x200000a0

08021fe8 <memchr>:
 8021fe8:	b2c9      	uxtb	r1, r1
 8021fea:	4603      	mov	r3, r0
 8021fec:	4402      	add	r2, r0
 8021fee:	b510      	push	{r4, lr}
 8021ff0:	4293      	cmp	r3, r2
 8021ff2:	4618      	mov	r0, r3
 8021ff4:	d101      	bne.n	8021ffa <memchr+0x12>
 8021ff6:	2000      	movs	r0, #0
 8021ff8:	e003      	b.n	8022002 <memchr+0x1a>
 8021ffa:	7804      	ldrb	r4, [r0, #0]
 8021ffc:	3301      	adds	r3, #1
 8021ffe:	428c      	cmp	r4, r1
 8022000:	d1f6      	bne.n	8021ff0 <memchr+0x8>
 8022002:	bd10      	pop	{r4, pc}

08022004 <__swhatbuf_r>:
 8022004:	b570      	push	{r4, r5, r6, lr}
 8022006:	460c      	mov	r4, r1
 8022008:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802200c:	b096      	sub	sp, #88	@ 0x58
 802200e:	4615      	mov	r5, r2
 8022010:	2900      	cmp	r1, #0
 8022012:	461e      	mov	r6, r3
 8022014:	da0c      	bge.n	8022030 <__swhatbuf_r+0x2c>
 8022016:	89a3      	ldrh	r3, [r4, #12]
 8022018:	2100      	movs	r1, #0
 802201a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802201e:	bf14      	ite	ne
 8022020:	2340      	movne	r3, #64	@ 0x40
 8022022:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8022026:	2000      	movs	r0, #0
 8022028:	6031      	str	r1, [r6, #0]
 802202a:	602b      	str	r3, [r5, #0]
 802202c:	b016      	add	sp, #88	@ 0x58
 802202e:	bd70      	pop	{r4, r5, r6, pc}
 8022030:	466a      	mov	r2, sp
 8022032:	f000 f849 	bl	80220c8 <_fstat_r>
 8022036:	2800      	cmp	r0, #0
 8022038:	dbed      	blt.n	8022016 <__swhatbuf_r+0x12>
 802203a:	9901      	ldr	r1, [sp, #4]
 802203c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8022040:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8022044:	4259      	negs	r1, r3
 8022046:	4159      	adcs	r1, r3
 8022048:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802204c:	e7eb      	b.n	8022026 <__swhatbuf_r+0x22>

0802204e <__smakebuf_r>:
 802204e:	898b      	ldrh	r3, [r1, #12]
 8022050:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022052:	079d      	lsls	r5, r3, #30
 8022054:	4606      	mov	r6, r0
 8022056:	460c      	mov	r4, r1
 8022058:	d507      	bpl.n	802206a <__smakebuf_r+0x1c>
 802205a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 802205e:	6023      	str	r3, [r4, #0]
 8022060:	6123      	str	r3, [r4, #16]
 8022062:	2301      	movs	r3, #1
 8022064:	6163      	str	r3, [r4, #20]
 8022066:	b003      	add	sp, #12
 8022068:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802206a:	ab01      	add	r3, sp, #4
 802206c:	466a      	mov	r2, sp
 802206e:	f7ff ffc9 	bl	8022004 <__swhatbuf_r>
 8022072:	9f00      	ldr	r7, [sp, #0]
 8022074:	4605      	mov	r5, r0
 8022076:	4630      	mov	r0, r6
 8022078:	4639      	mov	r1, r7
 802207a:	f7ff f86b 	bl	8021154 <_malloc_r>
 802207e:	b948      	cbnz	r0, 8022094 <__smakebuf_r+0x46>
 8022080:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022084:	059a      	lsls	r2, r3, #22
 8022086:	d4ee      	bmi.n	8022066 <__smakebuf_r+0x18>
 8022088:	f023 0303 	bic.w	r3, r3, #3
 802208c:	f043 0302 	orr.w	r3, r3, #2
 8022090:	81a3      	strh	r3, [r4, #12]
 8022092:	e7e2      	b.n	802205a <__smakebuf_r+0xc>
 8022094:	89a3      	ldrh	r3, [r4, #12]
 8022096:	6020      	str	r0, [r4, #0]
 8022098:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802209c:	81a3      	strh	r3, [r4, #12]
 802209e:	9b01      	ldr	r3, [sp, #4]
 80220a0:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80220a4:	b15b      	cbz	r3, 80220be <__smakebuf_r+0x70>
 80220a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80220aa:	4630      	mov	r0, r6
 80220ac:	f000 f81e 	bl	80220ec <_isatty_r>
 80220b0:	b128      	cbz	r0, 80220be <__smakebuf_r+0x70>
 80220b2:	89a3      	ldrh	r3, [r4, #12]
 80220b4:	f023 0303 	bic.w	r3, r3, #3
 80220b8:	f043 0301 	orr.w	r3, r3, #1
 80220bc:	81a3      	strh	r3, [r4, #12]
 80220be:	89a3      	ldrh	r3, [r4, #12]
 80220c0:	431d      	orrs	r5, r3
 80220c2:	81a5      	strh	r5, [r4, #12]
 80220c4:	e7cf      	b.n	8022066 <__smakebuf_r+0x18>
	...

080220c8 <_fstat_r>:
 80220c8:	b538      	push	{r3, r4, r5, lr}
 80220ca:	2300      	movs	r3, #0
 80220cc:	4d06      	ldr	r5, [pc, #24]	@ (80220e8 <_fstat_r+0x20>)
 80220ce:	4604      	mov	r4, r0
 80220d0:	4608      	mov	r0, r1
 80220d2:	4611      	mov	r1, r2
 80220d4:	602b      	str	r3, [r5, #0]
 80220d6:	f7de ffdf 	bl	8001098 <_fstat>
 80220da:	1c43      	adds	r3, r0, #1
 80220dc:	d102      	bne.n	80220e4 <_fstat_r+0x1c>
 80220de:	682b      	ldr	r3, [r5, #0]
 80220e0:	b103      	cbz	r3, 80220e4 <_fstat_r+0x1c>
 80220e2:	6023      	str	r3, [r4, #0]
 80220e4:	bd38      	pop	{r3, r4, r5, pc}
 80220e6:	bf00      	nop
 80220e8:	20002dc8 	.word	0x20002dc8

080220ec <_isatty_r>:
 80220ec:	b538      	push	{r3, r4, r5, lr}
 80220ee:	2300      	movs	r3, #0
 80220f0:	4d05      	ldr	r5, [pc, #20]	@ (8022108 <_isatty_r+0x1c>)
 80220f2:	4604      	mov	r4, r0
 80220f4:	4608      	mov	r0, r1
 80220f6:	602b      	str	r3, [r5, #0]
 80220f8:	f7de ffde 	bl	80010b8 <_isatty>
 80220fc:	1c43      	adds	r3, r0, #1
 80220fe:	d102      	bne.n	8022106 <_isatty_r+0x1a>
 8022100:	682b      	ldr	r3, [r5, #0]
 8022102:	b103      	cbz	r3, 8022106 <_isatty_r+0x1a>
 8022104:	6023      	str	r3, [r4, #0]
 8022106:	bd38      	pop	{r3, r4, r5, pc}
 8022108:	20002dc8 	.word	0x20002dc8

0802210c <_init>:
 802210c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802210e:	bf00      	nop
 8022110:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022112:	bc08      	pop	{r3}
 8022114:	469e      	mov	lr, r3
 8022116:	4770      	bx	lr

08022118 <_fini>:
 8022118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802211a:	bf00      	nop
 802211c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802211e:	bc08      	pop	{r3}
 8022120:	469e      	mov	lr, r3
 8022122:	4770      	bx	lr
