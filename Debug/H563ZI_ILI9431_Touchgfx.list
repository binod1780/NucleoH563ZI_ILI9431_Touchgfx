
H563ZI_ILI9431_Touchgfx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000024c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002290c  0800024c  0800024c  0000124c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000024e8  08022b58  08022b58  00023b58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000038da  08025040  08025040  00026040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802891c  0802891c  0002991c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000024  08028934  08028934  00029934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08028958  08028958  0002a300  2**0
                  CONTENTS
  7 .ARM          00000000  08028958  08028958  0002a300  2**0
                  CONTENTS
  8 .preinit_array 00000000  08028958  08028958  0002a300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000018  08028958  08028958  00029958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .fini_array   0000000c  08028970  08028970  00029970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .data         000000f4  20000000  0802897c  0002a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000100  08028a70  0002a100  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000200  08028b70  0002a200  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00002c68  20000300  08028c70  0002a300  2**2
                  ALLOC
 15 ._user_heap_stack 00000600  20002f68  08028c70  0002af68  2**0
                  ALLOC
 16 .ARM.attributes 00000036  00000000  00000000  0002a300  2**0
                  CONTENTS, READONLY
 17 .debug_info   000905f1  00000000  00000000  0002a336  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00010760  00000000  00000000  000ba927  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002e20  00000000  00000000  000cb088  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 0000223b  00000000  00000000  000cdea8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  0003bfac  00000000  00000000  000d00e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   0003874a  00000000  00000000  0010c08f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0015d71d  00000000  00000000  001447d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000c2  00000000  00000000  002a1ef6  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000cc58  00000000  00000000  002a1fb8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 0000007e  00000000  00000000  002aec10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800024c <__do_global_dtors_aux>:
 800024c:	b510      	push	{r4, lr}
 800024e:	4c05      	ldr	r4, [pc, #20]	@ (8000264 <__do_global_dtors_aux+0x18>)
 8000250:	7823      	ldrb	r3, [r4, #0]
 8000252:	b933      	cbnz	r3, 8000262 <__do_global_dtors_aux+0x16>
 8000254:	4b04      	ldr	r3, [pc, #16]	@ (8000268 <__do_global_dtors_aux+0x1c>)
 8000256:	b113      	cbz	r3, 800025e <__do_global_dtors_aux+0x12>
 8000258:	4804      	ldr	r0, [pc, #16]	@ (800026c <__do_global_dtors_aux+0x20>)
 800025a:	f3af 8000 	nop.w
 800025e:	2301      	movs	r3, #1
 8000260:	7023      	strb	r3, [r4, #0]
 8000262:	bd10      	pop	{r4, pc}
 8000264:	20000300 	.word	0x20000300
 8000268:	00000000 	.word	0x00000000
 800026c:	08022b40 	.word	0x08022b40

08000270 <frame_dummy>:
 8000270:	b508      	push	{r3, lr}
 8000272:	4b03      	ldr	r3, [pc, #12]	@ (8000280 <frame_dummy+0x10>)
 8000274:	b11b      	cbz	r3, 800027e <frame_dummy+0xe>
 8000276:	4903      	ldr	r1, [pc, #12]	@ (8000284 <frame_dummy+0x14>)
 8000278:	4803      	ldr	r0, [pc, #12]	@ (8000288 <frame_dummy+0x18>)
 800027a:	f3af 8000 	nop.w
 800027e:	bd08      	pop	{r3, pc}
 8000280:	00000000 	.word	0x00000000
 8000284:	20000304 	.word	0x20000304
 8000288:	08022b40 	.word	0x08022b40

0800028c <ILI9341_Init>:
static void DC_H(void);
static void LED_H(void);

// Initialization
void ILI9341_Init(void)
{
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
	ILI9341_Reset();
 8000290:	f000 f99d 	bl	80005ce <ILI9341_Reset>
	ILI9341_SoftReset();
 8000294:	f000 f9ae 	bl	80005f4 <ILI9341_SoftReset>

	/* Power Control A */
	LCD_WR_REG(0xCB);
 8000298:	20cb      	movs	r0, #203	@ 0xcb
 800029a:	f000 f9c5 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x39);
 800029e:	2039      	movs	r0, #57	@ 0x39
 80002a0:	f000 f9dc 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x2C);
 80002a4:	202c      	movs	r0, #44	@ 0x2c
 80002a6:	f000 f9d9 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002aa:	2000      	movs	r0, #0
 80002ac:	f000 f9d6 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x34);
 80002b0:	2034      	movs	r0, #52	@ 0x34
 80002b2:	f000 f9d3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x02);
 80002b6:	2002      	movs	r0, #2
 80002b8:	f000 f9d0 	bl	800065c <LCD_WR_DATA>
	/* Power Control B */
	LCD_WR_REG(0xCF);
 80002bc:	20cf      	movs	r0, #207	@ 0xcf
 80002be:	f000 f9b3 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80002c2:	2000      	movs	r0, #0
 80002c4:	f000 f9ca 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 80002c8:	20c1      	movs	r0, #193	@ 0xc1
 80002ca:	f000 f9c7 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x30);
 80002ce:	2030      	movs	r0, #48	@ 0x30
 80002d0:	f000 f9c4 	bl	800065c <LCD_WR_DATA>
	/* Driver timing control A */
	LCD_WR_REG(0xE8);
 80002d4:	20e8      	movs	r0, #232	@ 0xe8
 80002d6:	f000 f9a7 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x85);
 80002da:	2085      	movs	r0, #133	@ 0x85
 80002dc:	f000 f9be 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002e0:	2000      	movs	r0, #0
 80002e2:	f000 f9bb 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x78);
 80002e6:	2078      	movs	r0, #120	@ 0x78
 80002e8:	f000 f9b8 	bl	800065c <LCD_WR_DATA>
	/* Driver timing control B */
	LCD_WR_REG(0xEA);
 80002ec:	20ea      	movs	r0, #234	@ 0xea
 80002ee:	f000 f99b 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80002f2:	2000      	movs	r0, #0
 80002f4:	f000 f9b2 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 80002f8:	2000      	movs	r0, #0
 80002fa:	f000 f9af 	bl	800065c <LCD_WR_DATA>
	/* Power on Sequence control */
	LCD_WR_REG(0xED);
 80002fe:	20ed      	movs	r0, #237	@ 0xed
 8000300:	f000 f992 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x64);
 8000304:	2064      	movs	r0, #100	@ 0x64
 8000306:	f000 f9a9 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 800030a:	2003      	movs	r0, #3
 800030c:	f000 f9a6 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x12);
 8000310:	2012      	movs	r0, #18
 8000312:	f000 f9a3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x81);
 8000316:	2081      	movs	r0, #129	@ 0x81
 8000318:	f000 f9a0 	bl	800065c <LCD_WR_DATA>
	/* Pump ratio control */
	LCD_WR_REG(0xF7);
 800031c:	20f7      	movs	r0, #247	@ 0xf7
 800031e:	f000 f983 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x20);
 8000322:	2020      	movs	r0, #32
 8000324:	f000 f99a 	bl	800065c <LCD_WR_DATA>
	/* Power Control 1 */
	LCD_WR_REG(0xC0);
 8000328:	20c0      	movs	r0, #192	@ 0xc0
 800032a:	f000 f97d 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800032e:	2010      	movs	r0, #16
 8000330:	f000 f994 	bl	800065c <LCD_WR_DATA>
	/* Power Control 2 */
	LCD_WR_REG(0xC1);
 8000334:	20c1      	movs	r0, #193	@ 0xc1
 8000336:	f000 f977 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x10);
 800033a:	2010      	movs	r0, #16
 800033c:	f000 f98e 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 1 */
	LCD_WR_REG(0xC5);
 8000340:	20c5      	movs	r0, #197	@ 0xc5
 8000342:	f000 f971 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x3E);
 8000346:	203e      	movs	r0, #62	@ 0x3e
 8000348:	f000 f988 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x28);
 800034c:	2028      	movs	r0, #40	@ 0x28
 800034e:	f000 f985 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0xC7);
 8000352:	20c7      	movs	r0, #199	@ 0xc7
 8000354:	f000 f968 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x86);
 8000358:	2086      	movs	r0, #134	@ 0x86
 800035a:	f000 f97f 	bl	800065c <LCD_WR_DATA>
	/* VCOM Control 2 */
	LCD_WR_REG(0x36);
 800035e:	2036      	movs	r0, #54	@ 0x36
 8000360:	f000 f962 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x48);
 8000364:	2048      	movs	r0, #72	@ 0x48
 8000366:	f000 f979 	bl	800065c <LCD_WR_DATA>
	/* Pixel Format Set */
	LCD_WR_REG(0x3A);
 800036a:	203a      	movs	r0, #58	@ 0x3a
 800036c:	f000 f95c 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x55);    //16bit
 8000370:	2055      	movs	r0, #85	@ 0x55
 8000372:	f000 f973 	bl	800065c <LCD_WR_DATA>
	LCD_WR_REG(0xB1);
 8000376:	20b1      	movs	r0, #177	@ 0xb1
 8000378:	f000 f956 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800037c:	2000      	movs	r0, #0
 800037e:	f000 f96d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x18);
 8000382:	2018      	movs	r0, #24
 8000384:	f000 f96a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x01);
	LCD_WR_DATA(0x00);
	LCD_WR_DATA(0x20); // Little Endian
#endif
	/* Display Function Control */
	LCD_WR_REG(0xB6);
 8000388:	20b6      	movs	r0, #182	@ 0xb6
 800038a:	f000 f94d 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x08);
 800038e:	2008      	movs	r0, #8
 8000390:	f000 f964 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x82);
 8000394:	2082      	movs	r0, #130	@ 0x82
 8000396:	f000 f961 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x27);
 800039a:	2027      	movs	r0, #39	@ 0x27
 800039c:	f000 f95e 	bl	800065c <LCD_WR_DATA>
	/* 3GAMMA FUNCTION DISABLE */
	LCD_WR_REG(0xF2);
 80003a0:	20f2      	movs	r0, #242	@ 0xf2
 80003a2:	f000 f941 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 80003a6:	2000      	movs	r0, #0
 80003a8:	f000 f958 	bl	800065c <LCD_WR_DATA>
	/* GAMMA CURVE SELECTED */
	LCD_WR_REG(0x26); //Gamma set
 80003ac:	2026      	movs	r0, #38	@ 0x26
 80003ae:	f000 f93b 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x01); 	//Gamma Curve (G2.2)
 80003b2:	2001      	movs	r0, #1
 80003b4:	f000 f952 	bl	800065c <LCD_WR_DATA>
	//Positive Gamma  Correction
	LCD_WR_REG(0xE0);
 80003b8:	20e0      	movs	r0, #224	@ 0xe0
 80003ba:	f000 f935 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x0F);
 80003be:	200f      	movs	r0, #15
 80003c0:	f000 f94c 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 80003c4:	2031      	movs	r0, #49	@ 0x31
 80003c6:	f000 f949 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x2B);
 80003ca:	202b      	movs	r0, #43	@ 0x2b
 80003cc:	f000 f946 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 80003d0:	200c      	movs	r0, #12
 80003d2:	f000 f943 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 80003d6:	200e      	movs	r0, #14
 80003d8:	f000 f940 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 80003dc:	2008      	movs	r0, #8
 80003de:	f000 f93d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x4E);
 80003e2:	204e      	movs	r0, #78	@ 0x4e
 80003e4:	f000 f93a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xF1);
 80003e8:	20f1      	movs	r0, #241	@ 0xf1
 80003ea:	f000 f937 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x37);
 80003ee:	2037      	movs	r0, #55	@ 0x37
 80003f0:	f000 f934 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 80003f4:	2007      	movs	r0, #7
 80003f6:	f000 f931 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x10);
 80003fa:	2010      	movs	r0, #16
 80003fc:	f000 f92e 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000400:	2003      	movs	r0, #3
 8000402:	f000 f92b 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000406:	200e      	movs	r0, #14
 8000408:	f000 f928 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x09);
 800040c:	2009      	movs	r0, #9
 800040e:	f000 f925 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x00);
 8000412:	2000      	movs	r0, #0
 8000414:	f000 f922 	bl	800065c <LCD_WR_DATA>
	//Negative Gamma  Correction
	LCD_WR_REG(0xE1);
 8000418:	20e1      	movs	r0, #225	@ 0xe1
 800041a:	f000 f905 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x00);
 800041e:	2000      	movs	r0, #0
 8000420:	f000 f91c 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0E);
 8000424:	200e      	movs	r0, #14
 8000426:	f000 f919 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x14);
 800042a:	2014      	movs	r0, #20
 800042c:	f000 f916 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x03);
 8000430:	2003      	movs	r0, #3
 8000432:	f000 f913 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x11);
 8000436:	2011      	movs	r0, #17
 8000438:	f000 f910 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x07);
 800043c:	2007      	movs	r0, #7
 800043e:	f000 f90d 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000442:	2031      	movs	r0, #49	@ 0x31
 8000444:	f000 f90a 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xC1);
 8000448:	20c1      	movs	r0, #193	@ 0xc1
 800044a:	f000 f907 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x48);
 800044e:	2048      	movs	r0, #72	@ 0x48
 8000450:	f000 f904 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x08);
 8000454:	2008      	movs	r0, #8
 8000456:	f000 f901 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 800045a:	200f      	movs	r0, #15
 800045c:	f000 f8fe 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0C);
 8000460:	200c      	movs	r0, #12
 8000462:	f000 f8fb 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x31);
 8000466:	2031      	movs	r0, #49	@ 0x31
 8000468:	f000 f8f8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x36);
 800046c:	2036      	movs	r0, #54	@ 0x36
 800046e:	f000 f8f5 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0x0F);
 8000472:	200f      	movs	r0, #15
 8000474:	f000 f8f2 	bl	800065c <LCD_WR_DATA>
	//EXIT SLEEP
	LCD_WR_REG(0x11);
 8000478:	2011      	movs	r0, #17
 800047a:	f000 f8d5 	bl	8000628 <LCD_WR_REG>

	HAL_Delay(120);
 800047e:	2078      	movs	r0, #120	@ 0x78
 8000480:	f000 ff74 	bl	800136c <HAL_Delay>

	//TURN ON DISPLAY
	LCD_WR_REG(0x29);
 8000484:	2029      	movs	r0, #41	@ 0x29
 8000486:	f000 f8cf 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(0x2C);
 800048a:	202c      	movs	r0, #44	@ 0x2c
 800048c:	f000 f8e6 	bl	800065c <LCD_WR_DATA>

	LCD_direction(ROTATE_270);
 8000490:	2003      	movs	r0, #3
 8000492:	f000 f8fd 	bl	8000690 <LCD_direction>

}
 8000496:	bf00      	nop
 8000498:	bd80      	pop	{r7, pc}

0800049a <ILI9341_SetWindow>:

void ILI9341_SetWindow(uint16_t start_x, uint16_t start_y, uint16_t end_x, uint16_t end_y)
{
 800049a:	b590      	push	{r4, r7, lr}
 800049c:	b083      	sub	sp, #12
 800049e:	af00      	add	r7, sp, #0
 80004a0:	4604      	mov	r4, r0
 80004a2:	4608      	mov	r0, r1
 80004a4:	4611      	mov	r1, r2
 80004a6:	461a      	mov	r2, r3
 80004a8:	4623      	mov	r3, r4
 80004aa:	80fb      	strh	r3, [r7, #6]
 80004ac:	4603      	mov	r3, r0
 80004ae:	80bb      	strh	r3, [r7, #4]
 80004b0:	460b      	mov	r3, r1
 80004b2:	807b      	strh	r3, [r7, #2]
 80004b4:	4613      	mov	r3, r2
 80004b6:	803b      	strh	r3, [r7, #0]
	// Set Window
	LCD_WR_REG(0x2a);
 80004b8:	202a      	movs	r0, #42	@ 0x2a
 80004ba:	f000 f8b5 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(start_x >> 8);
 80004be:	88fb      	ldrh	r3, [r7, #6]
 80004c0:	0a1b      	lsrs	r3, r3, #8
 80004c2:	b29b      	uxth	r3, r3
 80004c4:	b2db      	uxtb	r3, r3
 80004c6:	4618      	mov	r0, r3
 80004c8:	f000 f8c8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_x);
 80004cc:	88fb      	ldrh	r3, [r7, #6]
 80004ce:	b2db      	uxtb	r3, r3
 80004d0:	4618      	mov	r0, r3
 80004d2:	f000 f8c3 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(end_x >> 8);
 80004d6:	887b      	ldrh	r3, [r7, #2]
 80004d8:	0a1b      	lsrs	r3, r3, #8
 80004da:	b29b      	uxth	r3, r3
 80004dc:	b2db      	uxtb	r3, r3
 80004de:	4618      	mov	r0, r3
 80004e0:	f000 f8bc 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_x);
 80004e4:	887b      	ldrh	r3, [r7, #2]
 80004e6:	b2db      	uxtb	r3, r3
 80004e8:	4618      	mov	r0, r3
 80004ea:	f000 f8b7 	bl	800065c <LCD_WR_DATA>

	LCD_WR_REG(0x2b);
 80004ee:	202b      	movs	r0, #43	@ 0x2b
 80004f0:	f000 f89a 	bl	8000628 <LCD_WR_REG>
	LCD_WR_DATA(start_y >> 8);
 80004f4:	88bb      	ldrh	r3, [r7, #4]
 80004f6:	0a1b      	lsrs	r3, r3, #8
 80004f8:	b29b      	uxth	r3, r3
 80004fa:	b2db      	uxtb	r3, r3
 80004fc:	4618      	mov	r0, r3
 80004fe:	f000 f8ad 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & start_y);
 8000502:	88bb      	ldrh	r3, [r7, #4]
 8000504:	b2db      	uxtb	r3, r3
 8000506:	4618      	mov	r0, r3
 8000508:	f000 f8a8 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(end_y >> 8);
 800050c:	883b      	ldrh	r3, [r7, #0]
 800050e:	0a1b      	lsrs	r3, r3, #8
 8000510:	b29b      	uxth	r3, r3
 8000512:	b2db      	uxtb	r3, r3
 8000514:	4618      	mov	r0, r3
 8000516:	f000 f8a1 	bl	800065c <LCD_WR_DATA>
	LCD_WR_DATA(0xFF & end_y);
 800051a:	883b      	ldrh	r3, [r7, #0]
 800051c:	b2db      	uxtb	r3, r3
 800051e:	4618      	mov	r0, r3
 8000520:	f000 f89c 	bl	800065c <LCD_WR_DATA>

}
 8000524:	bf00      	nop
 8000526:	370c      	adds	r7, #12
 8000528:	46bd      	mov	sp, r7
 800052a:	bd90      	pop	{r4, r7, pc}

0800052c <ConvHL>:
		Error_Handler();
	}
}

static void ConvHL(uint8_t *s, int32_t l)
{
 800052c:	b480      	push	{r7}
 800052e:	b085      	sub	sp, #20
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
 8000534:	6039      	str	r1, [r7, #0]
	uint8_t v;
	while (l > 0) {
 8000536:	e010      	b.n	800055a <ConvHL+0x2e>
		v = *(s+1);
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	785b      	ldrb	r3, [r3, #1]
 800053c:	73fb      	strb	r3, [r7, #15]
		*(s+1) = *s;
 800053e:	687b      	ldr	r3, [r7, #4]
 8000540:	3301      	adds	r3, #1
 8000542:	687a      	ldr	r2, [r7, #4]
 8000544:	7812      	ldrb	r2, [r2, #0]
 8000546:	701a      	strb	r2, [r3, #0]
		*s = v;
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	7bfa      	ldrb	r2, [r7, #15]
 800054c:	701a      	strb	r2, [r3, #0]
		s += 2;
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	3302      	adds	r3, #2
 8000552:	607b      	str	r3, [r7, #4]
		l -= 2;
 8000554:	683b      	ldr	r3, [r7, #0]
 8000556:	3b02      	subs	r3, #2
 8000558:	603b      	str	r3, [r7, #0]
	while (l > 0) {
 800055a:	683b      	ldr	r3, [r7, #0]
 800055c:	2b00      	cmp	r3, #0
 800055e:	dceb      	bgt.n	8000538 <ConvHL+0xc>
	}
}
 8000560:	bf00      	nop
 8000562:	bf00      	nop
 8000564:	3714      	adds	r7, #20
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
	...

08000570 <ILI9341_DrawBitmap>:

// Call this function after ILI9341_SetWindow
// This function is non blocked
// The variable for Callback is open. User should set by himself
void ILI9341_DrawBitmap(uint16_t w, uint16_t h, uint8_t *s)
{
 8000570:	b580      	push	{r7, lr}
 8000572:	b082      	sub	sp, #8
 8000574:	af00      	add	r7, sp, #0
 8000576:	4603      	mov	r3, r0
 8000578:	603a      	str	r2, [r7, #0]
 800057a:	80fb      	strh	r3, [r7, #6]
 800057c:	460b      	mov	r3, r1
 800057e:	80bb      	strh	r3, [r7, #4]
	// Enable to access GRAM
	LCD_WR_REG(0x2c);
 8000580:	202c      	movs	r0, #44	@ 0x2c
 8000582:	f000 f851 	bl	8000628 <LCD_WR_REG>

	DC_H();
 8000586:	f000 f8e7 	bl	8000758 <DC_H>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 |= SPI_DATASIZE_16BIT; // Set 16 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
	ConvHL(s, (int32_t)w*h*2);
 800058a:	88fb      	ldrh	r3, [r7, #6]
 800058c:	88ba      	ldrh	r2, [r7, #4]
 800058e:	fb02 f303 	mul.w	r3, r2, r3
 8000592:	005b      	lsls	r3, r3, #1
 8000594:	4619      	mov	r1, r3
 8000596:	6838      	ldr	r0, [r7, #0]
 8000598:	f7ff ffc8 	bl	800052c <ConvHL>
	HAL_SPI_Transmit_DMA(&hspi1, (uint8_t*)s, w * h *2);
 800059c:	88fa      	ldrh	r2, [r7, #6]
 800059e:	88bb      	ldrh	r3, [r7, #4]
 80005a0:	fb12 f303 	smulbb	r3, r2, r3
 80005a4:	b29b      	uxth	r3, r3
 80005a6:	005b      	lsls	r3, r3, #1
 80005a8:	b29b      	uxth	r3, r3
 80005aa:	461a      	mov	r2, r3
 80005ac:	6839      	ldr	r1, [r7, #0]
 80005ae:	4803      	ldr	r0, [pc, #12]	@ (80005bc <ILI9341_DrawBitmap+0x4c>)
 80005b0:	f005 fd86 	bl	80060c0 <HAL_SPI_Transmit_DMA>
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 80005b4:	bf00      	nop
 80005b6:	3708      	adds	r7, #8
 80005b8:	46bd      	mov	sp, r7
 80005ba:	bd80      	pop	{r7, pc}
 80005bc:	20000340 	.word	0x20000340

080005c0 <ILI9341_EndOfDrawBitmap>:

// User should call it at callback
void ILI9341_EndOfDrawBitmap(void)
{
 80005c0:	b480      	push	{r7}
 80005c2:	af00      	add	r7, sp, #0
#if 0
	__HAL_SPI_DISABLE(&hspi1);
	hspi1.Instance->CR2 &= ~(SPI_DATASIZE_16BIT); // Set 8 bit mode
	__HAL_SPI_ENABLE(&hspi1);
#endif
}
 80005c4:	bf00      	nop
 80005c6:	46bd      	mov	sp, r7
 80005c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005cc:	4770      	bx	lr

080005ce <ILI9341_Reset>:

void ILI9341_Reset(void)
{
 80005ce:	b580      	push	{r7, lr}
 80005d0:	af00      	add	r7, sp, #0
	RESET_L();
 80005d2:	f000 f891 	bl	80006f8 <RESET_L>
	HAL_Delay(100);
 80005d6:	2064      	movs	r0, #100	@ 0x64
 80005d8:	f000 fec8 	bl	800136c <HAL_Delay>
	RESET_H();
 80005dc:	f000 f898 	bl	8000710 <RESET_H>
	HAL_Delay(100);
 80005e0:	2064      	movs	r0, #100	@ 0x64
 80005e2:	f000 fec3 	bl	800136c <HAL_Delay>
	CS_L();
 80005e6:	f000 f89f 	bl	8000728 <CS_L>
	LED_H();
 80005ea:	f000 f8c1 	bl	8000770 <LED_H>
}
 80005ee:	bf00      	nop
 80005f0:	bd80      	pop	{r7, pc}
	...

080005f4 <ILI9341_SoftReset>:

void ILI9341_SoftReset(void)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b082      	sub	sp, #8
 80005f8:	af00      	add	r7, sp, #0
	uint8_t cmd;
	cmd = 0x01; //Software reset
 80005fa:	2301      	movs	r3, #1
 80005fc:	71fb      	strb	r3, [r7, #7]
	DC_L();
 80005fe:	f000 f89f 	bl	8000740 <DC_L>
	if (HAL_SPI_Transmit(&hspi1, &cmd, 1, 1000) != HAL_OK) {
 8000602:	1df9      	adds	r1, r7, #7
 8000604:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000608:	2201      	movs	r2, #1
 800060a:	4806      	ldr	r0, [pc, #24]	@ (8000624 <ILI9341_SoftReset+0x30>)
 800060c:	f005 fb20 	bl	8005c50 <HAL_SPI_Transmit>
 8000610:	4603      	mov	r3, r0
 8000612:	2b00      	cmp	r3, #0
 8000614:	d001      	beq.n	800061a <ILI9341_SoftReset+0x26>
		Error_Handler();
 8000616:	f000 faeb 	bl	8000bf0 <Error_Handler>
	}
}
 800061a:	bf00      	nop
 800061c:	3708      	adds	r7, #8
 800061e:	46bd      	mov	sp, r7
 8000620:	bd80      	pop	{r7, pc}
 8000622:	bf00      	nop
 8000624:	20000340 	.word	0x20000340

08000628 <LCD_WR_REG>:


void LCD_WR_REG(uint8_t data)
{
 8000628:	b580      	push	{r7, lr}
 800062a:	b082      	sub	sp, #8
 800062c:	af00      	add	r7, sp, #0
 800062e:	4603      	mov	r3, r0
 8000630:	71fb      	strb	r3, [r7, #7]
	DC_L();
 8000632:	f000 f885 	bl	8000740 <DC_L>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 8000636:	1df9      	adds	r1, r7, #7
 8000638:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800063c:	2201      	movs	r2, #1
 800063e:	4806      	ldr	r0, [pc, #24]	@ (8000658 <LCD_WR_REG+0x30>)
 8000640:	f005 fb06 	bl	8005c50 <HAL_SPI_Transmit>
 8000644:	4603      	mov	r3, r0
 8000646:	2b00      	cmp	r3, #0
 8000648:	d001      	beq.n	800064e <LCD_WR_REG+0x26>
		Error_Handler();
 800064a:	f000 fad1 	bl	8000bf0 <Error_Handler>
	}
}
 800064e:	bf00      	nop
 8000650:	3708      	adds	r7, #8
 8000652:	46bd      	mov	sp, r7
 8000654:	bd80      	pop	{r7, pc}
 8000656:	bf00      	nop
 8000658:	20000340 	.word	0x20000340

0800065c <LCD_WR_DATA>:

static void LCD_WR_DATA(uint8_t data)
{
 800065c:	b580      	push	{r7, lr}
 800065e:	b082      	sub	sp, #8
 8000660:	af00      	add	r7, sp, #0
 8000662:	4603      	mov	r3, r0
 8000664:	71fb      	strb	r3, [r7, #7]
	DC_H();
 8000666:	f000 f877 	bl	8000758 <DC_H>
	if (HAL_SPI_Transmit(&hspi1, &data, 1, 1000) != HAL_OK) {
 800066a:	1df9      	adds	r1, r7, #7
 800066c:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000670:	2201      	movs	r2, #1
 8000672:	4806      	ldr	r0, [pc, #24]	@ (800068c <LCD_WR_DATA+0x30>)
 8000674:	f005 faec 	bl	8005c50 <HAL_SPI_Transmit>
 8000678:	4603      	mov	r3, r0
 800067a:	2b00      	cmp	r3, #0
 800067c:	d001      	beq.n	8000682 <LCD_WR_DATA+0x26>
		Error_Handler();
 800067e:	f000 fab7 	bl	8000bf0 <Error_Handler>
	}
}
 8000682:	bf00      	nop
 8000684:	3708      	adds	r7, #8
 8000686:	46bd      	mov	sp, r7
 8000688:	bd80      	pop	{r7, pc}
 800068a:	bf00      	nop
 800068c:	20000340 	.word	0x20000340

08000690 <LCD_direction>:
	spiDmaTransferComplete = 1;
}
*/

static void LCD_direction(LCD_Horizontal_t direction)
{
 8000690:	b580      	push	{r7, lr}
 8000692:	b082      	sub	sp, #8
 8000694:	af00      	add	r7, sp, #0
 8000696:	4603      	mov	r3, r0
 8000698:	71fb      	strb	r3, [r7, #7]
	switch (direction) {
 800069a:	79fb      	ldrb	r3, [r7, #7]
 800069c:	2b03      	cmp	r3, #3
 800069e:	d827      	bhi.n	80006f0 <LCD_direction+0x60>
 80006a0:	a201      	add	r2, pc, #4	@ (adr r2, 80006a8 <LCD_direction+0x18>)
 80006a2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006a6:	bf00      	nop
 80006a8:	080006b9 	.word	0x080006b9
 80006ac:	080006c7 	.word	0x080006c7
 80006b0:	080006d5 	.word	0x080006d5
 80006b4:	080006e3 	.word	0x080006e3
	case ROTATE_0:
		LCD_WR_REG(0x36);
 80006b8:	2036      	movs	r0, #54	@ 0x36
 80006ba:	f7ff ffb5 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x48);
 80006be:	2048      	movs	r0, #72	@ 0x48
 80006c0:	f7ff ffcc 	bl	800065c <LCD_WR_DATA>
		break;
 80006c4:	e014      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_90:
		LCD_WR_REG(0x36);
 80006c6:	2036      	movs	r0, #54	@ 0x36
 80006c8:	f7ff ffae 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x28);
 80006cc:	2028      	movs	r0, #40	@ 0x28
 80006ce:	f7ff ffc5 	bl	800065c <LCD_WR_DATA>
		break;
 80006d2:	e00d      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_180:
		LCD_WR_REG(0x36);
 80006d4:	2036      	movs	r0, #54	@ 0x36
 80006d6:	f7ff ffa7 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0x88);
 80006da:	2088      	movs	r0, #136	@ 0x88
 80006dc:	f7ff ffbe 	bl	800065c <LCD_WR_DATA>
		break;
 80006e0:	e006      	b.n	80006f0 <LCD_direction+0x60>
	case ROTATE_270:
		LCD_WR_REG(0x36);
 80006e2:	2036      	movs	r0, #54	@ 0x36
 80006e4:	f7ff ffa0 	bl	8000628 <LCD_WR_REG>
		LCD_WR_DATA(0xE8);
 80006e8:	20e8      	movs	r0, #232	@ 0xe8
 80006ea:	f7ff ffb7 	bl	800065c <LCD_WR_DATA>
		break;
 80006ee:	bf00      	nop
	}
}
 80006f0:	bf00      	nop
 80006f2:	3708      	adds	r7, #8
 80006f4:	46bd      	mov	sp, r7
 80006f6:	bd80      	pop	{r7, pc}

080006f8 <RESET_L>:

static void RESET_L(void)
{
 80006f8:	b580      	push	{r7, lr}
 80006fa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 80006fc:	2200      	movs	r2, #0
 80006fe:	2108      	movs	r1, #8
 8000700:	4802      	ldr	r0, [pc, #8]	@ (800070c <RESET_L+0x14>)
 8000702:	f002 f8cd 	bl	80028a0 <HAL_GPIO_WritePin>
}
 8000706:	bf00      	nop
 8000708:	bd80      	pop	{r7, pc}
 800070a:	bf00      	nop
 800070c:	42020000 	.word	0x42020000

08000710 <RESET_H>:

static void RESET_H(void)
{
 8000710:	b580      	push	{r7, lr}
 8000712:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 8000714:	2201      	movs	r2, #1
 8000716:	2108      	movs	r1, #8
 8000718:	4802      	ldr	r0, [pc, #8]	@ (8000724 <RESET_H+0x14>)
 800071a:	f002 f8c1 	bl	80028a0 <HAL_GPIO_WritePin>
}
 800071e:	bf00      	nop
 8000720:	bd80      	pop	{r7, pc}
 8000722:	bf00      	nop
 8000724:	42020000 	.word	0x42020000

08000728 <CS_L>:

static void CS_L(void)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(SPI1_NSS_GPIO_Port, SPI1_NSS_Pin, GPIO_PIN_RESET);
 800072c:	2200      	movs	r2, #0
 800072e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000732:	4802      	ldr	r0, [pc, #8]	@ (800073c <CS_L+0x14>)
 8000734:	f002 f8b4 	bl	80028a0 <HAL_GPIO_WritePin>
}
 8000738:	bf00      	nop
 800073a:	bd80      	pop	{r7, pc}
 800073c:	42020400 	.word	0x42020400

08000740 <DC_L>:

static void DC_L(void)
{
 8000740:	b580      	push	{r7, lr}
 8000742:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_RESET);
 8000744:	2200      	movs	r2, #0
 8000746:	2101      	movs	r1, #1
 8000748:	4802      	ldr	r0, [pc, #8]	@ (8000754 <DC_L+0x14>)
 800074a:	f002 f8a9 	bl	80028a0 <HAL_GPIO_WritePin>
}
 800074e:	bf00      	nop
 8000750:	bd80      	pop	{r7, pc}
 8000752:	bf00      	nop
 8000754:	42020400 	.word	0x42020400

08000758 <DC_H>:

static void DC_H(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DC_GPIO_Port, DC_Pin, GPIO_PIN_SET);
 800075c:	2201      	movs	r2, #1
 800075e:	2101      	movs	r1, #1
 8000760:	4802      	ldr	r0, [pc, #8]	@ (800076c <DC_H+0x14>)
 8000762:	f002 f89d 	bl	80028a0 <HAL_GPIO_WritePin>
}
 8000766:	bf00      	nop
 8000768:	bd80      	pop	{r7, pc}
 800076a:	bf00      	nop
 800076c:	42020400 	.word	0x42020400

08000770 <LED_H>:

static void LED_H(void)
{
 8000770:	b480      	push	{r7}
 8000772:	af00      	add	r7, sp, #0
	//HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
}
 8000774:	bf00      	nop
 8000776:	46bd      	mov	sp, r7
 8000778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800077c:	4770      	bx	lr
	...

08000780 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000780:	b580      	push	{r7, lr}
 8000782:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000784:	f000 fdaa 	bl	80012dc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000788:	f000 f818 	bl	80007bc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800078c:	f000 f97a 	bl	8000a84 <MX_GPIO_Init>
  MX_GPDMA2_Init();
 8000790:	f000 f8a8 	bl	80008e4 <MX_GPDMA2_Init>
  MX_CRC_Init();
 8000794:	f000 f884 	bl	80008a0 <MX_CRC_Init>
  MX_TIM2_Init();
 8000798:	f000 f926 	bl	80009e8 <MX_TIM2_Init>
  MX_ICACHE_Init();
 800079c:	f000 f8c2 	bl	8000924 <MX_ICACHE_Init>
  MX_SPI1_Init();
 80007a0:	f000 f8cc 	bl	800093c <MX_SPI1_Init>
  MX_TouchGFX_Init();
 80007a4:	f007 f83e 	bl	8007824 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 80007a8:	4803      	ldr	r0, [pc, #12]	@ (80007b8 <main+0x38>)
 80007aa:	f006 fa1b 	bl	8006be4 <HAL_TIM_Base_Start_IT>
  ILI9341_Init();
 80007ae:	f7ff fd6d 	bl	800028c <ILI9341_Init>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80007b2:	f007 f83f 	bl	8007834 <MX_TouchGFX_Process>
 80007b6:	e7fc      	b.n	80007b2 <main+0x32>
 80007b8:	20000448 	.word	0x20000448

080007bc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007bc:	b580      	push	{r7, lr}
 80007be:	b09c      	sub	sp, #112	@ 0x70
 80007c0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007c2:	f107 0320 	add.w	r3, r7, #32
 80007c6:	2250      	movs	r2, #80	@ 0x50
 80007c8:	2100      	movs	r1, #0
 80007ca:	4618      	mov	r0, r3
 80007cc:	f021 fb8d 	bl	8021eea <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007d0:	f107 0308 	add.w	r3, r7, #8
 80007d4:	2200      	movs	r2, #0
 80007d6:	601a      	str	r2, [r3, #0]
 80007d8:	605a      	str	r2, [r3, #4]
 80007da:	609a      	str	r2, [r3, #8]
 80007dc:	60da      	str	r2, [r3, #12]
 80007de:	611a      	str	r2, [r3, #16]
 80007e0:	615a      	str	r2, [r3, #20]

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80007e2:	4b2d      	ldr	r3, [pc, #180]	@ (8000898 <SystemClock_Config+0xdc>)
 80007e4:	691b      	ldr	r3, [r3, #16]
 80007e6:	4a2c      	ldr	r2, [pc, #176]	@ (8000898 <SystemClock_Config+0xdc>)
 80007e8:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 80007ec:	6113      	str	r3, [r2, #16]
 80007ee:	4b2a      	ldr	r3, [pc, #168]	@ (8000898 <SystemClock_Config+0xdc>)
 80007f0:	691b      	ldr	r3, [r3, #16]
 80007f2:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 80007f6:	607b      	str	r3, [r7, #4]
 80007f8:	687b      	ldr	r3, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80007fa:	bf00      	nop
 80007fc:	4b26      	ldr	r3, [pc, #152]	@ (8000898 <SystemClock_Config+0xdc>)
 80007fe:	695b      	ldr	r3, [r3, #20]
 8000800:	f003 0308 	and.w	r3, r3, #8
 8000804:	2b08      	cmp	r3, #8
 8000806:	d1f9      	bne.n	80007fc <SystemClock_Config+0x40>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_CSI;
 8000808:	2310      	movs	r3, #16
 800080a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.CSIState = RCC_CSI_ON;
 800080c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000810:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.CSICalibrationValue = RCC_CSICALIBRATION_DEFAULT;
 8000812:	2320      	movs	r3, #32
 8000814:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000816:	2302      	movs	r3, #2
 8000818:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLL1_SOURCE_CSI;
 800081a:	2302      	movs	r3, #2
 800081c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 1;
 800081e:	2301      	movs	r3, #1
 8000820:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 50;
 8000822:	2332      	movs	r3, #50	@ 0x32
 8000824:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 8000826:	2302      	movs	r3, #2
 8000828:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800082a:	2304      	movs	r3, #4
 800082c:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 800082e:	2302      	movs	r3, #2
 8000830:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1_VCIRANGE_2;
 8000832:	2308      	movs	r3, #8
 8000834:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1_VCORANGE_WIDE;
 8000836:	2300      	movs	r3, #0
 8000838:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 800083a:	2300      	movs	r3, #0
 800083c:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800083e:	f107 0320 	add.w	r3, r7, #32
 8000842:	4618      	mov	r0, r3
 8000844:	f002 f854 	bl	80028f0 <HAL_RCC_OscConfig>
 8000848:	4603      	mov	r3, r0
 800084a:	2b00      	cmp	r3, #0
 800084c:	d001      	beq.n	8000852 <SystemClock_Config+0x96>
  {
    Error_Handler();
 800084e:	f000 f9cf 	bl	8000bf0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000852:	231f      	movs	r3, #31
 8000854:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_PCLK3;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000856:	2303      	movs	r3, #3
 8000858:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800085a:	2300      	movs	r3, #0
 800085c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800085e:	2300      	movs	r3, #0
 8000860:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000862:	2300      	movs	r3, #0
 8000864:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV2;
 8000866:	2340      	movs	r3, #64	@ 0x40
 8000868:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800086a:	f107 0308 	add.w	r3, r7, #8
 800086e:	2104      	movs	r1, #4
 8000870:	4618      	mov	r0, r3
 8000872:	f002 fc75 	bl	8003160 <HAL_RCC_ClockConfig>
 8000876:	4603      	mov	r3, r0
 8000878:	2b00      	cmp	r3, #0
 800087a:	d001      	beq.n	8000880 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 800087c:	f000 f9b8 	bl	8000bf0 <Error_Handler>
  }

  /** Configure the programming delay
  */
  __HAL_FLASH_SET_PROGRAM_DELAY(FLASH_PROGRAMMING_DELAY_2);
 8000880:	4b06      	ldr	r3, [pc, #24]	@ (800089c <SystemClock_Config+0xe0>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8000888:	4a04      	ldr	r2, [pc, #16]	@ (800089c <SystemClock_Config+0xe0>)
 800088a:	f043 0320 	orr.w	r3, r3, #32
 800088e:	6013      	str	r3, [r2, #0]
}
 8000890:	bf00      	nop
 8000892:	3770      	adds	r7, #112	@ 0x70
 8000894:	46bd      	mov	sp, r7
 8000896:	bd80      	pop	{r7, pc}
 8000898:	44020800 	.word	0x44020800
 800089c:	40022000 	.word	0x40022000

080008a0 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80008a0:	b580      	push	{r7, lr}
 80008a2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80008a4:	4b0d      	ldr	r3, [pc, #52]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008a6:	4a0e      	ldr	r2, [pc, #56]	@ (80008e0 <MX_CRC_Init+0x40>)
 80008a8:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80008aa:	4b0c      	ldr	r3, [pc, #48]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008ac:	2200      	movs	r2, #0
 80008ae:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80008b0:	4b0a      	ldr	r3, [pc, #40]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008b2:	2200      	movs	r2, #0
 80008b4:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80008b6:	4b09      	ldr	r3, [pc, #36]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008b8:	2200      	movs	r2, #0
 80008ba:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80008bc:	4b07      	ldr	r3, [pc, #28]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008be:	2200      	movs	r2, #0
 80008c0:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80008c2:	4b06      	ldr	r3, [pc, #24]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008c4:	2201      	movs	r2, #1
 80008c6:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80008c8:	4804      	ldr	r0, [pc, #16]	@ (80008dc <MX_CRC_Init+0x3c>)
 80008ca:	f000 feab 	bl	8001624 <HAL_CRC_Init>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d001      	beq.n	80008d8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80008d4:	f000 f98c 	bl	8000bf0 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80008d8:	bf00      	nop
 80008da:	bd80      	pop	{r7, pc}
 80008dc:	2000031c 	.word	0x2000031c
 80008e0:	40023000 	.word	0x40023000

080008e4 <MX_GPDMA2_Init>:
  * @brief GPDMA2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPDMA2_Init(void)
{
 80008e4:	b580      	push	{r7, lr}
 80008e6:	b082      	sub	sp, #8
 80008e8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN GPDMA2_Init 0 */

  /* USER CODE END GPDMA2_Init 0 */

  /* Peripheral clock enable */
  __HAL_RCC_GPDMA2_CLK_ENABLE();
 80008ea:	4b0d      	ldr	r3, [pc, #52]	@ (8000920 <MX_GPDMA2_Init+0x3c>)
 80008ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80008f0:	4a0b      	ldr	r2, [pc, #44]	@ (8000920 <MX_GPDMA2_Init+0x3c>)
 80008f2:	f043 0302 	orr.w	r3, r3, #2
 80008f6:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 80008fa:	4b09      	ldr	r3, [pc, #36]	@ (8000920 <MX_GPDMA2_Init+0x3c>)
 80008fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000900:	f003 0302 	and.w	r3, r3, #2
 8000904:	607b      	str	r3, [r7, #4]
 8000906:	687b      	ldr	r3, [r7, #4]

  /* GPDMA2 interrupt Init */
    HAL_NVIC_SetPriority(GPDMA2_Channel0_IRQn, 0, 0);
 8000908:	2200      	movs	r2, #0
 800090a:	2100      	movs	r1, #0
 800090c:	205a      	movs	r0, #90	@ 0x5a
 800090e:	f000 fe09 	bl	8001524 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(GPDMA2_Channel0_IRQn);
 8000912:	205a      	movs	r0, #90	@ 0x5a
 8000914:	f000 fe20 	bl	8001558 <HAL_NVIC_EnableIRQ>
  /* USER CODE END GPDMA2_Init 1 */
  /* USER CODE BEGIN GPDMA2_Init 2 */

  /* USER CODE END GPDMA2_Init 2 */

}
 8000918:	bf00      	nop
 800091a:	3708      	adds	r7, #8
 800091c:	46bd      	mov	sp, r7
 800091e:	bd80      	pop	{r7, pc}
 8000920:	44020c00 	.word	0x44020c00

08000924 <MX_ICACHE_Init>:
  * @brief ICACHE Initialization Function
  * @param None
  * @retval None
  */
static void MX_ICACHE_Init(void)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	af00      	add	r7, sp, #0

  /* USER CODE END ICACHE_Init 1 */

  /** Enable instruction cache (default 2-ways set associative cache)
  */
  if (HAL_ICACHE_Enable() != HAL_OK)
 8000928:	f001 ffd2 	bl	80028d0 <HAL_ICACHE_Enable>
 800092c:	4603      	mov	r3, r0
 800092e:	2b00      	cmp	r3, #0
 8000930:	d001      	beq.n	8000936 <MX_ICACHE_Init+0x12>
  {
    Error_Handler();
 8000932:	f000 f95d 	bl	8000bf0 <Error_Handler>
  }
  /* USER CODE BEGIN ICACHE_Init 2 */

  /* USER CODE END ICACHE_Init 2 */

}
 8000936:	bf00      	nop
 8000938:	bd80      	pop	{r7, pc}
	...

0800093c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 800093c:	b580      	push	{r7, lr}
 800093e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8000940:	4b27      	ldr	r3, [pc, #156]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000942:	4a28      	ldr	r2, [pc, #160]	@ (80009e4 <MX_SPI1_Init+0xa8>)
 8000944:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8000946:	4b26      	ldr	r3, [pc, #152]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000948:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 800094c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 800094e:	4b24      	ldr	r3, [pc, #144]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000950:	2200      	movs	r2, #0
 8000952:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8000954:	4b22      	ldr	r3, [pc, #136]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000956:	2207      	movs	r2, #7
 8000958:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 800095a:	4b21      	ldr	r3, [pc, #132]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 800095c:	2200      	movs	r2, #0
 800095e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000960:	4b1f      	ldr	r3, [pc, #124]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000962:	2200      	movs	r2, #0
 8000964:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8000966:	4b1e      	ldr	r3, [pc, #120]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000968:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 800096c:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800096e:	4b1c      	ldr	r3, [pc, #112]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000970:	2200      	movs	r2, #0
 8000972:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000974:	4b1a      	ldr	r3, [pc, #104]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000976:	2200      	movs	r2, #0
 8000978:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800097a:	4b19      	ldr	r3, [pc, #100]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 800097c:	2200      	movs	r2, #0
 800097e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000980:	4b17      	ldr	r3, [pc, #92]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000982:	2200      	movs	r2, #0
 8000984:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 0x7;
 8000986:	4b16      	ldr	r3, [pc, #88]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000988:	2207      	movs	r2, #7
 800098a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 800098c:	4b14      	ldr	r3, [pc, #80]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 800098e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000992:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8000994:	4b12      	ldr	r3, [pc, #72]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 8000996:	2200      	movs	r2, #0
 8000998:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 800099a:	4b11      	ldr	r3, [pc, #68]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 800099c:	2200      	movs	r2, #0
 800099e:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 80009a0:	4b0f      	ldr	r3, [pc, #60]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009a2:	2200      	movs	r2, #0
 80009a4:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 80009a6:	4b0e      	ldr	r3, [pc, #56]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 80009ac:	4b0c      	ldr	r3, [pc, #48]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009ae:	2200      	movs	r2, #0
 80009b0:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 80009b2:	4b0b      	ldr	r3, [pc, #44]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009b4:	2200      	movs	r2, #0
 80009b6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 80009b8:	4b09      	ldr	r3, [pc, #36]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009ba:	2200      	movs	r2, #0
 80009bc:	659a      	str	r2, [r3, #88]	@ 0x58
  hspi1.Init.ReadyMasterManagement = SPI_RDY_MASTER_MANAGEMENT_INTERNALLY;
 80009be:	4b08      	ldr	r3, [pc, #32]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009c0:	2200      	movs	r2, #0
 80009c2:	65da      	str	r2, [r3, #92]	@ 0x5c
  hspi1.Init.ReadyPolarity = SPI_RDY_POLARITY_HIGH;
 80009c4:	4b06      	ldr	r3, [pc, #24]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009c6:	2200      	movs	r2, #0
 80009c8:	661a      	str	r2, [r3, #96]	@ 0x60
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 80009ca:	4805      	ldr	r0, [pc, #20]	@ (80009e0 <MX_SPI1_Init+0xa4>)
 80009cc:	f004 ffd0 	bl	8005970 <HAL_SPI_Init>
 80009d0:	4603      	mov	r3, r0
 80009d2:	2b00      	cmp	r3, #0
 80009d4:	d001      	beq.n	80009da <MX_SPI1_Init+0x9e>
  {
    Error_Handler();
 80009d6:	f000 f90b 	bl	8000bf0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 80009da:	bf00      	nop
 80009dc:	bd80      	pop	{r7, pc}
 80009de:	bf00      	nop
 80009e0:	20000340 	.word	0x20000340
 80009e4:	40013000 	.word	0x40013000

080009e8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80009e8:	b580      	push	{r7, lr}
 80009ea:	b088      	sub	sp, #32
 80009ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80009ee:	f107 0310 	add.w	r3, r7, #16
 80009f2:	2200      	movs	r2, #0
 80009f4:	601a      	str	r2, [r3, #0]
 80009f6:	605a      	str	r2, [r3, #4]
 80009f8:	609a      	str	r2, [r3, #8]
 80009fa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80009fc:	1d3b      	adds	r3, r7, #4
 80009fe:	2200      	movs	r2, #0
 8000a00:	601a      	str	r2, [r3, #0]
 8000a02:	605a      	str	r2, [r3, #4]
 8000a04:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000a06:	4b1e      	ldr	r3, [pc, #120]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a08:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000a0c:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 100-1;
 8000a0e:	4b1c      	ldr	r3, [pc, #112]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a10:	2263      	movs	r2, #99	@ 0x63
 8000a12:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000a14:	4b1a      	ldr	r3, [pc, #104]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a16:	2200      	movs	r2, #0
 8000a18:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 49999;
 8000a1a:	4b19      	ldr	r3, [pc, #100]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a1c:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 8000a20:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000a22:	4b17      	ldr	r3, [pc, #92]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a24:	2200      	movs	r2, #0
 8000a26:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000a28:	4b15      	ldr	r3, [pc, #84]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a2a:	2200      	movs	r2, #0
 8000a2c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000a2e:	4814      	ldr	r0, [pc, #80]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a30:	f006 f881 	bl	8006b36 <HAL_TIM_Base_Init>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d001      	beq.n	8000a3e <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8000a3a:	f000 f8d9 	bl	8000bf0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000a3e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a42:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000a44:	f107 0310 	add.w	r3, r7, #16
 8000a48:	4619      	mov	r1, r3
 8000a4a:	480d      	ldr	r0, [pc, #52]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a4c:	f006 fac8 	bl	8006fe0 <HAL_TIM_ConfigClockSource>
 8000a50:	4603      	mov	r3, r0
 8000a52:	2b00      	cmp	r3, #0
 8000a54:	d001      	beq.n	8000a5a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8000a56:	f000 f8cb 	bl	8000bf0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000a5a:	2300      	movs	r3, #0
 8000a5c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000a5e:	2300      	movs	r3, #0
 8000a60:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000a62:	1d3b      	adds	r3, r7, #4
 8000a64:	4619      	mov	r1, r3
 8000a66:	4806      	ldr	r0, [pc, #24]	@ (8000a80 <MX_TIM2_Init+0x98>)
 8000a68:	f006 fdc6 	bl	80075f8 <HAL_TIMEx_MasterConfigSynchronization>
 8000a6c:	4603      	mov	r3, r0
 8000a6e:	2b00      	cmp	r3, #0
 8000a70:	d001      	beq.n	8000a76 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8000a72:	f000 f8bd 	bl	8000bf0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000a76:	bf00      	nop
 8000a78:	3720      	adds	r7, #32
 8000a7a:	46bd      	mov	sp, r7
 8000a7c:	bd80      	pop	{r7, pc}
 8000a7e:	bf00      	nop
 8000a80:	20000448 	.word	0x20000448

08000a84 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000a84:	b580      	push	{r7, lr}
 8000a86:	b08a      	sub	sp, #40	@ 0x28
 8000a88:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a8a:	f107 0314 	add.w	r3, r7, #20
 8000a8e:	2200      	movs	r2, #0
 8000a90:	601a      	str	r2, [r3, #0]
 8000a92:	605a      	str	r2, [r3, #4]
 8000a94:	609a      	str	r2, [r3, #8]
 8000a96:	60da      	str	r2, [r3, #12]
 8000a98:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a9a:	4b44      	ldr	r3, [pc, #272]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000a9c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000aa0:	4a42      	ldr	r2, [pc, #264]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000aa2:	f043 0304 	orr.w	r3, r3, #4
 8000aa6:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000aaa:	4b40      	ldr	r3, [pc, #256]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000aac:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ab0:	f003 0304 	and.w	r3, r3, #4
 8000ab4:	613b      	str	r3, [r7, #16]
 8000ab6:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ab8:	4b3c      	ldr	r3, [pc, #240]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000aba:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000abe:	4a3b      	ldr	r2, [pc, #236]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000ac0:	f043 0320 	orr.w	r3, r3, #32
 8000ac4:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000ac8:	4b38      	ldr	r3, [pc, #224]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000aca:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000ace:	f003 0320 	and.w	r3, r3, #32
 8000ad2:	60fb      	str	r3, [r7, #12]
 8000ad4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ad6:	4b35      	ldr	r3, [pc, #212]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000ad8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000adc:	4a33      	ldr	r2, [pc, #204]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000ade:	f043 0301 	orr.w	r3, r3, #1
 8000ae2:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000ae6:	4b31      	ldr	r3, [pc, #196]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000ae8:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000aec:	f003 0301 	and.w	r3, r3, #1
 8000af0:	60bb      	str	r3, [r7, #8]
 8000af2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000af4:	4b2d      	ldr	r3, [pc, #180]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000af6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000afa:	4a2c      	ldr	r2, [pc, #176]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000afc:	f043 0302 	orr.w	r3, r3, #2
 8000b00:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000b04:	4b29      	ldr	r3, [pc, #164]	@ (8000bac <MX_GPIO_Init+0x128>)
 8000b06:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000b0a:	f003 0302 	and.w	r3, r3, #2
 8000b0e:	607b      	str	r3, [r7, #4]
 8000b10:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8000b12:	2200      	movs	r2, #0
 8000b14:	2110      	movs	r1, #16
 8000b16:	4826      	ldr	r0, [pc, #152]	@ (8000bb0 <MX_GPIO_Init+0x12c>)
 8000b18:	f001 fec2 	bl	80028a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	2108      	movs	r1, #8
 8000b20:	4824      	ldr	r0, [pc, #144]	@ (8000bb4 <MX_GPIO_Init+0x130>)
 8000b22:	f001 febd 	bl	80028a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DC_Pin|SPI1_NSS_Pin, GPIO_PIN_RESET);
 8000b26:	2200      	movs	r2, #0
 8000b28:	f240 4101 	movw	r1, #1025	@ 0x401
 8000b2c:	4822      	ldr	r0, [pc, #136]	@ (8000bb8 <MX_GPIO_Init+0x134>)
 8000b2e:	f001 feb7 	bl	80028a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : User_Button_Pin */
  GPIO_InitStruct.Pin = User_Button_Pin;
 8000b32:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b36:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b38:	2300      	movs	r3, #0
 8000b3a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(User_Button_GPIO_Port, &GPIO_InitStruct);
 8000b40:	f107 0314 	add.w	r3, r7, #20
 8000b44:	4619      	mov	r1, r3
 8000b46:	481d      	ldr	r0, [pc, #116]	@ (8000bbc <MX_GPIO_Init+0x138>)
 8000b48:	f001 fd4c 	bl	80025e4 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000b4c:	2310      	movs	r3, #16
 8000b4e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b50:	2301      	movs	r3, #1
 8000b52:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b54:	2300      	movs	r3, #0
 8000b56:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b58:	2300      	movs	r3, #0
 8000b5a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000b5c:	f107 0314 	add.w	r3, r7, #20
 8000b60:	4619      	mov	r1, r3
 8000b62:	4813      	ldr	r0, [pc, #76]	@ (8000bb0 <MX_GPIO_Init+0x12c>)
 8000b64:	f001 fd3e 	bl	80025e4 <HAL_GPIO_Init>

  /*Configure GPIO pin : RESET_Pin */
  GPIO_InitStruct.Pin = RESET_Pin;
 8000b68:	2308      	movs	r3, #8
 8000b6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b6c:	2301      	movs	r3, #1
 8000b6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b70:	2300      	movs	r3, #0
 8000b72:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b74:	2300      	movs	r3, #0
 8000b76:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(RESET_GPIO_Port, &GPIO_InitStruct);
 8000b78:	f107 0314 	add.w	r3, r7, #20
 8000b7c:	4619      	mov	r1, r3
 8000b7e:	480d      	ldr	r0, [pc, #52]	@ (8000bb4 <MX_GPIO_Init+0x130>)
 8000b80:	f001 fd30 	bl	80025e4 <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin SPI1_NSS_Pin */
  GPIO_InitStruct.Pin = DC_Pin|SPI1_NSS_Pin;
 8000b84:	f240 4301 	movw	r3, #1025	@ 0x401
 8000b88:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b8a:	2301      	movs	r3, #1
 8000b8c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b8e:	2300      	movs	r3, #0
 8000b90:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b92:	2300      	movs	r3, #0
 8000b94:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000b96:	f107 0314 	add.w	r3, r7, #20
 8000b9a:	4619      	mov	r1, r3
 8000b9c:	4806      	ldr	r0, [pc, #24]	@ (8000bb8 <MX_GPIO_Init+0x134>)
 8000b9e:	f001 fd21 	bl	80025e4 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8000ba2:	bf00      	nop
 8000ba4:	3728      	adds	r7, #40	@ 0x28
 8000ba6:	46bd      	mov	sp, r7
 8000ba8:	bd80      	pop	{r7, pc}
 8000baa:	bf00      	nop
 8000bac:	44020c00 	.word	0x44020c00
 8000bb0:	42021400 	.word	0x42021400
 8000bb4:	42020000 	.word	0x42020000
 8000bb8:	42020400 	.word	0x42020400
 8000bbc:	42020800 	.word	0x42020800

08000bc0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000bc0:	b580      	push	{r7, lr}
 8000bc2:	b082      	sub	sp, #8
 8000bc4:	af00      	add	r7, sp, #0
 8000bc6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */
	extern void touchgfxSignalVSync(void);
		if (htim->Instance == TIM2)
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	681b      	ldr	r3, [r3, #0]
 8000bcc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000bd0:	d101      	bne.n	8000bd6 <HAL_TIM_PeriodElapsedCallback+0x16>
		{
			touchgfxSignalVSync();
 8000bd2:	f00b fd15 	bl	800c600 <touchgfxSignalVSync>
		}
  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM7)
 8000bd6:	687b      	ldr	r3, [r7, #4]
 8000bd8:	681b      	ldr	r3, [r3, #0]
 8000bda:	4a04      	ldr	r2, [pc, #16]	@ (8000bec <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8000bdc:	4293      	cmp	r3, r2
 8000bde:	d101      	bne.n	8000be4 <HAL_TIM_PeriodElapsedCallback+0x24>
  {
    HAL_IncTick();
 8000be0:	f000 fba4 	bl	800132c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000be4:	bf00      	nop
 8000be6:	3708      	adds	r7, #8
 8000be8:	46bd      	mov	sp, r7
 8000bea:	bd80      	pop	{r7, pc}
 8000bec:	40001400 	.word	0x40001400

08000bf0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000bf0:	b480      	push	{r7}
 8000bf2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000bf4:	b672      	cpsid	i
}
 8000bf6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000bf8:	bf00      	nop
 8000bfa:	e7fd      	b.n	8000bf8 <Error_Handler+0x8>

08000bfc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000bfc:	b480      	push	{r7}
 8000bfe:	af00      	add	r7, sp, #0
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000c00:	bf00      	nop
 8000c02:	46bd      	mov	sp, r7
 8000c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c08:	4770      	bx	lr
	...

08000c0c <HAL_CRC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000c0c:	b480      	push	{r7}
 8000c0e:	b085      	sub	sp, #20
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	681b      	ldr	r3, [r3, #0]
 8000c18:	4a0b      	ldr	r2, [pc, #44]	@ (8000c48 <HAL_CRC_MspInit+0x3c>)
 8000c1a:	4293      	cmp	r3, r2
 8000c1c:	d10e      	bne.n	8000c3c <HAL_CRC_MspInit+0x30>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000c1e:	4b0b      	ldr	r3, [pc, #44]	@ (8000c4c <HAL_CRC_MspInit+0x40>)
 8000c20:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000c24:	4a09      	ldr	r2, [pc, #36]	@ (8000c4c <HAL_CRC_MspInit+0x40>)
 8000c26:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000c2a:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000c2e:	4b07      	ldr	r3, [pc, #28]	@ (8000c4c <HAL_CRC_MspInit+0x40>)
 8000c30:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000c34:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8000c38:	60fb      	str	r3, [r7, #12]
 8000c3a:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8000c3c:	bf00      	nop
 8000c3e:	3714      	adds	r7, #20
 8000c40:	46bd      	mov	sp, r7
 8000c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c46:	4770      	bx	lr
 8000c48:	40023000 	.word	0x40023000
 8000c4c:	44020c00 	.word	0x44020c00

08000c50 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8000c50:	b580      	push	{r7, lr}
 8000c52:	b0cc      	sub	sp, #304	@ 0x130
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c5a:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000c5e:	6018      	str	r0, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c60:	f507 738e 	add.w	r3, r7, #284	@ 0x11c
 8000c64:	2200      	movs	r2, #0
 8000c66:	601a      	str	r2, [r3, #0]
 8000c68:	605a      	str	r2, [r3, #4]
 8000c6a:	609a      	str	r2, [r3, #8]
 8000c6c:	60da      	str	r2, [r3, #12]
 8000c6e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c70:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c74:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8000c78:	4618      	mov	r0, r3
 8000c7a:	f44f 7384 	mov.w	r3, #264	@ 0x108
 8000c7e:	461a      	mov	r2, r3
 8000c80:	2100      	movs	r1, #0
 8000c82:	f021 f932 	bl	8021eea <memset>
  if(hspi->Instance==SPI1)
 8000c86:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c8a:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000c8e:	681b      	ldr	r3, [r3, #0]
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	4a5d      	ldr	r2, [pc, #372]	@ (8000e08 <HAL_SPI_MspInit+0x1b8>)
 8000c94:	4293      	cmp	r3, r2
 8000c96:	f040 80b2 	bne.w	8000dfe <HAL_SPI_MspInit+0x1ae>

    /* USER CODE END SPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI1;
 8000c9a:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000c9e:	f5a3 7190 	sub.w	r1, r3, #288	@ 0x120
 8000ca2:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000ca6:	f04f 0300 	mov.w	r3, #0
 8000caa:	e9c1 2300 	strd	r2, r3, [r1]
    PeriphClkInitStruct.Spi1ClockSelection = RCC_SPI1CLKSOURCE_PLL1Q;
 8000cae:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cb2:	f5a3 7390 	sub.w	r3, r3, #288	@ 0x120
 8000cb6:	2200      	movs	r2, #0
 8000cb8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000cbc:	f107 0310 	add.w	r3, r7, #16
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	f002 fd9b 	bl	80037fc <HAL_RCCEx_PeriphCLKConfig>
 8000cc6:	4603      	mov	r3, r0
 8000cc8:	2b00      	cmp	r3, #0
 8000cca:	d001      	beq.n	8000cd0 <HAL_SPI_MspInit+0x80>
    {
      Error_Handler();
 8000ccc:	f7ff ff90 	bl	8000bf0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8000cd0:	4b4e      	ldr	r3, [pc, #312]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000cd2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8000cd6:	4a4d      	ldr	r2, [pc, #308]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000cd8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000cdc:	f8c2 30a4 	str.w	r3, [r2, #164]	@ 0xa4
 8000ce0:	4b4a      	ldr	r3, [pc, #296]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000ce2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8000ce6:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8000cea:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cee:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8000cf2:	601a      	str	r2, [r3, #0]
 8000cf4:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000cf8:	f5a3 7392 	sub.w	r3, r3, #292	@ 0x124
 8000cfc:	681b      	ldr	r3, [r3, #0]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cfe:	4b43      	ldr	r3, [pc, #268]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000d00:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d04:	4a41      	ldr	r2, [pc, #260]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000d06:	f043 0301 	orr.w	r3, r3, #1
 8000d0a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8000d0e:	4b3f      	ldr	r3, [pc, #252]	@ (8000e0c <HAL_SPI_MspInit+0x1bc>)
 8000d10:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8000d14:	f003 0201 	and.w	r2, r3, #1
 8000d18:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000d1c:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8000d20:	601a      	str	r2, [r3, #0]
 8000d22:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000d26:	f5a3 7394 	sub.w	r3, r3, #296	@ 0x128
 8000d2a:	681b      	ldr	r3, [r3, #0]
    /**SPI1 GPIO Configuration
    PA5     ------> SPI1_SCK
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 8000d2c:	23e0      	movs	r3, #224	@ 0xe0
 8000d2e:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d32:	2302      	movs	r3, #2
 8000d34:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d38:	2300      	movs	r3, #0
 8000d3a:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d3e:	2300      	movs	r3, #0
 8000d40:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 8000d44:	2305      	movs	r3, #5
 8000d46:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d4a:	f507 738e 	add.w	r3, r7, #284	@ 0x11c
 8000d4e:	4619      	mov	r1, r3
 8000d50:	482f      	ldr	r0, [pc, #188]	@ (8000e10 <HAL_SPI_MspInit+0x1c0>)
 8000d52:	f001 fc47 	bl	80025e4 <HAL_GPIO_Init>

    /* SPI1 DMA Init */
    /* GPDMA2_REQUEST_SPI1_TX Init */
    handle_GPDMA2_Channel0.Instance = GPDMA2_Channel0;
 8000d56:	4b2f      	ldr	r3, [pc, #188]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d58:	4a2f      	ldr	r2, [pc, #188]	@ (8000e18 <HAL_SPI_MspInit+0x1c8>)
 8000d5a:	601a      	str	r2, [r3, #0]
    handle_GPDMA2_Channel0.Init.Request = GPDMA2_REQUEST_SPI1_TX;
 8000d5c:	4b2d      	ldr	r3, [pc, #180]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d5e:	2207      	movs	r2, #7
 8000d60:	605a      	str	r2, [r3, #4]
    handle_GPDMA2_Channel0.Init.BlkHWRequest = DMA_BREQ_SINGLE_BURST;
 8000d62:	4b2c      	ldr	r3, [pc, #176]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d64:	2200      	movs	r2, #0
 8000d66:	609a      	str	r2, [r3, #8]
    handle_GPDMA2_Channel0.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000d68:	4b2a      	ldr	r3, [pc, #168]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d6a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000d6e:	60da      	str	r2, [r3, #12]
    handle_GPDMA2_Channel0.Init.SrcInc = DMA_SINC_INCREMENTED;
 8000d70:	4b28      	ldr	r3, [pc, #160]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d72:	2208      	movs	r2, #8
 8000d74:	611a      	str	r2, [r3, #16]
    handle_GPDMA2_Channel0.Init.DestInc = DMA_DINC_FIXED;
 8000d76:	4b27      	ldr	r3, [pc, #156]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d78:	2200      	movs	r2, #0
 8000d7a:	615a      	str	r2, [r3, #20]
    handle_GPDMA2_Channel0.Init.SrcDataWidth = DMA_SRC_DATAWIDTH_BYTE;
 8000d7c:	4b25      	ldr	r3, [pc, #148]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d7e:	2200      	movs	r2, #0
 8000d80:	619a      	str	r2, [r3, #24]
    handle_GPDMA2_Channel0.Init.DestDataWidth = DMA_DEST_DATAWIDTH_BYTE;
 8000d82:	4b24      	ldr	r3, [pc, #144]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d84:	2200      	movs	r2, #0
 8000d86:	61da      	str	r2, [r3, #28]
    handle_GPDMA2_Channel0.Init.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 8000d88:	4b22      	ldr	r3, [pc, #136]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	621a      	str	r2, [r3, #32]
    handle_GPDMA2_Channel0.Init.SrcBurstLength = 1;
 8000d8e:	4b21      	ldr	r3, [pc, #132]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d90:	2201      	movs	r2, #1
 8000d92:	625a      	str	r2, [r3, #36]	@ 0x24
    handle_GPDMA2_Channel0.Init.DestBurstLength = 1;
 8000d94:	4b1f      	ldr	r3, [pc, #124]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d96:	2201      	movs	r2, #1
 8000d98:	629a      	str	r2, [r3, #40]	@ 0x28
    handle_GPDMA2_Channel0.Init.TransferAllocatedPort = DMA_SRC_ALLOCATED_PORT0|DMA_DEST_ALLOCATED_PORT1;
 8000d9a:	4b1e      	ldr	r3, [pc, #120]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000d9c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000da0:	62da      	str	r2, [r3, #44]	@ 0x2c
    handle_GPDMA2_Channel0.Init.TransferEventMode = DMA_TCEM_BLOCK_TRANSFER;
 8000da2:	4b1c      	ldr	r3, [pc, #112]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000da4:	2200      	movs	r2, #0
 8000da6:	631a      	str	r2, [r3, #48]	@ 0x30
    handle_GPDMA2_Channel0.Init.Mode = DMA_NORMAL;
 8000da8:	4b1a      	ldr	r3, [pc, #104]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000daa:	2200      	movs	r2, #0
 8000dac:	635a      	str	r2, [r3, #52]	@ 0x34
    if (HAL_DMA_Init(&handle_GPDMA2_Channel0) != HAL_OK)
 8000dae:	4819      	ldr	r0, [pc, #100]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000db0:	f000 fd2a 	bl	8001808 <HAL_DMA_Init>
 8000db4:	4603      	mov	r3, r0
 8000db6:	2b00      	cmp	r3, #0
 8000db8:	d001      	beq.n	8000dbe <HAL_SPI_MspInit+0x16e>
    {
      Error_Handler();
 8000dba:	f7ff ff19 	bl	8000bf0 <Error_Handler>
    }

    __HAL_LINKDMA(hspi, hdmatx, handle_GPDMA2_Channel0);
 8000dbe:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000dc2:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000dc6:	681b      	ldr	r3, [r3, #0]
 8000dc8:	4a12      	ldr	r2, [pc, #72]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000dca:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8000dce:	4a11      	ldr	r2, [pc, #68]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000dd0:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 8000dd4:	f5a3 7396 	sub.w	r3, r3, #300	@ 0x12c
 8000dd8:	681b      	ldr	r3, [r3, #0]
 8000dda:	65d3      	str	r3, [r2, #92]	@ 0x5c

    if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA2_Channel0, DMA_CHANNEL_NPRIV) != HAL_OK)
 8000ddc:	2110      	movs	r1, #16
 8000dde:	480d      	ldr	r0, [pc, #52]	@ (8000e14 <HAL_SPI_MspInit+0x1c4>)
 8000de0:	f001 f850 	bl	8001e84 <HAL_DMA_ConfigChannelAttributes>
 8000de4:	4603      	mov	r3, r0
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	d001      	beq.n	8000dee <HAL_SPI_MspInit+0x19e>
    {
      Error_Handler();
 8000dea:	f7ff ff01 	bl	8000bf0 <Error_Handler>
    }

    /* SPI1 interrupt Init */
    HAL_NVIC_SetPriority(SPI1_IRQn, 0, 0);
 8000dee:	2200      	movs	r2, #0
 8000df0:	2100      	movs	r1, #0
 8000df2:	2037      	movs	r0, #55	@ 0x37
 8000df4:	f000 fb96 	bl	8001524 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI1_IRQn);
 8000df8:	2037      	movs	r0, #55	@ 0x37
 8000dfa:	f000 fbad 	bl	8001558 <HAL_NVIC_EnableIRQ>

    /* USER CODE END SPI1_MspInit 1 */

  }

}
 8000dfe:	bf00      	nop
 8000e00:	f507 7798 	add.w	r7, r7, #304	@ 0x130
 8000e04:	46bd      	mov	sp, r7
 8000e06:	bd80      	pop	{r7, pc}
 8000e08:	40013000 	.word	0x40013000
 8000e0c:	44020c00 	.word	0x44020c00
 8000e10:	42020000 	.word	0x42020000
 8000e14:	200003d0 	.word	0x200003d0
 8000e18:	40021050 	.word	0x40021050

08000e1c <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000e1c:	b580      	push	{r7, lr}
 8000e1e:	b084      	sub	sp, #16
 8000e20:	af00      	add	r7, sp, #0
 8000e22:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000e24:	687b      	ldr	r3, [r7, #4]
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000e2c:	d116      	bne.n	8000e5c <HAL_TIM_Base_MspInit+0x40>
  {
    /* USER CODE BEGIN TIM2_MspInit 0 */

    /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000e2e:	4b0d      	ldr	r3, [pc, #52]	@ (8000e64 <HAL_TIM_Base_MspInit+0x48>)
 8000e30:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e34:	4a0b      	ldr	r2, [pc, #44]	@ (8000e64 <HAL_TIM_Base_MspInit+0x48>)
 8000e36:	f043 0301 	orr.w	r3, r3, #1
 8000e3a:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 8000e3e:	4b09      	ldr	r3, [pc, #36]	@ (8000e64 <HAL_TIM_Base_MspInit+0x48>)
 8000e40:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e44:	f003 0301 	and.w	r3, r3, #1
 8000e48:	60fb      	str	r3, [r7, #12]
 8000e4a:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000e4c:	2200      	movs	r2, #0
 8000e4e:	2100      	movs	r1, #0
 8000e50:	202d      	movs	r0, #45	@ 0x2d
 8000e52:	f000 fb67 	bl	8001524 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000e56:	202d      	movs	r0, #45	@ 0x2d
 8000e58:	f000 fb7e 	bl	8001558 <HAL_NVIC_EnableIRQ>

    /* USER CODE END TIM2_MspInit 1 */

  }

}
 8000e5c:	bf00      	nop
 8000e5e:	3710      	adds	r7, #16
 8000e60:	46bd      	mov	sp, r7
 8000e62:	bd80      	pop	{r7, pc}
 8000e64:	44020c00 	.word	0x44020c00

08000e68 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000e68:	b580      	push	{r7, lr}
 8000e6a:	b08e      	sub	sp, #56	@ 0x38
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM7 clock */
  __HAL_RCC_TIM7_CLK_ENABLE();
 8000e70:	4b33      	ldr	r3, [pc, #204]	@ (8000f40 <HAL_InitTick+0xd8>)
 8000e72:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e76:	4a32      	ldr	r2, [pc, #200]	@ (8000f40 <HAL_InitTick+0xd8>)
 8000e78:	f043 0320 	orr.w	r3, r3, #32
 8000e7c:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
 8000e80:	4b2f      	ldr	r3, [pc, #188]	@ (8000f40 <HAL_InitTick+0xd8>)
 8000e82:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8000e86:	f003 0320 	and.w	r3, r3, #32
 8000e8a:	60bb      	str	r3, [r7, #8]
 8000e8c:	68bb      	ldr	r3, [r7, #8]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000e8e:	f107 020c 	add.w	r2, r7, #12
 8000e92:	f107 0310 	add.w	r3, r7, #16
 8000e96:	4611      	mov	r1, r2
 8000e98:	4618      	mov	r0, r3
 8000e9a:	f002 fc77 	bl	800378c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8000e9e:	69fb      	ldr	r3, [r7, #28]
 8000ea0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  /* Compute TIM7 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8000ea2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	d103      	bne.n	8000eb0 <HAL_InitTick+0x48>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000ea8:	f002 fc5a 	bl	8003760 <HAL_RCC_GetPCLK1Freq>
 8000eac:	6378      	str	r0, [r7, #52]	@ 0x34
 8000eae:	e004      	b.n	8000eba <HAL_InitTick+0x52>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8000eb0:	f002 fc56 	bl	8003760 <HAL_RCC_GetPCLK1Freq>
 8000eb4:	4603      	mov	r3, r0
 8000eb6:	005b      	lsls	r3, r3, #1
 8000eb8:	637b      	str	r3, [r7, #52]	@ 0x34
  }

  /* Compute the prescaler value to have TIM7 counter clock equal to 100KHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 100000U) - 1U);
 8000eba:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000ebc:	095b      	lsrs	r3, r3, #5
 8000ebe:	4a21      	ldr	r2, [pc, #132]	@ (8000f44 <HAL_InitTick+0xdc>)
 8000ec0:	fba2 2303 	umull	r2, r3, r2, r3
 8000ec4:	09db      	lsrs	r3, r3, #7
 8000ec6:	3b01      	subs	r3, #1
 8000ec8:	62bb      	str	r3, [r7, #40]	@ 0x28

  /* Initialize TIM7 */
  htim7.Instance = TIM7;
 8000eca:	4b1f      	ldr	r3, [pc, #124]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000ecc:	4a1f      	ldr	r2, [pc, #124]	@ (8000f4c <HAL_InitTick+0xe4>)
 8000ece:	601a      	str	r2, [r3, #0]
   * Period = [(TIM7CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/100000 - 1) to have a 100KHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim7.Init.Period = (100000U / 1000U) - 1U;
 8000ed0:	4b1d      	ldr	r3, [pc, #116]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000ed2:	2263      	movs	r2, #99	@ 0x63
 8000ed4:	60da      	str	r2, [r3, #12]
  htim7.Init.Prescaler = uwPrescalerValue;
 8000ed6:	4a1c      	ldr	r2, [pc, #112]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000ed8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8000eda:	6053      	str	r3, [r2, #4]
  htim7.Init.ClockDivision = 0;
 8000edc:	4b1a      	ldr	r3, [pc, #104]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000ede:	2200      	movs	r2, #0
 8000ee0:	611a      	str	r2, [r3, #16]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ee2:	4b19      	ldr	r3, [pc, #100]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000ee4:	2200      	movs	r2, #0
 8000ee6:	609a      	str	r2, [r3, #8]

  status = HAL_TIM_Base_Init(&htim7);
 8000ee8:	4817      	ldr	r0, [pc, #92]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000eea:	f005 fe24 	bl	8006b36 <HAL_TIM_Base_Init>
 8000eee:	4603      	mov	r3, r0
 8000ef0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
  if (status == HAL_OK)
 8000ef4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000ef8:	2b00      	cmp	r3, #0
 8000efa:	d118      	bne.n	8000f2e <HAL_InitTick+0xc6>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim7);
 8000efc:	4812      	ldr	r0, [pc, #72]	@ (8000f48 <HAL_InitTick+0xe0>)
 8000efe:	f005 fe71 	bl	8006be4 <HAL_TIM_Base_Start_IT>
 8000f02:	4603      	mov	r3, r0
 8000f04:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
    if (status == HAL_OK)
 8000f08:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8000f0c:	2b00      	cmp	r3, #0
 8000f0e:	d10e      	bne.n	8000f2e <HAL_InitTick+0xc6>
    {
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	2b0f      	cmp	r3, #15
 8000f14:	d808      	bhi.n	8000f28 <HAL_InitTick+0xc0>
      {
        /* Enable the TIM7 global Interrupt */
        HAL_NVIC_SetPriority(TIM7_IRQn, TickPriority, 0U);
 8000f16:	2200      	movs	r2, #0
 8000f18:	6879      	ldr	r1, [r7, #4]
 8000f1a:	2032      	movs	r0, #50	@ 0x32
 8000f1c:	f000 fb02 	bl	8001524 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8000f20:	4a0b      	ldr	r2, [pc, #44]	@ (8000f50 <HAL_InitTick+0xe8>)
 8000f22:	687b      	ldr	r3, [r7, #4]
 8000f24:	6013      	str	r3, [r2, #0]
 8000f26:	e002      	b.n	8000f2e <HAL_InitTick+0xc6>
      }
      else
      {
        status = HAL_ERROR;
 8000f28:	2301      	movs	r3, #1
 8000f2a:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
      }
    }
}

  /* Enable the TIM7 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8000f2e:	2032      	movs	r0, #50	@ 0x32
 8000f30:	f000 fb12 	bl	8001558 <HAL_NVIC_EnableIRQ>

  /* Return function status */
  return status;
 8000f34:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
}
 8000f38:	4618      	mov	r0, r3
 8000f3a:	3738      	adds	r7, #56	@ 0x38
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	bd80      	pop	{r7, pc}
 8000f40:	44020c00 	.word	0x44020c00
 8000f44:	0a7c5ac5 	.word	0x0a7c5ac5
 8000f48:	20000494 	.word	0x20000494
 8000f4c:	40001400 	.word	0x40001400
 8000f50:	20000008 	.word	0x20000008

08000f54 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000f54:	b480      	push	{r7}
 8000f56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000f58:	bf00      	nop
 8000f5a:	e7fd      	b.n	8000f58 <NMI_Handler+0x4>

08000f5c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000f60:	bf00      	nop
 8000f62:	e7fd      	b.n	8000f60 <HardFault_Handler+0x4>

08000f64 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000f64:	b480      	push	{r7}
 8000f66:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f68:	bf00      	nop
 8000f6a:	e7fd      	b.n	8000f68 <MemManage_Handler+0x4>

08000f6c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f6c:	b480      	push	{r7}
 8000f6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f70:	bf00      	nop
 8000f72:	e7fd      	b.n	8000f70 <BusFault_Handler+0x4>

08000f74 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f74:	b480      	push	{r7}
 8000f76:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f78:	bf00      	nop
 8000f7a:	e7fd      	b.n	8000f78 <UsageFault_Handler+0x4>

08000f7c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f7c:	b480      	push	{r7}
 8000f7e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f80:	bf00      	nop
 8000f82:	46bd      	mov	sp, r7
 8000f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f88:	4770      	bx	lr

08000f8a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f8a:	b480      	push	{r7}
 8000f8c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f8e:	bf00      	nop
 8000f90:	46bd      	mov	sp, r7
 8000f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f96:	4770      	bx	lr

08000f98 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f98:	b480      	push	{r7}
 8000f9a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f9c:	bf00      	nop
 8000f9e:	46bd      	mov	sp, r7
 8000fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa4:	4770      	bx	lr

08000fa6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000fa6:	b480      	push	{r7}
 8000fa8:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000faa:	bf00      	nop
 8000fac:	46bd      	mov	sp, r7
 8000fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb2:	4770      	bx	lr

08000fb4 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000fb8:	4802      	ldr	r0, [pc, #8]	@ (8000fc4 <TIM2_IRQHandler+0x10>)
 8000fba:	f005 fec1 	bl	8006d40 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000fbe:	bf00      	nop
 8000fc0:	bd80      	pop	{r7, pc}
 8000fc2:	bf00      	nop
 8000fc4:	20000448 	.word	0x20000448

08000fc8 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8000fc8:	b580      	push	{r7, lr}
 8000fca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8000fcc:	4802      	ldr	r0, [pc, #8]	@ (8000fd8 <TIM7_IRQHandler+0x10>)
 8000fce:	f005 feb7 	bl	8006d40 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8000fd2:	bf00      	nop
 8000fd4:	bd80      	pop	{r7, pc}
 8000fd6:	bf00      	nop
 8000fd8:	20000494 	.word	0x20000494

08000fdc <SPI1_IRQHandler>:

/**
  * @brief This function handles SPI1 global interrupt.
  */
void SPI1_IRQHandler(void)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI1_IRQn 0 */

  /* USER CODE END SPI1_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi1);
 8000fe0:	4802      	ldr	r0, [pc, #8]	@ (8000fec <SPI1_IRQHandler+0x10>)
 8000fe2:	f005 fa4b 	bl	800647c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI1_IRQn 1 */

  /* USER CODE END SPI1_IRQn 1 */
}
 8000fe6:	bf00      	nop
 8000fe8:	bd80      	pop	{r7, pc}
 8000fea:	bf00      	nop
 8000fec:	20000340 	.word	0x20000340

08000ff0 <GPDMA2_Channel0_IRQHandler>:

/**
  * @brief This function handles GPDMA2 Channel 0 global interrupt.
  */
void GPDMA2_Channel0_IRQHandler(void)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN GPDMA2_Channel0_IRQn 0 */

  /* USER CODE END GPDMA2_Channel0_IRQn 0 */
  HAL_DMA_IRQHandler(&handle_GPDMA2_Channel0);
 8000ff4:	4802      	ldr	r0, [pc, #8]	@ (8001000 <GPDMA2_Channel0_IRQHandler+0x10>)
 8000ff6:	f000 fdd8 	bl	8001baa <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN GPDMA2_Channel0_IRQn 1 */

  /* USER CODE END GPDMA2_Channel0_IRQn 1 */
}
 8000ffa:	bf00      	nop
 8000ffc:	bd80      	pop	{r7, pc}
 8000ffe:	bf00      	nop
 8001000:	200003d0 	.word	0x200003d0

08001004 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001004:	b480      	push	{r7}
 8001006:	af00      	add	r7, sp, #0
  return 1;
 8001008:	2301      	movs	r3, #1
}
 800100a:	4618      	mov	r0, r3
 800100c:	46bd      	mov	sp, r7
 800100e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001012:	4770      	bx	lr

08001014 <_kill>:

int _kill(int pid, int sig)
{
 8001014:	b580      	push	{r7, lr}
 8001016:	b082      	sub	sp, #8
 8001018:	af00      	add	r7, sp, #0
 800101a:	6078      	str	r0, [r7, #4]
 800101c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800101e:	f021 f807 	bl	8022030 <__errno>
 8001022:	4603      	mov	r3, r0
 8001024:	2216      	movs	r2, #22
 8001026:	601a      	str	r2, [r3, #0]
  return -1;
 8001028:	f04f 33ff 	mov.w	r3, #4294967295
}
 800102c:	4618      	mov	r0, r3
 800102e:	3708      	adds	r7, #8
 8001030:	46bd      	mov	sp, r7
 8001032:	bd80      	pop	{r7, pc}

08001034 <_exit>:

void _exit (int status)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	b082      	sub	sp, #8
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800103c:	f04f 31ff 	mov.w	r1, #4294967295
 8001040:	6878      	ldr	r0, [r7, #4]
 8001042:	f7ff ffe7 	bl	8001014 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001046:	bf00      	nop
 8001048:	e7fd      	b.n	8001046 <_exit+0x12>

0800104a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800104a:	b580      	push	{r7, lr}
 800104c:	b086      	sub	sp, #24
 800104e:	af00      	add	r7, sp, #0
 8001050:	60f8      	str	r0, [r7, #12]
 8001052:	60b9      	str	r1, [r7, #8]
 8001054:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001056:	2300      	movs	r3, #0
 8001058:	617b      	str	r3, [r7, #20]
 800105a:	e00a      	b.n	8001072 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800105c:	f3af 8000 	nop.w
 8001060:	4601      	mov	r1, r0
 8001062:	68bb      	ldr	r3, [r7, #8]
 8001064:	1c5a      	adds	r2, r3, #1
 8001066:	60ba      	str	r2, [r7, #8]
 8001068:	b2ca      	uxtb	r2, r1
 800106a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800106c:	697b      	ldr	r3, [r7, #20]
 800106e:	3301      	adds	r3, #1
 8001070:	617b      	str	r3, [r7, #20]
 8001072:	697a      	ldr	r2, [r7, #20]
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	429a      	cmp	r2, r3
 8001078:	dbf0      	blt.n	800105c <_read+0x12>
  }

  return len;
 800107a:	687b      	ldr	r3, [r7, #4]
}
 800107c:	4618      	mov	r0, r3
 800107e:	3718      	adds	r7, #24
 8001080:	46bd      	mov	sp, r7
 8001082:	bd80      	pop	{r7, pc}

08001084 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001084:	b580      	push	{r7, lr}
 8001086:	b086      	sub	sp, #24
 8001088:	af00      	add	r7, sp, #0
 800108a:	60f8      	str	r0, [r7, #12]
 800108c:	60b9      	str	r1, [r7, #8]
 800108e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001090:	2300      	movs	r3, #0
 8001092:	617b      	str	r3, [r7, #20]
 8001094:	e009      	b.n	80010aa <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001096:	68bb      	ldr	r3, [r7, #8]
 8001098:	1c5a      	adds	r2, r3, #1
 800109a:	60ba      	str	r2, [r7, #8]
 800109c:	781b      	ldrb	r3, [r3, #0]
 800109e:	4618      	mov	r0, r3
 80010a0:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010a4:	697b      	ldr	r3, [r7, #20]
 80010a6:	3301      	adds	r3, #1
 80010a8:	617b      	str	r3, [r7, #20]
 80010aa:	697a      	ldr	r2, [r7, #20]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	429a      	cmp	r2, r3
 80010b0:	dbf1      	blt.n	8001096 <_write+0x12>
  }
  return len;
 80010b2:	687b      	ldr	r3, [r7, #4]
}
 80010b4:	4618      	mov	r0, r3
 80010b6:	3718      	adds	r7, #24
 80010b8:	46bd      	mov	sp, r7
 80010ba:	bd80      	pop	{r7, pc}

080010bc <_close>:

int _close(int file)
{
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80010c4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80010c8:	4618      	mov	r0, r3
 80010ca:	370c      	adds	r7, #12
 80010cc:	46bd      	mov	sp, r7
 80010ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d2:	4770      	bx	lr

080010d4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80010d4:	b480      	push	{r7}
 80010d6:	b083      	sub	sp, #12
 80010d8:	af00      	add	r7, sp, #0
 80010da:	6078      	str	r0, [r7, #4]
 80010dc:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80010de:	683b      	ldr	r3, [r7, #0]
 80010e0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80010e4:	605a      	str	r2, [r3, #4]
  return 0;
 80010e6:	2300      	movs	r3, #0
}
 80010e8:	4618      	mov	r0, r3
 80010ea:	370c      	adds	r7, #12
 80010ec:	46bd      	mov	sp, r7
 80010ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f2:	4770      	bx	lr

080010f4 <_isatty>:

int _isatty(int file)
{
 80010f4:	b480      	push	{r7}
 80010f6:	b083      	sub	sp, #12
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80010fc:	2301      	movs	r3, #1
}
 80010fe:	4618      	mov	r0, r3
 8001100:	370c      	adds	r7, #12
 8001102:	46bd      	mov	sp, r7
 8001104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001108:	4770      	bx	lr

0800110a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800110a:	b480      	push	{r7}
 800110c:	b085      	sub	sp, #20
 800110e:	af00      	add	r7, sp, #0
 8001110:	60f8      	str	r0, [r7, #12]
 8001112:	60b9      	str	r1, [r7, #8]
 8001114:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001116:	2300      	movs	r3, #0
}
 8001118:	4618      	mov	r0, r3
 800111a:	3714      	adds	r7, #20
 800111c:	46bd      	mov	sp, r7
 800111e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001122:	4770      	bx	lr

08001124 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001124:	b580      	push	{r7, lr}
 8001126:	b086      	sub	sp, #24
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800112c:	4a14      	ldr	r2, [pc, #80]	@ (8001180 <_sbrk+0x5c>)
 800112e:	4b15      	ldr	r3, [pc, #84]	@ (8001184 <_sbrk+0x60>)
 8001130:	1ad3      	subs	r3, r2, r3
 8001132:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001134:	697b      	ldr	r3, [r7, #20]
 8001136:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001138:	4b13      	ldr	r3, [pc, #76]	@ (8001188 <_sbrk+0x64>)
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	2b00      	cmp	r3, #0
 800113e:	d102      	bne.n	8001146 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001140:	4b11      	ldr	r3, [pc, #68]	@ (8001188 <_sbrk+0x64>)
 8001142:	4a12      	ldr	r2, [pc, #72]	@ (800118c <_sbrk+0x68>)
 8001144:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001146:	4b10      	ldr	r3, [pc, #64]	@ (8001188 <_sbrk+0x64>)
 8001148:	681a      	ldr	r2, [r3, #0]
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	4413      	add	r3, r2
 800114e:	693a      	ldr	r2, [r7, #16]
 8001150:	429a      	cmp	r2, r3
 8001152:	d207      	bcs.n	8001164 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001154:	f020 ff6c 	bl	8022030 <__errno>
 8001158:	4603      	mov	r3, r0
 800115a:	220c      	movs	r2, #12
 800115c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800115e:	f04f 33ff 	mov.w	r3, #4294967295
 8001162:	e009      	b.n	8001178 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001164:	4b08      	ldr	r3, [pc, #32]	@ (8001188 <_sbrk+0x64>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800116a:	4b07      	ldr	r3, [pc, #28]	@ (8001188 <_sbrk+0x64>)
 800116c:	681a      	ldr	r2, [r3, #0]
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	4413      	add	r3, r2
 8001172:	4a05      	ldr	r2, [pc, #20]	@ (8001188 <_sbrk+0x64>)
 8001174:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001176:	68fb      	ldr	r3, [r7, #12]
}
 8001178:	4618      	mov	r0, r3
 800117a:	3718      	adds	r7, #24
 800117c:	46bd      	mov	sp, r7
 800117e:	bd80      	pop	{r7, pc}
 8001180:	200a0000 	.word	0x200a0000
 8001184:	00000400 	.word	0x00000400
 8001188:	200004e0 	.word	0x200004e0
 800118c:	20002f68 	.word	0x20002f68

08001190 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8001190:	b480      	push	{r7}
 8001192:	b083      	sub	sp, #12
 8001194:	af00      	add	r7, sp, #0
  uint32_t reg_opsr;

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8001196:	4b35      	ldr	r3, [pc, #212]	@ (800126c <SystemInit+0xdc>)
 8001198:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800119c:	4a33      	ldr	r2, [pc, #204]	@ (800126c <SystemInit+0xdc>)
 800119e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80011a2:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR = RCC_CR_HSION;
 80011a6:	4b32      	ldr	r3, [pc, #200]	@ (8001270 <SystemInit+0xe0>)
 80011a8:	2201      	movs	r2, #1
 80011aa:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR1 = 0U;
 80011ac:	4b30      	ldr	r3, [pc, #192]	@ (8001270 <SystemInit+0xe0>)
 80011ae:	2200      	movs	r2, #0
 80011b0:	61da      	str	r2, [r3, #28]
  RCC->CFGR2 = 0U;
 80011b2:	4b2f      	ldr	r3, [pc, #188]	@ (8001270 <SystemInit+0xe0>)
 80011b4:	2200      	movs	r2, #0
 80011b6:	621a      	str	r2, [r3, #32]

  /* Reset HSEON, HSECSSON, HSEBYP, HSEEXT, HSIDIV, HSIKERON, CSION, CSIKERON, HSI48 and PLLxON bits */
#if defined(RCC_CR_PLL3ON)
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_HSECSSON | RCC_CR_HSEBYP | RCC_CR_HSEEXT | RCC_CR_HSIDIV | RCC_CR_HSIKERON | \
 80011b8:	4b2d      	ldr	r3, [pc, #180]	@ (8001270 <SystemInit+0xe0>)
 80011ba:	681a      	ldr	r2, [r3, #0]
 80011bc:	492c      	ldr	r1, [pc, #176]	@ (8001270 <SystemInit+0xe0>)
 80011be:	4b2d      	ldr	r3, [pc, #180]	@ (8001274 <SystemInit+0xe4>)
 80011c0:	4013      	ands	r3, r2
 80011c2:	600b      	str	r3, [r1, #0]
  RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_HSECSSON | RCC_CR_HSEBYP | RCC_CR_HSEEXT | RCC_CR_HSIDIV | RCC_CR_HSIKERON | \
               RCC_CR_CSION | RCC_CR_CSIKERON |RCC_CR_HSI48ON | RCC_CR_PLL1ON | RCC_CR_PLL2ON);
#endif

  /* Reset PLLxCFGR register */
  RCC->PLL1CFGR = 0U;
 80011c4:	4b2a      	ldr	r3, [pc, #168]	@ (8001270 <SystemInit+0xe0>)
 80011c6:	2200      	movs	r2, #0
 80011c8:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLL2CFGR = 0U;
 80011ca:	4b29      	ldr	r3, [pc, #164]	@ (8001270 <SystemInit+0xe0>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	62da      	str	r2, [r3, #44]	@ 0x2c
#if defined(RCC_CR_PLL3ON)
  RCC->PLL3CFGR = 0U;
 80011d0:	4b27      	ldr	r3, [pc, #156]	@ (8001270 <SystemInit+0xe0>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	631a      	str	r2, [r3, #48]	@ 0x30
#endif /* RCC_CR_PLL3ON */

  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280U;
 80011d6:	4b26      	ldr	r3, [pc, #152]	@ (8001270 <SystemInit+0xe0>)
 80011d8:	4a27      	ldr	r2, [pc, #156]	@ (8001278 <SystemInit+0xe8>)
 80011da:	635a      	str	r2, [r3, #52]	@ 0x34
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000U;
 80011dc:	4b24      	ldr	r3, [pc, #144]	@ (8001270 <SystemInit+0xe0>)
 80011de:	2200      	movs	r2, #0
 80011e0:	639a      	str	r2, [r3, #56]	@ 0x38
  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280U;
 80011e2:	4b23      	ldr	r3, [pc, #140]	@ (8001270 <SystemInit+0xe0>)
 80011e4:	4a24      	ldr	r2, [pc, #144]	@ (8001278 <SystemInit+0xe8>)
 80011e6:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL2FRACR register */
  RCC->PLL2FRACR = 0x00000000U;
 80011e8:	4b21      	ldr	r3, [pc, #132]	@ (8001270 <SystemInit+0xe0>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	641a      	str	r2, [r3, #64]	@ 0x40
#if defined(RCC_CR_PLL3ON)
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280U;
 80011ee:	4b20      	ldr	r3, [pc, #128]	@ (8001270 <SystemInit+0xe0>)
 80011f0:	4a21      	ldr	r2, [pc, #132]	@ (8001278 <SystemInit+0xe8>)
 80011f2:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000U;
 80011f4:	4b1e      	ldr	r3, [pc, #120]	@ (8001270 <SystemInit+0xe0>)
 80011f6:	2200      	movs	r2, #0
 80011f8:	649a      	str	r2, [r3, #72]	@ 0x48
#endif /* RCC_CR_PLL3ON */

  /* Reset HSEBYP bit */
  RCC->CR &= ~(RCC_CR_HSEBYP);
 80011fa:	4b1d      	ldr	r3, [pc, #116]	@ (8001270 <SystemInit+0xe0>)
 80011fc:	681b      	ldr	r3, [r3, #0]
 80011fe:	4a1c      	ldr	r2, [pc, #112]	@ (8001270 <SystemInit+0xe0>)
 8001200:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001204:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0U;
 8001206:	4b1a      	ldr	r3, [pc, #104]	@ (8001270 <SystemInit+0xe0>)
 8001208:	2200      	movs	r2, #0
 800120a:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the Vector Table location add offset address ------------------*/
  #ifdef VECT_TAB_SRAM
    SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
  #else
    SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800120c:	4b17      	ldr	r3, [pc, #92]	@ (800126c <SystemInit+0xdc>)
 800120e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8001212:	609a      	str	r2, [r3, #8]
  #endif /* VECT_TAB_SRAM */

  /* Check OPSR register to verify if there is an ongoing swap or option bytes update interrupted by a reset */
  reg_opsr = FLASH->OPSR & FLASH_OPSR_CODE_OP;
 8001214:	4b19      	ldr	r3, [pc, #100]	@ (800127c <SystemInit+0xec>)
 8001216:	699b      	ldr	r3, [r3, #24]
 8001218:	f003 4360 	and.w	r3, r3, #3758096384	@ 0xe0000000
 800121c:	607b      	str	r3, [r7, #4]
  if ((reg_opsr == FLASH_OPSR_CODE_OP) || (reg_opsr == (FLASH_OPSR_CODE_OP_2 | FLASH_OPSR_CODE_OP_1)))
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	f1b3 4f60 	cmp.w	r3, #3758096384	@ 0xe0000000
 8001224:	d003      	beq.n	800122e <SystemInit+0x9e>
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	f1b3 4f40 	cmp.w	r3, #3221225472	@ 0xc0000000
 800122c:	d117      	bne.n	800125e <SystemInit+0xce>
  {
    /* Check FLASH Option Control Register access */
    if ((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != 0U)
 800122e:	4b13      	ldr	r3, [pc, #76]	@ (800127c <SystemInit+0xec>)
 8001230:	69db      	ldr	r3, [r3, #28]
 8001232:	f003 0301 	and.w	r3, r3, #1
 8001236:	2b00      	cmp	r3, #0
 8001238:	d005      	beq.n	8001246 <SystemInit+0xb6>
    {
      /* Authorizes the Option Byte registers programming */
      FLASH->OPTKEYR = 0x08192A3BU;
 800123a:	4b10      	ldr	r3, [pc, #64]	@ (800127c <SystemInit+0xec>)
 800123c:	4a10      	ldr	r2, [pc, #64]	@ (8001280 <SystemInit+0xf0>)
 800123e:	60da      	str	r2, [r3, #12]
      FLASH->OPTKEYR = 0x4C5D6E7FU;
 8001240:	4b0e      	ldr	r3, [pc, #56]	@ (800127c <SystemInit+0xec>)
 8001242:	4a10      	ldr	r2, [pc, #64]	@ (8001284 <SystemInit+0xf4>)
 8001244:	60da      	str	r2, [r3, #12]
    }
    /* Launch the option bytes change operation */
    FLASH->OPTCR |= FLASH_OPTCR_OPTSTART;
 8001246:	4b0d      	ldr	r3, [pc, #52]	@ (800127c <SystemInit+0xec>)
 8001248:	69db      	ldr	r3, [r3, #28]
 800124a:	4a0c      	ldr	r2, [pc, #48]	@ (800127c <SystemInit+0xec>)
 800124c:	f043 0302 	orr.w	r3, r3, #2
 8001250:	61d3      	str	r3, [r2, #28]

    /* Lock the FLASH Option Control Register access */
    FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 8001252:	4b0a      	ldr	r3, [pc, #40]	@ (800127c <SystemInit+0xec>)
 8001254:	69db      	ldr	r3, [r3, #28]
 8001256:	4a09      	ldr	r2, [pc, #36]	@ (800127c <SystemInit+0xec>)
 8001258:	f043 0301 	orr.w	r3, r3, #1
 800125c:	61d3      	str	r3, [r2, #28]
  }
}
 800125e:	bf00      	nop
 8001260:	370c      	adds	r7, #12
 8001262:	46bd      	mov	sp, r7
 8001264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001268:	4770      	bx	lr
 800126a:	bf00      	nop
 800126c:	e000ed00 	.word	0xe000ed00
 8001270:	44020c00 	.word	0x44020c00
 8001274:	eae2eae3 	.word	0xeae2eae3
 8001278:	01010280 	.word	0x01010280
 800127c:	40022000 	.word	0x40022000
 8001280:	08192a3b 	.word	0x08192a3b
 8001284:	4c5d6e7f 	.word	0x4c5d6e7f

08001288 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001288:	480d      	ldr	r0, [pc, #52]	@ (80012c0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800128a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800128c:	f7ff ff80 	bl	8001190 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001290:	480c      	ldr	r0, [pc, #48]	@ (80012c4 <LoopForever+0x6>)
  ldr r1, =_edata
 8001292:	490d      	ldr	r1, [pc, #52]	@ (80012c8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001294:	4a0d      	ldr	r2, [pc, #52]	@ (80012cc <LoopForever+0xe>)
  movs r3, #0
 8001296:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001298:	e002      	b.n	80012a0 <LoopCopyDataInit>

0800129a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800129a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800129c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800129e:	3304      	adds	r3, #4

080012a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80012a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80012a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80012a4:	d3f9      	bcc.n	800129a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80012a6:	4a0a      	ldr	r2, [pc, #40]	@ (80012d0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80012a8:	4c0a      	ldr	r4, [pc, #40]	@ (80012d4 <LoopForever+0x16>)
  movs r3, #0
 80012aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80012ac:	e001      	b.n	80012b2 <LoopFillZerobss>

080012ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80012ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80012b0:	3204      	adds	r2, #4

080012b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80012b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80012b4:	d3fb      	bcc.n	80012ae <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80012b6:	f020 fec1 	bl	802203c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80012ba:	f7ff fa61 	bl	8000780 <main>

080012be <LoopForever>:

LoopForever:
    b LoopForever
 80012be:	e7fe      	b.n	80012be <LoopForever>
  ldr   r0, =_estack
 80012c0:	200a0000 	.word	0x200a0000
  ldr r0, =_sdata
 80012c4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80012c8:	200000f4 	.word	0x200000f4
  ldr r2, =_sidata
 80012cc:	0802897c 	.word	0x0802897c
  ldr r2, =_sbss
 80012d0:	20000300 	.word	0x20000300
  ldr r4, =_ebss
 80012d4:	20002f68 	.word	0x20002f68

080012d8 <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80012d8:	e7fe      	b.n	80012d8 <ADC1_IRQHandler>
	...

080012dc <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80012dc:	b580      	push	{r7, lr}
 80012de:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80012e0:	2003      	movs	r0, #3
 80012e2:	f000 f914 	bl	800150e <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 80012e6:	f002 f8f3 	bl	80034d0 <HAL_RCC_GetSysClockFreq>
 80012ea:	4602      	mov	r2, r0
 80012ec:	4b0c      	ldr	r3, [pc, #48]	@ (8001320 <HAL_Init+0x44>)
 80012ee:	6a1b      	ldr	r3, [r3, #32]
 80012f0:	f003 030f 	and.w	r3, r3, #15
 80012f4:	490b      	ldr	r1, [pc, #44]	@ (8001324 <HAL_Init+0x48>)
 80012f6:	5ccb      	ldrb	r3, [r1, r3]
 80012f8:	fa22 f303 	lsr.w	r3, r2, r3
 80012fc:	4a0a      	ldr	r2, [pc, #40]	@ (8001328 <HAL_Init+0x4c>)
 80012fe:	6013      	str	r3, [r2, #0]

  /* Select HCLK as SysTick clock source */
  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 8001300:	2004      	movs	r0, #4
 8001302:	f000 f937 	bl	8001574 <HAL_SYSTICK_CLKSourceConfig>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8001306:	200f      	movs	r0, #15
 8001308:	f7ff fdae 	bl	8000e68 <HAL_InitTick>
 800130c:	4603      	mov	r3, r0
 800130e:	2b00      	cmp	r3, #0
 8001310:	d001      	beq.n	8001316 <HAL_Init+0x3a>
  {
    return HAL_ERROR;
 8001312:	2301      	movs	r3, #1
 8001314:	e002      	b.n	800131c <HAL_Init+0x40>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8001316:	f7ff fc71 	bl	8000bfc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800131a:	2300      	movs	r3, #0
}
 800131c:	4618      	mov	r0, r3
 800131e:	bd80      	pop	{r7, pc}
 8001320:	44020c00 	.word	0x44020c00
 8001324:	08023e18 	.word	0x08023e18
 8001328:	20000004 	.word	0x20000004

0800132c <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800132c:	b480      	push	{r7}
 800132e:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8001330:	4b06      	ldr	r3, [pc, #24]	@ (800134c <HAL_IncTick+0x20>)
 8001332:	781b      	ldrb	r3, [r3, #0]
 8001334:	461a      	mov	r2, r3
 8001336:	4b06      	ldr	r3, [pc, #24]	@ (8001350 <HAL_IncTick+0x24>)
 8001338:	681b      	ldr	r3, [r3, #0]
 800133a:	4413      	add	r3, r2
 800133c:	4a04      	ldr	r2, [pc, #16]	@ (8001350 <HAL_IncTick+0x24>)
 800133e:	6013      	str	r3, [r2, #0]
}
 8001340:	bf00      	nop
 8001342:	46bd      	mov	sp, r7
 8001344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001348:	4770      	bx	lr
 800134a:	bf00      	nop
 800134c:	2000000c 	.word	0x2000000c
 8001350:	200004e4 	.word	0x200004e4

08001354 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001354:	b480      	push	{r7}
 8001356:	af00      	add	r7, sp, #0
  return uwTick;
 8001358:	4b03      	ldr	r3, [pc, #12]	@ (8001368 <HAL_GetTick+0x14>)
 800135a:	681b      	ldr	r3, [r3, #0]
}
 800135c:	4618      	mov	r0, r3
 800135e:	46bd      	mov	sp, r7
 8001360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001364:	4770      	bx	lr
 8001366:	bf00      	nop
 8001368:	200004e4 	.word	0x200004e4

0800136c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800136c:	b580      	push	{r7, lr}
 800136e:	b084      	sub	sp, #16
 8001370:	af00      	add	r7, sp, #0
 8001372:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001374:	f7ff ffee 	bl	8001354 <HAL_GetTick>
 8001378:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800137e:	68fb      	ldr	r3, [r7, #12]
 8001380:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001384:	d005      	beq.n	8001392 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001386:	4b0a      	ldr	r3, [pc, #40]	@ (80013b0 <HAL_Delay+0x44>)
 8001388:	781b      	ldrb	r3, [r3, #0]
 800138a:	461a      	mov	r2, r3
 800138c:	68fb      	ldr	r3, [r7, #12]
 800138e:	4413      	add	r3, r2
 8001390:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8001392:	bf00      	nop
 8001394:	f7ff ffde 	bl	8001354 <HAL_GetTick>
 8001398:	4602      	mov	r2, r0
 800139a:	68bb      	ldr	r3, [r7, #8]
 800139c:	1ad3      	subs	r3, r2, r3
 800139e:	68fa      	ldr	r2, [r7, #12]
 80013a0:	429a      	cmp	r2, r3
 80013a2:	d8f7      	bhi.n	8001394 <HAL_Delay+0x28>
  {
  }
}
 80013a4:	bf00      	nop
 80013a6:	bf00      	nop
 80013a8:	3710      	adds	r7, #16
 80013aa:	46bd      	mov	sp, r7
 80013ac:	bd80      	pop	{r7, pc}
 80013ae:	bf00      	nop
 80013b0:	2000000c 	.word	0x2000000c

080013b4 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80013b4:	b480      	push	{r7}
 80013b6:	b085      	sub	sp, #20
 80013b8:	af00      	add	r7, sp, #0
 80013ba:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	f003 0307 	and.w	r3, r3, #7
 80013c2:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80013c4:	4b0c      	ldr	r3, [pc, #48]	@ (80013f8 <__NVIC_SetPriorityGrouping+0x44>)
 80013c6:	68db      	ldr	r3, [r3, #12]
 80013c8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80013ca:	68ba      	ldr	r2, [r7, #8]
 80013cc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80013d0:	4013      	ands	r3, r2
 80013d2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80013d4:	68fb      	ldr	r3, [r7, #12]
 80013d6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80013d8:	68bb      	ldr	r3, [r7, #8]
 80013da:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80013dc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80013e0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80013e4:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80013e6:	4a04      	ldr	r2, [pc, #16]	@ (80013f8 <__NVIC_SetPriorityGrouping+0x44>)
 80013e8:	68bb      	ldr	r3, [r7, #8]
 80013ea:	60d3      	str	r3, [r2, #12]
}
 80013ec:	bf00      	nop
 80013ee:	3714      	adds	r7, #20
 80013f0:	46bd      	mov	sp, r7
 80013f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f6:	4770      	bx	lr
 80013f8:	e000ed00 	.word	0xe000ed00

080013fc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80013fc:	b480      	push	{r7}
 80013fe:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001400:	4b04      	ldr	r3, [pc, #16]	@ (8001414 <__NVIC_GetPriorityGrouping+0x18>)
 8001402:	68db      	ldr	r3, [r3, #12]
 8001404:	0a1b      	lsrs	r3, r3, #8
 8001406:	f003 0307 	and.w	r3, r3, #7
}
 800140a:	4618      	mov	r0, r3
 800140c:	46bd      	mov	sp, r7
 800140e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001412:	4770      	bx	lr
 8001414:	e000ed00 	.word	0xe000ed00

08001418 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001418:	b480      	push	{r7}
 800141a:	b083      	sub	sp, #12
 800141c:	af00      	add	r7, sp, #0
 800141e:	4603      	mov	r3, r0
 8001420:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001422:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001426:	2b00      	cmp	r3, #0
 8001428:	db0b      	blt.n	8001442 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800142a:	88fb      	ldrh	r3, [r7, #6]
 800142c:	f003 021f 	and.w	r2, r3, #31
 8001430:	4907      	ldr	r1, [pc, #28]	@ (8001450 <__NVIC_EnableIRQ+0x38>)
 8001432:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001436:	095b      	lsrs	r3, r3, #5
 8001438:	2001      	movs	r0, #1
 800143a:	fa00 f202 	lsl.w	r2, r0, r2
 800143e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8001442:	bf00      	nop
 8001444:	370c      	adds	r7, #12
 8001446:	46bd      	mov	sp, r7
 8001448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144c:	4770      	bx	lr
 800144e:	bf00      	nop
 8001450:	e000e100 	.word	0xe000e100

08001454 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001454:	b480      	push	{r7}
 8001456:	b083      	sub	sp, #12
 8001458:	af00      	add	r7, sp, #0
 800145a:	4603      	mov	r3, r0
 800145c:	6039      	str	r1, [r7, #0]
 800145e:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8001460:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001464:	2b00      	cmp	r3, #0
 8001466:	db0a      	blt.n	800147e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IPR[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001468:	683b      	ldr	r3, [r7, #0]
 800146a:	b2da      	uxtb	r2, r3
 800146c:	490c      	ldr	r1, [pc, #48]	@ (80014a0 <__NVIC_SetPriority+0x4c>)
 800146e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001472:	0112      	lsls	r2, r2, #4
 8001474:	b2d2      	uxtb	r2, r2
 8001476:	440b      	add	r3, r1
 8001478:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800147c:	e00a      	b.n	8001494 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800147e:	683b      	ldr	r3, [r7, #0]
 8001480:	b2da      	uxtb	r2, r3
 8001482:	4908      	ldr	r1, [pc, #32]	@ (80014a4 <__NVIC_SetPriority+0x50>)
 8001484:	88fb      	ldrh	r3, [r7, #6]
 8001486:	f003 030f 	and.w	r3, r3, #15
 800148a:	3b04      	subs	r3, #4
 800148c:	0112      	lsls	r2, r2, #4
 800148e:	b2d2      	uxtb	r2, r2
 8001490:	440b      	add	r3, r1
 8001492:	761a      	strb	r2, [r3, #24]
}
 8001494:	bf00      	nop
 8001496:	370c      	adds	r7, #12
 8001498:	46bd      	mov	sp, r7
 800149a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800149e:	4770      	bx	lr
 80014a0:	e000e100 	.word	0xe000e100
 80014a4:	e000ed00 	.word	0xe000ed00

080014a8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80014a8:	b480      	push	{r7}
 80014aa:	b089      	sub	sp, #36	@ 0x24
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	60f8      	str	r0, [r7, #12]
 80014b0:	60b9      	str	r1, [r7, #8]
 80014b2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	f003 0307 	and.w	r3, r3, #7
 80014ba:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80014bc:	69fb      	ldr	r3, [r7, #28]
 80014be:	f1c3 0307 	rsb	r3, r3, #7
 80014c2:	2b04      	cmp	r3, #4
 80014c4:	bf28      	it	cs
 80014c6:	2304      	movcs	r3, #4
 80014c8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80014ca:	69fb      	ldr	r3, [r7, #28]
 80014cc:	3304      	adds	r3, #4
 80014ce:	2b06      	cmp	r3, #6
 80014d0:	d902      	bls.n	80014d8 <NVIC_EncodePriority+0x30>
 80014d2:	69fb      	ldr	r3, [r7, #28]
 80014d4:	3b03      	subs	r3, #3
 80014d6:	e000      	b.n	80014da <NVIC_EncodePriority+0x32>
 80014d8:	2300      	movs	r3, #0
 80014da:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80014dc:	f04f 32ff 	mov.w	r2, #4294967295
 80014e0:	69bb      	ldr	r3, [r7, #24]
 80014e2:	fa02 f303 	lsl.w	r3, r2, r3
 80014e6:	43da      	mvns	r2, r3
 80014e8:	68bb      	ldr	r3, [r7, #8]
 80014ea:	401a      	ands	r2, r3
 80014ec:	697b      	ldr	r3, [r7, #20]
 80014ee:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80014f0:	f04f 31ff 	mov.w	r1, #4294967295
 80014f4:	697b      	ldr	r3, [r7, #20]
 80014f6:	fa01 f303 	lsl.w	r3, r1, r3
 80014fa:	43d9      	mvns	r1, r3
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001500:	4313      	orrs	r3, r2
         );
}
 8001502:	4618      	mov	r0, r3
 8001504:	3724      	adds	r7, #36	@ 0x24
 8001506:	46bd      	mov	sp, r7
 8001508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800150c:	4770      	bx	lr

0800150e <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800150e:	b580      	push	{r7, lr}
 8001510:	b082      	sub	sp, #8
 8001512:	af00      	add	r7, sp, #0
 8001514:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001516:	6878      	ldr	r0, [r7, #4]
 8001518:	f7ff ff4c 	bl	80013b4 <__NVIC_SetPriorityGrouping>
}
 800151c:	bf00      	nop
 800151e:	3708      	adds	r7, #8
 8001520:	46bd      	mov	sp, r7
 8001522:	bd80      	pop	{r7, pc}

08001524 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001524:	b580      	push	{r7, lr}
 8001526:	b086      	sub	sp, #24
 8001528:	af00      	add	r7, sp, #0
 800152a:	4603      	mov	r3, r0
 800152c:	60b9      	str	r1, [r7, #8]
 800152e:	607a      	str	r2, [r7, #4]
 8001530:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8001532:	f7ff ff63 	bl	80013fc <__NVIC_GetPriorityGrouping>
 8001536:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001538:	687a      	ldr	r2, [r7, #4]
 800153a:	68b9      	ldr	r1, [r7, #8]
 800153c:	6978      	ldr	r0, [r7, #20]
 800153e:	f7ff ffb3 	bl	80014a8 <NVIC_EncodePriority>
 8001542:	4602      	mov	r2, r0
 8001544:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001548:	4611      	mov	r1, r2
 800154a:	4618      	mov	r0, r3
 800154c:	f7ff ff82 	bl	8001454 <__NVIC_SetPriority>
}
 8001550:	bf00      	nop
 8001552:	3718      	adds	r7, #24
 8001554:	46bd      	mov	sp, r7
 8001556:	bd80      	pop	{r7, pc}

08001558 <HAL_NVIC_EnableIRQ>:
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate
  *          CMSIS device file (stm32h5xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001558:	b580      	push	{r7, lr}
 800155a:	b082      	sub	sp, #8
 800155c:	af00      	add	r7, sp, #0
 800155e:	4603      	mov	r3, r0
 8001560:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001562:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001566:	4618      	mov	r0, r3
 8001568:	f7ff ff56 	bl	8001418 <__NVIC_EnableIRQ>
}
 800156c:	bf00      	nop
 800156e:	3708      	adds	r7, #8
 8001570:	46bd      	mov	sp, r7
 8001572:	bd80      	pop	{r7, pc}

08001574 <HAL_SYSTICK_CLKSourceConfig>:
  *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
  *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock source.
  * @retval None
  */
void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
{
 8001574:	b480      	push	{r7}
 8001576:	b083      	sub	sp, #12
 8001578:	af00      	add	r7, sp, #0
 800157a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
  switch (CLKSource)
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	2b04      	cmp	r3, #4
 8001580:	d844      	bhi.n	800160c <HAL_SYSTICK_CLKSourceConfig+0x98>
 8001582:	a201      	add	r2, pc, #4	@ (adr r2, 8001588 <HAL_SYSTICK_CLKSourceConfig+0x14>)
 8001584:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001588:	080015ab 	.word	0x080015ab
 800158c:	080015c9 	.word	0x080015c9
 8001590:	080015eb 	.word	0x080015eb
 8001594:	0800160d 	.word	0x0800160d
 8001598:	0800159d 	.word	0x0800159d
  {
    /* Select HCLK as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK:
      SET_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 800159c:	4b1f      	ldr	r3, [pc, #124]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	4a1e      	ldr	r2, [pc, #120]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015a2:	f043 0304 	orr.w	r3, r3, #4
 80015a6:	6013      	str	r3, [r2, #0]
      break;
 80015a8:	e031      	b.n	800160e <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select HCLK_DIV8 as Systick clock source */
    case SYSTICK_CLKSOURCE_HCLK_DIV8:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 80015aa:	4b1c      	ldr	r3, [pc, #112]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	4a1b      	ldr	r2, [pc, #108]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015b0:	f023 0304 	bic.w	r3, r3, #4
 80015b4:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, (0x00000000U));
 80015b6:	4b1a      	ldr	r3, [pc, #104]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015b8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80015bc:	4a18      	ldr	r2, [pc, #96]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015be:	f023 030c 	bic.w	r3, r3, #12
 80015c2:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 80015c6:	e022      	b.n	800160e <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSI as Systick clock source */
    case SYSTICK_CLKSOURCE_LSI:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 80015c8:	4b14      	ldr	r3, [pc, #80]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	4a13      	ldr	r2, [pc, #76]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015ce:	f023 0304 	bic.w	r3, r3, #4
 80015d2:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, RCC_CCIPR4_SYSTICKSEL_0);
 80015d4:	4b12      	ldr	r3, [pc, #72]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015d6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80015da:	f023 030c 	bic.w	r3, r3, #12
 80015de:	4a10      	ldr	r2, [pc, #64]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015e0:	f043 0304 	orr.w	r3, r3, #4
 80015e4:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 80015e8:	e011      	b.n	800160e <HAL_SYSTICK_CLKSourceConfig+0x9a>
    /* Select LSE as Systick clock source */
    case SYSTICK_CLKSOURCE_LSE:
      CLEAR_BIT(SysTick->CTRL, SYSTICK_CLKSOURCE_HCLK);
 80015ea:	4b0c      	ldr	r3, [pc, #48]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	4a0b      	ldr	r2, [pc, #44]	@ (800161c <HAL_SYSTICK_CLKSourceConfig+0xa8>)
 80015f0:	f023 0304 	bic.w	r3, r3, #4
 80015f4:	6013      	str	r3, [r2, #0]
      MODIFY_REG(RCC->CCIPR4, RCC_CCIPR4_SYSTICKSEL, RCC_CCIPR4_SYSTICKSEL_1);
 80015f6:	4b0a      	ldr	r3, [pc, #40]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 80015f8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80015fc:	f023 030c 	bic.w	r3, r3, #12
 8001600:	4a07      	ldr	r2, [pc, #28]	@ (8001620 <HAL_SYSTICK_CLKSourceConfig+0xac>)
 8001602:	f043 0308 	orr.w	r3, r3, #8
 8001606:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
      break;
 800160a:	e000      	b.n	800160e <HAL_SYSTICK_CLKSourceConfig+0x9a>
    default:
      /* Nothing to do */
      break;
 800160c:	bf00      	nop
  }
}
 800160e:	bf00      	nop
 8001610:	370c      	adds	r7, #12
 8001612:	46bd      	mov	sp, r7
 8001614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001618:	4770      	bx	lr
 800161a:	bf00      	nop
 800161c:	e000e010 	.word	0xe000e010
 8001620:	44020c00 	.word	0x44020c00

08001624 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001624:	b580      	push	{r7, lr}
 8001626:	b082      	sub	sp, #8
 8001628:	af00      	add	r7, sp, #0
 800162a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	2b00      	cmp	r3, #0
 8001630:	d101      	bne.n	8001636 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001632:	2301      	movs	r3, #1
 8001634:	e054      	b.n	80016e0 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	7f5b      	ldrb	r3, [r3, #29]
 800163a:	b2db      	uxtb	r3, r3
 800163c:	2b00      	cmp	r3, #0
 800163e:	d105      	bne.n	800164c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	2200      	movs	r2, #0
 8001644:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001646:	6878      	ldr	r0, [r7, #4]
 8001648:	f7ff fae0 	bl	8000c0c <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	2202      	movs	r2, #2
 8001650:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	791b      	ldrb	r3, [r3, #4]
 8001656:	2b00      	cmp	r3, #0
 8001658:	d10c      	bne.n	8001674 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	4a22      	ldr	r2, [pc, #136]	@ (80016e8 <HAL_CRC_Init+0xc4>)
 8001660:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	689a      	ldr	r2, [r3, #8]
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	f022 0218 	bic.w	r2, r2, #24
 8001670:	609a      	str	r2, [r3, #8]
 8001672:	e00c      	b.n	800168e <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	6899      	ldr	r1, [r3, #8]
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	68db      	ldr	r3, [r3, #12]
 800167c:	461a      	mov	r2, r3
 800167e:	6878      	ldr	r0, [r7, #4]
 8001680:	f000 f834 	bl	80016ec <HAL_CRCEx_Polynomial_Set>
 8001684:	4603      	mov	r3, r0
 8001686:	2b00      	cmp	r3, #0
 8001688:	d001      	beq.n	800168e <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800168a:	2301      	movs	r3, #1
 800168c:	e028      	b.n	80016e0 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	795b      	ldrb	r3, [r3, #5]
 8001692:	2b00      	cmp	r3, #0
 8001694:	d105      	bne.n	80016a2 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	f04f 32ff 	mov.w	r2, #4294967295
 800169e:	611a      	str	r2, [r3, #16]
 80016a0:	e004      	b.n	80016ac <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 80016a2:	687b      	ldr	r3, [r7, #4]
 80016a4:	681b      	ldr	r3, [r3, #0]
 80016a6:	687a      	ldr	r2, [r7, #4]
 80016a8:	6912      	ldr	r2, [r2, #16]
 80016aa:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	689b      	ldr	r3, [r3, #8]
 80016b2:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	695a      	ldr	r2, [r3, #20]
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	430a      	orrs	r2, r1
 80016c0:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	689b      	ldr	r3, [r3, #8]
 80016c8:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	699a      	ldr	r2, [r3, #24]
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	430a      	orrs	r2, r1
 80016d6:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	2201      	movs	r2, #1
 80016dc:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80016de:	2300      	movs	r3, #0
}
 80016e0:	4618      	mov	r0, r3
 80016e2:	3708      	adds	r7, #8
 80016e4:	46bd      	mov	sp, r7
 80016e6:	bd80      	pop	{r7, pc}
 80016e8:	04c11db7 	.word	0x04c11db7

080016ec <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80016ec:	b480      	push	{r7}
 80016ee:	b087      	sub	sp, #28
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	60f8      	str	r0, [r7, #12]
 80016f4:	60b9      	str	r1, [r7, #8]
 80016f6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80016f8:	2300      	movs	r3, #0
 80016fa:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80016fc:	231f      	movs	r3, #31
 80016fe:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8001700:	68bb      	ldr	r3, [r7, #8]
 8001702:	f003 0301 	and.w	r3, r3, #1
 8001706:	2b00      	cmp	r3, #0
 8001708:	d102      	bne.n	8001710 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 800170a:	2301      	movs	r3, #1
 800170c:	75fb      	strb	r3, [r7, #23]
 800170e:	e063      	b.n	80017d8 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8001710:	bf00      	nop
 8001712:	693b      	ldr	r3, [r7, #16]
 8001714:	1e5a      	subs	r2, r3, #1
 8001716:	613a      	str	r2, [r7, #16]
 8001718:	2b00      	cmp	r3, #0
 800171a:	d009      	beq.n	8001730 <HAL_CRCEx_Polynomial_Set+0x44>
 800171c:	693b      	ldr	r3, [r7, #16]
 800171e:	f003 031f 	and.w	r3, r3, #31
 8001722:	68ba      	ldr	r2, [r7, #8]
 8001724:	fa22 f303 	lsr.w	r3, r2, r3
 8001728:	f003 0301 	and.w	r3, r3, #1
 800172c:	2b00      	cmp	r3, #0
 800172e:	d0f0      	beq.n	8001712 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	2b18      	cmp	r3, #24
 8001734:	d846      	bhi.n	80017c4 <HAL_CRCEx_Polynomial_Set+0xd8>
 8001736:	a201      	add	r2, pc, #4	@ (adr r2, 800173c <HAL_CRCEx_Polynomial_Set+0x50>)
 8001738:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800173c:	080017cb 	.word	0x080017cb
 8001740:	080017c5 	.word	0x080017c5
 8001744:	080017c5 	.word	0x080017c5
 8001748:	080017c5 	.word	0x080017c5
 800174c:	080017c5 	.word	0x080017c5
 8001750:	080017c5 	.word	0x080017c5
 8001754:	080017c5 	.word	0x080017c5
 8001758:	080017c5 	.word	0x080017c5
 800175c:	080017b9 	.word	0x080017b9
 8001760:	080017c5 	.word	0x080017c5
 8001764:	080017c5 	.word	0x080017c5
 8001768:	080017c5 	.word	0x080017c5
 800176c:	080017c5 	.word	0x080017c5
 8001770:	080017c5 	.word	0x080017c5
 8001774:	080017c5 	.word	0x080017c5
 8001778:	080017c5 	.word	0x080017c5
 800177c:	080017ad 	.word	0x080017ad
 8001780:	080017c5 	.word	0x080017c5
 8001784:	080017c5 	.word	0x080017c5
 8001788:	080017c5 	.word	0x080017c5
 800178c:	080017c5 	.word	0x080017c5
 8001790:	080017c5 	.word	0x080017c5
 8001794:	080017c5 	.word	0x080017c5
 8001798:	080017c5 	.word	0x080017c5
 800179c:	080017a1 	.word	0x080017a1
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 80017a0:	693b      	ldr	r3, [r7, #16]
 80017a2:	2b06      	cmp	r3, #6
 80017a4:	d913      	bls.n	80017ce <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 80017a6:	2301      	movs	r3, #1
 80017a8:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80017aa:	e010      	b.n	80017ce <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 80017ac:	693b      	ldr	r3, [r7, #16]
 80017ae:	2b07      	cmp	r3, #7
 80017b0:	d90f      	bls.n	80017d2 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 80017b2:	2301      	movs	r3, #1
 80017b4:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80017b6:	e00c      	b.n	80017d2 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 80017b8:	693b      	ldr	r3, [r7, #16]
 80017ba:	2b0f      	cmp	r3, #15
 80017bc:	d90b      	bls.n	80017d6 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 80017be:	2301      	movs	r3, #1
 80017c0:	75fb      	strb	r3, [r7, #23]
        }
        break;
 80017c2:	e008      	b.n	80017d6 <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 80017c4:	2301      	movs	r3, #1
 80017c6:	75fb      	strb	r3, [r7, #23]
        break;
 80017c8:	e006      	b.n	80017d8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80017ca:	bf00      	nop
 80017cc:	e004      	b.n	80017d8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80017ce:	bf00      	nop
 80017d0:	e002      	b.n	80017d8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80017d2:	bf00      	nop
 80017d4:	e000      	b.n	80017d8 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80017d6:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80017d8:	7dfb      	ldrb	r3, [r7, #23]
 80017da:	2b00      	cmp	r3, #0
 80017dc:	d10d      	bne.n	80017fa <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80017de:	68fb      	ldr	r3, [r7, #12]
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	68ba      	ldr	r2, [r7, #8]
 80017e4:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	689b      	ldr	r3, [r3, #8]
 80017ec:	f023 0118 	bic.w	r1, r3, #24
 80017f0:	68fb      	ldr	r3, [r7, #12]
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	687a      	ldr	r2, [r7, #4]
 80017f6:	430a      	orrs	r2, r1
 80017f8:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80017fa:	7dfb      	ldrb	r3, [r7, #23]
}
 80017fc:	4618      	mov	r0, r3
 80017fe:	371c      	adds	r7, #28
 8001800:	46bd      	mov	sp, r7
 8001802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001806:	4770      	bx	lr

08001808 <HAL_DMA_Init>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *const hdma)
{
 8001808:	b580      	push	{r7, lr}
 800180a:	b084      	sub	sp, #16
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
  /* Get tick number */
  uint32_t tickstart = HAL_GetTick();
 8001810:	f7ff fda0 	bl	8001354 <HAL_GetTick>
 8001814:	60f8      	str	r0, [r7, #12]

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	2b00      	cmp	r3, #0
 800181a:	d101      	bne.n	8001820 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 800181c:	2301      	movs	r3, #1
 800181e:	e0f0      	b.n	8001a02 <HAL_DMA_Init+0x1fa>
  if (hdma->Init.Mode == DMA_PFCTRL)
  {
    assert_param(IS_DMA_PFREQ_INSTANCE(hdma->Instance));
  }
  /* Check DMA channel instance */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	681b      	ldr	r3, [r3, #0]
 8001824:	4a79      	ldr	r2, [pc, #484]	@ (8001a0c <HAL_DMA_Init+0x204>)
 8001826:	4293      	cmp	r3, r2
 8001828:	f000 809f 	beq.w	800196a <HAL_DMA_Init+0x162>
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	681b      	ldr	r3, [r3, #0]
 8001830:	4a77      	ldr	r2, [pc, #476]	@ (8001a10 <HAL_DMA_Init+0x208>)
 8001832:	4293      	cmp	r3, r2
 8001834:	f000 8099 	beq.w	800196a <HAL_DMA_Init+0x162>
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	4a75      	ldr	r2, [pc, #468]	@ (8001a14 <HAL_DMA_Init+0x20c>)
 800183e:	4293      	cmp	r3, r2
 8001840:	f000 8093 	beq.w	800196a <HAL_DMA_Init+0x162>
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	4a73      	ldr	r2, [pc, #460]	@ (8001a18 <HAL_DMA_Init+0x210>)
 800184a:	4293      	cmp	r3, r2
 800184c:	f000 808d 	beq.w	800196a <HAL_DMA_Init+0x162>
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a71      	ldr	r2, [pc, #452]	@ (8001a1c <HAL_DMA_Init+0x214>)
 8001856:	4293      	cmp	r3, r2
 8001858:	f000 8087 	beq.w	800196a <HAL_DMA_Init+0x162>
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	681b      	ldr	r3, [r3, #0]
 8001860:	4a6f      	ldr	r2, [pc, #444]	@ (8001a20 <HAL_DMA_Init+0x218>)
 8001862:	4293      	cmp	r3, r2
 8001864:	f000 8081 	beq.w	800196a <HAL_DMA_Init+0x162>
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	681b      	ldr	r3, [r3, #0]
 800186c:	4a6d      	ldr	r2, [pc, #436]	@ (8001a24 <HAL_DMA_Init+0x21c>)
 800186e:	4293      	cmp	r3, r2
 8001870:	d07b      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	4a6c      	ldr	r2, [pc, #432]	@ (8001a28 <HAL_DMA_Init+0x220>)
 8001878:	4293      	cmp	r3, r2
 800187a:	d076      	beq.n	800196a <HAL_DMA_Init+0x162>
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	4a6a      	ldr	r2, [pc, #424]	@ (8001a2c <HAL_DMA_Init+0x224>)
 8001882:	4293      	cmp	r3, r2
 8001884:	d071      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	4a69      	ldr	r2, [pc, #420]	@ (8001a30 <HAL_DMA_Init+0x228>)
 800188c:	4293      	cmp	r3, r2
 800188e:	d06c      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	681b      	ldr	r3, [r3, #0]
 8001894:	4a67      	ldr	r2, [pc, #412]	@ (8001a34 <HAL_DMA_Init+0x22c>)
 8001896:	4293      	cmp	r3, r2
 8001898:	d067      	beq.n	800196a <HAL_DMA_Init+0x162>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	4a66      	ldr	r2, [pc, #408]	@ (8001a38 <HAL_DMA_Init+0x230>)
 80018a0:	4293      	cmp	r3, r2
 80018a2:	d062      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4a64      	ldr	r2, [pc, #400]	@ (8001a3c <HAL_DMA_Init+0x234>)
 80018aa:	4293      	cmp	r3, r2
 80018ac:	d05d      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	4a63      	ldr	r2, [pc, #396]	@ (8001a40 <HAL_DMA_Init+0x238>)
 80018b4:	4293      	cmp	r3, r2
 80018b6:	d058      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	4a61      	ldr	r2, [pc, #388]	@ (8001a44 <HAL_DMA_Init+0x23c>)
 80018be:	4293      	cmp	r3, r2
 80018c0:	d053      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	4a60      	ldr	r2, [pc, #384]	@ (8001a48 <HAL_DMA_Init+0x240>)
 80018c8:	4293      	cmp	r3, r2
 80018ca:	d04e      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4a5e      	ldr	r2, [pc, #376]	@ (8001a4c <HAL_DMA_Init+0x244>)
 80018d2:	4293      	cmp	r3, r2
 80018d4:	d049      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	4a5d      	ldr	r2, [pc, #372]	@ (8001a50 <HAL_DMA_Init+0x248>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d044      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	4a5b      	ldr	r2, [pc, #364]	@ (8001a54 <HAL_DMA_Init+0x24c>)
 80018e6:	4293      	cmp	r3, r2
 80018e8:	d03f      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	4a5a      	ldr	r2, [pc, #360]	@ (8001a58 <HAL_DMA_Init+0x250>)
 80018f0:	4293      	cmp	r3, r2
 80018f2:	d03a      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	4a58      	ldr	r2, [pc, #352]	@ (8001a5c <HAL_DMA_Init+0x254>)
 80018fa:	4293      	cmp	r3, r2
 80018fc:	d035      	beq.n	800196a <HAL_DMA_Init+0x162>
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	4a57      	ldr	r2, [pc, #348]	@ (8001a60 <HAL_DMA_Init+0x258>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d030      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001908:	687b      	ldr	r3, [r7, #4]
 800190a:	681b      	ldr	r3, [r3, #0]
 800190c:	4a55      	ldr	r2, [pc, #340]	@ (8001a64 <HAL_DMA_Init+0x25c>)
 800190e:	4293      	cmp	r3, r2
 8001910:	d02b      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	681b      	ldr	r3, [r3, #0]
 8001916:	4a54      	ldr	r2, [pc, #336]	@ (8001a68 <HAL_DMA_Init+0x260>)
 8001918:	4293      	cmp	r3, r2
 800191a:	d026      	beq.n	800196a <HAL_DMA_Init+0x162>
 800191c:	687b      	ldr	r3, [r7, #4]
 800191e:	681b      	ldr	r3, [r3, #0]
 8001920:	4a52      	ldr	r2, [pc, #328]	@ (8001a6c <HAL_DMA_Init+0x264>)
 8001922:	4293      	cmp	r3, r2
 8001924:	d021      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	4a51      	ldr	r2, [pc, #324]	@ (8001a70 <HAL_DMA_Init+0x268>)
 800192c:	4293      	cmp	r3, r2
 800192e:	d01c      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	4a4f      	ldr	r2, [pc, #316]	@ (8001a74 <HAL_DMA_Init+0x26c>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d017      	beq.n	800196a <HAL_DMA_Init+0x162>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	681b      	ldr	r3, [r3, #0]
 800193e:	4a4e      	ldr	r2, [pc, #312]	@ (8001a78 <HAL_DMA_Init+0x270>)
 8001940:	4293      	cmp	r3, r2
 8001942:	d012      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001944:	687b      	ldr	r3, [r7, #4]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	4a4c      	ldr	r2, [pc, #304]	@ (8001a7c <HAL_DMA_Init+0x274>)
 800194a:	4293      	cmp	r3, r2
 800194c:	d00d      	beq.n	800196a <HAL_DMA_Init+0x162>
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	4a4b      	ldr	r2, [pc, #300]	@ (8001a80 <HAL_DMA_Init+0x278>)
 8001954:	4293      	cmp	r3, r2
 8001956:	d008      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001958:	687b      	ldr	r3, [r7, #4]
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	4a49      	ldr	r2, [pc, #292]	@ (8001a84 <HAL_DMA_Init+0x27c>)
 800195e:	4293      	cmp	r3, r2
 8001960:	d003      	beq.n	800196a <HAL_DMA_Init+0x162>
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	681b      	ldr	r3, [r3, #0]
 8001966:	4a48      	ldr	r2, [pc, #288]	@ (8001a88 <HAL_DMA_Init+0x280>)
 8001968:	4293      	cmp	r3, r2
    assert_param(IS_DMA_BURST_LENGTH(hdma->Init.DestBurstLength));
    assert_param(IS_DMA_TRANSFER_ALLOCATED_PORT(hdma->Init.TransferAllocatedPort));
  }

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	2200      	movs	r2, #0
 800196e:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

  /* Initialize the callbacks */
  if (hdma->State == HAL_DMA_STATE_RESET)
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001978:	b2db      	uxtb	r3, r3
 800197a:	2b00      	cmp	r3, #0
 800197c:	d10e      	bne.n	800199c <HAL_DMA_Init+0x194>
  {
    /* Clean all callbacks */
    hdma->XferCpltCallback     = NULL;
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	2200      	movs	r2, #0
 8001982:	661a      	str	r2, [r3, #96]	@ 0x60
    hdma->XferHalfCpltCallback = NULL;
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	2200      	movs	r2, #0
 8001988:	665a      	str	r2, [r3, #100]	@ 0x64
    hdma->XferErrorCallback    = NULL;
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	2200      	movs	r2, #0
 800198e:	669a      	str	r2, [r3, #104]	@ 0x68
    hdma->XferAbortCallback    = NULL;
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	2200      	movs	r2, #0
 8001994:	66da      	str	r2, [r3, #108]	@ 0x6c
    hdma->XferSuspendCallback  = NULL;
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	2200      	movs	r2, #0
 800199a:	671a      	str	r2, [r3, #112]	@ 0x70
  }

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_BUSY;
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	2202      	movs	r2, #2
 80019a0:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

  /* Disable the DMA channel */
  __HAL_DMA_DISABLE(hdma);
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	695a      	ldr	r2, [r3, #20]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	681b      	ldr	r3, [r3, #0]
 80019ae:	f042 0206 	orr.w	r2, r2, #6
 80019b2:	615a      	str	r2, [r3, #20]

  /* Check if the DMA channel is effectively disabled */
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 80019b4:	e00f      	b.n	80019d6 <HAL_DMA_Init+0x1ce>
  {
    /* Check for the Timeout */
    if ((HAL_GetTick() - tickstart) > HAL_TIMEOUT_DMA_ABORT)
 80019b6:	f7ff fccd 	bl	8001354 <HAL_GetTick>
 80019ba:	4602      	mov	r2, r0
 80019bc:	68fb      	ldr	r3, [r7, #12]
 80019be:	1ad3      	subs	r3, r2, r3
 80019c0:	2b05      	cmp	r3, #5
 80019c2:	d908      	bls.n	80019d6 <HAL_DMA_Init+0x1ce>
    {
      /* Update the DMA channel error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	2210      	movs	r2, #16
 80019c8:	659a      	str	r2, [r3, #88]	@ 0x58

      /* Update the DMA channel state */
      hdma->State = HAL_DMA_STATE_ERROR;
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	2203      	movs	r2, #3
 80019ce:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

      return HAL_ERROR;
 80019d2:	2301      	movs	r3, #1
 80019d4:	e015      	b.n	8001a02 <HAL_DMA_Init+0x1fa>
  while ((hdma->Instance->CCR & DMA_CCR_EN) != 0U)
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	695b      	ldr	r3, [r3, #20]
 80019dc:	f003 0301 	and.w	r3, r3, #1
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	d1e8      	bne.n	80019b6 <HAL_DMA_Init+0x1ae>
    }
  }

  /* Initialize the DMA channel registers */
  DMA_Init(hdma);
 80019e4:	6878      	ldr	r0, [r7, #4]
 80019e6:	f000 faaf 	bl	8001f48 <DMA_Init>

  /* Update DMA channel operation mode */
  hdma->Mode = hdma->Init.Mode;
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Update the DMA channel error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	2200      	movs	r2, #0
 80019f6:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Update the DMA channel state */
  hdma->State = HAL_DMA_STATE_READY;
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	2201      	movs	r2, #1
 80019fc:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

  return HAL_OK;
 8001a00:	2300      	movs	r3, #0
}
 8001a02:	4618      	mov	r0, r3
 8001a04:	3710      	adds	r7, #16
 8001a06:	46bd      	mov	sp, r7
 8001a08:	bd80      	pop	{r7, pc}
 8001a0a:	bf00      	nop
 8001a0c:	40020050 	.word	0x40020050
 8001a10:	50020050 	.word	0x50020050
 8001a14:	400200d0 	.word	0x400200d0
 8001a18:	500200d0 	.word	0x500200d0
 8001a1c:	40020150 	.word	0x40020150
 8001a20:	50020150 	.word	0x50020150
 8001a24:	400201d0 	.word	0x400201d0
 8001a28:	500201d0 	.word	0x500201d0
 8001a2c:	40020250 	.word	0x40020250
 8001a30:	50020250 	.word	0x50020250
 8001a34:	400202d0 	.word	0x400202d0
 8001a38:	500202d0 	.word	0x500202d0
 8001a3c:	40020350 	.word	0x40020350
 8001a40:	50020350 	.word	0x50020350
 8001a44:	400203d0 	.word	0x400203d0
 8001a48:	500203d0 	.word	0x500203d0
 8001a4c:	40021050 	.word	0x40021050
 8001a50:	50021050 	.word	0x50021050
 8001a54:	400210d0 	.word	0x400210d0
 8001a58:	500210d0 	.word	0x500210d0
 8001a5c:	40021150 	.word	0x40021150
 8001a60:	50021150 	.word	0x50021150
 8001a64:	400211d0 	.word	0x400211d0
 8001a68:	500211d0 	.word	0x500211d0
 8001a6c:	40021250 	.word	0x40021250
 8001a70:	50021250 	.word	0x50021250
 8001a74:	400212d0 	.word	0x400212d0
 8001a78:	500212d0 	.word	0x500212d0
 8001a7c:	40021350 	.word	0x40021350
 8001a80:	50021350 	.word	0x50021350
 8001a84:	400213d0 	.word	0x400213d0
 8001a88:	500213d0 	.word	0x500213d0

08001a8c <HAL_DMA_Start_IT>:
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *const hdma,
                                   uint32_t SrcAddress,
                                   uint32_t DstAddress,
                                   uint32_t SrcDataSize)
{
 8001a8c:	b580      	push	{r7, lr}
 8001a8e:	b084      	sub	sp, #16
 8001a90:	af00      	add	r7, sp, #0
 8001a92:	60f8      	str	r0, [r7, #12]
 8001a94:	60b9      	str	r1, [r7, #8]
 8001a96:	607a      	str	r2, [r7, #4]
 8001a98:	603b      	str	r3, [r7, #0]
  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001a9a:	68fb      	ldr	r3, [r7, #12]
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d101      	bne.n	8001aa4 <HAL_DMA_Start_IT+0x18>
  {
    return HAL_ERROR;
 8001aa0:	2301      	movs	r3, #1
 8001aa2:	e055      	b.n	8001b50 <HAL_DMA_Start_IT+0xc4>
  }

  /* Check the DMA Mode is DMA_NORMAL */
  if (hdma->Mode != DMA_NORMAL)
 8001aa4:	68fb      	ldr	r3, [r7, #12]
 8001aa6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d001      	beq.n	8001ab0 <HAL_DMA_Start_IT+0x24>
  {
    return HAL_ERROR;
 8001aac:	2301      	movs	r3, #1
 8001aae:	e04f      	b.n	8001b50 <HAL_DMA_Start_IT+0xc4>

  /* Check the parameters */
  assert_param(IS_DMA_BLOCK_SIZE(SrcDataSize));

  /* Process locked */
  __HAL_LOCK(hdma);
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 8001ab6:	2b01      	cmp	r3, #1
 8001ab8:	d101      	bne.n	8001abe <HAL_DMA_Start_IT+0x32>
 8001aba:	2302      	movs	r3, #2
 8001abc:	e048      	b.n	8001b50 <HAL_DMA_Start_IT+0xc4>
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	2201      	movs	r2, #1
 8001ac2:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

  /* Check DMA channel state */
  if (hdma->State == HAL_DMA_STATE_READY)
 8001ac6:	68fb      	ldr	r3, [r7, #12]
 8001ac8:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001acc:	b2db      	uxtb	r3, r3
 8001ace:	2b01      	cmp	r3, #1
 8001ad0:	d136      	bne.n	8001b40 <HAL_DMA_Start_IT+0xb4>
  {
    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	2202      	movs	r2, #2
 8001ad6:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8001ada:	68fb      	ldr	r3, [r7, #12]
 8001adc:	2200      	movs	r2, #0
 8001ade:	659a      	str	r2, [r3, #88]	@ 0x58

    /* Configure the source address, destination address, the data size and clear flags */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, SrcDataSize);
 8001ae0:	683b      	ldr	r3, [r7, #0]
 8001ae2:	687a      	ldr	r2, [r7, #4]
 8001ae4:	68b9      	ldr	r1, [r7, #8]
 8001ae6:	68f8      	ldr	r0, [r7, #12]
 8001ae8:	f000 fa08 	bl	8001efc <DMA_SetConfig>

    /* Enable common interrupts: Transfer Complete and Transfer Errors ITs */
    __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	695a      	ldr	r2, [r3, #20]
 8001af2:	68fb      	ldr	r3, [r7, #12]
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	f442 42ba 	orr.w	r2, r2, #23808	@ 0x5d00
 8001afa:	615a      	str	r2, [r3, #20]

    /* Check half transfer complete callback */
    if (hdma->XferHalfCpltCallback != NULL)
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001b00:	2b00      	cmp	r3, #0
 8001b02:	d007      	beq.n	8001b14 <HAL_DMA_Start_IT+0x88>
    {
      /* If Half Transfer complete callback is set, enable the corresponding IT */
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	695a      	ldr	r2, [r3, #20]
 8001b0a:	68fb      	ldr	r3, [r7, #12]
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001b12:	615a      	str	r2, [r3, #20]
    }

    /* Check Half suspend callback */
    if (hdma->XferSuspendCallback != NULL)
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001b18:	2b00      	cmp	r3, #0
 8001b1a:	d007      	beq.n	8001b2c <HAL_DMA_Start_IT+0xa0>
    {
      /* If Transfer suspend callback is set, enable the corresponding IT */
      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	695a      	ldr	r2, [r3, #20]
 8001b22:	68fb      	ldr	r3, [r7, #12]
 8001b24:	681b      	ldr	r3, [r3, #0]
 8001b26:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001b2a:	615a      	str	r2, [r3, #20]
    }

    /* Enable DMA channel */
    __HAL_DMA_ENABLE(hdma);
 8001b2c:	68fb      	ldr	r3, [r7, #12]
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	695a      	ldr	r2, [r3, #20]
 8001b32:	68fb      	ldr	r3, [r7, #12]
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	f042 0201 	orr.w	r2, r2, #1
 8001b3a:	615a      	str	r2, [r3, #20]
    __HAL_UNLOCK(hdma);

    return HAL_ERROR;
  }

  return HAL_OK;
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	e007      	b.n	8001b50 <HAL_DMA_Start_IT+0xc4>
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 8001b40:	68fb      	ldr	r3, [r7, #12]
 8001b42:	2240      	movs	r2, #64	@ 0x40
 8001b44:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8001b46:	68fb      	ldr	r3, [r7, #12]
 8001b48:	2200      	movs	r2, #0
 8001b4a:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 8001b4e:	2301      	movs	r3, #1
}
 8001b50:	4618      	mov	r0, r3
 8001b52:	3710      	adds	r7, #16
 8001b54:	46bd      	mov	sp, r7
 8001b56:	bd80      	pop	{r7, pc}

08001b58 <HAL_DMA_Abort_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *const hdma)
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b083      	sub	sp, #12
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	d101      	bne.n	8001b6a <HAL_DMA_Abort_IT+0x12>
  {
    return HAL_ERROR;
 8001b66:	2301      	movs	r3, #1
 8001b68:	e019      	b.n	8001b9e <HAL_DMA_Abort_IT+0x46>
  }

  /* Check DMA channel state */
  if (hdma->State != HAL_DMA_STATE_BUSY)
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001b70:	b2db      	uxtb	r3, r3
 8001b72:	2b02      	cmp	r3, #2
 8001b74:	d004      	beq.n	8001b80 <HAL_DMA_Abort_IT+0x28>
  {
    /* Update the DMA channel error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	2220      	movs	r2, #32
 8001b7a:	659a      	str	r2, [r3, #88]	@ 0x58

    return HAL_ERROR;
 8001b7c:	2301      	movs	r3, #1
 8001b7e:	e00e      	b.n	8001b9e <HAL_DMA_Abort_IT+0x46>
  }
  else
  {
    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_ABORT;
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	2204      	movs	r2, #4
 8001b84:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Suspend the channel and activate suspend interrupt */
    hdma->Instance->CCR |= (DMA_CCR_SUSP | DMA_CCR_SUSPIE);
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	695b      	ldr	r3, [r3, #20]
 8001b8e:	687a      	ldr	r2, [r7, #4]
 8001b90:	6812      	ldr	r2, [r2, #0]
 8001b92:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001b96:	f043 0304 	orr.w	r3, r3, #4
 8001b9a:	6153      	str	r3, [r2, #20]
  }

  return HAL_OK;
 8001b9c:	2300      	movs	r3, #0
}
 8001b9e:	4618      	mov	r0, r3
 8001ba0:	370c      	adds	r7, #12
 8001ba2:	46bd      	mov	sp, r7
 8001ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ba8:	4770      	bx	lr

08001baa <HAL_DMA_IRQHandler>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval None.
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *const hdma)
{
 8001baa:	b580      	push	{r7, lr}
 8001bac:	b086      	sub	sp, #24
 8001bae:	af00      	add	r7, sp, #0
 8001bb0:	6078      	str	r0, [r7, #4]
  const DMA_TypeDef *p_dma_instance = GET_DMA_INSTANCE(hdma);
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8001bba:	f023 030f 	bic.w	r3, r3, #15
 8001bbe:	617b      	str	r3, [r7, #20]
  uint32_t global_it_flag =  1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bc8:	3b50      	subs	r3, #80	@ 0x50
 8001bca:	09db      	lsrs	r3, r3, #7
 8001bcc:	f003 031f 	and.w	r3, r3, #31
 8001bd0:	2201      	movs	r2, #1
 8001bd2:	fa02 f303 	lsl.w	r3, r2, r3
 8001bd6:	613b      	str	r3, [r7, #16]
  uint32_t global_active_flag_ns = IS_DMA_GLOBAL_ACTIVE_FLAG_NS(p_dma_instance, global_it_flag);
 8001bd8:	697b      	ldr	r3, [r7, #20]
 8001bda:	68db      	ldr	r3, [r3, #12]
 8001bdc:	693a      	ldr	r2, [r7, #16]
 8001bde:	4013      	ands	r3, r2
 8001be0:	60fb      	str	r3, [r7, #12]

  /* Global Interrupt Flag management *********************************************************************************/
#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  if ((global_active_flag_s == 0U) && (global_active_flag_ns == 0U))
#else
  if (global_active_flag_ns == 0U)
 8001be2:	68fb      	ldr	r3, [r7, #12]
 8001be4:	2b00      	cmp	r3, #0
 8001be6:	f000 813b 	beq.w	8001e60 <HAL_DMA_IRQHandler+0x2b6>
  {
    return; /* the global interrupt flag for the current channel is down , nothing to do */
  }

  /* Data Transfer Error Interrupt management *************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_DTE) != 0U)
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	681b      	ldr	r3, [r3, #0]
 8001bee:	691b      	ldr	r3, [r3, #16]
 8001bf0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	d011      	beq.n	8001c1c <HAL_DMA_IRQHandler+0x72>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DTE) != 0U)
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	695b      	ldr	r3, [r3, #20]
 8001bfe:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001c02:	2b00      	cmp	r3, #0
 8001c04:	d00a      	beq.n	8001c1c <HAL_DMA_IRQHandler+0x72>
    {
      /* Clear the transfer error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_DTE);
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	681b      	ldr	r3, [r3, #0]
 8001c0a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001c0e:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DTE;
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c14:	f043 0201 	orr.w	r2, r3, #1
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Update Linked-list Error Interrupt management ********************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_ULE) != 0U)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	691b      	ldr	r3, [r3, #16]
 8001c22:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d011      	beq.n	8001c4e <HAL_DMA_IRQHandler+0xa4>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_ULE) != 0U)
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	695b      	ldr	r3, [r3, #20]
 8001c30:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d00a      	beq.n	8001c4e <HAL_DMA_IRQHandler+0xa4>
    {
      /* Clear the update linked-list error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_ULE);
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001c40:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_ULE;
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c46:	f043 0202 	orr.w	r2, r3, #2
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* User Setting Error Interrupt management **************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_USE) != 0U)
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	691b      	ldr	r3, [r3, #16]
 8001c54:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	d011      	beq.n	8001c80 <HAL_DMA_IRQHandler+0xd6>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_USE) != 0U)
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	695b      	ldr	r3, [r3, #20]
 8001c62:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001c66:	2b00      	cmp	r3, #0
 8001c68:	d00a      	beq.n	8001c80 <HAL_DMA_IRQHandler+0xd6>
    {
      /* Clear the user setting error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_USE);
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001c72:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_USE;
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c78:	f043 0204 	orr.w	r2, r3, #4
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Trigger Overrun Interrupt management *****************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TO) != 0U)
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	691b      	ldr	r3, [r3, #16]
 8001c86:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c8a:	2b00      	cmp	r3, #0
 8001c8c:	d011      	beq.n	8001cb2 <HAL_DMA_IRQHandler+0x108>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TO) != 0U)
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	695b      	ldr	r3, [r3, #20]
 8001c94:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001c98:	2b00      	cmp	r3, #0
 8001c9a:	d00a      	beq.n	8001cb2 <HAL_DMA_IRQHandler+0x108>
    {
      /* Clear the trigger overrun flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TO);
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001ca4:	60da      	str	r2, [r3, #12]

      /* Update the DMA channel error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TO;
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001caa:	f043 0208 	orr.w	r2, r3, #8
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	659a      	str	r2, [r3, #88]	@ 0x58
    }
  }

  /* Half Transfer Complete Interrupt management **********************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_HT) != 0U)
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	691b      	ldr	r3, [r3, #16]
 8001cb8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d013      	beq.n	8001ce8 <HAL_DMA_IRQHandler+0x13e>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != 0U)
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	695b      	ldr	r3, [r3, #20]
 8001cc6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001cca:	2b00      	cmp	r3, #0
 8001ccc:	d00c      	beq.n	8001ce8 <HAL_DMA_IRQHandler+0x13e>
    {
      /* Clear the half transfer flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_HT);
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001cd6:	60da      	str	r2, [r3, #12]

      /* Check half transfer complete callback */
      if (hdma->XferHalfCpltCallback != NULL)
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d003      	beq.n	8001ce8 <HAL_DMA_IRQHandler+0x13e>
      {
        /* Half transfer callback */
        hdma->XferHalfCpltCallback(hdma);
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8001ce4:	6878      	ldr	r0, [r7, #4]
 8001ce6:	4798      	blx	r3
      }
    }
  }

  /* Suspend Transfer Interrupt management ****************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_SUSP) != 0U)
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	681b      	ldr	r3, [r3, #0]
 8001cec:	691b      	ldr	r3, [r3, #16]
 8001cee:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	d04c      	beq.n	8001d90 <HAL_DMA_IRQHandler+0x1e6>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_SUSP) != 0U)
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	695b      	ldr	r3, [r3, #20]
 8001cfc:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d045      	beq.n	8001d90 <HAL_DMA_IRQHandler+0x1e6>
    {
      /* Clear the block transfer complete flag */
      __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_SUSP);
 8001d04:	687b      	ldr	r3, [r7, #4]
 8001d06:	681b      	ldr	r3, [r3, #0]
 8001d08:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001d0c:	60da      	str	r2, [r3, #12]

      /* Check DMA channel state */
      if (hdma->State == HAL_DMA_STATE_ABORT)
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8001d14:	b2db      	uxtb	r3, r3
 8001d16:	2b04      	cmp	r3, #4
 8001d18:	d12e      	bne.n	8001d78 <HAL_DMA_IRQHandler+0x1ce>
      {
        /* Disable the suspend transfer interrupt */
        __HAL_DMA_DISABLE_IT(hdma, DMA_IT_SUSP);
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	695a      	ldr	r2, [r3, #20]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001d28:	615a      	str	r2, [r3, #20]

        /* Reset the channel internal state and reset the FIFO */
        hdma->Instance->CCR |= DMA_CCR_RESET;
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	695a      	ldr	r2, [r3, #20]
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	681b      	ldr	r3, [r3, #0]
 8001d34:	f042 0202 	orr.w	r2, r2, #2
 8001d38:	615a      	str	r2, [r3, #20]

        /* Update the DMA channel state */
        hdma->State = HAL_DMA_STATE_READY;
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	2201      	movs	r2, #1
 8001d3e:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

        /* Check DMA channel transfer mode */
        if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001d42:	687b      	ldr	r3, [r7, #4]
 8001d44:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001d46:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d007      	beq.n	8001d5e <HAL_DMA_IRQHandler+0x1b4>
        {
          /* Update the linked-list queue state */
          hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001d52:	2201      	movs	r2, #1
 8001d54:	731a      	strb	r2, [r3, #12]

          /* Clear remaining data size to ensure loading linked-list from memory next start */
          hdma->Instance->CBR1 = 0U;
 8001d56:	687b      	ldr	r3, [r7, #4]
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	2200      	movs	r2, #0
 8001d5c:	649a      	str	r2, [r3, #72]	@ 0x48
        }

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	2200      	movs	r2, #0
 8001d62:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

        /* Check transfer abort callback */
        if (hdma->XferAbortCallback != NULL)
 8001d66:	687b      	ldr	r3, [r7, #4]
 8001d68:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8001d6a:	2b00      	cmp	r3, #0
 8001d6c:	d07a      	beq.n	8001e64 <HAL_DMA_IRQHandler+0x2ba>
        {
          /* Transfer abort callback */
          hdma->XferAbortCallback(hdma);
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8001d72:	6878      	ldr	r0, [r7, #4]
 8001d74:	4798      	blx	r3
        }

        return;
 8001d76:	e075      	b.n	8001e64 <HAL_DMA_IRQHandler+0x2ba>
      }
      else
      {
        /* Update the DMA channel state */
        hdma->State = HAL_DMA_STATE_SUSPEND;
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	2205      	movs	r2, #5
 8001d7c:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

        /* Check transfer suspend callback */
        if (hdma->XferSuspendCallback != NULL)
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d003      	beq.n	8001d90 <HAL_DMA_IRQHandler+0x1e6>
        {
          /* Transfer suspend callback */
          hdma->XferSuspendCallback(hdma);
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8001d8c:	6878      	ldr	r0, [r7, #4]
 8001d8e:	4798      	blx	r3
      }
    }
  }

  /* Transfer Complete Interrupt management ***************************************************************************/
  if (__HAL_DMA_GET_FLAG(hdma, DMA_FLAG_TC) != 0U)
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	691b      	ldr	r3, [r3, #16]
 8001d96:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d039      	beq.n	8001e12 <HAL_DMA_IRQHandler+0x268>
  {
    /* Check if interrupt source is enabled */
    if (__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != 0U)
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	695b      	ldr	r3, [r3, #20]
 8001da4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d032      	beq.n	8001e12 <HAL_DMA_IRQHandler+0x268>
    {
      /* Check DMA channel transfer mode */
      if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001db0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d012      	beq.n	8001dde <HAL_DMA_IRQHandler+0x234>
      {
        /* If linked-list transfer */
        if (hdma->Instance->CLLR == 0U)
 8001db8:	687b      	ldr	r3, [r7, #4]
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8001dbe:	2b00      	cmp	r3, #0
 8001dc0:	d116      	bne.n	8001df0 <HAL_DMA_IRQHandler+0x246>
        {
          if (hdma->Instance->CBR1 == 0U)
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001dc8:	2b00      	cmp	r3, #0
 8001dca:	d111      	bne.n	8001df0 <HAL_DMA_IRQHandler+0x246>
          {
            /* Update the DMA channel state */
            hdma->State = HAL_DMA_STATE_READY;
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	2201      	movs	r2, #1
 8001dd0:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

            /* Update the linked-list queue state */
            hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001dd8:	2201      	movs	r2, #1
 8001dda:	731a      	strb	r2, [r3, #12]
 8001ddc:	e008      	b.n	8001df0 <HAL_DMA_IRQHandler+0x246>
        }
      }
      else
      {
        /* If normal transfer */
        if (hdma->Instance->CBR1 == 0U)
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001de4:	2b00      	cmp	r3, #0
 8001de6:	d103      	bne.n	8001df0 <HAL_DMA_IRQHandler+0x246>
        {
          /* Update the DMA channel state */
          hdma->State = HAL_DMA_STATE_READY;
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	2201      	movs	r2, #1
 8001dec:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
        }
      }

      /* Clear TC and HT transfer flags */
      __HAL_DMA_CLEAR_FLAG(hdma, (DMA_FLAG_TC | DMA_FLAG_HT));
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8001df8:	60da      	str	r2, [r3, #12]

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

      /* Check transfer complete callback */
      if (hdma->XferCpltCallback != NULL)
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e06:	2b00      	cmp	r3, #0
 8001e08:	d003      	beq.n	8001e12 <HAL_DMA_IRQHandler+0x268>
      {
        /* Channel Transfer Complete callback */
        hdma->XferCpltCallback(hdma);
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e0e:	6878      	ldr	r0, [r7, #4]
 8001e10:	4798      	blx	r3
      }
    }
  }

  /* Manage error case ************************************************************************************************/
  if (hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001e16:	2b00      	cmp	r3, #0
 8001e18:	d025      	beq.n	8001e66 <HAL_DMA_IRQHandler+0x2bc>
  {
    /* Reset the channel internal state and reset the FIFO */
    hdma->Instance->CCR |= DMA_CCR_RESET;
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	681b      	ldr	r3, [r3, #0]
 8001e1e:	695a      	ldr	r2, [r3, #20]
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f042 0202 	orr.w	r2, r2, #2
 8001e28:	615a      	str	r2, [r3, #20]

    /* Update the DMA channel state */
    hdma->State = HAL_DMA_STATE_READY;
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54

    /* Check DMA channel transfer mode */
    if ((hdma->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8001e36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e3a:	2b00      	cmp	r3, #0
 8001e3c:	d003      	beq.n	8001e46 <HAL_DMA_IRQHandler+0x29c>
    {
      /* Update the linked-list queue state */
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_READY;
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8001e42:	2201      	movs	r2, #1
 8001e44:	731a      	strb	r2, [r3, #12]
    }

    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	2200      	movs	r2, #0
 8001e4a:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

    /* Check transfer error callback */
    if (hdma->XferErrorCallback != NULL)
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	d007      	beq.n	8001e66 <HAL_DMA_IRQHandler+0x2bc>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8001e5a:	6878      	ldr	r0, [r7, #4]
 8001e5c:	4798      	blx	r3
 8001e5e:	e002      	b.n	8001e66 <HAL_DMA_IRQHandler+0x2bc>
    return; /* the global interrupt flag for the current channel is down , nothing to do */
 8001e60:	bf00      	nop
 8001e62:	e000      	b.n	8001e66 <HAL_DMA_IRQHandler+0x2bc>
        return;
 8001e64:	bf00      	nop
    }
  }
}
 8001e66:	3718      	adds	r7, #24
 8001e68:	46bd      	mov	sp, r7
 8001e6a:	bd80      	pop	{r7, pc}

08001e6c <HAL_DMA_GetError>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval DMA Error Code.
  */
uint32_t HAL_DMA_GetError(DMA_HandleTypeDef const *const hdma)
{
 8001e6c:	b480      	push	{r7}
 8001e6e:	b083      	sub	sp, #12
 8001e70:	af00      	add	r7, sp, #0
 8001e72:	6078      	str	r0, [r7, #4]
  /* Return the DMA channel error code */
  return hdma->ErrorCode;
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8001e78:	4618      	mov	r0, r3
 8001e7a:	370c      	adds	r7, #12
 8001e7c:	46bd      	mov	sp, r7
 8001e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e82:	4770      	bx	lr

08001e84 <HAL_DMA_ConfigChannelAttributes>:
  * @param  ChannelAttributes : Specifies the DMA channel secure/privilege attributes.
  *                             This parameter can be a one or a combination of @ref DMA_Channel_Attributes.
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_DMA_ConfigChannelAttributes(DMA_HandleTypeDef *const hdma, uint32_t ChannelAttributes)
{
 8001e84:	b480      	push	{r7}
 8001e86:	b085      	sub	sp, #20
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	6078      	str	r0, [r7, #4]
 8001e8c:	6039      	str	r1, [r7, #0]
  DMA_TypeDef *p_dma_instance;
  uint32_t channel_idx;

  /* Check the DMA peripheral handle parameter */
  if (hdma == NULL)
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	2b00      	cmp	r3, #0
 8001e92:	d101      	bne.n	8001e98 <HAL_DMA_ConfigChannelAttributes+0x14>
  {
    return HAL_ERROR;
 8001e94:	2301      	movs	r3, #1
 8001e96:	e02b      	b.n	8001ef0 <HAL_DMA_ConfigChannelAttributes+0x6c>

  /* Check the parameters */
  assert_param(IS_DMA_ATTRIBUTES(ChannelAttributes));

  /* Get DMA instance */
  p_dma_instance = GET_DMA_INSTANCE(hdma);
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8001ea0:	f023 030f 	bic.w	r3, r3, #15
 8001ea4:	60fb      	str	r3, [r7, #12]

  /* Get channel index */
  channel_idx = 1UL << (GET_DMA_CHANNEL(hdma) & 0x1FU);
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001eae:	3b50      	subs	r3, #80	@ 0x50
 8001eb0:	09db      	lsrs	r3, r3, #7
 8001eb2:	f003 031f 	and.w	r3, r3, #31
 8001eb6:	2201      	movs	r2, #1
 8001eb8:	fa02 f303 	lsl.w	r3, r2, r3
 8001ebc:	60bb      	str	r3, [r7, #8]

  /* Check DMA channel privilege attribute management */
  if ((ChannelAttributes & DMA_CHANNEL_ATTR_PRIV_MASK) == DMA_CHANNEL_ATTR_PRIV_MASK)
 8001ebe:	683b      	ldr	r3, [r7, #0]
 8001ec0:	f003 0310 	and.w	r3, r3, #16
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d012      	beq.n	8001eee <HAL_DMA_ConfigChannelAttributes+0x6a>
  {
    /* Configure DMA channel privilege attribute */
    if ((ChannelAttributes & DMA_CHANNEL_PRIV) == DMA_CHANNEL_PRIV)
 8001ec8:	683b      	ldr	r3, [r7, #0]
 8001eca:	f003 0311 	and.w	r3, r3, #17
 8001ece:	2b11      	cmp	r3, #17
 8001ed0:	d106      	bne.n	8001ee0 <HAL_DMA_ConfigChannelAttributes+0x5c>
    {
      p_dma_instance->PRIVCFGR |= channel_idx;
 8001ed2:	68fb      	ldr	r3, [r7, #12]
 8001ed4:	685a      	ldr	r2, [r3, #4]
 8001ed6:	68bb      	ldr	r3, [r7, #8]
 8001ed8:	431a      	orrs	r2, r3
 8001eda:	68fb      	ldr	r3, [r7, #12]
 8001edc:	605a      	str	r2, [r3, #4]
 8001ede:	e006      	b.n	8001eee <HAL_DMA_ConfigChannelAttributes+0x6a>
    }
    else
    {
      p_dma_instance->PRIVCFGR &= (~channel_idx);
 8001ee0:	68fb      	ldr	r3, [r7, #12]
 8001ee2:	685a      	ldr	r2, [r3, #4]
 8001ee4:	68bb      	ldr	r3, [r7, #8]
 8001ee6:	43db      	mvns	r3, r3
 8001ee8:	401a      	ands	r2, r3
 8001eea:	68fb      	ldr	r3, [r7, #12]
 8001eec:	605a      	str	r2, [r3, #4]
      hdma->Instance->CTR1 &= (~DMA_CTR1_DSEC);
    }
  }
#endif /* (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */

  return HAL_OK;
 8001eee:	2300      	movs	r3, #0
}
 8001ef0:	4618      	mov	r0, r3
 8001ef2:	3714      	adds	r7, #20
 8001ef4:	46bd      	mov	sp, r7
 8001ef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001efa:	4770      	bx	lr

08001efc <DMA_SetConfig>:
  */
static void DMA_SetConfig(DMA_HandleTypeDef const *const hdma,
                          uint32_t SrcAddress,
                          uint32_t DstAddress,
                          uint32_t SrcDataSize)
{
 8001efc:	b480      	push	{r7}
 8001efe:	b085      	sub	sp, #20
 8001f00:	af00      	add	r7, sp, #0
 8001f02:	60f8      	str	r0, [r7, #12]
 8001f04:	60b9      	str	r1, [r7, #8]
 8001f06:	607a      	str	r2, [r7, #4]
 8001f08:	603b      	str	r3, [r7, #0]
  /* Configure the DMA channel data size */
  MODIFY_REG(hdma->Instance->CBR1, DMA_CBR1_BNDT, (SrcDataSize & DMA_CBR1_BNDT));
 8001f0a:	68fb      	ldr	r3, [r7, #12]
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001f10:	0c1b      	lsrs	r3, r3, #16
 8001f12:	041b      	lsls	r3, r3, #16
 8001f14:	683a      	ldr	r2, [r7, #0]
 8001f16:	b291      	uxth	r1, r2
 8001f18:	68fa      	ldr	r2, [r7, #12]
 8001f1a:	6812      	ldr	r2, [r2, #0]
 8001f1c:	430b      	orrs	r3, r1
 8001f1e:	6493      	str	r3, [r2, #72]	@ 0x48

  /* Clear all interrupt flags */
  __HAL_DMA_CLEAR_FLAG(hdma, DMA_FLAG_TC | DMA_FLAG_HT | DMA_FLAG_DTE | DMA_FLAG_ULE | DMA_FLAG_USE | DMA_FLAG_SUSP |
 8001f20:	68fb      	ldr	r3, [r7, #12]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	f44f 42fe 	mov.w	r2, #32512	@ 0x7f00
 8001f28:	60da      	str	r2, [r3, #12]
                       DMA_FLAG_TO);

  /* Configure DMA channel source address */
  hdma->Instance->CSAR = SrcAddress;
 8001f2a:	68fb      	ldr	r3, [r7, #12]
 8001f2c:	681b      	ldr	r3, [r3, #0]
 8001f2e:	68ba      	ldr	r2, [r7, #8]
 8001f30:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Configure DMA channel destination address */
  hdma->Instance->CDAR = DstAddress;
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	687a      	ldr	r2, [r7, #4]
 8001f38:	651a      	str	r2, [r3, #80]	@ 0x50
}
 8001f3a:	bf00      	nop
 8001f3c:	3714      	adds	r7, #20
 8001f3e:	46bd      	mov	sp, r7
 8001f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f44:	4770      	bx	lr
	...

08001f48 <DMA_Init>:
  * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval None.
  */
static void DMA_Init(DMA_HandleTypeDef const *const hdma)
{
 8001f48:	b480      	push	{r7}
 8001f4a:	b085      	sub	sp, #20
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;

  /* Prepare DMA Channel Control Register (CCR) value *****************************************************************/
  tmpreg = hdma->Init.Priority;
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	6a1b      	ldr	r3, [r3, #32]
 8001f54:	60fb      	str	r3, [r7, #12]

  /* Write DMA Channel Control Register (CCR) */
  MODIFY_REG(hdma->Instance->CCR, DMA_CCR_PRIO | DMA_CCR_LAP | DMA_CCR_LSM, tmpreg);
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	695b      	ldr	r3, [r3, #20]
 8001f5c:	f423 0143 	bic.w	r1, r3, #12779520	@ 0xc30000
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	68fa      	ldr	r2, [r7, #12]
 8001f66:	430a      	orrs	r2, r1
 8001f68:	615a      	str	r2, [r3, #20]

  /* Prepare DMA Channel Transfer Register (CTR1) value ***************************************************************/
  tmpreg = hdma->Init.DestInc | hdma->Init.DestDataWidth | hdma->Init.SrcInc | hdma->Init.SrcDataWidth;
 8001f6a:	687b      	ldr	r3, [r7, #4]
 8001f6c:	695a      	ldr	r2, [r3, #20]
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	69db      	ldr	r3, [r3, #28]
 8001f72:	431a      	orrs	r2, r3
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	691b      	ldr	r3, [r3, #16]
 8001f78:	431a      	orrs	r2, r3
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	699b      	ldr	r3, [r3, #24]
 8001f7e:	4313      	orrs	r3, r2
 8001f80:	60fb      	str	r3, [r7, #12]

  /* Add parameters specific to GPDMA */
  if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 8001f82:	687b      	ldr	r3, [r7, #4]
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	4a53      	ldr	r2, [pc, #332]	@ (80020d4 <DMA_Init+0x18c>)
 8001f88:	4293      	cmp	r3, r2
 8001f8a:	f000 80a0 	beq.w	80020ce <DMA_Init+0x186>
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4a51      	ldr	r2, [pc, #324]	@ (80020d8 <DMA_Init+0x190>)
 8001f94:	4293      	cmp	r3, r2
 8001f96:	f000 809a 	beq.w	80020ce <DMA_Init+0x186>
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	4a4f      	ldr	r2, [pc, #316]	@ (80020dc <DMA_Init+0x194>)
 8001fa0:	4293      	cmp	r3, r2
 8001fa2:	f000 8094 	beq.w	80020ce <DMA_Init+0x186>
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	4a4d      	ldr	r2, [pc, #308]	@ (80020e0 <DMA_Init+0x198>)
 8001fac:	4293      	cmp	r3, r2
 8001fae:	f000 808e 	beq.w	80020ce <DMA_Init+0x186>
 8001fb2:	687b      	ldr	r3, [r7, #4]
 8001fb4:	681b      	ldr	r3, [r3, #0]
 8001fb6:	4a4b      	ldr	r2, [pc, #300]	@ (80020e4 <DMA_Init+0x19c>)
 8001fb8:	4293      	cmp	r3, r2
 8001fba:	f000 8088 	beq.w	80020ce <DMA_Init+0x186>
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	4a49      	ldr	r2, [pc, #292]	@ (80020e8 <DMA_Init+0x1a0>)
 8001fc4:	4293      	cmp	r3, r2
 8001fc6:	f000 8082 	beq.w	80020ce <DMA_Init+0x186>
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	4a47      	ldr	r2, [pc, #284]	@ (80020ec <DMA_Init+0x1a4>)
 8001fd0:	4293      	cmp	r3, r2
 8001fd2:	d07c      	beq.n	80020ce <DMA_Init+0x186>
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a45      	ldr	r2, [pc, #276]	@ (80020f0 <DMA_Init+0x1a8>)
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d077      	beq.n	80020ce <DMA_Init+0x186>
 8001fde:	687b      	ldr	r3, [r7, #4]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	4a44      	ldr	r2, [pc, #272]	@ (80020f4 <DMA_Init+0x1ac>)
 8001fe4:	4293      	cmp	r3, r2
 8001fe6:	d072      	beq.n	80020ce <DMA_Init+0x186>
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	4a42      	ldr	r2, [pc, #264]	@ (80020f8 <DMA_Init+0x1b0>)
 8001fee:	4293      	cmp	r3, r2
 8001ff0:	d06d      	beq.n	80020ce <DMA_Init+0x186>
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	4a41      	ldr	r2, [pc, #260]	@ (80020fc <DMA_Init+0x1b4>)
 8001ff8:	4293      	cmp	r3, r2
 8001ffa:	d068      	beq.n	80020ce <DMA_Init+0x186>
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4a3f      	ldr	r2, [pc, #252]	@ (8002100 <DMA_Init+0x1b8>)
 8002002:	4293      	cmp	r3, r2
 8002004:	d063      	beq.n	80020ce <DMA_Init+0x186>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	4a3e      	ldr	r2, [pc, #248]	@ (8002104 <DMA_Init+0x1bc>)
 800200c:	4293      	cmp	r3, r2
 800200e:	d05e      	beq.n	80020ce <DMA_Init+0x186>
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	4a3c      	ldr	r2, [pc, #240]	@ (8002108 <DMA_Init+0x1c0>)
 8002016:	4293      	cmp	r3, r2
 8002018:	d059      	beq.n	80020ce <DMA_Init+0x186>
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	4a3b      	ldr	r2, [pc, #236]	@ (800210c <DMA_Init+0x1c4>)
 8002020:	4293      	cmp	r3, r2
 8002022:	d054      	beq.n	80020ce <DMA_Init+0x186>
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	4a39      	ldr	r2, [pc, #228]	@ (8002110 <DMA_Init+0x1c8>)
 800202a:	4293      	cmp	r3, r2
 800202c:	d04f      	beq.n	80020ce <DMA_Init+0x186>
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	4a38      	ldr	r2, [pc, #224]	@ (8002114 <DMA_Init+0x1cc>)
 8002034:	4293      	cmp	r3, r2
 8002036:	d04a      	beq.n	80020ce <DMA_Init+0x186>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	4a36      	ldr	r2, [pc, #216]	@ (8002118 <DMA_Init+0x1d0>)
 800203e:	4293      	cmp	r3, r2
 8002040:	d045      	beq.n	80020ce <DMA_Init+0x186>
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	4a35      	ldr	r2, [pc, #212]	@ (800211c <DMA_Init+0x1d4>)
 8002048:	4293      	cmp	r3, r2
 800204a:	d040      	beq.n	80020ce <DMA_Init+0x186>
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	4a33      	ldr	r2, [pc, #204]	@ (8002120 <DMA_Init+0x1d8>)
 8002052:	4293      	cmp	r3, r2
 8002054:	d03b      	beq.n	80020ce <DMA_Init+0x186>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	4a32      	ldr	r2, [pc, #200]	@ (8002124 <DMA_Init+0x1dc>)
 800205c:	4293      	cmp	r3, r2
 800205e:	d036      	beq.n	80020ce <DMA_Init+0x186>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4a30      	ldr	r2, [pc, #192]	@ (8002128 <DMA_Init+0x1e0>)
 8002066:	4293      	cmp	r3, r2
 8002068:	d031      	beq.n	80020ce <DMA_Init+0x186>
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	4a2f      	ldr	r2, [pc, #188]	@ (800212c <DMA_Init+0x1e4>)
 8002070:	4293      	cmp	r3, r2
 8002072:	d02c      	beq.n	80020ce <DMA_Init+0x186>
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	4a2d      	ldr	r2, [pc, #180]	@ (8002130 <DMA_Init+0x1e8>)
 800207a:	4293      	cmp	r3, r2
 800207c:	d027      	beq.n	80020ce <DMA_Init+0x186>
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	4a2c      	ldr	r2, [pc, #176]	@ (8002134 <DMA_Init+0x1ec>)
 8002084:	4293      	cmp	r3, r2
 8002086:	d022      	beq.n	80020ce <DMA_Init+0x186>
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	4a2a      	ldr	r2, [pc, #168]	@ (8002138 <DMA_Init+0x1f0>)
 800208e:	4293      	cmp	r3, r2
 8002090:	d01d      	beq.n	80020ce <DMA_Init+0x186>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	4a29      	ldr	r2, [pc, #164]	@ (800213c <DMA_Init+0x1f4>)
 8002098:	4293      	cmp	r3, r2
 800209a:	d018      	beq.n	80020ce <DMA_Init+0x186>
 800209c:	687b      	ldr	r3, [r7, #4]
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4a27      	ldr	r2, [pc, #156]	@ (8002140 <DMA_Init+0x1f8>)
 80020a2:	4293      	cmp	r3, r2
 80020a4:	d013      	beq.n	80020ce <DMA_Init+0x186>
 80020a6:	687b      	ldr	r3, [r7, #4]
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	4a26      	ldr	r2, [pc, #152]	@ (8002144 <DMA_Init+0x1fc>)
 80020ac:	4293      	cmp	r3, r2
 80020ae:	d00e      	beq.n	80020ce <DMA_Init+0x186>
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	4a24      	ldr	r2, [pc, #144]	@ (8002148 <DMA_Init+0x200>)
 80020b6:	4293      	cmp	r3, r2
 80020b8:	d009      	beq.n	80020ce <DMA_Init+0x186>
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	4a23      	ldr	r2, [pc, #140]	@ (800214c <DMA_Init+0x204>)
 80020c0:	4293      	cmp	r3, r2
 80020c2:	d004      	beq.n	80020ce <DMA_Init+0x186>
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	4a21      	ldr	r2, [pc, #132]	@ (8002150 <DMA_Init+0x208>)
 80020ca:	4293      	cmp	r3, r2
 80020cc:	d142      	bne.n	8002154 <DMA_Init+0x20c>
 80020ce:	2301      	movs	r3, #1
 80020d0:	e041      	b.n	8002156 <DMA_Init+0x20e>
 80020d2:	bf00      	nop
 80020d4:	40020050 	.word	0x40020050
 80020d8:	50020050 	.word	0x50020050
 80020dc:	400200d0 	.word	0x400200d0
 80020e0:	500200d0 	.word	0x500200d0
 80020e4:	40020150 	.word	0x40020150
 80020e8:	50020150 	.word	0x50020150
 80020ec:	400201d0 	.word	0x400201d0
 80020f0:	500201d0 	.word	0x500201d0
 80020f4:	40020250 	.word	0x40020250
 80020f8:	50020250 	.word	0x50020250
 80020fc:	400202d0 	.word	0x400202d0
 8002100:	500202d0 	.word	0x500202d0
 8002104:	40020350 	.word	0x40020350
 8002108:	50020350 	.word	0x50020350
 800210c:	400203d0 	.word	0x400203d0
 8002110:	500203d0 	.word	0x500203d0
 8002114:	40021050 	.word	0x40021050
 8002118:	50021050 	.word	0x50021050
 800211c:	400210d0 	.word	0x400210d0
 8002120:	500210d0 	.word	0x500210d0
 8002124:	40021150 	.word	0x40021150
 8002128:	50021150 	.word	0x50021150
 800212c:	400211d0 	.word	0x400211d0
 8002130:	500211d0 	.word	0x500211d0
 8002134:	40021250 	.word	0x40021250
 8002138:	50021250 	.word	0x50021250
 800213c:	400212d0 	.word	0x400212d0
 8002140:	500212d0 	.word	0x500212d0
 8002144:	40021350 	.word	0x40021350
 8002148:	50021350 	.word	0x50021350
 800214c:	400213d0 	.word	0x400213d0
 8002150:	500213d0 	.word	0x500213d0
 8002154:	2300      	movs	r3, #0
 8002156:	2b00      	cmp	r3, #0
 8002158:	d012      	beq.n	8002180 <DMA_Init+0x238>
  {
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002162:	3b01      	subs	r3, #1
 8002164:	051b      	lsls	r3, r3, #20
 8002166:	f003 737c 	and.w	r3, r3, #66060288	@ 0x3f00000
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800216a:	431a      	orrs	r2, r3
               (((hdma->Init.SrcBurstLength - 1U) << DMA_CTR1_SBL_1_Pos) & DMA_CTR1_SBL_1));
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002170:	3b01      	subs	r3, #1
 8002172:	011b      	lsls	r3, r3, #4
 8002174:	f403 737c 	and.w	r3, r3, #1008	@ 0x3f0
               (((hdma->Init.DestBurstLength - 1U) << DMA_CTR1_DBL_1_Pos) & DMA_CTR1_DBL_1) |
 8002178:	4313      	orrs	r3, r2
    tmpreg |= (hdma->Init.TransferAllocatedPort                                             |
 800217a:	68fa      	ldr	r2, [r7, #12]
 800217c:	4313      	orrs	r3, r2
 800217e:	60fb      	str	r3, [r7, #12]
  }

  /* Write DMA Channel Transfer Register 1 (CTR1) */
#if defined (DMA_CTR1_SSEC)
  MODIFY_REG(hdma->Instance->CTR1, ~(DMA_CTR1_SSEC | DMA_CTR1_DSEC), tmpreg);
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002186:	f003 2180 	and.w	r1, r3, #2147516416	@ 0x80008000
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	68fa      	ldr	r2, [r7, #12]
 8002190:	430a      	orrs	r2, r1
 8002192:	641a      	str	r2, [r3, #64]	@ 0x40
#else
  WRITE_REG(hdma->Instance->CTR1, tmpreg);
#endif /* DMA_CTR1_SSEC */

  /* Prepare DMA Channel Transfer Register 2 (CTR2) value *************************************************************/
  tmpreg = hdma->Init.BlkHWRequest | (hdma->Init.Request & DMA_CTR2_REQSEL) | hdma->Init.TransferEventMode;
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	689a      	ldr	r2, [r3, #8]
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	685b      	ldr	r3, [r3, #4]
 800219c:	b2db      	uxtb	r3, r3
 800219e:	431a      	orrs	r2, r3
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021a4:	4313      	orrs	r3, r2
 80021a6:	60fb      	str	r3, [r7, #12]

  /* Memory to Peripheral Transfer */
  if ((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	68db      	ldr	r3, [r3, #12]
 80021ac:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80021b0:	f040 80b0 	bne.w	8002314 <DMA_Init+0x3cc>
  {
    if (IS_GPDMA_INSTANCE(hdma->Instance) != 0U)
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	4a84      	ldr	r2, [pc, #528]	@ (80023cc <DMA_Init+0x484>)
 80021ba:	4293      	cmp	r3, r2
 80021bc:	f000 80a0 	beq.w	8002300 <DMA_Init+0x3b8>
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	4a82      	ldr	r2, [pc, #520]	@ (80023d0 <DMA_Init+0x488>)
 80021c6:	4293      	cmp	r3, r2
 80021c8:	f000 809a 	beq.w	8002300 <DMA_Init+0x3b8>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	4a80      	ldr	r2, [pc, #512]	@ (80023d4 <DMA_Init+0x48c>)
 80021d2:	4293      	cmp	r3, r2
 80021d4:	f000 8094 	beq.w	8002300 <DMA_Init+0x3b8>
 80021d8:	687b      	ldr	r3, [r7, #4]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	4a7e      	ldr	r2, [pc, #504]	@ (80023d8 <DMA_Init+0x490>)
 80021de:	4293      	cmp	r3, r2
 80021e0:	f000 808e 	beq.w	8002300 <DMA_Init+0x3b8>
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	681b      	ldr	r3, [r3, #0]
 80021e8:	4a7c      	ldr	r2, [pc, #496]	@ (80023dc <DMA_Init+0x494>)
 80021ea:	4293      	cmp	r3, r2
 80021ec:	f000 8088 	beq.w	8002300 <DMA_Init+0x3b8>
 80021f0:	687b      	ldr	r3, [r7, #4]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	4a7a      	ldr	r2, [pc, #488]	@ (80023e0 <DMA_Init+0x498>)
 80021f6:	4293      	cmp	r3, r2
 80021f8:	f000 8082 	beq.w	8002300 <DMA_Init+0x3b8>
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4a78      	ldr	r2, [pc, #480]	@ (80023e4 <DMA_Init+0x49c>)
 8002202:	4293      	cmp	r3, r2
 8002204:	d07c      	beq.n	8002300 <DMA_Init+0x3b8>
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	4a77      	ldr	r2, [pc, #476]	@ (80023e8 <DMA_Init+0x4a0>)
 800220c:	4293      	cmp	r3, r2
 800220e:	d077      	beq.n	8002300 <DMA_Init+0x3b8>
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	4a75      	ldr	r2, [pc, #468]	@ (80023ec <DMA_Init+0x4a4>)
 8002216:	4293      	cmp	r3, r2
 8002218:	d072      	beq.n	8002300 <DMA_Init+0x3b8>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	4a74      	ldr	r2, [pc, #464]	@ (80023f0 <DMA_Init+0x4a8>)
 8002220:	4293      	cmp	r3, r2
 8002222:	d06d      	beq.n	8002300 <DMA_Init+0x3b8>
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	4a72      	ldr	r2, [pc, #456]	@ (80023f4 <DMA_Init+0x4ac>)
 800222a:	4293      	cmp	r3, r2
 800222c:	d068      	beq.n	8002300 <DMA_Init+0x3b8>
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4a71      	ldr	r2, [pc, #452]	@ (80023f8 <DMA_Init+0x4b0>)
 8002234:	4293      	cmp	r3, r2
 8002236:	d063      	beq.n	8002300 <DMA_Init+0x3b8>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4a6f      	ldr	r2, [pc, #444]	@ (80023fc <DMA_Init+0x4b4>)
 800223e:	4293      	cmp	r3, r2
 8002240:	d05e      	beq.n	8002300 <DMA_Init+0x3b8>
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	4a6e      	ldr	r2, [pc, #440]	@ (8002400 <DMA_Init+0x4b8>)
 8002248:	4293      	cmp	r3, r2
 800224a:	d059      	beq.n	8002300 <DMA_Init+0x3b8>
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	4a6c      	ldr	r2, [pc, #432]	@ (8002404 <DMA_Init+0x4bc>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d054      	beq.n	8002300 <DMA_Init+0x3b8>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	681b      	ldr	r3, [r3, #0]
 800225a:	4a6b      	ldr	r2, [pc, #428]	@ (8002408 <DMA_Init+0x4c0>)
 800225c:	4293      	cmp	r3, r2
 800225e:	d04f      	beq.n	8002300 <DMA_Init+0x3b8>
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	681b      	ldr	r3, [r3, #0]
 8002264:	4a69      	ldr	r2, [pc, #420]	@ (800240c <DMA_Init+0x4c4>)
 8002266:	4293      	cmp	r3, r2
 8002268:	d04a      	beq.n	8002300 <DMA_Init+0x3b8>
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4a68      	ldr	r2, [pc, #416]	@ (8002410 <DMA_Init+0x4c8>)
 8002270:	4293      	cmp	r3, r2
 8002272:	d045      	beq.n	8002300 <DMA_Init+0x3b8>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	4a66      	ldr	r2, [pc, #408]	@ (8002414 <DMA_Init+0x4cc>)
 800227a:	4293      	cmp	r3, r2
 800227c:	d040      	beq.n	8002300 <DMA_Init+0x3b8>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	681b      	ldr	r3, [r3, #0]
 8002282:	4a65      	ldr	r2, [pc, #404]	@ (8002418 <DMA_Init+0x4d0>)
 8002284:	4293      	cmp	r3, r2
 8002286:	d03b      	beq.n	8002300 <DMA_Init+0x3b8>
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4a63      	ldr	r2, [pc, #396]	@ (800241c <DMA_Init+0x4d4>)
 800228e:	4293      	cmp	r3, r2
 8002290:	d036      	beq.n	8002300 <DMA_Init+0x3b8>
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	4a62      	ldr	r2, [pc, #392]	@ (8002420 <DMA_Init+0x4d8>)
 8002298:	4293      	cmp	r3, r2
 800229a:	d031      	beq.n	8002300 <DMA_Init+0x3b8>
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	4a60      	ldr	r2, [pc, #384]	@ (8002424 <DMA_Init+0x4dc>)
 80022a2:	4293      	cmp	r3, r2
 80022a4:	d02c      	beq.n	8002300 <DMA_Init+0x3b8>
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4a5f      	ldr	r2, [pc, #380]	@ (8002428 <DMA_Init+0x4e0>)
 80022ac:	4293      	cmp	r3, r2
 80022ae:	d027      	beq.n	8002300 <DMA_Init+0x3b8>
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	4a5d      	ldr	r2, [pc, #372]	@ (800242c <DMA_Init+0x4e4>)
 80022b6:	4293      	cmp	r3, r2
 80022b8:	d022      	beq.n	8002300 <DMA_Init+0x3b8>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	4a5c      	ldr	r2, [pc, #368]	@ (8002430 <DMA_Init+0x4e8>)
 80022c0:	4293      	cmp	r3, r2
 80022c2:	d01d      	beq.n	8002300 <DMA_Init+0x3b8>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	4a5a      	ldr	r2, [pc, #360]	@ (8002434 <DMA_Init+0x4ec>)
 80022ca:	4293      	cmp	r3, r2
 80022cc:	d018      	beq.n	8002300 <DMA_Init+0x3b8>
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	4a59      	ldr	r2, [pc, #356]	@ (8002438 <DMA_Init+0x4f0>)
 80022d4:	4293      	cmp	r3, r2
 80022d6:	d013      	beq.n	8002300 <DMA_Init+0x3b8>
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	4a57      	ldr	r2, [pc, #348]	@ (800243c <DMA_Init+0x4f4>)
 80022de:	4293      	cmp	r3, r2
 80022e0:	d00e      	beq.n	8002300 <DMA_Init+0x3b8>
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	4a56      	ldr	r2, [pc, #344]	@ (8002440 <DMA_Init+0x4f8>)
 80022e8:	4293      	cmp	r3, r2
 80022ea:	d009      	beq.n	8002300 <DMA_Init+0x3b8>
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	4a54      	ldr	r2, [pc, #336]	@ (8002444 <DMA_Init+0x4fc>)
 80022f2:	4293      	cmp	r3, r2
 80022f4:	d004      	beq.n	8002300 <DMA_Init+0x3b8>
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	4a53      	ldr	r2, [pc, #332]	@ (8002448 <DMA_Init+0x500>)
 80022fc:	4293      	cmp	r3, r2
 80022fe:	d101      	bne.n	8002304 <DMA_Init+0x3bc>
 8002300:	2301      	movs	r3, #1
 8002302:	e000      	b.n	8002306 <DMA_Init+0x3be>
 8002304:	2300      	movs	r3, #0
 8002306:	2b00      	cmp	r3, #0
 8002308:	d00d      	beq.n	8002326 <DMA_Init+0x3de>
    {
      tmpreg |= DMA_CTR2_DREQ;
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002310:	60fb      	str	r3, [r7, #12]
 8002312:	e008      	b.n	8002326 <DMA_Init+0x3de>
    }
  }
  /* Memory to Memory Transfer */
  else if ((hdma->Init.Direction) == DMA_MEMORY_TO_MEMORY)
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	68db      	ldr	r3, [r3, #12]
 8002318:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800231c:	d103      	bne.n	8002326 <DMA_Init+0x3de>
  {
    tmpreg |= DMA_CTR2_SWREQ;
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002324:	60fb      	str	r3, [r7, #12]
  {
    /* Nothing to do */
  }

  /* Set DMA channel operation mode */
  tmpreg |= hdma->Init.Mode;
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800232a:	68fa      	ldr	r2, [r7, #12]
 800232c:	4313      	orrs	r3, r2
 800232e:	60fb      	str	r3, [r7, #12]

  /* Write DMA Channel Transfer Register 2 (CTR2) */
  MODIFY_REG(hdma->Instance->CTR2, (DMA_CTR2_TCEM  | DMA_CTR2_TRIGPOL | DMA_CTR2_TRIGSEL | DMA_CTR2_TRIGM |
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002336:	4b45      	ldr	r3, [pc, #276]	@ (800244c <DMA_Init+0x504>)
 8002338:	4013      	ands	r3, r2
 800233a:	687a      	ldr	r2, [r7, #4]
 800233c:	6812      	ldr	r2, [r2, #0]
 800233e:	68f9      	ldr	r1, [r7, #12]
 8002340:	430b      	orrs	r3, r1
 8002342:	6453      	str	r3, [r2, #68]	@ 0x44
                                    DMA_CTR2_PFREQ | DMA_CTR2_BREQ  | DMA_CTR2_DREQ    | DMA_CTR2_SWREQ   |
                                    DMA_CTR2_REQSEL), tmpreg);


  /* Write DMA Channel Block Register 1 (CBR1) ************************************************************************/
  WRITE_REG(hdma->Instance->CBR1, 0U);
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	2200      	movs	r2, #0
 800234a:	649a      	str	r2, [r3, #72]	@ 0x48

  /* If 2D Addressing is supported by current channel */
  if (IS_DMA_2D_ADDRESSING_INSTANCE(hdma->Instance) != 0U)
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	4a2a      	ldr	r2, [pc, #168]	@ (80023fc <DMA_Init+0x4b4>)
 8002352:	4293      	cmp	r3, r2
 8002354:	d022      	beq.n	800239c <DMA_Init+0x454>
 8002356:	687b      	ldr	r3, [r7, #4]
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	4a29      	ldr	r2, [pc, #164]	@ (8002400 <DMA_Init+0x4b8>)
 800235c:	4293      	cmp	r3, r2
 800235e:	d01d      	beq.n	800239c <DMA_Init+0x454>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	4a27      	ldr	r2, [pc, #156]	@ (8002404 <DMA_Init+0x4bc>)
 8002366:	4293      	cmp	r3, r2
 8002368:	d018      	beq.n	800239c <DMA_Init+0x454>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4a26      	ldr	r2, [pc, #152]	@ (8002408 <DMA_Init+0x4c0>)
 8002370:	4293      	cmp	r3, r2
 8002372:	d013      	beq.n	800239c <DMA_Init+0x454>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	4a30      	ldr	r2, [pc, #192]	@ (800243c <DMA_Init+0x4f4>)
 800237a:	4293      	cmp	r3, r2
 800237c:	d00e      	beq.n	800239c <DMA_Init+0x454>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	4a2f      	ldr	r2, [pc, #188]	@ (8002440 <DMA_Init+0x4f8>)
 8002384:	4293      	cmp	r3, r2
 8002386:	d009      	beq.n	800239c <DMA_Init+0x454>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4a2d      	ldr	r2, [pc, #180]	@ (8002444 <DMA_Init+0x4fc>)
 800238e:	4293      	cmp	r3, r2
 8002390:	d004      	beq.n	800239c <DMA_Init+0x454>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4a2c      	ldr	r2, [pc, #176]	@ (8002448 <DMA_Init+0x500>)
 8002398:	4293      	cmp	r3, r2
 800239a:	d101      	bne.n	80023a0 <DMA_Init+0x458>
 800239c:	2301      	movs	r3, #1
 800239e:	e000      	b.n	80023a2 <DMA_Init+0x45a>
 80023a0:	2300      	movs	r3, #0
 80023a2:	2b00      	cmp	r3, #0
 80023a4:	d007      	beq.n	80023b6 <DMA_Init+0x46e>
  {
    /* Write DMA Channel Transfer Register 3 (CTR3) *******************************************************************/
    WRITE_REG(hdma->Instance->CTR3, 0U);
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	2200      	movs	r2, #0
 80023ac:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Write DMA Channel Block Register 2 (CBR2) **********************************************************************/
    WRITE_REG(hdma->Instance->CBR2, 0U);
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	2200      	movs	r2, #0
 80023b4:	659a      	str	r2, [r3, #88]	@ 0x58
  }

  /* Write DMA Channel linked-list address register (CLLR) ************************************************************/
  WRITE_REG(hdma->Instance->CLLR, 0U);
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	2200      	movs	r2, #0
 80023bc:	67da      	str	r2, [r3, #124]	@ 0x7c
}
 80023be:	bf00      	nop
 80023c0:	3714      	adds	r7, #20
 80023c2:	46bd      	mov	sp, r7
 80023c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023c8:	4770      	bx	lr
 80023ca:	bf00      	nop
 80023cc:	40020050 	.word	0x40020050
 80023d0:	50020050 	.word	0x50020050
 80023d4:	400200d0 	.word	0x400200d0
 80023d8:	500200d0 	.word	0x500200d0
 80023dc:	40020150 	.word	0x40020150
 80023e0:	50020150 	.word	0x50020150
 80023e4:	400201d0 	.word	0x400201d0
 80023e8:	500201d0 	.word	0x500201d0
 80023ec:	40020250 	.word	0x40020250
 80023f0:	50020250 	.word	0x50020250
 80023f4:	400202d0 	.word	0x400202d0
 80023f8:	500202d0 	.word	0x500202d0
 80023fc:	40020350 	.word	0x40020350
 8002400:	50020350 	.word	0x50020350
 8002404:	400203d0 	.word	0x400203d0
 8002408:	500203d0 	.word	0x500203d0
 800240c:	40021050 	.word	0x40021050
 8002410:	50021050 	.word	0x50021050
 8002414:	400210d0 	.word	0x400210d0
 8002418:	500210d0 	.word	0x500210d0
 800241c:	40021150 	.word	0x40021150
 8002420:	50021150 	.word	0x50021150
 8002424:	400211d0 	.word	0x400211d0
 8002428:	500211d0 	.word	0x500211d0
 800242c:	40021250 	.word	0x40021250
 8002430:	50021250 	.word	0x50021250
 8002434:	400212d0 	.word	0x400212d0
 8002438:	500212d0 	.word	0x500212d0
 800243c:	40021350 	.word	0x40021350
 8002440:	50021350 	.word	0x50021350
 8002444:	400213d0 	.word	0x400213d0
 8002448:	500213d0 	.word	0x500213d0
 800244c:	3cc02100 	.word	0x3cc02100

08002450 <HAL_DMAEx_List_Start_IT>:
  * @param  hdma : Pointer to a DMA_HandleTypeDef structure that contains the configuration information for the
  *                specified DMA Channel.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DMAEx_List_Start_IT(DMA_HandleTypeDef *const hdma)
{
 8002450:	b580      	push	{r7, lr}
 8002452:	b086      	sub	sp, #24
 8002454:	af00      	add	r7, sp, #0
 8002456:	6078      	str	r0, [r7, #4]
  HAL_DMA_StateTypeDef dma_state;
  uint32_t ccr_value;
  uint32_t cllr_mask;

  /* Check the DMA peripheral handle and the linked-list queue parameters */
  if ((hdma == NULL) || (hdma->LinkedListQueue == NULL))
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	2b00      	cmp	r3, #0
 800245c:	d003      	beq.n	8002466 <HAL_DMAEx_List_Start_IT+0x16>
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002462:	2b00      	cmp	r3, #0
 8002464:	d101      	bne.n	800246a <HAL_DMAEx_List_Start_IT+0x1a>
  {
    return HAL_ERROR;
 8002466:	2301      	movs	r3, #1
 8002468:	e088      	b.n	800257c <HAL_DMAEx_List_Start_IT+0x12c>
  }

  /* Check the DMA Mode is not DMA_NORMAL */
  if (hdma->Mode == DMA_NORMAL)
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800246e:	2b00      	cmp	r3, #0
 8002470:	d101      	bne.n	8002476 <HAL_DMAEx_List_Start_IT+0x26>
  {
    return HAL_ERROR;
 8002472:	2301      	movs	r3, #1
 8002474:	e082      	b.n	800257c <HAL_DMAEx_List_Start_IT+0x12c>
  }

  /* Check DMA channel state */
  dma_state = hdma->State;
 8002476:	687b      	ldr	r3, [r7, #4]
 8002478:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 800247c:	75fb      	strb	r3, [r7, #23]
  ccr_value = hdma->Instance->CCR & DMA_CCR_LSM;
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	695b      	ldr	r3, [r3, #20]
 8002484:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002488:	613b      	str	r3, [r7, #16]
  if ((dma_state == HAL_DMA_STATE_READY) || ((dma_state == HAL_DMA_STATE_BUSY) && (ccr_value != 0U)))
 800248a:	7dfb      	ldrb	r3, [r7, #23]
 800248c:	2b01      	cmp	r3, #1
 800248e:	d005      	beq.n	800249c <HAL_DMAEx_List_Start_IT+0x4c>
 8002490:	7dfb      	ldrb	r3, [r7, #23]
 8002492:	2b02      	cmp	r3, #2
 8002494:	d16a      	bne.n	800256c <HAL_DMAEx_List_Start_IT+0x11c>
 8002496:	693b      	ldr	r3, [r7, #16]
 8002498:	2b00      	cmp	r3, #0
 800249a:	d067      	beq.n	800256c <HAL_DMAEx_List_Start_IT+0x11c>
  {
    /* Check DMA channel state is ready */
    if (hdma->State == HAL_DMA_STATE_READY)
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 80024a2:	b2db      	uxtb	r3, r3
 80024a4:	2b01      	cmp	r3, #1
 80024a6:	d157      	bne.n	8002558 <HAL_DMAEx_List_Start_IT+0x108>
    {
      /* Process locked */
      __HAL_LOCK(hdma);
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	f893 304c 	ldrb.w	r3, [r3, #76]	@ 0x4c
 80024ae:	2b01      	cmp	r3, #1
 80024b0:	d101      	bne.n	80024b6 <HAL_DMAEx_List_Start_IT+0x66>
 80024b2:	2302      	movs	r3, #2
 80024b4:	e062      	b.n	800257c <HAL_DMAEx_List_Start_IT+0x12c>
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	2201      	movs	r2, #1
 80024ba:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c

      /* Update the DMA channel and the queue states */
      hdma->State                  = HAL_DMA_STATE_BUSY;
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	2202      	movs	r2, #2
 80024c2:	f883 2054 	strb.w	r2, [r3, #84]	@ 0x54
      hdma->LinkedListQueue->State = HAL_DMA_QUEUE_STATE_BUSY;
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80024ca:	2202      	movs	r2, #2
 80024cc:	731a      	strb	r2, [r3, #12]

      /* Update the DMA channel and the queue error codes */
      hdma->ErrorCode                  = HAL_DMA_ERROR_NONE;
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	2200      	movs	r2, #0
 80024d2:	659a      	str	r2, [r3, #88]	@ 0x58
      hdma->LinkedListQueue->ErrorCode = HAL_DMA_QUEUE_ERROR_NONE;
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80024d8:	2200      	movs	r2, #0
 80024da:	611a      	str	r2, [r3, #16]

      /* Enable common interrupts: Transfer Complete and Transfer Errors ITs */
      __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_DTE | DMA_IT_ULE | DMA_IT_USE | DMA_IT_TO));
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	695a      	ldr	r2, [r3, #20]
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	681b      	ldr	r3, [r3, #0]
 80024e6:	f442 42ba 	orr.w	r2, r2, #23808	@ 0x5d00
 80024ea:	615a      	str	r2, [r3, #20]

      /* Check half transfer complete callback */
      if (hdma->XferHalfCpltCallback != NULL)
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d007      	beq.n	8002504 <HAL_DMAEx_List_Start_IT+0xb4>
      {
        /* If half transfer complete callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	695a      	ldr	r2, [r3, #20]
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002502:	615a      	str	r2, [r3, #20]
      }

      /* Check suspend callback */
      if (hdma->XferSuspendCallback != NULL)
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002508:	2b00      	cmp	r3, #0
 800250a:	d007      	beq.n	800251c <HAL_DMAEx_List_Start_IT+0xcc>
      {
        /* If transfer suspend callback is set, enable the corresponding IT */
        __HAL_DMA_ENABLE_IT(hdma, DMA_IT_SUSP);
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	695a      	ldr	r2, [r3, #20]
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800251a:	615a      	str	r2, [r3, #20]
      }

      /* Get CLLR register mask and offset */
      DMA_List_GetCLLRNodeInfo(hdma->LinkedListQueue->Head, &cllr_mask, NULL);
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	f107 010c 	add.w	r1, r7, #12
 8002526:	2200      	movs	r2, #0
 8002528:	4618      	mov	r0, r3
 800252a:	f000 f82b 	bl	8002584 <DMA_List_GetCLLRNodeInfo>

      /* Update DMA registers for linked-list transfer */
      hdma->Instance->CLBAR = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLBAR_LBA);
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	4619      	mov	r1, r3
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	681a      	ldr	r2, [r3, #0]
 800253a:	0c0b      	lsrs	r3, r1, #16
 800253c:	041b      	lsls	r3, r3, #16
 800253e:	6013      	str	r3, [r2, #0]
      hdma->Instance->CLLR  = ((uint32_t)hdma->LinkedListQueue->Head & DMA_CLLR_LA) | cllr_mask;
 8002540:	687b      	ldr	r3, [r7, #4]
 8002542:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	461a      	mov	r2, r3
 8002548:	f64f 73fc 	movw	r3, #65532	@ 0xfffc
 800254c:	4013      	ands	r3, r2
 800254e:	68f9      	ldr	r1, [r7, #12]
 8002550:	687a      	ldr	r2, [r7, #4]
 8002552:	6812      	ldr	r2, [r2, #0]
 8002554:	430b      	orrs	r3, r1
 8002556:	67d3      	str	r3, [r2, #124]	@ 0x7c
    }

    /* Enable DMA channel */
    __HAL_DMA_ENABLE(hdma);
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	695a      	ldr	r2, [r3, #20]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	681b      	ldr	r3, [r3, #0]
 8002562:	f042 0201 	orr.w	r2, r2, #1
 8002566:	615a      	str	r2, [r3, #20]
    __HAL_UNLOCK(hdma);

    return HAL_ERROR;
  }

  return HAL_OK;
 8002568:	2300      	movs	r3, #0
 800256a:	e007      	b.n	800257c <HAL_DMAEx_List_Start_IT+0x12c>
    hdma->ErrorCode = HAL_DMA_ERROR_BUSY;
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	2240      	movs	r2, #64	@ 0x40
 8002570:	659a      	str	r2, [r3, #88]	@ 0x58
    __HAL_UNLOCK(hdma);
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	2200      	movs	r2, #0
 8002576:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
    return HAL_ERROR;
 800257a:	2301      	movs	r3, #1
}
 800257c:	4618      	mov	r0, r3
 800257e:	3718      	adds	r7, #24
 8002580:	46bd      	mov	sp, r7
 8002582:	bd80      	pop	{r7, pc}

08002584 <DMA_List_GetCLLRNodeInfo>:
  * @retval None.
  */
static void DMA_List_GetCLLRNodeInfo(DMA_NodeTypeDef const *const pNode,
                                     uint32_t *const cllr_mask,
                                     uint32_t *const cllr_offset)
{
 8002584:	b480      	push	{r7}
 8002586:	b085      	sub	sp, #20
 8002588:	af00      	add	r7, sp, #0
 800258a:	60f8      	str	r0, [r7, #12]
 800258c:	60b9      	str	r1, [r7, #8]
 800258e:	607a      	str	r2, [r7, #4]
  /* Check node type */
  if ((pNode->NodeInfo & DMA_CHANNEL_TYPE_2D_ADDR) == DMA_CHANNEL_TYPE_2D_ADDR)
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	6a1b      	ldr	r3, [r3, #32]
 8002594:	f003 0302 	and.w	r3, r3, #2
 8002598:	2b00      	cmp	r3, #0
 800259a:	d00c      	beq.n	80025b6 <DMA_List_GetCLLRNodeInfo+0x32>
  {
    /* Update CLLR register mask value */
    if (cllr_mask != NULL)
 800259c:	68bb      	ldr	r3, [r7, #8]
 800259e:	2b00      	cmp	r3, #0
 80025a0:	d002      	beq.n	80025a8 <DMA_List_GetCLLRNodeInfo+0x24>
    {
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_UT3 |
 80025a2:	68bb      	ldr	r3, [r7, #8]
 80025a4:	4a0d      	ldr	r2, [pc, #52]	@ (80025dc <DMA_List_GetCLLRNodeInfo+0x58>)
 80025a6:	601a      	str	r2, [r3, #0]
                   DMA_CLLR_UB2 | DMA_CLLR_ULL;
    }

    /* Update CLLR register offset */
    if (cllr_offset != NULL)
 80025a8:	687b      	ldr	r3, [r7, #4]
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d00f      	beq.n	80025ce <DMA_List_GetCLLRNodeInfo+0x4a>
    {
      *cllr_offset = NODE_CLLR_2D_DEFAULT_OFFSET;
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	2207      	movs	r2, #7
 80025b2:	601a      	str	r2, [r3, #0]
    if (cllr_offset != NULL)
    {
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
    }
  }
}
 80025b4:	e00b      	b.n	80025ce <DMA_List_GetCLLRNodeInfo+0x4a>
    if (cllr_mask != NULL)
 80025b6:	68bb      	ldr	r3, [r7, #8]
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d002      	beq.n	80025c2 <DMA_List_GetCLLRNodeInfo+0x3e>
      *cllr_mask = DMA_CLLR_UT1 | DMA_CLLR_UT2 | DMA_CLLR_UB1 | DMA_CLLR_USA | DMA_CLLR_UDA | DMA_CLLR_ULL;
 80025bc:	68bb      	ldr	r3, [r7, #8]
 80025be:	4a08      	ldr	r2, [pc, #32]	@ (80025e0 <DMA_List_GetCLLRNodeInfo+0x5c>)
 80025c0:	601a      	str	r2, [r3, #0]
    if (cllr_offset != NULL)
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d002      	beq.n	80025ce <DMA_List_GetCLLRNodeInfo+0x4a>
      *cllr_offset = NODE_CLLR_LINEAR_DEFAULT_OFFSET;
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	2205      	movs	r2, #5
 80025cc:	601a      	str	r2, [r3, #0]
}
 80025ce:	bf00      	nop
 80025d0:	3714      	adds	r7, #20
 80025d2:	46bd      	mov	sp, r7
 80025d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025d8:	4770      	bx	lr
 80025da:	bf00      	nop
 80025dc:	fe010000 	.word	0xfe010000
 80025e0:	f8010000 	.word	0xf8010000

080025e4 <HAL_GPIO_Init>:
  * @param  pGPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, const GPIO_InitTypeDef *pGPIO_Init)
{
 80025e4:	b480      	push	{r7}
 80025e6:	b087      	sub	sp, #28
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	6078      	str	r0, [r7, #4]
 80025ec:	6039      	str	r1, [r7, #0]
  uint32_t tmp;
  uint32_t iocurrent;
  uint32_t position = 0U;
 80025ee:	2300      	movs	r3, #0
 80025f0:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_PIN(pGPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(pGPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

  /* Configure the port pins */
  while (((pGPIO_Init->Pin) >> position) != 0U)
 80025f2:	e142      	b.n	800287a <HAL_GPIO_Init+0x296>
  {
    /* Get current io position */
    iocurrent = (pGPIO_Init->Pin) & (1UL << position);
 80025f4:	683b      	ldr	r3, [r7, #0]
 80025f6:	681a      	ldr	r2, [r3, #0]
 80025f8:	2101      	movs	r1, #1
 80025fa:	693b      	ldr	r3, [r7, #16]
 80025fc:	fa01 f303 	lsl.w	r3, r1, r3
 8002600:	4013      	ands	r3, r2
 8002602:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0U)
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	2b00      	cmp	r3, #0
 8002608:	f000 8134 	beq.w	8002874 <HAL_GPIO_Init+0x290>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_AF_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 800260c:	683b      	ldr	r3, [r7, #0]
 800260e:	685b      	ldr	r3, [r3, #4]
 8002610:	2b02      	cmp	r3, #2
 8002612:	d003      	beq.n	800261c <HAL_GPIO_Init+0x38>
 8002614:	683b      	ldr	r3, [r7, #0]
 8002616:	685b      	ldr	r3, [r3, #4]
 8002618:	2b12      	cmp	r3, #18
 800261a:	d125      	bne.n	8002668 <HAL_GPIO_Init+0x84>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(pGPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        tmp = GPIOx->AFR[position >> 3U];
 800261c:	693b      	ldr	r3, [r7, #16]
 800261e:	08da      	lsrs	r2, r3, #3
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	3208      	adds	r2, #8
 8002624:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002628:	617b      	str	r3, [r7, #20]
        tmp &= ~(0x0FUL << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 800262a:	693b      	ldr	r3, [r7, #16]
 800262c:	f003 0307 	and.w	r3, r3, #7
 8002630:	009b      	lsls	r3, r3, #2
 8002632:	220f      	movs	r2, #15
 8002634:	fa02 f303 	lsl.w	r3, r2, r3
 8002638:	43db      	mvns	r3, r3
 800263a:	697a      	ldr	r2, [r7, #20]
 800263c:	4013      	ands	r3, r2
 800263e:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Alternate & 0x0FUL) << ((position & 0x07U) * GPIO_AFRL_AFSEL1_Pos));
 8002640:	683b      	ldr	r3, [r7, #0]
 8002642:	691b      	ldr	r3, [r3, #16]
 8002644:	f003 020f 	and.w	r2, r3, #15
 8002648:	693b      	ldr	r3, [r7, #16]
 800264a:	f003 0307 	and.w	r3, r3, #7
 800264e:	009b      	lsls	r3, r3, #2
 8002650:	fa02 f303 	lsl.w	r3, r2, r3
 8002654:	697a      	ldr	r2, [r7, #20]
 8002656:	4313      	orrs	r3, r2
 8002658:	617b      	str	r3, [r7, #20]
        GPIOx->AFR[position >> 3U] = tmp;
 800265a:	693b      	ldr	r3, [r7, #16]
 800265c:	08da      	lsrs	r2, r3, #3
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	3208      	adds	r2, #8
 8002662:	6979      	ldr	r1, [r7, #20]
 8002664:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      tmp = GPIOx->MODER;
 8002668:	687b      	ldr	r3, [r7, #4]
 800266a:	681b      	ldr	r3, [r3, #0]
 800266c:	617b      	str	r3, [r7, #20]
      tmp &= ~(GPIO_MODER_MODE0 << (position * GPIO_MODER_MODE1_Pos));
 800266e:	693b      	ldr	r3, [r7, #16]
 8002670:	005b      	lsls	r3, r3, #1
 8002672:	2203      	movs	r2, #3
 8002674:	fa02 f303 	lsl.w	r3, r2, r3
 8002678:	43db      	mvns	r3, r3
 800267a:	697a      	ldr	r2, [r7, #20]
 800267c:	4013      	ands	r3, r2
 800267e:	617b      	str	r3, [r7, #20]
      tmp |= ((pGPIO_Init->Mode & GPIO_MODE) << (position * GPIO_MODER_MODE1_Pos));
 8002680:	683b      	ldr	r3, [r7, #0]
 8002682:	685b      	ldr	r3, [r3, #4]
 8002684:	f003 0203 	and.w	r2, r3, #3
 8002688:	693b      	ldr	r3, [r7, #16]
 800268a:	005b      	lsls	r3, r3, #1
 800268c:	fa02 f303 	lsl.w	r3, r2, r3
 8002690:	697a      	ldr	r2, [r7, #20]
 8002692:	4313      	orrs	r3, r2
 8002694:	617b      	str	r3, [r7, #20]
      GPIOx->MODER = tmp;
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	697a      	ldr	r2, [r7, #20]
 800269a:	601a      	str	r2, [r3, #0]

      /* In case of Output or Alternate function mode selection */
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	685b      	ldr	r3, [r3, #4]
 80026a0:	2b01      	cmp	r3, #1
 80026a2:	d00b      	beq.n	80026bc <HAL_GPIO_Init+0xd8>
 80026a4:	683b      	ldr	r3, [r7, #0]
 80026a6:	685b      	ldr	r3, [r3, #4]
 80026a8:	2b02      	cmp	r3, #2
 80026aa:	d007      	beq.n	80026bc <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80026ac:	683b      	ldr	r3, [r7, #0]
 80026ae:	685b      	ldr	r3, [r3, #4]
      if ((pGPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (pGPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80026b0:	2b11      	cmp	r3, #17
 80026b2:	d003      	beq.n	80026bc <HAL_GPIO_Init+0xd8>
          (pGPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (pGPIO_Init->Mode == GPIO_MODE_AF_OD))
 80026b4:	683b      	ldr	r3, [r7, #0]
 80026b6:	685b      	ldr	r3, [r3, #4]
 80026b8:	2b12      	cmp	r3, #18
 80026ba:	d130      	bne.n	800271e <HAL_GPIO_Init+0x13a>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(pGPIO_Init->Speed));

        /* Configure the IO Speed */
        tmp = GPIOx->OSPEEDR;
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	689b      	ldr	r3, [r3, #8]
 80026c0:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 80026c2:	693b      	ldr	r3, [r7, #16]
 80026c4:	005b      	lsls	r3, r3, #1
 80026c6:	2203      	movs	r2, #3
 80026c8:	fa02 f303 	lsl.w	r3, r2, r3
 80026cc:	43db      	mvns	r3, r3
 80026ce:	697a      	ldr	r2, [r7, #20]
 80026d0:	4013      	ands	r3, r2
 80026d2:	617b      	str	r3, [r7, #20]
        tmp |= (pGPIO_Init->Speed << (position * GPIO_OSPEEDR_OSPEED1_Pos));
 80026d4:	683b      	ldr	r3, [r7, #0]
 80026d6:	68da      	ldr	r2, [r3, #12]
 80026d8:	693b      	ldr	r3, [r7, #16]
 80026da:	005b      	lsls	r3, r3, #1
 80026dc:	fa02 f303 	lsl.w	r3, r2, r3
 80026e0:	697a      	ldr	r2, [r7, #20]
 80026e2:	4313      	orrs	r3, r2
 80026e4:	617b      	str	r3, [r7, #20]
        GPIOx->OSPEEDR = tmp;
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	697a      	ldr	r2, [r7, #20]
 80026ea:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        tmp = GPIOx->OTYPER;
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	685b      	ldr	r3, [r3, #4]
 80026f0:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_OTYPER_OT0 << position) ;
 80026f2:	2201      	movs	r2, #1
 80026f4:	693b      	ldr	r3, [r7, #16]
 80026f6:	fa02 f303 	lsl.w	r3, r2, r3
 80026fa:	43db      	mvns	r3, r3
 80026fc:	697a      	ldr	r2, [r7, #20]
 80026fe:	4013      	ands	r3, r2
 8002700:	617b      	str	r3, [r7, #20]
        tmp |= (((pGPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8002702:	683b      	ldr	r3, [r7, #0]
 8002704:	685b      	ldr	r3, [r3, #4]
 8002706:	091b      	lsrs	r3, r3, #4
 8002708:	f003 0201 	and.w	r2, r3, #1
 800270c:	693b      	ldr	r3, [r7, #16]
 800270e:	fa02 f303 	lsl.w	r3, r2, r3
 8002712:	697a      	ldr	r2, [r7, #20]
 8002714:	4313      	orrs	r3, r2
 8002716:	617b      	str	r3, [r7, #20]
        GPIOx->OTYPER = tmp;
 8002718:	687b      	ldr	r3, [r7, #4]
 800271a:	697a      	ldr	r2, [r7, #20]
 800271c:	605a      	str	r2, [r3, #4]
      }

      if (((pGPIO_Init->Mode & GPIO_MODE) != GPIO_MODE_ANALOG) ||
 800271e:	683b      	ldr	r3, [r7, #0]
 8002720:	685b      	ldr	r3, [r3, #4]
 8002722:	f003 0303 	and.w	r3, r3, #3
 8002726:	2b03      	cmp	r3, #3
 8002728:	d109      	bne.n	800273e <HAL_GPIO_Init+0x15a>
          (((pGPIO_Init->Mode & GPIO_MODE) == GPIO_MODE_ANALOG) && (pGPIO_Init->Pull != GPIO_PULLUP)))
 800272a:	683b      	ldr	r3, [r7, #0]
 800272c:	685b      	ldr	r3, [r3, #4]
 800272e:	f003 0303 	and.w	r3, r3, #3
      if (((pGPIO_Init->Mode & GPIO_MODE) != GPIO_MODE_ANALOG) ||
 8002732:	2b03      	cmp	r3, #3
 8002734:	d11b      	bne.n	800276e <HAL_GPIO_Init+0x18a>
          (((pGPIO_Init->Mode & GPIO_MODE) == GPIO_MODE_ANALOG) && (pGPIO_Init->Pull != GPIO_PULLUP)))
 8002736:	683b      	ldr	r3, [r7, #0]
 8002738:	689b      	ldr	r3, [r3, #8]
 800273a:	2b01      	cmp	r3, #1
 800273c:	d017      	beq.n	800276e <HAL_GPIO_Init+0x18a>
      {
        /* Check the Pull parameters */
        assert_param(IS_GPIO_PULL(pGPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        tmp = GPIOx->PUPDR;
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	68db      	ldr	r3, [r3, #12]
 8002742:	617b      	str	r3, [r7, #20]
        tmp &= ~(GPIO_PUPDR_PUPD0 << (position * GPIO_PUPDR_PUPD1_Pos));
 8002744:	693b      	ldr	r3, [r7, #16]
 8002746:	005b      	lsls	r3, r3, #1
 8002748:	2203      	movs	r2, #3
 800274a:	fa02 f303 	lsl.w	r3, r2, r3
 800274e:	43db      	mvns	r3, r3
 8002750:	697a      	ldr	r2, [r7, #20]
 8002752:	4013      	ands	r3, r2
 8002754:	617b      	str	r3, [r7, #20]
        tmp |= ((pGPIO_Init->Pull) << (position * GPIO_PUPDR_PUPD1_Pos));
 8002756:	683b      	ldr	r3, [r7, #0]
 8002758:	689a      	ldr	r2, [r3, #8]
 800275a:	693b      	ldr	r3, [r7, #16]
 800275c:	005b      	lsls	r3, r3, #1
 800275e:	fa02 f303 	lsl.w	r3, r2, r3
 8002762:	697a      	ldr	r2, [r7, #20]
 8002764:	4313      	orrs	r3, r2
 8002766:	617b      	str	r3, [r7, #20]
        GPIOx->PUPDR = tmp;
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	697a      	ldr	r2, [r7, #20]
 800276c:	60da      	str	r2, [r3, #12]
      }

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((pGPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800276e:	683b      	ldr	r3, [r7, #0]
 8002770:	685b      	ldr	r3, [r3, #4]
 8002772:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002776:	2b00      	cmp	r3, #0
 8002778:	d07c      	beq.n	8002874 <HAL_GPIO_Init+0x290>
      {
        tmp = EXTI->EXTICR[position >> 2U];
 800277a:	4a47      	ldr	r2, [pc, #284]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 800277c:	693b      	ldr	r3, [r7, #16]
 800277e:	089b      	lsrs	r3, r3, #2
 8002780:	3318      	adds	r3, #24
 8002782:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002786:	617b      	str	r3, [r7, #20]
        tmp &= ~((0x0FUL) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 8002788:	693b      	ldr	r3, [r7, #16]
 800278a:	f003 0303 	and.w	r3, r3, #3
 800278e:	00db      	lsls	r3, r3, #3
 8002790:	220f      	movs	r2, #15
 8002792:	fa02 f303 	lsl.w	r3, r2, r3
 8002796:	43db      	mvns	r3, r3
 8002798:	697a      	ldr	r2, [r7, #20]
 800279a:	4013      	ands	r3, r2
 800279c:	617b      	str	r3, [r7, #20]
        tmp |= (GPIO_GET_INDEX(GPIOx) << ((position & 0x03U) * EXTI_EXTICR1_EXTI1_Pos));
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	0a9a      	lsrs	r2, r3, #10
 80027a2:	4b3e      	ldr	r3, [pc, #248]	@ (800289c <HAL_GPIO_Init+0x2b8>)
 80027a4:	4013      	ands	r3, r2
 80027a6:	693a      	ldr	r2, [r7, #16]
 80027a8:	f002 0203 	and.w	r2, r2, #3
 80027ac:	00d2      	lsls	r2, r2, #3
 80027ae:	4093      	lsls	r3, r2
 80027b0:	697a      	ldr	r2, [r7, #20]
 80027b2:	4313      	orrs	r3, r2
 80027b4:	617b      	str	r3, [r7, #20]
        EXTI->EXTICR[position >> 2U] = tmp;
 80027b6:	4938      	ldr	r1, [pc, #224]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 80027b8:	693b      	ldr	r3, [r7, #16]
 80027ba:	089b      	lsrs	r3, r3, #2
 80027bc:	3318      	adds	r3, #24
 80027be:	697a      	ldr	r2, [r7, #20]
 80027c0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        tmp = EXTI->RTSR1;
 80027c4:	4b34      	ldr	r3, [pc, #208]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 80027ca:	68fb      	ldr	r3, [r7, #12]
 80027cc:	43db      	mvns	r3, r3
 80027ce:	697a      	ldr	r2, [r7, #20]
 80027d0:	4013      	ands	r3, r2
 80027d2:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80027d4:	683b      	ldr	r3, [r7, #0]
 80027d6:	685b      	ldr	r3, [r3, #4]
 80027d8:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80027dc:	2b00      	cmp	r3, #0
 80027de:	d003      	beq.n	80027e8 <HAL_GPIO_Init+0x204>
        {
          tmp |= iocurrent;
 80027e0:	697a      	ldr	r2, [r7, #20]
 80027e2:	68fb      	ldr	r3, [r7, #12]
 80027e4:	4313      	orrs	r3, r2
 80027e6:	617b      	str	r3, [r7, #20]
        }
        EXTI->RTSR1 = tmp;
 80027e8:	4a2b      	ldr	r2, [pc, #172]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 80027ea:	697b      	ldr	r3, [r7, #20]
 80027ec:	6013      	str	r3, [r2, #0]

        tmp = EXTI->FTSR1;
 80027ee:	4b2a      	ldr	r3, [pc, #168]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 80027f0:	685b      	ldr	r3, [r3, #4]
 80027f2:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 80027f4:	68fb      	ldr	r3, [r7, #12]
 80027f6:	43db      	mvns	r3, r3
 80027f8:	697a      	ldr	r2, [r7, #20]
 80027fa:	4013      	ands	r3, r2
 80027fc:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80027fe:	683b      	ldr	r3, [r7, #0]
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002806:	2b00      	cmp	r3, #0
 8002808:	d003      	beq.n	8002812 <HAL_GPIO_Init+0x22e>
        {
          tmp |= iocurrent;
 800280a:	697a      	ldr	r2, [r7, #20]
 800280c:	68fb      	ldr	r3, [r7, #12]
 800280e:	4313      	orrs	r3, r2
 8002810:	617b      	str	r3, [r7, #20]
        }
        EXTI->FTSR1 = tmp;
 8002812:	4a21      	ldr	r2, [pc, #132]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 8002814:	697b      	ldr	r3, [r7, #20]
 8002816:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        tmp = EXTI->EMR1;
 8002818:	4b1f      	ldr	r3, [pc, #124]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 800281a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800281e:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	43db      	mvns	r3, r3
 8002824:	697a      	ldr	r2, [r7, #20]
 8002826:	4013      	ands	r3, r2
 8002828:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800282a:	683b      	ldr	r3, [r7, #0]
 800282c:	685b      	ldr	r3, [r3, #4]
 800282e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002832:	2b00      	cmp	r3, #0
 8002834:	d003      	beq.n	800283e <HAL_GPIO_Init+0x25a>
        {
          tmp |= iocurrent;
 8002836:	697a      	ldr	r2, [r7, #20]
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	4313      	orrs	r3, r2
 800283c:	617b      	str	r3, [r7, #20]
        }
        EXTI->EMR1 = tmp;
 800283e:	4a16      	ldr	r2, [pc, #88]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 8002840:	697b      	ldr	r3, [r7, #20]
 8002842:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84

        tmp = EXTI->IMR1;
 8002846:	4b14      	ldr	r3, [pc, #80]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 8002848:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800284c:	617b      	str	r3, [r7, #20]
        tmp &= ~((uint32_t)iocurrent);
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	43db      	mvns	r3, r3
 8002852:	697a      	ldr	r2, [r7, #20]
 8002854:	4013      	ands	r3, r2
 8002856:	617b      	str	r3, [r7, #20]
        if ((pGPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	685b      	ldr	r3, [r3, #4]
 800285c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002860:	2b00      	cmp	r3, #0
 8002862:	d003      	beq.n	800286c <HAL_GPIO_Init+0x288>
        {
          tmp |= iocurrent;
 8002864:	697a      	ldr	r2, [r7, #20]
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	4313      	orrs	r3, r2
 800286a:	617b      	str	r3, [r7, #20]
        }
        EXTI->IMR1 = tmp;
 800286c:	4a0a      	ldr	r2, [pc, #40]	@ (8002898 <HAL_GPIO_Init+0x2b4>)
 800286e:	697b      	ldr	r3, [r7, #20]
 8002870:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
      }
    }

    position++;
 8002874:	693b      	ldr	r3, [r7, #16]
 8002876:	3301      	adds	r3, #1
 8002878:	613b      	str	r3, [r7, #16]
  while (((pGPIO_Init->Pin) >> position) != 0U)
 800287a:	683b      	ldr	r3, [r7, #0]
 800287c:	681a      	ldr	r2, [r3, #0]
 800287e:	693b      	ldr	r3, [r7, #16]
 8002880:	fa22 f303 	lsr.w	r3, r2, r3
 8002884:	2b00      	cmp	r3, #0
 8002886:	f47f aeb5 	bne.w	80025f4 <HAL_GPIO_Init+0x10>
  }
}
 800288a:	bf00      	nop
 800288c:	bf00      	nop
 800288e:	371c      	adds	r7, #28
 8002890:	46bd      	mov	sp, r7
 8002892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002896:	4770      	bx	lr
 8002898:	44022000 	.word	0x44022000
 800289c:	002f7f7f 	.word	0x002f7f7f

080028a0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80028a0:	b480      	push	{r7}
 80028a2:	b083      	sub	sp, #12
 80028a4:	af00      	add	r7, sp, #0
 80028a6:	6078      	str	r0, [r7, #4]
 80028a8:	460b      	mov	r3, r1
 80028aa:	807b      	strh	r3, [r7, #2]
 80028ac:	4613      	mov	r3, r2
 80028ae:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80028b0:	787b      	ldrb	r3, [r7, #1]
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d003      	beq.n	80028be <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80028b6:	887a      	ldrh	r2, [r7, #2]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 80028bc:	e002      	b.n	80028c4 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 80028be:	887a      	ldrh	r2, [r7, #2]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	629a      	str	r2, [r3, #40]	@ 0x28
}
 80028c4:	bf00      	nop
 80028c6:	370c      	adds	r7, #12
 80028c8:	46bd      	mov	sp, r7
 80028ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ce:	4770      	bx	lr

080028d0 <HAL_ICACHE_Enable>:
  *         cache operation. The Instruction Cache is bypassed until the
  *         cache operation completes.
  * @retval HAL status (HAL_OK)
  */
HAL_StatusTypeDef HAL_ICACHE_Enable(void)
{
 80028d0:	b480      	push	{r7}
 80028d2:	af00      	add	r7, sp, #0
  SET_BIT(ICACHE->CR, ICACHE_CR_EN);
 80028d4:	4b05      	ldr	r3, [pc, #20]	@ (80028ec <HAL_ICACHE_Enable+0x1c>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	4a04      	ldr	r2, [pc, #16]	@ (80028ec <HAL_ICACHE_Enable+0x1c>)
 80028da:	f043 0301 	orr.w	r3, r3, #1
 80028de:	6013      	str	r3, [r2, #0]

  return HAL_OK;
 80028e0:	2300      	movs	r3, #0
}
 80028e2:	4618      	mov	r0, r3
 80028e4:	46bd      	mov	sp, r7
 80028e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ea:	4770      	bx	lr
 80028ec:	40030400 	.word	0x40030400

080028f0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *pOscInitStruct)
{
 80028f0:	b580      	push	{r7, lr}
 80028f2:	b088      	sub	sp, #32
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	6078      	str	r0, [r7, #4]
  uint32_t temp_pllckselr;
  uint32_t temp1_pllckcfg;
  uint32_t temp2_pllckcfg;

  /* Check Null pointer */
  if (pOscInitStruct == NULL)
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d102      	bne.n	8002904 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80028fe:	2301      	movs	r3, #1
 8002900:	f000 bc28 	b.w	8003154 <HAL_RCC_OscConfig+0x864>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(pOscInitStruct->OscillatorType));
  temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002904:	4b94      	ldr	r3, [pc, #592]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002906:	69db      	ldr	r3, [r3, #28]
 8002908:	f003 0318 	and.w	r3, r3, #24
 800290c:	61fb      	str	r3, [r7, #28]
  temp_pllckselr = __HAL_RCC_GET_PLL1_OSCSOURCE();
 800290e:	4b92      	ldr	r3, [pc, #584]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002910:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002912:	f003 0303 	and.w	r3, r3, #3
 8002916:	61bb      	str	r3, [r7, #24]

  /*----------------------------- CSI Configuration --------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	f003 0310 	and.w	r3, r3, #16
 8002920:	2b00      	cmp	r3, #0
 8002922:	d05b      	beq.n	80029dc <HAL_RCC_OscConfig+0xec>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(pOscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(pOscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not be disabled */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_CSI) ||
 8002924:	69fb      	ldr	r3, [r7, #28]
 8002926:	2b08      	cmp	r3, #8
 8002928:	d005      	beq.n	8002936 <HAL_RCC_OscConfig+0x46>
 800292a:	69fb      	ldr	r3, [r7, #28]
 800292c:	2b18      	cmp	r3, #24
 800292e:	d114      	bne.n	800295a <HAL_RCC_OscConfig+0x6a>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_CSI)))
 8002930:	69bb      	ldr	r3, [r7, #24]
 8002932:	2b02      	cmp	r3, #2
 8002934:	d111      	bne.n	800295a <HAL_RCC_OscConfig+0x6a>
    {
      if (pOscInitStruct->CSIState == RCC_CSI_OFF)
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	69db      	ldr	r3, [r3, #28]
 800293a:	2b00      	cmp	r3, #0
 800293c:	d102      	bne.n	8002944 <HAL_RCC_OscConfig+0x54>
      {
        return HAL_ERROR;
 800293e:	2301      	movs	r3, #1
 8002940:	f000 bc08 	b.w	8003154 <HAL_RCC_OscConfig+0x864>

      /* Otherwise, just the calibration and CSI is allowed */
      else
      {
        /* Adjusts the Internal Low-power oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->CSICalibrationValue);
 8002944:	4b84      	ldr	r3, [pc, #528]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002946:	699b      	ldr	r3, [r3, #24]
 8002948:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	6a1b      	ldr	r3, [r3, #32]
 8002950:	041b      	lsls	r3, r3, #16
 8002952:	4981      	ldr	r1, [pc, #516]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002954:	4313      	orrs	r3, r2
 8002956:	618b      	str	r3, [r1, #24]
      if (pOscInitStruct->CSIState == RCC_CSI_OFF)
 8002958:	e040      	b.n	80029dc <HAL_RCC_OscConfig+0xec>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((pOscInitStruct->CSIState) != RCC_CSI_OFF)
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	69db      	ldr	r3, [r3, #28]
 800295e:	2b00      	cmp	r3, #0
 8002960:	d023      	beq.n	80029aa <HAL_RCC_OscConfig+0xba>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8002962:	4b7d      	ldr	r3, [pc, #500]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	4a7c      	ldr	r2, [pc, #496]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002968:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800296c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800296e:	f7fe fcf1 	bl	8001354 <HAL_GetTick>
 8002972:	6178      	str	r0, [r7, #20]

        /* Wait till CSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 8002974:	e008      	b.n	8002988 <HAL_RCC_OscConfig+0x98>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CSI_TIMEOUT_VALUE)
 8002976:	f7fe fced 	bl	8001354 <HAL_GetTick>
 800297a:	4602      	mov	r2, r0
 800297c:	697b      	ldr	r3, [r7, #20]
 800297e:	1ad3      	subs	r3, r2, r3
 8002980:	2b02      	cmp	r3, #2
 8002982:	d901      	bls.n	8002988 <HAL_RCC_OscConfig+0x98>
          {
            return HAL_TIMEOUT;
 8002984:	2303      	movs	r3, #3
 8002986:	e3e5      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 8002988:	4b73      	ldr	r3, [pc, #460]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8002990:	2b00      	cmp	r3, #0
 8002992:	d0f0      	beq.n	8002976 <HAL_RCC_OscConfig+0x86>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->CSICalibrationValue);
 8002994:	4b70      	ldr	r3, [pc, #448]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002996:	699b      	ldr	r3, [r3, #24]
 8002998:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	6a1b      	ldr	r3, [r3, #32]
 80029a0:	041b      	lsls	r3, r3, #16
 80029a2:	496d      	ldr	r1, [pc, #436]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 80029a4:	4313      	orrs	r3, r2
 80029a6:	618b      	str	r3, [r1, #24]
 80029a8:	e018      	b.n	80029dc <HAL_RCC_OscConfig+0xec>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 80029aa:	4b6b      	ldr	r3, [pc, #428]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	4a6a      	ldr	r2, [pc, #424]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 80029b0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80029b4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80029b6:	f7fe fccd 	bl	8001354 <HAL_GetTick>
 80029ba:	6178      	str	r0, [r7, #20]

        /* Wait till CSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) != 0U)
 80029bc:	e008      	b.n	80029d0 <HAL_RCC_OscConfig+0xe0>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CSI_TIMEOUT_VALUE)
 80029be:	f7fe fcc9 	bl	8001354 <HAL_GetTick>
 80029c2:	4602      	mov	r2, r0
 80029c4:	697b      	ldr	r3, [r7, #20]
 80029c6:	1ad3      	subs	r3, r2, r3
 80029c8:	2b02      	cmp	r3, #2
 80029ca:	d901      	bls.n	80029d0 <HAL_RCC_OscConfig+0xe0>
          {
            return HAL_TIMEOUT;
 80029cc:	2303      	movs	r3, #3
 80029ce:	e3c1      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_CSIRDY) != 0U)
 80029d0:	4b61      	ldr	r3, [pc, #388]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d1f0      	bne.n	80029be <HAL_RCC_OscConfig+0xce>
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	f003 0301 	and.w	r3, r3, #1
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	f000 80a0 	beq.w	8002b2a <HAL_RCC_OscConfig+0x23a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(pOscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSE) ||
 80029ea:	69fb      	ldr	r3, [r7, #28]
 80029ec:	2b10      	cmp	r3, #16
 80029ee:	d005      	beq.n	80029fc <HAL_RCC_OscConfig+0x10c>
 80029f0:	69fb      	ldr	r3, [r7, #28]
 80029f2:	2b18      	cmp	r3, #24
 80029f4:	d109      	bne.n	8002a0a <HAL_RCC_OscConfig+0x11a>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_HSE)))
 80029f6:	69bb      	ldr	r3, [r7, #24]
 80029f8:	2b03      	cmp	r3, #3
 80029fa:	d106      	bne.n	8002a0a <HAL_RCC_OscConfig+0x11a>
    {
      if (pOscInitStruct->HSEState == RCC_HSE_OFF)
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	685b      	ldr	r3, [r3, #4]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	f040 8092 	bne.w	8002b2a <HAL_RCC_OscConfig+0x23a>
      {
        return HAL_ERROR;
 8002a06:	2301      	movs	r3, #1
 8002a08:	e3a4      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(pOscInitStruct->HSEState);
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002a12:	d106      	bne.n	8002a22 <HAL_RCC_OscConfig+0x132>
 8002a14:	4b50      	ldr	r3, [pc, #320]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	4a4f      	ldr	r2, [pc, #316]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a1a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a1e:	6013      	str	r3, [r2, #0]
 8002a20:	e058      	b.n	8002ad4 <HAL_RCC_OscConfig+0x1e4>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	685b      	ldr	r3, [r3, #4]
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d112      	bne.n	8002a50 <HAL_RCC_OscConfig+0x160>
 8002a2a:	4b4b      	ldr	r3, [pc, #300]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	4a4a      	ldr	r2, [pc, #296]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a30:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002a34:	6013      	str	r3, [r2, #0]
 8002a36:	4b48      	ldr	r3, [pc, #288]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a38:	681b      	ldr	r3, [r3, #0]
 8002a3a:	4a47      	ldr	r2, [pc, #284]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a3c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002a40:	6013      	str	r3, [r2, #0]
 8002a42:	4b45      	ldr	r3, [pc, #276]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	4a44      	ldr	r2, [pc, #272]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a48:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002a4c:	6013      	str	r3, [r2, #0]
 8002a4e:	e041      	b.n	8002ad4 <HAL_RCC_OscConfig+0x1e4>
 8002a50:	687b      	ldr	r3, [r7, #4]
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002a58:	d112      	bne.n	8002a80 <HAL_RCC_OscConfig+0x190>
 8002a5a:	4b3f      	ldr	r3, [pc, #252]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	4a3e      	ldr	r2, [pc, #248]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a60:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002a64:	6013      	str	r3, [r2, #0]
 8002a66:	4b3c      	ldr	r3, [pc, #240]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	4a3b      	ldr	r2, [pc, #236]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a6c:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002a70:	6013      	str	r3, [r2, #0]
 8002a72:	4b39      	ldr	r3, [pc, #228]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	4a38      	ldr	r2, [pc, #224]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a78:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002a7c:	6013      	str	r3, [r2, #0]
 8002a7e:	e029      	b.n	8002ad4 <HAL_RCC_OscConfig+0x1e4>
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	685b      	ldr	r3, [r3, #4]
 8002a84:	f5b3 1fa8 	cmp.w	r3, #1376256	@ 0x150000
 8002a88:	d112      	bne.n	8002ab0 <HAL_RCC_OscConfig+0x1c0>
 8002a8a:	4b33      	ldr	r3, [pc, #204]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	4a32      	ldr	r2, [pc, #200]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a90:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002a94:	6013      	str	r3, [r2, #0]
 8002a96:	4b30      	ldr	r3, [pc, #192]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	4a2f      	ldr	r2, [pc, #188]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002a9c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8002aa0:	6013      	str	r3, [r2, #0]
 8002aa2:	4b2d      	ldr	r3, [pc, #180]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	4a2c      	ldr	r2, [pc, #176]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002aa8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002aac:	6013      	str	r3, [r2, #0]
 8002aae:	e011      	b.n	8002ad4 <HAL_RCC_OscConfig+0x1e4>
 8002ab0:	4b29      	ldr	r3, [pc, #164]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	4a28      	ldr	r2, [pc, #160]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002ab6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002aba:	6013      	str	r3, [r2, #0]
 8002abc:	4b26      	ldr	r3, [pc, #152]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4a25      	ldr	r2, [pc, #148]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002ac2:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002ac6:	6013      	str	r3, [r2, #0]
 8002ac8:	4b23      	ldr	r3, [pc, #140]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	4a22      	ldr	r2, [pc, #136]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002ace:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 8002ad2:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (pOscInitStruct->HSEState != RCC_HSE_OFF)
 8002ad4:	687b      	ldr	r3, [r7, #4]
 8002ad6:	685b      	ldr	r3, [r3, #4]
 8002ad8:	2b00      	cmp	r3, #0
 8002ada:	d013      	beq.n	8002b04 <HAL_RCC_OscConfig+0x214>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002adc:	f7fe fc3a 	bl	8001354 <HAL_GetTick>
 8002ae0:	6178      	str	r0, [r7, #20]

        /* Wait till HSE is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002ae2:	e008      	b.n	8002af6 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002ae4:	f7fe fc36 	bl	8001354 <HAL_GetTick>
 8002ae8:	4602      	mov	r2, r0
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	1ad3      	subs	r3, r2, r3
 8002aee:	2b64      	cmp	r3, #100	@ 0x64
 8002af0:	d901      	bls.n	8002af6 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8002af2:	2303      	movs	r3, #3
 8002af4:	e32e      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002af6:	4b18      	ldr	r3, [pc, #96]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d0f0      	beq.n	8002ae4 <HAL_RCC_OscConfig+0x1f4>
 8002b02:	e012      	b.n	8002b2a <HAL_RCC_OscConfig+0x23a>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002b04:	f7fe fc26 	bl	8001354 <HAL_GetTick>
 8002b08:	6178      	str	r0, [r7, #20]

        /* Wait till HSE is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002b0a:	e008      	b.n	8002b1e <HAL_RCC_OscConfig+0x22e>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSE_TIMEOUT_VALUE)
 8002b0c:	f7fe fc22 	bl	8001354 <HAL_GetTick>
 8002b10:	4602      	mov	r2, r0
 8002b12:	697b      	ldr	r3, [r7, #20]
 8002b14:	1ad3      	subs	r3, r2, r3
 8002b16:	2b64      	cmp	r3, #100	@ 0x64
 8002b18:	d901      	bls.n	8002b1e <HAL_RCC_OscConfig+0x22e>
          {
            return HAL_TIMEOUT;
 8002b1a:	2303      	movs	r3, #3
 8002b1c:	e31a      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002b1e:	4b0e      	ldr	r3, [pc, #56]	@ (8002b58 <HAL_RCC_OscConfig+0x268>)
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d1f0      	bne.n	8002b0c <HAL_RCC_OscConfig+0x21c>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	f003 0302 	and.w	r3, r3, #2
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	f000 809a 	beq.w	8002c6c <HAL_RCC_OscConfig+0x37c>
    assert_param(IS_RCC_HSI(pOscInitStruct->HSIState));
    assert_param(IS_RCC_HSIDIV(pOscInitStruct->HSIDiv));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(pOscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI) ||
 8002b38:	69fb      	ldr	r3, [r7, #28]
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	d005      	beq.n	8002b4a <HAL_RCC_OscConfig+0x25a>
 8002b3e:	69fb      	ldr	r3, [r7, #28]
 8002b40:	2b18      	cmp	r3, #24
 8002b42:	d149      	bne.n	8002bd8 <HAL_RCC_OscConfig+0x2e8>
        ((temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (temp_pllckselr == RCC_PLL1_SOURCE_HSI)))
 8002b44:	69bb      	ldr	r3, [r7, #24]
 8002b46:	2b01      	cmp	r3, #1
 8002b48:	d146      	bne.n	8002bd8 <HAL_RCC_OscConfig+0x2e8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if (pOscInitStruct->HSIState == RCC_HSI_OFF)
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	68db      	ldr	r3, [r3, #12]
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d104      	bne.n	8002b5c <HAL_RCC_OscConfig+0x26c>
      {
        return HAL_ERROR;
 8002b52:	2301      	movs	r3, #1
 8002b54:	e2fe      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
 8002b56:	bf00      	nop
 8002b58:	44020c00 	.word	0x44020c00
      /* Otherwise, HSI calibration and division may be allowed */
      else
      {

        /* HSI division is allowed if HSI is used as system clock */
        if (temp_sysclksrc == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002b5c:	69fb      	ldr	r3, [r7, #28]
 8002b5e:	2b00      	cmp	r3, #0
 8002b60:	d11c      	bne.n	8002b9c <HAL_RCC_OscConfig+0x2ac>
        {
          if (__HAL_RCC_GET_HSI_DIVIDER() != (pOscInitStruct->HSIDiv))
 8002b62:	4b9a      	ldr	r3, [pc, #616]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	f003 0218 	and.w	r2, r3, #24
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	691b      	ldr	r3, [r3, #16]
 8002b6e:	429a      	cmp	r2, r3
 8002b70:	d014      	beq.n	8002b9c <HAL_RCC_OscConfig+0x2ac>
          {
            /* Adjust the HSI division factor */
            __HAL_RCC_HSI_DIVIDER_CONFIG(pOscInitStruct->HSIDiv);
 8002b72:	4b96      	ldr	r3, [pc, #600]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	f023 0218 	bic.w	r2, r3, #24
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	691b      	ldr	r3, [r3, #16]
 8002b7e:	4993      	ldr	r1, [pc, #588]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002b80:	4313      	orrs	r3, r2
 8002b82:	600b      	str	r3, [r1, #0]

            /* Update the SystemCoreClock global variable with new HSI value  */
            (void) HAL_RCC_GetHCLKFreq();
 8002b84:	f000 fdd0 	bl	8003728 <HAL_RCC_GetHCLKFreq>

            /* Configure the source of time base considering new system clocks settings*/
            if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8002b88:	4b91      	ldr	r3, [pc, #580]	@ (8002dd0 <HAL_RCC_OscConfig+0x4e0>)
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	4618      	mov	r0, r3
 8002b8e:	f7fe f96b 	bl	8000e68 <HAL_InitTick>
 8002b92:	4603      	mov	r3, r0
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d001      	beq.n	8002b9c <HAL_RCC_OscConfig+0x2ac>
            {
              return HAL_ERROR;
 8002b98:	2301      	movs	r3, #1
 8002b9a:	e2db      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
            }
          }
        }

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002b9c:	f7fe fbda 	bl	8001354 <HAL_GetTick>
 8002ba0:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002ba2:	e008      	b.n	8002bb6 <HAL_RCC_OscConfig+0x2c6>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002ba4:	f7fe fbd6 	bl	8001354 <HAL_GetTick>
 8002ba8:	4602      	mov	r2, r0
 8002baa:	697b      	ldr	r3, [r7, #20]
 8002bac:	1ad3      	subs	r3, r2, r3
 8002bae:	2b02      	cmp	r3, #2
 8002bb0:	d901      	bls.n	8002bb6 <HAL_RCC_OscConfig+0x2c6>
          {
            return HAL_TIMEOUT;
 8002bb2:	2303      	movs	r3, #3
 8002bb4:	e2ce      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002bb6:	4b85      	ldr	r3, [pc, #532]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f003 0302 	and.w	r3, r3, #2
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d0f0      	beq.n	8002ba4 <HAL_RCC_OscConfig+0x2b4>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->HSICalibrationValue);
 8002bc2:	4b82      	ldr	r3, [pc, #520]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bc4:	691b      	ldr	r3, [r3, #16]
 8002bc6:	f423 02fe 	bic.w	r2, r3, #8323072	@ 0x7f0000
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	695b      	ldr	r3, [r3, #20]
 8002bce:	041b      	lsls	r3, r3, #16
 8002bd0:	497e      	ldr	r1, [pc, #504]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bd2:	4313      	orrs	r3, r2
 8002bd4:	610b      	str	r3, [r1, #16]
      if (pOscInitStruct->HSIState == RCC_HSI_OFF)
 8002bd6:	e049      	b.n	8002c6c <HAL_RCC_OscConfig+0x37c>
      }
    }
    else
    {
      /* Check the HSI State */
      if (pOscInitStruct->HSIState != RCC_HSI_OFF)
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	68db      	ldr	r3, [r3, #12]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d02c      	beq.n	8002c3a <HAL_RCC_OscConfig+0x34a>
      {
        /* Adjust the HSI division factor */
        __HAL_RCC_HSI_DIVIDER_CONFIG(pOscInitStruct->HSIDiv);
 8002be0:	4b7a      	ldr	r3, [pc, #488]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	f023 0218 	bic.w	r2, r3, #24
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	691b      	ldr	r3, [r3, #16]
 8002bec:	4977      	ldr	r1, [pc, #476]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bee:	4313      	orrs	r3, r2
 8002bf0:	600b      	str	r3, [r1, #0]

        /* Enable the HSI oscillator */
        __HAL_RCC_HSI_ENABLE();
 8002bf2:	4b76      	ldr	r3, [pc, #472]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	4a75      	ldr	r2, [pc, #468]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002bf8:	f043 0301 	orr.w	r3, r3, #1
 8002bfc:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002bfe:	f7fe fba9 	bl	8001354 <HAL_GetTick>
 8002c02:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is ready */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002c04:	e008      	b.n	8002c18 <HAL_RCC_OscConfig+0x328>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002c06:	f7fe fba5 	bl	8001354 <HAL_GetTick>
 8002c0a:	4602      	mov	r2, r0
 8002c0c:	697b      	ldr	r3, [r7, #20]
 8002c0e:	1ad3      	subs	r3, r2, r3
 8002c10:	2b02      	cmp	r3, #2
 8002c12:	d901      	bls.n	8002c18 <HAL_RCC_OscConfig+0x328>
          {
            return HAL_TIMEOUT;
 8002c14:	2303      	movs	r3, #3
 8002c16:	e29d      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002c18:	4b6c      	ldr	r3, [pc, #432]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f003 0302 	and.w	r3, r3, #2
 8002c20:	2b00      	cmp	r3, #0
 8002c22:	d0f0      	beq.n	8002c06 <HAL_RCC_OscConfig+0x316>
          }
        }

        /* Adjust the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(pOscInitStruct->HSICalibrationValue);
 8002c24:	4b69      	ldr	r3, [pc, #420]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c26:	691b      	ldr	r3, [r3, #16]
 8002c28:	f423 02fe 	bic.w	r2, r3, #8323072	@ 0x7f0000
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	695b      	ldr	r3, [r3, #20]
 8002c30:	041b      	lsls	r3, r3, #16
 8002c32:	4966      	ldr	r1, [pc, #408]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c34:	4313      	orrs	r3, r2
 8002c36:	610b      	str	r3, [r1, #16]
 8002c38:	e018      	b.n	8002c6c <HAL_RCC_OscConfig+0x37c>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002c3a:	4b64      	ldr	r3, [pc, #400]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	4a63      	ldr	r2, [pc, #396]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c40:	f023 0301 	bic.w	r3, r3, #1
 8002c44:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002c46:	f7fe fb85 	bl	8001354 <HAL_GetTick>
 8002c4a:	6178      	str	r0, [r7, #20]

        /* Wait till HSI is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002c4c:	e008      	b.n	8002c60 <HAL_RCC_OscConfig+0x370>
        {
          if ((HAL_GetTick() - tickstart) > RCC_HSI_TIMEOUT_VALUE)
 8002c4e:	f7fe fb81 	bl	8001354 <HAL_GetTick>
 8002c52:	4602      	mov	r2, r0
 8002c54:	697b      	ldr	r3, [r7, #20]
 8002c56:	1ad3      	subs	r3, r2, r3
 8002c58:	2b02      	cmp	r3, #2
 8002c5a:	d901      	bls.n	8002c60 <HAL_RCC_OscConfig+0x370>
          {
            return HAL_TIMEOUT;
 8002c5c:	2303      	movs	r3, #3
 8002c5e:	e279      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002c60:	4b5a      	ldr	r3, [pc, #360]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f003 0302 	and.w	r3, r3, #2
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d1f0      	bne.n	8002c4e <HAL_RCC_OscConfig+0x35e>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	f003 0308 	and.w	r3, r3, #8
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	d03c      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x402>
    assert_param(IS_RCC_LSI(pOscInitStruct->LSIState));

    /* Update LSI configuration in Backup Domain control register    */

    /* Check the LSI State */
    if (pOscInitStruct->LSIState != RCC_LSI_OFF)
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	699b      	ldr	r3, [r3, #24]
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d01c      	beq.n	8002cba <HAL_RCC_OscConfig+0x3ca>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002c80:	4b52      	ldr	r3, [pc, #328]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c82:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002c86:	4a51      	ldr	r2, [pc, #324]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002c88:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002c8c:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002c90:	f7fe fb60 	bl	8001354 <HAL_GetTick>
 8002c94:	6178      	str	r0, [r7, #20]

      /* Wait till LSI is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8002c96:	e008      	b.n	8002caa <HAL_RCC_OscConfig+0x3ba>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 8002c98:	f7fe fb5c 	bl	8001354 <HAL_GetTick>
 8002c9c:	4602      	mov	r2, r0
 8002c9e:	697b      	ldr	r3, [r7, #20]
 8002ca0:	1ad3      	subs	r3, r2, r3
 8002ca2:	2b02      	cmp	r3, #2
 8002ca4:	d901      	bls.n	8002caa <HAL_RCC_OscConfig+0x3ba>
        {
          return HAL_TIMEOUT;
 8002ca6:	2303      	movs	r3, #3
 8002ca8:	e254      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) == 0U)
 8002caa:	4b48      	ldr	r3, [pc, #288]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002cac:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002cb0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d0ef      	beq.n	8002c98 <HAL_RCC_OscConfig+0x3a8>
 8002cb8:	e01b      	b.n	8002cf2 <HAL_RCC_OscConfig+0x402>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002cba:	4b44      	ldr	r3, [pc, #272]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002cbc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002cc0:	4a42      	ldr	r2, [pc, #264]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002cc2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8002cc6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002cca:	f7fe fb43 	bl	8001354 <HAL_GetTick>
 8002cce:	6178      	str	r0, [r7, #20]

      /* Wait till LSI is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8002cd0:	e008      	b.n	8002ce4 <HAL_RCC_OscConfig+0x3f4>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSI_TIMEOUT_VALUE)
 8002cd2:	f7fe fb3f 	bl	8001354 <HAL_GetTick>
 8002cd6:	4602      	mov	r2, r0
 8002cd8:	697b      	ldr	r3, [r7, #20]
 8002cda:	1ad3      	subs	r3, r2, r3
 8002cdc:	2b02      	cmp	r3, #2
 8002cde:	d901      	bls.n	8002ce4 <HAL_RCC_OscConfig+0x3f4>
        {
          return HAL_TIMEOUT;
 8002ce0:	2303      	movs	r3, #3
 8002ce2:	e237      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSIRDY) != 0U)
 8002ce4:	4b39      	ldr	r3, [pc, #228]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002ce6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002cea:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d1ef      	bne.n	8002cd2 <HAL_RCC_OscConfig+0x3e2>
      }
    }

  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	f003 0304 	and.w	r3, r3, #4
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	f000 80d2 	beq.w	8002ea4 <HAL_RCC_OscConfig+0x5b4>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(pOscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain */
    if (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002d00:	4b34      	ldr	r3, [pc, #208]	@ (8002dd4 <HAL_RCC_OscConfig+0x4e4>)
 8002d02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d04:	f003 0301 	and.w	r3, r3, #1
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d118      	bne.n	8002d3e <HAL_RCC_OscConfig+0x44e>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->DBPCR, PWR_DBPCR_DBP);
 8002d0c:	4b31      	ldr	r3, [pc, #196]	@ (8002dd4 <HAL_RCC_OscConfig+0x4e4>)
 8002d0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d10:	4a30      	ldr	r2, [pc, #192]	@ (8002dd4 <HAL_RCC_OscConfig+0x4e4>)
 8002d12:	f043 0301 	orr.w	r3, r3, #1
 8002d16:	6253      	str	r3, [r2, #36]	@ 0x24

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002d18:	f7fe fb1c 	bl	8001354 <HAL_GetTick>
 8002d1c:	6178      	str	r0, [r7, #20]

      while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002d1e:	e008      	b.n	8002d32 <HAL_RCC_OscConfig+0x442>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002d20:	f7fe fb18 	bl	8001354 <HAL_GetTick>
 8002d24:	4602      	mov	r2, r0
 8002d26:	697b      	ldr	r3, [r7, #20]
 8002d28:	1ad3      	subs	r3, r2, r3
 8002d2a:	2b02      	cmp	r3, #2
 8002d2c:	d901      	bls.n	8002d32 <HAL_RCC_OscConfig+0x442>
        {
          return HAL_TIMEOUT;
 8002d2e:	2303      	movs	r3, #3
 8002d30:	e210      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8002d32:	4b28      	ldr	r3, [pc, #160]	@ (8002dd4 <HAL_RCC_OscConfig+0x4e4>)
 8002d34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d36:	f003 0301 	and.w	r3, r3, #1
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d0f0      	beq.n	8002d20 <HAL_RCC_OscConfig+0x430>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(pOscInitStruct->LSEState);
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	689b      	ldr	r3, [r3, #8]
 8002d42:	2b01      	cmp	r3, #1
 8002d44:	d108      	bne.n	8002d58 <HAL_RCC_OscConfig+0x468>
 8002d46:	4b21      	ldr	r3, [pc, #132]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d48:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d4c:	4a1f      	ldr	r2, [pc, #124]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d4e:	f043 0301 	orr.w	r3, r3, #1
 8002d52:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d56:	e074      	b.n	8002e42 <HAL_RCC_OscConfig+0x552>
 8002d58:	687b      	ldr	r3, [r7, #4]
 8002d5a:	689b      	ldr	r3, [r3, #8]
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d118      	bne.n	8002d92 <HAL_RCC_OscConfig+0x4a2>
 8002d60:	4b1a      	ldr	r3, [pc, #104]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d62:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d66:	4a19      	ldr	r2, [pc, #100]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d68:	f023 0301 	bic.w	r3, r3, #1
 8002d6c:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d70:	4b16      	ldr	r3, [pc, #88]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d72:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d76:	4a15      	ldr	r2, [pc, #84]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d78:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002d7c:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d80:	4b12      	ldr	r3, [pc, #72]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d82:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002d86:	4a11      	ldr	r2, [pc, #68]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d88:	f023 0304 	bic.w	r3, r3, #4
 8002d8c:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002d90:	e057      	b.n	8002e42 <HAL_RCC_OscConfig+0x552>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	689b      	ldr	r3, [r3, #8]
 8002d96:	2b05      	cmp	r3, #5
 8002d98:	d11e      	bne.n	8002dd8 <HAL_RCC_OscConfig+0x4e8>
 8002d9a:	4b0c      	ldr	r3, [pc, #48]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002d9c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002da0:	4a0a      	ldr	r2, [pc, #40]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002da2:	f043 0304 	orr.w	r3, r3, #4
 8002da6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002daa:	4b08      	ldr	r3, [pc, #32]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002dac:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002db0:	4a06      	ldr	r2, [pc, #24]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002db2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002db6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002dba:	4b04      	ldr	r3, [pc, #16]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002dbc:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002dc0:	4a02      	ldr	r2, [pc, #8]	@ (8002dcc <HAL_RCC_OscConfig+0x4dc>)
 8002dc2:	f043 0301 	orr.w	r3, r3, #1
 8002dc6:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002dca:	e03a      	b.n	8002e42 <HAL_RCC_OscConfig+0x552>
 8002dcc:	44020c00 	.word	0x44020c00
 8002dd0:	20000008 	.word	0x20000008
 8002dd4:	44020800 	.word	0x44020800
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	689b      	ldr	r3, [r3, #8]
 8002ddc:	2b85      	cmp	r3, #133	@ 0x85
 8002dde:	d118      	bne.n	8002e12 <HAL_RCC_OscConfig+0x522>
 8002de0:	4ba2      	ldr	r3, [pc, #648]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002de2:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002de6:	4aa1      	ldr	r2, [pc, #644]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002de8:	f043 0304 	orr.w	r3, r3, #4
 8002dec:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002df0:	4b9e      	ldr	r3, [pc, #632]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002df2:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002df6:	4a9d      	ldr	r2, [pc, #628]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002df8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8002dfc:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002e00:	4b9a      	ldr	r3, [pc, #616]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e02:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e06:	4a99      	ldr	r2, [pc, #612]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e08:	f043 0301 	orr.w	r3, r3, #1
 8002e0c:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002e10:	e017      	b.n	8002e42 <HAL_RCC_OscConfig+0x552>
 8002e12:	4b96      	ldr	r3, [pc, #600]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e14:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e18:	4a94      	ldr	r2, [pc, #592]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e1a:	f023 0301 	bic.w	r3, r3, #1
 8002e1e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002e22:	4b92      	ldr	r3, [pc, #584]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e24:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e28:	4a90      	ldr	r2, [pc, #576]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e2a:	f023 0304 	bic.w	r3, r3, #4
 8002e2e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8002e32:	4b8e      	ldr	r3, [pc, #568]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e34:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e38:	4a8c      	ldr	r2, [pc, #560]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e3a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8002e3e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0

    /* Check the LSE State */
    if (pOscInitStruct->LSEState != RCC_LSE_OFF)
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	689b      	ldr	r3, [r3, #8]
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d016      	beq.n	8002e78 <HAL_RCC_OscConfig+0x588>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e4a:	f7fe fa83 	bl	8001354 <HAL_GetTick>
 8002e4e:	6178      	str	r0, [r7, #20]

      /* Wait till LSE is ready */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002e50:	e00a      	b.n	8002e68 <HAL_RCC_OscConfig+0x578>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002e52:	f7fe fa7f 	bl	8001354 <HAL_GetTick>
 8002e56:	4602      	mov	r2, r0
 8002e58:	697b      	ldr	r3, [r7, #20]
 8002e5a:	1ad3      	subs	r3, r2, r3
 8002e5c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e60:	4293      	cmp	r3, r2
 8002e62:	d901      	bls.n	8002e68 <HAL_RCC_OscConfig+0x578>
        {
          return HAL_TIMEOUT;
 8002e64:	2303      	movs	r3, #3
 8002e66:	e175      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002e68:	4b80      	ldr	r3, [pc, #512]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e6a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e6e:	f003 0302 	and.w	r3, r3, #2
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d0ed      	beq.n	8002e52 <HAL_RCC_OscConfig+0x562>
 8002e76:	e015      	b.n	8002ea4 <HAL_RCC_OscConfig+0x5b4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e78:	f7fe fa6c 	bl	8001354 <HAL_GetTick>
 8002e7c:	6178      	str	r0, [r7, #20]

      /* Wait till LSE is disabled */
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002e7e:	e00a      	b.n	8002e96 <HAL_RCC_OscConfig+0x5a6>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8002e80:	f7fe fa68 	bl	8001354 <HAL_GetTick>
 8002e84:	4602      	mov	r2, r0
 8002e86:	697b      	ldr	r3, [r7, #20]
 8002e88:	1ad3      	subs	r3, r2, r3
 8002e8a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d901      	bls.n	8002e96 <HAL_RCC_OscConfig+0x5a6>
        {
          return HAL_TIMEOUT;
 8002e92:	2303      	movs	r3, #3
 8002e94:	e15e      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8002e96:	4b75      	ldr	r3, [pc, #468]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002e98:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8002e9c:	f003 0302 	and.w	r3, r3, #2
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d1ed      	bne.n	8002e80 <HAL_RCC_OscConfig+0x590>
      }
    }

  }
  /*------------------------------ HSI48 Configuration -----------------------*/
  if (((pOscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	f003 0320 	and.w	r3, r3, #32
 8002eac:	2b00      	cmp	r3, #0
 8002eae:	d036      	beq.n	8002f1e <HAL_RCC_OscConfig+0x62e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(pOscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if (pOscInitStruct->HSI48State != RCC_HSI48_OFF)
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d019      	beq.n	8002eec <HAL_RCC_OscConfig+0x5fc>
    {
      /* Enable the Internal High Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8002eb8:	4b6c      	ldr	r3, [pc, #432]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002eba:	681b      	ldr	r3, [r3, #0]
 8002ebc:	4a6b      	ldr	r2, [pc, #428]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002ebe:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002ec2:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002ec4:	f7fe fa46 	bl	8001354 <HAL_GetTick>
 8002ec8:	6178      	str	r0, [r7, #20]

      /* Wait till HSI48 is ready */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8002eca:	e008      	b.n	8002ede <HAL_RCC_OscConfig+0x5ee>
      {
        if ((HAL_GetTick() - tickstart) > RCC_HSI48_TIMEOUT_VALUE)
 8002ecc:	f7fe fa42 	bl	8001354 <HAL_GetTick>
 8002ed0:	4602      	mov	r2, r0
 8002ed2:	697b      	ldr	r3, [r7, #20]
 8002ed4:	1ad3      	subs	r3, r2, r3
 8002ed6:	2b02      	cmp	r3, #2
 8002ed8:	d901      	bls.n	8002ede <HAL_RCC_OscConfig+0x5ee>
        {
          return HAL_TIMEOUT;
 8002eda:	2303      	movs	r3, #3
 8002edc:	e13a      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) == 0U)
 8002ede:	4b63      	ldr	r3, [pc, #396]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d0f0      	beq.n	8002ecc <HAL_RCC_OscConfig+0x5dc>
 8002eea:	e018      	b.n	8002f1e <HAL_RCC_OscConfig+0x62e>
      }
    }
    else
    {
      /* Disable the Internal High Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8002eec:	4b5f      	ldr	r3, [pc, #380]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	4a5e      	ldr	r2, [pc, #376]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002ef2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002ef6:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002ef8:	f7fe fa2c 	bl	8001354 <HAL_GetTick>
 8002efc:	6178      	str	r0, [r7, #20]

      /* Wait till HSI48 is disabled */
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8002efe:	e008      	b.n	8002f12 <HAL_RCC_OscConfig+0x622>
      {
        if ((HAL_GetTick() - tickstart) > RCC_HSI48_TIMEOUT_VALUE)
 8002f00:	f7fe fa28 	bl	8001354 <HAL_GetTick>
 8002f04:	4602      	mov	r2, r0
 8002f06:	697b      	ldr	r3, [r7, #20]
 8002f08:	1ad3      	subs	r3, r2, r3
 8002f0a:	2b02      	cmp	r3, #2
 8002f0c:	d901      	bls.n	8002f12 <HAL_RCC_OscConfig+0x622>
        {
          return HAL_TIMEOUT;
 8002f0e:	2303      	movs	r3, #3
 8002f10:	e120      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      while (READ_BIT(RCC->CR, RCC_CR_HSI48RDY) != 0U)
 8002f12:	4b56      	ldr	r3, [pc, #344]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d1f0      	bne.n	8002f00 <HAL_RCC_OscConfig+0x610>

  /*-------------------------------- PLL1 Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(pOscInitStruct->PLL.PLLState));

  if ((pOscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	f000 8115 	beq.w	8003152 <HAL_RCC_OscConfig+0x862>
  {
    /* Check if the PLL1 is used as system clock or not */
    if (temp_sysclksrc != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002f28:	69fb      	ldr	r3, [r7, #28]
 8002f2a:	2b18      	cmp	r3, #24
 8002f2c:	f000 80af 	beq.w	800308e <HAL_RCC_OscConfig+0x79e>
    {
      if ((pOscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f34:	2b02      	cmp	r3, #2
 8002f36:	f040 8086 	bne.w	8003046 <HAL_RCC_OscConfig+0x756>
        assert_param(IS_RCC_PLL1_DIVP_VALUE(pOscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLL1_DIVQ_VALUE(pOscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLL1_DIVR_VALUE(pOscInitStruct->PLL.PLLR));

        /* Disable the PLL1. */
        __HAL_RCC_PLL1_DISABLE();
 8002f3a:	4b4c      	ldr	r3, [pc, #304]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f3c:	681b      	ldr	r3, [r3, #0]
 8002f3e:	4a4b      	ldr	r2, [pc, #300]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f40:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8002f44:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002f46:	f7fe fa05 	bl	8001354 <HAL_GetTick>
 8002f4a:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8002f4c:	e008      	b.n	8002f60 <HAL_RCC_OscConfig+0x670>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 8002f4e:	f7fe fa01 	bl	8001354 <HAL_GetTick>
 8002f52:	4602      	mov	r2, r0
 8002f54:	697b      	ldr	r3, [r7, #20]
 8002f56:	1ad3      	subs	r3, r2, r3
 8002f58:	2b02      	cmp	r3, #2
 8002f5a:	d901      	bls.n	8002f60 <HAL_RCC_OscConfig+0x670>
          {
            return HAL_TIMEOUT;
 8002f5c:	2303      	movs	r3, #3
 8002f5e:	e0f9      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8002f60:	4b42      	ldr	r3, [pc, #264]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f62:	681b      	ldr	r3, [r3, #0]
 8002f64:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f68:	2b00      	cmp	r3, #0
 8002f6a:	d1f0      	bne.n	8002f4e <HAL_RCC_OscConfig+0x65e>
          }
        }

        /* Configure the PLL1 clock source, multiplication and division factors. */
        __HAL_RCC_PLL1_CONFIG(pOscInitStruct->PLL.PLLSource,
 8002f6c:	4b3f      	ldr	r3, [pc, #252]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f70:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8002f74:	f023 0303 	bic.w	r3, r3, #3
 8002f78:	687a      	ldr	r2, [r7, #4]
 8002f7a:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8002f7c:	687a      	ldr	r2, [r7, #4]
 8002f7e:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8002f80:	0212      	lsls	r2, r2, #8
 8002f82:	430a      	orrs	r2, r1
 8002f84:	4939      	ldr	r1, [pc, #228]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002f86:	4313      	orrs	r3, r2
 8002f88:	628b      	str	r3, [r1, #40]	@ 0x28
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f8e:	3b01      	subs	r3, #1
 8002f90:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002f98:	3b01      	subs	r3, #1
 8002f9a:	025b      	lsls	r3, r3, #9
 8002f9c:	b29b      	uxth	r3, r3
 8002f9e:	431a      	orrs	r2, r3
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002fa4:	3b01      	subs	r3, #1
 8002fa6:	041b      	lsls	r3, r3, #16
 8002fa8:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8002fac:	431a      	orrs	r2, r3
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb2:	3b01      	subs	r3, #1
 8002fb4:	061b      	lsls	r3, r3, #24
 8002fb6:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8002fba:	492c      	ldr	r1, [pc, #176]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fbc:	4313      	orrs	r3, r2
 8002fbe:	634b      	str	r3, [r1, #52]	@ 0x34
                              pOscInitStruct->PLL.PLLR);

        assert_param(IS_RCC_PLL1_FRACN_VALUE(pOscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_DISABLE();
 8002fc0:	4b2a      	ldr	r3, [pc, #168]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fc4:	4a29      	ldr	r2, [pc, #164]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fc6:	f023 0310 	bic.w	r3, r3, #16
 8002fca:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Configure PLL  PLL1FRACN */
        __HAL_RCC_PLL1_FRACN_CONFIG(pOscInitStruct->PLL.PLLFRACN);
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002fd0:	4a26      	ldr	r2, [pc, #152]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fd2:	00db      	lsls	r3, r3, #3
 8002fd4:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_ENABLE();
 8002fd6:	4b25      	ldr	r3, [pc, #148]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fda:	4a24      	ldr	r2, [pc, #144]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fdc:	f043 0310 	orr.w	r3, r3, #16
 8002fe0:	6293      	str	r3, [r2, #40]	@ 0x28

        assert_param(IS_RCC_PLL1_VCIRGE_VALUE(pOscInitStruct->PLL.PLLRGE));

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL1_VCIRANGE(pOscInitStruct->PLL.PLLRGE) ;
 8002fe2:	4b22      	ldr	r3, [pc, #136]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002fe4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002fe6:	f023 020c 	bic.w	r2, r3, #12
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002fee:	491f      	ldr	r1, [pc, #124]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002ff0:	4313      	orrs	r3, r2
 8002ff2:	628b      	str	r3, [r1, #40]	@ 0x28

        assert_param(IS_RCC_PLL1_VCORGE_VALUE(pOscInitStruct->PLL.PLLVCOSEL));

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL1_VCORANGE(pOscInitStruct->PLL.PLLVCOSEL) ;
 8002ff4:	4b1d      	ldr	r3, [pc, #116]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8002ff6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ff8:	f023 0220 	bic.w	r2, r3, #32
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003000:	491a      	ldr	r1, [pc, #104]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8003002:	4313      	orrs	r3, r2
 8003004:	628b      	str	r3, [r1, #40]	@ 0x28

        /* Enable PLL1 System Clock output. */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVP);
 8003006:	4b19      	ldr	r3, [pc, #100]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8003008:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800300a:	4a18      	ldr	r2, [pc, #96]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 800300c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8003010:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Enable the PLL1. */
        __HAL_RCC_PLL1_ENABLE();
 8003012:	4b16      	ldr	r3, [pc, #88]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	4a15      	ldr	r2, [pc, #84]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8003018:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800301c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800301e:	f7fe f999 	bl	8001354 <HAL_GetTick>
 8003022:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is ready */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8003024:	e008      	b.n	8003038 <HAL_RCC_OscConfig+0x748>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 8003026:	f7fe f995 	bl	8001354 <HAL_GetTick>
 800302a:	4602      	mov	r2, r0
 800302c:	697b      	ldr	r3, [r7, #20]
 800302e:	1ad3      	subs	r3, r2, r3
 8003030:	2b02      	cmp	r3, #2
 8003032:	d901      	bls.n	8003038 <HAL_RCC_OscConfig+0x748>
          {
            return HAL_TIMEOUT;
 8003034:	2303      	movs	r3, #3
 8003036:	e08d      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 8003038:	4b0c      	ldr	r3, [pc, #48]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003040:	2b00      	cmp	r3, #0
 8003042:	d0f0      	beq.n	8003026 <HAL_RCC_OscConfig+0x736>
 8003044:	e085      	b.n	8003152 <HAL_RCC_OscConfig+0x862>
        }
      }
      else
      {
        /* Disable the PLL1. */
        __HAL_RCC_PLL1_DISABLE();
 8003046:	4b09      	ldr	r3, [pc, #36]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	4a08      	ldr	r2, [pc, #32]	@ (800306c <HAL_RCC_OscConfig+0x77c>)
 800304c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8003050:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003052:	f7fe f97f 	bl	8001354 <HAL_GetTick>
 8003056:	6178      	str	r0, [r7, #20]

        /* Wait till PLL1 is disabled */
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8003058:	e00a      	b.n	8003070 <HAL_RCC_OscConfig+0x780>
        {
          if ((HAL_GetTick() - tickstart) > RCC_PLL_TIMEOUT_VALUE)
 800305a:	f7fe f97b 	bl	8001354 <HAL_GetTick>
 800305e:	4602      	mov	r2, r0
 8003060:	697b      	ldr	r3, [r7, #20]
 8003062:	1ad3      	subs	r3, r2, r3
 8003064:	2b02      	cmp	r3, #2
 8003066:	d903      	bls.n	8003070 <HAL_RCC_OscConfig+0x780>
          {
            return HAL_TIMEOUT;
 8003068:	2303      	movs	r3, #3
 800306a:	e073      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
 800306c:	44020c00 	.word	0x44020c00
        while (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) != 0U)
 8003070:	4b3a      	ldr	r3, [pc, #232]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003078:	2b00      	cmp	r3, #0
 800307a:	d1ee      	bne.n	800305a <HAL_RCC_OscConfig+0x76a>
          }
        }

        /* Unselect PLL1 clock source and disable all PLL1 outputs to save power */
        RCC->PLL1CFGR &= ~(RCC_PLL1CFGR_PLL1SRC | RCC_PLL1CFGR_PLL1PEN | RCC_PLL1CFGR_PLL1QEN | RCC_PLL1CFGR_PLL1REN);
 800307c:	4b37      	ldr	r3, [pc, #220]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 800307e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003080:	4a36      	ldr	r2, [pc, #216]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003082:	f423 23e0 	bic.w	r3, r3, #458752	@ 0x70000
 8003086:	f023 0303 	bic.w	r3, r3, #3
 800308a:	6293      	str	r3, [r2, #40]	@ 0x28
 800308c:	e061      	b.n	8003152 <HAL_RCC_OscConfig+0x862>
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLL1CFGR;
 800308e:	4b33      	ldr	r3, [pc, #204]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003090:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003092:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8003094:	4b31      	ldr	r3, [pc, #196]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003096:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003098:	60fb      	str	r3, [r7, #12]
      if (((pOscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800309e:	2b01      	cmp	r3, #1
 80030a0:	d031      	beq.n	8003106 <HAL_RCC_OscConfig+0x816>
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pOscInitStruct->PLL.PLLSource) ||
 80030a2:	693b      	ldr	r3, [r7, #16]
 80030a4:	f003 0203 	and.w	r2, r3, #3
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
      if (((pOscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80030ac:	429a      	cmp	r2, r3
 80030ae:	d12a      	bne.n	8003106 <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1M) >> \
 80030b0:	693b      	ldr	r3, [r7, #16]
 80030b2:	0a1b      	lsrs	r3, r3, #8
 80030b4:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            RCC_PLL1CFGR_PLL1M_Pos) != (pOscInitStruct->PLL.PLLM)) ||
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
          (READ_BIT(temp1_pllckcfg, RCC_PLL1CFGR_PLL1SRC) != pOscInitStruct->PLL.PLLSource) ||
 80030bc:	429a      	cmp	r2, r3
 80030be:	d122      	bne.n	8003106 <HAL_RCC_OscConfig+0x816>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pOscInitStruct->PLL.PLLN - 1U)) ||
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80030ca:	3b01      	subs	r3, #1
            RCC_PLL1CFGR_PLL1M_Pos) != (pOscInitStruct->PLL.PLLM)) ||
 80030cc:	429a      	cmp	r2, r3
 80030ce:	d11a      	bne.n	8003106 <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1P) >> \
 80030d0:	68fb      	ldr	r3, [r7, #12]
 80030d2:	0a5b      	lsrs	r3, r3, #9
 80030d4:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1P_Pos) != (pOscInitStruct->PLL.PLLP - 1U)) ||
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80030dc:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1N) != (pOscInitStruct->PLL.PLLN - 1U)) ||
 80030de:	429a      	cmp	r2, r3
 80030e0:	d111      	bne.n	8003106 <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1Q) >> \
 80030e2:	68fb      	ldr	r3, [r7, #12]
 80030e4:	0c1b      	lsrs	r3, r3, #16
 80030e6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1Q_Pos) != (pOscInitStruct->PLL.PLLQ - 1U)) ||
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80030ee:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1P_Pos) != (pOscInitStruct->PLL.PLLP - 1U)) ||
 80030f0:	429a      	cmp	r2, r3
 80030f2:	d108      	bne.n	8003106 <HAL_RCC_OscConfig+0x816>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_PLL1R) >> \
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	0e1b      	lsrs	r3, r3, #24
 80030f8:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
            RCC_PLL1DIVR_PLL1R_Pos) != (pOscInitStruct->PLL.PLLR - 1U)))
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003100:	3b01      	subs	r3, #1
            RCC_PLL1DIVR_PLL1Q_Pos) != (pOscInitStruct->PLL.PLLQ - 1U)) ||
 8003102:	429a      	cmp	r2, r3
 8003104:	d001      	beq.n	800310a <HAL_RCC_OscConfig+0x81a>
      {
        return HAL_ERROR;
 8003106:	2301      	movs	r3, #1
 8003108:	e024      	b.n	8003154 <HAL_RCC_OscConfig+0x864>
      }

      /* FRACN1 on-the-fly value update */
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 800310a:	4b14      	ldr	r3, [pc, #80]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 800310c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800310e:	08db      	lsrs	r3, r3, #3
 8003110:	f3c3 020c 	ubfx	r2, r3, #0, #13
           RCC_PLL1FRACR_PLL1FRACN_Pos) != (pOscInitStruct->PLL.PLLFRACN))
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
      if ((READ_BIT(RCC->PLL1FRACR, RCC_PLL1FRACR_PLL1FRACN) >> \
 8003118:	429a      	cmp	r2, r3
 800311a:	d01a      	beq.n	8003152 <HAL_RCC_OscConfig+0x862>
      {
        assert_param(IS_RCC_PLL1_FRACN_VALUE(pOscInitStruct->PLL.PLLFRACN));

        /* Disable PLL1FRACN . */
        __HAL_RCC_PLL1_FRACN_DISABLE();
 800311c:	4b0f      	ldr	r3, [pc, #60]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 800311e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003120:	4a0e      	ldr	r2, [pc, #56]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003122:	f023 0310 	bic.w	r3, r3, #16
 8003126:	6293      	str	r3, [r2, #40]	@ 0x28

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003128:	f7fe f914 	bl	8001354 <HAL_GetTick>
 800312c:	6178      	str	r0, [r7, #20]

        /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value
           will be taken into account. */
        while ((HAL_GetTick() - tickstart) < RCC_PLL_FRAC_WAIT_VALUE)
 800312e:	bf00      	nop
 8003130:	f7fe f910 	bl	8001354 <HAL_GetTick>
 8003134:	4602      	mov	r2, r0
 8003136:	697b      	ldr	r3, [r7, #20]
 8003138:	4293      	cmp	r3, r2
 800313a:	d0f9      	beq.n	8003130 <HAL_RCC_OscConfig+0x840>
        {
        }

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLL1_FRACN_CONFIG(pOscInitStruct->PLL.PLLFRACN);
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003140:	4a06      	ldr	r2, [pc, #24]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003142:	00db      	lsls	r3, r3, #3
 8003144:	6393      	str	r3, [r2, #56]	@ 0x38

        /* Enable PLL1FRACN to latch the new value. */
        __HAL_RCC_PLL1_FRACN_ENABLE();
 8003146:	4b05      	ldr	r3, [pc, #20]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 8003148:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800314a:	4a04      	ldr	r2, [pc, #16]	@ (800315c <HAL_RCC_OscConfig+0x86c>)
 800314c:	f043 0310 	orr.w	r3, r3, #16
 8003150:	6293      	str	r3, [r2, #40]	@ 0x28
      }

    }
  }
  return HAL_OK;
 8003152:	2300      	movs	r3, #0
}
 8003154:	4618      	mov	r0, r3
 8003156:	3720      	adds	r7, #32
 8003158:	46bd      	mov	sp, r7
 800315a:	bd80      	pop	{r7, pc}
 800315c:	44020c00 	.word	0x44020c00

08003160 <HAL_RCC_ClockConfig>:
  *         currently used as system clock source.
  *
  * @retval HAL Status.
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef  *pClkInitStruct, uint32_t FLatency)
{
 8003160:	b580      	push	{r7, lr}
 8003162:	b084      	sub	sp, #16
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
 8003168:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;

  /* Check Null pointer */
  if (pClkInitStruct == NULL)
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	2b00      	cmp	r3, #0
 800316e:	d101      	bne.n	8003174 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003170:	2301      	movs	r3, #1
 8003172:	e19e      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8003174:	4b83      	ldr	r3, [pc, #524]	@ (8003384 <HAL_RCC_ClockConfig+0x224>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f003 030f 	and.w	r3, r3, #15
 800317c:	683a      	ldr	r2, [r7, #0]
 800317e:	429a      	cmp	r2, r3
 8003180:	d910      	bls.n	80031a4 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003182:	4b80      	ldr	r3, [pc, #512]	@ (8003384 <HAL_RCC_ClockConfig+0x224>)
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	f023 020f 	bic.w	r2, r3, #15
 800318a:	497e      	ldr	r1, [pc, #504]	@ (8003384 <HAL_RCC_ClockConfig+0x224>)
 800318c:	683b      	ldr	r3, [r7, #0]
 800318e:	4313      	orrs	r3, r2
 8003190:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8003192:	4b7c      	ldr	r3, [pc, #496]	@ (8003384 <HAL_RCC_ClockConfig+0x224>)
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	f003 030f 	and.w	r3, r3, #15
 800319a:	683a      	ldr	r2, [r7, #0]
 800319c:	429a      	cmp	r2, r3
 800319e:	d001      	beq.n	80031a4 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 80031a0:	2301      	movs	r3, #1
 80031a2:	e186      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
    }
  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	f003 0310 	and.w	r3, r3, #16
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	d012      	beq.n	80031d6 <HAL_RCC_ClockConfig+0x76>
  {
    if ((pClkInitStruct->APB3CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE3) >> 8))
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	695a      	ldr	r2, [r3, #20]
 80031b4:	4b74      	ldr	r3, [pc, #464]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80031b6:	6a1b      	ldr	r3, [r3, #32]
 80031b8:	0a1b      	lsrs	r3, r3, #8
 80031ba:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80031be:	429a      	cmp	r2, r3
 80031c0:	d909      	bls.n	80031d6 <HAL_RCC_ClockConfig+0x76>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE3, ((pClkInitStruct->APB3CLKDivider) << 8));
 80031c2:	4b71      	ldr	r3, [pc, #452]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80031c4:	6a1b      	ldr	r3, [r3, #32]
 80031c6:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	695b      	ldr	r3, [r3, #20]
 80031ce:	021b      	lsls	r3, r3, #8
 80031d0:	496d      	ldr	r1, [pc, #436]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80031d2:	4313      	orrs	r3, r2
 80031d4:	620b      	str	r3, [r1, #32]
    }
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f003 0308 	and.w	r3, r3, #8
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d012      	beq.n	8003208 <HAL_RCC_ClockConfig+0xa8>
  {
    if ((pClkInitStruct->APB2CLKDivider) > ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	691a      	ldr	r2, [r3, #16]
 80031e6:	4b68      	ldr	r3, [pc, #416]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80031e8:	6a1b      	ldr	r3, [r3, #32]
 80031ea:	091b      	lsrs	r3, r3, #4
 80031ec:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80031f0:	429a      	cmp	r2, r3
 80031f2:	d909      	bls.n	8003208 <HAL_RCC_ClockConfig+0xa8>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pClkInitStruct->APB2CLKDivider) << 4));
 80031f4:	4b64      	ldr	r3, [pc, #400]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80031f6:	6a1b      	ldr	r3, [r3, #32]
 80031f8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	691b      	ldr	r3, [r3, #16]
 8003200:	011b      	lsls	r3, r3, #4
 8003202:	4961      	ldr	r1, [pc, #388]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003204:	4313      	orrs	r3, r2
 8003206:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	f003 0304 	and.w	r3, r3, #4
 8003210:	2b00      	cmp	r3, #0
 8003212:	d010      	beq.n	8003236 <HAL_RCC_ClockConfig+0xd6>
  {
    if ((pClkInitStruct->APB1CLKDivider) > (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	68da      	ldr	r2, [r3, #12]
 8003218:	4b5b      	ldr	r3, [pc, #364]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 800321a:	6a1b      	ldr	r3, [r3, #32]
 800321c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003220:	429a      	cmp	r2, r3
 8003222:	d908      	bls.n	8003236 <HAL_RCC_ClockConfig+0xd6>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pClkInitStruct->APB1CLKDivider);
 8003224:	4b58      	ldr	r3, [pc, #352]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003226:	6a1b      	ldr	r3, [r3, #32]
 8003228:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	68db      	ldr	r3, [r3, #12]
 8003230:	4955      	ldr	r1, [pc, #340]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003232:	4313      	orrs	r3, r2
 8003234:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	f003 0302 	and.w	r3, r3, #2
 800323e:	2b00      	cmp	r3, #0
 8003240:	d010      	beq.n	8003264 <HAL_RCC_ClockConfig+0x104>
  {
    if ((pClkInitStruct->AHBCLKDivider) > (RCC->CFGR2 & RCC_CFGR2_HPRE))
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	689a      	ldr	r2, [r3, #8]
 8003246:	4b50      	ldr	r3, [pc, #320]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003248:	6a1b      	ldr	r3, [r3, #32]
 800324a:	f003 030f 	and.w	r3, r3, #15
 800324e:	429a      	cmp	r2, r3
 8003250:	d908      	bls.n	8003264 <HAL_RCC_ClockConfig+0x104>
    {
      assert_param(IS_RCC_HCLK(pClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pClkInitStruct->AHBCLKDivider);
 8003252:	4b4d      	ldr	r3, [pc, #308]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003254:	6a1b      	ldr	r3, [r3, #32]
 8003256:	f023 020f 	bic.w	r2, r3, #15
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	689b      	ldr	r3, [r3, #8]
 800325e:	494a      	ldr	r1, [pc, #296]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003260:	4313      	orrs	r3, r2
 8003262:	620b      	str	r3, [r1, #32]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003264:	687b      	ldr	r3, [r7, #4]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	f003 0301 	and.w	r3, r3, #1
 800326c:	2b00      	cmp	r3, #0
 800326e:	f000 8093 	beq.w	8003398 <HAL_RCC_ClockConfig+0x238>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(pClkInitStruct->SYSCLKSource));

    /* PLL is selected as System Clock Source */
    if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	685b      	ldr	r3, [r3, #4]
 8003276:	2b03      	cmp	r3, #3
 8003278:	d107      	bne.n	800328a <HAL_RCC_ClockConfig+0x12a>
    {
      /* Check the PLL ready flag */
      if (READ_BIT(RCC->CR, RCC_CR_PLL1RDY) == 0U)
 800327a:	4b43      	ldr	r3, [pc, #268]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003282:	2b00      	cmp	r3, #0
 8003284:	d121      	bne.n	80032ca <HAL_RCC_ClockConfig+0x16a>
      {
        return HAL_ERROR;
 8003286:	2301      	movs	r3, #1
 8003288:	e113      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
      }
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	685b      	ldr	r3, [r3, #4]
 800328e:	2b02      	cmp	r3, #2
 8003290:	d107      	bne.n	80032a2 <HAL_RCC_ClockConfig+0x142>
      {
        /* Check the HSE ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8003292:	4b3d      	ldr	r3, [pc, #244]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800329a:	2b00      	cmp	r3, #0
 800329c:	d115      	bne.n	80032ca <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 800329e:	2301      	movs	r3, #1
 80032a0:	e107      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
        }
      }
      /* CSI is selected as System Clock Source */
      else if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 80032a2:	687b      	ldr	r3, [r7, #4]
 80032a4:	685b      	ldr	r3, [r3, #4]
 80032a6:	2b01      	cmp	r3, #1
 80032a8:	d107      	bne.n	80032ba <HAL_RCC_ClockConfig+0x15a>
      {
        /* Check the CSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_CSIRDY) == 0U)
 80032aa:	4b37      	ldr	r3, [pc, #220]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80032b2:	2b00      	cmp	r3, #0
 80032b4:	d109      	bne.n	80032ca <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 80032b6:	2301      	movs	r3, #1
 80032b8:	e0fb      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80032ba:	4b33      	ldr	r3, [pc, #204]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	f003 0302 	and.w	r3, r3, #2
 80032c2:	2b00      	cmp	r3, #0
 80032c4:	d101      	bne.n	80032ca <HAL_RCC_ClockConfig+0x16a>
        {
          return HAL_ERROR;
 80032c6:	2301      	movs	r3, #1
 80032c8:	e0f3      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
        }
      }
    }

    MODIFY_REG(RCC->CFGR1, RCC_CFGR1_SW, pClkInitStruct->SYSCLKSource);
 80032ca:	4b2f      	ldr	r3, [pc, #188]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80032cc:	69db      	ldr	r3, [r3, #28]
 80032ce:	f023 0203 	bic.w	r2, r3, #3
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	685b      	ldr	r3, [r3, #4]
 80032d6:	492c      	ldr	r1, [pc, #176]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 80032d8:	4313      	orrs	r3, r2
 80032da:	61cb      	str	r3, [r1, #28]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80032dc:	f7fe f83a 	bl	8001354 <HAL_GetTick>
 80032e0:	60f8      	str	r0, [r7, #12]

    if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	685b      	ldr	r3, [r3, #4]
 80032e6:	2b03      	cmp	r3, #3
 80032e8:	d112      	bne.n	8003310 <HAL_RCC_ClockConfig+0x1b0>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80032ea:	e00a      	b.n	8003302 <HAL_RCC_ClockConfig+0x1a2>
      {
        if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 80032ec:	f7fe f832 	bl	8001354 <HAL_GetTick>
 80032f0:	4602      	mov	r2, r0
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	1ad3      	subs	r3, r2, r3
 80032f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80032fa:	4293      	cmp	r3, r2
 80032fc:	d901      	bls.n	8003302 <HAL_RCC_ClockConfig+0x1a2>
        {
          return HAL_TIMEOUT;
 80032fe:	2303      	movs	r3, #3
 8003300:	e0d7      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003302:	4b21      	ldr	r3, [pc, #132]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003304:	69db      	ldr	r3, [r3, #28]
 8003306:	f003 0318 	and.w	r3, r3, #24
 800330a:	2b18      	cmp	r3, #24
 800330c:	d1ee      	bne.n	80032ec <HAL_RCC_ClockConfig+0x18c>
 800330e:	e043      	b.n	8003398 <HAL_RCC_ClockConfig+0x238>
        }
      }
    }
    else
    {
      if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	685b      	ldr	r3, [r3, #4]
 8003314:	2b02      	cmp	r3, #2
 8003316:	d112      	bne.n	800333e <HAL_RCC_ClockConfig+0x1de>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003318:	e00a      	b.n	8003330 <HAL_RCC_ClockConfig+0x1d0>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 800331a:	f7fe f81b 	bl	8001354 <HAL_GetTick>
 800331e:	4602      	mov	r2, r0
 8003320:	68fb      	ldr	r3, [r7, #12]
 8003322:	1ad3      	subs	r3, r2, r3
 8003324:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003328:	4293      	cmp	r3, r2
 800332a:	d901      	bls.n	8003330 <HAL_RCC_ClockConfig+0x1d0>
          {
            return HAL_TIMEOUT;
 800332c:	2303      	movs	r3, #3
 800332e:	e0c0      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8003330:	4b15      	ldr	r3, [pc, #84]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003332:	69db      	ldr	r3, [r3, #28]
 8003334:	f003 0318 	and.w	r3, r3, #24
 8003338:	2b10      	cmp	r3, #16
 800333a:	d1ee      	bne.n	800331a <HAL_RCC_ClockConfig+0x1ba>
 800333c:	e02c      	b.n	8003398 <HAL_RCC_ClockConfig+0x238>
          }
        }
      }
      else if (pClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	685b      	ldr	r3, [r3, #4]
 8003342:	2b01      	cmp	r3, #1
 8003344:	d122      	bne.n	800338c <HAL_RCC_ClockConfig+0x22c>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_CSI)
 8003346:	e00a      	b.n	800335e <HAL_RCC_ClockConfig+0x1fe>
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 8003348:	f7fe f804 	bl	8001354 <HAL_GetTick>
 800334c:	4602      	mov	r2, r0
 800334e:	68fb      	ldr	r3, [r7, #12]
 8003350:	1ad3      	subs	r3, r2, r3
 8003352:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003356:	4293      	cmp	r3, r2
 8003358:	d901      	bls.n	800335e <HAL_RCC_ClockConfig+0x1fe>
          {
            return HAL_TIMEOUT;
 800335a:	2303      	movs	r3, #3
 800335c:	e0a9      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_CSI)
 800335e:	4b0a      	ldr	r3, [pc, #40]	@ (8003388 <HAL_RCC_ClockConfig+0x228>)
 8003360:	69db      	ldr	r3, [r3, #28]
 8003362:	f003 0318 	and.w	r3, r3, #24
 8003366:	2b08      	cmp	r3, #8
 8003368:	d1ee      	bne.n	8003348 <HAL_RCC_ClockConfig+0x1e8>
 800336a:	e015      	b.n	8003398 <HAL_RCC_ClockConfig+0x238>
      }
      else
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
        {
          if ((HAL_GetTick() - tickstart) > RCC_CLOCKSWITCH_TIMEOUT_VALUE)
 800336c:	f7fd fff2 	bl	8001354 <HAL_GetTick>
 8003370:	4602      	mov	r2, r0
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	1ad3      	subs	r3, r2, r3
 8003376:	f241 3288 	movw	r2, #5000	@ 0x1388
 800337a:	4293      	cmp	r3, r2
 800337c:	d906      	bls.n	800338c <HAL_RCC_ClockConfig+0x22c>
          {
            return HAL_TIMEOUT;
 800337e:	2303      	movs	r3, #3
 8003380:	e097      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
 8003382:	bf00      	nop
 8003384:	40022000 	.word	0x40022000
 8003388:	44020c00 	.word	0x44020c00
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 800338c:	4b4b      	ldr	r3, [pc, #300]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 800338e:	69db      	ldr	r3, [r3, #28]
 8003390:	f003 0318 	and.w	r3, r3, #24
 8003394:	2b00      	cmp	r3, #0
 8003396:	d1e9      	bne.n	800336c <HAL_RCC_ClockConfig+0x20c>
    }
  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	f003 0302 	and.w	r3, r3, #2
 80033a0:	2b00      	cmp	r3, #0
 80033a2:	d010      	beq.n	80033c6 <HAL_RCC_ClockConfig+0x266>
  {
    if ((pClkInitStruct->AHBCLKDivider) < (RCC->CFGR2 & RCC_CFGR2_HPRE))
 80033a4:	687b      	ldr	r3, [r7, #4]
 80033a6:	689a      	ldr	r2, [r3, #8]
 80033a8:	4b44      	ldr	r3, [pc, #272]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 80033aa:	6a1b      	ldr	r3, [r3, #32]
 80033ac:	f003 030f 	and.w	r3, r3, #15
 80033b0:	429a      	cmp	r2, r3
 80033b2:	d208      	bcs.n	80033c6 <HAL_RCC_ClockConfig+0x266>
    {
      assert_param(IS_RCC_HCLK(pClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_HPRE, pClkInitStruct->AHBCLKDivider);
 80033b4:	4b41      	ldr	r3, [pc, #260]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 80033b6:	6a1b      	ldr	r3, [r3, #32]
 80033b8:	f023 020f 	bic.w	r2, r3, #15
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	689b      	ldr	r3, [r3, #8]
 80033c0:	493e      	ldr	r1, [pc, #248]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 80033c2:	4313      	orrs	r3, r2
 80033c4:	620b      	str	r3, [r1, #32]
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80033c6:	4b3e      	ldr	r3, [pc, #248]	@ (80034c0 <HAL_RCC_ClockConfig+0x360>)
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	f003 030f 	and.w	r3, r3, #15
 80033ce:	683a      	ldr	r2, [r7, #0]
 80033d0:	429a      	cmp	r2, r3
 80033d2:	d210      	bcs.n	80033f6 <HAL_RCC_ClockConfig+0x296>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80033d4:	4b3a      	ldr	r3, [pc, #232]	@ (80034c0 <HAL_RCC_ClockConfig+0x360>)
 80033d6:	681b      	ldr	r3, [r3, #0]
 80033d8:	f023 020f 	bic.w	r2, r3, #15
 80033dc:	4938      	ldr	r1, [pc, #224]	@ (80034c0 <HAL_RCC_ClockConfig+0x360>)
 80033de:	683b      	ldr	r3, [r7, #0]
 80033e0:	4313      	orrs	r3, r2
 80033e2:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80033e4:	4b36      	ldr	r3, [pc, #216]	@ (80034c0 <HAL_RCC_ClockConfig+0x360>)
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	f003 030f 	and.w	r3, r3, #15
 80033ec:	683a      	ldr	r2, [r7, #0]
 80033ee:	429a      	cmp	r2, r3
 80033f0:	d001      	beq.n	80033f6 <HAL_RCC_ClockConfig+0x296>
    {
      return HAL_ERROR;
 80033f2:	2301      	movs	r3, #1
 80033f4:	e05d      	b.n	80034b2 <HAL_RCC_ClockConfig+0x352>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	f003 0304 	and.w	r3, r3, #4
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d010      	beq.n	8003424 <HAL_RCC_ClockConfig+0x2c4>
  {
    if ((pClkInitStruct->APB1CLKDivider) < (RCC->CFGR2 & RCC_CFGR2_PPRE1))
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	68da      	ldr	r2, [r3, #12]
 8003406:	4b2d      	ldr	r3, [pc, #180]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003408:	6a1b      	ldr	r3, [r3, #32]
 800340a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800340e:	429a      	cmp	r2, r3
 8003410:	d208      	bcs.n	8003424 <HAL_RCC_ClockConfig+0x2c4>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE1, pClkInitStruct->APB1CLKDivider);
 8003412:	4b2a      	ldr	r3, [pc, #168]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003414:	6a1b      	ldr	r3, [r3, #32]
 8003416:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	68db      	ldr	r3, [r3, #12]
 800341e:	4927      	ldr	r1, [pc, #156]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003420:	4313      	orrs	r3, r2
 8003422:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	f003 0308 	and.w	r3, r3, #8
 800342c:	2b00      	cmp	r3, #0
 800342e:	d012      	beq.n	8003456 <HAL_RCC_ClockConfig+0x2f6>
  {
    if ((pClkInitStruct->APB2CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE2) >> 4))
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	691a      	ldr	r2, [r3, #16]
 8003434:	4b21      	ldr	r3, [pc, #132]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003436:	6a1b      	ldr	r3, [r3, #32]
 8003438:	091b      	lsrs	r3, r3, #4
 800343a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800343e:	429a      	cmp	r2, r3
 8003440:	d209      	bcs.n	8003456 <HAL_RCC_ClockConfig+0x2f6>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE2, ((pClkInitStruct->APB2CLKDivider) << 4));
 8003442:	4b1e      	ldr	r3, [pc, #120]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003444:	6a1b      	ldr	r3, [r3, #32]
 8003446:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	691b      	ldr	r3, [r3, #16]
 800344e:	011b      	lsls	r3, r3, #4
 8003450:	491a      	ldr	r1, [pc, #104]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003452:	4313      	orrs	r3, r2
 8003454:	620b      	str	r3, [r1, #32]
    }
  }

  /*-------------------------- PCLK3 Configuration ---------------------------*/
  if (((pClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK3) == RCC_CLOCKTYPE_PCLK3)
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	681b      	ldr	r3, [r3, #0]
 800345a:	f003 0310 	and.w	r3, r3, #16
 800345e:	2b00      	cmp	r3, #0
 8003460:	d012      	beq.n	8003488 <HAL_RCC_ClockConfig+0x328>
  {
    if ((pClkInitStruct->APB3CLKDivider) < ((RCC->CFGR2 & RCC_CFGR2_PPRE3) >> 8))
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	695a      	ldr	r2, [r3, #20]
 8003466:	4b15      	ldr	r3, [pc, #84]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003468:	6a1b      	ldr	r3, [r3, #32]
 800346a:	0a1b      	lsrs	r3, r3, #8
 800346c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003470:	429a      	cmp	r2, r3
 8003472:	d209      	bcs.n	8003488 <HAL_RCC_ClockConfig+0x328>
    {
      assert_param(IS_RCC_PCLK(pClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->CFGR2, RCC_CFGR2_PPRE3, ((pClkInitStruct->APB3CLKDivider) << 8));
 8003474:	4b11      	ldr	r3, [pc, #68]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003476:	6a1b      	ldr	r3, [r3, #32]
 8003478:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	695b      	ldr	r3, [r3, #20]
 8003480:	021b      	lsls	r3, r3, #8
 8003482:	490e      	ldr	r1, [pc, #56]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003484:	4313      	orrs	r3, r2
 8003486:	620b      	str	r3, [r1, #32]
    }
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos];
 8003488:	f000 f822 	bl	80034d0 <HAL_RCC_GetSysClockFreq>
 800348c:	4602      	mov	r2, r0
 800348e:	4b0b      	ldr	r3, [pc, #44]	@ (80034bc <HAL_RCC_ClockConfig+0x35c>)
 8003490:	6a1b      	ldr	r3, [r3, #32]
 8003492:	f003 030f 	and.w	r3, r3, #15
 8003496:	490b      	ldr	r1, [pc, #44]	@ (80034c4 <HAL_RCC_ClockConfig+0x364>)
 8003498:	5ccb      	ldrb	r3, [r1, r3]
 800349a:	fa22 f303 	lsr.w	r3, r2, r3
 800349e:	4a0a      	ldr	r2, [pc, #40]	@ (80034c8 <HAL_RCC_ClockConfig+0x368>)
 80034a0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 80034a2:	4b0a      	ldr	r3, [pc, #40]	@ (80034cc <HAL_RCC_ClockConfig+0x36c>)
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	4618      	mov	r0, r3
 80034a8:	f7fd fcde 	bl	8000e68 <HAL_InitTick>
 80034ac:	4603      	mov	r3, r0
 80034ae:	72fb      	strb	r3, [r7, #11]

  return halstatus;
 80034b0:	7afb      	ldrb	r3, [r7, #11]
}
 80034b2:	4618      	mov	r0, r3
 80034b4:	3710      	adds	r7, #16
 80034b6:	46bd      	mov	sp, r7
 80034b8:	bd80      	pop	{r7, pc}
 80034ba:	bf00      	nop
 80034bc:	44020c00 	.word	0x44020c00
 80034c0:	40022000 	.word	0x40022000
 80034c4:	08023e18 	.word	0x08023e18
 80034c8:	20000004 	.word	0x20000004
 80034cc:	20000008 	.word	0x20000008

080034d0 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80034d0:	b480      	push	{r7}
 80034d2:	b089      	sub	sp, #36	@ 0x24
 80034d4:	af00      	add	r7, sp, #0
  uint32_t sysclockfreq;
  uint32_t hsivalue;
  float_t fracn1;
  float_t pllvco;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_CSI)
 80034d6:	4b8c      	ldr	r3, [pc, #560]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 80034d8:	69db      	ldr	r3, [r3, #28]
 80034da:	f003 0318 	and.w	r3, r3, #24
 80034de:	2b08      	cmp	r3, #8
 80034e0:	d102      	bne.n	80034e8 <HAL_RCC_GetSysClockFreq+0x18>
  {
    /* CSI used as system clock  source */
    sysclockfreq = CSI_VALUE;
 80034e2:	4b8a      	ldr	r3, [pc, #552]	@ (800370c <HAL_RCC_GetSysClockFreq+0x23c>)
 80034e4:	61fb      	str	r3, [r7, #28]
 80034e6:	e107      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80034e8:	4b87      	ldr	r3, [pc, #540]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 80034ea:	69db      	ldr	r3, [r3, #28]
 80034ec:	f003 0318 	and.w	r3, r3, #24
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d112      	bne.n	800351a <HAL_RCC_GetSysClockFreq+0x4a>
  {
    /* HSI used as system clock source */
    if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIVF) != 0U)
 80034f4:	4b84      	ldr	r3, [pc, #528]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 80034f6:	681b      	ldr	r3, [r3, #0]
 80034f8:	f003 0320 	and.w	r3, r3, #32
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	d009      	beq.n	8003514 <HAL_RCC_GetSysClockFreq+0x44>
    {
      sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> RCC_CR_HSIDIV_Pos));
 8003500:	4b81      	ldr	r3, [pc, #516]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	08db      	lsrs	r3, r3, #3
 8003506:	f003 0303 	and.w	r3, r3, #3
 800350a:	4a81      	ldr	r2, [pc, #516]	@ (8003710 <HAL_RCC_GetSysClockFreq+0x240>)
 800350c:	fa22 f303 	lsr.w	r3, r2, r3
 8003510:	61fb      	str	r3, [r7, #28]
 8003512:	e0f1      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
    }
    else
    {
      sysclockfreq = (uint32_t) HSI_VALUE;
 8003514:	4b7e      	ldr	r3, [pc, #504]	@ (8003710 <HAL_RCC_GetSysClockFreq+0x240>)
 8003516:	61fb      	str	r3, [r7, #28]
 8003518:	e0ee      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
    }
  }
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 800351a:	4b7b      	ldr	r3, [pc, #492]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800351c:	69db      	ldr	r3, [r3, #28]
 800351e:	f003 0318 	and.w	r3, r3, #24
 8003522:	2b10      	cmp	r3, #16
 8003524:	d102      	bne.n	800352c <HAL_RCC_GetSysClockFreq+0x5c>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 8003526:	4b7b      	ldr	r3, [pc, #492]	@ (8003714 <HAL_RCC_GetSysClockFreq+0x244>)
 8003528:	61fb      	str	r3, [r7, #28]
 800352a:	e0e5      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
  }

  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800352c:	4b76      	ldr	r3, [pc, #472]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800352e:	69db      	ldr	r3, [r3, #28]
 8003530:	f003 0318 	and.w	r3, r3, #24
 8003534:	2b18      	cmp	r3, #24
 8003536:	f040 80dd 	bne.w	80036f4 <HAL_RCC_GetSysClockFreq+0x224>
    /* PLL used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 800353a:	4b73      	ldr	r3, [pc, #460]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800353c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800353e:	f003 0303 	and.w	r3, r3, #3
 8003542:	617b      	str	r3, [r7, #20]
    pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M) >> RCC_PLL1CFGR_PLL1M_Pos);
 8003544:	4b70      	ldr	r3, [pc, #448]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 8003546:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003548:	0a1b      	lsrs	r3, r3, #8
 800354a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800354e:	613b      	str	r3, [r7, #16]
    pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN) >> RCC_PLL1CFGR_PLL1FRACEN_Pos);
 8003550:	4b6d      	ldr	r3, [pc, #436]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 8003552:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003554:	091b      	lsrs	r3, r3, #4
 8003556:	f003 0301 	and.w	r3, r3, #1
 800355a:	60fb      	str	r3, [r7, #12]
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & \
 800355c:	4b6a      	ldr	r3, [pc, #424]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800355e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
                                               RCC_PLL1FRACR_PLL1FRACN) >> RCC_PLL1FRACR_PLL1FRACN_Pos));
 8003560:	08db      	lsrs	r3, r3, #3
 8003562:	f3c3 030c 	ubfx	r3, r3, #0, #13
    fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & \
 8003566:	68fa      	ldr	r2, [r7, #12]
 8003568:	fb02 f303 	mul.w	r3, r2, r3
 800356c:	ee07 3a90 	vmov	s15, r3
 8003570:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003574:	edc7 7a02 	vstr	s15, [r7, #8]

    if (pllm != 0U)
 8003578:	693b      	ldr	r3, [r7, #16]
 800357a:	2b00      	cmp	r3, #0
 800357c:	f000 80b7 	beq.w	80036ee <HAL_RCC_GetSysClockFreq+0x21e>
    {
      switch (pllsource)
 8003580:	697b      	ldr	r3, [r7, #20]
 8003582:	2b01      	cmp	r3, #1
 8003584:	d003      	beq.n	800358e <HAL_RCC_GetSysClockFreq+0xbe>
 8003586:	697b      	ldr	r3, [r7, #20]
 8003588:	2b03      	cmp	r3, #3
 800358a:	d056      	beq.n	800363a <HAL_RCC_GetSysClockFreq+0x16a>
 800358c:	e077      	b.n	800367e <HAL_RCC_GetSysClockFreq+0x1ae>
      {
        case RCC_PLL1_SOURCE_HSI:  /* HSI used as PLL1 clock source */

          if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIVF) != 0U)
 800358e:	4b5e      	ldr	r3, [pc, #376]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 8003590:	681b      	ldr	r3, [r3, #0]
 8003592:	f003 0320 	and.w	r3, r3, #32
 8003596:	2b00      	cmp	r3, #0
 8003598:	d02d      	beq.n	80035f6 <HAL_RCC_GetSysClockFreq+0x126>
          {
            hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> RCC_CR_HSIDIV_Pos));
 800359a:	4b5b      	ldr	r3, [pc, #364]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	08db      	lsrs	r3, r3, #3
 80035a0:	f003 0303 	and.w	r3, r3, #3
 80035a4:	4a5a      	ldr	r2, [pc, #360]	@ (8003710 <HAL_RCC_GetSysClockFreq+0x240>)
 80035a6:	fa22 f303 	lsr.w	r3, r2, r3
 80035aa:	607b      	str	r3, [r7, #4]
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	ee07 3a90 	vmov	s15, r3
 80035b2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80035b6:	693b      	ldr	r3, [r7, #16]
 80035b8:	ee07 3a90 	vmov	s15, r3
 80035bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80035c0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80035c4:	4b50      	ldr	r3, [pc, #320]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 80035c6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80035c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80035cc:	ee07 3a90 	vmov	s15, r3
 80035d0:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                            (fracn1 / (float_t)0x2000) + (float_t)1);
 80035d4:	ed97 6a02 	vldr	s12, [r7, #8]
 80035d8:	eddf 5a4f 	vldr	s11, [pc, #316]	@ 8003718 <HAL_RCC_GetSysClockFreq+0x248>
 80035dc:	eec6 7a25 	vdiv.f32	s15, s12, s11
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035e0:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                            (fracn1 / (float_t)0x2000) + (float_t)1);
 80035e4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80035e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
            pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035ec:	ee67 7a27 	vmul.f32	s15, s14, s15
 80035f0:	edc7 7a06 	vstr	s15, [r7, #24]
          {
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
          }

          break;
 80035f4:	e065      	b.n	80036c2 <HAL_RCC_GetSysClockFreq+0x1f2>
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80035f6:	693b      	ldr	r3, [r7, #16]
 80035f8:	ee07 3a90 	vmov	s15, r3
 80035fc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003600:	eddf 6a46 	vldr	s13, [pc, #280]	@ 800371c <HAL_RCC_GetSysClockFreq+0x24c>
 8003604:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003608:	4b3f      	ldr	r3, [pc, #252]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800360a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800360c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003610:	ee07 3a90 	vmov	s15, r3
 8003614:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
 8003618:	ed97 6a02 	vldr	s12, [r7, #8]
 800361c:	eddf 5a3e 	vldr	s11, [pc, #248]	@ 8003718 <HAL_RCC_GetSysClockFreq+0x248>
 8003620:	eec6 7a25 	vdiv.f32	s15, s12, s11
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003624:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                             (fracn1 / (float_t)0x2000) + (float_t)1);
 8003628:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800362c:	ee77 7aa6 	vadd.f32	s15, s15, s13
            pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003630:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003634:	edc7 7a06 	vstr	s15, [r7, #24]
          break;
 8003638:	e043      	b.n	80036c2 <HAL_RCC_GetSysClockFreq+0x1f2>

        case RCC_PLL1_SOURCE_HSE:  /* HSE used as PLL1 clock source */
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800363a:	693b      	ldr	r3, [r7, #16]
 800363c:	ee07 3a90 	vmov	s15, r3
 8003640:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003644:	eddf 6a36 	vldr	s13, [pc, #216]	@ 8003720 <HAL_RCC_GetSysClockFreq+0x250>
 8003648:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800364c:	4b2e      	ldr	r3, [pc, #184]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 800364e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003650:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003654:	ee07 3a90 	vmov	s15, r3
 8003658:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 800365c:	ed97 6a02 	vldr	s12, [r7, #8]
 8003660:	eddf 5a2d 	vldr	s11, [pc, #180]	@ 8003718 <HAL_RCC_GetSysClockFreq+0x248>
 8003664:	eec6 7a25 	vdiv.f32	s15, s12, s11
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003668:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 800366c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8003670:	ee77 7aa6 	vadd.f32	s15, s15, s13
          pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 8003674:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003678:	edc7 7a06 	vstr	s15, [r7, #24]

          break;
 800367c:	e021      	b.n	80036c2 <HAL_RCC_GetSysClockFreq+0x1f2>

        case RCC_PLL1_SOURCE_CSI:  /* CSI used as PLL1 clock source */
        default:
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 800367e:	693b      	ldr	r3, [r7, #16]
 8003680:	ee07 3a90 	vmov	s15, r3
 8003684:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003688:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8003724 <HAL_RCC_GetSysClockFreq+0x254>
 800368c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003690:	4b1d      	ldr	r3, [pc, #116]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 8003692:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003694:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003698:	ee07 3a90 	vmov	s15, r3
 800369c:	eef8 6a67 	vcvt.f32.u32	s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 80036a0:	ed97 6a02 	vldr	s12, [r7, #8]
 80036a4:	eddf 5a1c 	vldr	s11, [pc, #112]	@ 8003718 <HAL_RCC_GetSysClockFreq+0x248>
 80036a8:	eec6 7a25 	vdiv.f32	s15, s12, s11
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80036ac:	ee76 7aa7 	vadd.f32	s15, s13, s15
                                                           (fracn1 / (float_t)0x2000) + (float_t)1);
 80036b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80036b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
          pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + \
 80036b8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80036bc:	edc7 7a06 	vstr	s15, [r7, #24]
          break;
 80036c0:	bf00      	nop
      }

      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1P) >> RCC_PLL1DIVR_PLL1P_Pos) + 1U) ;
 80036c2:	4b11      	ldr	r3, [pc, #68]	@ (8003708 <HAL_RCC_GetSysClockFreq+0x238>)
 80036c4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80036c6:	0a5b      	lsrs	r3, r3, #9
 80036c8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80036cc:	3301      	adds	r3, #1
 80036ce:	603b      	str	r3, [r7, #0]
      sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	ee07 3a90 	vmov	s15, r3
 80036d6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80036da:	edd7 6a06 	vldr	s13, [r7, #24]
 80036de:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80036e2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80036e6:	ee17 3a90 	vmov	r3, s15
 80036ea:	61fb      	str	r3, [r7, #28]
 80036ec:	e004      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
    }
    else
    {
      sysclockfreq = 0;
 80036ee:	2300      	movs	r3, #0
 80036f0:	61fb      	str	r3, [r7, #28]
 80036f2:	e001      	b.n	80036f8 <HAL_RCC_GetSysClockFreq+0x228>
  }

  else
  {
    /* HSI is the default system clock source */
    sysclockfreq = (uint32_t) HSI_VALUE;
 80036f4:	4b06      	ldr	r3, [pc, #24]	@ (8003710 <HAL_RCC_GetSysClockFreq+0x240>)
 80036f6:	61fb      	str	r3, [r7, #28]
  }

  return sysclockfreq;
 80036f8:	69fb      	ldr	r3, [r7, #28]
}
 80036fa:	4618      	mov	r0, r3
 80036fc:	3724      	adds	r7, #36	@ 0x24
 80036fe:	46bd      	mov	sp, r7
 8003700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003704:	4770      	bx	lr
 8003706:	bf00      	nop
 8003708:	44020c00 	.word	0x44020c00
 800370c:	003d0900 	.word	0x003d0900
 8003710:	03d09000 	.word	0x03d09000
 8003714:	007a1200 	.word	0x007a1200
 8003718:	46000000 	.word	0x46000000
 800371c:	4c742400 	.word	0x4c742400
 8003720:	4af42400 	.word	0x4af42400
 8003724:	4a742400 	.word	0x4a742400

08003728 <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8003728:	b580      	push	{r7, lr}
 800372a:	af00      	add	r7, sp, #0

  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 800372c:	f7ff fed0 	bl	80034d0 <HAL_RCC_GetSysClockFreq>
 8003730:	4602      	mov	r2, r0
 8003732:	4b08      	ldr	r3, [pc, #32]	@ (8003754 <HAL_RCC_GetHCLKFreq+0x2c>)
 8003734:	6a1b      	ldr	r3, [r3, #32]
                                                                >> RCC_CFGR2_HPRE_Pos] & 0x1FU);
 8003736:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 800373a:	4907      	ldr	r1, [pc, #28]	@ (8003758 <HAL_RCC_GetHCLKFreq+0x30>)
 800373c:	5ccb      	ldrb	r3, [r1, r3]
                                                                >> RCC_CFGR2_HPRE_Pos] & 0x1FU);
 800373e:	f003 031f 	and.w	r3, r3, #31
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[(RCC->CFGR2 & RCC_CFGR2_HPRE) \
 8003742:	fa22 f303 	lsr.w	r3, r2, r3
 8003746:	4a05      	ldr	r2, [pc, #20]	@ (800375c <HAL_RCC_GetHCLKFreq+0x34>)
 8003748:	6013      	str	r3, [r2, #0]

  return SystemCoreClock;
 800374a:	4b04      	ldr	r3, [pc, #16]	@ (800375c <HAL_RCC_GetHCLKFreq+0x34>)
 800374c:	681b      	ldr	r3, [r3, #0]
}
 800374e:	4618      	mov	r0, r3
 8003750:	bd80      	pop	{r7, pc}
 8003752:	bf00      	nop
 8003754:	44020c00 	.word	0x44020c00
 8003758:	08023e18 	.word	0x08023e18
 800375c:	20000004 	.word	0x20000004

08003760 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003760:	b580      	push	{r7, lr}
 8003762:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((APBPrescTable[(RCC->CFGR2 & RCC_CFGR2_PPRE1) >> RCC_CFGR2_PPRE1_Pos]) & 0x1FU));
 8003764:	f7ff ffe0 	bl	8003728 <HAL_RCC_GetHCLKFreq>
 8003768:	4602      	mov	r2, r0
 800376a:	4b06      	ldr	r3, [pc, #24]	@ (8003784 <HAL_RCC_GetPCLK1Freq+0x24>)
 800376c:	6a1b      	ldr	r3, [r3, #32]
 800376e:	091b      	lsrs	r3, r3, #4
 8003770:	f003 0307 	and.w	r3, r3, #7
 8003774:	4904      	ldr	r1, [pc, #16]	@ (8003788 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003776:	5ccb      	ldrb	r3, [r1, r3]
 8003778:	f003 031f 	and.w	r3, r3, #31
 800377c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8003780:	4618      	mov	r0, r3
 8003782:	bd80      	pop	{r7, pc}
 8003784:	44020c00 	.word	0x44020c00
 8003788:	08023e28 	.word	0x08023e28

0800378c <HAL_RCC_GetClockConfig>:
  *         will be configured.
  * @param  pFLatency  Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *pClkInitStruct, uint32_t *pFLatency)
{
 800378c:	b480      	push	{r7}
 800378e:	b085      	sub	sp, #20
 8003790:	af00      	add	r7, sp, #0
 8003792:	6078      	str	r0, [r7, #4]
 8003794:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(pClkInitStruct != (void *)NULL);
  assert_param(pFLatency != (void *)NULL);

  /* Set all possible values for the Clock type parameter --------------------*/
  pClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2 | \
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	221f      	movs	r2, #31
 800379a:	601a      	str	r2, [r3, #0]
                              RCC_CLOCKTYPE_PCLK3;

  /* Get the SYSCLK configuration --------------------------------------------*/
  pClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR1 & RCC_CFGR1_SW);
 800379c:	4b15      	ldr	r3, [pc, #84]	@ (80037f4 <HAL_RCC_GetClockConfig+0x68>)
 800379e:	69db      	ldr	r3, [r3, #28]
 80037a0:	f003 0203 	and.w	r2, r3, #3
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  regval = RCC->CFGR2;
 80037a8:	4b12      	ldr	r3, [pc, #72]	@ (80037f4 <HAL_RCC_GetClockConfig+0x68>)
 80037aa:	6a1b      	ldr	r3, [r3, #32]
 80037ac:	60fb      	str	r3, [r7, #12]
  pClkInitStruct->AHBCLKDivider = (uint32_t)(regval & RCC_CFGR2_HPRE);
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	f003 020f 	and.w	r2, r3, #15
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  pClkInitStruct->APB1CLKDivider = (uint32_t)(regval & RCC_CFGR2_PPRE1);
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  pClkInitStruct->APB2CLKDivider = (uint32_t)((regval & RCC_CFGR2_PPRE2) >> 4);
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	091b      	lsrs	r3, r3, #4
 80037c6:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	611a      	str	r2, [r3, #16]

  /* Get the APB3 configuration ----------------------------------------------*/
  pClkInitStruct->APB3CLKDivider = (uint32_t)((regval & RCC_CFGR2_PPRE3) >> 8);
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	0a1b      	lsrs	r3, r3, #8
 80037d2:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	615a      	str	r2, [r3, #20]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80037da:	4b07      	ldr	r3, [pc, #28]	@ (80037f8 <HAL_RCC_GetClockConfig+0x6c>)
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	f003 020f 	and.w	r2, r3, #15
 80037e2:	683b      	ldr	r3, [r7, #0]
 80037e4:	601a      	str	r2, [r3, #0]
}
 80037e6:	bf00      	nop
 80037e8:	3714      	adds	r7, #20
 80037ea:	46bd      	mov	sp, r7
 80037ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037f0:	4770      	bx	lr
 80037f2:	bf00      	nop
 80037f4:	44020c00 	.word	0x44020c00
 80037f8:	40022000 	.word	0x40022000

080037fc <HAL_RCCEx_PeriphCLKConfig>:
  *  (*)   : For stm32h56xxx and stm32h57xxx family lines only.
  *  (**)  : For stm32h563xx and stm32h57xxx family lines only.
  *  (***) : For stm32h503xx family line only.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(const RCC_PeriphCLKInitTypeDef  *pPeriphClkInit)
{
 80037fc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003800:	b0d8      	sub	sp, #352	@ 0x160
 8003802:	af00      	add	r7, sp, #0
 8003804:	f8c7 014c 	str.w	r0, [r7, #332]	@ 0x14c
  uint32_t tmpregister;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8003808:	2300      	movs	r3, #0
 800380a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 800380e:	2300      	movs	r3, #0
 8003810:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(pPeriphClkInit->PeriphClockSelection));

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8003814:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800381c:	f002 7480 	and.w	r4, r2, #16777216	@ 0x1000000
 8003820:	2500      	movs	r5, #0
 8003822:	ea54 0305 	orrs.w	r3, r4, r5
 8003826:	d00b      	beq.n	8003840 <HAL_RCCEx_PeriphCLKConfig+0x44>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(pPeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(pPeriphClkInit->CkperClockSelection);
 8003828:	4bcd      	ldr	r3, [pc, #820]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 800382a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800382e:	f023 4140 	bic.w	r1, r3, #3221225472	@ 0xc0000000
 8003832:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003836:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003838:	4ac9      	ldr	r2, [pc, #804]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 800383a:	430b      	orrs	r3, r1
 800383c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003840:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003844:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003848:	f002 0801 	and.w	r8, r2, #1
 800384c:	f04f 0900 	mov.w	r9, #0
 8003850:	ea58 0309 	orrs.w	r3, r8, r9
 8003854:	d042      	beq.n	80038dc <HAL_RCCEx_PeriphCLKConfig+0xe0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(pPeriphClkInit->Usart1ClockSelection));

    switch (pPeriphClkInit->Usart1ClockSelection)
 8003856:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800385a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800385c:	2b05      	cmp	r3, #5
 800385e:	d823      	bhi.n	80038a8 <HAL_RCCEx_PeriphCLKConfig+0xac>
 8003860:	a201      	add	r2, pc, #4	@ (adr r2, 8003868 <HAL_RCCEx_PeriphCLKConfig+0x6c>)
 8003862:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003866:	bf00      	nop
 8003868:	080038b1 	.word	0x080038b1
 800386c:	08003881 	.word	0x08003881
 8003870:	08003895 	.word	0x08003895
 8003874:	080038b1 	.word	0x080038b1
 8003878:	080038b1 	.word	0x080038b1
 800387c:	080038b1 	.word	0x080038b1
        /* USART1 clock source config set later after clock selection check */
        break;

      case RCC_USART1CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART1*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003880:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003884:	3308      	adds	r3, #8
 8003886:	4618      	mov	r0, r3
 8003888:	f001 ff42 	bl	8005710 <RCCEx_PLL2_Config>
 800388c:	4603      	mov	r3, r0
 800388e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART1 clock source config set later after clock selection check */
        break;
 8003892:	e00e      	b.n	80038b2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
#if defined(RCC_USART1CLKSOURCE_PLL3Q)
      case RCC_USART1CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART1*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003894:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003898:	3330      	adds	r3, #48	@ 0x30
 800389a:	4618      	mov	r0, r3
 800389c:	f001 ffd0 	bl	8005840 <RCCEx_PLL3_Config>
 80038a0:	4603      	mov	r3, r0
 80038a2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART1 clock source config set later after clock selection check */
        break;
 80038a6:	e004      	b.n	80038b2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
      case RCC_USART1CLKSOURCE_LSE:      /* LSE clock is used as source of USART1 clock*/
        /* USART1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80038a8:	2301      	movs	r3, #1
 80038aa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80038ae:	e000      	b.n	80038b2 <HAL_RCCEx_PeriphCLKConfig+0xb6>
        break;
 80038b0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80038b2:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	d10c      	bne.n	80038d4 <HAL_RCCEx_PeriphCLKConfig+0xd8>
    {
      /* Set the source of USART1 clock*/
      __HAL_RCC_USART1_CONFIG(pPeriphClkInit->Usart1ClockSelection);
 80038ba:	4ba9      	ldr	r3, [pc, #676]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80038bc:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80038c0:	f023 0107 	bic.w	r1, r3, #7
 80038c4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80038c8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ca:	4aa5      	ldr	r2, [pc, #660]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80038cc:	430b      	orrs	r3, r1
 80038ce:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 80038d2:	e003      	b.n	80038dc <HAL_RCCEx_PeriphCLKConfig+0xe0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80038d4:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80038d8:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80038dc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80038e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038e4:	f002 0a02 	and.w	sl, r2, #2
 80038e8:	f04f 0b00 	mov.w	fp, #0
 80038ec:	ea5a 030b 	orrs.w	r3, sl, fp
 80038f0:	f000 8088 	beq.w	8003a04 <HAL_RCCEx_PeriphCLKConfig+0x208>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(pPeriphClkInit->Usart2ClockSelection));

    switch (pPeriphClkInit->Usart2ClockSelection)
 80038f4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80038f8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80038fa:	2b28      	cmp	r3, #40	@ 0x28
 80038fc:	d868      	bhi.n	80039d0 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 80038fe:	a201      	add	r2, pc, #4	@ (adr r2, 8003904 <HAL_RCCEx_PeriphCLKConfig+0x108>)
 8003900:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003904:	080039d9 	.word	0x080039d9
 8003908:	080039d1 	.word	0x080039d1
 800390c:	080039d1 	.word	0x080039d1
 8003910:	080039d1 	.word	0x080039d1
 8003914:	080039d1 	.word	0x080039d1
 8003918:	080039d1 	.word	0x080039d1
 800391c:	080039d1 	.word	0x080039d1
 8003920:	080039d1 	.word	0x080039d1
 8003924:	080039a9 	.word	0x080039a9
 8003928:	080039d1 	.word	0x080039d1
 800392c:	080039d1 	.word	0x080039d1
 8003930:	080039d1 	.word	0x080039d1
 8003934:	080039d1 	.word	0x080039d1
 8003938:	080039d1 	.word	0x080039d1
 800393c:	080039d1 	.word	0x080039d1
 8003940:	080039d1 	.word	0x080039d1
 8003944:	080039bd 	.word	0x080039bd
 8003948:	080039d1 	.word	0x080039d1
 800394c:	080039d1 	.word	0x080039d1
 8003950:	080039d1 	.word	0x080039d1
 8003954:	080039d1 	.word	0x080039d1
 8003958:	080039d1 	.word	0x080039d1
 800395c:	080039d1 	.word	0x080039d1
 8003960:	080039d1 	.word	0x080039d1
 8003964:	080039d9 	.word	0x080039d9
 8003968:	080039d1 	.word	0x080039d1
 800396c:	080039d1 	.word	0x080039d1
 8003970:	080039d1 	.word	0x080039d1
 8003974:	080039d1 	.word	0x080039d1
 8003978:	080039d1 	.word	0x080039d1
 800397c:	080039d1 	.word	0x080039d1
 8003980:	080039d1 	.word	0x080039d1
 8003984:	080039d9 	.word	0x080039d9
 8003988:	080039d1 	.word	0x080039d1
 800398c:	080039d1 	.word	0x080039d1
 8003990:	080039d1 	.word	0x080039d1
 8003994:	080039d1 	.word	0x080039d1
 8003998:	080039d1 	.word	0x080039d1
 800399c:	080039d1 	.word	0x080039d1
 80039a0:	080039d1 	.word	0x080039d1
 80039a4:	080039d9 	.word	0x080039d9
        /* USART2 clock source config set later after clock selection check */
        break;

      case RCC_USART2CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART2*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80039a8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80039ac:	3308      	adds	r3, #8
 80039ae:	4618      	mov	r0, r3
 80039b0:	f001 feae 	bl	8005710 <RCCEx_PLL2_Config>
 80039b4:	4603      	mov	r3, r0
 80039b6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART2 clock source config set later after clock selection check */
        break;
 80039ba:	e00e      	b.n	80039da <HAL_RCCEx_PeriphCLKConfig+0x1de>

#if defined(RCC_USART2CLKSOURCE_PLL3Q)
      case RCC_USART2CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART2*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80039bc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80039c0:	3330      	adds	r3, #48	@ 0x30
 80039c2:	4618      	mov	r0, r3
 80039c4:	f001 ff3c 	bl	8005840 <RCCEx_PLL3_Config>
 80039c8:	4603      	mov	r3, r0
 80039ca:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART2 clock source config set later after clock selection check */
        break;
 80039ce:	e004      	b.n	80039da <HAL_RCCEx_PeriphCLKConfig+0x1de>
      case RCC_USART2CLKSOURCE_LSE:      /* LSE clock is used as source of USART2 clock*/
        /* USART2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80039d0:	2301      	movs	r3, #1
 80039d2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80039d6:	e000      	b.n	80039da <HAL_RCCEx_PeriphCLKConfig+0x1de>
        break;
 80039d8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80039da:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d10c      	bne.n	80039fc <HAL_RCCEx_PeriphCLKConfig+0x200>
    {
      /* Set the source of USART2 clock*/
      __HAL_RCC_USART2_CONFIG(pPeriphClkInit->Usart2ClockSelection);
 80039e2:	4b5f      	ldr	r3, [pc, #380]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80039e4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 80039e8:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 80039ec:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80039f0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80039f2:	4a5b      	ldr	r2, [pc, #364]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 80039f4:	430b      	orrs	r3, r1
 80039f6:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 80039fa:	e003      	b.n	8003a04 <HAL_RCCEx_PeriphCLKConfig+0x208>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80039fc:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003a00:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- USART3 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8003a04:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a0c:	f002 0304 	and.w	r3, r2, #4
 8003a10:	f8c7 3140 	str.w	r3, [r7, #320]	@ 0x140
 8003a14:	2300      	movs	r3, #0
 8003a16:	f8c7 3144 	str.w	r3, [r7, #324]	@ 0x144
 8003a1a:	e9d7 1250 	ldrd	r1, r2, [r7, #320]	@ 0x140
 8003a1e:	460b      	mov	r3, r1
 8003a20:	4313      	orrs	r3, r2
 8003a22:	d04e      	beq.n	8003ac2 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(pPeriphClkInit->Usart3ClockSelection));

    switch (pPeriphClkInit->Usart3ClockSelection)
 8003a24:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a28:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003a2a:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8003a2e:	d02c      	beq.n	8003a8a <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8003a30:	f5b3 7fa0 	cmp.w	r3, #320	@ 0x140
 8003a34:	d825      	bhi.n	8003a82 <HAL_RCCEx_PeriphCLKConfig+0x286>
 8003a36:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003a3a:	d028      	beq.n	8003a8e <HAL_RCCEx_PeriphCLKConfig+0x292>
 8003a3c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8003a40:	d81f      	bhi.n	8003a82 <HAL_RCCEx_PeriphCLKConfig+0x286>
 8003a42:	2bc0      	cmp	r3, #192	@ 0xc0
 8003a44:	d025      	beq.n	8003a92 <HAL_RCCEx_PeriphCLKConfig+0x296>
 8003a46:	2bc0      	cmp	r3, #192	@ 0xc0
 8003a48:	d81b      	bhi.n	8003a82 <HAL_RCCEx_PeriphCLKConfig+0x286>
 8003a4a:	2b80      	cmp	r3, #128	@ 0x80
 8003a4c:	d00f      	beq.n	8003a6e <HAL_RCCEx_PeriphCLKConfig+0x272>
 8003a4e:	2b80      	cmp	r3, #128	@ 0x80
 8003a50:	d817      	bhi.n	8003a82 <HAL_RCCEx_PeriphCLKConfig+0x286>
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d01f      	beq.n	8003a96 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8003a56:	2b40      	cmp	r3, #64	@ 0x40
 8003a58:	d113      	bne.n	8003a82 <HAL_RCCEx_PeriphCLKConfig+0x286>
        /* USART3 clock source config set later after clock selection check */
        break;

      case RCC_USART3CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART3*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003a5a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a5e:	3308      	adds	r3, #8
 8003a60:	4618      	mov	r0, r3
 8003a62:	f001 fe55 	bl	8005710 <RCCEx_PLL2_Config>
 8003a66:	4603      	mov	r3, r0
 8003a68:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART3 clock source config set later after clock selection check */
        break;
 8003a6c:	e014      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>

#if defined(RCC_USART3CLKSOURCE_PLL3Q)
      case RCC_USART3CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART3*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003a6e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003a72:	3330      	adds	r3, #48	@ 0x30
 8003a74:	4618      	mov	r0, r3
 8003a76:	f001 fee3 	bl	8005840 <RCCEx_PLL3_Config>
 8003a7a:	4603      	mov	r3, r0
 8003a7c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART3 clock source config set later after clock selection check */
        break;
 8003a80:	e00a      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
      case RCC_USART3CLKSOURCE_LSE:      /* LSE clock is used as source of USART3 clock*/
        /* USART3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003a82:	2301      	movs	r3, #1
 8003a84:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003a88:	e006      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a8a:	bf00      	nop
 8003a8c:	e004      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a8e:	bf00      	nop
 8003a90:	e002      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a92:	bf00      	nop
 8003a94:	e000      	b.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        break;
 8003a96:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003a98:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003a9c:	2b00      	cmp	r3, #0
 8003a9e:	d10c      	bne.n	8003aba <HAL_RCCEx_PeriphCLKConfig+0x2be>
    {
      /* Set the source of USART3 clock*/
      __HAL_RCC_USART3_CONFIG(pPeriphClkInit->Usart3ClockSelection);
 8003aa0:	4b2f      	ldr	r3, [pc, #188]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003aa2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003aa6:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8003aaa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003aae:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8003ab0:	4a2b      	ldr	r2, [pc, #172]	@ (8003b60 <HAL_RCCEx_PeriphCLKConfig+0x364>)
 8003ab2:	430b      	orrs	r3, r1
 8003ab4:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003ab8:	e003      	b.n	8003ac2 <HAL_RCCEx_PeriphCLKConfig+0x2c6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003aba:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003abe:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(UART4)
  /*-------------------------- UART4 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8003ac2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ac6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003aca:	f002 0308 	and.w	r3, r2, #8
 8003ace:	f8c7 3138 	str.w	r3, [r7, #312]	@ 0x138
 8003ad2:	2300      	movs	r3, #0
 8003ad4:	f8c7 313c 	str.w	r3, [r7, #316]	@ 0x13c
 8003ad8:	e9d7 124e 	ldrd	r1, r2, [r7, #312]	@ 0x138
 8003adc:	460b      	mov	r3, r1
 8003ade:	4313      	orrs	r3, r2
 8003ae0:	d056      	beq.n	8003b90 <HAL_RCCEx_PeriphCLKConfig+0x394>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(pPeriphClkInit->Uart4ClockSelection));

    switch (pPeriphClkInit->Uart4ClockSelection)
 8003ae2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ae6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003ae8:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 8003aec:	d031      	beq.n	8003b52 <HAL_RCCEx_PeriphCLKConfig+0x356>
 8003aee:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 8003af2:	d82a      	bhi.n	8003b4a <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003af4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003af8:	d02d      	beq.n	8003b56 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8003afa:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8003afe:	d824      	bhi.n	8003b4a <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003b00:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8003b04:	d029      	beq.n	8003b5a <HAL_RCCEx_PeriphCLKConfig+0x35e>
 8003b06:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8003b0a:	d81e      	bhi.n	8003b4a <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003b0c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003b10:	d011      	beq.n	8003b36 <HAL_RCCEx_PeriphCLKConfig+0x33a>
 8003b12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003b16:	d818      	bhi.n	8003b4a <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	d023      	beq.n	8003b64 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8003b1c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003b20:	d113      	bne.n	8003b4a <HAL_RCCEx_PeriphCLKConfig+0x34e>
        /* UART4 clock source config set later after clock selection check */
        break;

      case RCC_UART4CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART4*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003b22:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b26:	3308      	adds	r3, #8
 8003b28:	4618      	mov	r0, r3
 8003b2a:	f001 fdf1 	bl	8005710 <RCCEx_PLL2_Config>
 8003b2e:	4603      	mov	r3, r0
 8003b30:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART4 clock source config set later after clock selection check */
        break;
 8003b34:	e017      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>

      case RCC_UART4CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART4*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003b36:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b3a:	3330      	adds	r3, #48	@ 0x30
 8003b3c:	4618      	mov	r0, r3
 8003b3e:	f001 fe7f 	bl	8005840 <RCCEx_PLL3_Config>
 8003b42:	4603      	mov	r3, r0
 8003b44:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART4 clock source config set later after clock selection check */
        break;
 8003b48:	e00d      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>
      case RCC_UART4CLKSOURCE_LSE:      /* LSE clock is used as source of UART4 clock*/
        /* UART4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003b4a:	2301      	movs	r3, #1
 8003b4c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003b50:	e009      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003b52:	bf00      	nop
 8003b54:	e007      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003b56:	bf00      	nop
 8003b58:	e005      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>
        break;
 8003b5a:	bf00      	nop
 8003b5c:	e003      	b.n	8003b66 <HAL_RCCEx_PeriphCLKConfig+0x36a>
 8003b5e:	bf00      	nop
 8003b60:	44020c00 	.word	0x44020c00
        break;
 8003b64:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003b66:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003b6a:	2b00      	cmp	r3, #0
 8003b6c:	d10c      	bne.n	8003b88 <HAL_RCCEx_PeriphCLKConfig+0x38c>
    {
      /* Set the source of UART4 clock*/
      __HAL_RCC_UART4_CONFIG(pPeriphClkInit->Uart4ClockSelection);
 8003b6e:	4bbb      	ldr	r3, [pc, #748]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003b70:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003b74:	f423 6160 	bic.w	r1, r3, #3584	@ 0xe00
 8003b78:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b7c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8003b7e:	4ab7      	ldr	r2, [pc, #732]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003b80:	430b      	orrs	r3, r1
 8003b82:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003b86:	e003      	b.n	8003b90 <HAL_RCCEx_PeriphCLKConfig+0x394>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003b88:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003b8c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART4 */

#if defined(UART5)
  /*-------------------------- UART5 clock source configuration --------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8003b90:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003b94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b98:	f002 0310 	and.w	r3, r2, #16
 8003b9c:	f8c7 3130 	str.w	r3, [r7, #304]	@ 0x130
 8003ba0:	2300      	movs	r3, #0
 8003ba2:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134
 8003ba6:	e9d7 124c 	ldrd	r1, r2, [r7, #304]	@ 0x130
 8003baa:	460b      	mov	r3, r1
 8003bac:	4313      	orrs	r3, r2
 8003bae:	d053      	beq.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x45c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(pPeriphClkInit->Uart5ClockSelection));

    switch (pPeriphClkInit->Uart5ClockSelection)
 8003bb0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003bb4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003bb6:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8003bba:	d031      	beq.n	8003c20 <HAL_RCCEx_PeriphCLKConfig+0x424>
 8003bbc:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 8003bc0:	d82a      	bhi.n	8003c18 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003bc2:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003bc6:	d02d      	beq.n	8003c24 <HAL_RCCEx_PeriphCLKConfig+0x428>
 8003bc8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8003bcc:	d824      	bhi.n	8003c18 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003bce:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8003bd2:	d029      	beq.n	8003c28 <HAL_RCCEx_PeriphCLKConfig+0x42c>
 8003bd4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8003bd8:	d81e      	bhi.n	8003c18 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003bda:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003bde:	d011      	beq.n	8003c04 <HAL_RCCEx_PeriphCLKConfig+0x408>
 8003be0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003be4:	d818      	bhi.n	8003c18 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d020      	beq.n	8003c2c <HAL_RCCEx_PeriphCLKConfig+0x430>
 8003bea:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003bee:	d113      	bne.n	8003c18 <HAL_RCCEx_PeriphCLKConfig+0x41c>
        /* UART5 clock source config set later after clock selection check */
        break;

      case RCC_UART5CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART5*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003bf0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003bf4:	3308      	adds	r3, #8
 8003bf6:	4618      	mov	r0, r3
 8003bf8:	f001 fd8a 	bl	8005710 <RCCEx_PLL2_Config>
 8003bfc:	4603      	mov	r3, r0
 8003bfe:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART5 clock source config set later after clock selection check */
        break;
 8003c02:	e014      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>

      case RCC_UART5CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART5*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003c04:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c08:	3330      	adds	r3, #48	@ 0x30
 8003c0a:	4618      	mov	r0, r3
 8003c0c:	f001 fe18 	bl	8005840 <RCCEx_PLL3_Config>
 8003c10:	4603      	mov	r3, r0
 8003c12:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART5 clock source config set later after clock selection check */
        break;
 8003c16:	e00a      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>
      case RCC_UART5CLKSOURCE_LSE:      /* LSE clock is used as source of UART5 clock*/
        /* UART5 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003c18:	2301      	movs	r3, #1
 8003c1a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003c1e:	e006      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003c20:	bf00      	nop
 8003c22:	e004      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003c24:	bf00      	nop
 8003c26:	e002      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003c28:	bf00      	nop
 8003c2a:	e000      	b.n	8003c2e <HAL_RCCEx_PeriphCLKConfig+0x432>
        break;
 8003c2c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003c2e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003c32:	2b00      	cmp	r3, #0
 8003c34:	d10c      	bne.n	8003c50 <HAL_RCCEx_PeriphCLKConfig+0x454>
    {
      /* Set the source of UART5 clock*/
      __HAL_RCC_UART5_CONFIG(pPeriphClkInit->Uart5ClockSelection);
 8003c36:	4b89      	ldr	r3, [pc, #548]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003c38:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003c3c:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8003c40:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c44:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8003c46:	4a85      	ldr	r2, [pc, #532]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003c48:	430b      	orrs	r3, r1
 8003c4a:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003c4e:	e003      	b.n	8003c58 <HAL_RCCEx_PeriphCLKConfig+0x45c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003c50:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003c54:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART5 */

#if defined(USART6)
  /*-------------------------- USART6 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8003c58:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c60:	f002 0320 	and.w	r3, r2, #32
 8003c64:	f8c7 3128 	str.w	r3, [r7, #296]	@ 0x128
 8003c68:	2300      	movs	r3, #0
 8003c6a:	f8c7 312c 	str.w	r3, [r7, #300]	@ 0x12c
 8003c6e:	e9d7 124a 	ldrd	r1, r2, [r7, #296]	@ 0x128
 8003c72:	460b      	mov	r3, r1
 8003c74:	4313      	orrs	r3, r2
 8003c76:	d053      	beq.n	8003d20 <HAL_RCCEx_PeriphCLKConfig+0x524>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(pPeriphClkInit->Usart6ClockSelection));

    switch (pPeriphClkInit->Usart6ClockSelection)
 8003c78:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003c7c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003c7e:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8003c82:	d031      	beq.n	8003ce8 <HAL_RCCEx_PeriphCLKConfig+0x4ec>
 8003c84:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8003c88:	d82a      	bhi.n	8003ce0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c8a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8003c8e:	d02d      	beq.n	8003cec <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8003c90:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8003c94:	d824      	bhi.n	8003ce0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003c96:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8003c9a:	d029      	beq.n	8003cf0 <HAL_RCCEx_PeriphCLKConfig+0x4f4>
 8003c9c:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8003ca0:	d81e      	bhi.n	8003ce0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003ca2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003ca6:	d011      	beq.n	8003ccc <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8003ca8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003cac:	d818      	bhi.n	8003ce0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d020      	beq.n	8003cf4 <HAL_RCCEx_PeriphCLKConfig+0x4f8>
 8003cb2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003cb6:	d113      	bne.n	8003ce0 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
        /* USART6 clock source config set later after clock selection check */
        break;

      case RCC_USART6CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART6*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003cb8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003cbc:	3308      	adds	r3, #8
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	f001 fd26 	bl	8005710 <RCCEx_PLL2_Config>
 8003cc4:	4603      	mov	r3, r0
 8003cc6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART6 clock source config set later after clock selection check */
        break;
 8003cca:	e014      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>

      case RCC_USART6CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART6*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003ccc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003cd0:	3330      	adds	r3, #48	@ 0x30
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	f001 fdb4 	bl	8005840 <RCCEx_PLL3_Config>
 8003cd8:	4603      	mov	r3, r0
 8003cda:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART6 clock source config set later after clock selection check */
        break;
 8003cde:	e00a      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      case RCC_USART6CLKSOURCE_LSE:      /* LSE clock is used as source of USART6 clock*/
        /* USART6 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003ce0:	2301      	movs	r3, #1
 8003ce2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003ce6:	e006      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003ce8:	bf00      	nop
 8003cea:	e004      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003cec:	bf00      	nop
 8003cee:	e002      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003cf0:	bf00      	nop
 8003cf2:	e000      	b.n	8003cf6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
        break;
 8003cf4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003cf6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d10c      	bne.n	8003d18 <HAL_RCCEx_PeriphCLKConfig+0x51c>
    {
      /* Set the source of USART6 clock*/
      __HAL_RCC_USART6_CONFIG(pPeriphClkInit->Usart6ClockSelection);
 8003cfe:	4b57      	ldr	r3, [pc, #348]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003d00:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003d04:	f423 3160 	bic.w	r1, r3, #229376	@ 0x38000
 8003d08:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003d0e:	4a53      	ldr	r2, [pc, #332]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003d10:	430b      	orrs	r3, r1
 8003d12:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003d16:	e003      	b.n	8003d20 <HAL_RCCEx_PeriphCLKConfig+0x524>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003d18:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003d1c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USART6 */

#if defined(UART7)
  /*-------------------------- UART7 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8003d20:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d28:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8003d2c:	f8c7 3120 	str.w	r3, [r7, #288]	@ 0x120
 8003d30:	2300      	movs	r3, #0
 8003d32:	f8c7 3124 	str.w	r3, [r7, #292]	@ 0x124
 8003d36:	e9d7 1248 	ldrd	r1, r2, [r7, #288]	@ 0x120
 8003d3a:	460b      	mov	r3, r1
 8003d3c:	4313      	orrs	r3, r2
 8003d3e:	d053      	beq.n	8003de8 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(pPeriphClkInit->Uart7ClockSelection));

    switch (pPeriphClkInit->Uart7ClockSelection)
 8003d40:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d44:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003d46:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8003d4a:	d031      	beq.n	8003db0 <HAL_RCCEx_PeriphCLKConfig+0x5b4>
 8003d4c:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8003d50:	d82a      	bhi.n	8003da8 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d52:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8003d56:	d02d      	beq.n	8003db4 <HAL_RCCEx_PeriphCLKConfig+0x5b8>
 8003d58:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8003d5c:	d824      	bhi.n	8003da8 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d5e:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003d62:	d029      	beq.n	8003db8 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 8003d64:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8003d68:	d81e      	bhi.n	8003da8 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d6a:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8003d6e:	d011      	beq.n	8003d94 <HAL_RCCEx_PeriphCLKConfig+0x598>
 8003d70:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8003d74:	d818      	bhi.n	8003da8 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
 8003d76:	2b00      	cmp	r3, #0
 8003d78:	d020      	beq.n	8003dbc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8003d7a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8003d7e:	d113      	bne.n	8003da8 <HAL_RCCEx_PeriphCLKConfig+0x5ac>
        /* UART7 clock source config set later after clock selection check */
        break;

      case RCC_UART7CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART7*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003d80:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d84:	3308      	adds	r3, #8
 8003d86:	4618      	mov	r0, r3
 8003d88:	f001 fcc2 	bl	8005710 <RCCEx_PLL2_Config>
 8003d8c:	4603      	mov	r3, r0
 8003d8e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART7 clock source config set later after clock selection check */
        break;
 8003d92:	e014      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>

      case RCC_UART7CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART7*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003d94:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003d98:	3330      	adds	r3, #48	@ 0x30
 8003d9a:	4618      	mov	r0, r3
 8003d9c:	f001 fd50 	bl	8005840 <RCCEx_PLL3_Config>
 8003da0:	4603      	mov	r3, r0
 8003da2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART7 clock source config set later after clock selection check */
        break;
 8003da6:	e00a      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>
      case RCC_UART7CLKSOURCE_LSE:      /* LSE clock is used as source of UART7 clock*/
        /* UART7 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003da8:	2301      	movs	r3, #1
 8003daa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003dae:	e006      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003db0:	bf00      	nop
 8003db2:	e004      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003db4:	bf00      	nop
 8003db6:	e002      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003db8:	bf00      	nop
 8003dba:	e000      	b.n	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5c2>
        break;
 8003dbc:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003dbe:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003dc2:	2b00      	cmp	r3, #0
 8003dc4:	d10c      	bne.n	8003de0 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
    {
      /* Set the source of UART7 clock*/
      __HAL_RCC_UART7_CONFIG(pPeriphClkInit->Uart7ClockSelection);
 8003dc6:	4b25      	ldr	r3, [pc, #148]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003dc8:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003dcc:	f423 11e0 	bic.w	r1, r3, #1835008	@ 0x1c0000
 8003dd0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003dd4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003dd6:	4a21      	ldr	r2, [pc, #132]	@ (8003e5c <HAL_RCCEx_PeriphCLKConfig+0x660>)
 8003dd8:	430b      	orrs	r3, r1
 8003dda:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003dde:	e003      	b.n	8003de8 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003de0:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003de4:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART7 */

#if defined(UART8)
  /*-------------------------- UART8 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8003de8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003dec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003df0:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8003df4:	f8c7 3118 	str.w	r3, [r7, #280]	@ 0x118
 8003df8:	2300      	movs	r3, #0
 8003dfa:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 8003dfe:	e9d7 1246 	ldrd	r1, r2, [r7, #280]	@ 0x118
 8003e02:	460b      	mov	r3, r1
 8003e04:	4313      	orrs	r3, r2
 8003e06:	d055      	beq.n	8003eb4 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(pPeriphClkInit->Uart8ClockSelection));

    switch (pPeriphClkInit->Uart8ClockSelection)
 8003e08:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e0c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003e0e:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8003e12:	d033      	beq.n	8003e7c <HAL_RCCEx_PeriphCLKConfig+0x680>
 8003e14:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8003e18:	d82c      	bhi.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003e1a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003e1e:	d02f      	beq.n	8003e80 <HAL_RCCEx_PeriphCLKConfig+0x684>
 8003e20:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8003e24:	d826      	bhi.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003e26:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8003e2a:	d02b      	beq.n	8003e84 <HAL_RCCEx_PeriphCLKConfig+0x688>
 8003e2c:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8003e30:	d820      	bhi.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003e32:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003e36:	d013      	beq.n	8003e60 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8003e38:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8003e3c:	d81a      	bhi.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0x678>
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d022      	beq.n	8003e88 <HAL_RCCEx_PeriphCLKConfig+0x68c>
 8003e42:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8003e46:	d115      	bne.n	8003e74 <HAL_RCCEx_PeriphCLKConfig+0x678>
        /* UART8 clock source config set later after clock selection check */
        break;

      case RCC_UART8CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART8*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003e48:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e4c:	3308      	adds	r3, #8
 8003e4e:	4618      	mov	r0, r3
 8003e50:	f001 fc5e 	bl	8005710 <RCCEx_PLL2_Config>
 8003e54:	4603      	mov	r3, r0
 8003e56:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART8 clock source config set later after clock selection check */
        break;
 8003e5a:	e016      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
 8003e5c:	44020c00 	.word	0x44020c00

      case RCC_UART8CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART8*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003e60:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003e64:	3330      	adds	r3, #48	@ 0x30
 8003e66:	4618      	mov	r0, r3
 8003e68:	f001 fcea 	bl	8005840 <RCCEx_PLL3_Config>
 8003e6c:	4603      	mov	r3, r0
 8003e6e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART8 clock source config set later after clock selection check */
        break;
 8003e72:	e00a      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
      case RCC_UART8CLKSOURCE_LSE:      /* LSE clock is used as source of UART8 clock*/
        /* UART8 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003e74:	2301      	movs	r3, #1
 8003e76:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003e7a:	e006      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e7c:	bf00      	nop
 8003e7e:	e004      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e80:	bf00      	nop
 8003e82:	e002      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e84:	bf00      	nop
 8003e86:	e000      	b.n	8003e8a <HAL_RCCEx_PeriphCLKConfig+0x68e>
        break;
 8003e88:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003e8a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d10c      	bne.n	8003eac <HAL_RCCEx_PeriphCLKConfig+0x6b0>
    {
      /* Set the source of UART8 clock*/
      __HAL_RCC_UART8_CONFIG(pPeriphClkInit->Uart8ClockSelection);
 8003e92:	4bbb      	ldr	r3, [pc, #748]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003e94:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003e98:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8003e9c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ea0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003ea2:	4ab7      	ldr	r2, [pc, #732]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003ea4:	430b      	orrs	r3, r1
 8003ea6:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003eaa:	e003      	b.n	8003eb4 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003eac:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003eb0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART9 */

#if defined(UART9)
  /*-------------------------- UART9 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART9) == RCC_PERIPHCLK_UART9)
 8003eb4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003eb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ebc:	f402 7380 	and.w	r3, r2, #256	@ 0x100
 8003ec0:	f8c7 3110 	str.w	r3, [r7, #272]	@ 0x110
 8003ec4:	2300      	movs	r3, #0
 8003ec6:	f8c7 3114 	str.w	r3, [r7, #276]	@ 0x114
 8003eca:	e9d7 1244 	ldrd	r1, r2, [r7, #272]	@ 0x110
 8003ece:	460b      	mov	r3, r1
 8003ed0:	4313      	orrs	r3, r2
 8003ed2:	d053      	beq.n	8003f7c <HAL_RCCEx_PeriphCLKConfig+0x780>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART9CLKSOURCE(pPeriphClkInit->Uart9ClockSelection));

    switch (pPeriphClkInit->Uart9ClockSelection)
 8003ed4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ed8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003eda:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8003ede:	d031      	beq.n	8003f44 <HAL_RCCEx_PeriphCLKConfig+0x748>
 8003ee0:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8003ee4:	d82a      	bhi.n	8003f3c <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003ee6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003eea:	d02d      	beq.n	8003f48 <HAL_RCCEx_PeriphCLKConfig+0x74c>
 8003eec:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8003ef0:	d824      	bhi.n	8003f3c <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003ef2:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003ef6:	d029      	beq.n	8003f4c <HAL_RCCEx_PeriphCLKConfig+0x750>
 8003ef8:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8003efc:	d81e      	bhi.n	8003f3c <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003efe:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003f02:	d011      	beq.n	8003f28 <HAL_RCCEx_PeriphCLKConfig+0x72c>
 8003f04:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8003f08:	d818      	bhi.n	8003f3c <HAL_RCCEx_PeriphCLKConfig+0x740>
 8003f0a:	2b00      	cmp	r3, #0
 8003f0c:	d020      	beq.n	8003f50 <HAL_RCCEx_PeriphCLKConfig+0x754>
 8003f0e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003f12:	d113      	bne.n	8003f3c <HAL_RCCEx_PeriphCLKConfig+0x740>
        /* UART9 clock source config set later after clock selection check */
        break;

      case RCC_UART9CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART9*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003f14:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f18:	3308      	adds	r3, #8
 8003f1a:	4618      	mov	r0, r3
 8003f1c:	f001 fbf8 	bl	8005710 <RCCEx_PLL2_Config>
 8003f20:	4603      	mov	r3, r0
 8003f22:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART9 clock source config set later after clock selection check */
        break;
 8003f26:	e014      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>

      case RCC_UART9CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART9*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003f28:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f2c:	3330      	adds	r3, #48	@ 0x30
 8003f2e:	4618      	mov	r0, r3
 8003f30:	f001 fc86 	bl	8005840 <RCCEx_PLL3_Config>
 8003f34:	4603      	mov	r3, r0
 8003f36:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART9 clock source config set later after clock selection check */
        break;
 8003f3a:	e00a      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>
      case RCC_UART9CLKSOURCE_LSE:      /* LSE clock is used as source of UART9 clock*/
        /* UART9 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8003f3c:	2301      	movs	r3, #1
 8003f3e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8003f42:	e006      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003f44:	bf00      	nop
 8003f46:	e004      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003f48:	bf00      	nop
 8003f4a:	e002      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003f4c:	bf00      	nop
 8003f4e:	e000      	b.n	8003f52 <HAL_RCCEx_PeriphCLKConfig+0x756>
        break;
 8003f50:	bf00      	nop
    }

    if (ret == HAL_OK)
 8003f52:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d10c      	bne.n	8003f74 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      /* Set the source of UART9 clock*/
      __HAL_RCC_UART9_CONFIG(pPeriphClkInit->Uart9ClockSelection);
 8003f5a:	4b89      	ldr	r3, [pc, #548]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003f5c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8003f60:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8003f64:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f68:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003f6a:	4a85      	ldr	r2, [pc, #532]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8003f6c:	430b      	orrs	r3, r1
 8003f6e:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 8003f72:	e003      	b.n	8003f7c <HAL_RCCEx_PeriphCLKConfig+0x780>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8003f74:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8003f78:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* UART9 */

#if defined(USART10)
  /*-------------------------- USART10 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART10) == RCC_PERIPHCLK_USART10)
 8003f7c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003f80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f84:	f402 7300 	and.w	r3, r2, #512	@ 0x200
 8003f88:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8003f8c:	2300      	movs	r3, #0
 8003f8e:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8003f92:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	@ 0x108
 8003f96:	460b      	mov	r3, r1
 8003f98:	4313      	orrs	r3, r2
 8003f9a:	d055      	beq.n	8004048 <HAL_RCCEx_PeriphCLKConfig+0x84c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART10CLKSOURCE(pPeriphClkInit->Usart10ClockSelection));

    switch (pPeriphClkInit->Usart10ClockSelection)
 8003f9c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003fa0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8003fa4:	f1b3 5f20 	cmp.w	r3, #671088640	@ 0x28000000
 8003fa8:	d031      	beq.n	800400e <HAL_RCCEx_PeriphCLKConfig+0x812>
 8003faa:	f1b3 5f20 	cmp.w	r3, #671088640	@ 0x28000000
 8003fae:	d82a      	bhi.n	8004006 <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003fb0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003fb4:	d02d      	beq.n	8004012 <HAL_RCCEx_PeriphCLKConfig+0x816>
 8003fb6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003fba:	d824      	bhi.n	8004006 <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003fbc:	f1b3 5fc0 	cmp.w	r3, #402653184	@ 0x18000000
 8003fc0:	d029      	beq.n	8004016 <HAL_RCCEx_PeriphCLKConfig+0x81a>
 8003fc2:	f1b3 5fc0 	cmp.w	r3, #402653184	@ 0x18000000
 8003fc6:	d81e      	bhi.n	8004006 <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003fc8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003fcc:	d011      	beq.n	8003ff2 <HAL_RCCEx_PeriphCLKConfig+0x7f6>
 8003fce:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003fd2:	d818      	bhi.n	8004006 <HAL_RCCEx_PeriphCLKConfig+0x80a>
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	d020      	beq.n	800401a <HAL_RCCEx_PeriphCLKConfig+0x81e>
 8003fd8:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8003fdc:	d113      	bne.n	8004006 <HAL_RCCEx_PeriphCLKConfig+0x80a>
        /* USART10 clock source config set later after clock selection check */
        break;

      case RCC_USART10CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART10*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8003fde:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003fe2:	3308      	adds	r3, #8
 8003fe4:	4618      	mov	r0, r3
 8003fe6:	f001 fb93 	bl	8005710 <RCCEx_PLL2_Config>
 8003fea:	4603      	mov	r3, r0
 8003fec:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART10 clock source config set later after clock selection check */
        break;
 8003ff0:	e014      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>

      case RCC_USART10CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART10*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8003ff2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8003ff6:	3330      	adds	r3, #48	@ 0x30
 8003ff8:	4618      	mov	r0, r3
 8003ffa:	f001 fc21 	bl	8005840 <RCCEx_PLL3_Config>
 8003ffe:	4603      	mov	r3, r0
 8004000:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART10 clock source config set later after clock selection check */
        break;
 8004004:	e00a      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>
      case RCC_USART10CLKSOURCE_LSE:      /* LSE clock is used as source of USART10 clock*/
        /* USART10 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004006:	2301      	movs	r3, #1
 8004008:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800400c:	e006      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 800400e:	bf00      	nop
 8004010:	e004      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8004012:	bf00      	nop
 8004014:	e002      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 8004016:	bf00      	nop
 8004018:	e000      	b.n	800401c <HAL_RCCEx_PeriphCLKConfig+0x820>
        break;
 800401a:	bf00      	nop
    }

    if (ret == HAL_OK)
 800401c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004020:	2b00      	cmp	r3, #0
 8004022:	d10d      	bne.n	8004040 <HAL_RCCEx_PeriphCLKConfig+0x844>
    {
      /* Set the source of USART10 clock*/
      __HAL_RCC_USART10_CONFIG(pPeriphClkInit->Usart10ClockSelection);
 8004024:	4b56      	ldr	r3, [pc, #344]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8004026:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800402a:	f023 5160 	bic.w	r1, r3, #939524096	@ 0x38000000
 800402e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004032:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004036:	4a52      	ldr	r2, [pc, #328]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 8004038:	430b      	orrs	r3, r1
 800403a:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 800403e:	e003      	b.n	8004048 <HAL_RCCEx_PeriphCLKConfig+0x84c>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004040:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004044:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USART10 */

#if defined(USART11)
  /*-------------------------- USART11 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART11) == RCC_PERIPHCLK_USART11)
 8004048:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800404c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004050:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 8004054:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8004058:	2300      	movs	r3, #0
 800405a:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 800405e:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 8004062:	460b      	mov	r3, r1
 8004064:	4313      	orrs	r3, r2
 8004066:	d044      	beq.n	80040f2 <HAL_RCCEx_PeriphCLKConfig+0x8f6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART11CLKSOURCE(pPeriphClkInit->Usart11ClockSelection));

    switch (pPeriphClkInit->Usart11ClockSelection)
 8004068:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800406c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8004070:	2b05      	cmp	r3, #5
 8004072:	d823      	bhi.n	80040bc <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8004074:	a201      	add	r2, pc, #4	@ (adr r2, 800407c <HAL_RCCEx_PeriphCLKConfig+0x880>)
 8004076:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800407a:	bf00      	nop
 800407c:	080040c5 	.word	0x080040c5
 8004080:	08004095 	.word	0x08004095
 8004084:	080040a9 	.word	0x080040a9
 8004088:	080040c5 	.word	0x080040c5
 800408c:	080040c5 	.word	0x080040c5
 8004090:	080040c5 	.word	0x080040c5
        /* USART11 clock source config set later after clock selection check */
        break;

      case RCC_USART11CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for USART11*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004094:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004098:	3308      	adds	r3, #8
 800409a:	4618      	mov	r0, r3
 800409c:	f001 fb38 	bl	8005710 <RCCEx_PLL2_Config>
 80040a0:	4603      	mov	r3, r0
 80040a2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART11 clock source config set later after clock selection check */
        break;
 80040a6:	e00e      	b.n	80040c6 <HAL_RCCEx_PeriphCLKConfig+0x8ca>

      case RCC_USART11CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for USART11*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80040a8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040ac:	3330      	adds	r3, #48	@ 0x30
 80040ae:	4618      	mov	r0, r3
 80040b0:	f001 fbc6 	bl	8005840 <RCCEx_PLL3_Config>
 80040b4:	4603      	mov	r3, r0
 80040b6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* USART11 clock source config set later after clock selection check */
        break;
 80040ba:	e004      	b.n	80040c6 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
      case RCC_USART11CLKSOURCE_LSE:      /* LSE clock is used as source of USART11 clock*/
        /* USART11 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80040bc:	2301      	movs	r3, #1
 80040be:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80040c2:	e000      	b.n	80040c6 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
        break;
 80040c4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80040c6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d10d      	bne.n	80040ea <HAL_RCCEx_PeriphCLKConfig+0x8ee>
    {
      /* Set the source of USART11 clock*/
      __HAL_RCC_USART11_CONFIG(pPeriphClkInit->Usart11ClockSelection);
 80040ce:	4b2c      	ldr	r3, [pc, #176]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 80040d0:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80040d4:	f023 0107 	bic.w	r1, r3, #7
 80040d8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040dc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80040e0:	4a27      	ldr	r2, [pc, #156]	@ (8004180 <HAL_RCCEx_PeriphCLKConfig+0x984>)
 80040e2:	430b      	orrs	r3, r1
 80040e4:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80040e8:	e003      	b.n	80040f2 <HAL_RCCEx_PeriphCLKConfig+0x8f6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80040ea:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80040ee:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /*USART11*/

#if defined(UART12)
  /*-------------------------- UART12 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART12) == RCC_PERIPHCLK_UART12)
 80040f2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80040f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80040fa:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 80040fe:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8004102:	2300      	movs	r3, #0
 8004104:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8004108:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 800410c:	460b      	mov	r3, r1
 800410e:	4313      	orrs	r3, r2
 8004110:	d04f      	beq.n	80041b2 <HAL_RCCEx_PeriphCLKConfig+0x9b6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART12CLKSOURCE(pPeriphClkInit->Uart12ClockSelection));

    switch (pPeriphClkInit->Uart12ClockSelection)
 8004112:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004116:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800411a:	2b50      	cmp	r3, #80	@ 0x50
 800411c:	d029      	beq.n	8004172 <HAL_RCCEx_PeriphCLKConfig+0x976>
 800411e:	2b50      	cmp	r3, #80	@ 0x50
 8004120:	d823      	bhi.n	800416a <HAL_RCCEx_PeriphCLKConfig+0x96e>
 8004122:	2b40      	cmp	r3, #64	@ 0x40
 8004124:	d027      	beq.n	8004176 <HAL_RCCEx_PeriphCLKConfig+0x97a>
 8004126:	2b40      	cmp	r3, #64	@ 0x40
 8004128:	d81f      	bhi.n	800416a <HAL_RCCEx_PeriphCLKConfig+0x96e>
 800412a:	2b30      	cmp	r3, #48	@ 0x30
 800412c:	d025      	beq.n	800417a <HAL_RCCEx_PeriphCLKConfig+0x97e>
 800412e:	2b30      	cmp	r3, #48	@ 0x30
 8004130:	d81b      	bhi.n	800416a <HAL_RCCEx_PeriphCLKConfig+0x96e>
 8004132:	2b20      	cmp	r3, #32
 8004134:	d00f      	beq.n	8004156 <HAL_RCCEx_PeriphCLKConfig+0x95a>
 8004136:	2b20      	cmp	r3, #32
 8004138:	d817      	bhi.n	800416a <HAL_RCCEx_PeriphCLKConfig+0x96e>
 800413a:	2b00      	cmp	r3, #0
 800413c:	d022      	beq.n	8004184 <HAL_RCCEx_PeriphCLKConfig+0x988>
 800413e:	2b10      	cmp	r3, #16
 8004140:	d113      	bne.n	800416a <HAL_RCCEx_PeriphCLKConfig+0x96e>
        /* UART12 clock source config set later after clock selection check */
        break;

      case RCC_UART12CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for UART12*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004142:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004146:	3308      	adds	r3, #8
 8004148:	4618      	mov	r0, r3
 800414a:	f001 fae1 	bl	8005710 <RCCEx_PLL2_Config>
 800414e:	4603      	mov	r3, r0
 8004150:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART12 clock source config set later after clock selection check */
        break;
 8004154:	e017      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>

      case RCC_UART12CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for UART12*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004156:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800415a:	3330      	adds	r3, #48	@ 0x30
 800415c:	4618      	mov	r0, r3
 800415e:	f001 fb6f 	bl	8005840 <RCCEx_PLL3_Config>
 8004162:	4603      	mov	r3, r0
 8004164:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* UART12 clock source config set later after clock selection check */
        break;
 8004168:	e00d      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>
      case RCC_UART12CLKSOURCE_LSE:      /* LSE clock is used as source of UART12 clock*/
        /* UART12 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800416a:	2301      	movs	r3, #1
 800416c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004170:	e009      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 8004172:	bf00      	nop
 8004174:	e007      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 8004176:	bf00      	nop
 8004178:	e005      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>
        break;
 800417a:	bf00      	nop
 800417c:	e003      	b.n	8004186 <HAL_RCCEx_PeriphCLKConfig+0x98a>
 800417e:	bf00      	nop
 8004180:	44020c00 	.word	0x44020c00
        break;
 8004184:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004186:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800418a:	2b00      	cmp	r3, #0
 800418c:	d10d      	bne.n	80041aa <HAL_RCCEx_PeriphCLKConfig+0x9ae>
    {
      /* Set the source of UART12 clock*/
      __HAL_RCC_UART12_CONFIG(pPeriphClkInit->Uart12ClockSelection);
 800418e:	4baf      	ldr	r3, [pc, #700]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004190:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004194:	f023 0170 	bic.w	r1, r3, #112	@ 0x70
 8004198:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800419c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80041a0:	4aaa      	ldr	r2, [pc, #680]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80041a2:	430b      	orrs	r3, r1
 80041a4:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80041a8:	e003      	b.n	80041b2 <HAL_RCCEx_PeriphCLKConfig+0x9b6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80041aa:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80041ae:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* UART12 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80041b2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80041b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041ba:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 80041be:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 80041c2:	2300      	movs	r3, #0
 80041c4:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 80041c8:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 80041cc:	460b      	mov	r3, r1
 80041ce:	4313      	orrs	r3, r2
 80041d0:	d055      	beq.n	800427e <HAL_RCCEx_PeriphCLKConfig+0xa82>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(pPeriphClkInit->Lpuart1ClockSelection));

    switch (pPeriphClkInit->Lpuart1ClockSelection)
 80041d2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80041d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80041da:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 80041de:	d031      	beq.n	8004244 <HAL_RCCEx_PeriphCLKConfig+0xa48>
 80041e0:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 80041e4:	d82a      	bhi.n	800423c <HAL_RCCEx_PeriphCLKConfig+0xa40>
 80041e6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80041ea:	d02d      	beq.n	8004248 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
 80041ec:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80041f0:	d824      	bhi.n	800423c <HAL_RCCEx_PeriphCLKConfig+0xa40>
 80041f2:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80041f6:	d029      	beq.n	800424c <HAL_RCCEx_PeriphCLKConfig+0xa50>
 80041f8:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 80041fc:	d81e      	bhi.n	800423c <HAL_RCCEx_PeriphCLKConfig+0xa40>
 80041fe:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004202:	d011      	beq.n	8004228 <HAL_RCCEx_PeriphCLKConfig+0xa2c>
 8004204:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004208:	d818      	bhi.n	800423c <HAL_RCCEx_PeriphCLKConfig+0xa40>
 800420a:	2b00      	cmp	r3, #0
 800420c:	d020      	beq.n	8004250 <HAL_RCCEx_PeriphCLKConfig+0xa54>
 800420e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004212:	d113      	bne.n	800423c <HAL_RCCEx_PeriphCLKConfig+0xa40>
        /* LPUART1 clock source config set later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for LPUART1*/
        /* PLL2 input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004214:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004218:	3308      	adds	r3, #8
 800421a:	4618      	mov	r0, r3
 800421c:	f001 fa78 	bl	8005710 <RCCEx_PLL2_Config>
 8004220:	4603      	mov	r3, r0
 8004222:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPUART1 clock source config set later after clock selection check */
        break;
 8004226:	e014      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>

#if defined(RCC_LPUART1CLKSOURCE_PLL3Q)
      case RCC_LPUART1CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for LPUART1*/
        /* PLL3  input clock, parameters M, N & Q configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004228:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800422c:	3330      	adds	r3, #48	@ 0x30
 800422e:	4618      	mov	r0, r3
 8004230:	f001 fb06 	bl	8005840 <RCCEx_PLL3_Config>
 8004234:	4603      	mov	r3, r0
 8004236:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPUART1 clock source config set later after clock selection check */
        break;
 800423a:	e00a      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>
      case RCC_LPUART1CLKSOURCE_LSE:      /* LSE clock is used as source of LPUART1 clock*/
        /* LPUART1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800423c:	2301      	movs	r3, #1
 800423e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004242:	e006      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 8004244:	bf00      	nop
 8004246:	e004      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 8004248:	bf00      	nop
 800424a:	e002      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 800424c:	bf00      	nop
 800424e:	e000      	b.n	8004252 <HAL_RCCEx_PeriphCLKConfig+0xa56>
        break;
 8004250:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004252:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004256:	2b00      	cmp	r3, #0
 8004258:	d10d      	bne.n	8004276 <HAL_RCCEx_PeriphCLKConfig+0xa7a>
    {
      /* Set the source of LPUART1 clock*/
      __HAL_RCC_LPUART1_CONFIG(pPeriphClkInit->Lpuart1ClockSelection);
 800425a:	4b7c      	ldr	r3, [pc, #496]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 800425c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004260:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8004264:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004268:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800426c:	4a77      	ldr	r2, [pc, #476]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 800426e:	430b      	orrs	r3, r1
 8004270:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8004274:	e003      	b.n	800427e <HAL_RCCEx_PeriphCLKConfig+0xa82>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004276:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800427a:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800427e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004282:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004286:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 800428a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800428e:	2300      	movs	r3, #0
 8004290:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8004294:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8004298:	460b      	mov	r3, r1
 800429a:	4313      	orrs	r3, r2
 800429c:	d03d      	beq.n	800431a <HAL_RCCEx_PeriphCLKConfig+0xb1e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(pPeriphClkInit->I2c1ClockSelection));

    switch (pPeriphClkInit->I2c1ClockSelection)
 800429e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80042a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042a6:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80042aa:	d01b      	beq.n	80042e4 <HAL_RCCEx_PeriphCLKConfig+0xae8>
 80042ac:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80042b0:	d814      	bhi.n	80042dc <HAL_RCCEx_PeriphCLKConfig+0xae0>
 80042b2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80042b6:	d017      	beq.n	80042e8 <HAL_RCCEx_PeriphCLKConfig+0xaec>
 80042b8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80042bc:	d80e      	bhi.n	80042dc <HAL_RCCEx_PeriphCLKConfig+0xae0>
 80042be:	2b00      	cmp	r3, #0
 80042c0:	d014      	beq.n	80042ec <HAL_RCCEx_PeriphCLKConfig+0xaf0>
 80042c2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80042c6:	d109      	bne.n	80042dc <HAL_RCCEx_PeriphCLKConfig+0xae0>
        break;

#if defined(RCC_I2C1CLKSOURCE_PLL3R)
      case RCC_I2C1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C1*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80042c8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80042cc:	3330      	adds	r3, #48	@ 0x30
 80042ce:	4618      	mov	r0, r3
 80042d0:	f001 fab6 	bl	8005840 <RCCEx_PLL3_Config>
 80042d4:	4603      	mov	r3, r0
 80042d6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I2C1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for I2C1*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I2C1CLKSOURCE_PLL3R */
        /* I2C1 clock source config set later after clock selection check */
        break;
 80042da:	e008      	b.n	80042ee <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      case RCC_I2C1CLKSOURCE_CSI:      /* CSI clock is used as source of I2C1 clock*/
        /* I2C1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80042dc:	2301      	movs	r3, #1
 80042de:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80042e2:	e004      	b.n	80042ee <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 80042e4:	bf00      	nop
 80042e6:	e002      	b.n	80042ee <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 80042e8:	bf00      	nop
 80042ea:	e000      	b.n	80042ee <HAL_RCCEx_PeriphCLKConfig+0xaf2>
        break;
 80042ec:	bf00      	nop
    }

    if (ret == HAL_OK)
 80042ee:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d10d      	bne.n	8004312 <HAL_RCCEx_PeriphCLKConfig+0xb16>
    {
      /* Set the source of I2C1 clock*/
      __HAL_RCC_I2C1_CONFIG(pPeriphClkInit->I2c1ClockSelection);
 80042f6:	4b55      	ldr	r3, [pc, #340]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80042f8:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80042fc:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8004300:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004304:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004308:	4a50      	ldr	r2, [pc, #320]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 800430a:	430b      	orrs	r3, r1
 800430c:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004310:	e003      	b.n	800431a <HAL_RCCEx_PeriphCLKConfig+0xb1e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004312:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004316:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 800431a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800431e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004322:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 8004326:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800432a:	2300      	movs	r3, #0
 800432c:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8004330:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 8004334:	460b      	mov	r3, r1
 8004336:	4313      	orrs	r3, r2
 8004338:	d03d      	beq.n	80043b6 <HAL_RCCEx_PeriphCLKConfig+0xbba>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(pPeriphClkInit->I2c2ClockSelection));

    switch (pPeriphClkInit->I2c2ClockSelection)
 800433a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800433e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004342:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004346:	d01b      	beq.n	8004380 <HAL_RCCEx_PeriphCLKConfig+0xb84>
 8004348:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 800434c:	d814      	bhi.n	8004378 <HAL_RCCEx_PeriphCLKConfig+0xb7c>
 800434e:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8004352:	d017      	beq.n	8004384 <HAL_RCCEx_PeriphCLKConfig+0xb88>
 8004354:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8004358:	d80e      	bhi.n	8004378 <HAL_RCCEx_PeriphCLKConfig+0xb7c>
 800435a:	2b00      	cmp	r3, #0
 800435c:	d014      	beq.n	8004388 <HAL_RCCEx_PeriphCLKConfig+0xb8c>
 800435e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004362:	d109      	bne.n	8004378 <HAL_RCCEx_PeriphCLKConfig+0xb7c>
        break;

#if defined(RCC_I2C2CLKSOURCE_PLL3R)
      case RCC_I2C2CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C2*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004364:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004368:	3330      	adds	r3, #48	@ 0x30
 800436a:	4618      	mov	r0, r3
 800436c:	f001 fa68 	bl	8005840 <RCCEx_PLL3_Config>
 8004370:	4603      	mov	r3, r0
 8004372:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I2C2CLKSOURCE_PLL2R:  /* PLL32 is used as clock source for I2C2*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I2C2CLKSOURCE_PLL3R */
        /* I2C2 clock source config set later after clock selection check */
        break;
 8004376:	e008      	b.n	800438a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
      case RCC_I2C2CLKSOURCE_CSI:      /* CSI clock is used as source of I2C2 clock*/
        /* I2C2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004378:	2301      	movs	r3, #1
 800437a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800437e:	e004      	b.n	800438a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 8004380:	bf00      	nop
 8004382:	e002      	b.n	800438a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 8004384:	bf00      	nop
 8004386:	e000      	b.n	800438a <HAL_RCCEx_PeriphCLKConfig+0xb8e>
        break;
 8004388:	bf00      	nop
    }

    if (ret == HAL_OK)
 800438a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800438e:	2b00      	cmp	r3, #0
 8004390:	d10d      	bne.n	80043ae <HAL_RCCEx_PeriphCLKConfig+0xbb2>
    {
      /* Set the source of I2C2 clock*/
      __HAL_RCC_I2C2_CONFIG(pPeriphClkInit->I2c2ClockSelection);
 8004392:	4b2e      	ldr	r3, [pc, #184]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004394:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004398:	f423 2140 	bic.w	r1, r3, #786432	@ 0xc0000
 800439c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80043a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80043a4:	4a29      	ldr	r2, [pc, #164]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 80043a6:	430b      	orrs	r3, r1
 80043a8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 80043ac:	e003      	b.n	80043b6 <HAL_RCCEx_PeriphCLKConfig+0xbba>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80043ae:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80043b2:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(I2C3)
  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80043b6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80043ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043be:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 80043c2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80043c6:	2300      	movs	r3, #0
 80043c8:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80043cc:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80043d0:	460b      	mov	r3, r1
 80043d2:	4313      	orrs	r3, r2
 80043d4:	d040      	beq.n	8004458 <HAL_RCCEx_PeriphCLKConfig+0xc5c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(pPeriphClkInit->I2c3ClockSelection));

    switch (pPeriphClkInit->I2c3ClockSelection)
 80043d6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80043da:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80043de:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80043e2:	d01b      	beq.n	800441c <HAL_RCCEx_PeriphCLKConfig+0xc20>
 80043e4:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80043e8:	d814      	bhi.n	8004414 <HAL_RCCEx_PeriphCLKConfig+0xc18>
 80043ea:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80043ee:	d017      	beq.n	8004420 <HAL_RCCEx_PeriphCLKConfig+0xc24>
 80043f0:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80043f4:	d80e      	bhi.n	8004414 <HAL_RCCEx_PeriphCLKConfig+0xc18>
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d014      	beq.n	8004424 <HAL_RCCEx_PeriphCLKConfig+0xc28>
 80043fa:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80043fe:	d109      	bne.n	8004414 <HAL_RCCEx_PeriphCLKConfig+0xc18>
        /* I2C3 clock source config set later after clock selection check */
        break;

      case RCC_I2C3CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C3*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004400:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004404:	3330      	adds	r3, #48	@ 0x30
 8004406:	4618      	mov	r0, r3
 8004408:	f001 fa1a 	bl	8005840 <RCCEx_PLL3_Config>
 800440c:	4603      	mov	r3, r0
 800440e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* I2C3 clock source config set later after clock selection check */
        break;
 8004412:	e008      	b.n	8004426 <HAL_RCCEx_PeriphCLKConfig+0xc2a>
      case RCC_I2C3CLKSOURCE_CSI:      /* CSI clock is used as source of I2C3 clock*/
        /* I2C3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004414:	2301      	movs	r3, #1
 8004416:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800441a:	e004      	b.n	8004426 <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 800441c:	bf00      	nop
 800441e:	e002      	b.n	8004426 <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 8004420:	bf00      	nop
 8004422:	e000      	b.n	8004426 <HAL_RCCEx_PeriphCLKConfig+0xc2a>
        break;
 8004424:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004426:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800442a:	2b00      	cmp	r3, #0
 800442c:	d110      	bne.n	8004450 <HAL_RCCEx_PeriphCLKConfig+0xc54>
    {
      /* Set the source of I2C3 clock*/
      __HAL_RCC_I2C3_CONFIG(pPeriphClkInit->I2c3ClockSelection);
 800442e:	4b07      	ldr	r3, [pc, #28]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004430:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004434:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8004438:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800443c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8004440:	4a02      	ldr	r2, [pc, #8]	@ (800444c <HAL_RCCEx_PeriphCLKConfig+0xc50>)
 8004442:	430b      	orrs	r3, r1
 8004444:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004448:	e006      	b.n	8004458 <HAL_RCCEx_PeriphCLKConfig+0xc5c>
 800444a:	bf00      	nop
 800444c:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004450:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004454:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* I2C3 */

#if defined(I2C4)
  /*-------------------------- I2C4 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8004458:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800445c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004460:	2100      	movs	r1, #0
 8004462:	f8c7 10d0 	str.w	r1, [r7, #208]	@ 0xd0
 8004466:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800446a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800446e:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 8004472:	460b      	mov	r3, r1
 8004474:	4313      	orrs	r3, r2
 8004476:	d03d      	beq.n	80044f4 <HAL_RCCEx_PeriphCLKConfig+0xcf8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(pPeriphClkInit->I2c4ClockSelection));

    switch (pPeriphClkInit->I2c4ClockSelection)
 8004478:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800447c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8004480:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8004484:	d01b      	beq.n	80044be <HAL_RCCEx_PeriphCLKConfig+0xcc2>
 8004486:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 800448a:	d814      	bhi.n	80044b6 <HAL_RCCEx_PeriphCLKConfig+0xcba>
 800448c:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004490:	d017      	beq.n	80044c2 <HAL_RCCEx_PeriphCLKConfig+0xcc6>
 8004492:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004496:	d80e      	bhi.n	80044b6 <HAL_RCCEx_PeriphCLKConfig+0xcba>
 8004498:	2b00      	cmp	r3, #0
 800449a:	d014      	beq.n	80044c6 <HAL_RCCEx_PeriphCLKConfig+0xcca>
 800449c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80044a0:	d109      	bne.n	80044b6 <HAL_RCCEx_PeriphCLKConfig+0xcba>
        /* I2C4 clock source config set later after clock selection check */
        break;

      case RCC_I2C4CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I2C4*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80044a2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80044a6:	3330      	adds	r3, #48	@ 0x30
 80044a8:	4618      	mov	r0, r3
 80044aa:	f001 f9c9 	bl	8005840 <RCCEx_PLL3_Config>
 80044ae:	4603      	mov	r3, r0
 80044b0:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* I2C4 clock source config set later after clock selection check */
        break;
 80044b4:	e008      	b.n	80044c8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
      case RCC_I2C4CLKSOURCE_CSI:      /* CSI clock is used as source of I2C4 clock*/
        /* I2C4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80044b6:	2301      	movs	r3, #1
 80044b8:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80044bc:	e004      	b.n	80044c8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 80044be:	bf00      	nop
 80044c0:	e002      	b.n	80044c8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 80044c2:	bf00      	nop
 80044c4:	e000      	b.n	80044c8 <HAL_RCCEx_PeriphCLKConfig+0xccc>
        break;
 80044c6:	bf00      	nop
    }

    if (ret == HAL_OK)
 80044c8:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	d10d      	bne.n	80044ec <HAL_RCCEx_PeriphCLKConfig+0xcf0>
    {
      /* Set the source of I2C4 clock*/
      __HAL_RCC_I2C4_CONFIG(pPeriphClkInit->I2c4ClockSelection);
 80044d0:	4bbe      	ldr	r3, [pc, #760]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80044d2:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80044d6:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 80044da:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80044de:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80044e2:	4aba      	ldr	r2, [pc, #744]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80044e4:	430b      	orrs	r3, r1
 80044e6:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 80044ea:	e003      	b.n	80044f4 <HAL_RCCEx_PeriphCLKConfig+0xcf8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80044ec:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80044f0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* I2C4 */

  /*-------------------------- I3C1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I3C1) == RCC_PERIPHCLK_I3C1)
 80044f4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80044f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044fc:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8004500:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004504:	2300      	movs	r3, #0
 8004506:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800450a:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 800450e:	460b      	mov	r3, r1
 8004510:	4313      	orrs	r3, r2
 8004512:	d035      	beq.n	8004580 <HAL_RCCEx_PeriphCLKConfig+0xd84>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I3C1CLKSOURCE(pPeriphClkInit->I3c1ClockSelection));

    switch (pPeriphClkInit->I3c1ClockSelection)
 8004514:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004518:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800451c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004520:	d015      	beq.n	800454e <HAL_RCCEx_PeriphCLKConfig+0xd52>
 8004522:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004526:	d80e      	bhi.n	8004546 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8004528:	2b00      	cmp	r3, #0
 800452a:	d012      	beq.n	8004552 <HAL_RCCEx_PeriphCLKConfig+0xd56>
 800452c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004530:	d109      	bne.n	8004546 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
        break;

#if defined(RCC_I3C1CLKSOURCE_PLL3R)
      case RCC_I3C1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for I3C1*/
        /* PLL3  input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004532:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004536:	3330      	adds	r3, #48	@ 0x30
 8004538:	4618      	mov	r0, r3
 800453a:	f001 f981 	bl	8005840 <RCCEx_PLL3_Config>
 800453e:	4603      	mov	r3, r0
 8004540:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_I3C1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for I3C1*/
        /* PLL2  input clock, parameters M, N & R configuration clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_I3C1CLKSOURCE_PLL3R */
        /* I3C1 clock source config set later after clock selection check */
        break;
 8004544:	e006      	b.n	8004554 <HAL_RCCEx_PeriphCLKConfig+0xd58>
      case RCC_I3C1CLKSOURCE_HSI:      /* HSI clock is used as source of I3C1 clock*/
        /* I3C1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004546:	2301      	movs	r3, #1
 8004548:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800454c:	e002      	b.n	8004554 <HAL_RCCEx_PeriphCLKConfig+0xd58>
        break;
 800454e:	bf00      	nop
 8004550:	e000      	b.n	8004554 <HAL_RCCEx_PeriphCLKConfig+0xd58>
        break;
 8004552:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004554:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004558:	2b00      	cmp	r3, #0
 800455a:	d10d      	bne.n	8004578 <HAL_RCCEx_PeriphCLKConfig+0xd7c>
    {
      /* Set the source of I3C1 clock*/
      __HAL_RCC_I3C1_CONFIG(pPeriphClkInit->I3c1ClockSelection);
 800455c:	4b9b      	ldr	r3, [pc, #620]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800455e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004562:	f023 7140 	bic.w	r1, r3, #50331648	@ 0x3000000
 8004566:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800456a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800456e:	4a97      	ldr	r2, [pc, #604]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004570:	430b      	orrs	r3, r1
 8004572:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004576:	e003      	b.n	8004580 <HAL_RCCEx_PeriphCLKConfig+0xd84>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004578:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800457c:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* I3C2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8004580:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004584:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004588:	2100      	movs	r1, #0
 800458a:	f8c7 10c0 	str.w	r1, [r7, #192]	@ 0xc0
 800458e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004592:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004596:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800459a:	460b      	mov	r3, r1
 800459c:	4313      	orrs	r3, r2
 800459e:	d00e      	beq.n	80045be <HAL_RCCEx_PeriphCLKConfig+0xdc2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(pPeriphClkInit->TimPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(pPeriphClkInit->TimPresSelection);
 80045a0:	4b8a      	ldr	r3, [pc, #552]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80045a2:	69db      	ldr	r3, [r3, #28]
 80045a4:	4a89      	ldr	r2, [pc, #548]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80045a6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80045aa:	61d3      	str	r3, [r2, #28]
 80045ac:	4b87      	ldr	r3, [pc, #540]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80045ae:	69d9      	ldr	r1, [r3, #28]
 80045b0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80045b4:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 80045b8:	4a84      	ldr	r2, [pc, #528]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 80045ba:	430b      	orrs	r3, r1
 80045bc:	61d3      	str	r3, [r2, #28]
  }

  /*-------------------------- LPTIM1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 80045be:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80045c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80045c6:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 80045ca:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80045ce:	2300      	movs	r3, #0
 80045d0:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80045d4:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 80045d8:	460b      	mov	r3, r1
 80045da:	4313      	orrs	r3, r2
 80045dc:	d055      	beq.n	800468a <HAL_RCCEx_PeriphCLKConfig+0xe8e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(pPeriphClkInit->Lptim1ClockSelection));

    switch (pPeriphClkInit->Lptim1ClockSelection)
 80045de:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80045e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80045e6:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 80045ea:	d031      	beq.n	8004650 <HAL_RCCEx_PeriphCLKConfig+0xe54>
 80045ec:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 80045f0:	d82a      	bhi.n	8004648 <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 80045f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80045f6:	d02d      	beq.n	8004654 <HAL_RCCEx_PeriphCLKConfig+0xe58>
 80045f8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80045fc:	d824      	bhi.n	8004648 <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 80045fe:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004602:	d029      	beq.n	8004658 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
 8004604:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004608:	d81e      	bhi.n	8004648 <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 800460a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800460e:	d011      	beq.n	8004634 <HAL_RCCEx_PeriphCLKConfig+0xe38>
 8004610:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004614:	d818      	bhi.n	8004648 <HAL_RCCEx_PeriphCLKConfig+0xe4c>
 8004616:	2b00      	cmp	r3, #0
 8004618:	d020      	beq.n	800465c <HAL_RCCEx_PeriphCLKConfig+0xe60>
 800461a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800461e:	d113      	bne.n	8004648 <HAL_RCCEx_PeriphCLKConfig+0xe4c>
        /* LPTIM1 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004620:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004624:	3308      	adds	r3, #8
 8004626:	4618      	mov	r0, r3
 8004628:	f001 f872 	bl	8005710 <RCCEx_PLL2_Config>
 800462c:	4603      	mov	r3, r0
 800462e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM1 clock source config set later after clock selection check */
        break;
 8004632:	e014      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>

#if defined(RCC_LPTIM1CLKSOURCE_PLL3R)
      case RCC_LPTIM1CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM1*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004634:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004638:	3330      	adds	r3, #48	@ 0x30
 800463a:	4618      	mov	r0, r3
 800463c:	f001 f900 	bl	8005840 <RCCEx_PLL3_Config>
 8004640:	4603      	mov	r3, r0
 8004642:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM1 clock source config set later after clock selection check */
        break;
 8004646:	e00a      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>
      case RCC_LPTIM1CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM1 clock*/
        /* LPTIM1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004648:	2301      	movs	r3, #1
 800464a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800464e:	e006      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 8004650:	bf00      	nop
 8004652:	e004      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 8004654:	bf00      	nop
 8004656:	e002      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 8004658:	bf00      	nop
 800465a:	e000      	b.n	800465e <HAL_RCCEx_PeriphCLKConfig+0xe62>
        break;
 800465c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800465e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004662:	2b00      	cmp	r3, #0
 8004664:	d10d      	bne.n	8004682 <HAL_RCCEx_PeriphCLKConfig+0xe86>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(pPeriphClkInit->Lptim1ClockSelection);
 8004666:	4b59      	ldr	r3, [pc, #356]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004668:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800466c:	f423 61e0 	bic.w	r1, r3, #1792	@ 0x700
 8004670:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004674:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8004678:	4a54      	ldr	r2, [pc, #336]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 800467a:	430b      	orrs	r3, r1
 800467c:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 8004680:	e003      	b.n	800468a <HAL_RCCEx_PeriphCLKConfig+0xe8e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004682:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004686:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

  /*-------------------------- LPTIM2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 800468a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800468e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004692:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 8004696:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800469a:	2300      	movs	r3, #0
 800469c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80046a0:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 80046a4:	460b      	mov	r3, r1
 80046a6:	4313      	orrs	r3, r2
 80046a8:	d055      	beq.n	8004756 <HAL_RCCEx_PeriphCLKConfig+0xf5a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM2CLK(pPeriphClkInit->Lptim2ClockSelection));

    switch (pPeriphClkInit->Lptim2ClockSelection)
 80046aa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80046ae:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 80046b2:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 80046b6:	d031      	beq.n	800471c <HAL_RCCEx_PeriphCLKConfig+0xf20>
 80046b8:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 80046bc:	d82a      	bhi.n	8004714 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 80046be:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80046c2:	d02d      	beq.n	8004720 <HAL_RCCEx_PeriphCLKConfig+0xf24>
 80046c4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80046c8:	d824      	bhi.n	8004714 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 80046ca:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80046ce:	d029      	beq.n	8004724 <HAL_RCCEx_PeriphCLKConfig+0xf28>
 80046d0:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80046d4:	d81e      	bhi.n	8004714 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 80046d6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80046da:	d011      	beq.n	8004700 <HAL_RCCEx_PeriphCLKConfig+0xf04>
 80046dc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80046e0:	d818      	bhi.n	8004714 <HAL_RCCEx_PeriphCLKConfig+0xf18>
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d020      	beq.n	8004728 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 80046e6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80046ea:	d113      	bne.n	8004714 <HAL_RCCEx_PeriphCLKConfig+0xf18>
        /* LPTIM2 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80046ec:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80046f0:	3308      	adds	r3, #8
 80046f2:	4618      	mov	r0, r3
 80046f4:	f001 f80c 	bl	8005710 <RCCEx_PLL2_Config>
 80046f8:	4603      	mov	r3, r0
 80046fa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM2 clock source config set later after clock selection check */
        break;
 80046fe:	e014      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>

#if defined(RCC_LPTIM2CLKSOURCE_PLL3R)
      case RCC_LPTIM2CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM2*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004700:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004704:	3330      	adds	r3, #48	@ 0x30
 8004706:	4618      	mov	r0, r3
 8004708:	f001 f89a 	bl	8005840 <RCCEx_PLL3_Config>
 800470c:	4603      	mov	r3, r0
 800470e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM2 clock source config set later after clock selection check */
        break;
 8004712:	e00a      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>
      case RCC_LPTIM2CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM2 clock*/
        /* LPTIM2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004714:	2301      	movs	r3, #1
 8004716:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800471a:	e006      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 800471c:	bf00      	nop
 800471e:	e004      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 8004720:	bf00      	nop
 8004722:	e002      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 8004724:	bf00      	nop
 8004726:	e000      	b.n	800472a <HAL_RCCEx_PeriphCLKConfig+0xf2e>
        break;
 8004728:	bf00      	nop
    }

    if (ret == HAL_OK)
 800472a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800472e:	2b00      	cmp	r3, #0
 8004730:	d10d      	bne.n	800474e <HAL_RCCEx_PeriphCLKConfig+0xf52>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(pPeriphClkInit->Lptim2ClockSelection);
 8004732:	4b26      	ldr	r3, [pc, #152]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004734:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004738:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 800473c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004740:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8004744:	4a21      	ldr	r2, [pc, #132]	@ (80047cc <HAL_RCCEx_PeriphCLKConfig+0xfd0>)
 8004746:	430b      	orrs	r3, r1
 8004748:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 800474c:	e003      	b.n	8004756 <HAL_RCCEx_PeriphCLKConfig+0xf5a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800474e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004752:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(LPTIM3)
  /*-------------------------- LPTIM3 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM3) == RCC_PERIPHCLK_LPTIM3)
 8004756:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800475a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800475e:	2100      	movs	r1, #0
 8004760:	f8c7 10a8 	str.w	r1, [r7, #168]	@ 0xa8
 8004764:	f003 0320 	and.w	r3, r3, #32
 8004768:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800476c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8004770:	460b      	mov	r3, r1
 8004772:	4313      	orrs	r3, r2
 8004774:	d057      	beq.n	8004826 <HAL_RCCEx_PeriphCLKConfig+0x102a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM3CLK(pPeriphClkInit->Lptim3ClockSelection));

    switch (pPeriphClkInit->Lptim3ClockSelection)
 8004776:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800477a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800477e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004782:	d033      	beq.n	80047ec <HAL_RCCEx_PeriphCLKConfig+0xff0>
 8004784:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004788:	d82c      	bhi.n	80047e4 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 800478a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800478e:	d02f      	beq.n	80047f0 <HAL_RCCEx_PeriphCLKConfig+0xff4>
 8004790:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004794:	d826      	bhi.n	80047e4 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 8004796:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800479a:	d02b      	beq.n	80047f4 <HAL_RCCEx_PeriphCLKConfig+0xff8>
 800479c:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80047a0:	d820      	bhi.n	80047e4 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 80047a2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80047a6:	d013      	beq.n	80047d0 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 80047a8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80047ac:	d81a      	bhi.n	80047e4 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
 80047ae:	2b00      	cmp	r3, #0
 80047b0:	d022      	beq.n	80047f8 <HAL_RCCEx_PeriphCLKConfig+0xffc>
 80047b2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80047b6:	d115      	bne.n	80047e4 <HAL_RCCEx_PeriphCLKConfig+0xfe8>
        /* LPTIM3 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM3CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM3*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80047b8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80047bc:	3308      	adds	r3, #8
 80047be:	4618      	mov	r0, r3
 80047c0:	f000 ffa6 	bl	8005710 <RCCEx_PLL2_Config>
 80047c4:	4603      	mov	r3, r0
 80047c6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM3 clock source config set later after clock selection check */
        break;
 80047ca:	e016      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
 80047cc:	44020c00 	.word	0x44020c00

      case RCC_LPTIM3CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM3*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80047d0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80047d4:	3330      	adds	r3, #48	@ 0x30
 80047d6:	4618      	mov	r0, r3
 80047d8:	f001 f832 	bl	8005840 <RCCEx_PLL3_Config>
 80047dc:	4603      	mov	r3, r0
 80047de:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM3 clock source config set later after clock selection check */
        break;
 80047e2:	e00a      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
      case RCC_LPTIM3CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM3 clock*/
        /* LPTIM3 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80047e4:	2301      	movs	r3, #1
 80047e6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80047ea:	e006      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 80047ec:	bf00      	nop
 80047ee:	e004      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 80047f0:	bf00      	nop
 80047f2:	e002      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 80047f4:	bf00      	nop
 80047f6:	e000      	b.n	80047fa <HAL_RCCEx_PeriphCLKConfig+0xffe>
        break;
 80047f8:	bf00      	nop
    }

    if (ret == HAL_OK)
 80047fa:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80047fe:	2b00      	cmp	r3, #0
 8004800:	d10d      	bne.n	800481e <HAL_RCCEx_PeriphCLKConfig+0x1022>
    {
      /* Set the source of LPTIM3 clock*/
      __HAL_RCC_LPTIM3_CONFIG(pPeriphClkInit->Lptim3ClockSelection);
 8004802:	4bbb      	ldr	r3, [pc, #748]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004804:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004808:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 800480c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004810:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8004814:	4ab6      	ldr	r2, [pc, #728]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004816:	430b      	orrs	r3, r1
 8004818:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 800481c:	e003      	b.n	8004826 <HAL_RCCEx_PeriphCLKConfig+0x102a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800481e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004822:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM3 */

#if defined(LPTIM4)
  /*-------------------------- LPTIM4 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM4) == RCC_PERIPHCLK_LPTIM4)
 8004826:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800482a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800482e:	2100      	movs	r1, #0
 8004830:	f8c7 10a0 	str.w	r1, [r7, #160]	@ 0xa0
 8004834:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004838:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800483c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 8004840:	460b      	mov	r3, r1
 8004842:	4313      	orrs	r3, r2
 8004844:	d055      	beq.n	80048f2 <HAL_RCCEx_PeriphCLKConfig+0x10f6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM4CLK(pPeriphClkInit->Lptim4ClockSelection));

    switch (pPeriphClkInit->Lptim4ClockSelection)
 8004846:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800484a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800484e:	f5b3 0fa0 	cmp.w	r3, #5242880	@ 0x500000
 8004852:	d031      	beq.n	80048b8 <HAL_RCCEx_PeriphCLKConfig+0x10bc>
 8004854:	f5b3 0fa0 	cmp.w	r3, #5242880	@ 0x500000
 8004858:	d82a      	bhi.n	80048b0 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 800485a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800485e:	d02d      	beq.n	80048bc <HAL_RCCEx_PeriphCLKConfig+0x10c0>
 8004860:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004864:	d824      	bhi.n	80048b0 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 8004866:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800486a:	d029      	beq.n	80048c0 <HAL_RCCEx_PeriphCLKConfig+0x10c4>
 800486c:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8004870:	d81e      	bhi.n	80048b0 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 8004872:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004876:	d011      	beq.n	800489c <HAL_RCCEx_PeriphCLKConfig+0x10a0>
 8004878:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800487c:	d818      	bhi.n	80048b0 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
 800487e:	2b00      	cmp	r3, #0
 8004880:	d020      	beq.n	80048c4 <HAL_RCCEx_PeriphCLKConfig+0x10c8>
 8004882:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004886:	d113      	bne.n	80048b0 <HAL_RCCEx_PeriphCLKConfig+0x10b4>
        /* LPTIM4 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM4CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM4*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004888:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800488c:	3308      	adds	r3, #8
 800488e:	4618      	mov	r0, r3
 8004890:	f000 ff3e 	bl	8005710 <RCCEx_PLL2_Config>
 8004894:	4603      	mov	r3, r0
 8004896:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM4 clock source config set later after clock selection check */
        break;
 800489a:	e014      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>

      case RCC_LPTIM4CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM4*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800489c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80048a0:	3330      	adds	r3, #48	@ 0x30
 80048a2:	4618      	mov	r0, r3
 80048a4:	f000 ffcc 	bl	8005840 <RCCEx_PLL3_Config>
 80048a8:	4603      	mov	r3, r0
 80048aa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM4 clock source config set later after clock selection check */
        break;
 80048ae:	e00a      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>
      case RCC_LPTIM4CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM4 clock*/
        /* LPTIM4 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80048b0:	2301      	movs	r3, #1
 80048b2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80048b6:	e006      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 80048b8:	bf00      	nop
 80048ba:	e004      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 80048bc:	bf00      	nop
 80048be:	e002      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 80048c0:	bf00      	nop
 80048c2:	e000      	b.n	80048c6 <HAL_RCCEx_PeriphCLKConfig+0x10ca>
        break;
 80048c4:	bf00      	nop
    }

    if (ret == HAL_OK)
 80048c6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d10d      	bne.n	80048ea <HAL_RCCEx_PeriphCLKConfig+0x10ee>
    {
      /* Set the source of LPTIM4 clock*/
      __HAL_RCC_LPTIM4_CONFIG(pPeriphClkInit->Lptim4ClockSelection);
 80048ce:	4b88      	ldr	r3, [pc, #544]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 80048d0:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80048d4:	f423 01e0 	bic.w	r1, r3, #7340032	@ 0x700000
 80048d8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80048dc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80048e0:	4a83      	ldr	r2, [pc, #524]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 80048e2:	430b      	orrs	r3, r1
 80048e4:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80048e8:	e003      	b.n	80048f2 <HAL_RCCEx_PeriphCLKConfig+0x10f6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80048ea:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80048ee:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM4 */

#if defined(LPTIM5)
  /*-------------------------- LPTIM5 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM5) == RCC_PERIPHCLK_LPTIM5)
 80048f2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80048f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80048fa:	2100      	movs	r1, #0
 80048fc:	f8c7 1098 	str.w	r1, [r7, #152]	@ 0x98
 8004900:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004904:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004908:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 800490c:	460b      	mov	r3, r1
 800490e:	4313      	orrs	r3, r2
 8004910:	d055      	beq.n	80049be <HAL_RCCEx_PeriphCLKConfig+0x11c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM5CLK(pPeriphClkInit->Lptim5ClockSelection));

    switch (pPeriphClkInit->Lptim5ClockSelection)
 8004912:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004916:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800491a:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 800491e:	d031      	beq.n	8004984 <HAL_RCCEx_PeriphCLKConfig+0x1188>
 8004920:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8004924:	d82a      	bhi.n	800497c <HAL_RCCEx_PeriphCLKConfig+0x1180>
 8004926:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800492a:	d02d      	beq.n	8004988 <HAL_RCCEx_PeriphCLKConfig+0x118c>
 800492c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8004930:	d824      	bhi.n	800497c <HAL_RCCEx_PeriphCLKConfig+0x1180>
 8004932:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8004936:	d029      	beq.n	800498c <HAL_RCCEx_PeriphCLKConfig+0x1190>
 8004938:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800493c:	d81e      	bhi.n	800497c <HAL_RCCEx_PeriphCLKConfig+0x1180>
 800493e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004942:	d011      	beq.n	8004968 <HAL_RCCEx_PeriphCLKConfig+0x116c>
 8004944:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004948:	d818      	bhi.n	800497c <HAL_RCCEx_PeriphCLKConfig+0x1180>
 800494a:	2b00      	cmp	r3, #0
 800494c:	d020      	beq.n	8004990 <HAL_RCCEx_PeriphCLKConfig+0x1194>
 800494e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004952:	d113      	bne.n	800497c <HAL_RCCEx_PeriphCLKConfig+0x1180>
        /* LPTIM5 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM5CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM5*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004954:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004958:	3308      	adds	r3, #8
 800495a:	4618      	mov	r0, r3
 800495c:	f000 fed8 	bl	8005710 <RCCEx_PLL2_Config>
 8004960:	4603      	mov	r3, r0
 8004962:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM5 clock source config set later after clock selection check */
        break;
 8004966:	e014      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>

      case RCC_LPTIM5CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM5*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004968:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800496c:	3330      	adds	r3, #48	@ 0x30
 800496e:	4618      	mov	r0, r3
 8004970:	f000 ff66 	bl	8005840 <RCCEx_PLL3_Config>
 8004974:	4603      	mov	r3, r0
 8004976:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM5 clock source config set later after clock selection check */
        break;
 800497a:	e00a      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>
      case RCC_LPTIM5CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM5 clock*/
        /* LPTIM5 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800497c:	2301      	movs	r3, #1
 800497e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004982:	e006      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004984:	bf00      	nop
 8004986:	e004      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004988:	bf00      	nop
 800498a:	e002      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 800498c:	bf00      	nop
 800498e:	e000      	b.n	8004992 <HAL_RCCEx_PeriphCLKConfig+0x1196>
        break;
 8004990:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004992:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004996:	2b00      	cmp	r3, #0
 8004998:	d10d      	bne.n	80049b6 <HAL_RCCEx_PeriphCLKConfig+0x11ba>
    {
      /* Set the source of LPTIM5 clock*/
      __HAL_RCC_LPTIM5_CONFIG(pPeriphClkInit->Lptim5ClockSelection);
 800499a:	4b55      	ldr	r3, [pc, #340]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 800499c:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 80049a0:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 80049a4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80049a8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80049ac:	4a50      	ldr	r2, [pc, #320]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 80049ae:	430b      	orrs	r3, r1
 80049b0:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 80049b4:	e003      	b.n	80049be <HAL_RCCEx_PeriphCLKConfig+0x11c2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80049b6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80049ba:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM5 */

#if defined(LPTIM6)
  /*-------------------------- LPTIM6 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM6) == RCC_PERIPHCLK_LPTIM6)
 80049be:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80049c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80049c6:	2100      	movs	r1, #0
 80049c8:	f8c7 1090 	str.w	r1, [r7, #144]	@ 0x90
 80049cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80049d0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80049d4:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 80049d8:	460b      	mov	r3, r1
 80049da:	4313      	orrs	r3, r2
 80049dc:	d055      	beq.n	8004a8a <HAL_RCCEx_PeriphCLKConfig+0x128e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM6CLK(pPeriphClkInit->Lptim6ClockSelection));

    switch (pPeriphClkInit->Lptim6ClockSelection)
 80049de:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80049e2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 80049e6:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80049ea:	d031      	beq.n	8004a50 <HAL_RCCEx_PeriphCLKConfig+0x1254>
 80049ec:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80049f0:	d82a      	bhi.n	8004a48 <HAL_RCCEx_PeriphCLKConfig+0x124c>
 80049f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80049f6:	d02d      	beq.n	8004a54 <HAL_RCCEx_PeriphCLKConfig+0x1258>
 80049f8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80049fc:	d824      	bhi.n	8004a48 <HAL_RCCEx_PeriphCLKConfig+0x124c>
 80049fe:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8004a02:	d029      	beq.n	8004a58 <HAL_RCCEx_PeriphCLKConfig+0x125c>
 8004a04:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8004a08:	d81e      	bhi.n	8004a48 <HAL_RCCEx_PeriphCLKConfig+0x124c>
 8004a0a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004a0e:	d011      	beq.n	8004a34 <HAL_RCCEx_PeriphCLKConfig+0x1238>
 8004a10:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004a14:	d818      	bhi.n	8004a48 <HAL_RCCEx_PeriphCLKConfig+0x124c>
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d020      	beq.n	8004a5c <HAL_RCCEx_PeriphCLKConfig+0x1260>
 8004a1a:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004a1e:	d113      	bne.n	8004a48 <HAL_RCCEx_PeriphCLKConfig+0x124c>
        /* LPTIM6 clock source config set later after clock selection check */
        break;

      case RCC_LPTIM6CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for LPTIM6*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004a20:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a24:	3308      	adds	r3, #8
 8004a26:	4618      	mov	r0, r3
 8004a28:	f000 fe72 	bl	8005710 <RCCEx_PLL2_Config>
 8004a2c:	4603      	mov	r3, r0
 8004a2e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM6 clock source config set later after clock selection check */
        break;
 8004a32:	e014      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>

      case RCC_LPTIM6CLKSOURCE_PLL3R:  /* PLL3 is used as clock source for LPTIM6*/
        /* PLL3 R input clock, parameters M, N & R configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004a34:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a38:	3330      	adds	r3, #48	@ 0x30
 8004a3a:	4618      	mov	r0, r3
 8004a3c:	f000 ff00 	bl	8005840 <RCCEx_PLL3_Config>
 8004a40:	4603      	mov	r3, r0
 8004a42:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* LPTIM6 clock source config set later after clock selection check */
        break;
 8004a46:	e00a      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>
      case RCC_LPTIM6CLKSOURCE_CLKP:      /* CLKP is used as source of LPTIM6 clock*/
        /* LPTIM6 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004a48:	2301      	movs	r3, #1
 8004a4a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004a4e:	e006      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 8004a50:	bf00      	nop
 8004a52:	e004      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 8004a54:	bf00      	nop
 8004a56:	e002      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 8004a58:	bf00      	nop
 8004a5a:	e000      	b.n	8004a5e <HAL_RCCEx_PeriphCLKConfig+0x1262>
        break;
 8004a5c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004a5e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004a62:	2b00      	cmp	r3, #0
 8004a64:	d10d      	bne.n	8004a82 <HAL_RCCEx_PeriphCLKConfig+0x1286>
    {
      /* Set the source of LPTIM6 clock*/
      __HAL_RCC_LPTIM6_CONFIG(pPeriphClkInit->Lptim6ClockSelection);
 8004a66:	4b22      	ldr	r3, [pc, #136]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a68:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8004a6c:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8004a70:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a74:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8004a78:	4a1d      	ldr	r2, [pc, #116]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004a7a:	430b      	orrs	r3, r1
 8004a7c:	f8c2 30dc 	str.w	r3, [r2, #220]	@ 0xdc
 8004a80:	e003      	b.n	8004a8a <HAL_RCCEx_PeriphCLKConfig+0x128e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004a82:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004a86:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* LPTIM6 */

#if defined(SAI1)
  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8004a8a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004a8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004a92:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8004a96:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004a9a:	2300      	movs	r3, #0
 8004a9c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8004aa0:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8004aa4:	460b      	mov	r3, r1
 8004aa6:	4313      	orrs	r3, r2
 8004aa8:	d055      	beq.n	8004b56 <HAL_RCCEx_PeriphCLKConfig+0x135a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(pPeriphClkInit->Sai1ClockSelection));

    switch (pPeriphClkInit->Sai1ClockSelection)
 8004aaa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004aae:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8004ab2:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004ab6:	d035      	beq.n	8004b24 <HAL_RCCEx_PeriphCLKConfig+0x1328>
 8004ab8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004abc:	d82e      	bhi.n	8004b1c <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004abe:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004ac2:	d031      	beq.n	8004b28 <HAL_RCCEx_PeriphCLKConfig+0x132c>
 8004ac4:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004ac8:	d828      	bhi.n	8004b1c <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004aca:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004ace:	d01b      	beq.n	8004b08 <HAL_RCCEx_PeriphCLKConfig+0x130c>
 8004ad0:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004ad4:	d822      	bhi.n	8004b1c <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d003      	beq.n	8004ae2 <HAL_RCCEx_PeriphCLKConfig+0x12e6>
 8004ada:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004ade:	d009      	beq.n	8004af4 <HAL_RCCEx_PeriphCLKConfig+0x12f8>
 8004ae0:	e01c      	b.n	8004b1c <HAL_RCCEx_PeriphCLKConfig+0x1320>
    {
      case RCC_SAI1CLKSOURCE_PLL1Q:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004ae2:	4b03      	ldr	r3, [pc, #12]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004ae4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ae6:	4a02      	ldr	r2, [pc, #8]	@ (8004af0 <HAL_RCCEx_PeriphCLKConfig+0x12f4>)
 8004ae8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004aec:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004aee:	e01c      	b.n	8004b2a <HAL_RCCEx_PeriphCLKConfig+0x132e>
 8004af0:	44020c00 	.word	0x44020c00

      case RCC_SAI1CLKSOURCE_PLL2P:  /* PLL2 is used as clock source for SAI1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004af4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004af8:	3308      	adds	r3, #8
 8004afa:	4618      	mov	r0, r3
 8004afc:	f000 fe08 	bl	8005710 <RCCEx_PLL2_Config>
 8004b00:	4603      	mov	r3, r0
 8004b02:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004b06:	e010      	b.n	8004b2a <HAL_RCCEx_PeriphCLKConfig+0x132e>

      case RCC_SAI1CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SAI1*/
        /* PLL3 P input clock, parameters M, N & P configuration clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004b08:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b0c:	3330      	adds	r3, #48	@ 0x30
 8004b0e:	4618      	mov	r0, r3
 8004b10:	f000 fe96 	bl	8005840 <RCCEx_PLL3_Config>
 8004b14:	4603      	mov	r3, r0
 8004b16:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI1 clock source config set later after clock selection check */
        break;
 8004b1a:	e006      	b.n	8004b2a <HAL_RCCEx_PeriphCLKConfig+0x132e>
      case RCC_SAI1CLKSOURCE_CLKP:      /* CLKP is used as source of SAI1 clock*/
        /* SAI1 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004b1c:	2301      	movs	r3, #1
 8004b1e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004b22:	e002      	b.n	8004b2a <HAL_RCCEx_PeriphCLKConfig+0x132e>
        break;
 8004b24:	bf00      	nop
 8004b26:	e000      	b.n	8004b2a <HAL_RCCEx_PeriphCLKConfig+0x132e>
        break;
 8004b28:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004b2a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d10d      	bne.n	8004b4e <HAL_RCCEx_PeriphCLKConfig+0x1352>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(pPeriphClkInit->Sai1ClockSelection);
 8004b32:	4bc3      	ldr	r3, [pc, #780]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004b34:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004b38:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8004b3c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b40:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8004b44:	4abe      	ldr	r2, [pc, #760]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004b46:	430b      	orrs	r3, r1
 8004b48:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004b4c:	e003      	b.n	8004b56 <HAL_RCCEx_PeriphCLKConfig+0x135a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004b4e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004b52:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SAI1*/

#if defined(SAI2)
  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2)
 8004b56:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b5e:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8004b62:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004b66:	2300      	movs	r3, #0
 8004b68:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004b6c:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8004b70:	460b      	mov	r3, r1
 8004b72:	4313      	orrs	r3, r2
 8004b74:	d051      	beq.n	8004c1a <HAL_RCCEx_PeriphCLKConfig+0x141e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(pPeriphClkInit->Sai2ClockSelection));

    switch (pPeriphClkInit->Sai2ClockSelection)
 8004b76:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004b7a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004b7e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004b82:	d033      	beq.n	8004bec <HAL_RCCEx_PeriphCLKConfig+0x13f0>
 8004b84:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004b88:	d82c      	bhi.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004b8a:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004b8e:	d02d      	beq.n	8004bec <HAL_RCCEx_PeriphCLKConfig+0x13f0>
 8004b90:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004b94:	d826      	bhi.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004b96:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004b9a:	d019      	beq.n	8004bd0 <HAL_RCCEx_PeriphCLKConfig+0x13d4>
 8004b9c:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004ba0:	d820      	bhi.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d003      	beq.n	8004bae <HAL_RCCEx_PeriphCLKConfig+0x13b2>
 8004ba6:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8004baa:	d007      	beq.n	8004bbc <HAL_RCCEx_PeriphCLKConfig+0x13c0>
 8004bac:	e01a      	b.n	8004be4 <HAL_RCCEx_PeriphCLKConfig+0x13e8>
    {
      case RCC_SAI2CLKSOURCE_PLL1Q:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004bae:	4ba4      	ldr	r3, [pc, #656]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004bb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004bb2:	4aa3      	ldr	r2, [pc, #652]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004bb4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004bb8:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004bba:	e018      	b.n	8004bee <HAL_RCCEx_PeriphCLKConfig+0x13f2>

      case RCC_SAI2CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SAI2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004bbc:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004bc0:	3308      	adds	r3, #8
 8004bc2:	4618      	mov	r0, r3
 8004bc4:	f000 fda4 	bl	8005710 <RCCEx_PLL2_Config>
 8004bc8:	4603      	mov	r3, r0
 8004bca:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004bce:	e00e      	b.n	8004bee <HAL_RCCEx_PeriphCLKConfig+0x13f2>

      case RCC_SAI2CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SAI2*/
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8004bd0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004bd4:	3330      	adds	r3, #48	@ 0x30
 8004bd6:	4618      	mov	r0, r3
 8004bd8:	f000 fe32 	bl	8005840 <RCCEx_PLL3_Config>
 8004bdc:	4603      	mov	r3, r0
 8004bde:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SAI2 clock source config set later after clock selection check */
        break;
 8004be2:	e004      	b.n	8004bee <HAL_RCCEx_PeriphCLKConfig+0x13f2>
      case RCC_SAI2CLKSOURCE_CLKP:      /* CLKP is used as source of SAI2 clock*/
        /* SAI2 clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004be4:	2301      	movs	r3, #1
 8004be6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004bea:	e000      	b.n	8004bee <HAL_RCCEx_PeriphCLKConfig+0x13f2>
        break;
 8004bec:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004bee:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d10d      	bne.n	8004c12 <HAL_RCCEx_PeriphCLKConfig+0x1416>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(pPeriphClkInit->Sai2ClockSelection);
 8004bf6:	4b92      	ldr	r3, [pc, #584]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004bf8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004bfc:	f423 1160 	bic.w	r1, r3, #3670016	@ 0x380000
 8004c00:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c04:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8004c08:	4a8d      	ldr	r2, [pc, #564]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c0a:	430b      	orrs	r3, r1
 8004c0c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004c10:	e003      	b.n	8004c1a <HAL_RCCEx_PeriphCLKConfig+0x141e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004c12:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c16:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* SAI2*/

  /*-------------------------- ADCDAC clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADCDAC) == RCC_PERIPHCLK_ADCDAC)
 8004c1a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c22:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 8004c26:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004c28:	2300      	movs	r3, #0
 8004c2a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004c2c:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8004c30:	460b      	mov	r3, r1
 8004c32:	4313      	orrs	r3, r2
 8004c34:	d032      	beq.n	8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCDACCLKSOURCE(pPeriphClkInit->AdcDacClockSelection));

    switch (pPeriphClkInit->AdcDacClockSelection)
 8004c36:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c3a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8004c3e:	2b05      	cmp	r3, #5
 8004c40:	d80f      	bhi.n	8004c62 <HAL_RCCEx_PeriphCLKConfig+0x1466>
 8004c42:	2b03      	cmp	r3, #3
 8004c44:	d211      	bcs.n	8004c6a <HAL_RCCEx_PeriphCLKConfig+0x146e>
 8004c46:	2b01      	cmp	r3, #1
 8004c48:	d911      	bls.n	8004c6e <HAL_RCCEx_PeriphCLKConfig+0x1472>
 8004c4a:	2b02      	cmp	r3, #2
 8004c4c:	d109      	bne.n	8004c62 <HAL_RCCEx_PeriphCLKConfig+0x1466>
        /* ADCDAC clock source config set later after clock selection check */
        break;

      case RCC_ADCDACCLKSOURCE_PLL2R:
        /* PLL2 input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004c4e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c52:	3308      	adds	r3, #8
 8004c54:	4618      	mov	r0, r3
 8004c56:	f000 fd5b 	bl	8005710 <RCCEx_PLL2_Config>
 8004c5a:	4603      	mov	r3, r0
 8004c5c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004c60:	e006      	b.n	8004c70 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        /* ADCDAC clock source configuration done later after clock selection check */
        break;


      default:
        ret = HAL_ERROR;
 8004c62:	2301      	movs	r3, #1
 8004c64:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004c68:	e002      	b.n	8004c70 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        break;
 8004c6a:	bf00      	nop
 8004c6c:	e000      	b.n	8004c70 <HAL_RCCEx_PeriphCLKConfig+0x1474>
        break;
 8004c6e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004c70:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c74:	2b00      	cmp	r3, #0
 8004c76:	d10d      	bne.n	8004c94 <HAL_RCCEx_PeriphCLKConfig+0x1498>
    {
      /* Configure the ADCDAC interface clock source */
      __HAL_RCC_ADCDAC_CONFIG(pPeriphClkInit->AdcDacClockSelection);
 8004c78:	4b71      	ldr	r3, [pc, #452]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c7a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004c7e:	f023 0107 	bic.w	r1, r3, #7
 8004c82:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004c86:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8004c8a:	4a6d      	ldr	r2, [pc, #436]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004c8c:	430b      	orrs	r3, r1
 8004c8e:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004c92:	e003      	b.n	8004c9c <HAL_RCCEx_PeriphCLKConfig+0x14a0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004c94:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004c98:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- DAC low-power clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DAC_LP) == RCC_PERIPHCLK_DAC_LP)
 8004c9c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004ca0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ca4:	2100      	movs	r1, #0
 8004ca6:	6739      	str	r1, [r7, #112]	@ 0x70
 8004ca8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004cac:	677b      	str	r3, [r7, #116]	@ 0x74
 8004cae:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8004cb2:	460b      	mov	r3, r1
 8004cb4:	4313      	orrs	r3, r2
 8004cb6:	d024      	beq.n	8004d02 <HAL_RCCEx_PeriphCLKConfig+0x1506>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DACLPCLKSOURCE(pPeriphClkInit->DacLowPowerClockSelection));

    switch (pPeriphClkInit->DacLowPowerClockSelection)
 8004cb8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004cbc:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d005      	beq.n	8004cd0 <HAL_RCCEx_PeriphCLKConfig+0x14d4>
 8004cc4:	2b08      	cmp	r3, #8
 8004cc6:	d005      	beq.n	8004cd4 <HAL_RCCEx_PeriphCLKConfig+0x14d8>
        /* LSI is used as clock source for DAC low-power clock */
        /* DAC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004cc8:	2301      	movs	r3, #1
 8004cca:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004cce:	e002      	b.n	8004cd6 <HAL_RCCEx_PeriphCLKConfig+0x14da>
        break;
 8004cd0:	bf00      	nop
 8004cd2:	e000      	b.n	8004cd6 <HAL_RCCEx_PeriphCLKConfig+0x14da>
        break;
 8004cd4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004cd6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004cda:	2b00      	cmp	r3, #0
 8004cdc:	d10d      	bne.n	8004cfa <HAL_RCCEx_PeriphCLKConfig+0x14fe>
    {
      /* Configure the DAC low-power interface clock source */
      __HAL_RCC_DAC_LP_CONFIG(pPeriphClkInit->DacLowPowerClockSelection);
 8004cde:	4b58      	ldr	r3, [pc, #352]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004ce0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004ce4:	f023 0108 	bic.w	r1, r3, #8
 8004ce8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004cec:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8004cf0:	4a53      	ldr	r2, [pc, #332]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004cf2:	430b      	orrs	r3, r1
 8004cf4:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004cf8:	e003      	b.n	8004d02 <HAL_RCCEx_PeriphCLKConfig+0x1506>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004cfa:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004cfe:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- RTC clock source configuration ----------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8004d02:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004d06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d0a:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8004d0e:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004d10:	2300      	movs	r3, #0
 8004d12:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004d14:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8004d18:	460b      	mov	r3, r1
 8004d1a:	4313      	orrs	r3, r2
 8004d1c:	f000 80b9 	beq.w	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x1696>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(pPeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->DBPCR, PWR_DBPCR_DBP);
 8004d20:	4b48      	ldr	r3, [pc, #288]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004d22:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d24:	4a47      	ldr	r2, [pc, #284]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004d26:	f043 0301 	orr.w	r3, r3, #1
 8004d2a:	6253      	str	r3, [r2, #36]	@ 0x24

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8004d2c:	f7fc fb12 	bl	8001354 <HAL_GetTick>
 8004d30:	f8c7 0154 	str.w	r0, [r7, #340]	@ 0x154

    while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8004d34:	e00b      	b.n	8004d4e <HAL_RCCEx_PeriphCLKConfig+0x1552>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004d36:	f7fc fb0d 	bl	8001354 <HAL_GetTick>
 8004d3a:	4602      	mov	r2, r0
 8004d3c:	f8d7 3154 	ldr.w	r3, [r7, #340]	@ 0x154
 8004d40:	1ad3      	subs	r3, r2, r3
 8004d42:	2b02      	cmp	r3, #2
 8004d44:	d903      	bls.n	8004d4e <HAL_RCCEx_PeriphCLKConfig+0x1552>
      {
        ret = HAL_TIMEOUT;
 8004d46:	2303      	movs	r3, #3
 8004d48:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004d4c:	e005      	b.n	8004d5a <HAL_RCCEx_PeriphCLKConfig+0x155e>
    while (HAL_IS_BIT_CLR(PWR->DBPCR, PWR_DBPCR_DBP))
 8004d4e:	4b3d      	ldr	r3, [pc, #244]	@ (8004e44 <HAL_RCCEx_PeriphCLKConfig+0x1648>)
 8004d50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004d52:	f003 0301 	and.w	r3, r3, #1
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	d0ed      	beq.n	8004d36 <HAL_RCCEx_PeriphCLKConfig+0x153a>
      }
    }

    if (ret == HAL_OK)
 8004d5a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004d5e:	2b00      	cmp	r3, #0
 8004d60:	f040 8093 	bne.w	8004e8a <HAL_RCCEx_PeriphCLKConfig+0x168e>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8004d64:	4b36      	ldr	r3, [pc, #216]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d66:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d6a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004d6e:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c

      if ((tmpregister != RCC_RTCCLKSOURCE_NO_CLK) && (tmpregister != pPeriphClkInit->RTCClockSelection))
 8004d72:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d023      	beq.n	8004dc2 <HAL_RCCEx_PeriphCLKConfig+0x15c6>
 8004d7a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004d7e:	f8d3 20f8 	ldr.w	r2, [r3, #248]	@ 0xf8
 8004d82:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004d86:	4293      	cmp	r3, r2
 8004d88:	d01b      	beq.n	8004dc2 <HAL_RCCEx_PeriphCLKConfig+0x15c6>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8004d8a:	4b2d      	ldr	r3, [pc, #180]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d8c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d90:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004d94:	f8c7 315c 	str.w	r3, [r7, #348]	@ 0x15c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8004d98:	4b29      	ldr	r3, [pc, #164]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004d9a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004d9e:	4a28      	ldr	r2, [pc, #160]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004da0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004da4:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        __HAL_RCC_BACKUPRESET_RELEASE();
 8004da8:	4b25      	ldr	r3, [pc, #148]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004daa:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004dae:	4a24      	ldr	r2, [pc, #144]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004db0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004db4:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 8004db8:	4a21      	ldr	r2, [pc, #132]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004dba:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004dbe:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8004dc2:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 8004dc6:	f003 0301 	and.w	r3, r3, #1
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d019      	beq.n	8004e02 <HAL_RCCEx_PeriphCLKConfig+0x1606>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004dce:	f7fc fac1 	bl	8001354 <HAL_GetTick>
 8004dd2:	f8c7 0154 	str.w	r0, [r7, #340]	@ 0x154

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004dd6:	e00d      	b.n	8004df4 <HAL_RCCEx_PeriphCLKConfig+0x15f8>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004dd8:	f7fc fabc 	bl	8001354 <HAL_GetTick>
 8004ddc:	4602      	mov	r2, r0
 8004dde:	f8d7 3154 	ldr.w	r3, [r7, #340]	@ 0x154
 8004de2:	1ad2      	subs	r2, r2, r3
 8004de4:	f241 3388 	movw	r3, #5000	@ 0x1388
 8004de8:	429a      	cmp	r2, r3
 8004dea:	d903      	bls.n	8004df4 <HAL_RCCEx_PeriphCLKConfig+0x15f8>
          {
            ret = HAL_TIMEOUT;
 8004dec:	2303      	movs	r3, #3
 8004dee:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
            break;
 8004df2:	e006      	b.n	8004e02 <HAL_RCCEx_PeriphCLKConfig+0x1606>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004df4:	4b12      	ldr	r3, [pc, #72]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004df6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004dfa:	f003 0302 	and.w	r3, r3, #2
 8004dfe:	2b00      	cmp	r3, #0
 8004e00:	d0ea      	beq.n	8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x15dc>
          }
        }
      }

      if (ret == HAL_OK)
 8004e02:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d13a      	bne.n	8004e80 <HAL_RCCEx_PeriphCLKConfig+0x1684>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(pPeriphClkInit->RTCClockSelection);
 8004e0a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e0e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004e12:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004e16:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8004e1a:	d115      	bne.n	8004e48 <HAL_RCCEx_PeriphCLKConfig+0x164c>
 8004e1c:	4b08      	ldr	r3, [pc, #32]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004e1e:	69db      	ldr	r3, [r3, #28]
 8004e20:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 8004e24:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e28:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004e2c:	091b      	lsrs	r3, r3, #4
 8004e2e:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8004e32:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 8004e36:	4a02      	ldr	r2, [pc, #8]	@ (8004e40 <HAL_RCCEx_PeriphCLKConfig+0x1644>)
 8004e38:	430b      	orrs	r3, r1
 8004e3a:	61d3      	str	r3, [r2, #28]
 8004e3c:	e00a      	b.n	8004e54 <HAL_RCCEx_PeriphCLKConfig+0x1658>
 8004e3e:	bf00      	nop
 8004e40:	44020c00 	.word	0x44020c00
 8004e44:	44020800 	.word	0x44020800
 8004e48:	4b9f      	ldr	r3, [pc, #636]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e4a:	69db      	ldr	r3, [r3, #28]
 8004e4c:	4a9e      	ldr	r2, [pc, #632]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e4e:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8004e52:	61d3      	str	r3, [r2, #28]
 8004e54:	4b9c      	ldr	r3, [pc, #624]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e56:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004e5a:	4a9b      	ldr	r2, [pc, #620]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e5c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004e60:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004e64:	4b98      	ldr	r3, [pc, #608]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e66:	f8d3 10f0 	ldr.w	r1, [r3, #240]	@ 0xf0
 8004e6a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e6e:	f8d3 30f8 	ldr.w	r3, [r3, #248]	@ 0xf8
 8004e72:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004e76:	4a94      	ldr	r2, [pc, #592]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004e78:	430b      	orrs	r3, r1
 8004e7a:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8004e7e:	e008      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x1696>
      }
      else
      {
        /* set overall return value */
        status = ret;
 8004e80:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e84:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
 8004e88:	e003      	b.n	8004e92 <HAL_RCCEx_PeriphCLKConfig+0x1696>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004e8a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004e8e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*------------------------------ RNG Configuration -------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8004e92:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004e96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e9a:	f002 6380 	and.w	r3, r2, #67108864	@ 0x4000000
 8004e9e:	663b      	str	r3, [r7, #96]	@ 0x60
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	667b      	str	r3, [r7, #100]	@ 0x64
 8004ea4:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8004ea8:	460b      	mov	r3, r1
 8004eaa:	4313      	orrs	r3, r2
 8004eac:	d035      	beq.n	8004f1a <HAL_RCCEx_PeriphCLKConfig+0x171e>
  {

    /* Check the parameters */
    assert_param(IS_RCC_RNGCLKSOURCE(pPeriphClkInit->RngClockSelection));

    switch (pPeriphClkInit->RngClockSelection)
 8004eae:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004eb2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8004eb6:	2b30      	cmp	r3, #48	@ 0x30
 8004eb8:	d014      	beq.n	8004ee4 <HAL_RCCEx_PeriphCLKConfig+0x16e8>
 8004eba:	2b30      	cmp	r3, #48	@ 0x30
 8004ebc:	d80e      	bhi.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x16e0>
 8004ebe:	2b20      	cmp	r3, #32
 8004ec0:	d012      	beq.n	8004ee8 <HAL_RCCEx_PeriphCLKConfig+0x16ec>
 8004ec2:	2b20      	cmp	r3, #32
 8004ec4:	d80a      	bhi.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x16e0>
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d010      	beq.n	8004eec <HAL_RCCEx_PeriphCLKConfig+0x16f0>
 8004eca:	2b10      	cmp	r3, #16
 8004ecc:	d106      	bne.n	8004edc <HAL_RCCEx_PeriphCLKConfig+0x16e0>
        /* RNG clock source configuration done later after clock selection check */
        break;

      case RCC_RNGCLKSOURCE_PLL1Q: /* PLL1 is used as clock source for RNG*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004ece:	4b7e      	ldr	r3, [pc, #504]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004ed0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ed2:	4a7d      	ldr	r2, [pc, #500]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004ed4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004ed8:	6293      	str	r3, [r2, #40]	@ 0x28
        /* RNG clock source configuration done later after clock selection check */
        break;
 8004eda:	e008      	b.n	8004eee <HAL_RCCEx_PeriphCLKConfig+0x16f2>

        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8004edc:	2301      	movs	r3, #1
 8004ede:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004ee2:	e004      	b.n	8004eee <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004ee4:	bf00      	nop
 8004ee6:	e002      	b.n	8004eee <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004ee8:	bf00      	nop
 8004eea:	e000      	b.n	8004eee <HAL_RCCEx_PeriphCLKConfig+0x16f2>
        break;
 8004eec:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004eee:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d10d      	bne.n	8004f12 <HAL_RCCEx_PeriphCLKConfig+0x1716>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(pPeriphClkInit->RngClockSelection);
 8004ef6:	4b74      	ldr	r3, [pc, #464]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004ef8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8004efc:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8004f00:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f04:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8004f08:	4a6f      	ldr	r2, [pc, #444]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f0a:	430b      	orrs	r3, r1
 8004f0c:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8004f10:	e003      	b.n	8004f1a <HAL_RCCEx_PeriphCLKConfig+0x171e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004f12:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f16:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }

#if defined(SDMMC1)
  /*-------------------------- SDMMC1 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8004f1a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004f22:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8004f26:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004f28:	2300      	movs	r3, #0
 8004f2a:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004f2c:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 8004f30:	460b      	mov	r3, r1
 8004f32:	4313      	orrs	r3, r2
 8004f34:	d033      	beq.n	8004f9e <HAL_RCCEx_PeriphCLKConfig+0x17a2>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(pPeriphClkInit->Sdmmc1ClockSelection));

    switch (pPeriphClkInit->Sdmmc1ClockSelection)
 8004f36:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f3a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d002      	beq.n	8004f48 <HAL_RCCEx_PeriphCLKConfig+0x174c>
 8004f42:	2b40      	cmp	r3, #64	@ 0x40
 8004f44:	d007      	beq.n	8004f56 <HAL_RCCEx_PeriphCLKConfig+0x175a>
 8004f46:	e010      	b.n	8004f6a <HAL_RCCEx_PeriphCLKConfig+0x176e>
    {
      case RCC_SDMMC1CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SDMMC1 kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004f48:	4b5f      	ldr	r3, [pc, #380]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004f4c:	4a5e      	ldr	r2, [pc, #376]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f4e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004f52:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SDMMC1 kernel clock source config set later after clock selection check */
        break;
 8004f54:	e00d      	b.n	8004f72 <HAL_RCCEx_PeriphCLKConfig+0x1776>

      case RCC_SDMMC1CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for SDMMC1 kernel clock*/
        /* PLL2R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004f56:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f5a:	3308      	adds	r3, #8
 8004f5c:	4618      	mov	r0, r3
 8004f5e:	f000 fbd7 	bl	8005710 <RCCEx_PLL2_Config>
 8004f62:	4603      	mov	r3, r0
 8004f64:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SDMMC1 kernel clock source config set later after clock selection check */
        break;
 8004f68:	e003      	b.n	8004f72 <HAL_RCCEx_PeriphCLKConfig+0x1776>

      default:
        ret = HAL_ERROR;
 8004f6a:	2301      	movs	r3, #1
 8004f6c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004f70:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004f72:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d10d      	bne.n	8004f96 <HAL_RCCEx_PeriphCLKConfig+0x179a>
    {
      /* Configure the SDMMC1 clock source */
      __HAL_RCC_SDMMC1_CONFIG(pPeriphClkInit->Sdmmc1ClockSelection);
 8004f7a:	4b53      	ldr	r3, [pc, #332]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f7c:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8004f80:	f023 0140 	bic.w	r1, r3, #64	@ 0x40
 8004f84:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004f88:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004f8c:	4a4e      	ldr	r2, [pc, #312]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004f8e:	430b      	orrs	r3, r1
 8004f90:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8004f94:	e003      	b.n	8004f9e <HAL_RCCEx_PeriphCLKConfig+0x17a2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8004f96:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004f9a:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SDMMC1 */

#if defined(SDMMC2)
  /*-------------------------- SDMMC2 clock source configuration -------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC2) == RCC_PERIPHCLK_SDMMC2)
 8004f9e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004fa6:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8004faa:	653b      	str	r3, [r7, #80]	@ 0x50
 8004fac:	2300      	movs	r3, #0
 8004fae:	657b      	str	r3, [r7, #84]	@ 0x54
 8004fb0:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8004fb4:	460b      	mov	r3, r1
 8004fb6:	4313      	orrs	r3, r2
 8004fb8:	d033      	beq.n	8005022 <HAL_RCCEx_PeriphCLKConfig+0x1826>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SDMMC2CLKSOURCE(pPeriphClkInit->Sdmmc2ClockSelection));

    switch (pPeriphClkInit->Sdmmc2ClockSelection)
 8004fba:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fbe:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8004fc2:	2b00      	cmp	r3, #0
 8004fc4:	d002      	beq.n	8004fcc <HAL_RCCEx_PeriphCLKConfig+0x17d0>
 8004fc6:	2b80      	cmp	r3, #128	@ 0x80
 8004fc8:	d007      	beq.n	8004fda <HAL_RCCEx_PeriphCLKConfig+0x17de>
 8004fca:	e010      	b.n	8004fee <HAL_RCCEx_PeriphCLKConfig+0x17f2>
    {
      case RCC_SDMMC2CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SDMMC2 kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8004fcc:	4b3e      	ldr	r3, [pc, #248]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004fce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fd0:	4a3d      	ldr	r2, [pc, #244]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8004fd2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004fd6:	6293      	str	r3, [r2, #40]	@ 0x28
        /* SDMMC2 kernel clock source config set later after clock selection check */
        break;
 8004fd8:	e00d      	b.n	8004ff6 <HAL_RCCEx_PeriphCLKConfig+0x17fa>

      case RCC_SDMMC2CLKSOURCE_PLL2R:  /* PLL2 is used as clock source for SDMMC2 kernel clock*/
        /* PLL2R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8004fda:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8004fde:	3308      	adds	r3, #8
 8004fe0:	4618      	mov	r0, r3
 8004fe2:	f000 fb95 	bl	8005710 <RCCEx_PLL2_Config>
 8004fe6:	4603      	mov	r3, r0
 8004fe8:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* SDMMC2 kernel clock source config set later after clock selection check */
        break;
 8004fec:	e003      	b.n	8004ff6 <HAL_RCCEx_PeriphCLKConfig+0x17fa>

      default:
        ret = HAL_ERROR;
 8004fee:	2301      	movs	r3, #1
 8004ff0:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8004ff4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8004ff6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	d10d      	bne.n	800501a <HAL_RCCEx_PeriphCLKConfig+0x181e>
    {
      /* Configure the SDMMC2 clock source */
      __HAL_RCC_SDMMC2_CONFIG(pPeriphClkInit->Sdmmc2ClockSelection);
 8004ffe:	4b32      	ldr	r3, [pc, #200]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8005000:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005004:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8005008:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800500c:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 8005010:	4a2d      	ldr	r2, [pc, #180]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8005012:	430b      	orrs	r3, r1
 8005014:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8005018:	e003      	b.n	8005022 <HAL_RCCEx_PeriphCLKConfig+0x1826>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800501a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800501e:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }
#endif /* SDMMC2 */

  /*-------------------------- SPI1 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI1) == RCC_PERIPHCLK_SPI1)
 8005022:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005026:	e9d3 2300 	ldrd	r2, r3, [r3]
 800502a:	f002 6300 	and.w	r3, r2, #134217728	@ 0x8000000
 800502e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005030:	2300      	movs	r3, #0
 8005032:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005034:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8005038:	460b      	mov	r3, r1
 800503a:	4313      	orrs	r3, r2
 800503c:	d04a      	beq.n	80050d4 <HAL_RCCEx_PeriphCLKConfig+0x18d8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI1CLKSOURCE(pPeriphClkInit->Spi1ClockSelection));

    switch (pPeriphClkInit->Spi1ClockSelection)
 800503e:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005042:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005046:	2b04      	cmp	r3, #4
 8005048:	d827      	bhi.n	800509a <HAL_RCCEx_PeriphCLKConfig+0x189e>
 800504a:	a201      	add	r2, pc, #4	@ (adr r2, 8005050 <HAL_RCCEx_PeriphCLKConfig+0x1854>)
 800504c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005050:	08005065 	.word	0x08005065
 8005054:	08005073 	.word	0x08005073
 8005058:	08005087 	.word	0x08005087
 800505c:	080050a3 	.word	0x080050a3
 8005060:	080050a3 	.word	0x080050a3
    {
      case RCC_SPI1CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI1 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005064:	4b18      	ldr	r3, [pc, #96]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 8005066:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005068:	4a17      	ldr	r2, [pc, #92]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 800506a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800506e:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 8005070:	e018      	b.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x18a8>

      case RCC_SPI1CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI1*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005072:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005076:	3308      	adds	r3, #8
 8005078:	4618      	mov	r0, r3
 800507a:	f000 fb49 	bl	8005710 <RCCEx_PLL2_Config>
 800507e:	4603      	mov	r3, r0
 8005080:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 8005084:	e00e      	b.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x18a8>

#if defined(RCC_SPI1CLKSOURCE_PLL3P)
      case RCC_SPI1CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI1 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005086:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800508a:	3330      	adds	r3, #48	@ 0x30
 800508c:	4618      	mov	r0, r3
 800508e:	f000 fbd7 	bl	8005840 <RCCEx_PLL3_Config>
 8005092:	4603      	mov	r3, r0
 8005094:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI1 clock source configuration done later after clock selection check */
        break;
 8005098:	e004      	b.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x18a8>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1 clock */
        /* SPI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800509a:	2301      	movs	r3, #1
 800509c:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80050a0:	e000      	b.n	80050a4 <HAL_RCCEx_PeriphCLKConfig+0x18a8>
        break;
 80050a2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80050a4:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	d10f      	bne.n	80050cc <HAL_RCCEx_PeriphCLKConfig+0x18d0>
    {
      /* Configure the SPI1 clock source */
      __HAL_RCC_SPI1_CONFIG(pPeriphClkInit->Spi1ClockSelection);
 80050ac:	4b06      	ldr	r3, [pc, #24]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 80050ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80050b2:	f023 0107 	bic.w	r1, r3, #7
 80050b6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80050ba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80050be:	4a02      	ldr	r2, [pc, #8]	@ (80050c8 <HAL_RCCEx_PeriphCLKConfig+0x18cc>)
 80050c0:	430b      	orrs	r3, r1
 80050c2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80050c6:	e005      	b.n	80050d4 <HAL_RCCEx_PeriphCLKConfig+0x18d8>
 80050c8:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 80050cc:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80050d0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- SPI2 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI2) == RCC_PERIPHCLK_SPI2)
 80050d4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80050d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80050dc:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 80050e0:	643b      	str	r3, [r7, #64]	@ 0x40
 80050e2:	2300      	movs	r3, #0
 80050e4:	647b      	str	r3, [r7, #68]	@ 0x44
 80050e6:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 80050ea:	460b      	mov	r3, r1
 80050ec:	4313      	orrs	r3, r2
 80050ee:	f000 8081 	beq.w	80051f4 <HAL_RCCEx_PeriphCLKConfig+0x19f8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI2CLKSOURCE(pPeriphClkInit->Spi2ClockSelection));

    switch (pPeriphClkInit->Spi2ClockSelection)
 80050f2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80050f6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80050fa:	2b20      	cmp	r3, #32
 80050fc:	d85f      	bhi.n	80051be <HAL_RCCEx_PeriphCLKConfig+0x19c2>
 80050fe:	a201      	add	r2, pc, #4	@ (adr r2, 8005104 <HAL_RCCEx_PeriphCLKConfig+0x1908>)
 8005100:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005104:	08005189 	.word	0x08005189
 8005108:	080051bf 	.word	0x080051bf
 800510c:	080051bf 	.word	0x080051bf
 8005110:	080051bf 	.word	0x080051bf
 8005114:	080051bf 	.word	0x080051bf
 8005118:	080051bf 	.word	0x080051bf
 800511c:	080051bf 	.word	0x080051bf
 8005120:	080051bf 	.word	0x080051bf
 8005124:	08005197 	.word	0x08005197
 8005128:	080051bf 	.word	0x080051bf
 800512c:	080051bf 	.word	0x080051bf
 8005130:	080051bf 	.word	0x080051bf
 8005134:	080051bf 	.word	0x080051bf
 8005138:	080051bf 	.word	0x080051bf
 800513c:	080051bf 	.word	0x080051bf
 8005140:	080051bf 	.word	0x080051bf
 8005144:	080051ab 	.word	0x080051ab
 8005148:	080051bf 	.word	0x080051bf
 800514c:	080051bf 	.word	0x080051bf
 8005150:	080051bf 	.word	0x080051bf
 8005154:	080051bf 	.word	0x080051bf
 8005158:	080051bf 	.word	0x080051bf
 800515c:	080051bf 	.word	0x080051bf
 8005160:	080051bf 	.word	0x080051bf
 8005164:	080051c7 	.word	0x080051c7
 8005168:	080051bf 	.word	0x080051bf
 800516c:	080051bf 	.word	0x080051bf
 8005170:	080051bf 	.word	0x080051bf
 8005174:	080051bf 	.word	0x080051bf
 8005178:	080051bf 	.word	0x080051bf
 800517c:	080051bf 	.word	0x080051bf
 8005180:	080051bf 	.word	0x080051bf
 8005184:	080051c7 	.word	0x080051c7
    {
      case RCC_SPI2CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI2 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8005188:	4bab      	ldr	r3, [pc, #684]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800518a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800518c:	4aaa      	ldr	r2, [pc, #680]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800518e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005192:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 8005194:	e018      	b.n	80051c8 <HAL_RCCEx_PeriphCLKConfig+0x19cc>

      case RCC_SPI2CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI2*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 8005196:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800519a:	3308      	adds	r3, #8
 800519c:	4618      	mov	r0, r3
 800519e:	f000 fab7 	bl	8005710 <RCCEx_PLL2_Config>
 80051a2:	4603      	mov	r3, r0
 80051a4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 80051a8:	e00e      	b.n	80051c8 <HAL_RCCEx_PeriphCLKConfig+0x19cc>

#if defined(RCC_SPI2CLKSOURCE_PLL3P)
      case RCC_SPI2CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI2 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80051aa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80051ae:	3330      	adds	r3, #48	@ 0x30
 80051b0:	4618      	mov	r0, r3
 80051b2:	f000 fb45 	bl	8005840 <RCCEx_PLL3_Config>
 80051b6:	4603      	mov	r3, r0
 80051b8:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI2 clock source configuration done later after clock selection check */
        break;
 80051bc:	e004      	b.n	80051c8 <HAL_RCCEx_PeriphCLKConfig+0x19cc>
        /* HSI, HSE, or CSI oscillator is used as source of SPI2 clock */
        /* SPI2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80051be:	2301      	movs	r3, #1
 80051c0:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80051c4:	e000      	b.n	80051c8 <HAL_RCCEx_PeriphCLKConfig+0x19cc>
        break;
 80051c6:	bf00      	nop
    }

    if (ret == HAL_OK)
 80051c8:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80051cc:	2b00      	cmp	r3, #0
 80051ce:	d10d      	bne.n	80051ec <HAL_RCCEx_PeriphCLKConfig+0x19f0>
    {
      /* Configure the SPI2 clock source */
      __HAL_RCC_SPI2_CONFIG(pPeriphClkInit->Spi2ClockSelection);
 80051d0:	4b99      	ldr	r3, [pc, #612]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80051d2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80051d6:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 80051da:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80051de:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80051e2:	4a95      	ldr	r2, [pc, #596]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 80051e4:	430b      	orrs	r3, r1
 80051e6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80051ea:	e003      	b.n	80051f4 <HAL_RCCEx_PeriphCLKConfig+0x19f8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80051ec:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80051f0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }

  }

  /*-------------------------- SPI3 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3) == RCC_PERIPHCLK_SPI3)
 80051f4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80051f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051fc:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8005200:	63bb      	str	r3, [r7, #56]	@ 0x38
 8005202:	2300      	movs	r3, #0
 8005204:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005206:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 800520a:	460b      	mov	r3, r1
 800520c:	4313      	orrs	r3, r2
 800520e:	d04e      	beq.n	80052ae <HAL_RCCEx_PeriphCLKConfig+0x1ab2>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI3CLKSOURCE(pPeriphClkInit->Spi3ClockSelection));

    switch (pPeriphClkInit->Spi3ClockSelection)
 8005210:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005214:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005218:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800521c:	d02e      	beq.n	800527c <HAL_RCCEx_PeriphCLKConfig+0x1a80>
 800521e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8005222:	d827      	bhi.n	8005274 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 8005224:	2bc0      	cmp	r3, #192	@ 0xc0
 8005226:	d02b      	beq.n	8005280 <HAL_RCCEx_PeriphCLKConfig+0x1a84>
 8005228:	2bc0      	cmp	r3, #192	@ 0xc0
 800522a:	d823      	bhi.n	8005274 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 800522c:	2b80      	cmp	r3, #128	@ 0x80
 800522e:	d017      	beq.n	8005260 <HAL_RCCEx_PeriphCLKConfig+0x1a64>
 8005230:	2b80      	cmp	r3, #128	@ 0x80
 8005232:	d81f      	bhi.n	8005274 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
 8005234:	2b00      	cmp	r3, #0
 8005236:	d002      	beq.n	800523e <HAL_RCCEx_PeriphCLKConfig+0x1a42>
 8005238:	2b40      	cmp	r3, #64	@ 0x40
 800523a:	d007      	beq.n	800524c <HAL_RCCEx_PeriphCLKConfig+0x1a50>
 800523c:	e01a      	b.n	8005274 <HAL_RCCEx_PeriphCLKConfig+0x1a78>
    {
      case RCC_SPI3CLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for SPI3 */
        /* Enable SPI Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800523e:	4b7e      	ldr	r3, [pc, #504]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005240:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005242:	4a7d      	ldr	r2, [pc, #500]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005244:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005248:	6293      	str	r3, [r2, #40]	@ 0x28

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 800524a:	e01a      	b.n	8005282 <HAL_RCCEx_PeriphCLKConfig+0x1a86>

      case RCC_SPI3CLKSOURCE_PLL2P: /* PLL2 is used as clock source for SPI3*/
        /* PLL2 P input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800524c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005250:	3308      	adds	r3, #8
 8005252:	4618      	mov	r0, r3
 8005254:	f000 fa5c 	bl	8005710 <RCCEx_PLL2_Config>
 8005258:	4603      	mov	r3, r0
 800525a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 800525e:	e010      	b.n	8005282 <HAL_RCCEx_PeriphCLKConfig+0x1a86>

#if defined(RCC_SPI3CLKSOURCE_PLL3P)
      case RCC_SPI3CLKSOURCE_PLL3P:  /* PLL3 is used as clock source for SPI3 */
        /* PLL3 P input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005260:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005264:	3330      	adds	r3, #48	@ 0x30
 8005266:	4618      	mov	r0, r3
 8005268:	f000 faea 	bl	8005840 <RCCEx_PLL3_Config>
 800526c:	4603      	mov	r3, r0
 800526e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI3 clock source configuration done later after clock selection check */
        break;
 8005272:	e006      	b.n	8005282 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        /* HSI, HSE, or CSI oscillator is used as source of SPI3 clock */
        /* SPI3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005274:	2301      	movs	r3, #1
 8005276:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800527a:	e002      	b.n	8005282 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        break;
 800527c:	bf00      	nop
 800527e:	e000      	b.n	8005282 <HAL_RCCEx_PeriphCLKConfig+0x1a86>
        break;
 8005280:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005282:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005286:	2b00      	cmp	r3, #0
 8005288:	d10d      	bne.n	80052a6 <HAL_RCCEx_PeriphCLKConfig+0x1aaa>
    {
      /* Configure the SPI3 clock source */
      __HAL_RCC_SPI3_CONFIG(pPeriphClkInit->Spi3ClockSelection);
 800528a:	4b6b      	ldr	r3, [pc, #428]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800528c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005290:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8005294:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005298:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800529c:	4a66      	ldr	r2, [pc, #408]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800529e:	430b      	orrs	r3, r1
 80052a0:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80052a4:	e003      	b.n	80052ae <HAL_RCCEx_PeriphCLKConfig+0x1ab2>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80052a6:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80052aa:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a

  }

#if defined(SPI4)
  /*-------------------------- SPI4 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI4) == RCC_PERIPHCLK_SPI4)
 80052ae:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80052b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052b6:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 80052ba:	633b      	str	r3, [r7, #48]	@ 0x30
 80052bc:	2300      	movs	r3, #0
 80052be:	637b      	str	r3, [r7, #52]	@ 0x34
 80052c0:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 80052c4:	460b      	mov	r3, r1
 80052c6:	4313      	orrs	r3, r2
 80052c8:	d055      	beq.n	8005376 <HAL_RCCEx_PeriphCLKConfig+0x1b7a>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI4CLKSOURCE(pPeriphClkInit->Spi4ClockSelection));

    switch (pPeriphClkInit->Spi4ClockSelection)
 80052ca:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80052ce:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 80052d2:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 80052d6:	d031      	beq.n	800533c <HAL_RCCEx_PeriphCLKConfig+0x1b40>
 80052d8:	f5b3 6f20 	cmp.w	r3, #2560	@ 0xa00
 80052dc:	d82a      	bhi.n	8005334 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 80052de:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80052e2:	d02d      	beq.n	8005340 <HAL_RCCEx_PeriphCLKConfig+0x1b44>
 80052e4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80052e8:	d824      	bhi.n	8005334 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 80052ea:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 80052ee:	d029      	beq.n	8005344 <HAL_RCCEx_PeriphCLKConfig+0x1b48>
 80052f0:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 80052f4:	d81e      	bhi.n	8005334 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 80052f6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80052fa:	d011      	beq.n	8005320 <HAL_RCCEx_PeriphCLKConfig+0x1b24>
 80052fc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005300:	d818      	bhi.n	8005334 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
 8005302:	2b00      	cmp	r3, #0
 8005304:	d020      	beq.n	8005348 <HAL_RCCEx_PeriphCLKConfig+0x1b4c>
 8005306:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800530a:	d113      	bne.n	8005334 <HAL_RCCEx_PeriphCLKConfig+0x1b38>
        /* SPI4 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI4CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI4*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800530c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005310:	3308      	adds	r3, #8
 8005312:	4618      	mov	r0, r3
 8005314:	f000 f9fc 	bl	8005710 <RCCEx_PLL2_Config>
 8005318:	4603      	mov	r3, r0
 800531a:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI4 clock source configuration done later after clock selection check */
        break;
 800531e:	e014      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>

      case RCC_SPI4CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI4 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 8005320:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005324:	3330      	adds	r3, #48	@ 0x30
 8005326:	4618      	mov	r0, r3
 8005328:	f000 fa8a 	bl	8005840 <RCCEx_PLL3_Config>
 800532c:	4603      	mov	r3, r0
 800532e:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI4 clock source configuration done later after clock selection check */
        break;
 8005332:	e00a      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        /*  HSE oscillator is used as source of SPI4 clock */
        /* SPI4 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8005334:	2301      	movs	r3, #1
 8005336:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 800533a:	e006      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 800533c:	bf00      	nop
 800533e:	e004      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 8005340:	bf00      	nop
 8005342:	e002      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 8005344:	bf00      	nop
 8005346:	e000      	b.n	800534a <HAL_RCCEx_PeriphCLKConfig+0x1b4e>
        break;
 8005348:	bf00      	nop
    }

    if (ret == HAL_OK)
 800534a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800534e:	2b00      	cmp	r3, #0
 8005350:	d10d      	bne.n	800536e <HAL_RCCEx_PeriphCLKConfig+0x1b72>
    {
      /* Configure the SPI4 clock source */
      __HAL_RCC_SPI4_CONFIG(pPeriphClkInit->Spi4ClockSelection);
 8005352:	4b39      	ldr	r3, [pc, #228]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005354:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005358:	f423 6160 	bic.w	r1, r3, #3584	@ 0xe00
 800535c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005360:	f8d3 30ec 	ldr.w	r3, [r3, #236]	@ 0xec
 8005364:	4a34      	ldr	r2, [pc, #208]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 8005366:	430b      	orrs	r3, r1
 8005368:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800536c:	e003      	b.n	8005376 <HAL_RCCEx_PeriphCLKConfig+0x1b7a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800536e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005372:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI4 */

#if defined(SPI5)
  /*-------------------------- SPI5 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI5) == RCC_PERIPHCLK_SPI5)
 8005376:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800537a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800537e:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8005382:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005384:	2300      	movs	r3, #0
 8005386:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005388:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 800538c:	460b      	mov	r3, r1
 800538e:	4313      	orrs	r3, r2
 8005390:	d058      	beq.n	8005444 <HAL_RCCEx_PeriphCLKConfig+0x1c48>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI5CLKSOURCE(pPeriphClkInit->Spi5ClockSelection));

    switch (pPeriphClkInit->Spi5ClockSelection)
 8005392:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005396:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800539a:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 800539e:	d031      	beq.n	8005404 <HAL_RCCEx_PeriphCLKConfig+0x1c08>
 80053a0:	f5b3 4fa0 	cmp.w	r3, #20480	@ 0x5000
 80053a4:	d82a      	bhi.n	80053fc <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 80053a6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80053aa:	d02d      	beq.n	8005408 <HAL_RCCEx_PeriphCLKConfig+0x1c0c>
 80053ac:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80053b0:	d824      	bhi.n	80053fc <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 80053b2:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80053b6:	d029      	beq.n	800540c <HAL_RCCEx_PeriphCLKConfig+0x1c10>
 80053b8:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80053bc:	d81e      	bhi.n	80053fc <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 80053be:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80053c2:	d011      	beq.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x1bec>
 80053c4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80053c8:	d818      	bhi.n	80053fc <HAL_RCCEx_PeriphCLKConfig+0x1c00>
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	d020      	beq.n	8005410 <HAL_RCCEx_PeriphCLKConfig+0x1c14>
 80053ce:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80053d2:	d113      	bne.n	80053fc <HAL_RCCEx_PeriphCLKConfig+0x1c00>
        /* SPI5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI5CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI5*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80053d4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80053d8:	3308      	adds	r3, #8
 80053da:	4618      	mov	r0, r3
 80053dc:	f000 f998 	bl	8005710 <RCCEx_PLL2_Config>
 80053e0:	4603      	mov	r3, r0
 80053e2:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI5 clock source configuration done later after clock selection check */
        break;
 80053e6:	e014      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>

      case RCC_SPI5CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI5 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80053e8:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80053ec:	3330      	adds	r3, #48	@ 0x30
 80053ee:	4618      	mov	r0, r3
 80053f0:	f000 fa26 	bl	8005840 <RCCEx_PLL3_Config>
 80053f4:	4603      	mov	r3, r0
 80053f6:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI5 clock source configuration done later after clock selection check */
        break;
 80053fa:	e00a      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        /*  HSE oscillator is used as source of SPI5 clock */
        /* SPI5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80053fc:	2301      	movs	r3, #1
 80053fe:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005402:	e006      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 8005404:	bf00      	nop
 8005406:	e004      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 8005408:	bf00      	nop
 800540a:	e002      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 800540c:	bf00      	nop
 800540e:	e000      	b.n	8005412 <HAL_RCCEx_PeriphCLKConfig+0x1c16>
        break;
 8005410:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005412:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005416:	2b00      	cmp	r3, #0
 8005418:	d110      	bne.n	800543c <HAL_RCCEx_PeriphCLKConfig+0x1c40>
    {
      /* Configure the SPI5 clock source */
      __HAL_RCC_SPI5_CONFIG(pPeriphClkInit->Spi5ClockSelection);
 800541a:	4b07      	ldr	r3, [pc, #28]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800541c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8005420:	f423 42e0 	bic.w	r2, r3, #28672	@ 0x7000
 8005424:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005428:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800542c:	4902      	ldr	r1, [pc, #8]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x1c3c>)
 800542e:	4313      	orrs	r3, r2
 8005430:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 8005434:	e006      	b.n	8005444 <HAL_RCCEx_PeriphCLKConfig+0x1c48>
 8005436:	bf00      	nop
 8005438:	44020c00 	.word	0x44020c00
    }
    else
    {
      /* set overall return value */
      status = ret;
 800543c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005440:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI5 */

#if defined(SPI6)
  /*-------------------------- SPI6 clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8005444:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005448:	e9d3 2300 	ldrd	r2, r3, [r3]
 800544c:	2100      	movs	r1, #0
 800544e:	6239      	str	r1, [r7, #32]
 8005450:	f003 0301 	and.w	r3, r3, #1
 8005454:	627b      	str	r3, [r7, #36]	@ 0x24
 8005456:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 800545a:	460b      	mov	r3, r1
 800545c:	4313      	orrs	r3, r2
 800545e:	d055      	beq.n	800550c <HAL_RCCEx_PeriphCLKConfig+0x1d10>
  {

    /* Check the parameters */
    assert_param(IS_RCC_SPI6CLKSOURCE(pPeriphClkInit->Spi6ClockSelection));

    switch (pPeriphClkInit->Spi6ClockSelection)
 8005460:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005464:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8005468:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 800546c:	d031      	beq.n	80054d2 <HAL_RCCEx_PeriphCLKConfig+0x1cd6>
 800546e:	f5b3 3f20 	cmp.w	r3, #163840	@ 0x28000
 8005472:	d82a      	bhi.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005474:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005478:	d02d      	beq.n	80054d6 <HAL_RCCEx_PeriphCLKConfig+0x1cda>
 800547a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800547e:	d824      	bhi.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005480:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 8005484:	d029      	beq.n	80054da <HAL_RCCEx_PeriphCLKConfig+0x1cde>
 8005486:	f5b3 3fc0 	cmp.w	r3, #98304	@ 0x18000
 800548a:	d81e      	bhi.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 800548c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005490:	d011      	beq.n	80054b6 <HAL_RCCEx_PeriphCLKConfig+0x1cba>
 8005492:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005496:	d818      	bhi.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x1cce>
 8005498:	2b00      	cmp	r3, #0
 800549a:	d020      	beq.n	80054de <HAL_RCCEx_PeriphCLKConfig+0x1ce2>
 800549c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80054a0:	d113      	bne.n	80054ca <HAL_RCCEx_PeriphCLKConfig+0x1cce>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2Q: /* PLL2 is used as clock source for SPI6*/
        /* PLL2 Q input clock, parameters M, N & P configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80054a2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80054a6:	3308      	adds	r3, #8
 80054a8:	4618      	mov	r0, r3
 80054aa:	f000 f931 	bl	8005710 <RCCEx_PLL2_Config>
 80054ae:	4603      	mov	r3, r0
 80054b0:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80054b4:	e014      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>

      case RCC_SPI6CLKSOURCE_PLL3Q:  /* PLL3 is used as clock source for SPI6 */
        /* PLL3 Q input clock, parameters M, N & P configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 80054b6:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80054ba:	3330      	adds	r3, #48	@ 0x30
 80054bc:	4618      	mov	r0, r3
 80054be:	f000 f9bf 	bl	8005840 <RCCEx_PLL3_Config>
 80054c2:	4603      	mov	r3, r0
 80054c4:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 80054c8:	e00a      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        /*  HSE oscillator is used as source of SPI6 clock */
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80054ca:	2301      	movs	r3, #1
 80054cc:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 80054d0:	e006      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 80054d2:	bf00      	nop
 80054d4:	e004      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 80054d6:	bf00      	nop
 80054d8:	e002      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 80054da:	bf00      	nop
 80054dc:	e000      	b.n	80054e0 <HAL_RCCEx_PeriphCLKConfig+0x1ce4>
        break;
 80054de:	bf00      	nop
    }

    if (ret == HAL_OK)
 80054e0:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	d10d      	bne.n	8005504 <HAL_RCCEx_PeriphCLKConfig+0x1d08>
    {
      /* Configure the SPI6 clock source */
      __HAL_RCC_SPI6_CONFIG(pPeriphClkInit->Spi6ClockSelection);
 80054e8:	4b88      	ldr	r3, [pc, #544]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80054ea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80054ee:	f423 3260 	bic.w	r2, r3, #229376	@ 0x38000
 80054f2:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80054f6:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80054fa:	4984      	ldr	r1, [pc, #528]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80054fc:	4313      	orrs	r3, r2
 80054fe:	f8c1 30e0 	str.w	r3, [r1, #224]	@ 0xe0
 8005502:	e003      	b.n	800550c <HAL_RCCEx_PeriphCLKConfig+0x1d10>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8005504:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005508:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* SPI6 */

#if defined(OCTOSPI1)
  /*-------------------------- OctoSPIx clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 800550c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005510:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005514:	2100      	movs	r1, #0
 8005516:	61b9      	str	r1, [r7, #24]
 8005518:	f003 0302 	and.w	r3, r3, #2
 800551c:	61fb      	str	r3, [r7, #28]
 800551e:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8005522:	460b      	mov	r3, r1
 8005524:	4313      	orrs	r3, r2
 8005526:	d03d      	beq.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1da8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_OSPICLKSOURCE(pPeriphClkInit->OspiClockSelection));

    switch (pPeriphClkInit->OspiClockSelection)
 8005528:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800552c:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8005530:	2b03      	cmp	r3, #3
 8005532:	d81c      	bhi.n	800556e <HAL_RCCEx_PeriphCLKConfig+0x1d72>
 8005534:	a201      	add	r2, pc, #4	@ (adr r2, 800553c <HAL_RCCEx_PeriphCLKConfig+0x1d40>)
 8005536:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800553a:	bf00      	nop
 800553c:	08005577 	.word	0x08005577
 8005540:	0800554d 	.word	0x0800554d
 8005544:	0800555b 	.word	0x0800555b
 8005548:	08005577 	.word	0x08005577
        break;

      case RCC_OSPICLKSOURCE_PLL1Q:  /* PLL1 Q is used as clock source for OCTOSPI*/

        /* Enable PLL1 Q CLK output */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800554c:	4b6f      	ldr	r3, [pc, #444]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 800554e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005550:	4a6e      	ldr	r2, [pc, #440]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005552:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005556:	6293      	str	r3, [r2, #40]	@ 0x28
        break;
 8005558:	e00e      	b.n	8005578 <HAL_RCCEx_PeriphCLKConfig+0x1d7c>

      case RCC_OSPICLKSOURCE_PLL2R:  /* PLL2 is used as clock source for OCTOSPI*/
        /* PLL2 R input clock, parameters M, N & R configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 800555a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800555e:	3308      	adds	r3, #8
 8005560:	4618      	mov	r0, r3
 8005562:	f000 f8d5 	bl	8005710 <RCCEx_PLL2_Config>
 8005566:	4603      	mov	r3, r0
 8005568:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* OCTOSPI clock source config set later after clock selection check */
        break;
 800556c:	e004      	b.n	8005578 <HAL_RCCEx_PeriphCLKConfig+0x1d7c>
      case RCC_OSPICLKSOURCE_CLKP:  /* CLKP is used as source of OCTOSPI clock*/
        /* OCTOSPI clock source config set later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800556e:	2301      	movs	r3, #1
 8005570:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005574:	e000      	b.n	8005578 <HAL_RCCEx_PeriphCLKConfig+0x1d7c>
        break;
 8005576:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005578:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800557c:	2b00      	cmp	r3, #0
 800557e:	d10d      	bne.n	800559c <HAL_RCCEx_PeriphCLKConfig+0x1da0>
    {
      /* Configure the OctoSPI clock source */
      __HAL_RCC_OSPI_CONFIG(pPeriphClkInit->OspiClockSelection);
 8005580:	4b62      	ldr	r3, [pc, #392]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005582:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8005586:	f023 0203 	bic.w	r2, r3, #3
 800558a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800558e:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 8005592:	495e      	ldr	r1, [pc, #376]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005594:	4313      	orrs	r3, r2
 8005596:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 800559a:	e003      	b.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x1da8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800559c:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80055a0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }
#endif /* OCTOSPI1*/

  /*-------------------------- FDCAN kernel clock source configuration -------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 80055a4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055ac:	2100      	movs	r1, #0
 80055ae:	6139      	str	r1, [r7, #16]
 80055b0:	f003 0304 	and.w	r3, r3, #4
 80055b4:	617b      	str	r3, [r7, #20]
 80055b6:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 80055ba:	460b      	mov	r3, r1
 80055bc:	4313      	orrs	r3, r2
 80055be:	d03a      	beq.n	8005636 <HAL_RCCEx_PeriphCLKConfig+0x1e3a>
  {
    assert_param(IS_RCC_FDCANCLK(pPeriphClkInit->FdcanClockSelection));

    switch (pPeriphClkInit->FdcanClockSelection)
 80055c0:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055c4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 80055c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80055cc:	d00e      	beq.n	80055ec <HAL_RCCEx_PeriphCLKConfig+0x1df0>
 80055ce:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80055d2:	d815      	bhi.n	8005600 <HAL_RCCEx_PeriphCLKConfig+0x1e04>
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	d017      	beq.n	8005608 <HAL_RCCEx_PeriphCLKConfig+0x1e0c>
 80055d8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80055dc:	d110      	bne.n	8005600 <HAL_RCCEx_PeriphCLKConfig+0x1e04>
        /* FDCAN kernel clock source config set later after clock selection check */
        break;

      case RCC_FDCANCLKSOURCE_PLL1Q:      /* PLL1 is used as clock source for FDCAN kernel clock*/
        /* Enable PLL1Q Clock output generated from System PLL . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80055de:	4b4b      	ldr	r3, [pc, #300]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80055e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80055e2:	4a4a      	ldr	r2, [pc, #296]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80055e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80055e8:	6293      	str	r3, [r2, #40]	@ 0x28
        /* FDCAN kernel clock source config set later after clock selection check */
        break;
 80055ea:	e00e      	b.n	800560a <HAL_RCCEx_PeriphCLKConfig+0x1e0e>

      case RCC_FDCANCLKSOURCE_PLL2Q:  /* PLL2 is used as clock source for FDCAN kernel clock*/
        /* PLL2Q input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
 80055ec:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80055f0:	3308      	adds	r3, #8
 80055f2:	4618      	mov	r0, r3
 80055f4:	f000 f88c 	bl	8005710 <RCCEx_PLL2_Config>
 80055f8:	4603      	mov	r3, r0
 80055fa:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        /* FDCAN kernel clock source config set later after clock selection check */
        break;
 80055fe:	e004      	b.n	800560a <HAL_RCCEx_PeriphCLKConfig+0x1e0e>

      default:
        ret = HAL_ERROR;
 8005600:	2301      	movs	r3, #1
 8005602:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005606:	e000      	b.n	800560a <HAL_RCCEx_PeriphCLKConfig+0x1e0e>
        break;
 8005608:	bf00      	nop
    }

    if (ret == HAL_OK)
 800560a:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800560e:	2b00      	cmp	r3, #0
 8005610:	d10d      	bne.n	800562e <HAL_RCCEx_PeriphCLKConfig+0x1e32>
    {
      /* Set the source of FDCAN kernel clock*/
      __HAL_RCC_FDCAN_CONFIG(pPeriphClkInit->FdcanClockSelection);
 8005612:	4b3e      	ldr	r3, [pc, #248]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005614:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005618:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800561c:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005620:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8005624:	4939      	ldr	r1, [pc, #228]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005626:	4313      	orrs	r3, r2
 8005628:	f8c1 30e8 	str.w	r3, [r1, #232]	@ 0xe8
 800562c:	e003      	b.n	8005636 <HAL_RCCEx_PeriphCLKConfig+0x1e3a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800562e:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 8005632:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
    }
  }

#if defined(USB_DRD_FS)
  /*------------------------------ USB Configuration -------------------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8005636:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800563a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800563e:	2100      	movs	r1, #0
 8005640:	60b9      	str	r1, [r7, #8]
 8005642:	f003 0310 	and.w	r3, r3, #16
 8005646:	60fb      	str	r3, [r7, #12]
 8005648:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 800564c:	460b      	mov	r3, r1
 800564e:	4313      	orrs	r3, r2
 8005650:	d038      	beq.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x1ec8>
  {

    /* Check the parameters */
    assert_param(IS_RCC_USBCLKSOURCE(pPeriphClkInit->UsbClockSelection));

    switch (pPeriphClkInit->UsbClockSelection)
 8005652:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 8005656:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 800565a:	2b30      	cmp	r3, #48	@ 0x30
 800565c:	d01b      	beq.n	8005696 <HAL_RCCEx_PeriphCLKConfig+0x1e9a>
 800565e:	2b30      	cmp	r3, #48	@ 0x30
 8005660:	d815      	bhi.n	800568e <HAL_RCCEx_PeriphCLKConfig+0x1e92>
 8005662:	2b10      	cmp	r3, #16
 8005664:	d002      	beq.n	800566c <HAL_RCCEx_PeriphCLKConfig+0x1e70>
 8005666:	2b20      	cmp	r3, #32
 8005668:	d007      	beq.n	800567a <HAL_RCCEx_PeriphCLKConfig+0x1e7e>
 800566a:	e010      	b.n	800568e <HAL_RCCEx_PeriphCLKConfig+0x1e92>
    {
      case RCC_USBCLKSOURCE_PLL1Q:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLL1_CLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800566c:	4b27      	ldr	r3, [pc, #156]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 800566e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005670:	4a26      	ldr	r2, [pc, #152]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 8005672:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005676:	6293      	str	r3, [r2, #40]	@ 0x28

        /* USB clock source configuration done later after clock selection check */
        break;
 8005678:	e00e      	b.n	8005698 <HAL_RCCEx_PeriphCLKConfig+0x1e9c>

#if defined(RCC_USBCLKSOURCE_PLL3Q)
      case RCC_USBCLKSOURCE_PLL3Q: /* PLL3 is used as clock source for USB*/
        /* PLL3Q input clock, parameters M, N & Q configuration and clock output (PLL3ClockOut) */
        ret = RCCEx_PLL3_Config(&(pPeriphClkInit->PLL3));
 800567a:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 800567e:	3330      	adds	r3, #48	@ 0x30
 8005680:	4618      	mov	r0, r3
 8005682:	f000 f8dd 	bl	8005840 <RCCEx_PLL3_Config>
 8005686:	4603      	mov	r3, r0
 8005688:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
      case RCC_USBCLKSOURCE_PLL2Q: /* PLL2 is used as clock source for USB*/
        /* PLL2Q input clock, parameters M, N & Q configuration and clock output (PLL2ClockOut) */
        ret = RCCEx_PLL2_Config(&(pPeriphClkInit->PLL2));
#endif /* RCC_USBCLKSOURCE_PLL3Q */
        /* USB clock source configuration done later after clock selection check */
        break;
 800568c:	e004      	b.n	8005698 <HAL_RCCEx_PeriphCLKConfig+0x1e9c>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 800568e:	2301      	movs	r3, #1
 8005690:	f887 315b 	strb.w	r3, [r7, #347]	@ 0x15b
        break;
 8005694:	e000      	b.n	8005698 <HAL_RCCEx_PeriphCLKConfig+0x1e9c>
        break;
 8005696:	bf00      	nop
    }

    if (ret == HAL_OK)
 8005698:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 800569c:	2b00      	cmp	r3, #0
 800569e:	d10d      	bne.n	80056bc <HAL_RCCEx_PeriphCLKConfig+0x1ec0>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(pPeriphClkInit->UsbClockSelection);
 80056a0:	4b1a      	ldr	r3, [pc, #104]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80056a2:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80056a6:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80056aa:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80056ae:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 80056b2:	4916      	ldr	r1, [pc, #88]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80056b4:	4313      	orrs	r3, r2
 80056b6:	f8c1 30e4 	str.w	r3, [r1, #228]	@ 0xe4
 80056ba:	e003      	b.n	80056c4 <HAL_RCCEx_PeriphCLKConfig+0x1ec8>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80056bc:	f897 315b 	ldrb.w	r3, [r7, #347]	@ 0x15b
 80056c0:	f887 315a 	strb.w	r3, [r7, #346]	@ 0x15a
  }
#endif /* USB_DRD_FS */

#if defined(CEC)
  /*-------------------------- CEC clock source configuration ----------------*/
  if (((pPeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 80056c4:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80056c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80056cc:	2100      	movs	r1, #0
 80056ce:	6039      	str	r1, [r7, #0]
 80056d0:	f003 0308 	and.w	r3, r3, #8
 80056d4:	607b      	str	r3, [r7, #4]
 80056d6:	e9d7 1200 	ldrd	r1, r2, [r7]
 80056da:	460b      	mov	r3, r1
 80056dc:	4313      	orrs	r3, r2
 80056de:	d00c      	beq.n	80056fa <HAL_RCCEx_PeriphCLKConfig+0x1efe>

    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(pPeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(pPeriphClkInit->CecClockSelection);
 80056e0:	4b0a      	ldr	r3, [pc, #40]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80056e2:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80056e6:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80056ea:	f8d7 314c 	ldr.w	r3, [r7, #332]	@ 0x14c
 80056ee:	f8d3 30fc 	ldr.w	r3, [r3, #252]	@ 0xfc
 80056f2:	4906      	ldr	r1, [pc, #24]	@ (800570c <HAL_RCCEx_PeriphCLKConfig+0x1f10>)
 80056f4:	4313      	orrs	r3, r2
 80056f6:	f8c1 30e8 	str.w	r3, [r1, #232]	@ 0xe8

  }
#endif /* CEC */

  return status;
 80056fa:	f897 315a 	ldrb.w	r3, [r7, #346]	@ 0x15a
}
 80056fe:	4618      	mov	r0, r3
 8005700:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 8005704:	46bd      	mov	sp, r7
 8005706:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800570a:	bf00      	nop
 800570c:	44020c00 	.word	0x44020c00

08005710 <RCCEx_PLL2_Config>:
  *         contains the configuration parameters M, N, FRACN, VCI/VCO ranges as well as PLL2 output clocks dividers
  * @note   PLL2 is temporary disabled to apply new parameters
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2)
{
 8005710:	b580      	push	{r7, lr}
 8005712:	b084      	sub	sp, #16
 8005714:	af00      	add	r7, sp, #0
 8005716:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLL2_VCIRGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2_VCORGE_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLL2_FRACN_VALUE(pll2->PLL2FRACN));

  /* Disable  PLL2. */
  __HAL_RCC_PLL2_DISABLE();
 8005718:	4b48      	ldr	r3, [pc, #288]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	4a47      	ldr	r2, [pc, #284]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 800571e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8005722:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8005724:	f7fb fe16 	bl	8001354 <HAL_GetTick>
 8005728:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL2 is disabled */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800572a:	e008      	b.n	800573e <RCCEx_PLL2_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 800572c:	f7fb fe12 	bl	8001354 <HAL_GetTick>
 8005730:	4602      	mov	r2, r0
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	1ad3      	subs	r3, r2, r3
 8005736:	2b02      	cmp	r3, #2
 8005738:	d901      	bls.n	800573e <RCCEx_PLL2_Config+0x2e>
    {
      return HAL_TIMEOUT;
 800573a:	2303      	movs	r3, #3
 800573c:	e07a      	b.n	8005834 <RCCEx_PLL2_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 800573e:	4b3f      	ldr	r3, [pc, #252]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8005746:	2b00      	cmp	r3, #0
 8005748:	d1f0      	bne.n	800572c <RCCEx_PLL2_Config+0x1c>
    }
  }

  /* Configure PLL2 multiplication and division factors. */
  __HAL_RCC_PLL2_CONFIG(pll2->PLL2Source,
 800574a:	4b3c      	ldr	r3, [pc, #240]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 800574c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800574e:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005752:	f023 0303 	bic.w	r3, r3, #3
 8005756:	687a      	ldr	r2, [r7, #4]
 8005758:	6811      	ldr	r1, [r2, #0]
 800575a:	687a      	ldr	r2, [r7, #4]
 800575c:	6852      	ldr	r2, [r2, #4]
 800575e:	0212      	lsls	r2, r2, #8
 8005760:	430a      	orrs	r2, r1
 8005762:	4936      	ldr	r1, [pc, #216]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 8005764:	4313      	orrs	r3, r2
 8005766:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	689b      	ldr	r3, [r3, #8]
 800576c:	3b01      	subs	r3, #1
 800576e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	68db      	ldr	r3, [r3, #12]
 8005776:	3b01      	subs	r3, #1
 8005778:	025b      	lsls	r3, r3, #9
 800577a:	b29b      	uxth	r3, r3
 800577c:	431a      	orrs	r2, r3
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	691b      	ldr	r3, [r3, #16]
 8005782:	3b01      	subs	r3, #1
 8005784:	041b      	lsls	r3, r3, #16
 8005786:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800578a:	431a      	orrs	r2, r3
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	695b      	ldr	r3, [r3, #20]
 8005790:	3b01      	subs	r3, #1
 8005792:	061b      	lsls	r3, r3, #24
 8005794:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8005798:	4928      	ldr	r1, [pc, #160]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 800579a:	4313      	orrs	r3, r2
 800579c:	63cb      	str	r3, [r1, #60]	@ 0x3c
                        pll2->PLL2P,
                        pll2->PLL2Q,
                        pll2->PLL2R);

  /* Select PLL2 input reference frequency range: VCI */
  __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE);
 800579e:	4b27      	ldr	r3, [pc, #156]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80057a2:	f023 020c 	bic.w	r2, r3, #12
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	699b      	ldr	r3, [r3, #24]
 80057aa:	4924      	ldr	r1, [pc, #144]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057ac:	4313      	orrs	r3, r2
 80057ae:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Select PLL2 output frequency range : VCO */
  __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL);
 80057b0:	4b22      	ldr	r3, [pc, #136]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80057b4:	f023 0220 	bic.w	r2, r3, #32
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	69db      	ldr	r3, [r3, #28]
 80057bc:	491f      	ldr	r1, [pc, #124]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057be:	4313      	orrs	r3, r2
 80057c0:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Configure the PLL2 Clock output(s) */
  __HAL_RCC_PLL2_CLKOUT_ENABLE(pll2->PLL2ClockOut);
 80057c2:	4b1e      	ldr	r3, [pc, #120]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057c4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80057ca:	491c      	ldr	r1, [pc, #112]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057cc:	4313      	orrs	r3, r2
 80057ce:	62cb      	str	r3, [r1, #44]	@ 0x2c

  /* Disable PLL2FRACN . */
  __HAL_RCC_PLL2_FRACN_DISABLE();
 80057d0:	4b1a      	ldr	r3, [pc, #104]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80057d4:	4a19      	ldr	r2, [pc, #100]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057d6:	f023 0310 	bic.w	r3, r3, #16
 80057da:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL2_FRACN_CONFIG(pll2->PLL2FRACN);
 80057dc:	4b17      	ldr	r3, [pc, #92]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057e0:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80057e4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80057e8:	687a      	ldr	r2, [r7, #4]
 80057ea:	6a12      	ldr	r2, [r2, #32]
 80057ec:	00d2      	lsls	r2, r2, #3
 80057ee:	4913      	ldr	r1, [pc, #76]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057f0:	4313      	orrs	r3, r2
 80057f2:	640b      	str	r3, [r1, #64]	@ 0x40

  /* Enable PLL2FRACN . */
  __HAL_RCC_PLL2_FRACN_ENABLE();
 80057f4:	4b11      	ldr	r3, [pc, #68]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80057f8:	4a10      	ldr	r2, [pc, #64]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 80057fa:	f043 0310 	orr.w	r3, r3, #16
 80057fe:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /* Enable  PLL2. */
  __HAL_RCC_PLL2_ENABLE();
 8005800:	4b0e      	ldr	r3, [pc, #56]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	4a0d      	ldr	r2, [pc, #52]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 8005806:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800580a:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 800580c:	f7fb fda2 	bl	8001354 <HAL_GetTick>
 8005810:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL2 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8005812:	e008      	b.n	8005826 <RCCEx_PLL2_Config+0x116>
  {
    if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8005814:	f7fb fd9e 	bl	8001354 <HAL_GetTick>
 8005818:	4602      	mov	r2, r0
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	1ad3      	subs	r3, r2, r3
 800581e:	2b02      	cmp	r3, #2
 8005820:	d901      	bls.n	8005826 <RCCEx_PLL2_Config+0x116>
    {
      return HAL_TIMEOUT;
 8005822:	2303      	movs	r3, #3
 8005824:	e006      	b.n	8005834 <RCCEx_PLL2_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8005826:	4b05      	ldr	r3, [pc, #20]	@ (800583c <RCCEx_PLL2_Config+0x12c>)
 8005828:	681b      	ldr	r3, [r3, #0]
 800582a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800582e:	2b00      	cmp	r3, #0
 8005830:	d0f0      	beq.n	8005814 <RCCEx_PLL2_Config+0x104>
    }
  }
  return HAL_OK;
 8005832:	2300      	movs	r3, #0

}
 8005834:	4618      	mov	r0, r3
 8005836:	3710      	adds	r7, #16
 8005838:	46bd      	mov	sp, r7
 800583a:	bd80      	pop	{r7, pc}
 800583c:	44020c00 	.word	0x44020c00

08005840 <RCCEx_PLL3_Config>:
  *         contains the configuration parameters M, N, FRACN, VCI/VCO ranges as well as PLL3 output clocks dividers
  * @note   PLL3 is temporary disabled to apply new parameters
  * @retval HAL status.
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3)
{
 8005840:	b580      	push	{r7, lr}
 8005842:	b084      	sub	sp, #16
 8005844:	af00      	add	r7, sp, #0
 8005846:	6078      	str	r0, [r7, #4]
  assert_param(IS_RCC_PLL3_VCIRGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3_VCORGE_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLL3_FRACN_VALUE(pll3->PLL3FRACN));

  /* Disable  PLL3. */
  __HAL_RCC_PLL3_DISABLE();
 8005848:	4b48      	ldr	r3, [pc, #288]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	4a47      	ldr	r2, [pc, #284]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 800584e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005852:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 8005854:	f7fb fd7e 	bl	8001354 <HAL_GetTick>
 8005858:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL3 is disabled */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800585a:	e008      	b.n	800586e <RCCEx_PLL3_Config+0x2e>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 800585c:	f7fb fd7a 	bl	8001354 <HAL_GetTick>
 8005860:	4602      	mov	r2, r0
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	1ad3      	subs	r3, r2, r3
 8005866:	2b02      	cmp	r3, #2
 8005868:	d901      	bls.n	800586e <RCCEx_PLL3_Config+0x2e>
    {
      return HAL_TIMEOUT;
 800586a:	2303      	movs	r3, #3
 800586c:	e07a      	b.n	8005964 <RCCEx_PLL3_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 800586e:	4b3f      	ldr	r3, [pc, #252]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8005876:	2b00      	cmp	r3, #0
 8005878:	d1f0      	bne.n	800585c <RCCEx_PLL3_Config+0x1c>
    }
  }

  /* Configure PLL3 multiplication and division factors. */
  __HAL_RCC_PLL3_CONFIG(pll3->PLL3Source,
 800587a:	4b3c      	ldr	r3, [pc, #240]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 800587c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800587e:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8005882:	f023 0303 	bic.w	r3, r3, #3
 8005886:	687a      	ldr	r2, [r7, #4]
 8005888:	6811      	ldr	r1, [r2, #0]
 800588a:	687a      	ldr	r2, [r7, #4]
 800588c:	6852      	ldr	r2, [r2, #4]
 800588e:	0212      	lsls	r2, r2, #8
 8005890:	430a      	orrs	r2, r1
 8005892:	4936      	ldr	r1, [pc, #216]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005894:	4313      	orrs	r3, r2
 8005896:	630b      	str	r3, [r1, #48]	@ 0x30
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	689b      	ldr	r3, [r3, #8]
 800589c:	3b01      	subs	r3, #1
 800589e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	68db      	ldr	r3, [r3, #12]
 80058a6:	3b01      	subs	r3, #1
 80058a8:	025b      	lsls	r3, r3, #9
 80058aa:	b29b      	uxth	r3, r3
 80058ac:	431a      	orrs	r2, r3
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	691b      	ldr	r3, [r3, #16]
 80058b2:	3b01      	subs	r3, #1
 80058b4:	041b      	lsls	r3, r3, #16
 80058b6:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 80058ba:	431a      	orrs	r2, r3
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	695b      	ldr	r3, [r3, #20]
 80058c0:	3b01      	subs	r3, #1
 80058c2:	061b      	lsls	r3, r3, #24
 80058c4:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 80058c8:	4928      	ldr	r1, [pc, #160]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058ca:	4313      	orrs	r3, r2
 80058cc:	644b      	str	r3, [r1, #68]	@ 0x44
                        pll3->PLL3P,
                        pll3->PLL3Q,
                        pll3->PLL3R);

  /* Select PLL3 input reference frequency range: VCI */
  __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 80058ce:	4b27      	ldr	r3, [pc, #156]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058d2:	f023 020c 	bic.w	r2, r3, #12
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	699b      	ldr	r3, [r3, #24]
 80058da:	4924      	ldr	r1, [pc, #144]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058dc:	4313      	orrs	r3, r2
 80058de:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Select PLL3 output frequency range : VCO */
  __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL);
 80058e0:	4b22      	ldr	r3, [pc, #136]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80058e4:	f023 0220 	bic.w	r2, r3, #32
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	69db      	ldr	r3, [r3, #28]
 80058ec:	491f      	ldr	r1, [pc, #124]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058ee:	4313      	orrs	r3, r2
 80058f0:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Configure the PLL3 Clock output(s) */
  __HAL_RCC_PLL3_CLKOUT_ENABLE(pll3->PLL3ClockOut);
 80058f2:	4b1e      	ldr	r3, [pc, #120]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80058f6:	687b      	ldr	r3, [r7, #4]
 80058f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058fa:	491c      	ldr	r1, [pc, #112]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 80058fc:	4313      	orrs	r3, r2
 80058fe:	630b      	str	r3, [r1, #48]	@ 0x30

  /* Disable PLL3FRACN . */
  __HAL_RCC_PLL3_FRACN_DISABLE();
 8005900:	4b1a      	ldr	r3, [pc, #104]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005902:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005904:	4a19      	ldr	r2, [pc, #100]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005906:	f023 0310 	bic.w	r3, r3, #16
 800590a:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
  __HAL_RCC_PLL3_FRACN_CONFIG(pll3->PLL3FRACN);
 800590c:	4b17      	ldr	r3, [pc, #92]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 800590e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005910:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8005914:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 8005918:	687a      	ldr	r2, [r7, #4]
 800591a:	6a12      	ldr	r2, [r2, #32]
 800591c:	00d2      	lsls	r2, r2, #3
 800591e:	4913      	ldr	r1, [pc, #76]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005920:	4313      	orrs	r3, r2
 8005922:	648b      	str	r3, [r1, #72]	@ 0x48

  /* Enable PLL3FRACN . */
  __HAL_RCC_PLL3_FRACN_ENABLE();
 8005924:	4b11      	ldr	r3, [pc, #68]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005926:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005928:	4a10      	ldr	r2, [pc, #64]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 800592a:	f043 0310 	orr.w	r3, r3, #16
 800592e:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable  PLL3. */
  __HAL_RCC_PLL3_ENABLE();
 8005930:	4b0e      	ldr	r3, [pc, #56]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	4a0d      	ldr	r2, [pc, #52]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005936:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800593a:	6013      	str	r3, [r2, #0]

  /* Get Start Tick*/
  tickstart = HAL_GetTick();
 800593c:	f7fb fd0a 	bl	8001354 <HAL_GetTick>
 8005940:	60f8      	str	r0, [r7, #12]

  /* Wait till PLL3 is ready */
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8005942:	e008      	b.n	8005956 <RCCEx_PLL3_Config+0x116>
  {
    if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 8005944:	f7fb fd06 	bl	8001354 <HAL_GetTick>
 8005948:	4602      	mov	r2, r0
 800594a:	68fb      	ldr	r3, [r7, #12]
 800594c:	1ad3      	subs	r3, r2, r3
 800594e:	2b02      	cmp	r3, #2
 8005950:	d901      	bls.n	8005956 <RCCEx_PLL3_Config+0x116>
    {
      return HAL_TIMEOUT;
 8005952:	2303      	movs	r3, #3
 8005954:	e006      	b.n	8005964 <RCCEx_PLL3_Config+0x124>
  while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 8005956:	4b05      	ldr	r3, [pc, #20]	@ (800596c <RCCEx_PLL3_Config+0x12c>)
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800595e:	2b00      	cmp	r3, #0
 8005960:	d0f0      	beq.n	8005944 <RCCEx_PLL3_Config+0x104>
    }
  }
  return HAL_OK;
 8005962:	2300      	movs	r3, #0
}
 8005964:	4618      	mov	r0, r3
 8005966:	3710      	adds	r7, #16
 8005968:	46bd      	mov	sp, r7
 800596a:	bd80      	pop	{r7, pc}
 800596c:	44020c00 	.word	0x44020c00

08005970 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005970:	b580      	push	{r7, lr}
 8005972:	b084      	sub	sp, #16
 8005974:	af00      	add	r7, sp, #0
 8005976:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	2b00      	cmp	r3, #0
 800597c:	d101      	bne.n	8005982 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800597e:	2301      	movs	r3, #1
 8005980:	e162      	b.n	8005c48 <HAL_SPI_Init+0x2d8>

  /* Check the parameters */
  assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
  assert_param(IS_SPI_MODE(hspi->Init.Mode));
  assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	4a70      	ldr	r2, [pc, #448]	@ (8005b48 <HAL_SPI_Init+0x1d8>)
 8005988:	4293      	cmp	r3, r2
 800598a:	d018      	beq.n	80059be <HAL_SPI_Init+0x4e>
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	4a6e      	ldr	r2, [pc, #440]	@ (8005b4c <HAL_SPI_Init+0x1dc>)
 8005992:	4293      	cmp	r3, r2
 8005994:	d013      	beq.n	80059be <HAL_SPI_Init+0x4e>
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	4a6d      	ldr	r2, [pc, #436]	@ (8005b50 <HAL_SPI_Init+0x1e0>)
 800599c:	4293      	cmp	r3, r2
 800599e:	d00e      	beq.n	80059be <HAL_SPI_Init+0x4e>
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	4a6b      	ldr	r2, [pc, #428]	@ (8005b54 <HAL_SPI_Init+0x1e4>)
 80059a6:	4293      	cmp	r3, r2
 80059a8:	d009      	beq.n	80059be <HAL_SPI_Init+0x4e>
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	4a6a      	ldr	r2, [pc, #424]	@ (8005b58 <HAL_SPI_Init+0x1e8>)
 80059b0:	4293      	cmp	r3, r2
 80059b2:	d004      	beq.n	80059be <HAL_SPI_Init+0x4e>
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	681b      	ldr	r3, [r3, #0]
 80059b8:	4a68      	ldr	r2, [pc, #416]	@ (8005b5c <HAL_SPI_Init+0x1ec>)
 80059ba:	4293      	cmp	r3, r2
 80059bc:	e000      	b.n	80059c0 <HAL_SPI_Init+0x50>
  {
    assert_param(IS_SPI_LIMITED_DATASIZE(hspi->Init.DataSize));
    assert_param(IS_SPI_LIMITED_FIFOTHRESHOLD(hspi->Init.FifoThreshold));
 80059be:	bf00      	nop
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	2200      	movs	r2, #0
 80059c4:	629a      	str	r2, [r3, #40]	@ 0x28
  assert_param(IS_SPI_RDY_MASTER_MANAGEMENT(hspi->Init.ReadyMasterManagement));
  assert_param(IS_SPI_RDY_POLARITY(hspi->Init.ReadyPolarity));
  assert_param(IS_SPI_MASTER_RX_AUTOSUSP(hspi->Init.MasterReceiverAutoSusp));

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	4a5f      	ldr	r2, [pc, #380]	@ (8005b48 <HAL_SPI_Init+0x1d8>)
 80059cc:	4293      	cmp	r3, r2
 80059ce:	d018      	beq.n	8005a02 <HAL_SPI_Init+0x92>
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	4a5d      	ldr	r2, [pc, #372]	@ (8005b4c <HAL_SPI_Init+0x1dc>)
 80059d6:	4293      	cmp	r3, r2
 80059d8:	d013      	beq.n	8005a02 <HAL_SPI_Init+0x92>
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	681b      	ldr	r3, [r3, #0]
 80059de:	4a5c      	ldr	r2, [pc, #368]	@ (8005b50 <HAL_SPI_Init+0x1e0>)
 80059e0:	4293      	cmp	r3, r2
 80059e2:	d00e      	beq.n	8005a02 <HAL_SPI_Init+0x92>
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	681b      	ldr	r3, [r3, #0]
 80059e8:	4a5a      	ldr	r2, [pc, #360]	@ (8005b54 <HAL_SPI_Init+0x1e4>)
 80059ea:	4293      	cmp	r3, r2
 80059ec:	d009      	beq.n	8005a02 <HAL_SPI_Init+0x92>
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	4a59      	ldr	r2, [pc, #356]	@ (8005b58 <HAL_SPI_Init+0x1e8>)
 80059f4:	4293      	cmp	r3, r2
 80059f6:	d004      	beq.n	8005a02 <HAL_SPI_Init+0x92>
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	681b      	ldr	r3, [r3, #0]
 80059fc:	4a57      	ldr	r2, [pc, #348]	@ (8005b5c <HAL_SPI_Init+0x1ec>)
 80059fe:	4293      	cmp	r3, r2
 8005a00:	d105      	bne.n	8005a0e <HAL_SPI_Init+0x9e>
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	68db      	ldr	r3, [r3, #12]
 8005a06:	2b0f      	cmp	r3, #15
 8005a08:	d901      	bls.n	8005a0e <HAL_SPI_Init+0x9e>
  {
    return HAL_ERROR;
 8005a0a:	2301      	movs	r3, #1
 8005a0c:	e11c      	b.n	8005c48 <HAL_SPI_Init+0x2d8>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 8005a0e:	6878      	ldr	r0, [r7, #4]
 8005a10:	f001 f876 	bl	8006b00 <SPI_GetPacketSize>
 8005a14:	60f8      	str	r0, [r7, #12]
  if (((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	4a4b      	ldr	r2, [pc, #300]	@ (8005b48 <HAL_SPI_Init+0x1d8>)
 8005a1c:	4293      	cmp	r3, r2
 8005a1e:	d018      	beq.n	8005a52 <HAL_SPI_Init+0xe2>
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	681b      	ldr	r3, [r3, #0]
 8005a24:	4a49      	ldr	r2, [pc, #292]	@ (8005b4c <HAL_SPI_Init+0x1dc>)
 8005a26:	4293      	cmp	r3, r2
 8005a28:	d013      	beq.n	8005a52 <HAL_SPI_Init+0xe2>
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	4a48      	ldr	r2, [pc, #288]	@ (8005b50 <HAL_SPI_Init+0x1e0>)
 8005a30:	4293      	cmp	r3, r2
 8005a32:	d00e      	beq.n	8005a52 <HAL_SPI_Init+0xe2>
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	681b      	ldr	r3, [r3, #0]
 8005a38:	4a46      	ldr	r2, [pc, #280]	@ (8005b54 <HAL_SPI_Init+0x1e4>)
 8005a3a:	4293      	cmp	r3, r2
 8005a3c:	d009      	beq.n	8005a52 <HAL_SPI_Init+0xe2>
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	4a45      	ldr	r2, [pc, #276]	@ (8005b58 <HAL_SPI_Init+0x1e8>)
 8005a44:	4293      	cmp	r3, r2
 8005a46:	d004      	beq.n	8005a52 <HAL_SPI_Init+0xe2>
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	4a43      	ldr	r2, [pc, #268]	@ (8005b5c <HAL_SPI_Init+0x1ec>)
 8005a4e:	4293      	cmp	r3, r2
 8005a50:	d102      	bne.n	8005a58 <HAL_SPI_Init+0xe8>
 8005a52:	68fb      	ldr	r3, [r7, #12]
 8005a54:	2b08      	cmp	r3, #8
 8005a56:	d820      	bhi.n	8005a9a <HAL_SPI_Init+0x12a>
      ((IS_SPI_FULL_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
  if (((IS_SPI_LIMITED_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 8005a5c:	4a40      	ldr	r2, [pc, #256]	@ (8005b60 <HAL_SPI_Init+0x1f0>)
 8005a5e:	4293      	cmp	r3, r2
 8005a60:	d018      	beq.n	8005a94 <HAL_SPI_Init+0x124>
      ((IS_SPI_FULL_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 8005a62:	687b      	ldr	r3, [r7, #4]
 8005a64:	681b      	ldr	r3, [r3, #0]
 8005a66:	4a3f      	ldr	r2, [pc, #252]	@ (8005b64 <HAL_SPI_Init+0x1f4>)
 8005a68:	4293      	cmp	r3, r2
 8005a6a:	d013      	beq.n	8005a94 <HAL_SPI_Init+0x124>
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	4a3d      	ldr	r2, [pc, #244]	@ (8005b68 <HAL_SPI_Init+0x1f8>)
 8005a72:	4293      	cmp	r3, r2
 8005a74:	d00e      	beq.n	8005a94 <HAL_SPI_Init+0x124>
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	4a3c      	ldr	r2, [pc, #240]	@ (8005b6c <HAL_SPI_Init+0x1fc>)
 8005a7c:	4293      	cmp	r3, r2
 8005a7e:	d009      	beq.n	8005a94 <HAL_SPI_Init+0x124>
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	4a3a      	ldr	r2, [pc, #232]	@ (8005b70 <HAL_SPI_Init+0x200>)
 8005a86:	4293      	cmp	r3, r2
 8005a88:	d004      	beq.n	8005a94 <HAL_SPI_Init+0x124>
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	4a39      	ldr	r2, [pc, #228]	@ (8005b74 <HAL_SPI_Init+0x204>)
 8005a90:	4293      	cmp	r3, r2
 8005a92:	d104      	bne.n	8005a9e <HAL_SPI_Init+0x12e>
 8005a94:	68fb      	ldr	r3, [r7, #12]
 8005a96:	2b10      	cmp	r3, #16
 8005a98:	d901      	bls.n	8005a9e <HAL_SPI_Init+0x12e>
  {
    return HAL_ERROR;
 8005a9a:	2301      	movs	r3, #1
 8005a9c:	e0d4      	b.n	8005c48 <HAL_SPI_Init+0x2d8>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8005aa4:	b2db      	uxtb	r3, r3
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d106      	bne.n	8005ab8 <HAL_SPI_Init+0x148>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	2200      	movs	r2, #0
 8005aae:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005ab2:	6878      	ldr	r0, [r7, #4]
 8005ab4:	f7fb f8cc 	bl	8000c50 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	2202      	movs	r2, #2
 8005abc:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	681a      	ldr	r2, [r3, #0]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	f022 0201 	bic.w	r2, r2, #1
 8005ace:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	689b      	ldr	r3, [r3, #8]
 8005ad6:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 8005ada:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	699b      	ldr	r3, [r3, #24]
 8005ae0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005ae4:	d119      	bne.n	8005b1a <HAL_SPI_Init+0x1aa>
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	685b      	ldr	r3, [r3, #4]
 8005aea:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005aee:	d103      	bne.n	8005af8 <HAL_SPI_Init+0x188>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 8005af4:	2b00      	cmp	r3, #0
 8005af6:	d008      	beq.n	8005b0a <HAL_SPI_Init+0x19a>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8005afc:	2b00      	cmp	r3, #0
 8005afe:	d10c      	bne.n	8005b1a <HAL_SPI_Init+0x1aa>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 8005b00:	687b      	ldr	r3, [r7, #4]
 8005b02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 8005b04:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005b08:	d107      	bne.n	8005b1a <HAL_SPI_Init+0x1aa>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	681a      	ldr	r2, [r3, #0]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8005b18:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	685b      	ldr	r3, [r3, #4]
 8005b1e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005b22:	2b00      	cmp	r3, #0
 8005b24:	d028      	beq.n	8005b78 <HAL_SPI_Init+0x208>
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	68db      	ldr	r3, [r3, #12]
 8005b2a:	2b06      	cmp	r3, #6
 8005b2c:	d924      	bls.n	8005b78 <HAL_SPI_Init+0x208>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 8005b38:	687b      	ldr	r3, [r7, #4]
 8005b3a:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	681b      	ldr	r3, [r3, #0]
 8005b40:	430a      	orrs	r2, r1
 8005b42:	601a      	str	r2, [r3, #0]
 8005b44:	e020      	b.n	8005b88 <HAL_SPI_Init+0x218>
 8005b46:	bf00      	nop
 8005b48:	40014c00 	.word	0x40014c00
 8005b4c:	50014c00 	.word	0x50014c00
 8005b50:	44002000 	.word	0x44002000
 8005b54:	54002000 	.word	0x54002000
 8005b58:	40015000 	.word	0x40015000
 8005b5c:	50015000 	.word	0x50015000
 8005b60:	40013000 	.word	0x40013000
 8005b64:	50013000 	.word	0x50013000
 8005b68:	40003800 	.word	0x40003800
 8005b6c:	50003800 	.word	0x50003800
 8005b70:	40003c00 	.word	0x40003c00
 8005b74:	50003c00 	.word	0x50003c00
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	681a      	ldr	r2, [r3, #0]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005b86:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	69da      	ldr	r2, [r3, #28]
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005b90:	431a      	orrs	r2, r3
 8005b92:	68bb      	ldr	r3, [r7, #8]
 8005b94:	431a      	orrs	r2, r3
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005b9a:	ea42 0103 	orr.w	r1, r2, r3
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	68da      	ldr	r2, [r3, #12]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	430a      	orrs	r2, r1
 8005ba8:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005bb2:	431a      	orrs	r2, r3
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005bb8:	431a      	orrs	r2, r3
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	699b      	ldr	r3, [r3, #24]
 8005bbe:	431a      	orrs	r2, r3
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	691b      	ldr	r3, [r3, #16]
 8005bc4:	431a      	orrs	r2, r3
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	695b      	ldr	r3, [r3, #20]
 8005bca:	431a      	orrs	r2, r3
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	6a1b      	ldr	r3, [r3, #32]
 8005bd0:	431a      	orrs	r2, r3
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	685b      	ldr	r3, [r3, #4]
 8005bd6:	431a      	orrs	r2, r3
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005bdc:	431a      	orrs	r2, r3
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	689b      	ldr	r3, [r3, #8]
 8005be2:	431a      	orrs	r2, r3
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005be8:	431a      	orrs	r2, r3
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005bee:	431a      	orrs	r2, r3
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005bf4:	ea42 0103 	orr.w	r1, r2, r3
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	430a      	orrs	r2, r1
 8005c02:	60da      	str	r2, [r3, #12]
#endif /* USE_SPI_CRC */
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	f022 0201 	bic.w	r2, r2, #1
 8005c12:	651a      	str	r2, [r3, #80]	@ 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	685b      	ldr	r3, [r3, #4]
 8005c18:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d00a      	beq.n	8005c36 <HAL_SPI_Init+0x2c6>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	68db      	ldr	r3, [r3, #12]
 8005c26:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	430a      	orrs	r2, r1
 8005c34:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	2200      	movs	r2, #0
 8005c3a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->State     = HAL_SPI_STATE_READY;
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	2201      	movs	r2, #1
 8005c42:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  return HAL_OK;
 8005c46:	2300      	movs	r3, #0
}
 8005c48:	4618      	mov	r0, r3
 8005c4a:	3710      	adds	r7, #16
 8005c4c:	46bd      	mov	sp, r7
 8005c4e:	bd80      	pop	{r7, pc}

08005c50 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005c50:	b580      	push	{r7, lr}
 8005c52:	b088      	sub	sp, #32
 8005c54:	af02      	add	r7, sp, #8
 8005c56:	60f8      	str	r0, [r7, #12]
 8005c58:	60b9      	str	r1, [r7, #8]
 8005c5a:	603b      	str	r3, [r7, #0]
 8005c5c:	4613      	mov	r3, r2
 8005c5e:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	3320      	adds	r3, #32
 8005c66:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Check transfer size parameter */
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 8005c68:	68fb      	ldr	r3, [r7, #12]
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	4a92      	ldr	r2, [pc, #584]	@ (8005eb8 <HAL_SPI_Transmit+0x268>)
 8005c6e:	4293      	cmp	r3, r2
 8005c70:	d012      	beq.n	8005c98 <HAL_SPI_Transmit+0x48>
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	4a91      	ldr	r2, [pc, #580]	@ (8005ebc <HAL_SPI_Transmit+0x26c>)
 8005c78:	4293      	cmp	r3, r2
 8005c7a:	d00d      	beq.n	8005c98 <HAL_SPI_Transmit+0x48>
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	4a8f      	ldr	r2, [pc, #572]	@ (8005ec0 <HAL_SPI_Transmit+0x270>)
 8005c82:	4293      	cmp	r3, r2
 8005c84:	d008      	beq.n	8005c98 <HAL_SPI_Transmit+0x48>
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	4a8e      	ldr	r2, [pc, #568]	@ (8005ec4 <HAL_SPI_Transmit+0x274>)
 8005c8c:	4293      	cmp	r3, r2
 8005c8e:	d003      	beq.n	8005c98 <HAL_SPI_Transmit+0x48>
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	4a8c      	ldr	r2, [pc, #560]	@ (8005ec8 <HAL_SPI_Transmit+0x278>)
 8005c96:	4293      	cmp	r3, r2
  {
    assert_param(IS_SPI_TRANSFER_SIZE(Size));
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005c98:	f7fb fb5c 	bl	8001354 <HAL_GetTick>
 8005c9c:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8005ca4:	b2db      	uxtb	r3, r3
 8005ca6:	2b01      	cmp	r3, #1
 8005ca8:	d001      	beq.n	8005cae <HAL_SPI_Transmit+0x5e>
  {
    return HAL_BUSY;
 8005caa:	2302      	movs	r3, #2
 8005cac:	e204      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
  }

  if ((pData == NULL) || (Size == 0UL))
 8005cae:	68bb      	ldr	r3, [r7, #8]
 8005cb0:	2b00      	cmp	r3, #0
 8005cb2:	d002      	beq.n	8005cba <HAL_SPI_Transmit+0x6a>
 8005cb4:	88fb      	ldrh	r3, [r7, #6]
 8005cb6:	2b00      	cmp	r3, #0
 8005cb8:	d101      	bne.n	8005cbe <HAL_SPI_Transmit+0x6e>
  {
    return HAL_ERROR;
 8005cba:	2301      	movs	r3, #1
 8005cbc:	e1fc      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 8005cc4:	2b01      	cmp	r3, #1
 8005cc6:	d101      	bne.n	8005ccc <HAL_SPI_Transmit+0x7c>
 8005cc8:	2302      	movs	r3, #2
 8005cca:	e1f5      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	2201      	movs	r2, #1
 8005cd0:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	2203      	movs	r2, #3
 8005cd8:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	2200      	movs	r2, #0
 8005ce0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005ce4:	68fb      	ldr	r3, [r7, #12]
 8005ce6:	68ba      	ldr	r2, [r7, #8]
 8005ce8:	665a      	str	r2, [r3, #100]	@ 0x64
  hspi->TxXferSize  = Size;
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	88fa      	ldrh	r2, [r7, #6]
 8005cee:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
  hspi->TxXferCount = Size;
 8005cf2:	68fb      	ldr	r3, [r7, #12]
 8005cf4:	88fa      	ldrh	r2, [r7, #6]
 8005cf6:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 8005cfa:	68fb      	ldr	r3, [r7, #12]
 8005cfc:	2200      	movs	r2, #0
 8005cfe:	66da      	str	r2, [r3, #108]	@ 0x6c
  hspi->RxXferSize  = (uint16_t) 0UL;
 8005d00:	68fb      	ldr	r3, [r7, #12]
 8005d02:	2200      	movs	r2, #0
 8005d04:	f8a3 2070 	strh.w	r2, [r3, #112]	@ 0x70
  hspi->RxXferCount = (uint16_t) 0UL;
 8005d08:	68fb      	ldr	r3, [r7, #12]
 8005d0a:	2200      	movs	r2, #0
 8005d0c:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
  hspi->TxISR       = NULL;
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	2200      	movs	r2, #0
 8005d14:	67da      	str	r2, [r3, #124]	@ 0x7c
  hspi->RxISR       = NULL;
 8005d16:	68fb      	ldr	r3, [r7, #12]
 8005d18:	2200      	movs	r2, #0
 8005d1a:	679a      	str	r2, [r3, #120]	@ 0x78

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d1c:	68fb      	ldr	r3, [r7, #12]
 8005d1e:	689b      	ldr	r3, [r3, #8]
 8005d20:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 8005d24:	d108      	bne.n	8005d38 <HAL_SPI_Transmit+0xe8>
  {
    SPI_1LINE_TX(hspi);
 8005d26:	68fb      	ldr	r3, [r7, #12]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	681a      	ldr	r2, [r3, #0]
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005d34:	601a      	str	r2, [r3, #0]
 8005d36:	e009      	b.n	8005d4c <HAL_SPI_Transmit+0xfc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	68db      	ldr	r3, [r3, #12]
 8005d3e:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8005d4a:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	685b      	ldr	r3, [r3, #4]
 8005d52:	0c1b      	lsrs	r3, r3, #16
 8005d54:	041b      	lsls	r3, r3, #16
 8005d56:	88f9      	ldrh	r1, [r7, #6]
 8005d58:	68fa      	ldr	r2, [r7, #12]
 8005d5a:	6812      	ldr	r2, [r2, #0]
 8005d5c:	430b      	orrs	r3, r1
 8005d5e:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	681b      	ldr	r3, [r3, #0]
 8005d64:	681a      	ldr	r2, [r3, #0]
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	f042 0201 	orr.w	r2, r2, #1
 8005d6e:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	685b      	ldr	r3, [r3, #4]
 8005d74:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005d78:	d107      	bne.n	8005d8a <HAL_SPI_Transmit+0x13a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	681a      	ldr	r2, [r3, #0]
 8005d80:	68fb      	ldr	r3, [r7, #12]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005d88:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if ((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (IS_SPI_FULL_INSTANCE(hspi->Instance)))
 8005d8a:	68fb      	ldr	r3, [r7, #12]
 8005d8c:	68db      	ldr	r3, [r3, #12]
 8005d8e:	2b0f      	cmp	r3, #15
 8005d90:	d965      	bls.n	8005e5e <HAL_SPI_Transmit+0x20e>
 8005d92:	68fb      	ldr	r3, [r7, #12]
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	4a4d      	ldr	r2, [pc, #308]	@ (8005ecc <HAL_SPI_Transmit+0x27c>)
 8005d98:	4293      	cmp	r3, r2
 8005d9a:	d059      	beq.n	8005e50 <HAL_SPI_Transmit+0x200>
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	681b      	ldr	r3, [r3, #0]
 8005da0:	4a4b      	ldr	r2, [pc, #300]	@ (8005ed0 <HAL_SPI_Transmit+0x280>)
 8005da2:	4293      	cmp	r3, r2
 8005da4:	d054      	beq.n	8005e50 <HAL_SPI_Transmit+0x200>
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	4a4a      	ldr	r2, [pc, #296]	@ (8005ed4 <HAL_SPI_Transmit+0x284>)
 8005dac:	4293      	cmp	r3, r2
 8005dae:	d04f      	beq.n	8005e50 <HAL_SPI_Transmit+0x200>
 8005db0:	68fb      	ldr	r3, [r7, #12]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	4a48      	ldr	r2, [pc, #288]	@ (8005ed8 <HAL_SPI_Transmit+0x288>)
 8005db6:	4293      	cmp	r3, r2
 8005db8:	d04a      	beq.n	8005e50 <HAL_SPI_Transmit+0x200>
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	4a47      	ldr	r2, [pc, #284]	@ (8005edc <HAL_SPI_Transmit+0x28c>)
 8005dc0:	4293      	cmp	r3, r2
 8005dc2:	d045      	beq.n	8005e50 <HAL_SPI_Transmit+0x200>
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	4a45      	ldr	r2, [pc, #276]	@ (8005ee0 <HAL_SPI_Transmit+0x290>)
 8005dca:	4293      	cmp	r3, r2
 8005dcc:	d147      	bne.n	8005e5e <HAL_SPI_Transmit+0x20e>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8005dce:	e03f      	b.n	8005e50 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	695b      	ldr	r3, [r3, #20]
 8005dd6:	f003 0302 	and.w	r3, r3, #2
 8005dda:	2b02      	cmp	r3, #2
 8005ddc:	d114      	bne.n	8005e08 <HAL_SPI_Transmit+0x1b8>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005de2:	68fb      	ldr	r3, [r7, #12]
 8005de4:	681b      	ldr	r3, [r3, #0]
 8005de6:	6812      	ldr	r2, [r2, #0]
 8005de8:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 8005dea:	68fb      	ldr	r3, [r7, #12]
 8005dec:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005dee:	1d1a      	adds	r2, r3, #4
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	665a      	str	r2, [r3, #100]	@ 0x64
        hspi->TxXferCount--;
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005dfa:	b29b      	uxth	r3, r3
 8005dfc:	3b01      	subs	r3, #1
 8005dfe:	b29a      	uxth	r2, r3
 8005e00:	68fb      	ldr	r3, [r7, #12]
 8005e02:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005e06:	e023      	b.n	8005e50 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005e08:	f7fb faa4 	bl	8001354 <HAL_GetTick>
 8005e0c:	4602      	mov	r2, r0
 8005e0e:	693b      	ldr	r3, [r7, #16]
 8005e10:	1ad3      	subs	r3, r2, r3
 8005e12:	683a      	ldr	r2, [r7, #0]
 8005e14:	429a      	cmp	r2, r3
 8005e16:	d803      	bhi.n	8005e20 <HAL_SPI_Transmit+0x1d0>
 8005e18:	683b      	ldr	r3, [r7, #0]
 8005e1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e1e:	d102      	bne.n	8005e26 <HAL_SPI_Transmit+0x1d6>
 8005e20:	683b      	ldr	r3, [r7, #0]
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d114      	bne.n	8005e50 <HAL_SPI_Transmit+0x200>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8005e26:	68f8      	ldr	r0, [r7, #12]
 8005e28:	f000 fd9c 	bl	8006964 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005e32:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	2201      	movs	r2, #1
 8005e40:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8005e44:	68fb      	ldr	r3, [r7, #12]
 8005e46:	2200      	movs	r2, #0
 8005e48:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 8005e4c:	2303      	movs	r3, #3
 8005e4e:	e133      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 8005e50:	68fb      	ldr	r3, [r7, #12]
 8005e52:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005e56:	b29b      	uxth	r3, r3
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d1b9      	bne.n	8005dd0 <HAL_SPI_Transmit+0x180>
  if ((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (IS_SPI_FULL_INSTANCE(hspi->Instance)))
 8005e5c:	e106      	b.n	800606c <HAL_SPI_Transmit+0x41c>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	68db      	ldr	r3, [r3, #12]
 8005e62:	2b07      	cmp	r3, #7
 8005e64:	f240 80fb 	bls.w	800605e <HAL_SPI_Transmit+0x40e>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8005e68:	e074      	b.n	8005f54 <HAL_SPI_Transmit+0x304>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005e6a:	68fb      	ldr	r3, [r7, #12]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	695b      	ldr	r3, [r3, #20]
 8005e70:	f003 0302 	and.w	r3, r3, #2
 8005e74:	2b02      	cmp	r3, #2
 8005e76:	d149      	bne.n	8005f0c <HAL_SPI_Transmit+0x2bc>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005e7e:	b29b      	uxth	r3, r3
 8005e80:	2b01      	cmp	r3, #1
 8005e82:	d92f      	bls.n	8005ee4 <HAL_SPI_Transmit+0x294>
 8005e84:	68fb      	ldr	r3, [r7, #12]
 8005e86:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005e88:	2b00      	cmp	r3, #0
 8005e8a:	d02b      	beq.n	8005ee4 <HAL_SPI_Transmit+0x294>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005e8c:	68fb      	ldr	r3, [r7, #12]
 8005e8e:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005e90:	68fb      	ldr	r3, [r7, #12]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	6812      	ldr	r2, [r2, #0]
 8005e96:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005e9c:	1d1a      	adds	r2, r3, #4
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)2UL;
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005ea8:	b29b      	uxth	r3, r3
 8005eaa:	3b02      	subs	r3, #2
 8005eac:	b29a      	uxth	r2, r3
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005eb4:	e04e      	b.n	8005f54 <HAL_SPI_Transmit+0x304>
 8005eb6:	bf00      	nop
 8005eb8:	40014c00 	.word	0x40014c00
 8005ebc:	50014c00 	.word	0x50014c00
 8005ec0:	44002000 	.word	0x44002000
 8005ec4:	54002000 	.word	0x54002000
 8005ec8:	40015000 	.word	0x40015000
 8005ecc:	40013000 	.word	0x40013000
 8005ed0:	50013000 	.word	0x50013000
 8005ed4:	40003800 	.word	0x40003800
 8005ed8:	50003800 	.word	0x50003800
 8005edc:	40003c00 	.word	0x40003c00
 8005ee0:	50003c00 	.word	0x50003c00
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8005ee4:	68fb      	ldr	r3, [r7, #12]
 8005ee6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005ee8:	881a      	ldrh	r2, [r3, #0]
 8005eea:	697b      	ldr	r3, [r7, #20]
 8005eec:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005ef2:	1c9a      	adds	r2, r3, #2
 8005ef4:	68fb      	ldr	r3, [r7, #12]
 8005ef6:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount--;
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005efe:	b29b      	uxth	r3, r3
 8005f00:	3b01      	subs	r3, #1
 8005f02:	b29a      	uxth	r2, r3
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005f0a:	e023      	b.n	8005f54 <HAL_SPI_Transmit+0x304>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f0c:	f7fb fa22 	bl	8001354 <HAL_GetTick>
 8005f10:	4602      	mov	r2, r0
 8005f12:	693b      	ldr	r3, [r7, #16]
 8005f14:	1ad3      	subs	r3, r2, r3
 8005f16:	683a      	ldr	r2, [r7, #0]
 8005f18:	429a      	cmp	r2, r3
 8005f1a:	d803      	bhi.n	8005f24 <HAL_SPI_Transmit+0x2d4>
 8005f1c:	683b      	ldr	r3, [r7, #0]
 8005f1e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f22:	d102      	bne.n	8005f2a <HAL_SPI_Transmit+0x2da>
 8005f24:	683b      	ldr	r3, [r7, #0]
 8005f26:	2b00      	cmp	r3, #0
 8005f28:	d114      	bne.n	8005f54 <HAL_SPI_Transmit+0x304>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8005f2a:	68f8      	ldr	r0, [r7, #12]
 8005f2c:	f000 fd1a 	bl	8006964 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8005f36:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 8005f40:	68fb      	ldr	r3, [r7, #12]
 8005f42:	2201      	movs	r2, #1
 8005f44:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	2200      	movs	r2, #0
 8005f4c:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 8005f50:	2303      	movs	r3, #3
 8005f52:	e0b1      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f5a:	b29b      	uxth	r3, r3
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d184      	bne.n	8005e6a <HAL_SPI_Transmit+0x21a>
 8005f60:	e084      	b.n	800606c <HAL_SPI_Transmit+0x41c>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	695b      	ldr	r3, [r3, #20]
 8005f68:	f003 0302 	and.w	r3, r3, #2
 8005f6c:	2b02      	cmp	r3, #2
 8005f6e:	d152      	bne.n	8006016 <HAL_SPI_Transmit+0x3c6>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005f76:	b29b      	uxth	r3, r3
 8005f78:	2b03      	cmp	r3, #3
 8005f7a:	d918      	bls.n	8005fae <HAL_SPI_Transmit+0x35e>
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005f80:	2b40      	cmp	r3, #64	@ 0x40
 8005f82:	d914      	bls.n	8005fae <HAL_SPI_Transmit+0x35e>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8005f84:	68fb      	ldr	r3, [r7, #12]
 8005f86:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005f88:	68fb      	ldr	r3, [r7, #12]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	6812      	ldr	r2, [r2, #0]
 8005f8e:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005f94:	1d1a      	adds	r2, r3, #4
 8005f96:	68fb      	ldr	r3, [r7, #12]
 8005f98:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)4UL;
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005fa0:	b29b      	uxth	r3, r3
 8005fa2:	3b04      	subs	r3, #4
 8005fa4:	b29a      	uxth	r2, r3
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005fac:	e057      	b.n	800605e <HAL_SPI_Transmit+0x40e>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005fb4:	b29b      	uxth	r3, r3
 8005fb6:	2b01      	cmp	r3, #1
 8005fb8:	d917      	bls.n	8005fea <HAL_SPI_Transmit+0x39a>
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d013      	beq.n	8005fea <HAL_SPI_Transmit+0x39a>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005fc6:	881a      	ldrh	r2, [r3, #0]
 8005fc8:	697b      	ldr	r3, [r7, #20]
 8005fca:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005fd0:	1c9a      	adds	r2, r3, #2
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount -= (uint16_t)2UL;
 8005fd6:	68fb      	ldr	r3, [r7, #12]
 8005fd8:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8005fdc:	b29b      	uxth	r3, r3
 8005fde:	3b02      	subs	r3, #2
 8005fe0:	b29a      	uxth	r2, r3
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8005fe8:	e039      	b.n	800605e <HAL_SPI_Transmit+0x40e>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005fea:	68fb      	ldr	r3, [r7, #12]
 8005fec:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	3320      	adds	r3, #32
 8005ff4:	7812      	ldrb	r2, [r2, #0]
 8005ff6:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8005ffc:	1c5a      	adds	r2, r3, #1
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	665a      	str	r2, [r3, #100]	@ 0x64
          hspi->TxXferCount--;
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006008:	b29b      	uxth	r3, r3
 800600a:	3b01      	subs	r3, #1
 800600c:	b29a      	uxth	r2, r3
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8006014:	e023      	b.n	800605e <HAL_SPI_Transmit+0x40e>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006016:	f7fb f99d 	bl	8001354 <HAL_GetTick>
 800601a:	4602      	mov	r2, r0
 800601c:	693b      	ldr	r3, [r7, #16]
 800601e:	1ad3      	subs	r3, r2, r3
 8006020:	683a      	ldr	r2, [r7, #0]
 8006022:	429a      	cmp	r2, r3
 8006024:	d803      	bhi.n	800602e <HAL_SPI_Transmit+0x3de>
 8006026:	683b      	ldr	r3, [r7, #0]
 8006028:	f1b3 3fff 	cmp.w	r3, #4294967295
 800602c:	d102      	bne.n	8006034 <HAL_SPI_Transmit+0x3e4>
 800602e:	683b      	ldr	r3, [r7, #0]
 8006030:	2b00      	cmp	r3, #0
 8006032:	d114      	bne.n	800605e <HAL_SPI_Transmit+0x40e>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8006034:	68f8      	ldr	r0, [r7, #12]
 8006036:	f000 fc95 	bl	8006964 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006040:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          hspi->State = HAL_SPI_STATE_READY;
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	2201      	movs	r2, #1
 800604e:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	2200      	movs	r2, #0
 8006056:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

          return HAL_TIMEOUT;
 800605a:	2303      	movs	r3, #3
 800605c:	e02c      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
    while (hspi->TxXferCount > 0UL)
 800605e:	68fb      	ldr	r3, [r7, #12]
 8006060:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006064:	b29b      	uxth	r3, r3
 8006066:	2b00      	cmp	r3, #0
 8006068:	f47f af7b 	bne.w	8005f62 <HAL_SPI_Transmit+0x312>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 800606c:	693b      	ldr	r3, [r7, #16]
 800606e:	9300      	str	r3, [sp, #0]
 8006070:	683b      	ldr	r3, [r7, #0]
 8006072:	2200      	movs	r2, #0
 8006074:	2108      	movs	r1, #8
 8006076:	68f8      	ldr	r0, [r7, #12]
 8006078:	f000 fd14 	bl	8006aa4 <SPI_WaitOnFlagUntilTimeout>
 800607c:	4603      	mov	r3, r0
 800607e:	2b00      	cmp	r3, #0
 8006080:	d007      	beq.n	8006092 <HAL_SPI_Transmit+0x442>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006088:	f043 0220 	orr.w	r2, r3, #32
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 8006092:	68f8      	ldr	r0, [r7, #12]
 8006094:	f000 fc66 	bl	8006964 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	2201      	movs	r2, #1
 800609c:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	2200      	movs	r2, #0
 80060a4:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80060a8:	68fb      	ldr	r3, [r7, #12]
 80060aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80060ae:	2b00      	cmp	r3, #0
 80060b0:	d001      	beq.n	80060b6 <HAL_SPI_Transmit+0x466>
  {
    return HAL_ERROR;
 80060b2:	2301      	movs	r3, #1
 80060b4:	e000      	b.n	80060b8 <HAL_SPI_Transmit+0x468>
  }
  else
  {
    return HAL_OK;
 80060b6:	2300      	movs	r3, #0
  }
}
 80060b8:	4618      	mov	r0, r3
 80060ba:	3718      	adds	r7, #24
 80060bc:	46bd      	mov	sp, r7
 80060be:	bd80      	pop	{r7, pc}

080060c0 <HAL_SPI_Transmit_DMA>:
  * @param  pData: pointer to data buffer
  * @param  Size : amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 80060c0:	b580      	push	{r7, lr}
 80060c2:	b086      	sub	sp, #24
 80060c4:	af00      	add	r7, sp, #0
 80060c6:	60f8      	str	r0, [r7, #12]
 80060c8:	60b9      	str	r1, [r7, #8]
 80060ca:	4613      	mov	r3, r2
 80060cc:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Check transfer size parameter */
  if (IS_SPI_LIMITED_INSTANCE(hspi->Instance))
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	4a87      	ldr	r2, [pc, #540]	@ (80062f0 <HAL_SPI_Transmit_DMA+0x230>)
 80060d4:	4293      	cmp	r3, r2
 80060d6:	d012      	beq.n	80060fe <HAL_SPI_Transmit_DMA+0x3e>
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	4a85      	ldr	r2, [pc, #532]	@ (80062f4 <HAL_SPI_Transmit_DMA+0x234>)
 80060de:	4293      	cmp	r3, r2
 80060e0:	d00d      	beq.n	80060fe <HAL_SPI_Transmit_DMA+0x3e>
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	4a84      	ldr	r2, [pc, #528]	@ (80062f8 <HAL_SPI_Transmit_DMA+0x238>)
 80060e8:	4293      	cmp	r3, r2
 80060ea:	d008      	beq.n	80060fe <HAL_SPI_Transmit_DMA+0x3e>
 80060ec:	68fb      	ldr	r3, [r7, #12]
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	4a82      	ldr	r2, [pc, #520]	@ (80062fc <HAL_SPI_Transmit_DMA+0x23c>)
 80060f2:	4293      	cmp	r3, r2
 80060f4:	d003      	beq.n	80060fe <HAL_SPI_Transmit_DMA+0x3e>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	4a81      	ldr	r2, [pc, #516]	@ (8006300 <HAL_SPI_Transmit_DMA+0x240>)
 80060fc:	4293      	cmp	r3, r2
  else
  {
    assert_param(IS_SPI_TRANSFER_SIZE(Size));
  }

  if (hspi->State != HAL_SPI_STATE_READY)
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8006104:	b2db      	uxtb	r3, r3
 8006106:	2b01      	cmp	r3, #1
 8006108:	d001      	beq.n	800610e <HAL_SPI_Transmit_DMA+0x4e>
  {
    return HAL_BUSY;
 800610a:	2302      	movs	r3, #2
 800610c:	e1b2      	b.n	8006474 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  if ((pData == NULL) || (Size == 0UL))
 800610e:	68bb      	ldr	r3, [r7, #8]
 8006110:	2b00      	cmp	r3, #0
 8006112:	d002      	beq.n	800611a <HAL_SPI_Transmit_DMA+0x5a>
 8006114:	88fb      	ldrh	r3, [r7, #6]
 8006116:	2b00      	cmp	r3, #0
 8006118:	d101      	bne.n	800611e <HAL_SPI_Transmit_DMA+0x5e>
  {
    return HAL_ERROR;
 800611a:	2301      	movs	r3, #1
 800611c:	e1aa      	b.n	8006474 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	f893 3088 	ldrb.w	r3, [r3, #136]	@ 0x88
 8006124:	2b01      	cmp	r3, #1
 8006126:	d101      	bne.n	800612c <HAL_SPI_Transmit_DMA+0x6c>
 8006128:	2302      	movs	r3, #2
 800612a:	e1a3      	b.n	8006474 <HAL_SPI_Transmit_DMA+0x3b4>
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	2201      	movs	r2, #1
 8006130:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006134:	68fb      	ldr	r3, [r7, #12]
 8006136:	2203      	movs	r2, #3
 8006138:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	2200      	movs	r2, #0
 8006140:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	68ba      	ldr	r2, [r7, #8]
 8006148:	665a      	str	r2, [r3, #100]	@ 0x64
  hspi->TxXferSize  = Size;
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	88fa      	ldrh	r2, [r7, #6]
 800614e:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
  hspi->TxXferCount = Size;
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	88fa      	ldrh	r2, [r7, #6]
 8006156:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 800615a:	68fb      	ldr	r3, [r7, #12]
 800615c:	2200      	movs	r2, #0
 800615e:	66da      	str	r2, [r3, #108]	@ 0x6c
  hspi->TxISR       = NULL;
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	2200      	movs	r2, #0
 8006164:	67da      	str	r2, [r3, #124]	@ 0x7c
  hspi->RxISR       = NULL;
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	2200      	movs	r2, #0
 800616a:	679a      	str	r2, [r3, #120]	@ 0x78
  hspi->RxXferSize  = (uint16_t)0UL;
 800616c:	68fb      	ldr	r3, [r7, #12]
 800616e:	2200      	movs	r2, #0
 8006170:	f8a3 2070 	strh.w	r2, [r3, #112]	@ 0x70
  hspi->RxXferCount = (uint16_t)0UL;
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	2200      	movs	r2, #0
 8006178:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800617c:	68fb      	ldr	r3, [r7, #12]
 800617e:	689b      	ldr	r3, [r3, #8]
 8006180:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 8006184:	d108      	bne.n	8006198 <HAL_SPI_Transmit_DMA+0xd8>
  {
    SPI_1LINE_TX(hspi);
 8006186:	68fb      	ldr	r3, [r7, #12]
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	681a      	ldr	r2, [r3, #0]
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8006194:	601a      	str	r2, [r3, #0]
 8006196:	e009      	b.n	80061ac <HAL_SPI_Transmit_DMA+0xec>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 8006198:	68fb      	ldr	r3, [r7, #12]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	68db      	ldr	r3, [r3, #12]
 800619e:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80061aa:	60da      	str	r2, [r3, #12]
  }

  /* Packing mode management is enabled by the DMA settings */
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.SrcDataWidth !=  DMA_SRC_DATAWIDTH_WORD) && \
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	68db      	ldr	r3, [r3, #12]
 80061b0:	2b0f      	cmp	r3, #15
 80061b2:	d923      	bls.n	80061fc <HAL_SPI_Transmit_DMA+0x13c>
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80061ba:	699b      	ldr	r3, [r3, #24]
 80061bc:	2b02      	cmp	r3, #2
 80061be:	d01d      	beq.n	80061fc <HAL_SPI_Transmit_DMA+0x13c>
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	681b      	ldr	r3, [r3, #0]
  if (((hspi->Init.DataSize > SPI_DATASIZE_16BIT) && (hspi->hdmatx->Init.SrcDataWidth !=  DMA_SRC_DATAWIDTH_WORD) && \
 80061c4:	4a4f      	ldr	r2, [pc, #316]	@ (8006304 <HAL_SPI_Transmit_DMA+0x244>)
 80061c6:	4293      	cmp	r3, r2
 80061c8:	d022      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	681b      	ldr	r3, [r3, #0]
 80061ce:	4a4e      	ldr	r2, [pc, #312]	@ (8006308 <HAL_SPI_Transmit_DMA+0x248>)
 80061d0:	4293      	cmp	r3, r2
 80061d2:	d01d      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	681b      	ldr	r3, [r3, #0]
 80061d8:	4a4c      	ldr	r2, [pc, #304]	@ (800630c <HAL_SPI_Transmit_DMA+0x24c>)
 80061da:	4293      	cmp	r3, r2
 80061dc:	d018      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	4a4b      	ldr	r2, [pc, #300]	@ (8006310 <HAL_SPI_Transmit_DMA+0x250>)
 80061e4:	4293      	cmp	r3, r2
 80061e6:	d013      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
 80061e8:	68fb      	ldr	r3, [r7, #12]
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	4a49      	ldr	r2, [pc, #292]	@ (8006314 <HAL_SPI_Transmit_DMA+0x254>)
 80061ee:	4293      	cmp	r3, r2
 80061f0:	d00e      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
 80061f2:	68fb      	ldr	r3, [r7, #12]
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	4a48      	ldr	r2, [pc, #288]	@ (8006318 <HAL_SPI_Transmit_DMA+0x258>)
 80061f8:	4293      	cmp	r3, r2
 80061fa:	d009      	beq.n	8006210 <HAL_SPI_Transmit_DMA+0x150>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT)  && (hspi->hdmatx->Init.SrcDataWidth ==  DMA_SRC_DATAWIDTH_BYTE)))
 80061fc:	68fb      	ldr	r3, [r7, #12]
 80061fe:	68db      	ldr	r3, [r3, #12]
       (IS_SPI_FULL_INSTANCE(hspi->Instance))) || \
 8006200:	2b07      	cmp	r3, #7
 8006202:	d90b      	bls.n	800621c <HAL_SPI_Transmit_DMA+0x15c>
      ((hspi->Init.DataSize > SPI_DATASIZE_8BIT)  && (hspi->hdmatx->Init.SrcDataWidth ==  DMA_SRC_DATAWIDTH_BYTE)))
 8006204:	68fb      	ldr	r3, [r7, #12]
 8006206:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800620a:	699b      	ldr	r3, [r3, #24]
 800620c:	2b00      	cmp	r3, #0
 800620e:	d105      	bne.n	800621c <HAL_SPI_Transmit_DMA+0x15c>
  {
    /* Restriction the DMA data received is not allowed in this mode */
    __HAL_UNLOCK(hspi);
 8006210:	68fb      	ldr	r3, [r7, #12]
 8006212:	2200      	movs	r2, #0
 8006214:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
    return HAL_ERROR;
 8006218:	2301      	movs	r3, #1
 800621a:	e12b      	b.n	8006474 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Adjust XferCount according to DMA alignment / Data size */
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	68db      	ldr	r3, [r3, #12]
 8006220:	2b07      	cmp	r3, #7
 8006222:	d820      	bhi.n	8006266 <HAL_SPI_Transmit_DMA+0x1a6>
  {
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_HALFWORD)
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800622a:	699b      	ldr	r3, [r3, #24]
 800622c:	2b01      	cmp	r3, #1
 800622e:	d109      	bne.n	8006244 <HAL_SPI_Transmit_DMA+0x184>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 8006230:	68fb      	ldr	r3, [r7, #12]
 8006232:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006236:	b29b      	uxth	r3, r3
 8006238:	3301      	adds	r3, #1
 800623a:	105b      	asrs	r3, r3, #1
 800623c:	b29a      	uxth	r2, r3
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    }
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 8006244:	68fb      	ldr	r3, [r7, #12]
 8006246:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800624a:	699b      	ldr	r3, [r3, #24]
 800624c:	2b02      	cmp	r3, #2
 800624e:	d11e      	bne.n	800628e <HAL_SPI_Transmit_DMA+0x1ce>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 3UL) >> 2UL;
 8006250:	68fb      	ldr	r3, [r7, #12]
 8006252:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006256:	b29b      	uxth	r3, r3
 8006258:	3303      	adds	r3, #3
 800625a:	109b      	asrs	r3, r3, #2
 800625c:	b29a      	uxth	r2, r3
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8006264:	e013      	b.n	800628e <HAL_SPI_Transmit_DMA+0x1ce>
    }
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	68db      	ldr	r3, [r3, #12]
 800626a:	2b0f      	cmp	r3, #15
 800626c:	d80f      	bhi.n	800628e <HAL_SPI_Transmit_DMA+0x1ce>
  {
    if (hspi->hdmatx->Init.SrcDataWidth == DMA_SRC_DATAWIDTH_WORD)
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006274:	699b      	ldr	r3, [r3, #24]
 8006276:	2b02      	cmp	r3, #2
 8006278:	d109      	bne.n	800628e <HAL_SPI_Transmit_DMA+0x1ce>
    {
      hspi->TxXferCount = (hspi->TxXferCount + (uint16_t) 1UL) >> 1UL;
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006280:	b29b      	uxth	r3, r3
 8006282:	3301      	adds	r3, #1
 8006284:	105b      	asrs	r3, r3, #1
 8006286:	b29a      	uxth	r2, r3
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  {
    /* Adjustment done */
  }

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006294:	4a21      	ldr	r2, [pc, #132]	@ (800631c <HAL_SPI_Transmit_DMA+0x25c>)
 8006296:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8006298:	68fb      	ldr	r3, [r7, #12]
 800629a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800629e:	4a20      	ldr	r2, [pc, #128]	@ (8006320 <HAL_SPI_Transmit_DMA+0x260>)
 80062a0:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80062a8:	4a1e      	ldr	r2, [pc, #120]	@ (8006324 <HAL_SPI_Transmit_DMA+0x264>)
 80062aa:	669a      	str	r2, [r3, #104]	@ 0x68

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80062b2:	2200      	movs	r2, #0
 80062b4:	66da      	str	r2, [r3, #108]	@ 0x6c

  /* Clear TXDMAEN bit*/
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	681b      	ldr	r3, [r3, #0]
 80062ba:	689a      	ldr	r2, [r3, #8]
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80062c4:	609a      	str	r2, [r3, #8]

  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 80062c6:	68fb      	ldr	r3, [r7, #12]
 80062c8:	68db      	ldr	r3, [r3, #12]
 80062ca:	2b07      	cmp	r3, #7
 80062cc:	d804      	bhi.n	80062d8 <HAL_SPI_Transmit_DMA+0x218>
  {
    hspi->TxXferCount = Size;
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	88fa      	ldrh	r2, [r7, #6]
 80062d2:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 80062d6:	e02d      	b.n	8006334 <HAL_SPI_Transmit_DMA+0x274>
  }
  else if (hspi->Init.DataSize <= SPI_DATASIZE_16BIT)
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	68db      	ldr	r3, [r3, #12]
 80062dc:	2b0f      	cmp	r3, #15
 80062de:	d823      	bhi.n	8006328 <HAL_SPI_Transmit_DMA+0x268>
  {
    hspi->TxXferCount = Size * 2U;
 80062e0:	88fb      	ldrh	r3, [r7, #6]
 80062e2:	005b      	lsls	r3, r3, #1
 80062e4:	b29a      	uxth	r2, r3
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 80062ec:	e022      	b.n	8006334 <HAL_SPI_Transmit_DMA+0x274>
 80062ee:	bf00      	nop
 80062f0:	40014c00 	.word	0x40014c00
 80062f4:	50014c00 	.word	0x50014c00
 80062f8:	44002000 	.word	0x44002000
 80062fc:	54002000 	.word	0x54002000
 8006300:	40015000 	.word	0x40015000
 8006304:	40013000 	.word	0x40013000
 8006308:	50013000 	.word	0x50013000
 800630c:	40003800 	.word	0x40003800
 8006310:	50003800 	.word	0x50003800
 8006314:	40003c00 	.word	0x40003c00
 8006318:	50003c00 	.word	0x50003c00
 800631c:	080068cf 	.word	0x080068cf
 8006320:	08006889 	.word	0x08006889
 8006324:	080068eb 	.word	0x080068eb
  }
  else
  {
    hspi->TxXferCount = Size * 4U;
 8006328:	88fb      	ldrh	r3, [r7, #6]
 800632a:	009b      	lsls	r3, r3, #2
 800632c:	b29a      	uxth	r2, r3
 800632e:	68fb      	ldr	r3, [r7, #12]
 8006330:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  }

  /* Enable the Tx DMA Stream/Channel */
  if ((hspi->hdmatx->Mode & DMA_LINKEDLIST) == DMA_LINKEDLIST)
 8006334:	68fb      	ldr	r3, [r7, #12]
 8006336:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800633a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800633c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006340:	2b00      	cmp	r3, #0
 8006342:	d02d      	beq.n	80063a0 <HAL_SPI_Transmit_DMA+0x2e0>
  {
    if (hspi->hdmatx->LinkedListQueue != NULL)
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800634a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800634c:	2b00      	cmp	r3, #0
 800634e:	d024      	beq.n	800639a <HAL_SPI_Transmit_DMA+0x2da>
    {
      /* Set DMA data size */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CBR1_DEFAULT_OFFSET] = hspi->TxXferCount;
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 8006356:	b29a      	uxth	r2, r3
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800635e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	609a      	str	r2, [r3, #8]

      /* Set DMA source address */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CSAR_DEFAULT_OFFSET] = (uint32_t)hspi->pTxBuffPtr;
 8006364:	68fb      	ldr	r3, [r7, #12]
 8006366:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800636e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	60da      	str	r2, [r3, #12]

      /* Set DMA destination address */
      hspi->hdmatx->LinkedListQueue->Head->LinkRegisters[NODE_CDAR_DEFAULT_OFFSET] = (uint32_t)&hspi->Instance->TXDR;
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	681b      	ldr	r3, [r3, #0]
 8006378:	f103 0220 	add.w	r2, r3, #32
 800637c:	68fb      	ldr	r3, [r7, #12]
 800637e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006382:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	611a      	str	r2, [r3, #16]

      status = HAL_DMAEx_List_Start_IT(hspi->hdmatx);
 8006388:	68fb      	ldr	r3, [r7, #12]
 800638a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800638e:	4618      	mov	r0, r3
 8006390:	f7fc f85e 	bl	8002450 <HAL_DMAEx_List_Start_IT>
 8006394:	4603      	mov	r3, r0
 8006396:	75fb      	strb	r3, [r7, #23]
 8006398:	e014      	b.n	80063c4 <HAL_SPI_Transmit_DMA+0x304>
    }
    else
    {
      status = HAL_ERROR;
 800639a:	2301      	movs	r3, #1
 800639c:	75fb      	strb	r3, [r7, #23]
 800639e:	e011      	b.n	80063c4 <HAL_SPI_Transmit_DMA+0x304>
    }
  }
  else
  {
    status = HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 80063a0:	68fb      	ldr	r3, [r7, #12]
 80063a2:	f8d3 0080 	ldr.w	r0, [r3, #128]	@ 0x80
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80063aa:	4619      	mov	r1, r3
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	3320      	adds	r3, #32
 80063b2:	461a      	mov	r2, r3
                              hspi->TxXferCount);
 80063b4:	68fb      	ldr	r3, [r7, #12]
 80063b6:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 80063ba:	b29b      	uxth	r3, r3
    status = HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->TXDR,
 80063bc:	f7fb fb66 	bl	8001a8c <HAL_DMA_Start_IT>
 80063c0:	4603      	mov	r3, r0
 80063c2:	75fb      	strb	r3, [r7, #23]
  }

  /* Check status */
  if (status != HAL_OK)
 80063c4:	7dfb      	ldrb	r3, [r7, #23]
 80063c6:	2b00      	cmp	r3, #0
 80063c8:	d011      	beq.n	80063ee <HAL_SPI_Transmit_DMA+0x32e>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80063d0:	f043 0210 	orr.w	r2, r3, #16
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    hspi->State = HAL_SPI_STATE_READY;
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	2201      	movs	r2, #1
 80063de:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

    /* Unlock the process */
    __HAL_UNLOCK(hspi);
 80063e2:	68fb      	ldr	r3, [r7, #12]
 80063e4:	2200      	movs	r2, #0
 80063e6:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

    return HAL_ERROR;
 80063ea:	2301      	movs	r3, #1
 80063ec:	e042      	b.n	8006474 <HAL_SPI_Transmit_DMA+0x3b4>
  }

  /* Set the number of data at current transfer */
  if (hspi->hdmatx->Mode == DMA_LINKEDLIST_CIRCULAR)
 80063ee:	68fb      	ldr	r3, [r7, #12]
 80063f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80063f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80063f6:	2b81      	cmp	r3, #129	@ 0x81
 80063f8:	d108      	bne.n	800640c <HAL_SPI_Transmit_DMA+0x34c>
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, 0UL);
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	685b      	ldr	r3, [r3, #4]
 8006400:	68fa      	ldr	r2, [r7, #12]
 8006402:	6812      	ldr	r2, [r2, #0]
 8006404:	0c1b      	lsrs	r3, r3, #16
 8006406:	041b      	lsls	r3, r3, #16
 8006408:	6053      	str	r3, [r2, #4]
 800640a:	e009      	b.n	8006420 <HAL_SPI_Transmit_DMA+0x360>
  }
  else
  {
    MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	685b      	ldr	r3, [r3, #4]
 8006412:	0c1b      	lsrs	r3, r3, #16
 8006414:	041b      	lsls	r3, r3, #16
 8006416:	88f9      	ldrh	r1, [r7, #6]
 8006418:	68fa      	ldr	r2, [r7, #12]
 800641a:	6812      	ldr	r2, [r2, #0]
 800641c:	430b      	orrs	r3, r1
 800641e:	6053      	str	r3, [r2, #4]
  }

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN);
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	681b      	ldr	r3, [r3, #0]
 8006424:	689a      	ldr	r2, [r3, #8]
 8006426:	68fb      	ldr	r3, [r7, #12]
 8006428:	681b      	ldr	r3, [r3, #0]
 800642a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800642e:	609a      	str	r2, [r3, #8]

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_UDR | SPI_IT_FRE | SPI_IT_MODF));
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	691a      	ldr	r2, [r3, #16]
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	f442 7248 	orr.w	r2, r2, #800	@ 0x320
 800643e:	611a      	str	r2, [r3, #16]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	681a      	ldr	r2, [r3, #0]
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	f042 0201 	orr.w	r2, r2, #1
 800644e:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	685b      	ldr	r3, [r3, #4]
 8006454:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006458:	d107      	bne.n	800646a <HAL_SPI_Transmit_DMA+0x3aa>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	681b      	ldr	r3, [r3, #0]
 800645e:	681a      	ldr	r2, [r3, #0]
 8006460:	68fb      	ldr	r3, [r7, #12]
 8006462:	681b      	ldr	r3, [r3, #0]
 8006464:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006468:	601a      	str	r2, [r3, #0]
  }

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800646a:	68fb      	ldr	r3, [r7, #12]
 800646c:	2200      	movs	r2, #0
 800646e:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88

  return HAL_OK;
 8006472:	2300      	movs	r3, #0
}
 8006474:	4618      	mov	r0, r3
 8006476:	3718      	adds	r7, #24
 8006478:	46bd      	mov	sp, r7
 800647a:	bd80      	pop	{r7, pc}

0800647c <HAL_SPI_IRQHandler>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800647c:	b580      	push	{r7, lr}
 800647e:	b08a      	sub	sp, #40	@ 0x28
 8006480:	af00      	add	r7, sp, #0
 8006482:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->IER;
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	681b      	ldr	r3, [r3, #0]
 8006488:	691b      	ldr	r3, [r3, #16]
 800648a:	623b      	str	r3, [r7, #32]
  uint32_t itflag   = hspi->Instance->SR;
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	695b      	ldr	r3, [r3, #20]
 8006492:	61fb      	str	r3, [r7, #28]
  uint32_t trigger  = itsource & itflag;
 8006494:	6a3a      	ldr	r2, [r7, #32]
 8006496:	69fb      	ldr	r3, [r7, #28]
 8006498:	4013      	ands	r3, r2
 800649a:	61bb      	str	r3, [r7, #24]
  uint32_t cfg1     = hspi->Instance->CFG1;
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	689b      	ldr	r3, [r3, #8]
 80064a2:	617b      	str	r3, [r7, #20]
  uint32_t handled  = 0UL;
 80064a4:	2300      	movs	r3, #0
 80064a6:	627b      	str	r3, [r7, #36]	@ 0x24

  HAL_SPI_StateTypeDef State = hspi->State;
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 80064ae:	74fb      	strb	r3, [r7, #19]
#if defined (__GNUC__)
  __IO uint16_t *prxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->RXDR));
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	3330      	adds	r3, #48	@ 0x30
 80064b6:	60fb      	str	r3, [r7, #12]
#endif /* __GNUC__ */

  /* SPI in SUSPEND mode  ----------------------------------------------------*/
  if (HAL_IS_BIT_SET(itflag, SPI_FLAG_SUSP) && HAL_IS_BIT_SET(itsource, SPI_FLAG_EOT))
 80064b8:	69fb      	ldr	r3, [r7, #28]
 80064ba:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80064be:	2b00      	cmp	r3, #0
 80064c0:	d010      	beq.n	80064e4 <HAL_SPI_IRQHandler+0x68>
 80064c2:	6a3b      	ldr	r3, [r7, #32]
 80064c4:	f003 0308 	and.w	r3, r3, #8
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	d00b      	beq.n	80064e4 <HAL_SPI_IRQHandler+0x68>
  {
    /* Clear the Suspend flag */
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 80064cc:	687b      	ldr	r3, [r7, #4]
 80064ce:	681b      	ldr	r3, [r3, #0]
 80064d0:	699a      	ldr	r2, [r3, #24]
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80064da:	619a      	str	r2, [r3, #24]

    /* Suspend on going, Call the Suspend callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->SuspendCallback(hspi);
#else
    HAL_SPI_SuspendCallback(hspi);
 80064dc:	6878      	ldr	r0, [r7, #4]
 80064de:	f000 f9c9 	bl	8006874 <HAL_SPI_SuspendCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
    return;
 80064e2:	e19a      	b.n	800681a <HAL_SPI_IRQHandler+0x39e>
  }

  /* SPI in mode Transmitter and Receiver ------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 80064e4:	69bb      	ldr	r3, [r7, #24]
 80064e6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80064ea:	2b00      	cmp	r3, #0
 80064ec:	d113      	bne.n	8006516 <HAL_SPI_IRQHandler+0x9a>
 80064ee:	69bb      	ldr	r3, [r7, #24]
 80064f0:	f003 0320 	and.w	r3, r3, #32
 80064f4:	2b00      	cmp	r3, #0
 80064f6:	d10e      	bne.n	8006516 <HAL_SPI_IRQHandler+0x9a>
      HAL_IS_BIT_SET(trigger, SPI_FLAG_DXP))
 80064f8:	69bb      	ldr	r3, [r7, #24]
 80064fa:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && \
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d009      	beq.n	8006516 <HAL_SPI_IRQHandler+0x9a>
  {
    hspi->TxISR(hspi);
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006506:	6878      	ldr	r0, [r7, #4]
 8006508:	4798      	blx	r3
    hspi->RxISR(hspi);
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800650e:	6878      	ldr	r0, [r7, #4]
 8006510:	4798      	blx	r3
    handled = 1UL;
 8006512:	2301      	movs	r3, #1
 8006514:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  /* SPI in mode Receiver ----------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 8006516:	69bb      	ldr	r3, [r7, #24]
 8006518:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800651c:	2b00      	cmp	r3, #0
 800651e:	d10f      	bne.n	8006540 <HAL_SPI_IRQHandler+0xc4>
 8006520:	69bb      	ldr	r3, [r7, #24]
 8006522:	f003 0301 	and.w	r3, r3, #1
 8006526:	2b00      	cmp	r3, #0
 8006528:	d00a      	beq.n	8006540 <HAL_SPI_IRQHandler+0xc4>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 800652a:	69bb      	ldr	r3, [r7, #24]
 800652c:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_OVR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_RXP) && \
 8006530:	2b00      	cmp	r3, #0
 8006532:	d105      	bne.n	8006540 <HAL_SPI_IRQHandler+0xc4>
  {
    hspi->RxISR(hspi);
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8006538:	6878      	ldr	r0, [r7, #4]
 800653a:	4798      	blx	r3
    handled = 1UL;
 800653c:	2301      	movs	r3, #1
 800653e:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 8006540:	69bb      	ldr	r3, [r7, #24]
 8006542:	f003 0320 	and.w	r3, r3, #32
 8006546:	2b00      	cmp	r3, #0
 8006548:	d10f      	bne.n	800656a <HAL_SPI_IRQHandler+0xee>
 800654a:	69bb      	ldr	r3, [r7, #24]
 800654c:	f003 0302 	and.w	r3, r3, #2
 8006550:	2b00      	cmp	r3, #0
 8006552:	d00a      	beq.n	800656a <HAL_SPI_IRQHandler+0xee>
      HAL_IS_BIT_CLR(trigger, SPI_FLAG_DXP))
 8006554:	69bb      	ldr	r3, [r7, #24]
 8006556:	f003 0304 	and.w	r3, r3, #4
  if (HAL_IS_BIT_CLR(trigger, SPI_FLAG_UDR) && HAL_IS_BIT_SET(trigger, SPI_FLAG_TXP) && \
 800655a:	2b00      	cmp	r3, #0
 800655c:	d105      	bne.n	800656a <HAL_SPI_IRQHandler+0xee>
  {
    hspi->TxISR(hspi);
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006562:	6878      	ldr	r0, [r7, #4]
 8006564:	4798      	blx	r3
    handled = 1UL;
 8006566:	2301      	movs	r3, #1
 8006568:	627b      	str	r3, [r7, #36]	@ 0x24
  }

  if (handled != 0UL)
 800656a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800656c:	2b00      	cmp	r3, #0
 800656e:	f040 814f 	bne.w	8006810 <HAL_SPI_IRQHandler+0x394>
  {
    return;
  }

  /* SPI End Of Transfer: DMA or IT based transfer */
  if (HAL_IS_BIT_SET(trigger, SPI_FLAG_EOT))
 8006572:	69bb      	ldr	r3, [r7, #24]
 8006574:	f003 0308 	and.w	r3, r3, #8
 8006578:	2b00      	cmp	r3, #0
 800657a:	f000 808b 	beq.w	8006694 <HAL_SPI_IRQHandler+0x218>
  {
    /* Clear EOT/TXTF/SUSP flag */
    __HAL_SPI_CLEAR_EOTFLAG(hspi);
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	699a      	ldr	r2, [r3, #24]
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	f042 0208 	orr.w	r2, r2, #8
 800658c:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	681b      	ldr	r3, [r3, #0]
 8006592:	699a      	ldr	r2, [r3, #24]
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	f042 0210 	orr.w	r2, r2, #16
 800659c:	619a      	str	r2, [r3, #24]
    __HAL_SPI_CLEAR_SUSPFLAG(hspi);
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	699a      	ldr	r2, [r3, #24]
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80065ac:	619a      	str	r2, [r3, #24]

    /* Disable EOT interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_EOT);
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	691a      	ldr	r2, [r3, #16]
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	f022 0208 	bic.w	r2, r2, #8
 80065bc:	611a      	str	r2, [r3, #16]

    /* For the IT based receive extra polling maybe required for last packet */
    if (HAL_IS_BIT_CLR(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 80065be:	687b      	ldr	r3, [r7, #4]
 80065c0:	681b      	ldr	r3, [r3, #0]
 80065c2:	689b      	ldr	r3, [r3, #8]
 80065c4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80065c8:	2b00      	cmp	r3, #0
 80065ca:	d13d      	bne.n	8006648 <HAL_SPI_IRQHandler+0x1cc>
    {
      /* Pooling remaining data */
      while (hspi->RxXferCount != 0UL)
 80065cc:	e036      	b.n	800663c <HAL_SPI_IRQHandler+0x1c0>
      {
        /* Receive data in 32 Bit mode */
        if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	68db      	ldr	r3, [r3, #12]
 80065d2:	2b0f      	cmp	r3, #15
 80065d4:	d90b      	bls.n	80065ee <HAL_SPI_IRQHandler+0x172>
        {
          *((uint32_t *)hspi->pRxBuffPtr) = *((__IO uint32_t *)&hspi->Instance->RXDR);
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	681a      	ldr	r2, [r3, #0]
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065de:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 80065e0:	601a      	str	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint32_t);
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065e6:	1d1a      	adds	r2, r3, #4
 80065e8:	687b      	ldr	r3, [r7, #4]
 80065ea:	66da      	str	r2, [r3, #108]	@ 0x6c
 80065ec:	e01d      	b.n	800662a <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 16 Bit mode */
        else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	68db      	ldr	r3, [r3, #12]
 80065f2:	2b07      	cmp	r3, #7
 80065f4:	d90b      	bls.n	800660e <HAL_SPI_IRQHandler+0x192>
        {
#if defined (__GNUC__)
          *((uint16_t *)hspi->pRxBuffPtr) = *prxdr_16bits;
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80065fa:	68fa      	ldr	r2, [r7, #12]
 80065fc:	8812      	ldrh	r2, [r2, #0]
 80065fe:	b292      	uxth	r2, r2
 8006600:	801a      	strh	r2, [r3, #0]
#else
          *((uint16_t *)hspi->pRxBuffPtr) = *((__IO uint16_t *)&hspi->Instance->RXDR);
#endif /* __GNUC__ */
          hspi->pRxBuffPtr += sizeof(uint16_t);
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006606:	1c9a      	adds	r2, r3, #2
 8006608:	687b      	ldr	r3, [r7, #4]
 800660a:	66da      	str	r2, [r3, #108]	@ 0x6c
 800660c:	e00d      	b.n	800662a <HAL_SPI_IRQHandler+0x1ae>
        }
        /* Receive data in 8 Bit mode */
        else
        {
          *((uint8_t *)hspi->pRxBuffPtr) = *((__IO uint8_t *)&hspi->Instance->RXDR);
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800661a:	7812      	ldrb	r2, [r2, #0]
 800661c:	b2d2      	uxtb	r2, r2
 800661e:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint8_t);
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8006624:	1c5a      	adds	r2, r3, #1
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	66da      	str	r2, [r3, #108]	@ 0x6c
        }

        hspi->RxXferCount--;
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	f8b3 3072 	ldrh.w	r3, [r3, #114]	@ 0x72
 8006630:	b29b      	uxth	r3, r3
 8006632:	3b01      	subs	r3, #1
 8006634:	b29a      	uxth	r2, r3
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
      while (hspi->RxXferCount != 0UL)
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	f8b3 3072 	ldrh.w	r3, [r3, #114]	@ 0x72
 8006642:	b29b      	uxth	r3, r3
 8006644:	2b00      	cmp	r3, #0
 8006646:	d1c2      	bne.n	80065ce <HAL_SPI_IRQHandler+0x152>
      }
    }

    /* Call SPI Standard close procedure */
    SPI_CloseTransfer(hspi);
 8006648:	6878      	ldr	r0, [r7, #4]
 800664a:	f000 f98b 	bl	8006964 <SPI_CloseTransfer>

    hspi->State = HAL_SPI_STATE_READY;
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	2201      	movs	r2, #1
 8006652:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800665c:	2b00      	cmp	r3, #0
 800665e:	d003      	beq.n	8006668 <HAL_SPI_IRQHandler+0x1ec>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006660:	6878      	ldr	r0, [r7, #4]
 8006662:	f000 f8fd 	bl	8006860 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006666:	e0d8      	b.n	800681a <HAL_SPI_IRQHandler+0x39e>
    {
      hspi->TxCpltCallback(hspi);
    }
#else
    /* Call appropriate user callback */
    if (State == HAL_SPI_STATE_BUSY_TX_RX)
 8006668:	7cfb      	ldrb	r3, [r7, #19]
 800666a:	2b05      	cmp	r3, #5
 800666c:	d103      	bne.n	8006676 <HAL_SPI_IRQHandler+0x1fa>
    {
      HAL_SPI_TxRxCpltCallback(hspi);
 800666e:	6878      	ldr	r0, [r7, #4]
 8006670:	f000 f8e2 	bl	8006838 <HAL_SPI_TxRxCpltCallback>
    else
    {
      /* End of the appropriate call */
    }

    return;
 8006674:	e0ce      	b.n	8006814 <HAL_SPI_IRQHandler+0x398>
    else if (State == HAL_SPI_STATE_BUSY_RX)
 8006676:	7cfb      	ldrb	r3, [r7, #19]
 8006678:	2b04      	cmp	r3, #4
 800667a:	d103      	bne.n	8006684 <HAL_SPI_IRQHandler+0x208>
      HAL_SPI_RxCpltCallback(hspi);
 800667c:	6878      	ldr	r0, [r7, #4]
 800667e:	f000 f8d1 	bl	8006824 <HAL_SPI_RxCpltCallback>
    return;
 8006682:	e0c7      	b.n	8006814 <HAL_SPI_IRQHandler+0x398>
    else if (State == HAL_SPI_STATE_BUSY_TX)
 8006684:	7cfb      	ldrb	r3, [r7, #19]
 8006686:	2b03      	cmp	r3, #3
 8006688:	f040 80c4 	bne.w	8006814 <HAL_SPI_IRQHandler+0x398>
      HAL_SPI_TxCpltCallback(hspi);
 800668c:	6878      	ldr	r0, [r7, #4]
 800668e:	f004 fd09 	bl	800b0a4 <HAL_SPI_TxCpltCallback>
    return;
 8006692:	e0bf      	b.n	8006814 <HAL_SPI_IRQHandler+0x398>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if ((trigger & (SPI_FLAG_MODF | SPI_FLAG_OVR | SPI_FLAG_FRE | SPI_FLAG_UDR)) != 0UL)
 8006694:	69bb      	ldr	r3, [r7, #24]
 8006696:	f403 7358 	and.w	r3, r3, #864	@ 0x360
 800669a:	2b00      	cmp	r3, #0
 800669c:	f000 80bd 	beq.w	800681a <HAL_SPI_IRQHandler+0x39e>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if ((trigger & SPI_FLAG_OVR) != 0UL)
 80066a0:	69bb      	ldr	r3, [r7, #24]
 80066a2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80066a6:	2b00      	cmp	r3, #0
 80066a8:	d00f      	beq.n	80066ca <HAL_SPI_IRQHandler+0x24e>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80066b0:	f043 0204 	orr.w	r2, r3, #4
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	699a      	ldr	r2, [r3, #24]
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80066c8:	619a      	str	r2, [r3, #24]
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if ((trigger & SPI_FLAG_MODF) != 0UL)
 80066ca:	69bb      	ldr	r3, [r7, #24]
 80066cc:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80066d0:	2b00      	cmp	r3, #0
 80066d2:	d00f      	beq.n	80066f4 <HAL_SPI_IRQHandler+0x278>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80066da:	f043 0201 	orr.w	r2, r3, #1
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	699a      	ldr	r2, [r3, #24]
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80066f2:	619a      	str	r2, [r3, #24]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_FRE) != 0UL)
 80066f4:	69bb      	ldr	r3, [r7, #24]
 80066f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80066fa:	2b00      	cmp	r3, #0
 80066fc:	d00f      	beq.n	800671e <HAL_SPI_IRQHandler+0x2a2>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 80066fe:	687b      	ldr	r3, [r7, #4]
 8006700:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006704:	f043 0208 	orr.w	r2, r3, #8
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	699a      	ldr	r2, [r3, #24]
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	681b      	ldr	r3, [r3, #0]
 8006718:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800671c:	619a      	str	r2, [r3, #24]
    }

    /* SPI Underrun error interrupt occurred ------------------------------------*/
    if ((trigger & SPI_FLAG_UDR) != 0UL)
 800671e:	69bb      	ldr	r3, [r7, #24]
 8006720:	f003 0320 	and.w	r3, r3, #32
 8006724:	2b00      	cmp	r3, #0
 8006726:	d00f      	beq.n	8006748 <HAL_SPI_IRQHandler+0x2cc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800672e:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	681b      	ldr	r3, [r3, #0]
 800673c:	699a      	ldr	r2, [r3, #24]
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	f042 0220 	orr.w	r2, r2, #32
 8006746:	619a      	str	r2, [r3, #24]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800674e:	2b00      	cmp	r3, #0
 8006750:	d062      	beq.n	8006818 <HAL_SPI_IRQHandler+0x39c>
    {
      /* Disable SPI peripheral */
      __HAL_SPI_DISABLE(hspi);
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	681a      	ldr	r2, [r3, #0]
 8006758:	687b      	ldr	r3, [r7, #4]
 800675a:	681b      	ldr	r3, [r3, #0]
 800675c:	f022 0201 	bic.w	r2, r2, #1
 8006760:	601a      	str	r2, [r3, #0]

      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_RXP | SPI_IT_TXP | SPI_IT_MODF |
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	691b      	ldr	r3, [r3, #16]
 8006768:	687a      	ldr	r2, [r7, #4]
 800676a:	6812      	ldr	r2, [r2, #0]
 800676c:	f423 735a 	bic.w	r3, r3, #872	@ 0x368
 8006770:	f023 0303 	bic.w	r3, r3, #3
 8006774:	6113      	str	r3, [r2, #16]
                                  SPI_IT_OVR | SPI_IT_FRE | SPI_IT_UDR));

#if defined(HAL_DMA_MODULE_ENABLED)
      /* Disable the SPI DMA requests if enabled */
      if (HAL_IS_BIT_SET(cfg1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN))
 8006776:	697b      	ldr	r3, [r7, #20]
 8006778:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800677c:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8006780:	d13e      	bne.n	8006800 <HAL_SPI_IRQHandler+0x384>
      {
        /* Disable the SPI DMA requests */
        CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	689a      	ldr	r2, [r3, #8]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	681b      	ldr	r3, [r3, #0]
 800678c:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8006790:	609a      	str	r2, [r3, #8]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006798:	2b00      	cmp	r3, #0
 800679a:	d015      	beq.n	80067c8 <HAL_SPI_IRQHandler+0x34c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80067a2:	4a1f      	ldr	r2, [pc, #124]	@ (8006820 <HAL_SPI_IRQHandler+0x3a4>)
 80067a4:	66da      	str	r2, [r3, #108]	@ 0x6c
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 80067a6:	687b      	ldr	r3, [r7, #4]
 80067a8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80067ac:	4618      	mov	r0, r3
 80067ae:	f7fb f9d3 	bl	8001b58 <HAL_DMA_Abort_IT>
 80067b2:	4603      	mov	r3, r0
 80067b4:	2b00      	cmp	r3, #0
 80067b6:	d007      	beq.n	80067c8 <HAL_SPI_IRQHandler+0x34c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80067be:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80067ce:	2b00      	cmp	r3, #0
 80067d0:	d022      	beq.n	8006818 <HAL_SPI_IRQHandler+0x39c>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80067d8:	4a11      	ldr	r2, [pc, #68]	@ (8006820 <HAL_SPI_IRQHandler+0x3a4>)
 80067da:	66da      	str	r2, [r3, #108]	@ 0x6c
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80067e2:	4618      	mov	r0, r3
 80067e4:	f7fb f9b8 	bl	8001b58 <HAL_DMA_Abort_IT>
 80067e8:	4603      	mov	r3, r0
 80067ea:	2b00      	cmp	r3, #0
 80067ec:	d014      	beq.n	8006818 <HAL_SPI_IRQHandler+0x39c>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80067f4:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
#if defined(HAL_DMA_MODULE_ENABLED)
      }
#endif /* HAL_DMA_MODULE_ENABLED */
    }
    return;
 80067fe:	e00b      	b.n	8006818 <HAL_SPI_IRQHandler+0x39c>
        hspi->State = HAL_SPI_STATE_READY;
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	2201      	movs	r2, #1
 8006804:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
        HAL_SPI_ErrorCallback(hspi);
 8006808:	6878      	ldr	r0, [r7, #4]
 800680a:	f000 f829 	bl	8006860 <HAL_SPI_ErrorCallback>
    return;
 800680e:	e003      	b.n	8006818 <HAL_SPI_IRQHandler+0x39c>
    return;
 8006810:	bf00      	nop
 8006812:	e002      	b.n	800681a <HAL_SPI_IRQHandler+0x39e>
    return;
 8006814:	bf00      	nop
 8006816:	e000      	b.n	800681a <HAL_SPI_IRQHandler+0x39e>
    return;
 8006818:	bf00      	nop
  }
}
 800681a:	3728      	adds	r7, #40	@ 0x28
 800681c:	46bd      	mov	sp, r7
 800681e:	bd80      	pop	{r7, pc}
 8006820:	08006931 	.word	0x08006931

08006824 <HAL_SPI_RxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006824:	b480      	push	{r7}
 8006826:	b083      	sub	sp, #12
 8006828:	af00      	add	r7, sp, #0
 800682a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800682c:	bf00      	nop
 800682e:	370c      	adds	r7, #12
 8006830:	46bd      	mov	sp, r7
 8006832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006836:	4770      	bx	lr

08006838 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006838:	b480      	push	{r7}
 800683a:	b083      	sub	sp, #12
 800683c:	af00      	add	r7, sp, #0
 800683e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 8006840:	bf00      	nop
 8006842:	370c      	adds	r7, #12
 8006844:	46bd      	mov	sp, r7
 8006846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800684a:	4770      	bx	lr

0800684c <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 800684c:	b480      	push	{r7}
 800684e:	b083      	sub	sp, #12
 8006850:	af00      	add	r7, sp, #0
 8006852:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8006854:	bf00      	nop
 8006856:	370c      	adds	r7, #12
 8006858:	46bd      	mov	sp, r7
 800685a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800685e:	4770      	bx	lr

08006860 <HAL_SPI_ErrorCallback>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006860:	b480      	push	{r7}
 8006862:	b083      	sub	sp, #12
 8006864:	af00      	add	r7, sp, #0
 8006866:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 8006868:	bf00      	nop
 800686a:	370c      	adds	r7, #12
 800686c:	46bd      	mov	sp, r7
 800686e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006872:	4770      	bx	lr

08006874 <HAL_SPI_SuspendCallback>:
  * @brief  SPI Suspend callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_SuspendCallback(SPI_HandleTypeDef *hspi) /* Derogation MISRAC2012-Rule-8.13 */
{
 8006874:	b480      	push	{r7}
 8006876:	b083      	sub	sp, #12
 8006878:	af00      	add	r7, sp, #0
 800687a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_SuspendCallback can be implemented in the user file.
   */
}
 800687c:	bf00      	nop
 800687e:	370c      	adds	r7, #12
 8006880:	46bd      	mov	sp, r7
 8006882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006886:	4770      	bx	lr

08006888 <SPI_DMATransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006888:	b580      	push	{r7, lr}
 800688a:	b084      	sub	sp, #16
 800688c:	af00      	add	r7, sp, #0
 800688e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8006894:	60fb      	str	r3, [r7, #12]

  if (hspi->State != HAL_SPI_STATE_ABORT)
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 800689c:	b2db      	uxtb	r3, r3
 800689e:	2b07      	cmp	r3, #7
 80068a0:	d011      	beq.n	80068c6 <SPI_DMATransmitCplt+0x3e>
  {
    if (hspi->hdmatx->Mode == DMA_LINKEDLIST_CIRCULAR)
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80068a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80068aa:	2b81      	cmp	r3, #129	@ 0x81
 80068ac:	d103      	bne.n	80068b6 <SPI_DMATransmitCplt+0x2e>
    {
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
      hspi->TxCpltCallback(hspi);
#else
      HAL_SPI_TxCpltCallback(hspi);
 80068ae:	68f8      	ldr	r0, [r7, #12]
 80068b0:	f004 fbf8 	bl	800b0a4 <HAL_SPI_TxCpltCallback>
    {
      /* Enable EOT interrupt */
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
    }
  }
}
 80068b4:	e007      	b.n	80068c6 <SPI_DMATransmitCplt+0x3e>
      __HAL_SPI_ENABLE_IT(hspi, SPI_IT_EOT);
 80068b6:	68fb      	ldr	r3, [r7, #12]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	691a      	ldr	r2, [r3, #16]
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	681b      	ldr	r3, [r3, #0]
 80068c0:	f042 0208 	orr.w	r2, r2, #8
 80068c4:	611a      	str	r2, [r3, #16]
}
 80068c6:	bf00      	nop
 80068c8:	3710      	adds	r7, #16
 80068ca:	46bd      	mov	sp, r7
 80068cc:	bd80      	pop	{r7, pc}

080068ce <SPI_DMAHalfTransmitCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma) /* Derogation MISRAC2012-Rule-8.13 */
{
 80068ce:	b580      	push	{r7, lr}
 80068d0:	b084      	sub	sp, #16
 80068d2:	af00      	add	r7, sp, #0
 80068d4:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80068da:	60fb      	str	r3, [r7, #12]
                            ((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-8.13 */

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 80068dc:	68f8      	ldr	r0, [r7, #12]
 80068de:	f7ff ffb5 	bl	800684c <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 80068e2:	bf00      	nop
 80068e4:	3710      	adds	r7, #16
 80068e6:	46bd      	mov	sp, r7
 80068e8:	bd80      	pop	{r7, pc}

080068ea <SPI_DMAError>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 80068ea:	b580      	push	{r7, lr}
 80068ec:	b084      	sub	sp, #16
 80068ee:	af00      	add	r7, sp, #0
 80068f0:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80068f6:	60fb      	str	r3, [r7, #12]

  /* if DMA error is FIFO error ignore it */
  if (HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_NONE)
 80068f8:	6878      	ldr	r0, [r7, #4]
 80068fa:	f7fb fab7 	bl	8001e6c <HAL_DMA_GetError>
 80068fe:	4603      	mov	r3, r0
 8006900:	2b00      	cmp	r3, #0
 8006902:	d011      	beq.n	8006928 <SPI_DMAError+0x3e>
  {
    /* Call SPI standard close procedure */
    SPI_CloseTransfer(hspi);
 8006904:	68f8      	ldr	r0, [r7, #12]
 8006906:	f000 f82d 	bl	8006964 <SPI_CloseTransfer>

    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006910:	f043 0210 	orr.w	r2, r3, #16
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    hspi->State = HAL_SPI_STATE_READY;
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	2201      	movs	r2, #1
 800691e:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
    hspi->ErrorCallback(hspi);
#else
    HAL_SPI_ErrorCallback(hspi);
 8006922:	68f8      	ldr	r0, [r7, #12]
 8006924:	f7ff ff9c 	bl	8006860 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }
}
 8006928:	bf00      	nop
 800692a:	3710      	adds	r7, #16
 800692c:	46bd      	mov	sp, r7
 800692e:	bd80      	pop	{r7, pc}

08006930 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006930:	b580      	push	{r7, lr}
 8006932:	b084      	sub	sp, #16
 8006934:	af00      	add	r7, sp, #0
 8006936:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800693c:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = (uint16_t) 0UL;
 800693e:	68fb      	ldr	r3, [r7, #12]
 8006940:	2200      	movs	r2, #0
 8006942:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
  hspi->TxXferCount = (uint16_t) 0UL;
 8006946:	68fb      	ldr	r3, [r7, #12]
 8006948:	2200      	movs	r2, #0
 800694a:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a

  /* Restore hspi->State to Ready */
  hspi->State = HAL_SPI_STATE_READY;
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	2201      	movs	r2, #1
 8006952:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1UL)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006956:	68f8      	ldr	r0, [r7, #12]
 8006958:	f7ff ff82 	bl	8006860 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 800695c:	bf00      	nop
 800695e:	3710      	adds	r7, #16
 8006960:	46bd      	mov	sp, r7
 8006962:	bd80      	pop	{r7, pc}

08006964 <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 8006964:	b480      	push	{r7}
 8006966:	b085      	sub	sp, #20
 8006968:	af00      	add	r7, sp, #0
 800696a:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	681b      	ldr	r3, [r3, #0]
 8006970:	695b      	ldr	r3, [r3, #20]
 8006972:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	699a      	ldr	r2, [r3, #24]
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	f042 0208 	orr.w	r2, r2, #8
 8006982:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	681b      	ldr	r3, [r3, #0]
 8006988:	699a      	ldr	r2, [r3, #24]
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	681b      	ldr	r3, [r3, #0]
 800698e:	f042 0210 	orr.w	r2, r2, #16
 8006992:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	681b      	ldr	r3, [r3, #0]
 8006998:	681a      	ldr	r2, [r3, #0]
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	f022 0201 	bic.w	r2, r2, #1
 80069a2:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	691b      	ldr	r3, [r3, #16]
 80069aa:	687a      	ldr	r2, [r7, #4]
 80069ac:	6812      	ldr	r2, [r2, #0]
 80069ae:	f423 735b 	bic.w	r3, r3, #876	@ 0x36c
 80069b2:	f023 0303 	bic.w	r3, r3, #3
 80069b6:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	689a      	ldr	r2, [r3, #8]
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 80069c6:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 80069ce:	b2db      	uxtb	r3, r3
 80069d0:	2b04      	cmp	r3, #4
 80069d2:	d014      	beq.n	80069fe <SPI_CloseTransfer+0x9a>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 80069d4:	68fb      	ldr	r3, [r7, #12]
 80069d6:	f003 0320 	and.w	r3, r3, #32
 80069da:	2b00      	cmp	r3, #0
 80069dc:	d00f      	beq.n	80069fe <SPI_CloseTransfer+0x9a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80069e4:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	699a      	ldr	r2, [r3, #24]
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	681b      	ldr	r3, [r3, #0]
 80069f8:	f042 0220 	orr.w	r2, r2, #32
 80069fc:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	f893 3089 	ldrb.w	r3, [r3, #137]	@ 0x89
 8006a04:	b2db      	uxtb	r3, r3
 8006a06:	2b03      	cmp	r3, #3
 8006a08:	d014      	beq.n	8006a34 <SPI_CloseTransfer+0xd0>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 8006a0a:	68fb      	ldr	r3, [r7, #12]
 8006a0c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a10:	2b00      	cmp	r3, #0
 8006a12:	d00f      	beq.n	8006a34 <SPI_CloseTransfer+0xd0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006a1a:	f043 0204 	orr.w	r2, r3, #4
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	699a      	ldr	r2, [r3, #24]
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	681b      	ldr	r3, [r3, #0]
 8006a2e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006a32:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d00f      	beq.n	8006a5e <SPI_CloseTransfer+0xfa>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006a44:	f043 0201 	orr.w	r2, r3, #1
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	681b      	ldr	r3, [r3, #0]
 8006a52:	699a      	ldr	r2, [r3, #24]
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8006a5c:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a64:	2b00      	cmp	r3, #0
 8006a66:	d00f      	beq.n	8006a88 <SPI_CloseTransfer+0x124>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006a6e:	f043 0208 	orr.w	r2, r3, #8
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	681b      	ldr	r3, [r3, #0]
 8006a7c:	699a      	ldr	r2, [r3, #24]
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006a86:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	2200      	movs	r2, #0
 8006a8c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  hspi->RxXferCount = (uint16_t)0UL;
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	2200      	movs	r2, #0
 8006a94:	f8a3 2072 	strh.w	r2, [r3, #114]	@ 0x72
}
 8006a98:	bf00      	nop
 8006a9a:	3714      	adds	r7, #20
 8006a9c:	46bd      	mov	sp, r7
 8006a9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aa2:	4770      	bx	lr

08006aa4 <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8006aa4:	b580      	push	{r7, lr}
 8006aa6:	b084      	sub	sp, #16
 8006aa8:	af00      	add	r7, sp, #0
 8006aaa:	60f8      	str	r0, [r7, #12]
 8006aac:	60b9      	str	r1, [r7, #8]
 8006aae:	603b      	str	r3, [r7, #0]
 8006ab0:	4613      	mov	r3, r2
 8006ab2:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8006ab4:	e010      	b.n	8006ad8 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006ab6:	f7fa fc4d 	bl	8001354 <HAL_GetTick>
 8006aba:	4602      	mov	r2, r0
 8006abc:	69bb      	ldr	r3, [r7, #24]
 8006abe:	1ad3      	subs	r3, r2, r3
 8006ac0:	683a      	ldr	r2, [r7, #0]
 8006ac2:	429a      	cmp	r2, r3
 8006ac4:	d803      	bhi.n	8006ace <SPI_WaitOnFlagUntilTimeout+0x2a>
 8006ac6:	683b      	ldr	r3, [r7, #0]
 8006ac8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006acc:	d102      	bne.n	8006ad4 <SPI_WaitOnFlagUntilTimeout+0x30>
 8006ace:	683b      	ldr	r3, [r7, #0]
 8006ad0:	2b00      	cmp	r3, #0
 8006ad2:	d101      	bne.n	8006ad8 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 8006ad4:	2303      	movs	r3, #3
 8006ad6:	e00f      	b.n	8006af8 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8006ad8:	68fb      	ldr	r3, [r7, #12]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	695a      	ldr	r2, [r3, #20]
 8006ade:	68bb      	ldr	r3, [r7, #8]
 8006ae0:	4013      	ands	r3, r2
 8006ae2:	68ba      	ldr	r2, [r7, #8]
 8006ae4:	429a      	cmp	r2, r3
 8006ae6:	bf0c      	ite	eq
 8006ae8:	2301      	moveq	r3, #1
 8006aea:	2300      	movne	r3, #0
 8006aec:	b2db      	uxtb	r3, r3
 8006aee:	461a      	mov	r2, r3
 8006af0:	79fb      	ldrb	r3, [r7, #7]
 8006af2:	429a      	cmp	r2, r3
 8006af4:	d0df      	beq.n	8006ab6 <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 8006af6:	2300      	movs	r3, #0
}
 8006af8:	4618      	mov	r0, r3
 8006afa:	3710      	adds	r7, #16
 8006afc:	46bd      	mov	sp, r7
 8006afe:	bd80      	pop	{r7, pc}

08006b00 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 8006b00:	b480      	push	{r7}
 8006b02:	b085      	sub	sp, #20
 8006b04:	af00      	add	r7, sp, #0
 8006b06:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006b0c:	095b      	lsrs	r3, r3, #5
 8006b0e:	3301      	adds	r3, #1
 8006b10:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	68db      	ldr	r3, [r3, #12]
 8006b16:	3301      	adds	r3, #1
 8006b18:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 8006b1a:	68bb      	ldr	r3, [r7, #8]
 8006b1c:	3307      	adds	r3, #7
 8006b1e:	08db      	lsrs	r3, r3, #3
 8006b20:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 8006b22:	68bb      	ldr	r3, [r7, #8]
 8006b24:	68fa      	ldr	r2, [r7, #12]
 8006b26:	fb02 f303 	mul.w	r3, r2, r3
}
 8006b2a:	4618      	mov	r0, r3
 8006b2c:	3714      	adds	r7, #20
 8006b2e:	46bd      	mov	sp, r7
 8006b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b34:	4770      	bx	lr

08006b36 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006b36:	b580      	push	{r7, lr}
 8006b38:	b082      	sub	sp, #8
 8006b3a:	af00      	add	r7, sp, #0
 8006b3c:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	d101      	bne.n	8006b48 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006b44:	2301      	movs	r3, #1
 8006b46:	e049      	b.n	8006bdc <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b4e:	b2db      	uxtb	r3, r3
 8006b50:	2b00      	cmp	r3, #0
 8006b52:	d106      	bne.n	8006b62 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	2200      	movs	r2, #0
 8006b58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006b5c:	6878      	ldr	r0, [r7, #4]
 8006b5e:	f7fa f95d 	bl	8000e1c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	2202      	movs	r2, #2
 8006b66:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	681a      	ldr	r2, [r3, #0]
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	3304      	adds	r3, #4
 8006b72:	4619      	mov	r1, r3
 8006b74:	4610      	mov	r0, r2
 8006b76:	f000 fb79 	bl	800726c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	2201      	movs	r2, #1
 8006b7e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	2201      	movs	r2, #1
 8006b86:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	2201      	movs	r2, #1
 8006b8e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	2201      	movs	r2, #1
 8006b96:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	2201      	movs	r2, #1
 8006b9e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	2201      	movs	r2, #1
 8006ba6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	2201      	movs	r2, #1
 8006bae:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	2201      	movs	r2, #1
 8006bb6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	2201      	movs	r2, #1
 8006bbe:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	2201      	movs	r2, #1
 8006bc6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	2201      	movs	r2, #1
 8006bce:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	2201      	movs	r2, #1
 8006bd6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006bda:	2300      	movs	r3, #0
}
 8006bdc:	4618      	mov	r0, r3
 8006bde:	3708      	adds	r7, #8
 8006be0:	46bd      	mov	sp, r7
 8006be2:	bd80      	pop	{r7, pc}

08006be4 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8006be4:	b480      	push	{r7}
 8006be6:	b085      	sub	sp, #20
 8006be8:	af00      	add	r7, sp, #0
 8006bea:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006bf2:	b2db      	uxtb	r3, r3
 8006bf4:	2b01      	cmp	r3, #1
 8006bf6:	d001      	beq.n	8006bfc <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006bf8:	2301      	movs	r3, #1
 8006bfa:	e07c      	b.n	8006cf6 <HAL_TIM_Base_Start_IT+0x112>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	2202      	movs	r2, #2
 8006c00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	681b      	ldr	r3, [r3, #0]
 8006c08:	68da      	ldr	r2, [r3, #12]
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	681b      	ldr	r3, [r3, #0]
 8006c0e:	f042 0201 	orr.w	r2, r2, #1
 8006c12:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	4a3a      	ldr	r2, [pc, #232]	@ (8006d04 <HAL_TIM_Base_Start_IT+0x120>)
 8006c1a:	4293      	cmp	r3, r2
 8006c1c:	d04a      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	4a39      	ldr	r2, [pc, #228]	@ (8006d08 <HAL_TIM_Base_Start_IT+0x124>)
 8006c24:	4293      	cmp	r3, r2
 8006c26:	d045      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006c30:	d040      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006c3a:	d03b      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	4a32      	ldr	r2, [pc, #200]	@ (8006d0c <HAL_TIM_Base_Start_IT+0x128>)
 8006c42:	4293      	cmp	r3, r2
 8006c44:	d036      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	4a31      	ldr	r2, [pc, #196]	@ (8006d10 <HAL_TIM_Base_Start_IT+0x12c>)
 8006c4c:	4293      	cmp	r3, r2
 8006c4e:	d031      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	4a2f      	ldr	r2, [pc, #188]	@ (8006d14 <HAL_TIM_Base_Start_IT+0x130>)
 8006c56:	4293      	cmp	r3, r2
 8006c58:	d02c      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	4a2e      	ldr	r2, [pc, #184]	@ (8006d18 <HAL_TIM_Base_Start_IT+0x134>)
 8006c60:	4293      	cmp	r3, r2
 8006c62:	d027      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	4a2c      	ldr	r2, [pc, #176]	@ (8006d1c <HAL_TIM_Base_Start_IT+0x138>)
 8006c6a:	4293      	cmp	r3, r2
 8006c6c:	d022      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	681b      	ldr	r3, [r3, #0]
 8006c72:	4a2b      	ldr	r2, [pc, #172]	@ (8006d20 <HAL_TIM_Base_Start_IT+0x13c>)
 8006c74:	4293      	cmp	r3, r2
 8006c76:	d01d      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	681b      	ldr	r3, [r3, #0]
 8006c7c:	4a29      	ldr	r2, [pc, #164]	@ (8006d24 <HAL_TIM_Base_Start_IT+0x140>)
 8006c7e:	4293      	cmp	r3, r2
 8006c80:	d018      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	4a28      	ldr	r2, [pc, #160]	@ (8006d28 <HAL_TIM_Base_Start_IT+0x144>)
 8006c88:	4293      	cmp	r3, r2
 8006c8a:	d013      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	4a26      	ldr	r2, [pc, #152]	@ (8006d2c <HAL_TIM_Base_Start_IT+0x148>)
 8006c92:	4293      	cmp	r3, r2
 8006c94:	d00e      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	4a25      	ldr	r2, [pc, #148]	@ (8006d30 <HAL_TIM_Base_Start_IT+0x14c>)
 8006c9c:	4293      	cmp	r3, r2
 8006c9e:	d009      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	4a23      	ldr	r2, [pc, #140]	@ (8006d34 <HAL_TIM_Base_Start_IT+0x150>)
 8006ca6:	4293      	cmp	r3, r2
 8006ca8:	d004      	beq.n	8006cb4 <HAL_TIM_Base_Start_IT+0xd0>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	681b      	ldr	r3, [r3, #0]
 8006cae:	4a22      	ldr	r2, [pc, #136]	@ (8006d38 <HAL_TIM_Base_Start_IT+0x154>)
 8006cb0:	4293      	cmp	r3, r2
 8006cb2:	d115      	bne.n	8006ce0 <HAL_TIM_Base_Start_IT+0xfc>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	681b      	ldr	r3, [r3, #0]
 8006cb8:	689a      	ldr	r2, [r3, #8]
 8006cba:	4b20      	ldr	r3, [pc, #128]	@ (8006d3c <HAL_TIM_Base_Start_IT+0x158>)
 8006cbc:	4013      	ands	r3, r2
 8006cbe:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006cc0:	68fb      	ldr	r3, [r7, #12]
 8006cc2:	2b06      	cmp	r3, #6
 8006cc4:	d015      	beq.n	8006cf2 <HAL_TIM_Base_Start_IT+0x10e>
 8006cc6:	68fb      	ldr	r3, [r7, #12]
 8006cc8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006ccc:	d011      	beq.n	8006cf2 <HAL_TIM_Base_Start_IT+0x10e>
    {
      __HAL_TIM_ENABLE(htim);
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	681a      	ldr	r2, [r3, #0]
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	f042 0201 	orr.w	r2, r2, #1
 8006cdc:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006cde:	e008      	b.n	8006cf2 <HAL_TIM_Base_Start_IT+0x10e>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	681a      	ldr	r2, [r3, #0]
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	f042 0201 	orr.w	r2, r2, #1
 8006cee:	601a      	str	r2, [r3, #0]
 8006cf0:	e000      	b.n	8006cf4 <HAL_TIM_Base_Start_IT+0x110>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006cf2:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 8006cf4:	2300      	movs	r3, #0
}
 8006cf6:	4618      	mov	r0, r3
 8006cf8:	3714      	adds	r7, #20
 8006cfa:	46bd      	mov	sp, r7
 8006cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d00:	4770      	bx	lr
 8006d02:	bf00      	nop
 8006d04:	40012c00 	.word	0x40012c00
 8006d08:	50012c00 	.word	0x50012c00
 8006d0c:	40000400 	.word	0x40000400
 8006d10:	50000400 	.word	0x50000400
 8006d14:	40000800 	.word	0x40000800
 8006d18:	50000800 	.word	0x50000800
 8006d1c:	40000c00 	.word	0x40000c00
 8006d20:	50000c00 	.word	0x50000c00
 8006d24:	40013400 	.word	0x40013400
 8006d28:	50013400 	.word	0x50013400
 8006d2c:	40001800 	.word	0x40001800
 8006d30:	50001800 	.word	0x50001800
 8006d34:	40014000 	.word	0x40014000
 8006d38:	50014000 	.word	0x50014000
 8006d3c:	00010007 	.word	0x00010007

08006d40 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006d40:	b580      	push	{r7, lr}
 8006d42:	b084      	sub	sp, #16
 8006d44:	af00      	add	r7, sp, #0
 8006d46:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	681b      	ldr	r3, [r3, #0]
 8006d4c:	68db      	ldr	r3, [r3, #12]
 8006d4e:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	691b      	ldr	r3, [r3, #16]
 8006d56:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006d58:	68bb      	ldr	r3, [r7, #8]
 8006d5a:	f003 0302 	and.w	r3, r3, #2
 8006d5e:	2b00      	cmp	r3, #0
 8006d60:	d020      	beq.n	8006da4 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006d62:	68fb      	ldr	r3, [r7, #12]
 8006d64:	f003 0302 	and.w	r3, r3, #2
 8006d68:	2b00      	cmp	r3, #0
 8006d6a:	d01b      	beq.n	8006da4 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	681b      	ldr	r3, [r3, #0]
 8006d70:	f06f 0202 	mvn.w	r2, #2
 8006d74:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	2201      	movs	r2, #1
 8006d7a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	681b      	ldr	r3, [r3, #0]
 8006d80:	699b      	ldr	r3, [r3, #24]
 8006d82:	f003 0303 	and.w	r3, r3, #3
 8006d86:	2b00      	cmp	r3, #0
 8006d88:	d003      	beq.n	8006d92 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006d8a:	6878      	ldr	r0, [r7, #4]
 8006d8c:	f000 fa50 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006d90:	e005      	b.n	8006d9e <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006d92:	6878      	ldr	r0, [r7, #4]
 8006d94:	f000 fa42 	bl	800721c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006d98:	6878      	ldr	r0, [r7, #4]
 8006d9a:	f000 fa53 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	2200      	movs	r2, #0
 8006da2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006da4:	68bb      	ldr	r3, [r7, #8]
 8006da6:	f003 0304 	and.w	r3, r3, #4
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	d020      	beq.n	8006df0 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006dae:	68fb      	ldr	r3, [r7, #12]
 8006db0:	f003 0304 	and.w	r3, r3, #4
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	d01b      	beq.n	8006df0 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	f06f 0204 	mvn.w	r2, #4
 8006dc0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006dc2:	687b      	ldr	r3, [r7, #4]
 8006dc4:	2202      	movs	r2, #2
 8006dc6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	699b      	ldr	r3, [r3, #24]
 8006dce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	d003      	beq.n	8006dde <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006dd6:	6878      	ldr	r0, [r7, #4]
 8006dd8:	f000 fa2a 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006ddc:	e005      	b.n	8006dea <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006dde:	6878      	ldr	r0, [r7, #4]
 8006de0:	f000 fa1c 	bl	800721c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006de4:	6878      	ldr	r0, [r7, #4]
 8006de6:	f000 fa2d 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	2200      	movs	r2, #0
 8006dee:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8006df0:	68bb      	ldr	r3, [r7, #8]
 8006df2:	f003 0308 	and.w	r3, r3, #8
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d020      	beq.n	8006e3c <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8006dfa:	68fb      	ldr	r3, [r7, #12]
 8006dfc:	f003 0308 	and.w	r3, r3, #8
 8006e00:	2b00      	cmp	r3, #0
 8006e02:	d01b      	beq.n	8006e3c <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8006e04:	687b      	ldr	r3, [r7, #4]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	f06f 0208 	mvn.w	r2, #8
 8006e0c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	2204      	movs	r2, #4
 8006e12:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	681b      	ldr	r3, [r3, #0]
 8006e18:	69db      	ldr	r3, [r3, #28]
 8006e1a:	f003 0303 	and.w	r3, r3, #3
 8006e1e:	2b00      	cmp	r3, #0
 8006e20:	d003      	beq.n	8006e2a <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006e22:	6878      	ldr	r0, [r7, #4]
 8006e24:	f000 fa04 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006e28:	e005      	b.n	8006e36 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e2a:	6878      	ldr	r0, [r7, #4]
 8006e2c:	f000 f9f6 	bl	800721c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e30:	6878      	ldr	r0, [r7, #4]
 8006e32:	f000 fa07 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	2200      	movs	r2, #0
 8006e3a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8006e3c:	68bb      	ldr	r3, [r7, #8]
 8006e3e:	f003 0310 	and.w	r3, r3, #16
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d020      	beq.n	8006e88 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8006e46:	68fb      	ldr	r3, [r7, #12]
 8006e48:	f003 0310 	and.w	r3, r3, #16
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	d01b      	beq.n	8006e88 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	f06f 0210 	mvn.w	r2, #16
 8006e58:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	2208      	movs	r2, #8
 8006e5e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	69db      	ldr	r3, [r3, #28]
 8006e66:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d003      	beq.n	8006e76 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006e6e:	6878      	ldr	r0, [r7, #4]
 8006e70:	f000 f9de 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006e74:	e005      	b.n	8006e82 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e76:	6878      	ldr	r0, [r7, #4]
 8006e78:	f000 f9d0 	bl	800721c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e7c:	6878      	ldr	r0, [r7, #4]
 8006e7e:	f000 f9e1 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	2200      	movs	r2, #0
 8006e86:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8006e88:	68bb      	ldr	r3, [r7, #8]
 8006e8a:	f003 0301 	and.w	r3, r3, #1
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d00c      	beq.n	8006eac <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8006e92:	68fb      	ldr	r3, [r7, #12]
 8006e94:	f003 0301 	and.w	r3, r3, #1
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	d007      	beq.n	8006eac <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	f06f 0201 	mvn.w	r2, #1
 8006ea4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006ea6:	6878      	ldr	r0, [r7, #4]
 8006ea8:	f7f9 fe8a 	bl	8000bc0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8006eac:	68bb      	ldr	r3, [r7, #8]
 8006eae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	d104      	bne.n	8006ec0 <HAL_TIM_IRQHandler+0x180>
      ((itflag & (TIM_FLAG_SYSTEM_BREAK)) == (TIM_FLAG_SYSTEM_BREAK)))
 8006eb6:	68bb      	ldr	r3, [r7, #8]
 8006eb8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	d00c      	beq.n	8006eda <HAL_TIM_IRQHandler+0x19a>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006ec0:	68fb      	ldr	r3, [r7, #12]
 8006ec2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006ec6:	2b00      	cmp	r3, #0
 8006ec8:	d007      	beq.n	8006eda <HAL_TIM_IRQHandler+0x19a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8006ed2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006ed4:	6878      	ldr	r0, [r7, #4]
 8006ed6:	f000 fc69 	bl	80077ac <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8006eda:	68bb      	ldr	r3, [r7, #8]
 8006edc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	d00c      	beq.n	8006efe <HAL_TIM_IRQHandler+0x1be>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006eea:	2b00      	cmp	r3, #0
 8006eec:	d007      	beq.n	8006efe <HAL_TIM_IRQHandler+0x1be>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	681b      	ldr	r3, [r3, #0]
 8006ef2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8006ef6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8006ef8:	6878      	ldr	r0, [r7, #4]
 8006efa:	f000 fc61 	bl	80077c0 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006efe:	68bb      	ldr	r3, [r7, #8]
 8006f00:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006f04:	2b00      	cmp	r3, #0
 8006f06:	d00c      	beq.n	8006f22 <HAL_TIM_IRQHandler+0x1e2>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d007      	beq.n	8006f22 <HAL_TIM_IRQHandler+0x1e2>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	681b      	ldr	r3, [r3, #0]
 8006f16:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006f1a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006f1c:	6878      	ldr	r0, [r7, #4]
 8006f1e:	f000 f99b 	bl	8007258 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006f22:	68bb      	ldr	r3, [r7, #8]
 8006f24:	f003 0320 	and.w	r3, r3, #32
 8006f28:	2b00      	cmp	r3, #0
 8006f2a:	d00c      	beq.n	8006f46 <HAL_TIM_IRQHandler+0x206>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	f003 0320 	and.w	r3, r3, #32
 8006f32:	2b00      	cmp	r3, #0
 8006f34:	d007      	beq.n	8006f46 <HAL_TIM_IRQHandler+0x206>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006f36:	687b      	ldr	r3, [r7, #4]
 8006f38:	681b      	ldr	r3, [r3, #0]
 8006f3a:	f06f 0220 	mvn.w	r2, #32
 8006f3e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006f40:	6878      	ldr	r0, [r7, #4]
 8006f42:	f000 fc29 	bl	8007798 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Encoder index event */
  if ((itflag & (TIM_FLAG_IDX)) == (TIM_FLAG_IDX))
 8006f46:	68bb      	ldr	r3, [r7, #8]
 8006f48:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006f4c:	2b00      	cmp	r3, #0
 8006f4e:	d00c      	beq.n	8006f6a <HAL_TIM_IRQHandler+0x22a>
  {
    if ((itsource & (TIM_IT_IDX)) == (TIM_IT_IDX))
 8006f50:	68fb      	ldr	r3, [r7, #12]
 8006f52:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	d007      	beq.n	8006f6a <HAL_TIM_IRQHandler+0x22a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IDX);
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	681b      	ldr	r3, [r3, #0]
 8006f5e:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8006f62:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->EncoderIndexCallback(htim);
#else
      HAL_TIMEx_EncoderIndexCallback(htim);
 8006f64:	6878      	ldr	r0, [r7, #4]
 8006f66:	f000 fc35 	bl	80077d4 <HAL_TIMEx_EncoderIndexCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Direction change event */
  if ((itflag & (TIM_FLAG_DIR)) == (TIM_FLAG_DIR))
 8006f6a:	68bb      	ldr	r3, [r7, #8]
 8006f6c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006f70:	2b00      	cmp	r3, #0
 8006f72:	d00c      	beq.n	8006f8e <HAL_TIM_IRQHandler+0x24e>
  {
    if ((itsource & (TIM_IT_DIR)) == (TIM_IT_DIR))
 8006f74:	68fb      	ldr	r3, [r7, #12]
 8006f76:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	d007      	beq.n	8006f8e <HAL_TIM_IRQHandler+0x24e>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_DIR);
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 8006f86:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->DirectionChangeCallback(htim);
#else
      HAL_TIMEx_DirectionChangeCallback(htim);
 8006f88:	6878      	ldr	r0, [r7, #4]
 8006f8a:	f000 fc2d 	bl	80077e8 <HAL_TIMEx_DirectionChangeCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Index error event */
  if ((itflag & (TIM_FLAG_IERR)) == (TIM_FLAG_IERR))
 8006f8e:	68bb      	ldr	r3, [r7, #8]
 8006f90:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d00c      	beq.n	8006fb2 <HAL_TIM_IRQHandler+0x272>
  {
    if ((itsource & (TIM_IT_IERR)) == (TIM_IT_IERR))
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d007      	beq.n	8006fb2 <HAL_TIM_IRQHandler+0x272>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_IERR);
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 8006faa:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->IndexErrorCallback(htim);
#else
      HAL_TIMEx_IndexErrorCallback(htim);
 8006fac:	6878      	ldr	r0, [r7, #4]
 8006fae:	f000 fc25 	bl	80077fc <HAL_TIMEx_IndexErrorCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Transition error event */
  if ((itflag & (TIM_FLAG_TERR)) == (TIM_FLAG_TERR))
 8006fb2:	68bb      	ldr	r3, [r7, #8]
 8006fb4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d00c      	beq.n	8006fd6 <HAL_TIM_IRQHandler+0x296>
  {
    if ((itsource & (TIM_IT_TERR)) == (TIM_IT_TERR))
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006fc2:	2b00      	cmp	r3, #0
 8006fc4:	d007      	beq.n	8006fd6 <HAL_TIM_IRQHandler+0x296>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TERR);
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	681b      	ldr	r3, [r3, #0]
 8006fca:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 8006fce:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TransitionErrorCallback(htim);
#else
      HAL_TIMEx_TransitionErrorCallback(htim);
 8006fd0:	6878      	ldr	r0, [r7, #4]
 8006fd2:	f000 fc1d 	bl	8007810 <HAL_TIMEx_TransitionErrorCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006fd6:	bf00      	nop
 8006fd8:	3710      	adds	r7, #16
 8006fda:	46bd      	mov	sp, r7
 8006fdc:	bd80      	pop	{r7, pc}
	...

08006fe0 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8006fe0:	b580      	push	{r7, lr}
 8006fe2:	b084      	sub	sp, #16
 8006fe4:	af00      	add	r7, sp, #0
 8006fe6:	6078      	str	r0, [r7, #4]
 8006fe8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8006fea:	2300      	movs	r3, #0
 8006fec:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006ff4:	2b01      	cmp	r3, #1
 8006ff6:	d101      	bne.n	8006ffc <HAL_TIM_ConfigClockSource+0x1c>
 8006ff8:	2302      	movs	r3, #2
 8006ffa:	e0fe      	b.n	80071fa <HAL_TIM_ConfigClockSource+0x21a>
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	2201      	movs	r2, #1
 8007000:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	2202      	movs	r2, #2
 8007008:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	689b      	ldr	r3, [r3, #8]
 8007012:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007014:	68bb      	ldr	r3, [r7, #8]
 8007016:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 800701a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800701e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007020:	68bb      	ldr	r3, [r7, #8]
 8007022:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007026:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	68ba      	ldr	r2, [r7, #8]
 800702e:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007030:	683b      	ldr	r3, [r7, #0]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007038:	f000 80c9 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800703c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007040:	f200 80ce 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007044:	4a6f      	ldr	r2, [pc, #444]	@ (8007204 <HAL_TIM_ConfigClockSource+0x224>)
 8007046:	4293      	cmp	r3, r2
 8007048:	f000 80c1 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800704c:	4a6d      	ldr	r2, [pc, #436]	@ (8007204 <HAL_TIM_ConfigClockSource+0x224>)
 800704e:	4293      	cmp	r3, r2
 8007050:	f200 80c6 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007054:	4a6c      	ldr	r2, [pc, #432]	@ (8007208 <HAL_TIM_ConfigClockSource+0x228>)
 8007056:	4293      	cmp	r3, r2
 8007058:	f000 80b9 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800705c:	4a6a      	ldr	r2, [pc, #424]	@ (8007208 <HAL_TIM_ConfigClockSource+0x228>)
 800705e:	4293      	cmp	r3, r2
 8007060:	f200 80be 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007064:	4a69      	ldr	r2, [pc, #420]	@ (800720c <HAL_TIM_ConfigClockSource+0x22c>)
 8007066:	4293      	cmp	r3, r2
 8007068:	f000 80b1 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800706c:	4a67      	ldr	r2, [pc, #412]	@ (800720c <HAL_TIM_ConfigClockSource+0x22c>)
 800706e:	4293      	cmp	r3, r2
 8007070:	f200 80b6 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007074:	4a66      	ldr	r2, [pc, #408]	@ (8007210 <HAL_TIM_ConfigClockSource+0x230>)
 8007076:	4293      	cmp	r3, r2
 8007078:	f000 80a9 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800707c:	4a64      	ldr	r2, [pc, #400]	@ (8007210 <HAL_TIM_ConfigClockSource+0x230>)
 800707e:	4293      	cmp	r3, r2
 8007080:	f200 80ae 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007084:	4a63      	ldr	r2, [pc, #396]	@ (8007214 <HAL_TIM_ConfigClockSource+0x234>)
 8007086:	4293      	cmp	r3, r2
 8007088:	f000 80a1 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800708c:	4a61      	ldr	r2, [pc, #388]	@ (8007214 <HAL_TIM_ConfigClockSource+0x234>)
 800708e:	4293      	cmp	r3, r2
 8007090:	f200 80a6 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007094:	4a60      	ldr	r2, [pc, #384]	@ (8007218 <HAL_TIM_ConfigClockSource+0x238>)
 8007096:	4293      	cmp	r3, r2
 8007098:	f000 8099 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800709c:	4a5e      	ldr	r2, [pc, #376]	@ (8007218 <HAL_TIM_ConfigClockSource+0x238>)
 800709e:	4293      	cmp	r3, r2
 80070a0:	f200 809e 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070a4:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 80070a8:	f000 8091 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 80070ac:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 80070b0:	f200 8096 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070b4:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80070b8:	f000 8089 	beq.w	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 80070bc:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80070c0:	f200 808e 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070c4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80070c8:	d03e      	beq.n	8007148 <HAL_TIM_ConfigClockSource+0x168>
 80070ca:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80070ce:	f200 8087 	bhi.w	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070d2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80070d6:	f000 8086 	beq.w	80071e6 <HAL_TIM_ConfigClockSource+0x206>
 80070da:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80070de:	d87f      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070e0:	2b70      	cmp	r3, #112	@ 0x70
 80070e2:	d01a      	beq.n	800711a <HAL_TIM_ConfigClockSource+0x13a>
 80070e4:	2b70      	cmp	r3, #112	@ 0x70
 80070e6:	d87b      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070e8:	2b60      	cmp	r3, #96	@ 0x60
 80070ea:	d050      	beq.n	800718e <HAL_TIM_ConfigClockSource+0x1ae>
 80070ec:	2b60      	cmp	r3, #96	@ 0x60
 80070ee:	d877      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070f0:	2b50      	cmp	r3, #80	@ 0x50
 80070f2:	d03c      	beq.n	800716e <HAL_TIM_ConfigClockSource+0x18e>
 80070f4:	2b50      	cmp	r3, #80	@ 0x50
 80070f6:	d873      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 80070f8:	2b40      	cmp	r3, #64	@ 0x40
 80070fa:	d058      	beq.n	80071ae <HAL_TIM_ConfigClockSource+0x1ce>
 80070fc:	2b40      	cmp	r3, #64	@ 0x40
 80070fe:	d86f      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007100:	2b30      	cmp	r3, #48	@ 0x30
 8007102:	d064      	beq.n	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 8007104:	2b30      	cmp	r3, #48	@ 0x30
 8007106:	d86b      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007108:	2b20      	cmp	r3, #32
 800710a:	d060      	beq.n	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 800710c:	2b20      	cmp	r3, #32
 800710e:	d867      	bhi.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
 8007110:	2b00      	cmp	r3, #0
 8007112:	d05c      	beq.n	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 8007114:	2b10      	cmp	r3, #16
 8007116:	d05a      	beq.n	80071ce <HAL_TIM_ConfigClockSource+0x1ee>
 8007118:	e062      	b.n	80071e0 <HAL_TIM_ConfigClockSource+0x200>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800711e:	683b      	ldr	r3, [r7, #0]
 8007120:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8007122:	683b      	ldr	r3, [r7, #0]
 8007124:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007126:	683b      	ldr	r3, [r7, #0]
 8007128:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 800712a:	f000 fa45 	bl	80075b8 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	689b      	ldr	r3, [r3, #8]
 8007134:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007136:	68bb      	ldr	r3, [r7, #8]
 8007138:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 800713c:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	68ba      	ldr	r2, [r7, #8]
 8007144:	609a      	str	r2, [r3, #8]
      break;
 8007146:	e04f      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800714c:	683b      	ldr	r3, [r7, #0]
 800714e:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8007150:	683b      	ldr	r3, [r7, #0]
 8007152:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007154:	683b      	ldr	r3, [r7, #0]
 8007156:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007158:	f000 fa2e 	bl	80075b8 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	681b      	ldr	r3, [r3, #0]
 8007160:	689a      	ldr	r2, [r3, #8]
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	681b      	ldr	r3, [r3, #0]
 8007166:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800716a:	609a      	str	r2, [r3, #8]
      break;
 800716c:	e03c      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007172:	683b      	ldr	r3, [r7, #0]
 8007174:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007176:	683b      	ldr	r3, [r7, #0]
 8007178:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800717a:	461a      	mov	r2, r3
 800717c:	f000 f9a0 	bl	80074c0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	681b      	ldr	r3, [r3, #0]
 8007184:	2150      	movs	r1, #80	@ 0x50
 8007186:	4618      	mov	r0, r3
 8007188:	f000 f9f9 	bl	800757e <TIM_ITRx_SetConfig>
      break;
 800718c:	e02c      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007192:	683b      	ldr	r3, [r7, #0]
 8007194:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007196:	683b      	ldr	r3, [r7, #0]
 8007198:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800719a:	461a      	mov	r2, r3
 800719c:	f000 f9bf 	bl	800751e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	2160      	movs	r1, #96	@ 0x60
 80071a6:	4618      	mov	r0, r3
 80071a8:	f000 f9e9 	bl	800757e <TIM_ITRx_SetConfig>
      break;
 80071ac:	e01c      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80071ae:	687b      	ldr	r3, [r7, #4]
 80071b0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80071b2:	683b      	ldr	r3, [r7, #0]
 80071b4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80071b6:	683b      	ldr	r3, [r7, #0]
 80071b8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80071ba:	461a      	mov	r2, r3
 80071bc:	f000 f980 	bl	80074c0 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	2140      	movs	r1, #64	@ 0x40
 80071c6:	4618      	mov	r0, r3
 80071c8:	f000 f9d9 	bl	800757e <TIM_ITRx_SetConfig>
      break;
 80071cc:	e00c      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>
    case TIM_CLOCKSOURCE_ITR12:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_INSTANCE((htim->Instance), sClockSourceConfig->ClockSource));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	681a      	ldr	r2, [r3, #0]
 80071d2:	683b      	ldr	r3, [r7, #0]
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	4619      	mov	r1, r3
 80071d8:	4610      	mov	r0, r2
 80071da:	f000 f9d0 	bl	800757e <TIM_ITRx_SetConfig>
      break;
 80071de:	e003      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>
    }

    default:
      status = HAL_ERROR;
 80071e0:	2301      	movs	r3, #1
 80071e2:	73fb      	strb	r3, [r7, #15]
      break;
 80071e4:	e000      	b.n	80071e8 <HAL_TIM_ConfigClockSource+0x208>
      break;
 80071e6:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	2201      	movs	r2, #1
 80071ec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	2200      	movs	r2, #0
 80071f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80071f8:	7bfb      	ldrb	r3, [r7, #15]
}
 80071fa:	4618      	mov	r0, r3
 80071fc:	3710      	adds	r7, #16
 80071fe:	46bd      	mov	sp, r7
 8007200:	bd80      	pop	{r7, pc}
 8007202:	bf00      	nop
 8007204:	00100070 	.word	0x00100070
 8007208:	00100060 	.word	0x00100060
 800720c:	00100050 	.word	0x00100050
 8007210:	00100040 	.word	0x00100040
 8007214:	00100030 	.word	0x00100030
 8007218:	00100020 	.word	0x00100020

0800721c <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800721c:	b480      	push	{r7}
 800721e:	b083      	sub	sp, #12
 8007220:	af00      	add	r7, sp, #0
 8007222:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8007224:	bf00      	nop
 8007226:	370c      	adds	r7, #12
 8007228:	46bd      	mov	sp, r7
 800722a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722e:	4770      	bx	lr

08007230 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007230:	b480      	push	{r7}
 8007232:	b083      	sub	sp, #12
 8007234:	af00      	add	r7, sp, #0
 8007236:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8007238:	bf00      	nop
 800723a:	370c      	adds	r7, #12
 800723c:	46bd      	mov	sp, r7
 800723e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007242:	4770      	bx	lr

08007244 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8007244:	b480      	push	{r7}
 8007246:	b083      	sub	sp, #12
 8007248:	af00      	add	r7, sp, #0
 800724a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800724c:	bf00      	nop
 800724e:	370c      	adds	r7, #12
 8007250:	46bd      	mov	sp, r7
 8007252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007256:	4770      	bx	lr

08007258 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8007258:	b480      	push	{r7}
 800725a:	b083      	sub	sp, #12
 800725c:	af00      	add	r7, sp, #0
 800725e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007260:	bf00      	nop
 8007262:	370c      	adds	r7, #12
 8007264:	46bd      	mov	sp, r7
 8007266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800726a:	4770      	bx	lr

0800726c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800726c:	b480      	push	{r7}
 800726e:	b085      	sub	sp, #20
 8007270:	af00      	add	r7, sp, #0
 8007272:	6078      	str	r0, [r7, #4]
 8007274:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	681b      	ldr	r3, [r3, #0]
 800727a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	4a7a      	ldr	r2, [pc, #488]	@ (8007468 <TIM_Base_SetConfig+0x1fc>)
 8007280:	4293      	cmp	r3, r2
 8007282:	d02b      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	4a79      	ldr	r2, [pc, #484]	@ (800746c <TIM_Base_SetConfig+0x200>)
 8007288:	4293      	cmp	r3, r2
 800728a:	d027      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007292:	d023      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800729a:	d01f      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	4a74      	ldr	r2, [pc, #464]	@ (8007470 <TIM_Base_SetConfig+0x204>)
 80072a0:	4293      	cmp	r3, r2
 80072a2:	d01b      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	4a73      	ldr	r2, [pc, #460]	@ (8007474 <TIM_Base_SetConfig+0x208>)
 80072a8:	4293      	cmp	r3, r2
 80072aa:	d017      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	4a72      	ldr	r2, [pc, #456]	@ (8007478 <TIM_Base_SetConfig+0x20c>)
 80072b0:	4293      	cmp	r3, r2
 80072b2:	d013      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	4a71      	ldr	r2, [pc, #452]	@ (800747c <TIM_Base_SetConfig+0x210>)
 80072b8:	4293      	cmp	r3, r2
 80072ba:	d00f      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	4a70      	ldr	r2, [pc, #448]	@ (8007480 <TIM_Base_SetConfig+0x214>)
 80072c0:	4293      	cmp	r3, r2
 80072c2:	d00b      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	4a6f      	ldr	r2, [pc, #444]	@ (8007484 <TIM_Base_SetConfig+0x218>)
 80072c8:	4293      	cmp	r3, r2
 80072ca:	d007      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	4a6e      	ldr	r2, [pc, #440]	@ (8007488 <TIM_Base_SetConfig+0x21c>)
 80072d0:	4293      	cmp	r3, r2
 80072d2:	d003      	beq.n	80072dc <TIM_Base_SetConfig+0x70>
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	4a6d      	ldr	r2, [pc, #436]	@ (800748c <TIM_Base_SetConfig+0x220>)
 80072d8:	4293      	cmp	r3, r2
 80072da:	d108      	bne.n	80072ee <TIM_Base_SetConfig+0x82>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80072e2:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80072e4:	683b      	ldr	r3, [r7, #0]
 80072e6:	685b      	ldr	r3, [r3, #4]
 80072e8:	68fa      	ldr	r2, [r7, #12]
 80072ea:	4313      	orrs	r3, r2
 80072ec:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	4a5d      	ldr	r2, [pc, #372]	@ (8007468 <TIM_Base_SetConfig+0x1fc>)
 80072f2:	4293      	cmp	r3, r2
 80072f4:	d05b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	4a5c      	ldr	r2, [pc, #368]	@ (800746c <TIM_Base_SetConfig+0x200>)
 80072fa:	4293      	cmp	r3, r2
 80072fc:	d057      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007304:	d053      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800730c:	d04f      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	4a57      	ldr	r2, [pc, #348]	@ (8007470 <TIM_Base_SetConfig+0x204>)
 8007312:	4293      	cmp	r3, r2
 8007314:	d04b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	4a56      	ldr	r2, [pc, #344]	@ (8007474 <TIM_Base_SetConfig+0x208>)
 800731a:	4293      	cmp	r3, r2
 800731c:	d047      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	4a55      	ldr	r2, [pc, #340]	@ (8007478 <TIM_Base_SetConfig+0x20c>)
 8007322:	4293      	cmp	r3, r2
 8007324:	d043      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	4a54      	ldr	r2, [pc, #336]	@ (800747c <TIM_Base_SetConfig+0x210>)
 800732a:	4293      	cmp	r3, r2
 800732c:	d03f      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800732e:	687b      	ldr	r3, [r7, #4]
 8007330:	4a53      	ldr	r2, [pc, #332]	@ (8007480 <TIM_Base_SetConfig+0x214>)
 8007332:	4293      	cmp	r3, r2
 8007334:	d03b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	4a52      	ldr	r2, [pc, #328]	@ (8007484 <TIM_Base_SetConfig+0x218>)
 800733a:	4293      	cmp	r3, r2
 800733c:	d037      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	4a51      	ldr	r2, [pc, #324]	@ (8007488 <TIM_Base_SetConfig+0x21c>)
 8007342:	4293      	cmp	r3, r2
 8007344:	d033      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	4a50      	ldr	r2, [pc, #320]	@ (800748c <TIM_Base_SetConfig+0x220>)
 800734a:	4293      	cmp	r3, r2
 800734c:	d02f      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	4a4f      	ldr	r2, [pc, #316]	@ (8007490 <TIM_Base_SetConfig+0x224>)
 8007352:	4293      	cmp	r3, r2
 8007354:	d02b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007356:	687b      	ldr	r3, [r7, #4]
 8007358:	4a4e      	ldr	r2, [pc, #312]	@ (8007494 <TIM_Base_SetConfig+0x228>)
 800735a:	4293      	cmp	r3, r2
 800735c:	d027      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	4a4d      	ldr	r2, [pc, #308]	@ (8007498 <TIM_Base_SetConfig+0x22c>)
 8007362:	4293      	cmp	r3, r2
 8007364:	d023      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	4a4c      	ldr	r2, [pc, #304]	@ (800749c <TIM_Base_SetConfig+0x230>)
 800736a:	4293      	cmp	r3, r2
 800736c:	d01f      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	4a4b      	ldr	r2, [pc, #300]	@ (80074a0 <TIM_Base_SetConfig+0x234>)
 8007372:	4293      	cmp	r3, r2
 8007374:	d01b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	4a4a      	ldr	r2, [pc, #296]	@ (80074a4 <TIM_Base_SetConfig+0x238>)
 800737a:	4293      	cmp	r3, r2
 800737c:	d017      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	4a49      	ldr	r2, [pc, #292]	@ (80074a8 <TIM_Base_SetConfig+0x23c>)
 8007382:	4293      	cmp	r3, r2
 8007384:	d013      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	4a48      	ldr	r2, [pc, #288]	@ (80074ac <TIM_Base_SetConfig+0x240>)
 800738a:	4293      	cmp	r3, r2
 800738c:	d00f      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	4a47      	ldr	r2, [pc, #284]	@ (80074b0 <TIM_Base_SetConfig+0x244>)
 8007392:	4293      	cmp	r3, r2
 8007394:	d00b      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	4a46      	ldr	r2, [pc, #280]	@ (80074b4 <TIM_Base_SetConfig+0x248>)
 800739a:	4293      	cmp	r3, r2
 800739c:	d007      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	4a45      	ldr	r2, [pc, #276]	@ (80074b8 <TIM_Base_SetConfig+0x24c>)
 80073a2:	4293      	cmp	r3, r2
 80073a4:	d003      	beq.n	80073ae <TIM_Base_SetConfig+0x142>
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	4a44      	ldr	r2, [pc, #272]	@ (80074bc <TIM_Base_SetConfig+0x250>)
 80073aa:	4293      	cmp	r3, r2
 80073ac:	d108      	bne.n	80073c0 <TIM_Base_SetConfig+0x154>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80073ae:	68fb      	ldr	r3, [r7, #12]
 80073b0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80073b4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80073b6:	683b      	ldr	r3, [r7, #0]
 80073b8:	68db      	ldr	r3, [r3, #12]
 80073ba:	68fa      	ldr	r2, [r7, #12]
 80073bc:	4313      	orrs	r3, r2
 80073be:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80073c0:	68fb      	ldr	r3, [r7, #12]
 80073c2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80073c6:	683b      	ldr	r3, [r7, #0]
 80073c8:	695b      	ldr	r3, [r3, #20]
 80073ca:	4313      	orrs	r3, r2
 80073cc:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	68fa      	ldr	r2, [r7, #12]
 80073d2:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80073d4:	683b      	ldr	r3, [r7, #0]
 80073d6:	689a      	ldr	r2, [r3, #8]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80073dc:	683b      	ldr	r3, [r7, #0]
 80073de:	681a      	ldr	r2, [r3, #0]
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	4a20      	ldr	r2, [pc, #128]	@ (8007468 <TIM_Base_SetConfig+0x1fc>)
 80073e8:	4293      	cmp	r3, r2
 80073ea:	d023      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	4a1f      	ldr	r2, [pc, #124]	@ (800746c <TIM_Base_SetConfig+0x200>)
 80073f0:	4293      	cmp	r3, r2
 80073f2:	d01f      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	4a24      	ldr	r2, [pc, #144]	@ (8007488 <TIM_Base_SetConfig+0x21c>)
 80073f8:	4293      	cmp	r3, r2
 80073fa:	d01b      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 80073fc:	687b      	ldr	r3, [r7, #4]
 80073fe:	4a23      	ldr	r2, [pc, #140]	@ (800748c <TIM_Base_SetConfig+0x220>)
 8007400:	4293      	cmp	r3, r2
 8007402:	d017      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	4a28      	ldr	r2, [pc, #160]	@ (80074a8 <TIM_Base_SetConfig+0x23c>)
 8007408:	4293      	cmp	r3, r2
 800740a:	d013      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	4a27      	ldr	r2, [pc, #156]	@ (80074ac <TIM_Base_SetConfig+0x240>)
 8007410:	4293      	cmp	r3, r2
 8007412:	d00f      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	4a26      	ldr	r2, [pc, #152]	@ (80074b0 <TIM_Base_SetConfig+0x244>)
 8007418:	4293      	cmp	r3, r2
 800741a:	d00b      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	4a25      	ldr	r2, [pc, #148]	@ (80074b4 <TIM_Base_SetConfig+0x248>)
 8007420:	4293      	cmp	r3, r2
 8007422:	d007      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	4a24      	ldr	r2, [pc, #144]	@ (80074b8 <TIM_Base_SetConfig+0x24c>)
 8007428:	4293      	cmp	r3, r2
 800742a:	d003      	beq.n	8007434 <TIM_Base_SetConfig+0x1c8>
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	4a23      	ldr	r2, [pc, #140]	@ (80074bc <TIM_Base_SetConfig+0x250>)
 8007430:	4293      	cmp	r3, r2
 8007432:	d103      	bne.n	800743c <TIM_Base_SetConfig+0x1d0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007434:	683b      	ldr	r3, [r7, #0]
 8007436:	691a      	ldr	r2, [r3, #16]
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	2201      	movs	r2, #1
 8007440:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	691b      	ldr	r3, [r3, #16]
 8007446:	f003 0301 	and.w	r3, r3, #1
 800744a:	2b01      	cmp	r3, #1
 800744c:	d105      	bne.n	800745a <TIM_Base_SetConfig+0x1ee>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	691b      	ldr	r3, [r3, #16]
 8007452:	f023 0201 	bic.w	r2, r3, #1
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	611a      	str	r2, [r3, #16]
  }
}
 800745a:	bf00      	nop
 800745c:	3714      	adds	r7, #20
 800745e:	46bd      	mov	sp, r7
 8007460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007464:	4770      	bx	lr
 8007466:	bf00      	nop
 8007468:	40012c00 	.word	0x40012c00
 800746c:	50012c00 	.word	0x50012c00
 8007470:	40000400 	.word	0x40000400
 8007474:	50000400 	.word	0x50000400
 8007478:	40000800 	.word	0x40000800
 800747c:	50000800 	.word	0x50000800
 8007480:	40000c00 	.word	0x40000c00
 8007484:	50000c00 	.word	0x50000c00
 8007488:	40013400 	.word	0x40013400
 800748c:	50013400 	.word	0x50013400
 8007490:	40001800 	.word	0x40001800
 8007494:	50001800 	.word	0x50001800
 8007498:	40001c00 	.word	0x40001c00
 800749c:	50001c00 	.word	0x50001c00
 80074a0:	40002000 	.word	0x40002000
 80074a4:	50002000 	.word	0x50002000
 80074a8:	40014000 	.word	0x40014000
 80074ac:	50014000 	.word	0x50014000
 80074b0:	40014400 	.word	0x40014400
 80074b4:	50014400 	.word	0x50014400
 80074b8:	40014800 	.word	0x40014800
 80074bc:	50014800 	.word	0x50014800

080074c0 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80074c0:	b480      	push	{r7}
 80074c2:	b087      	sub	sp, #28
 80074c4:	af00      	add	r7, sp, #0
 80074c6:	60f8      	str	r0, [r7, #12]
 80074c8:	60b9      	str	r1, [r7, #8]
 80074ca:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	6a1b      	ldr	r3, [r3, #32]
 80074d0:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80074d2:	68fb      	ldr	r3, [r7, #12]
 80074d4:	6a1b      	ldr	r3, [r3, #32]
 80074d6:	f023 0201 	bic.w	r2, r3, #1
 80074da:	68fb      	ldr	r3, [r7, #12]
 80074dc:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80074de:	68fb      	ldr	r3, [r7, #12]
 80074e0:	699b      	ldr	r3, [r3, #24]
 80074e2:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80074e4:	693b      	ldr	r3, [r7, #16]
 80074e6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80074ea:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	011b      	lsls	r3, r3, #4
 80074f0:	693a      	ldr	r2, [r7, #16]
 80074f2:	4313      	orrs	r3, r2
 80074f4:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80074f6:	697b      	ldr	r3, [r7, #20]
 80074f8:	f023 030a 	bic.w	r3, r3, #10
 80074fc:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 80074fe:	697a      	ldr	r2, [r7, #20]
 8007500:	68bb      	ldr	r3, [r7, #8]
 8007502:	4313      	orrs	r3, r2
 8007504:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	693a      	ldr	r2, [r7, #16]
 800750a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800750c:	68fb      	ldr	r3, [r7, #12]
 800750e:	697a      	ldr	r2, [r7, #20]
 8007510:	621a      	str	r2, [r3, #32]
}
 8007512:	bf00      	nop
 8007514:	371c      	adds	r7, #28
 8007516:	46bd      	mov	sp, r7
 8007518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800751c:	4770      	bx	lr

0800751e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 800751e:	b480      	push	{r7}
 8007520:	b087      	sub	sp, #28
 8007522:	af00      	add	r7, sp, #0
 8007524:	60f8      	str	r0, [r7, #12]
 8007526:	60b9      	str	r1, [r7, #8]
 8007528:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 800752a:	68fb      	ldr	r3, [r7, #12]
 800752c:	6a1b      	ldr	r3, [r3, #32]
 800752e:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	6a1b      	ldr	r3, [r3, #32]
 8007534:	f023 0210 	bic.w	r2, r3, #16
 8007538:	68fb      	ldr	r3, [r7, #12]
 800753a:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800753c:	68fb      	ldr	r3, [r7, #12]
 800753e:	699b      	ldr	r3, [r3, #24]
 8007540:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007542:	693b      	ldr	r3, [r7, #16]
 8007544:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007548:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	031b      	lsls	r3, r3, #12
 800754e:	693a      	ldr	r2, [r7, #16]
 8007550:	4313      	orrs	r3, r2
 8007552:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007554:	697b      	ldr	r3, [r7, #20]
 8007556:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800755a:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 800755c:	68bb      	ldr	r3, [r7, #8]
 800755e:	011b      	lsls	r3, r3, #4
 8007560:	697a      	ldr	r2, [r7, #20]
 8007562:	4313      	orrs	r3, r2
 8007564:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	693a      	ldr	r2, [r7, #16]
 800756a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	697a      	ldr	r2, [r7, #20]
 8007570:	621a      	str	r2, [r3, #32]
}
 8007572:	bf00      	nop
 8007574:	371c      	adds	r7, #28
 8007576:	46bd      	mov	sp, r7
 8007578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800757c:	4770      	bx	lr

0800757e <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 800757e:	b480      	push	{r7}
 8007580:	b085      	sub	sp, #20
 8007582:	af00      	add	r7, sp, #0
 8007584:	6078      	str	r0, [r7, #4]
 8007586:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	689b      	ldr	r3, [r3, #8]
 800758c:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8007594:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007598:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800759a:	683a      	ldr	r2, [r7, #0]
 800759c:	68fb      	ldr	r3, [r7, #12]
 800759e:	4313      	orrs	r3, r2
 80075a0:	f043 0307 	orr.w	r3, r3, #7
 80075a4:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	68fa      	ldr	r2, [r7, #12]
 80075aa:	609a      	str	r2, [r3, #8]
}
 80075ac:	bf00      	nop
 80075ae:	3714      	adds	r7, #20
 80075b0:	46bd      	mov	sp, r7
 80075b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075b6:	4770      	bx	lr

080075b8 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80075b8:	b480      	push	{r7}
 80075ba:	b087      	sub	sp, #28
 80075bc:	af00      	add	r7, sp, #0
 80075be:	60f8      	str	r0, [r7, #12]
 80075c0:	60b9      	str	r1, [r7, #8]
 80075c2:	607a      	str	r2, [r7, #4]
 80075c4:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80075c6:	68fb      	ldr	r3, [r7, #12]
 80075c8:	689b      	ldr	r3, [r3, #8]
 80075ca:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80075cc:	697b      	ldr	r3, [r7, #20]
 80075ce:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80075d2:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80075d4:	683b      	ldr	r3, [r7, #0]
 80075d6:	021a      	lsls	r2, r3, #8
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	431a      	orrs	r2, r3
 80075dc:	68bb      	ldr	r3, [r7, #8]
 80075de:	4313      	orrs	r3, r2
 80075e0:	697a      	ldr	r2, [r7, #20]
 80075e2:	4313      	orrs	r3, r2
 80075e4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80075e6:	68fb      	ldr	r3, [r7, #12]
 80075e8:	697a      	ldr	r2, [r7, #20]
 80075ea:	609a      	str	r2, [r3, #8]
}
 80075ec:	bf00      	nop
 80075ee:	371c      	adds	r7, #28
 80075f0:	46bd      	mov	sp, r7
 80075f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075f6:	4770      	bx	lr

080075f8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 80075f8:	b480      	push	{r7}
 80075fa:	b085      	sub	sp, #20
 80075fc:	af00      	add	r7, sp, #0
 80075fe:	6078      	str	r0, [r7, #4]
 8007600:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007608:	2b01      	cmp	r3, #1
 800760a:	d101      	bne.n	8007610 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800760c:	2302      	movs	r3, #2
 800760e:	e0a1      	b.n	8007754 <HAL_TIMEx_MasterConfigSynchronization+0x15c>
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	2201      	movs	r2, #1
 8007614:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	2202      	movs	r2, #2
 800761c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	681b      	ldr	r3, [r3, #0]
 8007624:	685b      	ldr	r3, [r3, #4]
 8007626:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	681b      	ldr	r3, [r3, #0]
 800762c:	689b      	ldr	r3, [r3, #8]
 800762e:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	4a4a      	ldr	r2, [pc, #296]	@ (8007760 <HAL_TIMEx_MasterConfigSynchronization+0x168>)
 8007636:	4293      	cmp	r3, r2
 8007638:	d00e      	beq.n	8007658 <HAL_TIMEx_MasterConfigSynchronization+0x60>
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	4a49      	ldr	r2, [pc, #292]	@ (8007764 <HAL_TIMEx_MasterConfigSynchronization+0x16c>)
 8007640:	4293      	cmp	r3, r2
 8007642:	d009      	beq.n	8007658 <HAL_TIMEx_MasterConfigSynchronization+0x60>
 8007644:	687b      	ldr	r3, [r7, #4]
 8007646:	681b      	ldr	r3, [r3, #0]
 8007648:	4a47      	ldr	r2, [pc, #284]	@ (8007768 <HAL_TIMEx_MasterConfigSynchronization+0x170>)
 800764a:	4293      	cmp	r3, r2
 800764c:	d004      	beq.n	8007658 <HAL_TIMEx_MasterConfigSynchronization+0x60>
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	4a46      	ldr	r2, [pc, #280]	@ (800776c <HAL_TIMEx_MasterConfigSynchronization+0x174>)
 8007654:	4293      	cmp	r3, r2
 8007656:	d108      	bne.n	800766a <HAL_TIMEx_MasterConfigSynchronization+0x72>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800765e:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8007660:	683b      	ldr	r3, [r7, #0]
 8007662:	685b      	ldr	r3, [r3, #4]
 8007664:	68fa      	ldr	r2, [r7, #12]
 8007666:	4313      	orrs	r3, r2
 8007668:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800766a:	68fb      	ldr	r3, [r7, #12]
 800766c:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8007670:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007674:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007676:	683b      	ldr	r3, [r7, #0]
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	68fa      	ldr	r2, [r7, #12]
 800767c:	4313      	orrs	r3, r2
 800767e:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	681b      	ldr	r3, [r3, #0]
 8007684:	68fa      	ldr	r2, [r7, #12]
 8007686:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	681b      	ldr	r3, [r3, #0]
 800768c:	4a34      	ldr	r2, [pc, #208]	@ (8007760 <HAL_TIMEx_MasterConfigSynchronization+0x168>)
 800768e:	4293      	cmp	r3, r2
 8007690:	d04a      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	4a33      	ldr	r2, [pc, #204]	@ (8007764 <HAL_TIMEx_MasterConfigSynchronization+0x16c>)
 8007698:	4293      	cmp	r3, r2
 800769a:	d045      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80076a4:	d040      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80076ae:	d03b      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	681b      	ldr	r3, [r3, #0]
 80076b4:	4a2e      	ldr	r2, [pc, #184]	@ (8007770 <HAL_TIMEx_MasterConfigSynchronization+0x178>)
 80076b6:	4293      	cmp	r3, r2
 80076b8:	d036      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	681b      	ldr	r3, [r3, #0]
 80076be:	4a2d      	ldr	r2, [pc, #180]	@ (8007774 <HAL_TIMEx_MasterConfigSynchronization+0x17c>)
 80076c0:	4293      	cmp	r3, r2
 80076c2:	d031      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	681b      	ldr	r3, [r3, #0]
 80076c8:	4a2b      	ldr	r2, [pc, #172]	@ (8007778 <HAL_TIMEx_MasterConfigSynchronization+0x180>)
 80076ca:	4293      	cmp	r3, r2
 80076cc:	d02c      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	681b      	ldr	r3, [r3, #0]
 80076d2:	4a2a      	ldr	r2, [pc, #168]	@ (800777c <HAL_TIMEx_MasterConfigSynchronization+0x184>)
 80076d4:	4293      	cmp	r3, r2
 80076d6:	d027      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	681b      	ldr	r3, [r3, #0]
 80076dc:	4a28      	ldr	r2, [pc, #160]	@ (8007780 <HAL_TIMEx_MasterConfigSynchronization+0x188>)
 80076de:	4293      	cmp	r3, r2
 80076e0:	d022      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	681b      	ldr	r3, [r3, #0]
 80076e6:	4a27      	ldr	r2, [pc, #156]	@ (8007784 <HAL_TIMEx_MasterConfigSynchronization+0x18c>)
 80076e8:	4293      	cmp	r3, r2
 80076ea:	d01d      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	4a1d      	ldr	r2, [pc, #116]	@ (8007768 <HAL_TIMEx_MasterConfigSynchronization+0x170>)
 80076f2:	4293      	cmp	r3, r2
 80076f4:	d018      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	4a1c      	ldr	r2, [pc, #112]	@ (800776c <HAL_TIMEx_MasterConfigSynchronization+0x174>)
 80076fc:	4293      	cmp	r3, r2
 80076fe:	d013      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	4a20      	ldr	r2, [pc, #128]	@ (8007788 <HAL_TIMEx_MasterConfigSynchronization+0x190>)
 8007706:	4293      	cmp	r3, r2
 8007708:	d00e      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	681b      	ldr	r3, [r3, #0]
 800770e:	4a1f      	ldr	r2, [pc, #124]	@ (800778c <HAL_TIMEx_MasterConfigSynchronization+0x194>)
 8007710:	4293      	cmp	r3, r2
 8007712:	d009      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	681b      	ldr	r3, [r3, #0]
 8007718:	4a1d      	ldr	r2, [pc, #116]	@ (8007790 <HAL_TIMEx_MasterConfigSynchronization+0x198>)
 800771a:	4293      	cmp	r3, r2
 800771c:	d004      	beq.n	8007728 <HAL_TIMEx_MasterConfigSynchronization+0x130>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	4a1c      	ldr	r2, [pc, #112]	@ (8007794 <HAL_TIMEx_MasterConfigSynchronization+0x19c>)
 8007724:	4293      	cmp	r3, r2
 8007726:	d10c      	bne.n	8007742 <HAL_TIMEx_MasterConfigSynchronization+0x14a>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007728:	68bb      	ldr	r3, [r7, #8]
 800772a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800772e:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007730:	683b      	ldr	r3, [r7, #0]
 8007732:	689b      	ldr	r3, [r3, #8]
 8007734:	68ba      	ldr	r2, [r7, #8]
 8007736:	4313      	orrs	r3, r2
 8007738:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	68ba      	ldr	r2, [r7, #8]
 8007740:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	2201      	movs	r2, #1
 8007746:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	2200      	movs	r2, #0
 800774e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007752:	2300      	movs	r3, #0
}
 8007754:	4618      	mov	r0, r3
 8007756:	3714      	adds	r7, #20
 8007758:	46bd      	mov	sp, r7
 800775a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775e:	4770      	bx	lr
 8007760:	40012c00 	.word	0x40012c00
 8007764:	50012c00 	.word	0x50012c00
 8007768:	40013400 	.word	0x40013400
 800776c:	50013400 	.word	0x50013400
 8007770:	40000400 	.word	0x40000400
 8007774:	50000400 	.word	0x50000400
 8007778:	40000800 	.word	0x40000800
 800777c:	50000800 	.word	0x50000800
 8007780:	40000c00 	.word	0x40000c00
 8007784:	50000c00 	.word	0x50000c00
 8007788:	40001800 	.word	0x40001800
 800778c:	50001800 	.word	0x50001800
 8007790:	40014000 	.word	0x40014000
 8007794:	50014000 	.word	0x50014000

08007798 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007798:	b480      	push	{r7}
 800779a:	b083      	sub	sp, #12
 800779c:	af00      	add	r7, sp, #0
 800779e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 80077a0:	bf00      	nop
 80077a2:	370c      	adds	r7, #12
 80077a4:	46bd      	mov	sp, r7
 80077a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077aa:	4770      	bx	lr

080077ac <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 80077ac:	b480      	push	{r7}
 80077ae:	b083      	sub	sp, #12
 80077b0:	af00      	add	r7, sp, #0
 80077b2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 80077b4:	bf00      	nop
 80077b6:	370c      	adds	r7, #12
 80077b8:	46bd      	mov	sp, r7
 80077ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077be:	4770      	bx	lr

080077c0 <HAL_TIMEx_Break2Callback>:
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 80077c0:	b480      	push	{r7}
 80077c2:	b083      	sub	sp, #12
 80077c4:	af00      	add	r7, sp, #0
 80077c6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 80077c8:	bf00      	nop
 80077ca:	370c      	adds	r7, #12
 80077cc:	46bd      	mov	sp, r7
 80077ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077d2:	4770      	bx	lr

080077d4 <HAL_TIMEx_EncoderIndexCallback>:
  * @brief  Encoder index callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_EncoderIndexCallback(TIM_HandleTypeDef *htim)
{
 80077d4:	b480      	push	{r7}
 80077d6:	b083      	sub	sp, #12
 80077d8:	af00      	add	r7, sp, #0
 80077da:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_EncoderIndexCallback could be implemented in the user file
   */
}
 80077dc:	bf00      	nop
 80077de:	370c      	adds	r7, #12
 80077e0:	46bd      	mov	sp, r7
 80077e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077e6:	4770      	bx	lr

080077e8 <HAL_TIMEx_DirectionChangeCallback>:
  * @brief  Direction change callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_DirectionChangeCallback(TIM_HandleTypeDef *htim)
{
 80077e8:	b480      	push	{r7}
 80077ea:	b083      	sub	sp, #12
 80077ec:	af00      	add	r7, sp, #0
 80077ee:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_DirectionChangeCallback could be implemented in the user file
   */
}
 80077f0:	bf00      	nop
 80077f2:	370c      	adds	r7, #12
 80077f4:	46bd      	mov	sp, r7
 80077f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fa:	4770      	bx	lr

080077fc <HAL_TIMEx_IndexErrorCallback>:
  * @brief  Index error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_IndexErrorCallback(TIM_HandleTypeDef *htim)
{
 80077fc:	b480      	push	{r7}
 80077fe:	b083      	sub	sp, #12
 8007800:	af00      	add	r7, sp, #0
 8007802:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_IndexErrorCallback could be implemented in the user file
   */
}
 8007804:	bf00      	nop
 8007806:	370c      	adds	r7, #12
 8007808:	46bd      	mov	sp, r7
 800780a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800780e:	4770      	bx	lr

08007810 <HAL_TIMEx_TransitionErrorCallback>:
  * @brief  Transition error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_TransitionErrorCallback(TIM_HandleTypeDef *htim)
{
 8007810:	b480      	push	{r7}
 8007812:	b083      	sub	sp, #12
 8007814:	af00      	add	r7, sp, #0
 8007816:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_TransitionErrorCallback could be implemented in the user file
   */
}
 8007818:	bf00      	nop
 800781a:	370c      	adds	r7, #12
 800781c:	46bd      	mov	sp, r7
 800781e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007822:	4770      	bx	lr

08007824 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8007824:	b580      	push	{r7, lr}
 8007826:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8007828:	f004 f928 	bl	800ba7c <touchgfx_components_init>
    touchgfx_init();
 800782c:	f004 f8fc 	bl	800ba28 <touchgfx_init>
}
 8007830:	bf00      	nop
 8007832:	bd80      	pop	{r7, pc}

08007834 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8007834:	b580      	push	{r7, lr}
 8007836:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8007838:	f004 f928 	bl	800ba8c <touchgfx_taskEntry>
}
 800783c:	bf00      	nop
 800783e:	bd80      	pop	{r7, pc}

08007840 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8007840:	b480      	push	{r7}
 8007842:	b083      	sub	sp, #12
 8007844:	af00      	add	r7, sp, #0
 8007846:	6078      	str	r0, [r7, #4]
    {
 8007848:	4a04      	ldr	r2, [pc, #16]	@ (800785c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	601a      	str	r2, [r3, #0]
    }
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	4618      	mov	r0, r3
 8007852:	370c      	adds	r7, #12
 8007854:	46bd      	mov	sp, r7
 8007856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800785a:	4770      	bx	lr
 800785c:	08023e4c 	.word	0x08023e4c

08007860 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007860:	b580      	push	{r7, lr}
 8007862:	b082      	sub	sp, #8
 8007864:	af00      	add	r7, sp, #0
 8007866:	6078      	str	r0, [r7, #4]
    }
 8007868:	6878      	ldr	r0, [r7, #4]
 800786a:	f7ff ffe9 	bl	8007840 <_ZN8touchgfx12FontProviderD1Ev>
 800786e:	2104      	movs	r1, #4
 8007870:	6878      	ldr	r0, [r7, #4]
 8007872:	f01a f906 	bl	8021a82 <_ZdlPvj>
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	4618      	mov	r0, r3
 800787a:	3708      	adds	r7, #8
 800787c:	46bd      	mov	sp, r7
 800787e:	bd80      	pop	{r7, pc}

08007880 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007880:	b580      	push	{r7, lr}
 8007882:	b082      	sub	sp, #8
 8007884:	af00      	add	r7, sp, #0
 8007886:	6078      	str	r0, [r7, #4]
 8007888:	460b      	mov	r3, r1
 800788a:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800788c:	887b      	ldrh	r3, [r7, #2]
 800788e:	2b02      	cmp	r3, #2
 8007890:	d010      	beq.n	80078b4 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8007892:	2b02      	cmp	r3, #2
 8007894:	dc13      	bgt.n	80078be <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8007896:	2b00      	cmp	r3, #0
 8007898:	d002      	beq.n	80078a0 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800789a:	2b01      	cmp	r3, #1
 800789c:	d005      	beq.n	80078aa <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800789e:	e00e      	b.n	80078be <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80078a0:	f002 fd9a 	bl	800a3d8 <_ZN17TypedTextDatabase8getFontsEv>
 80078a4:	4603      	mov	r3, r0
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	e00a      	b.n	80078c0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80078aa:	f002 fd95 	bl	800a3d8 <_ZN17TypedTextDatabase8getFontsEv>
 80078ae:	4603      	mov	r3, r0
 80078b0:	685b      	ldr	r3, [r3, #4]
 80078b2:	e005      	b.n	80078c0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80078b4:	f002 fd90 	bl	800a3d8 <_ZN17TypedTextDatabase8getFontsEv>
 80078b8:	4603      	mov	r3, r0
 80078ba:	689b      	ldr	r3, [r3, #8]
 80078bc:	e000      	b.n	80078c0 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 80078be:	2300      	movs	r3, #0
    }
}
 80078c0:	4618      	mov	r0, r3
 80078c2:	3708      	adds	r7, #8
 80078c4:	46bd      	mov	sp, r7
 80078c6:	bd80      	pop	{r7, pc}

080078c8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_80_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80078c8:	b580      	push	{r7, lr}
 80078ca:	b082      	sub	sp, #8
 80078cc:	af00      	add	r7, sp, #0
 80078ce:	6078      	str	r0, [r7, #4]
 80078d0:	4a05      	ldr	r2, [pc, #20]	@ (80078e8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	601a      	str	r2, [r3, #0]
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	4618      	mov	r0, r3
 80078da:	f7ff ffb1 	bl	8007840 <_ZN8touchgfx12FontProviderD1Ev>
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	4618      	mov	r0, r3
 80078e2:	3708      	adds	r7, #8
 80078e4:	46bd      	mov	sp, r7
 80078e6:	bd80      	pop	{r7, pc}
 80078e8:	08023e38 	.word	0x08023e38

080078ec <_ZN23ApplicationFontProviderD0Ev>:
 80078ec:	b580      	push	{r7, lr}
 80078ee:	b082      	sub	sp, #8
 80078f0:	af00      	add	r7, sp, #0
 80078f2:	6078      	str	r0, [r7, #4]
 80078f4:	6878      	ldr	r0, [r7, #4]
 80078f6:	f7ff ffe7 	bl	80078c8 <_ZN23ApplicationFontProviderD1Ev>
 80078fa:	2104      	movs	r1, #4
 80078fc:	6878      	ldr	r0, [r7, #4]
 80078fe:	f01a f8c0 	bl	8021a82 <_ZdlPvj>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	4618      	mov	r0, r3
 8007906:	3708      	adds	r7, #8
 8007908:	46bd      	mov	sp, r7
 800790a:	bd80      	pop	{r7, pc}

0800790c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800790c:	b480      	push	{r7}
 800790e:	b083      	sub	sp, #12
 8007910:	af00      	add	r7, sp, #0
 8007912:	6078      	str	r0, [r7, #4]
    {
 8007914:	4a04      	ldr	r2, [pc, #16]	@ (8007928 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	601a      	str	r2, [r3, #0]
    }
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	4618      	mov	r0, r3
 800791e:	370c      	adds	r7, #12
 8007920:	46bd      	mov	sp, r7
 8007922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007926:	4770      	bx	lr
 8007928:	080241fc 	.word	0x080241fc

0800792c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800792c:	b580      	push	{r7, lr}
 800792e:	b082      	sub	sp, #8
 8007930:	af00      	add	r7, sp, #0
 8007932:	6078      	str	r0, [r7, #4]
    }
 8007934:	6878      	ldr	r0, [r7, #4]
 8007936:	f7ff ffe9 	bl	800790c <_ZN8touchgfx4FontD1Ev>
 800793a:	2114      	movs	r1, #20
 800793c:	6878      	ldr	r0, [r7, #4]
 800793e:	f01a f8a0 	bl	8021a82 <_ZdlPvj>
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	4618      	mov	r0, r3
 8007946:	3708      	adds	r7, #8
 8007948:	46bd      	mov	sp, r7
 800794a:	bd80      	pop	{r7, pc}

0800794c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800794c:	b590      	push	{r4, r7, lr}
 800794e:	b087      	sub	sp, #28
 8007950:	af00      	add	r7, sp, #0
 8007952:	6078      	str	r0, [r7, #4]
 8007954:	460b      	mov	r3, r1
 8007956:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8007958:	887b      	ldrh	r3, [r7, #2]
 800795a:	2b00      	cmp	r3, #0
 800795c:	d101      	bne.n	8007962 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800795e:	2300      	movs	r3, #0
 8007960:	e010      	b.n	8007984 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8007962:	2300      	movs	r3, #0
 8007964:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007966:	2300      	movs	r3, #0
 8007968:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800796a:	687b      	ldr	r3, [r7, #4]
 800796c:	681b      	ldr	r3, [r3, #0]
 800796e:	3308      	adds	r3, #8
 8007970:	681c      	ldr	r4, [r3, #0]
 8007972:	f107 030f 	add.w	r3, r7, #15
 8007976:	f107 0210 	add.w	r2, r7, #16
 800797a:	8879      	ldrh	r1, [r7, #2]
 800797c:	6878      	ldr	r0, [r7, #4]
 800797e:	47a0      	blx	r4
 8007980:	6178      	str	r0, [r7, #20]
        return glyph;
 8007982:	697b      	ldr	r3, [r7, #20]
    }
 8007984:	4618      	mov	r0, r3
 8007986:	371c      	adds	r7, #28
 8007988:	46bd      	mov	sp, r7
 800798a:	bd90      	pop	{r4, r7, pc}

0800798c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800798c:	b480      	push	{r7}
 800798e:	b083      	sub	sp, #12
 8007990:	af00      	add	r7, sp, #0
 8007992:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	89db      	ldrh	r3, [r3, #14]
    }
 8007998:	4618      	mov	r0, r3
 800799a:	370c      	adds	r7, #12
 800799c:	46bd      	mov	sp, r7
 800799e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079a2:	4770      	bx	lr

080079a4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 80079a4:	b480      	push	{r7}
 80079a6:	b083      	sub	sp, #12
 80079a8:	af00      	add	r7, sp, #0
 80079aa:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	8a1b      	ldrh	r3, [r3, #16]
    }
 80079b0:	4618      	mov	r0, r3
 80079b2:	370c      	adds	r7, #12
 80079b4:	46bd      	mov	sp, r7
 80079b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ba:	4770      	bx	lr

080079bc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 80079bc:	b480      	push	{r7}
 80079be:	b083      	sub	sp, #12
 80079c0:	af00      	add	r7, sp, #0
 80079c2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	88db      	ldrh	r3, [r3, #6]
    }
 80079c8:	4618      	mov	r0, r3
 80079ca:	370c      	adds	r7, #12
 80079cc:	46bd      	mov	sp, r7
 80079ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079d2:	4770      	bx	lr

080079d4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80079d4:	b480      	push	{r7}
 80079d6:	b083      	sub	sp, #12
 80079d8:	af00      	add	r7, sp, #0
 80079da:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	889b      	ldrh	r3, [r3, #4]
    }
 80079e0:	4618      	mov	r0, r3
 80079e2:	370c      	adds	r7, #12
 80079e4:	46bd      	mov	sp, r7
 80079e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ea:	4770      	bx	lr

080079ec <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80079ec:	b480      	push	{r7}
 80079ee:	b083      	sub	sp, #12
 80079f0:	af00      	add	r7, sp, #0
 80079f2:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	7a9b      	ldrb	r3, [r3, #10]
 80079f8:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80079fc:	b2db      	uxtb	r3, r3
    }
 80079fe:	4618      	mov	r0, r3
 8007a00:	370c      	adds	r7, #12
 8007a02:	46bd      	mov	sp, r7
 8007a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a08:	4770      	bx	lr

08007a0a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8007a0a:	b480      	push	{r7}
 8007a0c:	b083      	sub	sp, #12
 8007a0e:	af00      	add	r7, sp, #0
 8007a10:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	7a9b      	ldrb	r3, [r3, #10]
 8007a16:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007a1a:	b2db      	uxtb	r3, r3
    }
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	370c      	adds	r7, #12
 8007a20:	46bd      	mov	sp, r7
 8007a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a26:	4770      	bx	lr

08007a28 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8007a28:	b480      	push	{r7}
 8007a2a:	b083      	sub	sp, #12
 8007a2c:	af00      	add	r7, sp, #0
 8007a2e:	6078      	str	r0, [r7, #4]
    {
        return false;
 8007a30:	2300      	movs	r3, #0
    }
 8007a32:	4618      	mov	r0, r3
 8007a34:	370c      	adds	r7, #12
 8007a36:	46bd      	mov	sp, r7
 8007a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a3c:	4770      	bx	lr

08007a3e <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8007a3e:	b480      	push	{r7}
 8007a40:	b083      	sub	sp, #12
 8007a42:	af00      	add	r7, sp, #0
 8007a44:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8007a46:	f04f 0300 	mov.w	r3, #0
 8007a4a:	ee07 3a90 	vmov	s15, r3
    }
 8007a4e:	eeb0 0a67 	vmov.f32	s0, s15
 8007a52:	370c      	adds	r7, #12
 8007a54:	46bd      	mov	sp, r7
 8007a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a5a:	4770      	bx	lr

08007a5c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8007a5c:	b580      	push	{r7, lr}
 8007a5e:	b082      	sub	sp, #8
 8007a60:	af00      	add	r7, sp, #0
 8007a62:	6078      	str	r0, [r7, #4]
 8007a64:	4a05      	ldr	r2, [pc, #20]	@ (8007a7c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	601a      	str	r2, [r3, #0]
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	4618      	mov	r0, r3
 8007a6e:	f7ff ff4d 	bl	800790c <_ZN8touchgfx4FontD1Ev>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	4618      	mov	r0, r3
 8007a76:	3708      	adds	r7, #8
 8007a78:	46bd      	mov	sp, r7
 8007a7a:	bd80      	pop	{r7, pc}
 8007a7c:	08024c08 	.word	0x08024c08

08007a80 <_ZN8touchgfx9ConstFontD0Ev>:
 8007a80:	b580      	push	{r7, lr}
 8007a82:	b082      	sub	sp, #8
 8007a84:	af00      	add	r7, sp, #0
 8007a86:	6078      	str	r0, [r7, #4]
 8007a88:	6878      	ldr	r0, [r7, #4]
 8007a8a:	f7ff ffe7 	bl	8007a5c <_ZN8touchgfx9ConstFontD1Ev>
 8007a8e:	211c      	movs	r1, #28
 8007a90:	6878      	ldr	r0, [r7, #4]
 8007a92:	f019 fff6 	bl	8021a82 <_ZdlPvj>
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	4618      	mov	r0, r3
 8007a9a:	3708      	adds	r7, #8
 8007a9c:	46bd      	mov	sp, r7
 8007a9e:	bd80      	pop	{r7, pc}

08007aa0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8007aa0:	b580      	push	{r7, lr}
 8007aa2:	b082      	sub	sp, #8
 8007aa4:	af00      	add	r7, sp, #0
 8007aa6:	6078      	str	r0, [r7, #4]
 8007aa8:	4a05      	ldr	r2, [pc, #20]	@ (8007ac0 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	601a      	str	r2, [r3, #0]
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	4618      	mov	r0, r3
 8007ab2:	f7ff ffd3 	bl	8007a5c <_ZN8touchgfx9ConstFontD1Ev>
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	4618      	mov	r0, r3
 8007aba:	3708      	adds	r7, #8
 8007abc:	46bd      	mov	sp, r7
 8007abe:	bd80      	pop	{r7, pc}
 8007ac0:	08023e70 	.word	0x08023e70

08007ac4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8007ac4:	b580      	push	{r7, lr}
 8007ac6:	b082      	sub	sp, #8
 8007ac8:	af00      	add	r7, sp, #0
 8007aca:	6078      	str	r0, [r7, #4]
 8007acc:	6878      	ldr	r0, [r7, #4]
 8007ace:	f7ff ffe7 	bl	8007aa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007ad2:	212c      	movs	r1, #44	@ 0x2c
 8007ad4:	6878      	ldr	r0, [r7, #4]
 8007ad6:	f019 ffd4 	bl	8021a82 <_ZdlPvj>
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	4618      	mov	r0, r3
 8007ade:	3708      	adds	r7, #8
 8007ae0:	46bd      	mov	sp, r7
 8007ae2:	bd80      	pop	{r7, pc}

08007ae4 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8007ae4:	b480      	push	{r7}
 8007ae6:	af00      	add	r7, sp, #0
    {
        return instance;
 8007ae8:	4b03      	ldr	r3, [pc, #12]	@ (8007af8 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8007aea:	681b      	ldr	r3, [r3, #0]
    }
 8007aec:	4618      	mov	r0, r3
 8007aee:	46bd      	mov	sp, r7
 8007af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007af4:	4770      	bx	lr
 8007af6:	bf00      	nop
 8007af8:	20002230 	.word	0x20002230

08007afc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8007afc:	b480      	push	{r7}
 8007afe:	b083      	sub	sp, #12
 8007b00:	af00      	add	r7, sp, #0
 8007b02:	6078      	str	r0, [r7, #4]
    {
 8007b04:	4a04      	ldr	r2, [pc, #16]	@ (8007b18 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	601a      	str	r2, [r3, #0]
    }
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	4618      	mov	r0, r3
 8007b0e:	370c      	adds	r7, #12
 8007b10:	46bd      	mov	sp, r7
 8007b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b16:	4770      	bx	lr
 8007b18:	08023e60 	.word	0x08023e60

08007b1c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8007b1c:	b580      	push	{r7, lr}
 8007b1e:	b082      	sub	sp, #8
 8007b20:	af00      	add	r7, sp, #0
 8007b22:	6078      	str	r0, [r7, #4]
    }
 8007b24:	6878      	ldr	r0, [r7, #4]
 8007b26:	f7ff ffe9 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
 8007b2a:	2108      	movs	r1, #8
 8007b2c:	6878      	ldr	r0, [r7, #4]
 8007b2e:	f019 ffa8 	bl	8021a82 <_ZdlPvj>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	4618      	mov	r0, r3
 8007b36:	3708      	adds	r7, #8
 8007b38:	46bd      	mov	sp, r7
 8007b3a:	bd80      	pop	{r7, pc}

08007b3c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8007b3c:	b480      	push	{r7}
 8007b3e:	b083      	sub	sp, #12
 8007b40:	af00      	add	r7, sp, #0
 8007b42:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8007b48:	4618      	mov	r0, r3
 8007b4a:	370c      	adds	r7, #12
 8007b4c:	46bd      	mov	sp, r7
 8007b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b52:	4770      	bx	lr

08007b54 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8007b54:	b480      	push	{r7}
 8007b56:	b083      	sub	sp, #12
 8007b58:	af00      	add	r7, sp, #0
 8007b5a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8007b60:	4618      	mov	r0, r3
 8007b62:	370c      	adds	r7, #12
 8007b64:	46bd      	mov	sp, r7
 8007b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b6a:	4770      	bx	lr

08007b6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <math.h>
#include <stddef.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8007b6c:	b580      	push	{r7, lr}
 8007b6e:	b08e      	sub	sp, #56	@ 0x38
 8007b70:	af0a      	add	r7, sp, #40	@ 0x28
 8007b72:	60f8      	str	r0, [r7, #12]
 8007b74:	60b9      	str	r1, [r7, #8]
 8007b76:	4611      	mov	r1, r2
 8007b78:	461a      	mov	r2, r3
 8007b7a:	460b      	mov	r3, r1
 8007b7c:	80fb      	strh	r3, [r7, #6]
 8007b7e:	4613      	mov	r3, r2
 8007b80:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8007b82:	68f8      	ldr	r0, [r7, #12]
 8007b84:	88b9      	ldrh	r1, [r7, #4]
 8007b86:	88fa      	ldrh	r2, [r7, #6]
 8007b88:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8007b8c:	9308      	str	r3, [sp, #32]
 8007b8e:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8007b90:	9307      	str	r3, [sp, #28]
 8007b92:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8007b96:	9306      	str	r3, [sp, #24]
 8007b98:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8007b9c:	9305      	str	r3, [sp, #20]
 8007b9e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8007ba2:	9304      	str	r3, [sp, #16]
 8007ba4:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8007ba8:	9303      	str	r3, [sp, #12]
 8007baa:	f897 3020 	ldrb.w	r3, [r7, #32]
 8007bae:	9302      	str	r3, [sp, #8]
 8007bb0:	7f3b      	ldrb	r3, [r7, #28]
 8007bb2:	9301      	str	r3, [sp, #4]
 8007bb4:	8b3b      	ldrh	r3, [r7, #24]
 8007bb6:	9300      	str	r3, [sp, #0]
 8007bb8:	460b      	mov	r3, r1
 8007bba:	68b9      	ldr	r1, [r7, #8]
 8007bbc:	f009 fd00 	bl	80115c0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8007bc0:	4a09      	ldr	r2, [pc, #36]	@ (8007be8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8007bc2:	68fb      	ldr	r3, [r7, #12]
 8007bc4:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8007bc6:	68fb      	ldr	r3, [r7, #12]
 8007bc8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8007bca:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8007bcc:	68fb      	ldr	r3, [r7, #12]
 8007bce:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8007bd0:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8007bd2:	68fb      	ldr	r3, [r7, #12]
 8007bd4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007bd6:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8007bd8:	68fb      	ldr	r3, [r7, #12]
 8007bda:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007bdc:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	4618      	mov	r0, r3
 8007be2:	3710      	adds	r7, #16
 8007be4:	46bd      	mov	sp, r7
 8007be6:	bd80      	pop	{r7, pc}
 8007be8:	08023e70 	.word	0x08023e70

08007bec <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8007bec:	b480      	push	{r7}
 8007bee:	b087      	sub	sp, #28
 8007bf0:	af00      	add	r7, sp, #0
 8007bf2:	6078      	str	r0, [r7, #4]
 8007bf4:	6039      	str	r1, [r7, #0]
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
 8007bf6:	683b      	ldr	r3, [r7, #0]
 8007bf8:	617b      	str	r3, [r7, #20]
    uint32_t offset = dataOffset[0];
 8007bfa:	697b      	ldr	r3, [r7, #20]
 8007bfc:	881b      	ldrh	r3, [r3, #0]
 8007bfe:	b29b      	uxth	r3, r3
 8007c00:	613b      	str	r3, [r7, #16]
    offset |= dataOffset[1] << 16;
 8007c02:	697b      	ldr	r3, [r7, #20]
 8007c04:	3302      	adds	r3, #2
 8007c06:	881b      	ldrh	r3, [r3, #0]
 8007c08:	b29b      	uxth	r3, r3
 8007c0a:	041b      	lsls	r3, r3, #16
 8007c0c:	461a      	mov	r2, r3
 8007c0e:	693b      	ldr	r3, [r7, #16]
 8007c10:	4313      	orrs	r3, r2
 8007c12:	613b      	str	r3, [r7, #16]

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	69db      	ldr	r3, [r3, #28]
 8007c18:	60fb      	str	r3, [r7, #12]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 8007c1a:	683b      	ldr	r3, [r7, #0]
 8007c1c:	889b      	ldrh	r3, [r3, #4]
 8007c1e:	0adb      	lsrs	r3, r3, #11
 8007c20:	b29b      	uxth	r3, r3
 8007c22:	009b      	lsls	r3, r3, #2
 8007c24:	68fa      	ldr	r2, [r7, #12]
 8007c26:	4413      	add	r3, r2
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	60bb      	str	r3, [r7, #8]
    return pixels + offset;
 8007c2c:	68ba      	ldr	r2, [r7, #8]
 8007c2e:	693b      	ldr	r3, [r7, #16]
 8007c30:	4413      	add	r3, r2
}
 8007c32:	4618      	mov	r0, r3
 8007c34:	371c      	adds	r7, #28
 8007c36:	46bd      	mov	sp, r7
 8007c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c3c:	4770      	bx	lr

08007c3e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8007c3e:	b480      	push	{r7}
 8007c40:	b089      	sub	sp, #36	@ 0x24
 8007c42:	af00      	add	r7, sp, #0
 8007c44:	60f8      	str	r0, [r7, #12]
 8007c46:	460b      	mov	r3, r1
 8007c48:	607a      	str	r2, [r7, #4]
 8007c4a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	2b00      	cmp	r3, #0
 8007c50:	d003      	beq.n	8007c5a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	7b1b      	ldrb	r3, [r3, #12]
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d101      	bne.n	8007c5e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8007c5a:	2300      	movs	r3, #0
 8007c5c:	e031      	b.n	8007cc2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8007c5e:	68fb      	ldr	r3, [r7, #12]
 8007c60:	6a1a      	ldr	r2, [r3, #32]
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8007c66:	697b      	ldr	r3, [r7, #20]
 8007c68:	7b5b      	ldrb	r3, [r3, #13]
 8007c6a:	021b      	lsls	r3, r3, #8
 8007c6c:	b21b      	sxth	r3, r3
 8007c6e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007c72:	b219      	sxth	r1, r3
 8007c74:	697b      	ldr	r3, [r7, #20]
 8007c76:	7adb      	ldrb	r3, [r3, #11]
 8007c78:	b21b      	sxth	r3, r3
 8007c7a:	430b      	orrs	r3, r1
 8007c7c:	b21b      	sxth	r3, r3
 8007c7e:	b29b      	uxth	r3, r3
 8007c80:	009b      	lsls	r3, r3, #2
 8007c82:	4413      	add	r3, r2
 8007c84:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8007c86:	687b      	ldr	r3, [r7, #4]
 8007c88:	7b1b      	ldrb	r3, [r3, #12]
 8007c8a:	837b      	strh	r3, [r7, #26]
 8007c8c:	e013      	b.n	8007cb6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8007c8e:	69fb      	ldr	r3, [r7, #28]
 8007c90:	881b      	ldrh	r3, [r3, #0]
 8007c92:	897a      	ldrh	r2, [r7, #10]
 8007c94:	429a      	cmp	r2, r3
 8007c96:	d103      	bne.n	8007ca0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8007c98:	69fb      	ldr	r3, [r7, #28]
 8007c9a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8007c9e:	e010      	b.n	8007cc2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8007ca0:	69fb      	ldr	r3, [r7, #28]
 8007ca2:	881b      	ldrh	r3, [r3, #0]
 8007ca4:	897a      	ldrh	r2, [r7, #10]
 8007ca6:	429a      	cmp	r2, r3
 8007ca8:	d309      	bcc.n	8007cbe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8007caa:	8b7b      	ldrh	r3, [r7, #26]
 8007cac:	3b01      	subs	r3, #1
 8007cae:	837b      	strh	r3, [r7, #26]
 8007cb0:	69fb      	ldr	r3, [r7, #28]
 8007cb2:	3304      	adds	r3, #4
 8007cb4:	61fb      	str	r3, [r7, #28]
 8007cb6:	8b7b      	ldrh	r3, [r7, #26]
 8007cb8:	2b00      	cmp	r3, #0
 8007cba:	d1e8      	bne.n	8007c8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8007cbc:	e000      	b.n	8007cc0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8007cbe:	bf00      	nop
        }
    }
    return 0;
 8007cc0:	2300      	movs	r3, #0
}
 8007cc2:	4618      	mov	r0, r3
 8007cc4:	3724      	adds	r7, #36	@ 0x24
 8007cc6:	46bd      	mov	sp, r7
 8007cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ccc:	4770      	bx	lr
	...

08007cd0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007cd0:	b580      	push	{r7, lr}
 8007cd2:	af00      	add	r7, sp, #0
 8007cd4:	4801      	ldr	r0, [pc, #4]	@ (8007cdc <__tcf_0+0xc>)
 8007cd6:	f7ff fee3 	bl	8007aa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007cda:	bd80      	pop	{r7, pc}
 8007cdc:	200004e8 	.word	0x200004e8

08007ce0 <_Z23getFont_verdana_10_4bppv>:
{
 8007ce0:	b580      	push	{r7, lr}
 8007ce2:	b08e      	sub	sp, #56	@ 0x38
 8007ce4:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007ce6:	4b20      	ldr	r3, [pc, #128]	@ (8007d68 <_Z23getFont_verdana_10_4bppv+0x88>)
 8007ce8:	e8d3 3faf 	lda	r3, [r3]
 8007cec:	f003 0301 	and.w	r3, r3, #1
 8007cf0:	2b00      	cmp	r3, #0
 8007cf2:	bf0c      	ite	eq
 8007cf4:	2301      	moveq	r3, #1
 8007cf6:	2300      	movne	r3, #0
 8007cf8:	b2db      	uxtb	r3, r3
 8007cfa:	2b00      	cmp	r3, #0
 8007cfc:	d030      	beq.n	8007d60 <_Z23getFont_verdana_10_4bppv+0x80>
 8007cfe:	481a      	ldr	r0, [pc, #104]	@ (8007d68 <_Z23getFont_verdana_10_4bppv+0x88>)
 8007d00:	f019 fec1 	bl	8021a86 <__cxa_guard_acquire>
 8007d04:	4603      	mov	r3, r0
 8007d06:	2b00      	cmp	r3, #0
 8007d08:	bf14      	ite	ne
 8007d0a:	2301      	movne	r3, #1
 8007d0c:	2300      	moveq	r3, #0
 8007d0e:	b2db      	uxtb	r3, r3
 8007d10:	2b00      	cmp	r3, #0
 8007d12:	d025      	beq.n	8007d60 <_Z23getFont_verdana_10_4bppv+0x80>
 8007d14:	2300      	movs	r3, #0
 8007d16:	930c      	str	r3, [sp, #48]	@ 0x30
 8007d18:	2300      	movs	r3, #0
 8007d1a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007d1c:	2300      	movs	r3, #0
 8007d1e:	930a      	str	r3, [sp, #40]	@ 0x28
 8007d20:	233f      	movs	r3, #63	@ 0x3f
 8007d22:	9309      	str	r3, [sp, #36]	@ 0x24
 8007d24:	4b11      	ldr	r3, [pc, #68]	@ (8007d6c <_Z23getFont_verdana_10_4bppv+0x8c>)
 8007d26:	9308      	str	r3, [sp, #32]
 8007d28:	4b11      	ldr	r3, [pc, #68]	@ (8007d70 <_Z23getFont_verdana_10_4bppv+0x90>)
 8007d2a:	9307      	str	r3, [sp, #28]
 8007d2c:	2300      	movs	r3, #0
 8007d2e:	9306      	str	r3, [sp, #24]
 8007d30:	2300      	movs	r3, #0
 8007d32:	9305      	str	r3, [sp, #20]
 8007d34:	2301      	movs	r3, #1
 8007d36:	9304      	str	r3, [sp, #16]
 8007d38:	2304      	movs	r3, #4
 8007d3a:	9303      	str	r3, [sp, #12]
 8007d3c:	2300      	movs	r3, #0
 8007d3e:	9302      	str	r3, [sp, #8]
 8007d40:	2300      	movs	r3, #0
 8007d42:	9301      	str	r3, [sp, #4]
 8007d44:	230a      	movs	r3, #10
 8007d46:	9300      	str	r3, [sp, #0]
 8007d48:	230a      	movs	r3, #10
 8007d4a:	2201      	movs	r2, #1
 8007d4c:	4909      	ldr	r1, [pc, #36]	@ (8007d74 <_Z23getFont_verdana_10_4bppv+0x94>)
 8007d4e:	480a      	ldr	r0, [pc, #40]	@ (8007d78 <_Z23getFont_verdana_10_4bppv+0x98>)
 8007d50:	f7ff ff0c 	bl	8007b6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d54:	4809      	ldr	r0, [pc, #36]	@ (8007d7c <_Z23getFont_verdana_10_4bppv+0x9c>)
 8007d56:	f019 fedf 	bl	8021b18 <atexit>
 8007d5a:	4803      	ldr	r0, [pc, #12]	@ (8007d68 <_Z23getFont_verdana_10_4bppv+0x88>)
 8007d5c:	f019 fe9f 	bl	8021a9e <__cxa_guard_release>
    return verdana_10_4bpp;
 8007d60:	4b05      	ldr	r3, [pc, #20]	@ (8007d78 <_Z23getFont_verdana_10_4bppv+0x98>)
}
 8007d62:	4618      	mov	r0, r3
 8007d64:	46bd      	mov	sp, r7
 8007d66:	bd80      	pop	{r7, pc}
 8007d68:	20000514 	.word	0x20000514
 8007d6c:	0802891c 	.word	0x0802891c
 8007d70:	08028928 	.word	0x08028928
 8007d74:	080287d4 	.word	0x080287d4
 8007d78:	200004e8 	.word	0x200004e8
 8007d7c:	08007cd1 	.word	0x08007cd1

08007d80 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007d80:	b580      	push	{r7, lr}
 8007d82:	af00      	add	r7, sp, #0
 8007d84:	4801      	ldr	r0, [pc, #4]	@ (8007d8c <__tcf_0+0xc>)
 8007d86:	f7ff fe8b 	bl	8007aa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007d8a:	bd80      	pop	{r7, pc}
 8007d8c:	20000518 	.word	0x20000518

08007d90 <_Z23getFont_verdana_20_4bppv>:
{
 8007d90:	b580      	push	{r7, lr}
 8007d92:	b08e      	sub	sp, #56	@ 0x38
 8007d94:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 11, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007d96:	4b20      	ldr	r3, [pc, #128]	@ (8007e18 <_Z23getFont_verdana_20_4bppv+0x88>)
 8007d98:	e8d3 3faf 	lda	r3, [r3]
 8007d9c:	f003 0301 	and.w	r3, r3, #1
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	bf0c      	ite	eq
 8007da4:	2301      	moveq	r3, #1
 8007da6:	2300      	movne	r3, #0
 8007da8:	b2db      	uxtb	r3, r3
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	d030      	beq.n	8007e10 <_Z23getFont_verdana_20_4bppv+0x80>
 8007dae:	481a      	ldr	r0, [pc, #104]	@ (8007e18 <_Z23getFont_verdana_20_4bppv+0x88>)
 8007db0:	f019 fe69 	bl	8021a86 <__cxa_guard_acquire>
 8007db4:	4603      	mov	r3, r0
 8007db6:	2b00      	cmp	r3, #0
 8007db8:	bf14      	ite	ne
 8007dba:	2301      	movne	r3, #1
 8007dbc:	2300      	moveq	r3, #0
 8007dbe:	b2db      	uxtb	r3, r3
 8007dc0:	2b00      	cmp	r3, #0
 8007dc2:	d025      	beq.n	8007e10 <_Z23getFont_verdana_20_4bppv+0x80>
 8007dc4:	2300      	movs	r3, #0
 8007dc6:	930c      	str	r3, [sp, #48]	@ 0x30
 8007dc8:	2300      	movs	r3, #0
 8007dca:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007dcc:	2300      	movs	r3, #0
 8007dce:	930a      	str	r3, [sp, #40]	@ 0x28
 8007dd0:	233f      	movs	r3, #63	@ 0x3f
 8007dd2:	9309      	str	r3, [sp, #36]	@ 0x24
 8007dd4:	4b11      	ldr	r3, [pc, #68]	@ (8007e1c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8007dd6:	9308      	str	r3, [sp, #32]
 8007dd8:	4b11      	ldr	r3, [pc, #68]	@ (8007e20 <_Z23getFont_verdana_20_4bppv+0x90>)
 8007dda:	9307      	str	r3, [sp, #28]
 8007ddc:	2300      	movs	r3, #0
 8007dde:	9306      	str	r3, [sp, #24]
 8007de0:	2300      	movs	r3, #0
 8007de2:	9305      	str	r3, [sp, #20]
 8007de4:	2301      	movs	r3, #1
 8007de6:	9304      	str	r3, [sp, #16]
 8007de8:	2304      	movs	r3, #4
 8007dea:	9303      	str	r3, [sp, #12]
 8007dec:	2300      	movs	r3, #0
 8007dee:	9302      	str	r3, [sp, #8]
 8007df0:	2300      	movs	r3, #0
 8007df2:	9301      	str	r3, [sp, #4]
 8007df4:	2314      	movs	r3, #20
 8007df6:	9300      	str	r3, [sp, #0]
 8007df8:	2314      	movs	r3, #20
 8007dfa:	220b      	movs	r2, #11
 8007dfc:	4909      	ldr	r1, [pc, #36]	@ (8007e24 <_Z23getFont_verdana_20_4bppv+0x94>)
 8007dfe:	480a      	ldr	r0, [pc, #40]	@ (8007e28 <_Z23getFont_verdana_20_4bppv+0x98>)
 8007e00:	f7ff feb4 	bl	8007b6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e04:	4809      	ldr	r0, [pc, #36]	@ (8007e2c <_Z23getFont_verdana_20_4bppv+0x9c>)
 8007e06:	f019 fe87 	bl	8021b18 <atexit>
 8007e0a:	4803      	ldr	r0, [pc, #12]	@ (8007e18 <_Z23getFont_verdana_20_4bppv+0x88>)
 8007e0c:	f019 fe47 	bl	8021a9e <__cxa_guard_release>
    return verdana_20_4bpp;
 8007e10:	4b05      	ldr	r3, [pc, #20]	@ (8007e28 <_Z23getFont_verdana_20_4bppv+0x98>)
}
 8007e12:	4618      	mov	r0, r3
 8007e14:	46bd      	mov	sp, r7
 8007e16:	bd80      	pop	{r7, pc}
 8007e18:	20000544 	.word	0x20000544
 8007e1c:	08028920 	.word	0x08028920
 8007e20:	0802892c 	.word	0x0802892c
 8007e24:	080287e4 	.word	0x080287e4
 8007e28:	20000518 	.word	0x20000518
 8007e2c:	08007d81 	.word	0x08007d81

08007e30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_80_4bpp();

touchgfx::GeneratedFont& getFont_verdana_80_4bpp()
{
    static touchgfx::GeneratedFont verdana_80_4bpp(glyphs_verdana_80_4bpp, 11, 81, 80, 0, 0, 4, 1, 0, 0, unicodes_verdana_80_4bpp, kerning_verdana_80_4bpp, 63, 0, 0, 0);
 8007e30:	b580      	push	{r7, lr}
 8007e32:	af00      	add	r7, sp, #0
 8007e34:	4801      	ldr	r0, [pc, #4]	@ (8007e3c <__tcf_0+0xc>)
 8007e36:	f7ff fe33 	bl	8007aa0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007e3a:	bd80      	pop	{r7, pc}
 8007e3c:	20000548 	.word	0x20000548

08007e40 <_Z23getFont_verdana_80_4bppv>:
{
 8007e40:	b580      	push	{r7, lr}
 8007e42:	b08e      	sub	sp, #56	@ 0x38
 8007e44:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_80_4bpp(glyphs_verdana_80_4bpp, 11, 81, 80, 0, 0, 4, 1, 0, 0, unicodes_verdana_80_4bpp, kerning_verdana_80_4bpp, 63, 0, 0, 0);
 8007e46:	4b20      	ldr	r3, [pc, #128]	@ (8007ec8 <_Z23getFont_verdana_80_4bppv+0x88>)
 8007e48:	e8d3 3faf 	lda	r3, [r3]
 8007e4c:	f003 0301 	and.w	r3, r3, #1
 8007e50:	2b00      	cmp	r3, #0
 8007e52:	bf0c      	ite	eq
 8007e54:	2301      	moveq	r3, #1
 8007e56:	2300      	movne	r3, #0
 8007e58:	b2db      	uxtb	r3, r3
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	d030      	beq.n	8007ec0 <_Z23getFont_verdana_80_4bppv+0x80>
 8007e5e:	481a      	ldr	r0, [pc, #104]	@ (8007ec8 <_Z23getFont_verdana_80_4bppv+0x88>)
 8007e60:	f019 fe11 	bl	8021a86 <__cxa_guard_acquire>
 8007e64:	4603      	mov	r3, r0
 8007e66:	2b00      	cmp	r3, #0
 8007e68:	bf14      	ite	ne
 8007e6a:	2301      	movne	r3, #1
 8007e6c:	2300      	moveq	r3, #0
 8007e6e:	b2db      	uxtb	r3, r3
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d025      	beq.n	8007ec0 <_Z23getFont_verdana_80_4bppv+0x80>
 8007e74:	2300      	movs	r3, #0
 8007e76:	930c      	str	r3, [sp, #48]	@ 0x30
 8007e78:	2300      	movs	r3, #0
 8007e7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007e7c:	2300      	movs	r3, #0
 8007e7e:	930a      	str	r3, [sp, #40]	@ 0x28
 8007e80:	233f      	movs	r3, #63	@ 0x3f
 8007e82:	9309      	str	r3, [sp, #36]	@ 0x24
 8007e84:	4b11      	ldr	r3, [pc, #68]	@ (8007ecc <_Z23getFont_verdana_80_4bppv+0x8c>)
 8007e86:	9308      	str	r3, [sp, #32]
 8007e88:	4b11      	ldr	r3, [pc, #68]	@ (8007ed0 <_Z23getFont_verdana_80_4bppv+0x90>)
 8007e8a:	9307      	str	r3, [sp, #28]
 8007e8c:	2300      	movs	r3, #0
 8007e8e:	9306      	str	r3, [sp, #24]
 8007e90:	2300      	movs	r3, #0
 8007e92:	9305      	str	r3, [sp, #20]
 8007e94:	2301      	movs	r3, #1
 8007e96:	9304      	str	r3, [sp, #16]
 8007e98:	2304      	movs	r3, #4
 8007e9a:	9303      	str	r3, [sp, #12]
 8007e9c:	2300      	movs	r3, #0
 8007e9e:	9302      	str	r3, [sp, #8]
 8007ea0:	2300      	movs	r3, #0
 8007ea2:	9301      	str	r3, [sp, #4]
 8007ea4:	2350      	movs	r3, #80	@ 0x50
 8007ea6:	9300      	str	r3, [sp, #0]
 8007ea8:	2351      	movs	r3, #81	@ 0x51
 8007eaa:	220b      	movs	r2, #11
 8007eac:	4909      	ldr	r1, [pc, #36]	@ (8007ed4 <_Z23getFont_verdana_80_4bppv+0x94>)
 8007eae:	480a      	ldr	r0, [pc, #40]	@ (8007ed8 <_Z23getFont_verdana_80_4bppv+0x98>)
 8007eb0:	f7ff fe5c 	bl	8007b6c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007eb4:	4809      	ldr	r0, [pc, #36]	@ (8007edc <_Z23getFont_verdana_80_4bppv+0x9c>)
 8007eb6:	f019 fe2f 	bl	8021b18 <atexit>
 8007eba:	4803      	ldr	r0, [pc, #12]	@ (8007ec8 <_Z23getFont_verdana_80_4bppv+0x88>)
 8007ebc:	f019 fdef 	bl	8021a9e <__cxa_guard_release>
    return verdana_80_4bpp;
 8007ec0:	4b05      	ldr	r3, [pc, #20]	@ (8007ed8 <_Z23getFont_verdana_80_4bppv+0x98>)
}
 8007ec2:	4618      	mov	r0, r3
 8007ec4:	46bd      	mov	sp, r7
 8007ec6:	bd80      	pop	{r7, pc}
 8007ec8:	20000574 	.word	0x20000574
 8007ecc:	08028924 	.word	0x08028924
 8007ed0:	08028930 	.word	0x08028930
 8007ed4:	08028880 	.word	0x08028880
 8007ed8:	20000548 	.word	0x20000548
 8007edc:	08007e31 	.word	0x08007e31

08007ee0 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8007ee0:	b480      	push	{r7}
 8007ee2:	b083      	sub	sp, #12
 8007ee4:	af00      	add	r7, sp, #0
 8007ee6:	6078      	str	r0, [r7, #4]
 8007ee8:	6039      	str	r1, [r7, #0]
 8007eea:	683b      	ldr	r3, [r7, #0]
 8007eec:	4618      	mov	r0, r3
 8007eee:	370c      	adds	r7, #12
 8007ef0:	46bd      	mov	sp, r7
 8007ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef6:	4770      	bx	lr

08007ef8 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007ef8:	b480      	push	{r7}
 8007efa:	b083      	sub	sp, #12
 8007efc:	af00      	add	r7, sp, #0
 8007efe:	6078      	str	r0, [r7, #4]
 8007f00:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007f02:	bf00      	nop
 8007f04:	370c      	adds	r7, #12
 8007f06:	46bd      	mov	sp, r7
 8007f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f0c:	4770      	bx	lr

08007f0e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8007f0e:	b480      	push	{r7}
 8007f10:	b083      	sub	sp, #12
 8007f12:	af00      	add	r7, sp, #0
 8007f14:	6078      	str	r0, [r7, #4]
 8007f16:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007f18:	bf00      	nop
 8007f1a:	370c      	adds	r7, #12
 8007f1c:	46bd      	mov	sp, r7
 8007f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f22:	4770      	bx	lr

08007f24 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8007f24:	b480      	push	{r7}
 8007f26:	b083      	sub	sp, #12
 8007f28:	af00      	add	r7, sp, #0
 8007f2a:	6078      	str	r0, [r7, #4]
 8007f2c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8007f2e:	bf00      	nop
 8007f30:	370c      	adds	r7, #12
 8007f32:	46bd      	mov	sp, r7
 8007f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f38:	4770      	bx	lr

08007f3a <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8007f3a:	b480      	push	{r7}
 8007f3c:	b083      	sub	sp, #12
 8007f3e:	af00      	add	r7, sp, #0
 8007f40:	6078      	str	r0, [r7, #4]
 8007f42:	460b      	mov	r3, r1
 8007f44:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 8007f46:	bf00      	nop
 8007f48:	370c      	adds	r7, #12
 8007f4a:	46bd      	mov	sp, r7
 8007f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f50:	4770      	bx	lr

08007f52 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8007f52:	b480      	push	{r7}
 8007f54:	b083      	sub	sp, #12
 8007f56:	af00      	add	r7, sp, #0
 8007f58:	6078      	str	r0, [r7, #4]
    {
    }
 8007f5a:	bf00      	nop
 8007f5c:	370c      	adds	r7, #12
 8007f5e:	46bd      	mov	sp, r7
 8007f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f64:	4770      	bx	lr

08007f66 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8007f66:	b480      	push	{r7}
 8007f68:	b083      	sub	sp, #12
 8007f6a:	af00      	add	r7, sp, #0
 8007f6c:	6078      	str	r0, [r7, #4]
    {
    }
 8007f6e:	bf00      	nop
 8007f70:	370c      	adds	r7, #12
 8007f72:	46bd      	mov	sp, r7
 8007f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f78:	4770      	bx	lr
	...

08007f7c <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8007f7c:	b480      	push	{r7}
 8007f7e:	b083      	sub	sp, #12
 8007f80:	af00      	add	r7, sp, #0
 8007f82:	6078      	str	r0, [r7, #4]
    {
 8007f84:	4a04      	ldr	r2, [pc, #16]	@ (8007f98 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	601a      	str	r2, [r3, #0]
    }
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	4618      	mov	r0, r3
 8007f8e:	370c      	adds	r7, #12
 8007f90:	46bd      	mov	sp, r7
 8007f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f96:	4770      	bx	lr
 8007f98:	08023ff8 	.word	0x08023ff8

08007f9c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8007f9c:	b580      	push	{r7, lr}
 8007f9e:	b082      	sub	sp, #8
 8007fa0:	af00      	add	r7, sp, #0
 8007fa2:	6078      	str	r0, [r7, #4]
    }
 8007fa4:	6878      	ldr	r0, [r7, #4]
 8007fa6:	f7ff ffe9 	bl	8007f7c <_ZN8touchgfx15UIEventListenerD1Ev>
 8007faa:	2104      	movs	r1, #4
 8007fac:	6878      	ldr	r0, [r7, #4]
 8007fae:	f019 fd68 	bl	8021a82 <_ZdlPvj>
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	4618      	mov	r0, r3
 8007fb6:	3708      	adds	r7, #8
 8007fb8:	46bd      	mov	sp, r7
 8007fba:	bd80      	pop	{r7, pc}

08007fbc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8007fbc:	b480      	push	{r7}
 8007fbe:	b083      	sub	sp, #12
 8007fc0:	af00      	add	r7, sp, #0
 8007fc2:	6078      	str	r0, [r7, #4]
    {
    }
 8007fc4:	bf00      	nop
 8007fc6:	370c      	adds	r7, #12
 8007fc8:	46bd      	mov	sp, r7
 8007fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fce:	4770      	bx	lr

08007fd0 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8007fd0:	b480      	push	{r7}
 8007fd2:	b083      	sub	sp, #12
 8007fd4:	af00      	add	r7, sp, #0
 8007fd6:	6078      	str	r0, [r7, #4]
 8007fd8:	460b      	mov	r3, r1
 8007fda:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 8007fdc:	bf00      	nop
 8007fde:	370c      	adds	r7, #12
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe6:	4770      	bx	lr

08007fe8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8007fe8:	b480      	push	{r7}
 8007fea:	b083      	sub	sp, #12
 8007fec:	af00      	add	r7, sp, #0
 8007fee:	6078      	str	r0, [r7, #4]
 8007ff0:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	683a      	ldr	r2, [r7, #0]
 8007ff6:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 8007ffa:	6810      	ldr	r0, [r2, #0]
 8007ffc:	6851      	ldr	r1, [r2, #4]
 8007ffe:	c303      	stmia	r3!, {r0, r1}
    }
 8008000:	bf00      	nop
 8008002:	370c      	adds	r7, #12
 8008004:	46bd      	mov	sp, r7
 8008006:	f85d 7b04 	ldr.w	r7, [sp], #4
 800800a:	4770      	bx	lr

0800800c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800800c:	b580      	push	{r7, lr}
 800800e:	b082      	sub	sp, #8
 8008010:	af00      	add	r7, sp, #0
 8008012:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8008014:	687b      	ldr	r3, [r7, #4]
 8008016:	3304      	adds	r3, #4
 8008018:	4618      	mov	r0, r3
 800801a:	f008 f896 	bl	801014a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800801e:	bf00      	nop
 8008020:	3708      	adds	r7, #8
 8008022:	46bd      	mov	sp, r7
 8008024:	bd80      	pop	{r7, pc}
	...

08008028 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8008028:	b480      	push	{r7}
 800802a:	b083      	sub	sp, #12
 800802c:	af00      	add	r7, sp, #0
 800802e:	6078      	str	r0, [r7, #4]
    {
 8008030:	4a04      	ldr	r2, [pc, #16]	@ (8008044 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	601a      	str	r2, [r3, #0]
    }
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4618      	mov	r0, r3
 800803a:	370c      	adds	r7, #12
 800803c:	46bd      	mov	sp, r7
 800803e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008042:	4770      	bx	lr
 8008044:	08023fe0 	.word	0x08023fe0

08008048 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008048:	b580      	push	{r7, lr}
 800804a:	b082      	sub	sp, #8
 800804c:	af00      	add	r7, sp, #0
 800804e:	6078      	str	r0, [r7, #4]
    }
 8008050:	6878      	ldr	r0, [r7, #4]
 8008052:	f7ff ffe9 	bl	8008028 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008056:	2104      	movs	r1, #4
 8008058:	6878      	ldr	r0, [r7, #4]
 800805a:	f019 fd12 	bl	8021a82 <_ZdlPvj>
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	4618      	mov	r0, r3
 8008062:	3708      	adds	r7, #8
 8008064:	46bd      	mov	sp, r7
 8008066:	bd80      	pop	{r7, pc}

08008068 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008068:	b480      	push	{r7}
 800806a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800806c:	4b0b      	ldr	r3, [pc, #44]	@ (800809c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800806e:	681b      	ldr	r3, [r3, #0]
 8008070:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 8008074:	2b00      	cmp	r3, #0
 8008076:	d008      	beq.n	800808a <_ZN8touchgfx3HAL3lcdEv+0x22>
 8008078:	4b08      	ldr	r3, [pc, #32]	@ (800809c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800807a:	681b      	ldr	r3, [r3, #0]
 800807c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800807e:	2b00      	cmp	r3, #0
 8008080:	d003      	beq.n	800808a <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8008082:	4b06      	ldr	r3, [pc, #24]	@ (800809c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008084:	681b      	ldr	r3, [r3, #0]
 8008086:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008088:	e002      	b.n	8008090 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800808a:	4b04      	ldr	r3, [pc, #16]	@ (800809c <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	689b      	ldr	r3, [r3, #8]
    }
 8008090:	4618      	mov	r0, r3
 8008092:	46bd      	mov	sp, r7
 8008094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008098:	4770      	bx	lr
 800809a:	bf00      	nop
 800809c:	20002230 	.word	0x20002230

080080a0 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80080a0:	b480      	push	{r7}
 80080a2:	b083      	sub	sp, #12
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80080a8:	4a07      	ldr	r2, [pc, #28]	@ (80080c8 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	601a      	str	r2, [r3, #0]
 80080ae:	687b      	ldr	r3, [r7, #4]
 80080b0:	2200      	movs	r2, #0
 80080b2:	605a      	str	r2, [r3, #4]
 80080b4:	687b      	ldr	r3, [r7, #4]
 80080b6:	2200      	movs	r2, #0
 80080b8:	721a      	strb	r2, [r3, #8]
    {
    }
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	4618      	mov	r0, r3
 80080be:	370c      	adds	r7, #12
 80080c0:	46bd      	mov	sp, r7
 80080c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080c6:	4770      	bx	lr
 80080c8:	08023fbc 	.word	0x08023fbc

080080cc <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 80080cc:	b480      	push	{r7}
 80080ce:	b083      	sub	sp, #12
 80080d0:	af00      	add	r7, sp, #0
 80080d2:	6078      	str	r0, [r7, #4]
    {
 80080d4:	4a04      	ldr	r2, [pc, #16]	@ (80080e8 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	601a      	str	r2, [r3, #0]
    }
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	4618      	mov	r0, r3
 80080de:	370c      	adds	r7, #12
 80080e0:	46bd      	mov	sp, r7
 80080e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080e6:	4770      	bx	lr
 80080e8:	08023fbc 	.word	0x08023fbc

080080ec <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 80080ec:	b580      	push	{r7, lr}
 80080ee:	b082      	sub	sp, #8
 80080f0:	af00      	add	r7, sp, #0
 80080f2:	6078      	str	r0, [r7, #4]
    }
 80080f4:	6878      	ldr	r0, [r7, #4]
 80080f6:	f7ff ffe9 	bl	80080cc <_ZN8touchgfx10TransitionD1Ev>
 80080fa:	210c      	movs	r1, #12
 80080fc:	6878      	ldr	r0, [r7, #4]
 80080fe:	f019 fcc0 	bl	8021a82 <_ZdlPvj>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	4618      	mov	r0, r3
 8008106:	3708      	adds	r7, #8
 8008108:	46bd      	mov	sp, r7
 800810a:	bd80      	pop	{r7, pc}

0800810c <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800810c:	b480      	push	{r7}
 800810e:	b083      	sub	sp, #12
 8008110:	af00      	add	r7, sp, #0
 8008112:	6078      	str	r0, [r7, #4]
    {
    }
 8008114:	bf00      	nop
 8008116:	370c      	adds	r7, #12
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr

08008120 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8008120:	b480      	push	{r7}
 8008122:	b083      	sub	sp, #12
 8008124:	af00      	add	r7, sp, #0
 8008126:	6078      	str	r0, [r7, #4]
    {
    }
 8008128:	bf00      	nop
 800812a:	370c      	adds	r7, #12
 800812c:	46bd      	mov	sp, r7
 800812e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008132:	4770      	bx	lr

08008134 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8008134:	b480      	push	{r7}
 8008136:	b083      	sub	sp, #12
 8008138:	af00      	add	r7, sp, #0
 800813a:	6078      	str	r0, [r7, #4]
    {
    }
 800813c:	bf00      	nop
 800813e:	370c      	adds	r7, #12
 8008140:	46bd      	mov	sp, r7
 8008142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008146:	4770      	bx	lr

08008148 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8008148:	b580      	push	{r7, lr}
 800814a:	b082      	sub	sp, #8
 800814c:	af00      	add	r7, sp, #0
 800814e:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8008150:	f007 ffd6 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 8008154:	4603      	mov	r3, r0
 8008156:	681a      	ldr	r2, [r3, #0]
 8008158:	323c      	adds	r2, #60	@ 0x3c
 800815a:	6812      	ldr	r2, [r2, #0]
 800815c:	4618      	mov	r0, r3
 800815e:	4790      	blx	r2
    }
 8008160:	bf00      	nop
 8008162:	3708      	adds	r7, #8
 8008164:	46bd      	mov	sp, r7
 8008166:	bd80      	pop	{r7, pc}

08008168 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008168:	b480      	push	{r7}
 800816a:	b083      	sub	sp, #12
 800816c:	af00      	add	r7, sp, #0
 800816e:	6078      	str	r0, [r7, #4]
 8008170:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	683a      	ldr	r2, [r7, #0]
 8008176:	605a      	str	r2, [r3, #4]
    }
 8008178:	bf00      	nop
 800817a:	370c      	adds	r7, #12
 800817c:	46bd      	mov	sp, r7
 800817e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008182:	4770      	bx	lr

08008184 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008184:	b580      	push	{r7, lr}
 8008186:	b082      	sub	sp, #8
 8008188:	af00      	add	r7, sp, #0
 800818a:	6078      	str	r0, [r7, #4]
 800818c:	4a05      	ldr	r2, [pc, #20]	@ (80081a4 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	601a      	str	r2, [r3, #0]
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	4618      	mov	r0, r3
 8008196:	f7ff fef1 	bl	8007f7c <_ZN8touchgfx15UIEventListenerD1Ev>
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	4618      	mov	r0, r3
 800819e:	3708      	adds	r7, #8
 80081a0:	46bd      	mov	sp, r7
 80081a2:	bd80      	pop	{r7, pc}
 80081a4:	08024b4c 	.word	0x08024b4c

080081a8 <_ZN8touchgfx11ApplicationD0Ev>:
 80081a8:	b580      	push	{r7, lr}
 80081aa:	b082      	sub	sp, #8
 80081ac:	af00      	add	r7, sp, #0
 80081ae:	6078      	str	r0, [r7, #4]
 80081b0:	6878      	ldr	r0, [r7, #4]
 80081b2:	f7ff ffe7 	bl	8008184 <_ZN8touchgfx11ApplicationD1Ev>
 80081b6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80081ba:	6878      	ldr	r0, [r7, #4]
 80081bc:	f019 fc61 	bl	8021a82 <_ZdlPvj>
 80081c0:	687b      	ldr	r3, [r7, #4]
 80081c2:	4618      	mov	r0, r3
 80081c4:	3708      	adds	r7, #8
 80081c6:	46bd      	mov	sp, r7
 80081c8:	bd80      	pop	{r7, pc}
	...

080081cc <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 80081cc:	b580      	push	{r7, lr}
 80081ce:	b082      	sub	sp, #8
 80081d0:	af00      	add	r7, sp, #0
 80081d2:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	4618      	mov	r0, r3
 80081d8:	f008 f854 	bl	8010284 <_ZN8touchgfx11ApplicationC1Ev>
 80081dc:	4a09      	ldr	r2, [pc, #36]	@ (8008204 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	2200      	movs	r2, #0
 80081e6:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 80081ea:	687b      	ldr	r3, [r7, #4]
 80081ec:	2200      	movs	r2, #0
 80081ee:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 80081f2:	687b      	ldr	r3, [r7, #4]
 80081f4:	4a04      	ldr	r2, [pc, #16]	@ (8008208 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 80081f6:	6013      	str	r3, [r2, #0]
    }
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	4618      	mov	r0, r3
 80081fc:	3708      	adds	r7, #8
 80081fe:	46bd      	mov	sp, r7
 8008200:	bd80      	pop	{r7, pc}
 8008202:	bf00      	nop
 8008204:	08023f68 	.word	0x08023f68
 8008208:	2000227c 	.word	0x2000227c

0800820c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800820c:	b580      	push	{r7, lr}
 800820e:	b082      	sub	sp, #8
 8008210:	af00      	add	r7, sp, #0
 8008212:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008214:	6878      	ldr	r0, [r7, #4]
 8008216:	f000 f804 	bl	8008222 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800821a:	bf00      	nop
 800821c:	3708      	adds	r7, #8
 800821e:	46bd      	mov	sp, r7
 8008220:	bd80      	pop	{r7, pc}

08008222 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008222:	b580      	push	{r7, lr}
 8008224:	b082      	sub	sp, #8
 8008226:	af00      	add	r7, sp, #0
 8008228:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008230:	2b00      	cmp	r3, #0
 8008232:	d00f      	beq.n	8008254 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	330c      	adds	r3, #12
 8008244:	681b      	ldr	r3, [r3, #0]
 8008246:	4610      	mov	r0, r2
 8008248:	4798      	blx	r3
 800824a:	4603      	mov	r3, r0
 800824c:	2b00      	cmp	r3, #0
 800824e:	d001      	beq.n	8008254 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008250:	2301      	movs	r3, #1
 8008252:	e000      	b.n	8008256 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008254:	2300      	movs	r3, #0
 8008256:	2b00      	cmp	r3, #0
 8008258:	d00e      	beq.n	8008278 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008260:	687b      	ldr	r3, [r7, #4]
 8008262:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008266:	681b      	ldr	r3, [r3, #0]
 8008268:	3308      	adds	r3, #8
 800826a:	681b      	ldr	r3, [r3, #0]
 800826c:	4610      	mov	r0, r2
 800826e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	2200      	movs	r2, #0
 8008274:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 8008278:	bf00      	nop
 800827a:	3708      	adds	r7, #8
 800827c:	46bd      	mov	sp, r7
 800827e:	bd80      	pop	{r7, pc}

08008280 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8008280:	b480      	push	{r7}
 8008282:	b083      	sub	sp, #12
 8008284:	af00      	add	r7, sp, #0
 8008286:	6078      	str	r0, [r7, #4]
 8008288:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800828a:	687b      	ldr	r3, [r7, #4]
 800828c:	683a      	ldr	r2, [r7, #0]
 800828e:	601a      	str	r2, [r3, #0]
    }
 8008290:	bf00      	nop
 8008292:	370c      	adds	r7, #12
 8008294:	46bd      	mov	sp, r7
 8008296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800829a:	4770      	bx	lr

0800829c <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800829c:	b580      	push	{r7, lr}
 800829e:	b082      	sub	sp, #8
 80082a0:	af00      	add	r7, sp, #0
 80082a2:	6078      	str	r0, [r7, #4]
 80082a4:	4a05      	ldr	r2, [pc, #20]	@ (80082bc <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	601a      	str	r2, [r3, #0]
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	4618      	mov	r0, r3
 80082ae:	f7ff ff69 	bl	8008184 <_ZN8touchgfx11ApplicationD1Ev>
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	4618      	mov	r0, r3
 80082b6:	3708      	adds	r7, #8
 80082b8:	46bd      	mov	sp, r7
 80082ba:	bd80      	pop	{r7, pc}
 80082bc:	08023f68 	.word	0x08023f68

080082c0 <_ZN8touchgfx14MVPApplicationD0Ev>:
 80082c0:	b580      	push	{r7, lr}
 80082c2:	b082      	sub	sp, #8
 80082c4:	af00      	add	r7, sp, #0
 80082c6:	6078      	str	r0, [r7, #4]
 80082c8:	6878      	ldr	r0, [r7, #4]
 80082ca:	f7ff ffe7 	bl	800829c <_ZN8touchgfx14MVPApplicationD1Ev>
 80082ce:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 80082d2:	6878      	ldr	r0, [r7, #4]
 80082d4:	f019 fbd5 	bl	8021a82 <_ZdlPvj>
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	4618      	mov	r0, r3
 80082dc:	3708      	adds	r7, #8
 80082de:	46bd      	mov	sp, r7
 80082e0:	bd80      	pop	{r7, pc}
	...

080082e4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80082e4:	b580      	push	{r7, lr}
 80082e6:	b082      	sub	sp, #8
 80082e8:	af00      	add	r7, sp, #0
 80082ea:	6078      	str	r0, [r7, #4]
 80082ec:	4a08      	ldr	r2, [pc, #32]	@ (8008310 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	601a      	str	r2, [r3, #0]
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 80082f8:	4618      	mov	r0, r3
 80082fa:	f000 fc67 	bl	8008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	4618      	mov	r0, r3
 8008302:	f7ff ffcb 	bl	800829c <_ZN8touchgfx14MVPApplicationD1Ev>
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	4618      	mov	r0, r3
 800830a:	3708      	adds	r7, #8
 800830c:	46bd      	mov	sp, r7
 800830e:	bd80      	pop	{r7, pc}
 8008310:	08023efc 	.word	0x08023efc

08008314 <_ZN23FrontendApplicationBaseD0Ev>:
 8008314:	b580      	push	{r7, lr}
 8008316:	b082      	sub	sp, #8
 8008318:	af00      	add	r7, sp, #0
 800831a:	6078      	str	r0, [r7, #4]
 800831c:	6878      	ldr	r0, [r7, #4]
 800831e:	f7ff ffe1 	bl	80082e4 <_ZN23FrontendApplicationBaseD1Ev>
 8008322:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008326:	6878      	ldr	r0, [r7, #4]
 8008328:	f019 fbab 	bl	8021a82 <_ZdlPvj>
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	4618      	mov	r0, r3
 8008330:	3708      	adds	r7, #8
 8008332:	46bd      	mov	sp, r7
 8008334:	bd80      	pop	{r7, pc}

08008336 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008336:	b580      	push	{r7, lr}
 8008338:	b082      	sub	sp, #8
 800833a:	af00      	add	r7, sp, #0
 800833c:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 800833e:	6878      	ldr	r0, [r7, #4]
 8008340:	f000 f888 	bl	8008454 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 8008344:	bf00      	nop
 8008346:	3708      	adds	r7, #8
 8008348:	46bd      	mov	sp, r7
 800834a:	bd80      	pop	{r7, pc}

0800834c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800834c:	b480      	push	{r7}
 800834e:	b083      	sub	sp, #12
 8008350:	af00      	add	r7, sp, #0
 8008352:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	2201      	movs	r2, #1
 8008358:	721a      	strb	r2, [r3, #8]
    }
 800835a:	bf00      	nop
 800835c:	370c      	adds	r7, #12
 800835e:	46bd      	mov	sp, r7
 8008360:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008364:	4770      	bx	lr

08008366 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8008366:	b480      	push	{r7}
 8008368:	b083      	sub	sp, #12
 800836a:	af00      	add	r7, sp, #0
 800836c:	6078      	str	r0, [r7, #4]
 800836e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	683a      	ldr	r2, [r7, #0]
 8008374:	605a      	str	r2, [r3, #4]
    }
 8008376:	bf00      	nop
 8008378:	370c      	adds	r7, #12
 800837a:	46bd      	mov	sp, r7
 800837c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008380:	4770      	bx	lr
	...

08008384 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008384:	b580      	push	{r7, lr}
 8008386:	b084      	sub	sp, #16
 8008388:	af00      	add	r7, sp, #0
 800838a:	60f8      	str	r0, [r7, #12]
 800838c:	60b9      	str	r1, [r7, #8]
 800838e:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008390:	68fb      	ldr	r3, [r7, #12]
 8008392:	4618      	mov	r0, r3
 8008394:	f7ff ff1a 	bl	80081cc <_ZN8touchgfx14MVPApplicationC1Ev>
 8008398:	4a19      	ldr	r2, [pc, #100]	@ (8008400 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 800839a:	68fb      	ldr	r3, [r7, #12]
 800839c:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800839e:	68fb      	ldr	r3, [r7, #12]
 80083a0:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 80083a4:	4618      	mov	r0, r3
 80083a6:	f000 f8f1 	bl	800858c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 80083aa:	68fb      	ldr	r3, [r7, #12]
 80083ac:	687a      	ldr	r2, [r7, #4]
 80083ae:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	68ba      	ldr	r2, [r7, #8]
 80083b6:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80083ba:	f7ff fb93 	bl	8007ae4 <_ZN8touchgfx3HAL11getInstanceEv>
 80083be:	4603      	mov	r3, r0
 80083c0:	681a      	ldr	r2, [r3, #0]
 80083c2:	3208      	adds	r2, #8
 80083c4:	6812      	ldr	r2, [r2, #0]
 80083c6:	2100      	movs	r1, #0
 80083c8:	4618      	mov	r0, r3
 80083ca:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 80083cc:	2000      	movs	r0, #0
 80083ce:	f001 ff8b 	bl	800a2e8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80083d2:	f7ff fe49 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 80083d6:	4603      	mov	r3, r0
 80083d8:	4618      	mov	r0, r3
 80083da:	f011 ffc0 	bl	801a35e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80083de:	f7ff fe43 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 80083e2:	4603      	mov	r3, r0
 80083e4:	4618      	mov	r0, r3
 80083e6:	f012 f831 	bl	801a44c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 80083ea:	f7ff fe3d 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 80083ee:	4603      	mov	r3, r0
 80083f0:	4618      	mov	r0, r3
 80083f2:	f012 f837 	bl	801a464 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 80083f6:	68fb      	ldr	r3, [r7, #12]
 80083f8:	4618      	mov	r0, r3
 80083fa:	3710      	adds	r7, #16
 80083fc:	46bd      	mov	sp, r7
 80083fe:	bd80      	pop	{r7, pc}
 8008400:	08023efc 	.word	0x08023efc

08008404 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008404:	b480      	push	{r7}
 8008406:	b083      	sub	sp, #12
 8008408:	af00      	add	r7, sp, #0
 800840a:	6078      	str	r0, [r7, #4]
 800840c:	6039      	str	r1, [r7, #0]
 800840e:	687b      	ldr	r3, [r7, #4]
 8008410:	4618      	mov	r0, r3
 8008412:	370c      	adds	r7, #12
 8008414:	46bd      	mov	sp, r7
 8008416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800841a:	4770      	bx	lr

0800841c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800841c:	b580      	push	{r7, lr}
 800841e:	b082      	sub	sp, #8
 8008420:	af00      	add	r7, sp, #0
 8008422:	6078      	str	r0, [r7, #4]
 8008424:	6039      	str	r1, [r7, #0]
 8008426:	687b      	ldr	r3, [r7, #4]
 8008428:	683a      	ldr	r2, [r7, #0]
 800842a:	4611      	mov	r1, r2
 800842c:	4618      	mov	r0, r3
 800842e:	f7ff ffe9 	bl	8008404 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008432:	683b      	ldr	r3, [r7, #0]
 8008434:	685a      	ldr	r2, [r3, #4]
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	605a      	str	r2, [r3, #4]
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	683a      	ldr	r2, [r7, #0]
 800843e:	3308      	adds	r3, #8
 8008440:	3208      	adds	r2, #8
 8008442:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008446:	e883 0003 	stmia.w	r3, {r0, r1}
 800844a:	687b      	ldr	r3, [r7, #4]
 800844c:	4618      	mov	r0, r3
 800844e:	3708      	adds	r7, #8
 8008450:	46bd      	mov	sp, r7
 8008452:	bd80      	pop	{r7, pc}

08008454 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 8008454:	b590      	push	{r4, r7, lr}
 8008456:	b089      	sub	sp, #36	@ 0x24
 8008458:	af00      	add	r7, sp, #0
 800845a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008462:	4b10      	ldr	r3, [pc, #64]	@ (80084a4 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 8008464:	61bb      	str	r3, [r7, #24]
 8008466:	2300      	movs	r3, #0
 8008468:	61fb      	str	r3, [r7, #28]
 800846a:	f107 0008 	add.w	r0, r7, #8
 800846e:	f107 0318 	add.w	r3, r7, #24
 8008472:	cb0c      	ldmia	r3, {r2, r3}
 8008474:	6879      	ldr	r1, [r7, #4]
 8008476:	f000 f8a5 	bl	80085c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800847a:	f107 0308 	add.w	r3, r7, #8
 800847e:	4619      	mov	r1, r3
 8008480:	4620      	mov	r0, r4
 8008482:	f7ff ffcb 	bl	800841c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008486:	f107 0308 	add.w	r3, r7, #8
 800848a:	4618      	mov	r0, r3
 800848c:	f000 fb9e 	bl	8008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800849c:	bf00      	nop
 800849e:	3724      	adds	r7, #36	@ 0x24
 80084a0:	46bd      	mov	sp, r7
 80084a2:	bd90      	pop	{r4, r7, pc}
 80084a4:	080084a9 	.word	0x080084a9

080084a8 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 80084a8:	b580      	push	{r7, lr}
 80084aa:	b084      	sub	sp, #16
 80084ac:	af02      	add	r7, sp, #8
 80084ae:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80084b0:	687b      	ldr	r3, [r7, #4]
 80084b2:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 80084bc:	461a      	mov	r2, r3
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 80084c4:	9300      	str	r3, [sp, #0]
 80084c6:	4b04      	ldr	r3, [pc, #16]	@ (80084d8 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 80084c8:	4804      	ldr	r0, [pc, #16]	@ (80084dc <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 80084ca:	f000 f8ad 	bl	8008628 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80084ce:	bf00      	nop
 80084d0:	3708      	adds	r7, #8
 80084d2:	46bd      	mov	sp, r7
 80084d4:	bd80      	pop	{r7, pc}
 80084d6:	bf00      	nop
 80084d8:	20002270 	.word	0x20002270
 80084dc:	2000226c 	.word	0x2000226c

080084e0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 80084e0:	b590      	push	{r4, r7, lr}
 80084e2:	b089      	sub	sp, #36	@ 0x24
 80084e4:	af00      	add	r7, sp, #0
 80084e6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 80084e8:	687b      	ldr	r3, [r7, #4]
 80084ea:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 80084ee:	4b10      	ldr	r3, [pc, #64]	@ (8008530 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 80084f0:	61bb      	str	r3, [r7, #24]
 80084f2:	2300      	movs	r3, #0
 80084f4:	61fb      	str	r3, [r7, #28]
 80084f6:	f107 0008 	add.w	r0, r7, #8
 80084fa:	f107 0318 	add.w	r3, r7, #24
 80084fe:	cb0c      	ldmia	r3, {r2, r3}
 8008500:	6879      	ldr	r1, [r7, #4]
 8008502:	f000 f85f 	bl	80085c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008506:	f107 0308 	add.w	r3, r7, #8
 800850a:	4619      	mov	r1, r3
 800850c:	4620      	mov	r0, r4
 800850e:	f7ff ff85 	bl	800841c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008512:	f107 0308 	add.w	r3, r7, #8
 8008516:	4618      	mov	r0, r3
 8008518:	f000 fb58 	bl	8008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008528:	bf00      	nop
 800852a:	3724      	adds	r7, #36	@ 0x24
 800852c:	46bd      	mov	sp, r7
 800852e:	bd90      	pop	{r4, r7, pc}
 8008530:	08008535 	.word	0x08008535

08008534 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008534:	b580      	push	{r7, lr}
 8008536:	b084      	sub	sp, #16
 8008538:	af02      	add	r7, sp, #8
 800853a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008548:	461a      	mov	r2, r3
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008550:	9300      	str	r3, [sp, #0]
 8008552:	4b04      	ldr	r3, [pc, #16]	@ (8008564 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8008554:	4804      	ldr	r0, [pc, #16]	@ (8008568 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8008556:	f000 f981 	bl	800885c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800855a:	bf00      	nop
 800855c:	3708      	adds	r7, #8
 800855e:	46bd      	mov	sp, r7
 8008560:	bd80      	pop	{r7, pc}
 8008562:	bf00      	nop
 8008564:	20002270 	.word	0x20002270
 8008568:	2000226c 	.word	0x2000226c

0800856c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800856c:	b480      	push	{r7}
 800856e:	b083      	sub	sp, #12
 8008570:	af00      	add	r7, sp, #0
 8008572:	6078      	str	r0, [r7, #4]
 8008574:	4a04      	ldr	r2, [pc, #16]	@ (8008588 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	601a      	str	r2, [r3, #0]
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	4618      	mov	r0, r3
 800857e:	370c      	adds	r7, #12
 8008580:	46bd      	mov	sp, r7
 8008582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008586:	4770      	bx	lr
 8008588:	08023fe0 	.word	0x08023fe0

0800858c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800858c:	b580      	push	{r7, lr}
 800858e:	b082      	sub	sp, #8
 8008590:	af00      	add	r7, sp, #0
 8008592:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008594:	687b      	ldr	r3, [r7, #4]
 8008596:	4618      	mov	r0, r3
 8008598:	f7ff ffe8 	bl	800856c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800859c:	4a08      	ldr	r2, [pc, #32]	@ (80085c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	601a      	str	r2, [r3, #0]
 80085a2:	687b      	ldr	r3, [r7, #4]
 80085a4:	2200      	movs	r2, #0
 80085a6:	605a      	str	r2, [r3, #4]
 80085a8:	687b      	ldr	r3, [r7, #4]
 80085aa:	2200      	movs	r2, #0
 80085ac:	609a      	str	r2, [r3, #8]
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	2200      	movs	r2, #0
 80085b2:	60da      	str	r2, [r3, #12]
    {
    }
 80085b4:	687b      	ldr	r3, [r7, #4]
 80085b6:	4618      	mov	r0, r3
 80085b8:	3708      	adds	r7, #8
 80085ba:	46bd      	mov	sp, r7
 80085bc:	bd80      	pop	{r7, pc}
 80085be:	bf00      	nop
 80085c0:	08023f50 	.word	0x08023f50

080085c4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 80085c4:	b580      	push	{r7, lr}
 80085c6:	b084      	sub	sp, #16
 80085c8:	af00      	add	r7, sp, #0
 80085ca:	60f8      	str	r0, [r7, #12]
 80085cc:	60b9      	str	r1, [r7, #8]
 80085ce:	4639      	mov	r1, r7
 80085d0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 80085d4:	68fb      	ldr	r3, [r7, #12]
 80085d6:	4618      	mov	r0, r3
 80085d8:	f7ff ffc8 	bl	800856c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80085dc:	4a08      	ldr	r2, [pc, #32]	@ (8008600 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 80085de:	68fb      	ldr	r3, [r7, #12]
 80085e0:	601a      	str	r2, [r3, #0]
 80085e2:	68fb      	ldr	r3, [r7, #12]
 80085e4:	68ba      	ldr	r2, [r7, #8]
 80085e6:	605a      	str	r2, [r3, #4]
 80085e8:	68fb      	ldr	r3, [r7, #12]
 80085ea:	3308      	adds	r3, #8
 80085ec:	463a      	mov	r2, r7
 80085ee:	e892 0003 	ldmia.w	r2, {r0, r1}
 80085f2:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 80085f6:	68fb      	ldr	r3, [r7, #12]
 80085f8:	4618      	mov	r0, r3
 80085fa:	3710      	adds	r7, #16
 80085fc:	46bd      	mov	sp, r7
 80085fe:	bd80      	pop	{r7, pc}
 8008600:	08023f50 	.word	0x08023f50

08008604 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008604:	b580      	push	{r7, lr}
 8008606:	b082      	sub	sp, #8
 8008608:	af00      	add	r7, sp, #0
 800860a:	6078      	str	r0, [r7, #4]
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	4618      	mov	r0, r3
 8008610:	f7ff fd46 	bl	80080a0 <_ZN8touchgfx10TransitionC1Ev>
 8008614:	4a03      	ldr	r2, [pc, #12]	@ (8008624 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	601a      	str	r2, [r3, #0]
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	4618      	mov	r0, r3
 800861e:	3708      	adds	r7, #8
 8008620:	46bd      	mov	sp, r7
 8008622:	bd80      	pop	{r7, pc}
 8008624:	08023ed8 	.word	0x08023ed8

08008628 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008628:	b590      	push	{r4, r7, lr}
 800862a:	b08f      	sub	sp, #60	@ 0x3c
 800862c:	af00      	add	r7, sp, #0
 800862e:	60f8      	str	r0, [r7, #12]
 8008630:	60b9      	str	r1, [r7, #8]
 8008632:	607a      	str	r2, [r7, #4]
 8008634:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	689a      	ldr	r2, [r3, #8]
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	689b      	ldr	r3, [r3, #8]
 800863e:	681b      	ldr	r3, [r3, #0]
 8008640:	3320      	adds	r3, #32
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	4610      	mov	r0, r2
 8008646:	4798      	blx	r3
 8008648:	4603      	mov	r3, r0
 800864a:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 800864e:	d205      	bcs.n	800865c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008650:	4b7d      	ldr	r3, [pc, #500]	@ (8008848 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008652:	4a7e      	ldr	r2, [pc, #504]	@ (800884c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008654:	21a3      	movs	r1, #163	@ 0xa3
 8008656:	487e      	ldr	r0, [pc, #504]	@ (8008850 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008658:	f019 fa40 	bl	8021adc <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	685a      	ldr	r2, [r3, #4]
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	685b      	ldr	r3, [r3, #4]
 8008664:	681b      	ldr	r3, [r3, #0]
 8008666:	3320      	adds	r3, #32
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	4610      	mov	r0, r2
 800866c:	4798      	blx	r3
 800866e:	4603      	mov	r3, r0
 8008670:	2b0f      	cmp	r3, #15
 8008672:	d805      	bhi.n	8008680 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008674:	4b77      	ldr	r3, [pc, #476]	@ (8008854 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008676:	4a75      	ldr	r2, [pc, #468]	@ (800884c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008678:	21a4      	movs	r1, #164	@ 0xa4
 800867a:	4875      	ldr	r0, [pc, #468]	@ (8008850 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800867c:	f019 fa2e 	bl	8021adc <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008680:	687b      	ldr	r3, [r7, #4]
 8008682:	68da      	ldr	r2, [r3, #12]
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	68db      	ldr	r3, [r3, #12]
 8008688:	681b      	ldr	r3, [r3, #0]
 800868a:	3320      	adds	r3, #32
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	4610      	mov	r0, r2
 8008690:	4798      	blx	r3
 8008692:	4603      	mov	r3, r0
 8008694:	2b0b      	cmp	r3, #11
 8008696:	d805      	bhi.n	80086a4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008698:	4b6f      	ldr	r3, [pc, #444]	@ (8008858 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800869a:	4a6c      	ldr	r2, [pc, #432]	@ (800884c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800869c:	21a5      	movs	r1, #165	@ 0xa5
 800869e:	486c      	ldr	r0, [pc, #432]	@ (8008850 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80086a0:	f019 fa1c 	bl	8021adc <__assert_func>
 80086a4:	68fb      	ldr	r3, [r7, #12]
 80086a6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80086a8:	68bb      	ldr	r3, [r7, #8]
 80086aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80086ac:	683b      	ldr	r3, [r7, #0]
 80086ae:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80086b0:	f007 fd26 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 80086b4:	4603      	mov	r3, r0
 80086b6:	4618      	mov	r0, r3
 80086b8:	f7ff fca8 	bl	800800c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80086bc:	6a3b      	ldr	r3, [r7, #32]
 80086be:	681b      	ldr	r3, [r3, #0]
 80086c0:	2b00      	cmp	r3, #0
 80086c2:	d008      	beq.n	80086d6 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80086c4:	6a3b      	ldr	r3, [r7, #32]
 80086c6:	681a      	ldr	r2, [r3, #0]
 80086c8:	6a3b      	ldr	r3, [r7, #32]
 80086ca:	681b      	ldr	r3, [r3, #0]
 80086cc:	681b      	ldr	r3, [r3, #0]
 80086ce:	330c      	adds	r3, #12
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	4610      	mov	r0, r2
 80086d4:	4798      	blx	r3
    if (*currentTrans)
 80086d6:	6a3b      	ldr	r3, [r7, #32]
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	2b00      	cmp	r3, #0
 80086dc:	d007      	beq.n	80086ee <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 80086de:	6a3b      	ldr	r3, [r7, #32]
 80086e0:	681a      	ldr	r2, [r3, #0]
 80086e2:	6a3b      	ldr	r3, [r7, #32]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	681b      	ldr	r3, [r3, #0]
 80086ea:	4610      	mov	r0, r2
 80086ec:	4798      	blx	r3
    if (*currentScreen)
 80086ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	2b00      	cmp	r3, #0
 80086f4:	d008      	beq.n	8008708 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 80086f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80086f8:	681a      	ldr	r2, [r3, #0]
 80086fa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80086fc:	681b      	ldr	r3, [r3, #0]
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	3314      	adds	r3, #20
 8008702:	681b      	ldr	r3, [r3, #0]
 8008704:	4610      	mov	r0, r2
 8008706:	4798      	blx	r3
    if (*currentPresenter)
 8008708:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	2b00      	cmp	r3, #0
 800870e:	d008      	beq.n	8008722 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008710:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008712:	681a      	ldr	r2, [r3, #0]
 8008714:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008716:	681b      	ldr	r3, [r3, #0]
 8008718:	681b      	ldr	r3, [r3, #0]
 800871a:	3304      	adds	r3, #4
 800871c:	681b      	ldr	r3, [r3, #0]
 800871e:	4610      	mov	r0, r2
 8008720:	4798      	blx	r3
    if (*currentScreen)
 8008722:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008724:	681b      	ldr	r3, [r3, #0]
 8008726:	2b00      	cmp	r3, #0
 8008728:	d007      	beq.n	800873a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800872a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800872c:	681a      	ldr	r2, [r3, #0]
 800872e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	681b      	ldr	r3, [r3, #0]
 8008736:	4610      	mov	r0, r2
 8008738:	4798      	blx	r3
    if (*currentPresenter)
 800873a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	2b00      	cmp	r3, #0
 8008740:	d008      	beq.n	8008754 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008742:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008744:	681a      	ldr	r2, [r3, #0]
 8008746:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	3308      	adds	r3, #8
 800874e:	681b      	ldr	r3, [r3, #0]
 8008750:	4610      	mov	r0, r2
 8008752:	4798      	blx	r3
}
 8008754:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	68db      	ldr	r3, [r3, #12]
 800875a:	2100      	movs	r1, #0
 800875c:	4618      	mov	r0, r3
 800875e:	f000 f997 	bl	8008a90 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008762:	4603      	mov	r3, r0
 8008764:	4619      	mov	r1, r3
 8008766:	200c      	movs	r0, #12
 8008768:	f7ff fbba 	bl	8007ee0 <_ZnwjPv>
 800876c:	4604      	mov	r4, r0
 800876e:	4620      	mov	r0, r4
 8008770:	f7ff ff48 	bl	8008604 <_ZN8touchgfx12NoTransitionC1Ev>
 8008774:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	689b      	ldr	r3, [r3, #8]
 800877a:	2100      	movs	r1, #0
 800877c:	4618      	mov	r0, r3
 800877e:	f000 f99a 	bl	8008ab6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 8008782:	4603      	mov	r3, r0
 8008784:	4619      	mov	r1, r3
 8008786:	f44f 70aa 	mov.w	r0, #340	@ 0x154
 800878a:	f7ff fba9 	bl	8007ee0 <_ZnwjPv>
 800878e:	4604      	mov	r4, r0
 8008790:	4620      	mov	r0, r4
 8008792:	f002 f8bb 	bl	800a90c <_ZN10screenViewC1Ev>
 8008796:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008798:	687b      	ldr	r3, [r7, #4]
 800879a:	685b      	ldr	r3, [r3, #4]
 800879c:	2100      	movs	r1, #0
 800879e:	4618      	mov	r0, r3
 80087a0:	f000 f99c 	bl	8008adc <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 80087a4:	4603      	mov	r3, r0
 80087a6:	4619      	mov	r1, r3
 80087a8:	2010      	movs	r0, #16
 80087aa:	f7ff fb99 	bl	8007ee0 <_ZnwjPv>
 80087ae:	4604      	mov	r4, r0
 80087b0:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80087b2:	4620      	mov	r0, r4
 80087b4:	f002 f844 	bl	800a840 <_ZN15screenPresenterC1ER10screenView>
 80087b8:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80087ba:	683b      	ldr	r3, [r7, #0]
 80087bc:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80087be:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80087c0:	68bb      	ldr	r3, [r7, #8]
 80087c2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80087c4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80087c6:	68fb      	ldr	r3, [r7, #12]
 80087c8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80087ca:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 80087cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80087ce:	2b00      	cmp	r3, #0
 80087d0:	d002      	beq.n	80087d8 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 80087d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80087d4:	3304      	adds	r3, #4
 80087d6:	e000      	b.n	80087da <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 80087d8:	2300      	movs	r3, #0
 80087da:	4619      	mov	r1, r3
 80087dc:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80087de:	f7ff fd4f 	bl	8008280 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80087e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80087e4:	3304      	adds	r3, #4
 80087e6:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80087e8:	4618      	mov	r0, r3
 80087ea:	f7ff fdbc 	bl	8008366 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 80087ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087f0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80087f2:	4618      	mov	r0, r3
 80087f4:	f000 f985 	bl	8008b02 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 80087f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80087fa:	61fb      	str	r3, [r7, #28]
 80087fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80087fe:	61bb      	str	r3, [r7, #24]
 8008800:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008802:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008804:	69fb      	ldr	r3, [r7, #28]
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	330c      	adds	r3, #12
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	69f8      	ldr	r0, [r7, #28]
 800880e:	4798      	blx	r3
    newPresenter->activate();
 8008810:	69bb      	ldr	r3, [r7, #24]
 8008812:	681b      	ldr	r3, [r3, #0]
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	69b8      	ldr	r0, [r7, #24]
 8008818:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800881a:	6979      	ldr	r1, [r7, #20]
 800881c:	69f8      	ldr	r0, [r7, #28]
 800881e:	f009 fa6d 	bl	8011cfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008822:	697b      	ldr	r3, [r7, #20]
 8008824:	681b      	ldr	r3, [r3, #0]
 8008826:	3310      	adds	r3, #16
 8008828:	681b      	ldr	r3, [r3, #0]
 800882a:	6978      	ldr	r0, [r7, #20]
 800882c:	4798      	blx	r3
    newTransition->invalidate();
 800882e:	697b      	ldr	r3, [r7, #20]
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	3314      	adds	r3, #20
 8008834:	681b      	ldr	r3, [r3, #0]
 8008836:	6978      	ldr	r0, [r7, #20]
 8008838:	4798      	blx	r3
}
 800883a:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800883c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800883e:	4618      	mov	r0, r3
 8008840:	373c      	adds	r7, #60	@ 0x3c
 8008842:	46bd      	mov	sp, r7
 8008844:	bd90      	pop	{r4, r7, pc}
 8008846:	bf00      	nop
 8008848:	08022b58 	.word	0x08022b58
 800884c:	08022be8 	.word	0x08022be8
 8008850:	08022cb8 	.word	0x08022cb8
 8008854:	08022cfc 	.word	0x08022cfc
 8008858:	08022da0 	.word	0x08022da0

0800885c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800885c:	b590      	push	{r4, r7, lr}
 800885e:	b08f      	sub	sp, #60	@ 0x3c
 8008860:	af00      	add	r7, sp, #0
 8008862:	60f8      	str	r0, [r7, #12]
 8008864:	60b9      	str	r1, [r7, #8]
 8008866:	607a      	str	r2, [r7, #4]
 8008868:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800886a:	687b      	ldr	r3, [r7, #4]
 800886c:	689a      	ldr	r2, [r3, #8]
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	689b      	ldr	r3, [r3, #8]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	3320      	adds	r3, #32
 8008876:	681b      	ldr	r3, [r3, #0]
 8008878:	4610      	mov	r0, r2
 800887a:	4798      	blx	r3
 800887c:	4603      	mov	r3, r0
 800887e:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 8008882:	d205      	bcs.n	8008890 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008884:	4b7d      	ldr	r3, [pc, #500]	@ (8008a7c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008886:	4a7e      	ldr	r2, [pc, #504]	@ (8008a80 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008888:	21a3      	movs	r1, #163	@ 0xa3
 800888a:	487e      	ldr	r0, [pc, #504]	@ (8008a84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800888c:	f019 f926 	bl	8021adc <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	685a      	ldr	r2, [r3, #4]
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	685b      	ldr	r3, [r3, #4]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	3320      	adds	r3, #32
 800889c:	681b      	ldr	r3, [r3, #0]
 800889e:	4610      	mov	r0, r2
 80088a0:	4798      	blx	r3
 80088a2:	4603      	mov	r3, r0
 80088a4:	2b0f      	cmp	r3, #15
 80088a6:	d805      	bhi.n	80088b4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 80088a8:	4b77      	ldr	r3, [pc, #476]	@ (8008a88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80088aa:	4a75      	ldr	r2, [pc, #468]	@ (8008a80 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80088ac:	21a4      	movs	r1, #164	@ 0xa4
 80088ae:	4875      	ldr	r0, [pc, #468]	@ (8008a84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80088b0:	f019 f914 	bl	8021adc <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	68da      	ldr	r2, [r3, #12]
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	68db      	ldr	r3, [r3, #12]
 80088bc:	681b      	ldr	r3, [r3, #0]
 80088be:	3320      	adds	r3, #32
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	4610      	mov	r0, r2
 80088c4:	4798      	blx	r3
 80088c6:	4603      	mov	r3, r0
 80088c8:	2b0b      	cmp	r3, #11
 80088ca:	d805      	bhi.n	80088d8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 80088cc:	4b6f      	ldr	r3, [pc, #444]	@ (8008a8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80088ce:	4a6c      	ldr	r2, [pc, #432]	@ (8008a80 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80088d0:	21a5      	movs	r1, #165	@ 0xa5
 80088d2:	486c      	ldr	r0, [pc, #432]	@ (8008a84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80088d4:	f019 f902 	bl	8021adc <__assert_func>
 80088d8:	68fb      	ldr	r3, [r7, #12]
 80088da:	62bb      	str	r3, [r7, #40]	@ 0x28
 80088dc:	68bb      	ldr	r3, [r7, #8]
 80088de:	627b      	str	r3, [r7, #36]	@ 0x24
 80088e0:	683b      	ldr	r3, [r7, #0]
 80088e2:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80088e4:	f007 fc0c 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 80088e8:	4603      	mov	r3, r0
 80088ea:	4618      	mov	r0, r3
 80088ec:	f7ff fb8e 	bl	800800c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80088f0:	6a3b      	ldr	r3, [r7, #32]
 80088f2:	681b      	ldr	r3, [r3, #0]
 80088f4:	2b00      	cmp	r3, #0
 80088f6:	d008      	beq.n	800890a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80088f8:	6a3b      	ldr	r3, [r7, #32]
 80088fa:	681a      	ldr	r2, [r3, #0]
 80088fc:	6a3b      	ldr	r3, [r7, #32]
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	681b      	ldr	r3, [r3, #0]
 8008902:	330c      	adds	r3, #12
 8008904:	681b      	ldr	r3, [r3, #0]
 8008906:	4610      	mov	r0, r2
 8008908:	4798      	blx	r3
    if (*currentTrans)
 800890a:	6a3b      	ldr	r3, [r7, #32]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	2b00      	cmp	r3, #0
 8008910:	d007      	beq.n	8008922 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008912:	6a3b      	ldr	r3, [r7, #32]
 8008914:	681a      	ldr	r2, [r3, #0]
 8008916:	6a3b      	ldr	r3, [r7, #32]
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	681b      	ldr	r3, [r3, #0]
 800891c:	681b      	ldr	r3, [r3, #0]
 800891e:	4610      	mov	r0, r2
 8008920:	4798      	blx	r3
    if (*currentScreen)
 8008922:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008924:	681b      	ldr	r3, [r3, #0]
 8008926:	2b00      	cmp	r3, #0
 8008928:	d008      	beq.n	800893c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800892a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800892c:	681a      	ldr	r2, [r3, #0]
 800892e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	3314      	adds	r3, #20
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	4610      	mov	r0, r2
 800893a:	4798      	blx	r3
    if (*currentPresenter)
 800893c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800893e:	681b      	ldr	r3, [r3, #0]
 8008940:	2b00      	cmp	r3, #0
 8008942:	d008      	beq.n	8008956 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008944:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008946:	681a      	ldr	r2, [r3, #0]
 8008948:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	681b      	ldr	r3, [r3, #0]
 800894e:	3304      	adds	r3, #4
 8008950:	681b      	ldr	r3, [r3, #0]
 8008952:	4610      	mov	r0, r2
 8008954:	4798      	blx	r3
    if (*currentScreen)
 8008956:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008958:	681b      	ldr	r3, [r3, #0]
 800895a:	2b00      	cmp	r3, #0
 800895c:	d007      	beq.n	800896e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800895e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008960:	681a      	ldr	r2, [r3, #0]
 8008962:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008964:	681b      	ldr	r3, [r3, #0]
 8008966:	681b      	ldr	r3, [r3, #0]
 8008968:	681b      	ldr	r3, [r3, #0]
 800896a:	4610      	mov	r0, r2
 800896c:	4798      	blx	r3
    if (*currentPresenter)
 800896e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	2b00      	cmp	r3, #0
 8008974:	d008      	beq.n	8008988 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008976:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008978:	681a      	ldr	r2, [r3, #0]
 800897a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	3308      	adds	r3, #8
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	4610      	mov	r0, r2
 8008986:	4798      	blx	r3
}
 8008988:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	68db      	ldr	r3, [r3, #12]
 800898e:	2100      	movs	r1, #0
 8008990:	4618      	mov	r0, r3
 8008992:	f000 f87d 	bl	8008a90 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008996:	4603      	mov	r3, r0
 8008998:	4619      	mov	r1, r3
 800899a:	200c      	movs	r0, #12
 800899c:	f7ff faa0 	bl	8007ee0 <_ZnwjPv>
 80089a0:	4604      	mov	r4, r0
 80089a2:	4620      	mov	r0, r4
 80089a4:	f7ff fe2e 	bl	8008604 <_ZN8touchgfx12NoTransitionC1Ev>
 80089a8:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	689b      	ldr	r3, [r3, #8]
 80089ae:	2100      	movs	r1, #0
 80089b0:	4618      	mov	r0, r3
 80089b2:	f000 f8b4 	bl	8008b1e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80089b6:	4603      	mov	r3, r0
 80089b8:	4619      	mov	r1, r3
 80089ba:	f44f 70aa 	mov.w	r0, #340	@ 0x154
 80089be:	f7ff fa8f 	bl	8007ee0 <_ZnwjPv>
 80089c2:	4604      	mov	r4, r0
 80089c4:	4620      	mov	r0, r4
 80089c6:	f001 feb1 	bl	800a72c <_ZN11Screen1ViewC1Ev>
 80089ca:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	685b      	ldr	r3, [r3, #4]
 80089d0:	2100      	movs	r1, #0
 80089d2:	4618      	mov	r0, r3
 80089d4:	f000 f8b6 	bl	8008b44 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 80089d8:	4603      	mov	r3, r0
 80089da:	4619      	mov	r1, r3
 80089dc:	2010      	movs	r0, #16
 80089de:	f7ff fa7f 	bl	8007ee0 <_ZnwjPv>
 80089e2:	4604      	mov	r4, r0
 80089e4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80089e6:	4620      	mov	r0, r4
 80089e8:	f001 fe3a 	bl	800a660 <_ZN16Screen1PresenterC1ER11Screen1View>
 80089ec:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80089ee:	683b      	ldr	r3, [r7, #0]
 80089f0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80089f2:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80089f4:	68bb      	ldr	r3, [r7, #8]
 80089f6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80089f8:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80089fa:	68fb      	ldr	r3, [r7, #12]
 80089fc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80089fe:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008a00:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	d002      	beq.n	8008a0c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008a06:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a08:	3304      	adds	r3, #4
 8008a0a:	e000      	b.n	8008a0e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008a0c:	2300      	movs	r3, #0
 8008a0e:	4619      	mov	r1, r3
 8008a10:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008a12:	f7ff fc35 	bl	8008280 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008a16:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a18:	3304      	adds	r3, #4
 8008a1a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008a1c:	4618      	mov	r0, r3
 8008a1e:	f7ff fca2 	bl	8008366 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008a22:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008a24:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008a26:	4618      	mov	r0, r3
 8008a28:	f000 f89f 	bl	8008b6a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 8008a2c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008a2e:	61fb      	str	r3, [r7, #28]
 8008a30:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008a32:	61bb      	str	r3, [r7, #24]
 8008a34:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008a36:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008a38:	69fb      	ldr	r3, [r7, #28]
 8008a3a:	681b      	ldr	r3, [r3, #0]
 8008a3c:	330c      	adds	r3, #12
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	69f8      	ldr	r0, [r7, #28]
 8008a42:	4798      	blx	r3
    newPresenter->activate();
 8008a44:	69bb      	ldr	r3, [r7, #24]
 8008a46:	681b      	ldr	r3, [r3, #0]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	69b8      	ldr	r0, [r7, #24]
 8008a4c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008a4e:	6979      	ldr	r1, [r7, #20]
 8008a50:	69f8      	ldr	r0, [r7, #28]
 8008a52:	f009 f953 	bl	8011cfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008a56:	697b      	ldr	r3, [r7, #20]
 8008a58:	681b      	ldr	r3, [r3, #0]
 8008a5a:	3310      	adds	r3, #16
 8008a5c:	681b      	ldr	r3, [r3, #0]
 8008a5e:	6978      	ldr	r0, [r7, #20]
 8008a60:	4798      	blx	r3
    newTransition->invalidate();
 8008a62:	697b      	ldr	r3, [r7, #20]
 8008a64:	681b      	ldr	r3, [r3, #0]
 8008a66:	3314      	adds	r3, #20
 8008a68:	681b      	ldr	r3, [r3, #0]
 8008a6a:	6978      	ldr	r0, [r7, #20]
 8008a6c:	4798      	blx	r3
}
 8008a6e:	bf00      	nop
    return newPresenter;
 8008a70:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008a72:	4618      	mov	r0, r3
 8008a74:	373c      	adds	r7, #60	@ 0x3c
 8008a76:	46bd      	mov	sp, r7
 8008a78:	bd90      	pop	{r4, r7, pc}
 8008a7a:	bf00      	nop
 8008a7c:	08022b58 	.word	0x08022b58
 8008a80:	08022e44 	.word	0x08022e44
 8008a84:	08022cb8 	.word	0x08022cb8
 8008a88:	08022cfc 	.word	0x08022cfc
 8008a8c:	08022da0 	.word	0x08022da0

08008a90 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8008a90:	b580      	push	{r7, lr}
 8008a92:	b082      	sub	sp, #8
 8008a94:	af00      	add	r7, sp, #0
 8008a96:	6078      	str	r0, [r7, #4]
 8008a98:	460b      	mov	r3, r1
 8008a9a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	681b      	ldr	r3, [r3, #0]
 8008aa0:	3324      	adds	r3, #36	@ 0x24
 8008aa2:	681b      	ldr	r3, [r3, #0]
 8008aa4:	887a      	ldrh	r2, [r7, #2]
 8008aa6:	4611      	mov	r1, r2
 8008aa8:	6878      	ldr	r0, [r7, #4]
 8008aaa:	4798      	blx	r3
 8008aac:	4603      	mov	r3, r0
    }
 8008aae:	4618      	mov	r0, r3
 8008ab0:	3708      	adds	r7, #8
 8008ab2:	46bd      	mov	sp, r7
 8008ab4:	bd80      	pop	{r7, pc}

08008ab6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 8008ab6:	b580      	push	{r7, lr}
 8008ab8:	b082      	sub	sp, #8
 8008aba:	af00      	add	r7, sp, #0
 8008abc:	6078      	str	r0, [r7, #4]
 8008abe:	460b      	mov	r3, r1
 8008ac0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	3324      	adds	r3, #36	@ 0x24
 8008ac8:	681b      	ldr	r3, [r3, #0]
 8008aca:	887a      	ldrh	r2, [r7, #2]
 8008acc:	4611      	mov	r1, r2
 8008ace:	6878      	ldr	r0, [r7, #4]
 8008ad0:	4798      	blx	r3
 8008ad2:	4603      	mov	r3, r0
    }
 8008ad4:	4618      	mov	r0, r3
 8008ad6:	3708      	adds	r7, #8
 8008ad8:	46bd      	mov	sp, r7
 8008ada:	bd80      	pop	{r7, pc}

08008adc <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 8008adc:	b580      	push	{r7, lr}
 8008ade:	b082      	sub	sp, #8
 8008ae0:	af00      	add	r7, sp, #0
 8008ae2:	6078      	str	r0, [r7, #4]
 8008ae4:	460b      	mov	r3, r1
 8008ae6:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	681b      	ldr	r3, [r3, #0]
 8008aec:	3324      	adds	r3, #36	@ 0x24
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	887a      	ldrh	r2, [r7, #2]
 8008af2:	4611      	mov	r1, r2
 8008af4:	6878      	ldr	r0, [r7, #4]
 8008af6:	4798      	blx	r3
 8008af8:	4603      	mov	r3, r0
    }
 8008afa:	4618      	mov	r0, r3
 8008afc:	3708      	adds	r7, #8
 8008afe:	46bd      	mov	sp, r7
 8008b00:	bd80      	pop	{r7, pc}

08008b02 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8008b02:	b480      	push	{r7}
 8008b04:	b083      	sub	sp, #12
 8008b06:	af00      	add	r7, sp, #0
 8008b08:	6078      	str	r0, [r7, #4]
 8008b0a:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	683a      	ldr	r2, [r7, #0]
 8008b10:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8008b12:	bf00      	nop
 8008b14:	370c      	adds	r7, #12
 8008b16:	46bd      	mov	sp, r7
 8008b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b1c:	4770      	bx	lr

08008b1e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8008b1e:	b580      	push	{r7, lr}
 8008b20:	b082      	sub	sp, #8
 8008b22:	af00      	add	r7, sp, #0
 8008b24:	6078      	str	r0, [r7, #4]
 8008b26:	460b      	mov	r3, r1
 8008b28:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	681b      	ldr	r3, [r3, #0]
 8008b2e:	3324      	adds	r3, #36	@ 0x24
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	887a      	ldrh	r2, [r7, #2]
 8008b34:	4611      	mov	r1, r2
 8008b36:	6878      	ldr	r0, [r7, #4]
 8008b38:	4798      	blx	r3
 8008b3a:	4603      	mov	r3, r0
    }
 8008b3c:	4618      	mov	r0, r3
 8008b3e:	3708      	adds	r7, #8
 8008b40:	46bd      	mov	sp, r7
 8008b42:	bd80      	pop	{r7, pc}

08008b44 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8008b44:	b580      	push	{r7, lr}
 8008b46:	b082      	sub	sp, #8
 8008b48:	af00      	add	r7, sp, #0
 8008b4a:	6078      	str	r0, [r7, #4]
 8008b4c:	460b      	mov	r3, r1
 8008b4e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	681b      	ldr	r3, [r3, #0]
 8008b54:	3324      	adds	r3, #36	@ 0x24
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	887a      	ldrh	r2, [r7, #2]
 8008b5a:	4611      	mov	r1, r2
 8008b5c:	6878      	ldr	r0, [r7, #4]
 8008b5e:	4798      	blx	r3
 8008b60:	4603      	mov	r3, r0
    }
 8008b62:	4618      	mov	r0, r3
 8008b64:	3708      	adds	r7, #8
 8008b66:	46bd      	mov	sp, r7
 8008b68:	bd80      	pop	{r7, pc}

08008b6a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8008b6a:	b480      	push	{r7}
 8008b6c:	b083      	sub	sp, #12
 8008b6e:	af00      	add	r7, sp, #0
 8008b70:	6078      	str	r0, [r7, #4]
 8008b72:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	683a      	ldr	r2, [r7, #0]
 8008b78:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8008b7a:	bf00      	nop
 8008b7c:	370c      	adds	r7, #12
 8008b7e:	46bd      	mov	sp, r7
 8008b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b84:	4770      	bx	lr
	...

08008b88 <_ZN8touchgfx12NoTransitionD1Ev>:
 8008b88:	b580      	push	{r7, lr}
 8008b8a:	b082      	sub	sp, #8
 8008b8c:	af00      	add	r7, sp, #0
 8008b8e:	6078      	str	r0, [r7, #4]
 8008b90:	4a05      	ldr	r2, [pc, #20]	@ (8008ba8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	601a      	str	r2, [r3, #0]
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	4618      	mov	r0, r3
 8008b9a:	f7ff fa97 	bl	80080cc <_ZN8touchgfx10TransitionD1Ev>
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	4618      	mov	r0, r3
 8008ba2:	3708      	adds	r7, #8
 8008ba4:	46bd      	mov	sp, r7
 8008ba6:	bd80      	pop	{r7, pc}
 8008ba8:	08023ed8 	.word	0x08023ed8

08008bac <_ZN8touchgfx12NoTransitionD0Ev>:
 8008bac:	b580      	push	{r7, lr}
 8008bae:	b082      	sub	sp, #8
 8008bb0:	af00      	add	r7, sp, #0
 8008bb2:	6078      	str	r0, [r7, #4]
 8008bb4:	6878      	ldr	r0, [r7, #4]
 8008bb6:	f7ff ffe7 	bl	8008b88 <_ZN8touchgfx12NoTransitionD1Ev>
 8008bba:	210c      	movs	r1, #12
 8008bbc:	6878      	ldr	r0, [r7, #4]
 8008bbe:	f018 ff60 	bl	8021a82 <_ZdlPvj>
 8008bc2:	687b      	ldr	r3, [r7, #4]
 8008bc4:	4618      	mov	r0, r3
 8008bc6:	3708      	adds	r7, #8
 8008bc8:	46bd      	mov	sp, r7
 8008bca:	bd80      	pop	{r7, pc}

08008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008bcc:	b580      	push	{r7, lr}
 8008bce:	b082      	sub	sp, #8
 8008bd0:	af00      	add	r7, sp, #0
 8008bd2:	6078      	str	r0, [r7, #4]
 8008bd4:	4a05      	ldr	r2, [pc, #20]	@ (8008bec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	601a      	str	r2, [r3, #0]
 8008bda:	687b      	ldr	r3, [r7, #4]
 8008bdc:	4618      	mov	r0, r3
 8008bde:	f7ff fa23 	bl	8008028 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	4618      	mov	r0, r3
 8008be6:	3708      	adds	r7, #8
 8008be8:	46bd      	mov	sp, r7
 8008bea:	bd80      	pop	{r7, pc}
 8008bec:	08023f50 	.word	0x08023f50

08008bf0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8008bf0:	b580      	push	{r7, lr}
 8008bf2:	b082      	sub	sp, #8
 8008bf4:	af00      	add	r7, sp, #0
 8008bf6:	6078      	str	r0, [r7, #4]
 8008bf8:	6878      	ldr	r0, [r7, #4]
 8008bfa:	f7ff ffe7 	bl	8008bcc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008bfe:	2110      	movs	r1, #16
 8008c00:	6878      	ldr	r0, [r7, #4]
 8008c02:	f018 ff3e 	bl	8021a82 <_ZdlPvj>
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	4618      	mov	r0, r3
 8008c0a:	3708      	adds	r7, #8
 8008c0c:	46bd      	mov	sp, r7
 8008c0e:	bd80      	pop	{r7, pc}

08008c10 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8008c10:	b580      	push	{r7, lr}
 8008c12:	b082      	sub	sp, #8
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	685b      	ldr	r3, [r3, #4]
 8008c1c:	687a      	ldr	r2, [r7, #4]
 8008c1e:	68d2      	ldr	r2, [r2, #12]
 8008c20:	1052      	asrs	r2, r2, #1
 8008c22:	1899      	adds	r1, r3, r2
 8008c24:	687b      	ldr	r3, [r7, #4]
 8008c26:	68db      	ldr	r3, [r3, #12]
 8008c28:	f003 0301 	and.w	r3, r3, #1
 8008c2c:	2b00      	cmp	r3, #0
 8008c2e:	d102      	bne.n	8008c36 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8008c30:	687b      	ldr	r3, [r7, #4]
 8008c32:	689b      	ldr	r3, [r3, #8]
 8008c34:	e00a      	b.n	8008c4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	685b      	ldr	r3, [r3, #4]
 8008c3a:	687a      	ldr	r2, [r7, #4]
 8008c3c:	68d2      	ldr	r2, [r2, #12]
 8008c3e:	1052      	asrs	r2, r2, #1
 8008c40:	4413      	add	r3, r2
 8008c42:	681b      	ldr	r3, [r3, #0]
 8008c44:	687a      	ldr	r2, [r7, #4]
 8008c46:	6892      	ldr	r2, [r2, #8]
 8008c48:	4413      	add	r3, r2
 8008c4a:	681b      	ldr	r3, [r3, #0]
 8008c4c:	4608      	mov	r0, r1
 8008c4e:	4798      	blx	r3
    }
 8008c50:	bf00      	nop
 8008c52:	3708      	adds	r7, #8
 8008c54:	46bd      	mov	sp, r7
 8008c56:	bd80      	pop	{r7, pc}

08008c58 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8008c58:	b480      	push	{r7}
 8008c5a:	b083      	sub	sp, #12
 8008c5c:	af00      	add	r7, sp, #0
 8008c5e:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	685b      	ldr	r3, [r3, #4]
 8008c64:	2b00      	cmp	r3, #0
 8008c66:	d010      	beq.n	8008c8a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	689b      	ldr	r3, [r3, #8]
 8008c6c:	2b00      	cmp	r3, #0
 8008c6e:	d107      	bne.n	8008c80 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008c70:	687b      	ldr	r3, [r7, #4]
 8008c72:	68db      	ldr	r3, [r3, #12]
 8008c74:	f003 0301 	and.w	r3, r3, #1
 8008c78:	2b00      	cmp	r3, #0
 8008c7a:	d101      	bne.n	8008c80 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008c7c:	2301      	movs	r3, #1
 8008c7e:	e000      	b.n	8008c82 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8008c80:	2300      	movs	r3, #0
 8008c82:	2b01      	cmp	r3, #1
 8008c84:	d001      	beq.n	8008c8a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008c86:	2301      	movs	r3, #1
 8008c88:	e000      	b.n	8008c8c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8008c8a:	2300      	movs	r3, #0
    }
 8008c8c:	4618      	mov	r0, r3
 8008c8e:	370c      	adds	r7, #12
 8008c90:	46bd      	mov	sp, r7
 8008c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c96:	4770      	bx	lr

08008c98 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8008c98:	b480      	push	{r7}
 8008c9a:	b083      	sub	sp, #12
 8008c9c:	af00      	add	r7, sp, #0
 8008c9e:	6078      	str	r0, [r7, #4]
 8008ca0:	6039      	str	r1, [r7, #0]
        : color(col)
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	683a      	ldr	r2, [r7, #0]
 8008ca6:	601a      	str	r2, [r3, #0]
    {
    }
 8008ca8:	687b      	ldr	r3, [r7, #4]
 8008caa:	4618      	mov	r0, r3
 8008cac:	370c      	adds	r7, #12
 8008cae:	46bd      	mov	sp, r7
 8008cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb4:	4770      	bx	lr

08008cb6 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8008cb6:	b480      	push	{r7}
 8008cb8:	b083      	sub	sp, #12
 8008cba:	af00      	add	r7, sp, #0
 8008cbc:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	2200      	movs	r2, #0
 8008cc2:	801a      	strh	r2, [r3, #0]
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	2200      	movs	r2, #0
 8008cc8:	805a      	strh	r2, [r3, #2]
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	2200      	movs	r2, #0
 8008cce:	809a      	strh	r2, [r3, #4]
 8008cd0:	687b      	ldr	r3, [r7, #4]
 8008cd2:	2200      	movs	r2, #0
 8008cd4:	80da      	strh	r2, [r3, #6]
    {
    }
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	4618      	mov	r0, r3
 8008cda:	370c      	adds	r7, #12
 8008cdc:	46bd      	mov	sp, r7
 8008cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ce2:	4770      	bx	lr

08008ce4 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8008ce4:	b480      	push	{r7}
 8008ce6:	b085      	sub	sp, #20
 8008ce8:	af00      	add	r7, sp, #0
 8008cea:	60f8      	str	r0, [r7, #12]
 8008cec:	4608      	mov	r0, r1
 8008cee:	4611      	mov	r1, r2
 8008cf0:	461a      	mov	r2, r3
 8008cf2:	4603      	mov	r3, r0
 8008cf4:	817b      	strh	r3, [r7, #10]
 8008cf6:	460b      	mov	r3, r1
 8008cf8:	813b      	strh	r3, [r7, #8]
 8008cfa:	4613      	mov	r3, r2
 8008cfc:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8008cfe:	68fb      	ldr	r3, [r7, #12]
 8008d00:	897a      	ldrh	r2, [r7, #10]
 8008d02:	801a      	strh	r2, [r3, #0]
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	893a      	ldrh	r2, [r7, #8]
 8008d08:	805a      	strh	r2, [r3, #2]
 8008d0a:	68fb      	ldr	r3, [r7, #12]
 8008d0c:	88fa      	ldrh	r2, [r7, #6]
 8008d0e:	809a      	strh	r2, [r3, #4]
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	8b3a      	ldrh	r2, [r7, #24]
 8008d14:	80da      	strh	r2, [r3, #6]
    {
    }
 8008d16:	68fb      	ldr	r3, [r7, #12]
 8008d18:	4618      	mov	r0, r3
 8008d1a:	3714      	adds	r7, #20
 8008d1c:	46bd      	mov	sp, r7
 8008d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d22:	4770      	bx	lr

08008d24 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8008d24:	b580      	push	{r7, lr}
 8008d26:	b082      	sub	sp, #8
 8008d28:	af00      	add	r7, sp, #0
 8008d2a:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8008d2c:	4a14      	ldr	r2, [pc, #80]	@ (8008d80 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	601a      	str	r2, [r3, #0]
        : rect(),
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	3304      	adds	r3, #4
 8008d36:	4618      	mov	r0, r3
 8008d38:	f7ff ffbd 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8008d3c:	687b      	ldr	r3, [r7, #4]
 8008d3e:	330c      	adds	r3, #12
 8008d40:	4618      	mov	r0, r3
 8008d42:	f7ff ffb8 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	2200      	movs	r2, #0
 8008d4a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8008d4c:	687b      	ldr	r3, [r7, #4]
 8008d4e:	2200      	movs	r2, #0
 8008d50:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	2200      	movs	r2, #0
 8008d56:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	2200      	movs	r2, #0
 8008d5c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8008d5e:	687b      	ldr	r3, [r7, #4]
 8008d60:	2200      	movs	r2, #0
 8008d62:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 8008d64:	687b      	ldr	r3, [r7, #4]
 8008d66:	2200      	movs	r2, #0
 8008d68:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8008d6c:	687b      	ldr	r3, [r7, #4]
 8008d6e:	2201      	movs	r2, #1
 8008d70:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8008d74:	687b      	ldr	r3, [r7, #4]
 8008d76:	4618      	mov	r0, r3
 8008d78:	3708      	adds	r7, #8
 8008d7a:	46bd      	mov	sp, r7
 8008d7c:	bd80      	pop	{r7, pc}
 8008d7e:	bf00      	nop
 8008d80:	08024ba0 	.word	0x08024ba0

08008d84 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8008d84:	b480      	push	{r7}
 8008d86:	b083      	sub	sp, #12
 8008d88:	af00      	add	r7, sp, #0
 8008d8a:	6078      	str	r0, [r7, #4]
    {
 8008d8c:	4a04      	ldr	r2, [pc, #16]	@ (8008da0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8008d8e:	687b      	ldr	r3, [r7, #4]
 8008d90:	601a      	str	r2, [r3, #0]
    }
 8008d92:	687b      	ldr	r3, [r7, #4]
 8008d94:	4618      	mov	r0, r3
 8008d96:	370c      	adds	r7, #12
 8008d98:	46bd      	mov	sp, r7
 8008d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d9e:	4770      	bx	lr
 8008da0:	08024ba0 	.word	0x08024ba0

08008da4 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8008da4:	b580      	push	{r7, lr}
 8008da6:	b082      	sub	sp, #8
 8008da8:	af00      	add	r7, sp, #0
 8008daa:	6078      	str	r0, [r7, #4]
    }
 8008dac:	6878      	ldr	r0, [r7, #4]
 8008dae:	f7ff ffe9 	bl	8008d84 <_ZN8touchgfx8DrawableD1Ev>
 8008db2:	2128      	movs	r1, #40	@ 0x28
 8008db4:	6878      	ldr	r0, [r7, #4]
 8008db6:	f018 fe64 	bl	8021a82 <_ZdlPvj>
 8008dba:	687b      	ldr	r3, [r7, #4]
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	3708      	adds	r7, #8
 8008dc0:	46bd      	mov	sp, r7
 8008dc2:	bd80      	pop	{r7, pc}

08008dc4 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8008dc4:	b580      	push	{r7, lr}
 8008dc6:	b082      	sub	sp, #8
 8008dc8:	af00      	add	r7, sp, #0
 8008dca:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8008dcc:	687b      	ldr	r3, [r7, #4]
 8008dce:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8008dd2:	2b00      	cmp	r3, #0
 8008dd4:	d005      	beq.n	8008de2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	3314      	adds	r3, #20
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	6878      	ldr	r0, [r7, #4]
 8008de0:	4798      	blx	r3
        }
    }
 8008de2:	bf00      	nop
 8008de4:	3708      	adds	r7, #8
 8008de6:	46bd      	mov	sp, r7
 8008de8:	bd80      	pop	{r7, pc}

08008dea <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8008dea:	b480      	push	{r7}
 8008dec:	b083      	sub	sp, #12
 8008dee:	af00      	add	r7, sp, #0
 8008df0:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8008df2:	2300      	movs	r3, #0
    }
 8008df4:	4618      	mov	r0, r3
 8008df6:	370c      	adds	r7, #12
 8008df8:	46bd      	mov	sp, r7
 8008dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dfe:	4770      	bx	lr

08008e00 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8008e00:	b580      	push	{r7, lr}
 8008e02:	b084      	sub	sp, #16
 8008e04:	af00      	add	r7, sp, #0
 8008e06:	60f8      	str	r0, [r7, #12]
 8008e08:	4608      	mov	r0, r1
 8008e0a:	4611      	mov	r1, r2
 8008e0c:	461a      	mov	r2, r3
 8008e0e:	4603      	mov	r3, r0
 8008e10:	817b      	strh	r3, [r7, #10]
 8008e12:	460b      	mov	r3, r1
 8008e14:	813b      	strh	r3, [r7, #8]
 8008e16:	4613      	mov	r3, r2
 8008e18:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8008e1a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008e1e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8008e22:	4619      	mov	r1, r3
 8008e24:	68f8      	ldr	r0, [r7, #12]
 8008e26:	f000 f82a 	bl	8008e7e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8008e2a:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8008e2e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8008e32:	4619      	mov	r1, r3
 8008e34:	68f8      	ldr	r0, [r7, #12]
 8008e36:	f000 f87e 	bl	8008f36 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8008e3a:	bf00      	nop
 8008e3c:	3710      	adds	r7, #16
 8008e3e:	46bd      	mov	sp, r7
 8008e40:	bd80      	pop	{r7, pc}

08008e42 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8008e42:	b480      	push	{r7}
 8008e44:	b083      	sub	sp, #12
 8008e46:	af00      	add	r7, sp, #0
 8008e48:	6078      	str	r0, [r7, #4]
 8008e4a:	460b      	mov	r3, r1
 8008e4c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8008e4e:	687b      	ldr	r3, [r7, #4]
 8008e50:	887a      	ldrh	r2, [r7, #2]
 8008e52:	809a      	strh	r2, [r3, #4]
    }
 8008e54:	bf00      	nop
 8008e56:	370c      	adds	r7, #12
 8008e58:	46bd      	mov	sp, r7
 8008e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e5e:	4770      	bx	lr

08008e60 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8008e60:	b480      	push	{r7}
 8008e62:	b083      	sub	sp, #12
 8008e64:	af00      	add	r7, sp, #0
 8008e66:	6078      	str	r0, [r7, #4]
 8008e68:	460b      	mov	r3, r1
 8008e6a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	887a      	ldrh	r2, [r7, #2]
 8008e70:	80da      	strh	r2, [r3, #6]
    }
 8008e72:	bf00      	nop
 8008e74:	370c      	adds	r7, #12
 8008e76:	46bd      	mov	sp, r7
 8008e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e7c:	4770      	bx	lr

08008e7e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8008e7e:	b580      	push	{r7, lr}
 8008e80:	b082      	sub	sp, #8
 8008e82:	af00      	add	r7, sp, #0
 8008e84:	6078      	str	r0, [r7, #4]
 8008e86:	460b      	mov	r3, r1
 8008e88:	807b      	strh	r3, [r7, #2]
 8008e8a:	4613      	mov	r3, r2
 8008e8c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	3330      	adds	r3, #48	@ 0x30
 8008e94:	681b      	ldr	r3, [r3, #0]
 8008e96:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008e9a:	4611      	mov	r1, r2
 8008e9c:	6878      	ldr	r0, [r7, #4]
 8008e9e:	4798      	blx	r3
        setY(y);
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	681b      	ldr	r3, [r3, #0]
 8008ea4:	3334      	adds	r3, #52	@ 0x34
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008eac:	4611      	mov	r1, r2
 8008eae:	6878      	ldr	r0, [r7, #4]
 8008eb0:	4798      	blx	r3
    }
 8008eb2:	bf00      	nop
 8008eb4:	3708      	adds	r7, #8
 8008eb6:	46bd      	mov	sp, r7
 8008eb8:	bd80      	pop	{r7, pc}

08008eba <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8008eba:	b480      	push	{r7}
 8008ebc:	b083      	sub	sp, #12
 8008ebe:	af00      	add	r7, sp, #0
 8008ec0:	6078      	str	r0, [r7, #4]
 8008ec2:	460b      	mov	r3, r1
 8008ec4:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8008ec6:	687b      	ldr	r3, [r7, #4]
 8008ec8:	887a      	ldrh	r2, [r7, #2]
 8008eca:	811a      	strh	r2, [r3, #8]
    }
 8008ecc:	bf00      	nop
 8008ece:	370c      	adds	r7, #12
 8008ed0:	46bd      	mov	sp, r7
 8008ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed6:	4770      	bx	lr

08008ed8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8008ed8:	b480      	push	{r7}
 8008eda:	b083      	sub	sp, #12
 8008edc:	af00      	add	r7, sp, #0
 8008ede:	6078      	str	r0, [r7, #4]
 8008ee0:	460b      	mov	r3, r1
 8008ee2:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	887a      	ldrh	r2, [r7, #2]
 8008ee8:	815a      	strh	r2, [r3, #10]
    }
 8008eea:	bf00      	nop
 8008eec:	370c      	adds	r7, #12
 8008eee:	46bd      	mov	sp, r7
 8008ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ef4:	4770      	bx	lr

08008ef6 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8008ef6:	b480      	push	{r7}
 8008ef8:	b083      	sub	sp, #12
 8008efa:	af00      	add	r7, sp, #0
 8008efc:	6078      	str	r0, [r7, #4]
    {
    }
 8008efe:	bf00      	nop
 8008f00:	370c      	adds	r7, #12
 8008f02:	46bd      	mov	sp, r7
 8008f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f08:	4770      	bx	lr

08008f0a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008f0a:	b480      	push	{r7}
 8008f0c:	b083      	sub	sp, #12
 8008f0e:	af00      	add	r7, sp, #0
 8008f10:	6078      	str	r0, [r7, #4]
 8008f12:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f14:	bf00      	nop
 8008f16:	370c      	adds	r7, #12
 8008f18:	46bd      	mov	sp, r7
 8008f1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f1e:	4770      	bx	lr

08008f20 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008f20:	b480      	push	{r7}
 8008f22:	b083      	sub	sp, #12
 8008f24:	af00      	add	r7, sp, #0
 8008f26:	6078      	str	r0, [r7, #4]
 8008f28:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f2a:	bf00      	nop
 8008f2c:	370c      	adds	r7, #12
 8008f2e:	46bd      	mov	sp, r7
 8008f30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f34:	4770      	bx	lr

08008f36 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8008f36:	b580      	push	{r7, lr}
 8008f38:	b082      	sub	sp, #8
 8008f3a:	af00      	add	r7, sp, #0
 8008f3c:	6078      	str	r0, [r7, #4]
 8008f3e:	460b      	mov	r3, r1
 8008f40:	807b      	strh	r3, [r7, #2]
 8008f42:	4613      	mov	r3, r2
 8008f44:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8008f46:	687b      	ldr	r3, [r7, #4]
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	3338      	adds	r3, #56	@ 0x38
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008f52:	4611      	mov	r1, r2
 8008f54:	6878      	ldr	r0, [r7, #4]
 8008f56:	4798      	blx	r3
        setHeight(height);
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	333c      	adds	r3, #60	@ 0x3c
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008f64:	4611      	mov	r1, r2
 8008f66:	6878      	ldr	r0, [r7, #4]
 8008f68:	4798      	blx	r3
    }
 8008f6a:	bf00      	nop
 8008f6c:	3708      	adds	r7, #8
 8008f6e:	46bd      	mov	sp, r7
 8008f70:	bd80      	pop	{r7, pc}

08008f72 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008f72:	b480      	push	{r7}
 8008f74:	b083      	sub	sp, #12
 8008f76:	af00      	add	r7, sp, #0
 8008f78:	6078      	str	r0, [r7, #4]
 8008f7a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008f7c:	bf00      	nop
 8008f7e:	370c      	adds	r7, #12
 8008f80:	46bd      	mov	sp, r7
 8008f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f86:	4770      	bx	lr

08008f88 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8008f88:	b480      	push	{r7}
 8008f8a:	b083      	sub	sp, #12
 8008f8c:	af00      	add	r7, sp, #0
 8008f8e:	6078      	str	r0, [r7, #4]
    {
    }
 8008f90:	bf00      	nop
 8008f92:	370c      	adds	r7, #12
 8008f94:	46bd      	mov	sp, r7
 8008f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f9a:	4770      	bx	lr

08008f9c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8008f9c:	b480      	push	{r7}
 8008f9e:	b083      	sub	sp, #12
 8008fa0:	af00      	add	r7, sp, #0
 8008fa2:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8008fa4:	687b      	ldr	r3, [r7, #4]
 8008fa6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8008faa:	4618      	mov	r0, r3
 8008fac:	370c      	adds	r7, #12
 8008fae:	46bd      	mov	sp, r7
 8008fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fb4:	4770      	bx	lr

08008fb6 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8008fb6:	b480      	push	{r7}
 8008fb8:	b083      	sub	sp, #12
 8008fba:	af00      	add	r7, sp, #0
 8008fbc:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8008fbe:	687b      	ldr	r3, [r7, #4]
 8008fc0:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8008fc4:	4618      	mov	r0, r3
 8008fc6:	370c      	adds	r7, #12
 8008fc8:	46bd      	mov	sp, r7
 8008fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fce:	4770      	bx	lr

08008fd0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8008fd0:	b580      	push	{r7, lr}
 8008fd2:	b082      	sub	sp, #8
 8008fd4:	af00      	add	r7, sp, #0
 8008fd6:	6078      	str	r0, [r7, #4]
 8008fd8:	460b      	mov	r3, r1
 8008fda:	807b      	strh	r3, [r7, #2]
 8008fdc:	4613      	mov	r3, r2
 8008fde:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8008fe0:	687b      	ldr	r3, [r7, #4]
 8008fe2:	681b      	ldr	r3, [r3, #0]
 8008fe4:	3354      	adds	r3, #84	@ 0x54
 8008fe6:	681b      	ldr	r3, [r3, #0]
 8008fe8:	8879      	ldrh	r1, [r7, #2]
 8008fea:	687a      	ldr	r2, [r7, #4]
 8008fec:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8008ff0:	b292      	uxth	r2, r2
 8008ff2:	1a8a      	subs	r2, r1, r2
 8008ff4:	b292      	uxth	r2, r2
 8008ff6:	b210      	sxth	r0, r2
 8008ff8:	8839      	ldrh	r1, [r7, #0]
 8008ffa:	687a      	ldr	r2, [r7, #4]
 8008ffc:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009000:	b292      	uxth	r2, r2
 8009002:	1a8a      	subs	r2, r1, r2
 8009004:	b292      	uxth	r2, r2
 8009006:	b212      	sxth	r2, r2
 8009008:	4601      	mov	r1, r0
 800900a:	6878      	ldr	r0, [r7, #4]
 800900c:	4798      	blx	r3
    }
 800900e:	bf00      	nop
 8009010:	3708      	adds	r7, #8
 8009012:	46bd      	mov	sp, r7
 8009014:	bd80      	pop	{r7, pc}

08009016 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009016:	b480      	push	{r7}
 8009018:	b083      	sub	sp, #12
 800901a:	af00      	add	r7, sp, #0
 800901c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009024:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800902c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009034:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 8009036:	bf00      	nop
 8009038:	370c      	adds	r7, #12
 800903a:	46bd      	mov	sp, r7
 800903c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009040:	4770      	bx	lr

08009042 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009042:	b580      	push	{r7, lr}
 8009044:	b084      	sub	sp, #16
 8009046:	af00      	add	r7, sp, #0
 8009048:	60f8      	str	r0, [r7, #12]
 800904a:	60b9      	str	r1, [r7, #8]
 800904c:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800904e:	68f8      	ldr	r0, [r7, #12]
 8009050:	f7ff ffe1 	bl	8009016 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	681a      	ldr	r2, [r3, #0]
 8009058:	68fb      	ldr	r3, [r7, #12]
 800905a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	68fa      	ldr	r2, [r7, #12]
 8009060:	601a      	str	r2, [r3, #0]
    }
 8009062:	bf00      	nop
 8009064:	3710      	adds	r7, #16
 8009066:	46bd      	mov	sp, r7
 8009068:	bd80      	pop	{r7, pc}

0800906a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800906a:	b580      	push	{r7, lr}
 800906c:	b084      	sub	sp, #16
 800906e:	af00      	add	r7, sp, #0
 8009070:	60f8      	str	r0, [r7, #12]
 8009072:	607b      	str	r3, [r7, #4]
 8009074:	460b      	mov	r3, r1
 8009076:	817b      	strh	r3, [r7, #10]
 8009078:	4613      	mov	r3, r2
 800907a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800907c:	68fb      	ldr	r3, [r7, #12]
 800907e:	4618      	mov	r0, r3
 8009080:	f7ff ff8c 	bl	8008f9c <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009084:	4603      	mov	r3, r0
 8009086:	2b00      	cmp	r3, #0
 8009088:	d008      	beq.n	800909c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800908a:	68fb      	ldr	r3, [r7, #12]
 800908c:	4618      	mov	r0, r3
 800908e:	f7ff ff92 	bl	8008fb6 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009092:	4603      	mov	r3, r0
 8009094:	2b00      	cmp	r3, #0
 8009096:	d001      	beq.n	800909c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009098:	2301      	movs	r3, #1
 800909a:	e000      	b.n	800909e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800909c:	2300      	movs	r3, #0
 800909e:	2b00      	cmp	r3, #0
 80090a0:	d002      	beq.n	80090a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 80090a2:	68fa      	ldr	r2, [r7, #12]
 80090a4:	687b      	ldr	r3, [r7, #4]
 80090a6:	601a      	str	r2, [r3, #0]
        }
    }
 80090a8:	bf00      	nop
 80090aa:	3710      	adds	r7, #16
 80090ac:	46bd      	mov	sp, r7
 80090ae:	bd80      	pop	{r7, pc}

080090b0 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 80090b0:	b580      	push	{r7, lr}
 80090b2:	b082      	sub	sp, #8
 80090b4:	af00      	add	r7, sp, #0
 80090b6:	6078      	str	r0, [r7, #4]
    {
 80090b8:	4a06      	ldr	r2, [pc, #24]	@ (80090d4 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	601a      	str	r2, [r3, #0]
    }
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	3304      	adds	r3, #4
 80090c2:	4618      	mov	r0, r3
 80090c4:	f000 fd24 	bl	8009b10 <_ZN8touchgfx9ContainerD1Ev>
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	4618      	mov	r0, r3
 80090cc:	3708      	adds	r7, #8
 80090ce:	46bd      	mov	sp, r7
 80090d0:	bd80      	pop	{r7, pc}
 80090d2:	bf00      	nop
 80090d4:	08024cac 	.word	0x08024cac

080090d8 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 80090d8:	b580      	push	{r7, lr}
 80090da:	b082      	sub	sp, #8
 80090dc:	af00      	add	r7, sp, #0
 80090de:	6078      	str	r0, [r7, #4]
    }
 80090e0:	6878      	ldr	r0, [r7, #4]
 80090e2:	f7ff ffe5 	bl	80090b0 <_ZN8touchgfx6ScreenD1Ev>
 80090e6:	213c      	movs	r1, #60	@ 0x3c
 80090e8:	6878      	ldr	r0, [r7, #4]
 80090ea:	f018 fcca 	bl	8021a82 <_ZdlPvj>
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	4618      	mov	r0, r3
 80090f2:	3708      	adds	r7, #8
 80090f4:	46bd      	mov	sp, r7
 80090f6:	bd80      	pop	{r7, pc}

080090f8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 80090f8:	b480      	push	{r7}
 80090fa:	b083      	sub	sp, #12
 80090fc:	af00      	add	r7, sp, #0
 80090fe:	6078      	str	r0, [r7, #4]
    {
    }
 8009100:	bf00      	nop
 8009102:	370c      	adds	r7, #12
 8009104:	46bd      	mov	sp, r7
 8009106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800910a:	4770      	bx	lr

0800910c <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800910c:	b480      	push	{r7}
 800910e:	b083      	sub	sp, #12
 8009110:	af00      	add	r7, sp, #0
 8009112:	6078      	str	r0, [r7, #4]
    {
    }
 8009114:	bf00      	nop
 8009116:	370c      	adds	r7, #12
 8009118:	46bd      	mov	sp, r7
 800911a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800911e:	4770      	bx	lr

08009120 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009120:	b480      	push	{r7}
 8009122:	b083      	sub	sp, #12
 8009124:	af00      	add	r7, sp, #0
 8009126:	6078      	str	r0, [r7, #4]
    {
    }
 8009128:	bf00      	nop
 800912a:	370c      	adds	r7, #12
 800912c:	46bd      	mov	sp, r7
 800912e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009132:	4770      	bx	lr

08009134 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009134:	b480      	push	{r7}
 8009136:	b083      	sub	sp, #12
 8009138:	af00      	add	r7, sp, #0
 800913a:	6078      	str	r0, [r7, #4]
    {
    }
 800913c:	bf00      	nop
 800913e:	370c      	adds	r7, #12
 8009140:	46bd      	mov	sp, r7
 8009142:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009146:	4770      	bx	lr

08009148 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009148:	b480      	push	{r7}
 800914a:	b083      	sub	sp, #12
 800914c:	af00      	add	r7, sp, #0
 800914e:	6078      	str	r0, [r7, #4]
 8009150:	460b      	mov	r3, r1
 8009152:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009154:	bf00      	nop
 8009156:	370c      	adds	r7, #12
 8009158:	46bd      	mov	sp, r7
 800915a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800915e:	4770      	bx	lr

08009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009160:	b580      	push	{r7, lr}
 8009162:	b082      	sub	sp, #8
 8009164:	af00      	add	r7, sp, #0
 8009166:	6078      	str	r0, [r7, #4]
 8009168:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800916a:	687b      	ldr	r3, [r7, #4]
 800916c:	3304      	adds	r3, #4
 800916e:	6839      	ldr	r1, [r7, #0]
 8009170:	4618      	mov	r0, r3
 8009172:	f003 fd07 	bl	800cb84 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009176:	bf00      	nop
 8009178:	3708      	adds	r7, #8
 800917a:	46bd      	mov	sp, r7
 800917c:	bd80      	pop	{r7, pc}
	...

08009180 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009180:	b580      	push	{r7, lr}
 8009182:	b082      	sub	sp, #8
 8009184:	af00      	add	r7, sp, #0
 8009186:	6078      	str	r0, [r7, #4]
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	4618      	mov	r0, r3
 800918c:	f7ff fdca 	bl	8008d24 <_ZN8touchgfx8DrawableC1Ev>
 8009190:	4a03      	ldr	r2, [pc, #12]	@ (80091a0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	601a      	str	r2, [r3, #0]
 8009196:	687b      	ldr	r3, [r7, #4]
 8009198:	4618      	mov	r0, r3
 800919a:	3708      	adds	r7, #8
 800919c:	46bd      	mov	sp, r7
 800919e:	bd80      	pop	{r7, pc}
 80091a0:	08024118 	.word	0x08024118

080091a4 <_ZN8touchgfx6WidgetD1Ev>:
 80091a4:	b580      	push	{r7, lr}
 80091a6:	b082      	sub	sp, #8
 80091a8:	af00      	add	r7, sp, #0
 80091aa:	6078      	str	r0, [r7, #4]
 80091ac:	4a05      	ldr	r2, [pc, #20]	@ (80091c4 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	601a      	str	r2, [r3, #0]
 80091b2:	687b      	ldr	r3, [r7, #4]
 80091b4:	4618      	mov	r0, r3
 80091b6:	f7ff fde5 	bl	8008d84 <_ZN8touchgfx8DrawableD1Ev>
 80091ba:	687b      	ldr	r3, [r7, #4]
 80091bc:	4618      	mov	r0, r3
 80091be:	3708      	adds	r7, #8
 80091c0:	46bd      	mov	sp, r7
 80091c2:	bd80      	pop	{r7, pc}
 80091c4:	08024118 	.word	0x08024118

080091c8 <_ZN8touchgfx6WidgetD0Ev>:
 80091c8:	b580      	push	{r7, lr}
 80091ca:	b082      	sub	sp, #8
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]
 80091d0:	6878      	ldr	r0, [r7, #4]
 80091d2:	f7ff ffe7 	bl	80091a4 <_ZN8touchgfx6WidgetD1Ev>
 80091d6:	2128      	movs	r1, #40	@ 0x28
 80091d8:	6878      	ldr	r0, [r7, #4]
 80091da:	f018 fc52 	bl	8021a82 <_ZdlPvj>
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	4618      	mov	r0, r3
 80091e2:	3708      	adds	r7, #8
 80091e4:	46bd      	mov	sp, r7
 80091e6:	bd80      	pop	{r7, pc}

080091e8 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 80091e8:	b580      	push	{r7, lr}
 80091ea:	b082      	sub	sp, #8
 80091ec:	af00      	add	r7, sp, #0
 80091ee:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	4618      	mov	r0, r3
 80091f4:	2326      	movs	r3, #38	@ 0x26
 80091f6:	461a      	mov	r2, r3
 80091f8:	2100      	movs	r1, #0
 80091fa:	f018 fe76 	bl	8021eea <memset>
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	4618      	mov	r0, r3
 8009202:	f7ff ffbd 	bl	8009180 <_ZN8touchgfx6WidgetC1Ev>
 8009206:	4a09      	ldr	r2, [pc, #36]	@ (800922c <_ZN8touchgfx3BoxC1Ev+0x44>)
 8009208:	687b      	ldr	r3, [r7, #4]
 800920a:	601a      	str	r2, [r3, #0]
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	22ff      	movs	r2, #255	@ 0xff
 8009210:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 8009214:	687b      	ldr	r3, [r7, #4]
 8009216:	3328      	adds	r3, #40	@ 0x28
 8009218:	2100      	movs	r1, #0
 800921a:	4618      	mov	r0, r3
 800921c:	f7ff fd3c 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009220:	687b      	ldr	r3, [r7, #4]
 8009222:	4618      	mov	r0, r3
 8009224:	3708      	adds	r7, #8
 8009226:	46bd      	mov	sp, r7
 8009228:	bd80      	pop	{r7, pc}
 800922a:	bf00      	nop
 800922c:	080249fc 	.word	0x080249fc

08009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009230:	b480      	push	{r7}
 8009232:	b083      	sub	sp, #12
 8009234:	af00      	add	r7, sp, #0
 8009236:	6078      	str	r0, [r7, #4]
 8009238:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800923a:	687b      	ldr	r3, [r7, #4]
 800923c:	683a      	ldr	r2, [r7, #0]
 800923e:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8009240:	bf00      	nop
 8009242:	370c      	adds	r7, #12
 8009244:	46bd      	mov	sp, r7
 8009246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800924a:	4770      	bx	lr

0800924c <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800924c:	b480      	push	{r7}
 800924e:	b083      	sub	sp, #12
 8009250:	af00      	add	r7, sp, #0
 8009252:	6078      	str	r0, [r7, #4]
 8009254:	460b      	mov	r3, r1
 8009256:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009258:	4a06      	ldr	r2, [pc, #24]	@ (8009274 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	601a      	str	r2, [r3, #0]
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	887a      	ldrh	r2, [r7, #2]
 8009262:	809a      	strh	r2, [r3, #4]
    }
 8009264:	687b      	ldr	r3, [r7, #4]
 8009266:	4618      	mov	r0, r3
 8009268:	370c      	adds	r7, #12
 800926a:	46bd      	mov	sp, r7
 800926c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009270:	4770      	bx	lr
 8009272:	bf00      	nop
 8009274:	08023e60 	.word	0x08023e60

08009278 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009278:	b580      	push	{r7, lr}
 800927a:	b082      	sub	sp, #8
 800927c:	af00      	add	r7, sp, #0
 800927e:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	4618      	mov	r0, r3
 8009284:	2326      	movs	r3, #38	@ 0x26
 8009286:	461a      	mov	r2, r3
 8009288:	2100      	movs	r1, #0
 800928a:	f018 fe2e 	bl	8021eea <memset>
 800928e:	687b      	ldr	r3, [r7, #4]
 8009290:	4618      	mov	r0, r3
 8009292:	f7ff ff75 	bl	8009180 <_ZN8touchgfx6WidgetC1Ev>
 8009296:	4a16      	ldr	r2, [pc, #88]	@ (80092f0 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009298:	687b      	ldr	r3, [r7, #4]
 800929a:	601a      	str	r2, [r3, #0]
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	3328      	adds	r3, #40	@ 0x28
 80092a0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80092a4:	4618      	mov	r0, r3
 80092a6:	f7ff ffd1 	bl	800924c <_ZN8touchgfx9TypedTextC1Et>
 80092aa:	687b      	ldr	r3, [r7, #4]
 80092ac:	3330      	adds	r3, #48	@ 0x30
 80092ae:	2100      	movs	r1, #0
 80092b0:	4618      	mov	r0, r3
 80092b2:	f7ff fcf1 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 80092b6:	687b      	ldr	r3, [r7, #4]
 80092b8:	2200      	movs	r2, #0
 80092ba:	869a      	strh	r2, [r3, #52]	@ 0x34
 80092bc:	687b      	ldr	r3, [r7, #4]
 80092be:	22ff      	movs	r2, #255	@ 0xff
 80092c0:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	2200      	movs	r2, #0
 80092c8:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	2200      	movs	r2, #0
 80092d0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80092d4:	687b      	ldr	r3, [r7, #4]
 80092d6:	2200      	movs	r2, #0
 80092d8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	333c      	adds	r3, #60	@ 0x3c
 80092e0:	4618      	mov	r0, r3
 80092e2:	f000 f8f0 	bl	80094c6 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	4618      	mov	r0, r3
 80092ea:	3708      	adds	r7, #8
 80092ec:	46bd      	mov	sp, r7
 80092ee:	bd80      	pop	{r7, pc}
 80092f0:	0802496c 	.word	0x0802496c

080092f4 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 80092f4:	b590      	push	{r4, r7, lr}
 80092f6:	b087      	sub	sp, #28
 80092f8:	af00      	add	r7, sp, #0
 80092fa:	6178      	str	r0, [r7, #20]
 80092fc:	460b      	mov	r3, r1
 80092fe:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8009300:	697b      	ldr	r3, [r7, #20]
 8009302:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009306:	4611      	mov	r1, r2
 8009308:	4618      	mov	r0, r3
 800930a:	f7ff fdd6 	bl	8008eba <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800930e:	697b      	ldr	r3, [r7, #20]
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	3384      	adds	r3, #132	@ 0x84
 8009314:	681b      	ldr	r3, [r3, #0]
 8009316:	697c      	ldr	r4, [r7, #20]
 8009318:	463a      	mov	r2, r7
 800931a:	6979      	ldr	r1, [r7, #20]
 800931c:	4610      	mov	r0, r2
 800931e:	4798      	blx	r3
 8009320:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009324:	463a      	mov	r2, r7
 8009326:	ca07      	ldmia	r2, {r0, r1, r2}
 8009328:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800932c:	bf00      	nop
 800932e:	371c      	adds	r7, #28
 8009330:	46bd      	mov	sp, r7
 8009332:	bd90      	pop	{r4, r7, pc}

08009334 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8009334:	b590      	push	{r4, r7, lr}
 8009336:	b087      	sub	sp, #28
 8009338:	af00      	add	r7, sp, #0
 800933a:	6178      	str	r0, [r7, #20]
 800933c:	460b      	mov	r3, r1
 800933e:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8009340:	697b      	ldr	r3, [r7, #20]
 8009342:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009346:	4611      	mov	r1, r2
 8009348:	4618      	mov	r0, r3
 800934a:	f7ff fdc5 	bl	8008ed8 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800934e:	697b      	ldr	r3, [r7, #20]
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	3384      	adds	r3, #132	@ 0x84
 8009354:	681b      	ldr	r3, [r3, #0]
 8009356:	697c      	ldr	r4, [r7, #20]
 8009358:	463a      	mov	r2, r7
 800935a:	6979      	ldr	r1, [r7, #20]
 800935c:	4610      	mov	r0, r2
 800935e:	4798      	blx	r3
 8009360:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009364:	463a      	mov	r2, r7
 8009366:	ca07      	ldmia	r2, {r0, r1, r2}
 8009368:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800936c:	bf00      	nop
 800936e:	371c      	adds	r7, #28
 8009370:	46bd      	mov	sp, r7
 8009372:	bd90      	pop	{r4, r7, pc}

08009374 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009374:	b580      	push	{r7, lr}
 8009376:	b082      	sub	sp, #8
 8009378:	af00      	add	r7, sp, #0
 800937a:	6078      	str	r0, [r7, #4]
 800937c:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800937e:	6878      	ldr	r0, [r7, #4]
 8009380:	f7ff fc99 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
    }
 8009384:	6878      	ldr	r0, [r7, #4]
 8009386:	3708      	adds	r7, #8
 8009388:	46bd      	mov	sp, r7
 800938a:	bd80      	pop	{r7, pc}

0800938c <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800938c:	b480      	push	{r7}
 800938e:	b083      	sub	sp, #12
 8009390:	af00      	add	r7, sp, #0
 8009392:	6078      	str	r0, [r7, #4]
 8009394:	460b      	mov	r3, r1
 8009396:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009398:	687b      	ldr	r3, [r7, #4]
 800939a:	78fa      	ldrb	r2, [r7, #3]
 800939c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 80093a0:	bf00      	nop
 80093a2:	370c      	adds	r7, #12
 80093a4:	46bd      	mov	sp, r7
 80093a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093aa:	4770      	bx	lr

080093ac <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 80093ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093ae:	b085      	sub	sp, #20
 80093b0:	af00      	add	r7, sp, #0
 80093b2:	6078      	str	r0, [r7, #4]
 80093b4:	460b      	mov	r3, r1
 80093b6:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80093b8:	687e      	ldr	r6, [r7, #4]
 80093ba:	687b      	ldr	r3, [r7, #4]
 80093bc:	681b      	ldr	r3, [r3, #0]
 80093be:	3334      	adds	r3, #52	@ 0x34
 80093c0:	681c      	ldr	r4, [r3, #0]
 80093c2:	887d      	ldrh	r5, [r7, #2]
 80093c4:	6878      	ldr	r0, [r7, #4]
 80093c6:	f000 f867 	bl	8009498 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 80093ca:	4603      	mov	r3, r0
 80093cc:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80093ce:	4b1c      	ldr	r3, [pc, #112]	@ (8009440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 80093d0:	681b      	ldr	r3, [r3, #0]
 80093d2:	2b00      	cmp	r3, #0
 80093d4:	d105      	bne.n	80093e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 80093d6:	4b1b      	ldr	r3, [pc, #108]	@ (8009444 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 80093d8:	4a1b      	ldr	r2, [pc, #108]	@ (8009448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 80093da:	216c      	movs	r1, #108	@ 0x6c
 80093dc:	481b      	ldr	r0, [pc, #108]	@ (800944c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 80093de:	f018 fb7d 	bl	8021adc <__assert_func>
 80093e2:	68fb      	ldr	r3, [r7, #12]
 80093e4:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 80093e6:	68bb      	ldr	r3, [r7, #8]
 80093e8:	889a      	ldrh	r2, [r3, #4]
 80093ea:	4b19      	ldr	r3, [pc, #100]	@ (8009450 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 80093ec:	881b      	ldrh	r3, [r3, #0]
 80093ee:	429a      	cmp	r2, r3
 80093f0:	bf34      	ite	cc
 80093f2:	2301      	movcc	r3, #1
 80093f4:	2300      	movcs	r3, #0
 80093f6:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80093f8:	2b00      	cmp	r3, #0
 80093fa:	d105      	bne.n	8009408 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 80093fc:	4b15      	ldr	r3, [pc, #84]	@ (8009454 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 80093fe:	4a12      	ldr	r2, [pc, #72]	@ (8009448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009400:	216d      	movs	r1, #109	@ 0x6d
 8009402:	4812      	ldr	r0, [pc, #72]	@ (800944c <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009404:	f018 fb6a 	bl	8021adc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009408:	4b13      	ldr	r3, [pc, #76]	@ (8009458 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800940a:	681a      	ldr	r2, [r3, #0]
 800940c:	4b0c      	ldr	r3, [pc, #48]	@ (8009440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800940e:	6819      	ldr	r1, [r3, #0]
 8009410:	68fb      	ldr	r3, [r7, #12]
 8009412:	889b      	ldrh	r3, [r3, #4]
 8009414:	005b      	lsls	r3, r3, #1
 8009416:	440b      	add	r3, r1
 8009418:	781b      	ldrb	r3, [r3, #0]
 800941a:	009b      	lsls	r3, r3, #2
 800941c:	4413      	add	r3, r2
 800941e:	681b      	ldr	r3, [r3, #0]
 8009420:	681a      	ldr	r2, [r3, #0]
 8009422:	3230      	adds	r2, #48	@ 0x30
 8009424:	6812      	ldr	r2, [r2, #0]
 8009426:	4618      	mov	r0, r3
 8009428:	4790      	blx	r2
 800942a:	4603      	mov	r3, r0
 800942c:	1aeb      	subs	r3, r5, r3
 800942e:	b29b      	uxth	r3, r3
 8009430:	b21b      	sxth	r3, r3
 8009432:	4619      	mov	r1, r3
 8009434:	4630      	mov	r0, r6
 8009436:	47a0      	blx	r4
    }
 8009438:	bf00      	nop
 800943a:	3714      	adds	r7, #20
 800943c:	46bd      	mov	sp, r7
 800943e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009440:	20002280 	.word	0x20002280
 8009444:	08022f18 	.word	0x08022f18
 8009448:	08022f5c 	.word	0x08022f5c
 800944c:	08022f98 	.word	0x08022f98
 8009450:	20002284 	.word	0x20002284
 8009454:	08022fdc 	.word	0x08022fdc
 8009458:	20002288 	.word	0x20002288

0800945c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800945c:	b580      	push	{r7, lr}
 800945e:	b082      	sub	sp, #8
 8009460:	af00      	add	r7, sp, #0
 8009462:	6078      	str	r0, [r7, #4]
 8009464:	460b      	mov	r3, r1
 8009466:	807b      	strh	r3, [r7, #2]
 8009468:	4613      	mov	r3, r2
 800946a:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800946c:	687a      	ldr	r2, [r7, #4]
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	681b      	ldr	r3, [r3, #0]
 8009472:	3330      	adds	r3, #48	@ 0x30
 8009474:	681b      	ldr	r3, [r3, #0]
 8009476:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800947a:	4610      	mov	r0, r2
 800947c:	4798      	blx	r3
        setBaselineY(baselineY);
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	681b      	ldr	r3, [r3, #0]
 8009482:	3364      	adds	r3, #100	@ 0x64
 8009484:	681b      	ldr	r3, [r3, #0]
 8009486:	f9b7 2000 	ldrsh.w	r2, [r7]
 800948a:	4611      	mov	r1, r2
 800948c:	6878      	ldr	r0, [r7, #4]
 800948e:	4798      	blx	r3
    }
 8009490:	bf00      	nop
 8009492:	3708      	adds	r7, #8
 8009494:	46bd      	mov	sp, r7
 8009496:	bd80      	pop	{r7, pc}

08009498 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8009498:	b480      	push	{r7}
 800949a:	b083      	sub	sp, #12
 800949c:	af00      	add	r7, sp, #0
 800949e:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	3328      	adds	r3, #40	@ 0x28
    }
 80094a4:	4618      	mov	r0, r3
 80094a6:	370c      	adds	r7, #12
 80094a8:	46bd      	mov	sp, r7
 80094aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ae:	4770      	bx	lr

080094b0 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 80094b0:	b480      	push	{r7}
 80094b2:	b083      	sub	sp, #12
 80094b4:	af00      	add	r7, sp, #0
 80094b6:	6078      	str	r0, [r7, #4]
    {
        return 0;
 80094b8:	2300      	movs	r3, #0
    }
 80094ba:	4618      	mov	r0, r3
 80094bc:	370c      	adds	r7, #12
 80094be:	46bd      	mov	sp, r7
 80094c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094c4:	4770      	bx	lr

080094c6 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 80094c6:	b580      	push	{r7, lr}
 80094c8:	b084      	sub	sp, #16
 80094ca:	af02      	add	r7, sp, #8
 80094cc:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80094ce:	6878      	ldr	r0, [r7, #4]
 80094d0:	f04f 33ff 	mov.w	r3, #4294967295
 80094d4:	9300      	str	r3, [sp, #0]
 80094d6:	f04f 33ff 	mov.w	r3, #4294967295
 80094da:	2200      	movs	r2, #0
 80094dc:	2100      	movs	r1, #0
 80094de:	f7ff fc01 	bl	8008ce4 <_ZN8touchgfx4RectC1Essss>
              text(0)
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	2200      	movs	r2, #0
 80094e6:	609a      	str	r2, [r3, #8]
        {
        }
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	4618      	mov	r0, r3
 80094ec:	3708      	adds	r7, #8
 80094ee:	46bd      	mov	sp, r7
 80094f0:	bd80      	pop	{r7, pc}
	...

080094f4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 80094f4:	b580      	push	{r7, lr}
 80094f6:	b082      	sub	sp, #8
 80094f8:	af00      	add	r7, sp, #0
 80094fa:	6078      	str	r0, [r7, #4]
 80094fc:	4a08      	ldr	r2, [pc, #32]	@ (8009520 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 80094fe:	687b      	ldr	r3, [r7, #4]
 8009500:	601a      	str	r2, [r3, #0]
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	3328      	adds	r3, #40	@ 0x28
 8009506:	4618      	mov	r0, r3
 8009508:	f7fe faf8 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	4618      	mov	r0, r3
 8009510:	f7ff fe48 	bl	80091a4 <_ZN8touchgfx6WidgetD1Ev>
 8009514:	687b      	ldr	r3, [r7, #4]
 8009516:	4618      	mov	r0, r3
 8009518:	3708      	adds	r7, #8
 800951a:	46bd      	mov	sp, r7
 800951c:	bd80      	pop	{r7, pc}
 800951e:	bf00      	nop
 8009520:	0802496c 	.word	0x0802496c

08009524 <_ZN8touchgfx8TextAreaD0Ev>:
 8009524:	b580      	push	{r7, lr}
 8009526:	b082      	sub	sp, #8
 8009528:	af00      	add	r7, sp, #0
 800952a:	6078      	str	r0, [r7, #4]
 800952c:	6878      	ldr	r0, [r7, #4]
 800952e:	f7ff ffe1 	bl	80094f4 <_ZN8touchgfx8TextAreaD1Ev>
 8009532:	2148      	movs	r1, #72	@ 0x48
 8009534:	6878      	ldr	r0, [r7, #4]
 8009536:	f018 faa4 	bl	8021a82 <_ZdlPvj>
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	4618      	mov	r0, r3
 800953e:	3708      	adds	r7, #8
 8009540:	46bd      	mov	sp, r7
 8009542:	bd80      	pop	{r7, pc}

08009544 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 8009544:	b580      	push	{r7, lr}
 8009546:	b082      	sub	sp, #8
 8009548:	af00      	add	r7, sp, #0
 800954a:	6078      	str	r0, [r7, #4]
        : TextArea()
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	4618      	mov	r0, r3
 8009550:	f7ff fe92 	bl	8009278 <_ZN8touchgfx8TextAreaC1Ev>
 8009554:	4a03      	ldr	r2, [pc, #12]	@ (8009564 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	601a      	str	r2, [r3, #0]
    {
    }
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	4618      	mov	r0, r3
 800955e:	3708      	adds	r7, #8
 8009560:	46bd      	mov	sp, r7
 8009562:	bd80      	pop	{r7, pc}
 8009564:	08024a64 	.word	0x08024a64

08009568 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8009568:	b580      	push	{r7, lr}
 800956a:	b082      	sub	sp, #8
 800956c:	af00      	add	r7, sp, #0
 800956e:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	4618      	mov	r0, r3
 8009574:	f7ff fc26 	bl	8008dc4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8009578:	bf00      	nop
 800957a:	3708      	adds	r7, #8
 800957c:	46bd      	mov	sp, r7
 800957e:	bd80      	pop	{r7, pc}

08009580 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8009580:	b580      	push	{r7, lr}
 8009582:	b082      	sub	sp, #8
 8009584:	af00      	add	r7, sp, #0
 8009586:	6078      	str	r0, [r7, #4]
 8009588:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800958a:	6878      	ldr	r0, [r7, #4]
 800958c:	f7ff ff9b 	bl	80094c6 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8009590:	6878      	ldr	r0, [r7, #4]
 8009592:	3708      	adds	r7, #8
 8009594:	46bd      	mov	sp, r7
 8009596:	bd80      	pop	{r7, pc}

08009598 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8009598:	b580      	push	{r7, lr}
 800959a:	b082      	sub	sp, #8
 800959c:	af00      	add	r7, sp, #0
 800959e:	6078      	str	r0, [r7, #4]
 80095a0:	4a05      	ldr	r2, [pc, #20]	@ (80095b8 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	601a      	str	r2, [r3, #0]
 80095a6:	687b      	ldr	r3, [r7, #4]
 80095a8:	4618      	mov	r0, r3
 80095aa:	f7ff ffa3 	bl	80094f4 <_ZN8touchgfx8TextAreaD1Ev>
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	4618      	mov	r0, r3
 80095b2:	3708      	adds	r7, #8
 80095b4:	46bd      	mov	sp, r7
 80095b6:	bd80      	pop	{r7, pc}
 80095b8:	08024a64 	.word	0x08024a64

080095bc <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 80095bc:	b580      	push	{r7, lr}
 80095be:	b082      	sub	sp, #8
 80095c0:	af00      	add	r7, sp, #0
 80095c2:	6078      	str	r0, [r7, #4]
 80095c4:	6878      	ldr	r0, [r7, #4]
 80095c6:	f7ff ffe7 	bl	8009598 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 80095ca:	2148      	movs	r1, #72	@ 0x48
 80095cc:	6878      	ldr	r0, [r7, #4]
 80095ce:	f018 fa58 	bl	8021a82 <_ZdlPvj>
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	4618      	mov	r0, r3
 80095d6:	3708      	adds	r7, #8
 80095d8:	46bd      	mov	sp, r7
 80095da:	bd80      	pop	{r7, pc}

080095dc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 80095dc:	b580      	push	{r7, lr}
 80095de:	b082      	sub	sp, #8
 80095e0:	af00      	add	r7, sp, #0
 80095e2:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 80095e4:	687b      	ldr	r3, [r7, #4]
 80095e6:	4618      	mov	r0, r3
 80095e8:	f7ff ffac 	bl	8009544 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 80095ec:	4a05      	ldr	r2, [pc, #20]	@ (8009604 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	601a      	str	r2, [r3, #0]
 80095f2:	687b      	ldr	r3, [r7, #4]
 80095f4:	2200      	movs	r2, #0
 80095f6:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	4618      	mov	r0, r3
 80095fc:	3708      	adds	r7, #8
 80095fe:	46bd      	mov	sp, r7
 8009600:	bd80      	pop	{r7, pc}
 8009602:	bf00      	nop
 8009604:	08024088 	.word	0x08024088

08009608 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 8009608:	b480      	push	{r7}
 800960a:	b083      	sub	sp, #12
 800960c:	af00      	add	r7, sp, #0
 800960e:	6078      	str	r0, [r7, #4]
 8009610:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	683a      	ldr	r2, [r7, #0]
 8009616:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 8009618:	bf00      	nop
 800961a:	370c      	adds	r7, #12
 800961c:	46bd      	mov	sp, r7
 800961e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009622:	4770      	bx	lr

08009624 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 8009624:	b480      	push	{r7}
 8009626:	b083      	sub	sp, #12
 8009628:	af00      	add	r7, sp, #0
 800962a:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800962c:	687b      	ldr	r3, [r7, #4]
 800962e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 8009630:	4618      	mov	r0, r3
 8009632:	370c      	adds	r7, #12
 8009634:	46bd      	mov	sp, r7
 8009636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800963a:	4770      	bx	lr

0800963c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800963c:	b580      	push	{r7, lr}
 800963e:	b082      	sub	sp, #8
 8009640:	af00      	add	r7, sp, #0
 8009642:	6078      	str	r0, [r7, #4]
 8009644:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 8009646:	6839      	ldr	r1, [r7, #0]
 8009648:	6878      	ldr	r0, [r7, #4]
 800964a:	f7ff ffdd 	bl	8009608 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800964e:	bf00      	nop
 8009650:	3708      	adds	r7, #8
 8009652:	46bd      	mov	sp, r7
 8009654:	bd80      	pop	{r7, pc}
	...

08009658 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8009658:	b580      	push	{r7, lr}
 800965a:	b082      	sub	sp, #8
 800965c:	af00      	add	r7, sp, #0
 800965e:	6078      	str	r0, [r7, #4]
 8009660:	4a05      	ldr	r2, [pc, #20]	@ (8009678 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	601a      	str	r2, [r3, #0]
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	4618      	mov	r0, r3
 800966a:	f7ff fd21 	bl	80090b0 <_ZN8touchgfx6ScreenD1Ev>
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	4618      	mov	r0, r3
 8009672:	3708      	adds	r7, #8
 8009674:	46bd      	mov	sp, r7
 8009676:	bd80      	pop	{r7, pc}
 8009678:	08024054 	.word	0x08024054

0800967c <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800967c:	b580      	push	{r7, lr}
 800967e:	b082      	sub	sp, #8
 8009680:	af00      	add	r7, sp, #0
 8009682:	6078      	str	r0, [r7, #4]
 8009684:	6878      	ldr	r0, [r7, #4]
 8009686:	f7ff ffe7 	bl	8009658 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800968a:	2140      	movs	r1, #64	@ 0x40
 800968c:	6878      	ldr	r0, [r7, #4]
 800968e:	f018 f9f8 	bl	8021a82 <_ZdlPvj>
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	4618      	mov	r0, r3
 8009696:	3708      	adds	r7, #8
 8009698:	46bd      	mov	sp, r7
 800969a:	bd80      	pop	{r7, pc}

0800969c <_ZN15Screen1ViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
 800969c:	b590      	push	{r4, r7, lr}
 800969e:	b09d      	sub	sp, #116	@ 0x74
 80096a0:	af02      	add	r7, sp, #8
 80096a2:	6178      	str	r0, [r7, #20]
 80096a4:	697b      	ldr	r3, [r7, #20]
 80096a6:	4618      	mov	r0, r3
 80096a8:	f000 f9fa 	bl	8009aa0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 80096ac:	4acf      	ldr	r2, [pc, #828]	@ (80099ec <_ZN15Screen1ViewBaseC1Ev+0x350>)
 80096ae:	697b      	ldr	r3, [r7, #20]
 80096b0:	601a      	str	r2, [r3, #0]
 80096b2:	697b      	ldr	r3, [r7, #20]
 80096b4:	3340      	adds	r3, #64	@ 0x40
 80096b6:	4618      	mov	r0, r3
 80096b8:	f7ff fd96 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 80096bc:	697b      	ldr	r3, [r7, #20]
 80096be:	336c      	adds	r3, #108	@ 0x6c
 80096c0:	4618      	mov	r0, r3
 80096c2:	f7ff fd91 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 80096c6:	697b      	ldr	r3, [r7, #20]
 80096c8:	3398      	adds	r3, #152	@ 0x98
 80096ca:	4618      	mov	r0, r3
 80096cc:	f7ff ff86 	bl	80095dc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80096d0:	697b      	ldr	r3, [r7, #20]
 80096d2:	33e4      	adds	r3, #228	@ 0xe4
 80096d4:	4618      	mov	r0, r3
 80096d6:	f7ff fd87 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 80096da:	697b      	ldr	r3, [r7, #20]
 80096dc:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 80096e0:	4618      	mov	r0, r3
 80096e2:	f7ff fd81 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 80096e6:	697b      	ldr	r3, [r7, #20]
 80096e8:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 80096ec:	23f0      	movs	r3, #240	@ 0xf0
 80096ee:	9300      	str	r3, [sp, #0]
 80096f0:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 80096f4:	2200      	movs	r2, #0
 80096f6:	2100      	movs	r1, #0
 80096f8:	f7ff fb82 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80096fc:	697b      	ldr	r3, [r7, #20]
 80096fe:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 8009702:	2300      	movs	r3, #0
 8009704:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
 8009708:	2300      	movs	r3, #0
 800970a:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
 800970e:	2300      	movs	r3, #0
 8009710:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8009714:	f897 3049 	ldrb.w	r3, [r7, #73]	@ 0x49
 8009718:	041a      	lsls	r2, r3, #16
 800971a:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 800971e:	021b      	lsls	r3, r3, #8
 8009720:	431a      	orrs	r2, r3
 8009722:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8009726:	4313      	orrs	r3, r2
 8009728:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800972c:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8009730:	4611      	mov	r1, r2
 8009732:	4618      	mov	r0, r3
 8009734:	f7ff fab0 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009738:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800973a:	4619      	mov	r1, r3
 800973c:	4620      	mov	r0, r4
 800973e:	f7ff fd77 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 8009742:	697a      	ldr	r2, [r7, #20]
 8009744:	697b      	ldr	r3, [r7, #20]
 8009746:	3340      	adds	r3, #64	@ 0x40
 8009748:	4619      	mov	r1, r3
 800974a:	4610      	mov	r0, r2
 800974c:	f7ff fd08 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 320, 240);
 8009750:	697b      	ldr	r3, [r7, #20]
 8009752:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 8009756:	23f0      	movs	r3, #240	@ 0xf0
 8009758:	9300      	str	r3, [sp, #0]
 800975a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800975e:	2200      	movs	r2, #0
 8009760:	2100      	movs	r1, #0
 8009762:	f7ff fb4d 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8009766:	697b      	ldr	r3, [r7, #20]
 8009768:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800976c:	23ff      	movs	r3, #255	@ 0xff
 800976e:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 8009772:	23ff      	movs	r3, #255	@ 0xff
 8009774:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
 8009778:	23ff      	movs	r3, #255	@ 0xff
 800977a:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
 800977e:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 8009782:	041a      	lsls	r2, r3, #16
 8009784:	f897 304b 	ldrb.w	r3, [r7, #75]	@ 0x4b
 8009788:	021b      	lsls	r3, r3, #8
 800978a:	431a      	orrs	r2, r3
 800978c:	f897 304a 	ldrb.w	r3, [r7, #74]	@ 0x4a
 8009790:	4313      	orrs	r3, r2
 8009792:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009796:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800979a:	4611      	mov	r1, r2
 800979c:	4618      	mov	r0, r3
 800979e:	f7ff fa7b 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 80097a2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80097a4:	4619      	mov	r1, r3
 80097a6:	4620      	mov	r0, r4
 80097a8:	f7ff fd42 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 80097ac:	697a      	ldr	r2, [r7, #20]
 80097ae:	697b      	ldr	r3, [r7, #20]
 80097b0:	336c      	adds	r3, #108	@ 0x6c
 80097b2:	4619      	mov	r1, r3
 80097b4:	4610      	mov	r0, r2
 80097b6:	f7ff fcd3 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setPosition(33, 85, 272, 83);
 80097ba:	697b      	ldr	r3, [r7, #20]
 80097bc:	f103 0098 	add.w	r0, r3, #152	@ 0x98
 80097c0:	2353      	movs	r3, #83	@ 0x53
 80097c2:	9300      	str	r3, [sp, #0]
 80097c4:	f44f 7388 	mov.w	r3, #272	@ 0x110
 80097c8:	2255      	movs	r2, #85	@ 0x55
 80097ca:	2121      	movs	r1, #33	@ 0x21
 80097cc:	f7ff fb18 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 80097d0:	697b      	ldr	r3, [r7, #20]
 80097d2:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 80097d6:	2300      	movs	r3, #0
 80097d8:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 80097dc:	2300      	movs	r3, #0
 80097de:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 80097e2:	2300      	movs	r3, #0
 80097e4:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 80097e8:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 80097ec:	041a      	lsls	r2, r3, #16
 80097ee:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 80097f2:	021b      	lsls	r3, r3, #8
 80097f4:	431a      	orrs	r2, r3
 80097f6:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 80097fa:	4313      	orrs	r3, r2
 80097fc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009800:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8009804:	4611      	mov	r1, r2
 8009806:	4618      	mov	r0, r3
 8009808:	f7ff fa46 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 800980c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800980e:	653c      	str	r4, [r7, #80]	@ 0x50
 8009810:	61fb      	str	r3, [r7, #28]
        color = newColor;
 8009812:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009814:	69fa      	ldr	r2, [r7, #28]
 8009816:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009818:	bf00      	nop
    textArea1.setLinespacing(0);
 800981a:	697b      	ldr	r3, [r7, #20]
 800981c:	3398      	adds	r3, #152	@ 0x98
 800981e:	65bb      	str	r3, [r7, #88]	@ 0x58
 8009820:	2300      	movs	r3, #0
 8009822:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
        linespace = space;
 8009826:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009828:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 800982c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800982e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009830:	681b      	ldr	r3, [r3, #0]
 8009832:	3384      	adds	r3, #132	@ 0x84
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	6dbc      	ldr	r4, [r7, #88]	@ 0x58
 8009838:	463a      	mov	r2, r7
 800983a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800983c:	4610      	mov	r0, r2
 800983e:	4798      	blx	r3
 8009840:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009844:	463a      	mov	r2, r7
 8009846:	ca07      	ldmia	r2, {r0, r1, r2}
 8009848:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800984c:	bf00      	nop
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1X9).getText());
 800984e:	697b      	ldr	r3, [r7, #20]
 8009850:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 8009854:	f107 0320 	add.w	r3, r7, #32
 8009858:	2100      	movs	r1, #0
 800985a:	4618      	mov	r0, r3
 800985c:	f7ff fcf6 	bl	800924c <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009860:	4b63      	ldr	r3, [pc, #396]	@ (80099f0 <_ZN15Screen1ViewBaseC1Ev+0x354>)
 8009862:	681b      	ldr	r3, [r3, #0]
 8009864:	2b00      	cmp	r3, #0
 8009866:	d105      	bne.n	8009874 <_ZN15Screen1ViewBaseC1Ev+0x1d8>
 8009868:	4b62      	ldr	r3, [pc, #392]	@ (80099f4 <_ZN15Screen1ViewBaseC1Ev+0x358>)
 800986a:	4a63      	ldr	r2, [pc, #396]	@ (80099f8 <_ZN15Screen1ViewBaseC1Ev+0x35c>)
 800986c:	2160      	movs	r1, #96	@ 0x60
 800986e:	4863      	ldr	r0, [pc, #396]	@ (80099fc <_ZN15Screen1ViewBaseC1Ev+0x360>)
 8009870:	f018 f934 	bl	8021adc <__assert_func>
 8009874:	f107 0320 	add.w	r3, r7, #32
 8009878:	65fb      	str	r3, [r7, #92]	@ 0x5c
        return typedTextId < numberOfTypedTexts;
 800987a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800987c:	889a      	ldrh	r2, [r3, #4]
 800987e:	4b60      	ldr	r3, [pc, #384]	@ (8009a00 <_ZN15Screen1ViewBaseC1Ev+0x364>)
 8009880:	881b      	ldrh	r3, [r3, #0]
 8009882:	429a      	cmp	r2, r3
 8009884:	bf34      	ite	cc
 8009886:	2301      	movcc	r3, #1
 8009888:	2300      	movcs	r3, #0
 800988a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800988c:	2b00      	cmp	r3, #0
 800988e:	d105      	bne.n	800989c <_ZN15Screen1ViewBaseC1Ev+0x200>
 8009890:	4b5c      	ldr	r3, [pc, #368]	@ (8009a04 <_ZN15Screen1ViewBaseC1Ev+0x368>)
 8009892:	4a59      	ldr	r2, [pc, #356]	@ (80099f8 <_ZN15Screen1ViewBaseC1Ev+0x35c>)
 8009894:	2161      	movs	r1, #97	@ 0x61
 8009896:	4859      	ldr	r0, [pc, #356]	@ (80099fc <_ZN15Screen1ViewBaseC1Ev+0x360>)
 8009898:	f018 f920 	bl	8021adc <__assert_func>
        return texts->getText(typedTextId);
 800989c:	4b5a      	ldr	r3, [pc, #360]	@ (8009a08 <_ZN15Screen1ViewBaseC1Ev+0x36c>)
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80098a2:	4611      	mov	r1, r2
 80098a4:	4618      	mov	r0, r3
 80098a6:	f000 fd75 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 80098aa:	4603      	mov	r3, r0
 80098ac:	bf00      	nop
 80098ae:	4a57      	ldr	r2, [pc, #348]	@ (8009a0c <_ZN15Screen1ViewBaseC1Ev+0x370>)
 80098b0:	210a      	movs	r1, #10
 80098b2:	4620      	mov	r0, r4
 80098b4:	f009 fd23 	bl	80132fe <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80098b8:	f107 0320 	add.w	r3, r7, #32
 80098bc:	4618      	mov	r0, r3
 80098be:	f7fe f91d 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
    textArea1.setWildcard(textArea1Buffer);
 80098c2:	697b      	ldr	r3, [r7, #20]
 80098c4:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 80098c8:	697b      	ldr	r3, [r7, #20]
 80098ca:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 80098ce:	4619      	mov	r1, r3
 80098d0:	4610      	mov	r0, r2
 80098d2:	f7ff feb3 	bl	800963c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GIW5));
 80098d6:	697b      	ldr	r3, [r7, #20]
 80098d8:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 80098dc:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80098e0:	2101      	movs	r1, #1
 80098e2:	4618      	mov	r0, r3
 80098e4:	f7ff fcb2 	bl	800924c <_ZN8touchgfx9TypedTextC1Et>
 80098e8:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80098ec:	4619      	mov	r1, r3
 80098ee:	4620      	mov	r0, r4
 80098f0:	f004 fe70 	bl	800e5d4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098f4:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80098f8:	4618      	mov	r0, r3
 80098fa:	f7fe f8ff 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 80098fe:	697a      	ldr	r2, [r7, #20]
 8009900:	697b      	ldr	r3, [r7, #20]
 8009902:	3398      	adds	r3, #152	@ 0x98
 8009904:	4619      	mov	r1, r3
 8009906:	4610      	mov	r0, r2
 8009908:	f7ff fc2a 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2.setPosition(0, 0, 320, 50);
 800990c:	697b      	ldr	r3, [r7, #20]
 800990e:	f103 00e4 	add.w	r0, r3, #228	@ 0xe4
 8009912:	2332      	movs	r3, #50	@ 0x32
 8009914:	9300      	str	r3, [sp, #0]
 8009916:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800991a:	2200      	movs	r2, #0
 800991c:	2100      	movs	r1, #0
 800991e:	f7ff fa6f 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setColor(touchgfx::Color::getColorFromRGB(224, 31, 31));
 8009922:	697b      	ldr	r3, [r7, #20]
 8009924:	f103 04e4 	add.w	r4, r3, #228	@ 0xe4
 8009928:	23e0      	movs	r3, #224	@ 0xe0
 800992a:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 800992e:	231f      	movs	r3, #31
 8009930:	f887 3063 	strb.w	r3, [r7, #99]	@ 0x63
 8009934:	231f      	movs	r3, #31
 8009936:	f887 3062 	strb.w	r3, [r7, #98]	@ 0x62
 800993a:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 800993e:	041a      	lsls	r2, r3, #16
 8009940:	f897 3063 	ldrb.w	r3, [r7, #99]	@ 0x63
 8009944:	021b      	lsls	r3, r3, #8
 8009946:	431a      	orrs	r2, r3
 8009948:	f897 3062 	ldrb.w	r3, [r7, #98]	@ 0x62
 800994c:	4313      	orrs	r3, r2
 800994e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009952:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009956:	4611      	mov	r1, r2
 8009958:	4618      	mov	r0, r3
 800995a:	f7ff f99d 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 800995e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009960:	4619      	mov	r1, r3
 8009962:	4620      	mov	r0, r4
 8009964:	f7ff fc64 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2);
 8009968:	697a      	ldr	r2, [r7, #20]
 800996a:	697b      	ldr	r3, [r7, #20]
 800996c:	33e4      	adds	r3, #228	@ 0xe4
 800996e:	4619      	mov	r1, r3
 8009970:	4610      	mov	r0, r2
 8009972:	f7ff fbf5 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2_1.setPosition(0, 190, 320, 50);
 8009976:	697b      	ldr	r3, [r7, #20]
 8009978:	f503 7088 	add.w	r0, r3, #272	@ 0x110
 800997c:	2332      	movs	r3, #50	@ 0x32
 800997e:	9300      	str	r3, [sp, #0]
 8009980:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009984:	22be      	movs	r2, #190	@ 0xbe
 8009986:	2100      	movs	r1, #0
 8009988:	f7ff fa3a 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box2_1.setColor(touchgfx::Color::getColorFromRGB(82, 31, 222));
 800998c:	697b      	ldr	r3, [r7, #20]
 800998e:	f503 7488 	add.w	r4, r3, #272	@ 0x110
 8009992:	2352      	movs	r3, #82	@ 0x52
 8009994:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 8009998:	231f      	movs	r3, #31
 800999a:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
 800999e:	23de      	movs	r3, #222	@ 0xde
 80099a0:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
 80099a4:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 80099a8:	041a      	lsls	r2, r3, #16
 80099aa:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 80099ae:	021b      	lsls	r3, r3, #8
 80099b0:	431a      	orrs	r2, r3
 80099b2:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 80099b6:	4313      	orrs	r3, r2
 80099b8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 80099bc:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80099c0:	4611      	mov	r1, r2
 80099c2:	4618      	mov	r0, r3
 80099c4:	f7ff f968 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 80099c8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80099ca:	4619      	mov	r1, r3
 80099cc:	4620      	mov	r0, r4
 80099ce:	f7ff fc2f 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2_1);
 80099d2:	697a      	ldr	r2, [r7, #20]
 80099d4:	697b      	ldr	r3, [r7, #20]
 80099d6:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 80099da:	4619      	mov	r1, r3
 80099dc:	4610      	mov	r0, r2
 80099de:	f7ff fbbf 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 80099e2:	697b      	ldr	r3, [r7, #20]
 80099e4:	4618      	mov	r0, r3
 80099e6:	376c      	adds	r7, #108	@ 0x6c
 80099e8:	46bd      	mov	sp, r7
 80099ea:	bd90      	pop	{r4, r7, pc}
 80099ec:	08024020 	.word	0x08024020
 80099f0:	20002280 	.word	0x20002280
 80099f4:	08022f18 	.word	0x08022f18
 80099f8:	0802301c 	.word	0x0802301c
 80099fc:	08022f98 	.word	0x08022f98
 8009a00:	20002284 	.word	0x20002284
 8009a04:	08022fdc 	.word	0x08022fdc
 8009a08:	2000228c 	.word	0x2000228c
 8009a0c:	08023068 	.word	0x08023068

08009a10 <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 8009a10:	b580      	push	{r7, lr}
 8009a12:	b082      	sub	sp, #8
 8009a14:	af00      	add	r7, sp, #0
 8009a16:	6078      	str	r0, [r7, #4]
 8009a18:	4a12      	ldr	r2, [pc, #72]	@ (8009a64 <_ZN15Screen1ViewBaseD1Ev+0x54>)
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	601a      	str	r2, [r3, #0]
{

}
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 8009a24:	4618      	mov	r0, r3
 8009a26:	f000 f895 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009a2a:	687b      	ldr	r3, [r7, #4]
 8009a2c:	33e4      	adds	r3, #228	@ 0xe4
 8009a2e:	4618      	mov	r0, r3
 8009a30:	f000 f890 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009a34:	687b      	ldr	r3, [r7, #4]
 8009a36:	3398      	adds	r3, #152	@ 0x98
 8009a38:	4618      	mov	r0, r3
 8009a3a:	f000 f847 	bl	8009acc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	336c      	adds	r3, #108	@ 0x6c
 8009a42:	4618      	mov	r0, r3
 8009a44:	f000 f886 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	3340      	adds	r3, #64	@ 0x40
 8009a4c:	4618      	mov	r0, r3
 8009a4e:	f000 f881 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	4618      	mov	r0, r3
 8009a56:	f7ff fdff 	bl	8009658 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8009a5a:	687b      	ldr	r3, [r7, #4]
 8009a5c:	4618      	mov	r0, r3
 8009a5e:	3708      	adds	r7, #8
 8009a60:	46bd      	mov	sp, r7
 8009a62:	bd80      	pop	{r7, pc}
 8009a64:	08024020 	.word	0x08024020

08009a68 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8009a68:	b580      	push	{r7, lr}
 8009a6a:	b082      	sub	sp, #8
 8009a6c:	af00      	add	r7, sp, #0
 8009a6e:	6078      	str	r0, [r7, #4]
}
 8009a70:	6878      	ldr	r0, [r7, #4]
 8009a72:	f7ff ffcd 	bl	8009a10 <_ZN15Screen1ViewBaseD1Ev>
 8009a76:	f44f 71a8 	mov.w	r1, #336	@ 0x150
 8009a7a:	6878      	ldr	r0, [r7, #4]
 8009a7c:	f018 f801 	bl	8021a82 <_ZdlPvj>
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	4618      	mov	r0, r3
 8009a84:	3708      	adds	r7, #8
 8009a86:	46bd      	mov	sp, r7
 8009a88:	bd80      	pop	{r7, pc}

08009a8a <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 8009a8a:	b480      	push	{r7}
 8009a8c:	b083      	sub	sp, #12
 8009a8e:	af00      	add	r7, sp, #0
 8009a90:	6078      	str	r0, [r7, #4]

}
 8009a92:	bf00      	nop
 8009a94:	370c      	adds	r7, #12
 8009a96:	46bd      	mov	sp, r7
 8009a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a9c:	4770      	bx	lr
	...

08009aa0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 8009aa0:	b580      	push	{r7, lr}
 8009aa2:	b082      	sub	sp, #8
 8009aa4:	af00      	add	r7, sp, #0
 8009aa6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	4618      	mov	r0, r3
 8009aac:	f007 ff7a 	bl	80119a4 <_ZN8touchgfx6ScreenC1Ev>
 8009ab0:	4a05      	ldr	r2, [pc, #20]	@ (8009ac8 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	601a      	str	r2, [r3, #0]
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	2200      	movs	r2, #0
 8009aba:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	4618      	mov	r0, r3
 8009ac0:	3708      	adds	r7, #8
 8009ac2:	46bd      	mov	sp, r7
 8009ac4:	bd80      	pop	{r7, pc}
 8009ac6:	bf00      	nop
 8009ac8:	08024054 	.word	0x08024054

08009acc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8009acc:	b580      	push	{r7, lr}
 8009ace:	b082      	sub	sp, #8
 8009ad0:	af00      	add	r7, sp, #0
 8009ad2:	6078      	str	r0, [r7, #4]
 8009ad4:	4a05      	ldr	r2, [pc, #20]	@ (8009aec <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	601a      	str	r2, [r3, #0]
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	4618      	mov	r0, r3
 8009ade:	f7ff fd5b 	bl	8009598 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	4618      	mov	r0, r3
 8009ae6:	3708      	adds	r7, #8
 8009ae8:	46bd      	mov	sp, r7
 8009aea:	bd80      	pop	{r7, pc}
 8009aec:	08024088 	.word	0x08024088

08009af0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8009af0:	b580      	push	{r7, lr}
 8009af2:	b082      	sub	sp, #8
 8009af4:	af00      	add	r7, sp, #0
 8009af6:	6078      	str	r0, [r7, #4]
 8009af8:	6878      	ldr	r0, [r7, #4]
 8009afa:	f7ff ffe7 	bl	8009acc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8009afe:	214c      	movs	r1, #76	@ 0x4c
 8009b00:	6878      	ldr	r0, [r7, #4]
 8009b02:	f017 ffbe 	bl	8021a82 <_ZdlPvj>
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	4618      	mov	r0, r3
 8009b0a:	3708      	adds	r7, #8
 8009b0c:	46bd      	mov	sp, r7
 8009b0e:	bd80      	pop	{r7, pc}

08009b10 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b082      	sub	sp, #8
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	6078      	str	r0, [r7, #4]
 8009b18:	4a05      	ldr	r2, [pc, #20]	@ (8009b30 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	601a      	str	r2, [r3, #0]
 8009b1e:	687b      	ldr	r3, [r7, #4]
 8009b20:	4618      	mov	r0, r3
 8009b22:	f7ff f92f 	bl	8008d84 <_ZN8touchgfx8DrawableD1Ev>
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	4618      	mov	r0, r3
 8009b2a:	3708      	adds	r7, #8
 8009b2c:	46bd      	mov	sp, r7
 8009b2e:	bd80      	pop	{r7, pc}
 8009b30:	08024770 	.word	0x08024770

08009b34 <_ZN8touchgfx9ContainerD0Ev>:
 8009b34:	b580      	push	{r7, lr}
 8009b36:	b082      	sub	sp, #8
 8009b38:	af00      	add	r7, sp, #0
 8009b3a:	6078      	str	r0, [r7, #4]
 8009b3c:	6878      	ldr	r0, [r7, #4]
 8009b3e:	f7ff ffe7 	bl	8009b10 <_ZN8touchgfx9ContainerD1Ev>
 8009b42:	212c      	movs	r1, #44	@ 0x2c
 8009b44:	6878      	ldr	r0, [r7, #4]
 8009b46:	f017 ff9c 	bl	8021a82 <_ZdlPvj>
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	4618      	mov	r0, r3
 8009b4e:	3708      	adds	r7, #8
 8009b50:	46bd      	mov	sp, r7
 8009b52:	bd80      	pop	{r7, pc}

08009b54 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 8009b54:	b580      	push	{r7, lr}
 8009b56:	b082      	sub	sp, #8
 8009b58:	af00      	add	r7, sp, #0
 8009b5a:	6078      	str	r0, [r7, #4]
 8009b5c:	4a05      	ldr	r2, [pc, #20]	@ (8009b74 <_ZN8touchgfx3BoxD1Ev+0x20>)
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	601a      	str	r2, [r3, #0]
 8009b62:	687b      	ldr	r3, [r7, #4]
 8009b64:	4618      	mov	r0, r3
 8009b66:	f7ff fb1d 	bl	80091a4 <_ZN8touchgfx6WidgetD1Ev>
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	3708      	adds	r7, #8
 8009b70:	46bd      	mov	sp, r7
 8009b72:	bd80      	pop	{r7, pc}
 8009b74:	080249fc 	.word	0x080249fc

08009b78 <_ZN8touchgfx3BoxD0Ev>:
 8009b78:	b580      	push	{r7, lr}
 8009b7a:	b082      	sub	sp, #8
 8009b7c:	af00      	add	r7, sp, #0
 8009b7e:	6078      	str	r0, [r7, #4]
 8009b80:	6878      	ldr	r0, [r7, #4]
 8009b82:	f7ff ffe7 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009b86:	212c      	movs	r1, #44	@ 0x2c
 8009b88:	6878      	ldr	r0, [r7, #4]
 8009b8a:	f017 ff7a 	bl	8021a82 <_ZdlPvj>
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	4618      	mov	r0, r3
 8009b92:	3708      	adds	r7, #8
 8009b94:	46bd      	mov	sp, r7
 8009b96:	bd80      	pop	{r7, pc}

08009b98 <_ZN14screenViewBase11applicationEv>:
    virtual ~screenViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

protected:
    FrontendApplication& application() {
 8009b98:	b580      	push	{r7, lr}
 8009b9a:	b082      	sub	sp, #8
 8009b9c:	af00      	add	r7, sp, #0
 8009b9e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009ba0:	f006 faae 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 8009ba4:	4603      	mov	r3, r0
    }
 8009ba6:	4618      	mov	r0, r3
 8009ba8:	3708      	adds	r7, #8
 8009baa:	46bd      	mov	sp, r7
 8009bac:	bd80      	pop	{r7, pc}
	...

08009bb0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 8009bb0:	b580      	push	{r7, lr}
 8009bb2:	b082      	sub	sp, #8
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
 8009bb8:	4a05      	ldr	r2, [pc, #20]	@ (8009bd0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 8009bba:	687b      	ldr	r3, [r7, #4]
 8009bbc:	601a      	str	r2, [r3, #0]
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	4618      	mov	r0, r3
 8009bc2:	f7ff fa75 	bl	80090b0 <_ZN8touchgfx6ScreenD1Ev>
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	4618      	mov	r0, r3
 8009bca:	3708      	adds	r7, #8
 8009bcc:	46bd      	mov	sp, r7
 8009bce:	bd80      	pop	{r7, pc}
 8009bd0:	080241b4 	.word	0x080241b4

08009bd4 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 8009bd4:	b580      	push	{r7, lr}
 8009bd6:	b082      	sub	sp, #8
 8009bd8:	af00      	add	r7, sp, #0
 8009bda:	6078      	str	r0, [r7, #4]
 8009bdc:	6878      	ldr	r0, [r7, #4]
 8009bde:	f7ff ffe7 	bl	8009bb0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8009be2:	2140      	movs	r1, #64	@ 0x40
 8009be4:	6878      	ldr	r0, [r7, #4]
 8009be6:	f017 ff4c 	bl	8021a82 <_ZdlPvj>
 8009bea:	687b      	ldr	r3, [r7, #4]
 8009bec:	4618      	mov	r0, r3
 8009bee:	3708      	adds	r7, #8
 8009bf0:	46bd      	mov	sp, r7
 8009bf2:	bd80      	pop	{r7, pc}

08009bf4 <_ZN14screenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase()
 8009bf4:	b590      	push	{r4, r7, lr}
 8009bf6:	b09d      	sub	sp, #116	@ 0x74
 8009bf8:	af02      	add	r7, sp, #8
 8009bfa:	6178      	str	r0, [r7, #20]
 8009bfc:	697b      	ldr	r3, [r7, #20]
 8009bfe:	4618      	mov	r0, r3
 8009c00:	f000 fa0e 	bl	800a020 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 8009c04:	4acf      	ldr	r2, [pc, #828]	@ (8009f44 <_ZN14screenViewBaseC1Ev+0x350>)
 8009c06:	697b      	ldr	r3, [r7, #20]
 8009c08:	601a      	str	r2, [r3, #0]
 8009c0a:	697b      	ldr	r3, [r7, #20]
 8009c0c:	3340      	adds	r3, #64	@ 0x40
 8009c0e:	4618      	mov	r0, r3
 8009c10:	f7ff faea 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 8009c14:	697b      	ldr	r3, [r7, #20]
 8009c16:	336c      	adds	r3, #108	@ 0x6c
 8009c18:	4618      	mov	r0, r3
 8009c1a:	f7ff fae5 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 8009c1e:	697b      	ldr	r3, [r7, #20]
 8009c20:	3398      	adds	r3, #152	@ 0x98
 8009c22:	4618      	mov	r0, r3
 8009c24:	f7ff fcda 	bl	80095dc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009c28:	697b      	ldr	r3, [r7, #20]
 8009c2a:	33e4      	adds	r3, #228	@ 0xe4
 8009c2c:	4618      	mov	r0, r3
 8009c2e:	f7ff fadb 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
 8009c32:	697b      	ldr	r3, [r7, #20]
 8009c34:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 8009c38:	4618      	mov	r0, r3
 8009c3a:	f7ff fad5 	bl	80091e8 <_ZN8touchgfx3BoxC1Ev>
{
    __background.setPosition(0, 0, 320, 240);
 8009c3e:	697b      	ldr	r3, [r7, #20]
 8009c40:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 8009c44:	23f0      	movs	r3, #240	@ 0xf0
 8009c46:	9300      	str	r3, [sp, #0]
 8009c48:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009c4c:	2200      	movs	r2, #0
 8009c4e:	2100      	movs	r1, #0
 8009c50:	f7ff f8d6 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8009c54:	697b      	ldr	r3, [r7, #20]
 8009c56:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 8009c5a:	2300      	movs	r3, #0
 8009c5c:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
 8009c60:	2300      	movs	r3, #0
 8009c62:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
 8009c66:	2300      	movs	r3, #0
 8009c68:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8009c6c:	f897 3049 	ldrb.w	r3, [r7, #73]	@ 0x49
 8009c70:	041a      	lsls	r2, r3, #16
 8009c72:	f897 3048 	ldrb.w	r3, [r7, #72]	@ 0x48
 8009c76:	021b      	lsls	r3, r3, #8
 8009c78:	431a      	orrs	r2, r3
 8009c7a:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8009c7e:	4313      	orrs	r3, r2
 8009c80:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009c84:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 8009c88:	4611      	mov	r1, r2
 8009c8a:	4618      	mov	r0, r3
 8009c8c:	f7ff f804 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009c90:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8009c92:	4619      	mov	r1, r3
 8009c94:	4620      	mov	r0, r4
 8009c96:	f7ff facb 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 8009c9a:	697a      	ldr	r2, [r7, #20]
 8009c9c:	697b      	ldr	r3, [r7, #20]
 8009c9e:	3340      	adds	r3, #64	@ 0x40
 8009ca0:	4619      	mov	r1, r3
 8009ca2:	4610      	mov	r0, r2
 8009ca4:	f7ff fa5c 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box1.setPosition(0, 0, 320, 240);
 8009ca8:	697b      	ldr	r3, [r7, #20]
 8009caa:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 8009cae:	23f0      	movs	r3, #240	@ 0xf0
 8009cb0:	9300      	str	r3, [sp, #0]
 8009cb2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009cb6:	2200      	movs	r2, #0
 8009cb8:	2100      	movs	r1, #0
 8009cba:	f7ff f8a1 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8009cbe:	697b      	ldr	r3, [r7, #20]
 8009cc0:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8009cc4:	23ff      	movs	r3, #255	@ 0xff
 8009cc6:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
 8009cca:	23ff      	movs	r3, #255	@ 0xff
 8009ccc:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
 8009cd0:	23ff      	movs	r3, #255	@ 0xff
 8009cd2:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
 8009cd6:	f897 304c 	ldrb.w	r3, [r7, #76]	@ 0x4c
 8009cda:	041a      	lsls	r2, r3, #16
 8009cdc:	f897 304b 	ldrb.w	r3, [r7, #75]	@ 0x4b
 8009ce0:	021b      	lsls	r3, r3, #8
 8009ce2:	431a      	orrs	r2, r3
 8009ce4:	f897 304a 	ldrb.w	r3, [r7, #74]	@ 0x4a
 8009ce8:	4313      	orrs	r3, r2
 8009cea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009cee:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8009cf2:	4611      	mov	r1, r2
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	f7fe ffcf 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009cfa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009cfc:	4619      	mov	r1, r3
 8009cfe:	4620      	mov	r0, r4
 8009d00:	f7ff fa96 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box1);
 8009d04:	697a      	ldr	r2, [r7, #20]
 8009d06:	697b      	ldr	r3, [r7, #20]
 8009d08:	336c      	adds	r3, #108	@ 0x6c
 8009d0a:	4619      	mov	r1, r3
 8009d0c:	4610      	mov	r0, r2
 8009d0e:	f7ff fa27 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setPosition(10, 76, 301, 88);
 8009d12:	697b      	ldr	r3, [r7, #20]
 8009d14:	f103 0098 	add.w	r0, r3, #152	@ 0x98
 8009d18:	2358      	movs	r3, #88	@ 0x58
 8009d1a:	9300      	str	r3, [sp, #0]
 8009d1c:	f240 132d 	movw	r3, #301	@ 0x12d
 8009d20:	224c      	movs	r2, #76	@ 0x4c
 8009d22:	210a      	movs	r1, #10
 8009d24:	f7ff f86c 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8009d28:	697b      	ldr	r3, [r7, #20]
 8009d2a:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009d2e:	2300      	movs	r3, #0
 8009d30:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8009d34:	2300      	movs	r3, #0
 8009d36:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 8009d3a:	2300      	movs	r3, #0
 8009d3c:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8009d40:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8009d44:	041a      	lsls	r2, r3, #16
 8009d46:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8009d4a:	021b      	lsls	r3, r3, #8
 8009d4c:	431a      	orrs	r2, r3
 8009d4e:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8009d52:	4313      	orrs	r3, r2
 8009d54:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009d58:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8009d5c:	4611      	mov	r1, r2
 8009d5e:	4618      	mov	r0, r3
 8009d60:	f7fe ff9a 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009d64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009d66:	653c      	str	r4, [r7, #80]	@ 0x50
 8009d68:	61fb      	str	r3, [r7, #28]
        color = newColor;
 8009d6a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009d6c:	69fa      	ldr	r2, [r7, #28]
 8009d6e:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009d70:	bf00      	nop
    textArea1.setLinespacing(0);
 8009d72:	697b      	ldr	r3, [r7, #20]
 8009d74:	3398      	adds	r3, #152	@ 0x98
 8009d76:	65bb      	str	r3, [r7, #88]	@ 0x58
 8009d78:	2300      	movs	r3, #0
 8009d7a:	f8a7 3056 	strh.w	r3, [r7, #86]	@ 0x56
        linespace = space;
 8009d7e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009d80:	f8b7 2056 	ldrh.w	r2, [r7, #86]	@ 0x56
 8009d84:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 8009d86:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009d88:	681b      	ldr	r3, [r3, #0]
 8009d8a:	3384      	adds	r3, #132	@ 0x84
 8009d8c:	681b      	ldr	r3, [r3, #0]
 8009d8e:	6dbc      	ldr	r4, [r7, #88]	@ 0x58
 8009d90:	463a      	mov	r2, r7
 8009d92:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 8009d94:	4610      	mov	r0, r2
 8009d96:	4798      	blx	r3
 8009d98:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009d9c:	463a      	mov	r2, r7
 8009d9e:	ca07      	ldmia	r2, {r0, r1, r2}
 8009da0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009da4:	bf00      	nop
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y9WY).getText());
 8009da6:	697b      	ldr	r3, [r7, #20]
 8009da8:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 8009dac:	f107 0320 	add.w	r3, r7, #32
 8009db0:	2102      	movs	r1, #2
 8009db2:	4618      	mov	r0, r3
 8009db4:	f7ff fa4a 	bl	800924c <_ZN8touchgfx9TypedTextC1Et>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009db8:	4b63      	ldr	r3, [pc, #396]	@ (8009f48 <_ZN14screenViewBaseC1Ev+0x354>)
 8009dba:	681b      	ldr	r3, [r3, #0]
 8009dbc:	2b00      	cmp	r3, #0
 8009dbe:	d105      	bne.n	8009dcc <_ZN14screenViewBaseC1Ev+0x1d8>
 8009dc0:	4b62      	ldr	r3, [pc, #392]	@ (8009f4c <_ZN14screenViewBaseC1Ev+0x358>)
 8009dc2:	4a63      	ldr	r2, [pc, #396]	@ (8009f50 <_ZN14screenViewBaseC1Ev+0x35c>)
 8009dc4:	2160      	movs	r1, #96	@ 0x60
 8009dc6:	4863      	ldr	r0, [pc, #396]	@ (8009f54 <_ZN14screenViewBaseC1Ev+0x360>)
 8009dc8:	f017 fe88 	bl	8021adc <__assert_func>
 8009dcc:	f107 0320 	add.w	r3, r7, #32
 8009dd0:	65fb      	str	r3, [r7, #92]	@ 0x5c
        return typedTextId < numberOfTypedTexts;
 8009dd2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009dd4:	889a      	ldrh	r2, [r3, #4]
 8009dd6:	4b60      	ldr	r3, [pc, #384]	@ (8009f58 <_ZN14screenViewBaseC1Ev+0x364>)
 8009dd8:	881b      	ldrh	r3, [r3, #0]
 8009dda:	429a      	cmp	r2, r3
 8009ddc:	bf34      	ite	cc
 8009dde:	2301      	movcc	r3, #1
 8009de0:	2300      	movcs	r3, #0
 8009de2:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009de4:	2b00      	cmp	r3, #0
 8009de6:	d105      	bne.n	8009df4 <_ZN14screenViewBaseC1Ev+0x200>
 8009de8:	4b5c      	ldr	r3, [pc, #368]	@ (8009f5c <_ZN14screenViewBaseC1Ev+0x368>)
 8009dea:	4a59      	ldr	r2, [pc, #356]	@ (8009f50 <_ZN14screenViewBaseC1Ev+0x35c>)
 8009dec:	2161      	movs	r1, #97	@ 0x61
 8009dee:	4859      	ldr	r0, [pc, #356]	@ (8009f54 <_ZN14screenViewBaseC1Ev+0x360>)
 8009df0:	f017 fe74 	bl	8021adc <__assert_func>
        return texts->getText(typedTextId);
 8009df4:	4b5a      	ldr	r3, [pc, #360]	@ (8009f60 <_ZN14screenViewBaseC1Ev+0x36c>)
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8009dfa:	4611      	mov	r1, r2
 8009dfc:	4618      	mov	r0, r3
 8009dfe:	f000 fac9 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 8009e02:	4603      	mov	r3, r0
 8009e04:	bf00      	nop
 8009e06:	4a57      	ldr	r2, [pc, #348]	@ (8009f64 <_ZN14screenViewBaseC1Ev+0x370>)
 8009e08:	210a      	movs	r1, #10
 8009e0a:	4620      	mov	r0, r4
 8009e0c:	f009 fa77 	bl	80132fe <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8009e10:	f107 0320 	add.w	r3, r7, #32
 8009e14:	4618      	mov	r0, r3
 8009e16:	f7fd fe71 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
    textArea1.setWildcard(textArea1Buffer);
 8009e1a:	697b      	ldr	r3, [r7, #20]
 8009e1c:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 8009e20:	697b      	ldr	r3, [r7, #20]
 8009e22:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 8009e26:	4619      	mov	r1, r3
 8009e28:	4610      	mov	r0, r2
 8009e2a:	f7ff fc07 	bl	800963c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1IKV));
 8009e2e:	697b      	ldr	r3, [r7, #20]
 8009e30:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009e34:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009e38:	2103      	movs	r1, #3
 8009e3a:	4618      	mov	r0, r3
 8009e3c:	f7ff fa06 	bl	800924c <_ZN8touchgfx9TypedTextC1Et>
 8009e40:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009e44:	4619      	mov	r1, r3
 8009e46:	4620      	mov	r0, r4
 8009e48:	f004 fbc4 	bl	800e5d4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009e4c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009e50:	4618      	mov	r0, r3
 8009e52:	f7fd fe53 	bl	8007afc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 8009e56:	697a      	ldr	r2, [r7, #20]
 8009e58:	697b      	ldr	r3, [r7, #20]
 8009e5a:	3398      	adds	r3, #152	@ 0x98
 8009e5c:	4619      	mov	r1, r3
 8009e5e:	4610      	mov	r0, r2
 8009e60:	f7ff f97e 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2.setPosition(0, 0, 320, 50);
 8009e64:	697b      	ldr	r3, [r7, #20]
 8009e66:	f103 00e4 	add.w	r0, r3, #228	@ 0xe4
 8009e6a:	2332      	movs	r3, #50	@ 0x32
 8009e6c:	9300      	str	r3, [sp, #0]
 8009e6e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009e72:	2200      	movs	r2, #0
 8009e74:	2100      	movs	r1, #0
 8009e76:	f7fe ffc3 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box2.setColor(touchgfx::Color::getColorFromRGB(24, 214, 62));
 8009e7a:	697b      	ldr	r3, [r7, #20]
 8009e7c:	f103 04e4 	add.w	r4, r3, #228	@ 0xe4
 8009e80:	2318      	movs	r3, #24
 8009e82:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 8009e86:	23d6      	movs	r3, #214	@ 0xd6
 8009e88:	f887 3063 	strb.w	r3, [r7, #99]	@ 0x63
 8009e8c:	233e      	movs	r3, #62	@ 0x3e
 8009e8e:	f887 3062 	strb.w	r3, [r7, #98]	@ 0x62
 8009e92:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 8009e96:	041a      	lsls	r2, r3, #16
 8009e98:	f897 3063 	ldrb.w	r3, [r7, #99]	@ 0x63
 8009e9c:	021b      	lsls	r3, r3, #8
 8009e9e:	431a      	orrs	r2, r3
 8009ea0:	f897 3062 	ldrb.w	r3, [r7, #98]	@ 0x62
 8009ea4:	4313      	orrs	r3, r2
 8009ea6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009eaa:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009eae:	4611      	mov	r1, r2
 8009eb0:	4618      	mov	r0, r3
 8009eb2:	f7fe fef1 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009eb6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009eb8:	4619      	mov	r1, r3
 8009eba:	4620      	mov	r0, r4
 8009ebc:	f7ff f9b8 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2);
 8009ec0:	697a      	ldr	r2, [r7, #20]
 8009ec2:	697b      	ldr	r3, [r7, #20]
 8009ec4:	33e4      	adds	r3, #228	@ 0xe4
 8009ec6:	4619      	mov	r1, r3
 8009ec8:	4610      	mov	r0, r2
 8009eca:	f7ff f949 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    box2_1.setPosition(0, 190, 320, 50);
 8009ece:	697b      	ldr	r3, [r7, #20]
 8009ed0:	f503 7088 	add.w	r0, r3, #272	@ 0x110
 8009ed4:	2332      	movs	r3, #50	@ 0x32
 8009ed6:	9300      	str	r3, [sp, #0]
 8009ed8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009edc:	22be      	movs	r2, #190	@ 0xbe
 8009ede:	2100      	movs	r1, #0
 8009ee0:	f7fe ff8e 	bl	8008e00 <_ZN8touchgfx8Drawable11setPositionEssss>
    box2_1.setColor(touchgfx::Color::getColorFromRGB(25, 125, 212));
 8009ee4:	697b      	ldr	r3, [r7, #20]
 8009ee6:	f503 7488 	add.w	r4, r3, #272	@ 0x110
 8009eea:	2319      	movs	r3, #25
 8009eec:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 8009ef0:	237d      	movs	r3, #125	@ 0x7d
 8009ef2:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
 8009ef6:	23d4      	movs	r3, #212	@ 0xd4
 8009ef8:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
 8009efc:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8009f00:	041a      	lsls	r2, r3, #16
 8009f02:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8009f06:	021b      	lsls	r3, r3, #8
 8009f08:	431a      	orrs	r2, r3
 8009f0a:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 8009f0e:	4313      	orrs	r3, r2
 8009f10:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009f14:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8009f18:	4611      	mov	r1, r2
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f7fe febc 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 8009f20:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009f22:	4619      	mov	r1, r3
 8009f24:	4620      	mov	r0, r4
 8009f26:	f7ff f983 	bl	8009230 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(box2_1);
 8009f2a:	697a      	ldr	r2, [r7, #20]
 8009f2c:	697b      	ldr	r3, [r7, #20]
 8009f2e:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 8009f32:	4619      	mov	r1, r3
 8009f34:	4610      	mov	r0, r2
 8009f36:	f7ff f913 	bl	8009160 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8009f3a:	697b      	ldr	r3, [r7, #20]
 8009f3c:	4618      	mov	r0, r3
 8009f3e:	376c      	adds	r7, #108	@ 0x6c
 8009f40:	46bd      	mov	sp, r7
 8009f42:	bd90      	pop	{r4, r7, pc}
 8009f44:	08024180 	.word	0x08024180
 8009f48:	20002280 	.word	0x20002280
 8009f4c:	0802306c 	.word	0x0802306c
 8009f50:	08023170 	.word	0x08023170
 8009f54:	080230ec 	.word	0x080230ec
 8009f58:	20002284 	.word	0x20002284
 8009f5c:	08023130 	.word	0x08023130
 8009f60:	2000228c 	.word	0x2000228c
 8009f64:	080231bc 	.word	0x080231bc

08009f68 <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 8009f68:	b580      	push	{r7, lr}
 8009f6a:	b082      	sub	sp, #8
 8009f6c:	af00      	add	r7, sp, #0
 8009f6e:	6078      	str	r0, [r7, #4]
 8009f70:	4a12      	ldr	r2, [pc, #72]	@ (8009fbc <_ZN14screenViewBaseD1Ev+0x54>)
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	601a      	str	r2, [r3, #0]
{

}
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 8009f7c:	4618      	mov	r0, r3
 8009f7e:	f7ff fde9 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009f82:	687b      	ldr	r3, [r7, #4]
 8009f84:	33e4      	adds	r3, #228	@ 0xe4
 8009f86:	4618      	mov	r0, r3
 8009f88:	f7ff fde4 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	3398      	adds	r3, #152	@ 0x98
 8009f90:	4618      	mov	r0, r3
 8009f92:	f7ff fd9b 	bl	8009acc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8009f96:	687b      	ldr	r3, [r7, #4]
 8009f98:	336c      	adds	r3, #108	@ 0x6c
 8009f9a:	4618      	mov	r0, r3
 8009f9c:	f7ff fdda 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009fa0:	687b      	ldr	r3, [r7, #4]
 8009fa2:	3340      	adds	r3, #64	@ 0x40
 8009fa4:	4618      	mov	r0, r3
 8009fa6:	f7ff fdd5 	bl	8009b54 <_ZN8touchgfx3BoxD1Ev>
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	4618      	mov	r0, r3
 8009fae:	f7ff fdff 	bl	8009bb0 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8009fb2:	687b      	ldr	r3, [r7, #4]
 8009fb4:	4618      	mov	r0, r3
 8009fb6:	3708      	adds	r7, #8
 8009fb8:	46bd      	mov	sp, r7
 8009fba:	bd80      	pop	{r7, pc}
 8009fbc:	08024180 	.word	0x08024180

08009fc0 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 8009fc0:	b580      	push	{r7, lr}
 8009fc2:	b082      	sub	sp, #8
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
}
 8009fc8:	6878      	ldr	r0, [r7, #4]
 8009fca:	f7ff ffcd 	bl	8009f68 <_ZN14screenViewBaseD1Ev>
 8009fce:	f44f 71a8 	mov.w	r1, #336	@ 0x150
 8009fd2:	6878      	ldr	r0, [r7, #4]
 8009fd4:	f017 fd55 	bl	8021a82 <_ZdlPvj>
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	4618      	mov	r0, r3
 8009fdc:	3708      	adds	r7, #8
 8009fde:	46bd      	mov	sp, r7
 8009fe0:	bd80      	pop	{r7, pc}

08009fe2 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 8009fe2:	b480      	push	{r7}
 8009fe4:	b083      	sub	sp, #12
 8009fe6:	af00      	add	r7, sp, #0
 8009fe8:	6078      	str	r0, [r7, #4]

}
 8009fea:	bf00      	nop
 8009fec:	370c      	adds	r7, #12
 8009fee:	46bd      	mov	sp, r7
 8009ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ff4:	4770      	bx	lr

08009ff6 <_ZN14screenViewBase14handleKeyEventEh>:

void screenViewBase::handleKeyEvent(uint8_t key)
{
 8009ff6:	b580      	push	{r7, lr}
 8009ff8:	b082      	sub	sp, #8
 8009ffa:	af00      	add	r7, sp, #0
 8009ffc:	6078      	str	r0, [r7, #4]
 8009ffe:	460b      	mov	r3, r1
 800a000:	70fb      	strb	r3, [r7, #3]
    if(0 == key)
 800a002:	78fb      	ldrb	r3, [r7, #3]
 800a004:	2b00      	cmp	r3, #0
 800a006:	d106      	bne.n	800a016 <_ZN14screenViewBase14handleKeyEventEh+0x20>
    {
        //Interaction1
        //When hardware button 0 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
 800a008:	6878      	ldr	r0, [r7, #4]
 800a00a:	f7ff fdc5 	bl	8009b98 <_ZN14screenViewBase11applicationEv>
 800a00e:	4603      	mov	r3, r0
 800a010:	4618      	mov	r0, r3
 800a012:	f7fe fa65 	bl	80084e0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    
    }
}
 800a016:	bf00      	nop
 800a018:	3708      	adds	r7, #8
 800a01a:	46bd      	mov	sp, r7
 800a01c:	bd80      	pop	{r7, pc}
	...

0800a020 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800a020:	b580      	push	{r7, lr}
 800a022:	b082      	sub	sp, #8
 800a024:	af00      	add	r7, sp, #0
 800a026:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	4618      	mov	r0, r3
 800a02c:	f007 fcba 	bl	80119a4 <_ZN8touchgfx6ScreenC1Ev>
 800a030:	4a05      	ldr	r2, [pc, #20]	@ (800a048 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800a032:	687b      	ldr	r3, [r7, #4]
 800a034:	601a      	str	r2, [r3, #0]
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	2200      	movs	r2, #0
 800a03a:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	4618      	mov	r0, r3
 800a040:	3708      	adds	r7, #8
 800a042:	46bd      	mov	sp, r7
 800a044:	bd80      	pop	{r7, pc}
 800a046:	bf00      	nop
 800a048:	080241b4 	.word	0x080241b4

0800a04c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800a04c:	b480      	push	{r7}
 800a04e:	af00      	add	r7, sp, #0
    return bitmap_database;
 800a050:	4b02      	ldr	r3, [pc, #8]	@ (800a05c <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800a052:	4618      	mov	r0, r3
 800a054:	46bd      	mov	sp, r7
 800a056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a05a:	4770      	bx	lr
 800a05c:	080241e0 	.word	0x080241e0

0800a060 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800a060:	b480      	push	{r7}
 800a062:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800a064:	2301      	movs	r3, #1
}
 800a066:	4618      	mov	r0, r3
 800a068:	46bd      	mov	sp, r7
 800a06a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a06e:	4770      	bx	lr

0800a070 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800a070:	b480      	push	{r7}
 800a072:	b085      	sub	sp, #20
 800a074:	af00      	add	r7, sp, #0
 800a076:	60f8      	str	r0, [r7, #12]
 800a078:	460b      	mov	r3, r1
 800a07a:	607a      	str	r2, [r7, #4]
 800a07c:	817b      	strh	r3, [r7, #10]
        return 0;
 800a07e:	2300      	movs	r3, #0
    }
 800a080:	4618      	mov	r0, r3
 800a082:	3714      	adds	r7, #20
 800a084:	46bd      	mov	sp, r7
 800a086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a08a:	4770      	bx	lr

0800a08c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800a08c:	b480      	push	{r7}
 800a08e:	b083      	sub	sp, #12
 800a090:	af00      	add	r7, sp, #0
 800a092:	6078      	str	r0, [r7, #4]
        return 0;
 800a094:	2300      	movs	r3, #0
    }
 800a096:	4618      	mov	r0, r3
 800a098:	370c      	adds	r7, #12
 800a09a:	46bd      	mov	sp, r7
 800a09c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0a0:	4770      	bx	lr

0800a0a2 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a0a2:	b480      	push	{r7}
 800a0a4:	b083      	sub	sp, #12
 800a0a6:	af00      	add	r7, sp, #0
 800a0a8:	6078      	str	r0, [r7, #4]
        return 0;
 800a0aa:	2300      	movs	r3, #0
    }
 800a0ac:	4618      	mov	r0, r3
 800a0ae:	370c      	adds	r7, #12
 800a0b0:	46bd      	mov	sp, r7
 800a0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0b6:	4770      	bx	lr

0800a0b8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800a0b8:	b480      	push	{r7}
 800a0ba:	b085      	sub	sp, #20
 800a0bc:	af00      	add	r7, sp, #0
 800a0be:	60f8      	str	r0, [r7, #12]
 800a0c0:	60b9      	str	r1, [r7, #8]
 800a0c2:	4613      	mov	r3, r2
 800a0c4:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800a0c6:	4a07      	ldr	r2, [pc, #28]	@ (800a0e4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800a0c8:	68fb      	ldr	r3, [r7, #12]
 800a0ca:	6013      	str	r3, [r2, #0]
        fonts = f;
 800a0cc:	4a06      	ldr	r2, [pc, #24]	@ (800a0e8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800a0ce:	68bb      	ldr	r3, [r7, #8]
 800a0d0:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800a0d2:	4a06      	ldr	r2, [pc, #24]	@ (800a0ec <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800a0d4:	88fb      	ldrh	r3, [r7, #6]
 800a0d6:	8013      	strh	r3, [r2, #0]
    }
 800a0d8:	bf00      	nop
 800a0da:	3714      	adds	r7, #20
 800a0dc:	46bd      	mov	sp, r7
 800a0de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e2:	4770      	bx	lr
 800a0e4:	20002280 	.word	0x20002280
 800a0e8:	20002288 	.word	0x20002288
 800a0ec:	20002284 	.word	0x20002284

0800a0f0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a0f0:	b40e      	push	{r1, r2, r3}
 800a0f2:	b580      	push	{r7, lr}
 800a0f4:	b085      	sub	sp, #20
 800a0f6:	af00      	add	r7, sp, #0
 800a0f8:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800a0fa:	f107 0320 	add.w	r3, r7, #32
 800a0fe:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a100:	68bb      	ldr	r3, [r7, #8]
 800a102:	69fa      	ldr	r2, [r7, #28]
 800a104:	2100      	movs	r1, #0
 800a106:	6878      	ldr	r0, [r7, #4]
 800a108:	f007 f882 	bl	8011210 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a10c:	4603      	mov	r3, r0
 800a10e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a110:	89fb      	ldrh	r3, [r7, #14]
}
 800a112:	4618      	mov	r0, r3
 800a114:	3714      	adds	r7, #20
 800a116:	46bd      	mov	sp, r7
 800a118:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a11c:	b003      	add	sp, #12
 800a11e:	4770      	bx	lr

0800a120 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a120:	b40c      	push	{r2, r3}
 800a122:	b580      	push	{r7, lr}
 800a124:	b084      	sub	sp, #16
 800a126:	af00      	add	r7, sp, #0
 800a128:	6078      	str	r0, [r7, #4]
 800a12a:	460b      	mov	r3, r1
 800a12c:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800a12e:	f107 031c 	add.w	r3, r7, #28
 800a132:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a134:	78f9      	ldrb	r1, [r7, #3]
 800a136:	68bb      	ldr	r3, [r7, #8]
 800a138:	69ba      	ldr	r2, [r7, #24]
 800a13a:	6878      	ldr	r0, [r7, #4]
 800a13c:	f007 f868 	bl	8011210 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a140:	4603      	mov	r3, r0
 800a142:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a144:	89fb      	ldrh	r3, [r7, #14]
}
 800a146:	4618      	mov	r0, r3
 800a148:	3710      	adds	r7, #16
 800a14a:	46bd      	mov	sp, r7
 800a14c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a150:	b002      	add	sp, #8
 800a152:	4770      	bx	lr

0800a154 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800a154:	b580      	push	{r7, lr}
 800a156:	b08a      	sub	sp, #40	@ 0x28
 800a158:	af00      	add	r7, sp, #0
 800a15a:	6078      	str	r0, [r7, #4]
 800a15c:	460b      	mov	r3, r1
 800a15e:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800a160:	687b      	ldr	r3, [r7, #4]
 800a162:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a164:	2b00      	cmp	r3, #0
 800a166:	d016      	beq.n	800a196 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	3322      	adds	r3, #34	@ 0x22
 800a16c:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a16e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a170:	8adb      	ldrh	r3, [r3, #22]
 800a172:	2b00      	cmp	r3, #0
 800a174:	d105      	bne.n	800a182 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800a176:	4b43      	ldr	r3, [pc, #268]	@ (800a284 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a178:	4a43      	ldr	r2, [pc, #268]	@ (800a288 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a17a:	21c5      	movs	r1, #197	@ 0xc5
 800a17c:	4843      	ldr	r0, [pc, #268]	@ (800a28c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a17e:	f017 fcad 	bl	8021adc <__assert_func>
            return buffer[pos];
 800a182:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a184:	8a9b      	ldrh	r3, [r3, #20]
 800a186:	461a      	mov	r2, r3
 800a188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a18a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800a18e:	2b00      	cmp	r3, #0
 800a190:	d001      	beq.n	800a196 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a192:	2301      	movs	r3, #1
 800a194:	e000      	b.n	800a198 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800a196:	2300      	movs	r3, #0
 800a198:	2b00      	cmp	r3, #0
 800a19a:	d06a      	beq.n	800a272 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800a19c:	6878      	ldr	r0, [r7, #4]
 800a19e:	f008 fb06 	bl	80127ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	3322      	adds	r3, #34	@ 0x22
 800a1a6:	623b      	str	r3, [r7, #32]
 800a1a8:	2301      	movs	r3, #1
 800a1aa:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a1ac:	6a3b      	ldr	r3, [r7, #32]
 800a1ae:	8adb      	ldrh	r3, [r3, #22]
 800a1b0:	8bfa      	ldrh	r2, [r7, #30]
 800a1b2:	429a      	cmp	r2, r3
 800a1b4:	d305      	bcc.n	800a1c2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800a1b6:	4b36      	ldr	r3, [pc, #216]	@ (800a290 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800a1b8:	4a36      	ldr	r2, [pc, #216]	@ (800a294 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800a1ba:	21cb      	movs	r1, #203	@ 0xcb
 800a1bc:	4833      	ldr	r0, [pc, #204]	@ (800a28c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a1be:	f017 fc8d 	bl	8021adc <__assert_func>
            const uint16_t index = pos + offset;
 800a1c2:	6a3b      	ldr	r3, [r7, #32]
 800a1c4:	8a9a      	ldrh	r2, [r3, #20]
 800a1c6:	8bfb      	ldrh	r3, [r7, #30]
 800a1c8:	4413      	add	r3, r2
 800a1ca:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800a1cc:	8bbb      	ldrh	r3, [r7, #28]
 800a1ce:	2b09      	cmp	r3, #9
 800a1d0:	d801      	bhi.n	800a1d6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800a1d2:	8bbb      	ldrh	r3, [r7, #28]
 800a1d4:	e001      	b.n	800a1da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800a1d6:	8bbb      	ldrh	r3, [r7, #28]
 800a1d8:	3b0a      	subs	r3, #10
 800a1da:	6a3a      	ldr	r2, [r7, #32]
 800a1dc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a1e0:	f640 123f 	movw	r2, #2367	@ 0x93f
 800a1e4:	4293      	cmp	r3, r2
 800a1e6:	bf0c      	ite	eq
 800a1e8:	2301      	moveq	r3, #1
 800a1ea:	2300      	movne	r3, #0
 800a1ec:	b2db      	uxtb	r3, r3
 800a1ee:	2b00      	cmp	r3, #0
 800a1f0:	d03f      	beq.n	800a272 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800a1f2:	687b      	ldr	r3, [r7, #4]
 800a1f4:	3322      	adds	r3, #34	@ 0x22
 800a1f6:	687a      	ldr	r2, [r7, #4]
 800a1f8:	3222      	adds	r2, #34	@ 0x22
 800a1fa:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800a1fc:	68ba      	ldr	r2, [r7, #8]
 800a1fe:	8ad2      	ldrh	r2, [r2, #22]
 800a200:	2a00      	cmp	r2, #0
 800a202:	d105      	bne.n	800a210 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800a204:	4b1f      	ldr	r3, [pc, #124]	@ (800a284 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a206:	4a20      	ldr	r2, [pc, #128]	@ (800a288 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a208:	21c5      	movs	r1, #197	@ 0xc5
 800a20a:	4820      	ldr	r0, [pc, #128]	@ (800a28c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a20c:	f017 fc66 	bl	8021adc <__assert_func>
            return buffer[pos];
 800a210:	68ba      	ldr	r2, [r7, #8]
 800a212:	8a92      	ldrh	r2, [r2, #20]
 800a214:	4611      	mov	r1, r2
 800a216:	68ba      	ldr	r2, [r7, #8]
 800a218:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800a21c:	613b      	str	r3, [r7, #16]
 800a21e:	4613      	mov	r3, r2
 800a220:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800a222:	693b      	ldr	r3, [r7, #16]
 800a224:	8adb      	ldrh	r3, [r3, #22]
 800a226:	2b01      	cmp	r3, #1
 800a228:	d806      	bhi.n	800a238 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800a22a:	4b1b      	ldr	r3, [pc, #108]	@ (800a298 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800a22c:	4a1b      	ldr	r2, [pc, #108]	@ (800a29c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800a22e:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800a232:	4816      	ldr	r0, [pc, #88]	@ (800a28c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a234:	f017 fc52 	bl	8021adc <__assert_func>
            const uint16_t index = pos + 1;
 800a238:	693b      	ldr	r3, [r7, #16]
 800a23a:	8a9b      	ldrh	r3, [r3, #20]
 800a23c:	3301      	adds	r3, #1
 800a23e:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800a240:	89bb      	ldrh	r3, [r7, #12]
 800a242:	2b09      	cmp	r3, #9
 800a244:	d801      	bhi.n	800a24a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800a246:	89bb      	ldrh	r3, [r7, #12]
 800a248:	e000      	b.n	800a24c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800a24a:	2300      	movs	r3, #0
 800a24c:	693a      	ldr	r2, [r7, #16]
 800a24e:	89f9      	ldrh	r1, [r7, #14]
 800a250:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800a254:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800a256:	687b      	ldr	r3, [r7, #4]
 800a258:	3322      	adds	r3, #34	@ 0x22
 800a25a:	61bb      	str	r3, [r7, #24]
 800a25c:	f640 133f 	movw	r3, #2367	@ 0x93f
 800a260:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800a262:	69bb      	ldr	r3, [r7, #24]
 800a264:	8a9b      	ldrh	r3, [r3, #20]
 800a266:	4619      	mov	r1, r3
 800a268:	69bb      	ldr	r3, [r7, #24]
 800a26a:	8afa      	ldrh	r2, [r7, #22]
 800a26c:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800a270:	bf00      	nop
        }
    }
    return getNextChar();
 800a272:	6878      	ldr	r0, [r7, #4]
 800a274:	f008 f99e 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a278:	4603      	mov	r3, r0
}
 800a27a:	4618      	mov	r0, r3
 800a27c:	3728      	adds	r7, #40	@ 0x28
 800a27e:	46bd      	mov	sp, r7
 800a280:	bd80      	pop	{r7, pc}
 800a282:	bf00      	nop
 800a284:	080231c0 	.word	0x080231c0
 800a288:	080231cc 	.word	0x080231cc
 800a28c:	08023278 	.word	0x08023278
 800a290:	080232c0 	.word	0x080232c0
 800a294:	080232d0 	.word	0x080232d0
 800a298:	080233a4 	.word	0x080233a4
 800a29c:	080233b0 	.word	0x080233b0

0800a2a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800a2a0:	b580      	push	{r7, lr}
 800a2a2:	b082      	sub	sp, #8
 800a2a4:	af00      	add	r7, sp, #0
 800a2a6:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800a2a8:	6878      	ldr	r0, [r7, #4]
 800a2aa:	f008 f94a 	bl	8012542 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800a2ae:	bf00      	nop
 800a2b0:	3708      	adds	r7, #8
 800a2b2:	46bd      	mov	sp, r7
 800a2b4:	bd80      	pop	{r7, pc}

0800a2b6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a2b6:	b580      	push	{r7, lr}
 800a2b8:	b088      	sub	sp, #32
 800a2ba:	af02      	add	r7, sp, #8
 800a2bc:	60f8      	str	r0, [r7, #12]
 800a2be:	1d38      	adds	r0, r7, #4
 800a2c0:	e880 0006 	stmia.w	r0, {r1, r2}
 800a2c4:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800a2c6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800a2ca:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a2cc:	1d39      	adds	r1, r7, #4
 800a2ce:	697b      	ldr	r3, [r7, #20]
 800a2d0:	9301      	str	r3, [sp, #4]
 800a2d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a2d4:	9300      	str	r3, [sp, #0]
 800a2d6:	6a3b      	ldr	r3, [r7, #32]
 800a2d8:	683a      	ldr	r2, [r7, #0]
 800a2da:	68f8      	ldr	r0, [r7, #12]
 800a2dc:	f005 fab8 	bl	800f850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a2e0:	bf00      	nop
 800a2e2:	3718      	adds	r7, #24
 800a2e4:	46bd      	mov	sp, r7
 800a2e6:	bd80      	pop	{r7, pc}

0800a2e8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a2e8:	b590      	push	{r4, r7, lr}
 800a2ea:	b085      	sub	sp, #20
 800a2ec:	af00      	add	r7, sp, #0
 800a2ee:	4603      	mov	r3, r0
 800a2f0:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800a2f2:	2300      	movs	r3, #0
 800a2f4:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800a2f6:	88fb      	ldrh	r3, [r7, #6]
 800a2f8:	2b00      	cmp	r3, #0
 800a2fa:	d127      	bne.n	800a34c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800a2fc:	88fb      	ldrh	r3, [r7, #6]
 800a2fe:	4a1e      	ldr	r2, [pc, #120]	@ (800a378 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a300:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a304:	2b00      	cmp	r3, #0
 800a306:	d016      	beq.n	800a336 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800a308:	88fb      	ldrh	r3, [r7, #6]
 800a30a:	4a1b      	ldr	r2, [pc, #108]	@ (800a378 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a30c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a310:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a312:	68bb      	ldr	r3, [r7, #8]
 800a314:	681b      	ldr	r3, [r3, #0]
 800a316:	68ba      	ldr	r2, [r7, #8]
 800a318:	4413      	add	r3, r2
 800a31a:	4a18      	ldr	r2, [pc, #96]	@ (800a37c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a31c:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a31e:	68bb      	ldr	r3, [r7, #8]
 800a320:	685b      	ldr	r3, [r3, #4]
 800a322:	68ba      	ldr	r2, [r7, #8]
 800a324:	4413      	add	r3, r2
 800a326:	4a16      	ldr	r2, [pc, #88]	@ (800a380 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a328:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a32a:	68bb      	ldr	r3, [r7, #8]
 800a32c:	689b      	ldr	r3, [r3, #8]
 800a32e:	68ba      	ldr	r2, [r7, #8]
 800a330:	4413      	add	r3, r2
 800a332:	60fb      	str	r3, [r7, #12]
 800a334:	e00a      	b.n	800a34c <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800a336:	4b11      	ldr	r3, [pc, #68]	@ (800a37c <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a338:	4a12      	ldr	r2, [pc, #72]	@ (800a384 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800a33a:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a33c:	4a12      	ldr	r2, [pc, #72]	@ (800a388 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800a33e:	4b10      	ldr	r3, [pc, #64]	@ (800a380 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a340:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a342:	88fb      	ldrh	r3, [r7, #6]
 800a344:	4a11      	ldr	r2, [pc, #68]	@ (800a38c <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800a346:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a34a:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	2b00      	cmp	r3, #0
 800a350:	d00d      	beq.n	800a36e <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800a352:	4a0f      	ldr	r2, [pc, #60]	@ (800a390 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800a354:	88fb      	ldrh	r3, [r7, #6]
 800a356:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a358:	f000 f83e 	bl	800a3d8 <_ZN17TypedTextDatabase8getFontsEv>
 800a35c:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a35e:	f000 f833 	bl	800a3c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800a362:	4603      	mov	r3, r0
 800a364:	461a      	mov	r2, r3
 800a366:	4621      	mov	r1, r4
 800a368:	68f8      	ldr	r0, [r7, #12]
 800a36a:	f7ff fea5 	bl	800a0b8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800a36e:	bf00      	nop
 800a370:	3714      	adds	r7, #20
 800a372:	46bd      	mov	sp, r7
 800a374:	bd90      	pop	{r4, r7, pc}
 800a376:	bf00      	nop
 800a378:	20000578 	.word	0x20000578
 800a37c:	20000580 	.word	0x20000580
 800a380:	20000584 	.word	0x20000584
 800a384:	08028944 	.word	0x08028944
 800a388:	08028934 	.word	0x08028934
 800a38c:	08028954 	.word	0x08028954
 800a390:	2000057c 	.word	0x2000057c

0800a394 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800a394:	b480      	push	{r7}
 800a396:	b083      	sub	sp, #12
 800a398:	af00      	add	r7, sp, #0
 800a39a:	6078      	str	r0, [r7, #4]
 800a39c:	460b      	mov	r3, r1
 800a39e:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a3a0:	4b07      	ldr	r3, [pc, #28]	@ (800a3c0 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800a3a2:	681a      	ldr	r2, [r3, #0]
 800a3a4:	4b07      	ldr	r3, [pc, #28]	@ (800a3c4 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800a3a6:	6819      	ldr	r1, [r3, #0]
 800a3a8:	887b      	ldrh	r3, [r7, #2]
 800a3aa:	009b      	lsls	r3, r3, #2
 800a3ac:	440b      	add	r3, r1
 800a3ae:	681b      	ldr	r3, [r3, #0]
 800a3b0:	005b      	lsls	r3, r3, #1
 800a3b2:	4413      	add	r3, r2
}
 800a3b4:	4618      	mov	r0, r3
 800a3b6:	370c      	adds	r7, #12
 800a3b8:	46bd      	mov	sp, r7
 800a3ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3be:	4770      	bx	lr
 800a3c0:	20000580 	.word	0x20000580
 800a3c4:	20000584 	.word	0x20000584

0800a3c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800a3c8:	b480      	push	{r7}
 800a3ca:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800a3cc:	2304      	movs	r3, #4
}
 800a3ce:	4618      	mov	r0, r3
 800a3d0:	46bd      	mov	sp, r7
 800a3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d6:	4770      	bx	lr

0800a3d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800a3d8:	b480      	push	{r7}
 800a3da:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800a3dc:	4b02      	ldr	r3, [pc, #8]	@ (800a3e8 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800a3de:	4618      	mov	r0, r3
 800a3e0:	46bd      	mov	sp, r7
 800a3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e6:	4770      	bx	lr
 800a3e8:	20000588 	.word	0x20000588

0800a3ec <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a3ec:	b580      	push	{r7, lr}
 800a3ee:	b082      	sub	sp, #8
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
 800a3f4:	6039      	str	r1, [r7, #0]
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	2b01      	cmp	r3, #1
 800a3fa:	d113      	bne.n	800a424 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800a3fc:	683b      	ldr	r3, [r7, #0]
 800a3fe:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a402:	4293      	cmp	r3, r2
 800a404:	d10e      	bne.n	800a424 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800a406:	f7fd fcc3 	bl	8007d90 <_Z23getFont_verdana_20_4bppv>
 800a40a:	4603      	mov	r3, r0
};
 800a40c:	4a07      	ldr	r2, [pc, #28]	@ (800a42c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a40e:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_80_4bpp()),
 800a410:	f7fd fd16 	bl	8007e40 <_Z23getFont_verdana_80_4bppv>
 800a414:	4603      	mov	r3, r0
};
 800a416:	4a05      	ldr	r2, [pc, #20]	@ (800a42c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a418:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800a41a:	f7fd fc61 	bl	8007ce0 <_Z23getFont_verdana_10_4bppv>
 800a41e:	4603      	mov	r3, r0
};
 800a420:	4a02      	ldr	r2, [pc, #8]	@ (800a42c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800a422:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800a424:	bf00      	nop
 800a426:	3708      	adds	r7, #8
 800a428:	46bd      	mov	sp, r7
 800a42a:	bd80      	pop	{r7, pc}
 800a42c:	20000588 	.word	0x20000588

0800a430 <_GLOBAL__sub_I_touchgfx_fonts>:
 800a430:	b580      	push	{r7, lr}
 800a432:	af00      	add	r7, sp, #0
 800a434:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a438:	2001      	movs	r0, #1
 800a43a:	f7ff ffd7 	bl	800a3ec <_Z41__static_initialization_and_destruction_0ii>
 800a43e:	bd80      	pop	{r7, pc}

0800a440 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a440:	b580      	push	{r7, lr}
 800a442:	b082      	sub	sp, #8
 800a444:	af00      	add	r7, sp, #0
 800a446:	6078      	str	r0, [r7, #4]
 800a448:	4a05      	ldr	r2, [pc, #20]	@ (800a460 <_ZN19FrontendApplicationD1Ev+0x20>)
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	601a      	str	r2, [r3, #0]
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	4618      	mov	r0, r3
 800a452:	f7fd ff47 	bl	80082e4 <_ZN23FrontendApplicationBaseD1Ev>
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	4618      	mov	r0, r3
 800a45a:	3708      	adds	r7, #8
 800a45c:	46bd      	mov	sp, r7
 800a45e:	bd80      	pop	{r7, pc}
 800a460:	08024260 	.word	0x08024260

0800a464 <_ZN19FrontendApplicationD0Ev>:
 800a464:	b580      	push	{r7, lr}
 800a466:	b082      	sub	sp, #8
 800a468:	af00      	add	r7, sp, #0
 800a46a:	6078      	str	r0, [r7, #4]
 800a46c:	6878      	ldr	r0, [r7, #4]
 800a46e:	f7ff ffe7 	bl	800a440 <_ZN19FrontendApplicationD1Ev>
 800a472:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800a476:	6878      	ldr	r0, [r7, #4]
 800a478:	f017 fb03 	bl	8021a82 <_ZdlPvj>
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	4618      	mov	r0, r3
 800a480:	3708      	adds	r7, #8
 800a482:	46bd      	mov	sp, r7
 800a484:	bd80      	pop	{r7, pc}

0800a486 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a486:	b580      	push	{r7, lr}
 800a488:	b082      	sub	sp, #8
 800a48a:	af00      	add	r7, sp, #0
 800a48c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800a48e:	687b      	ldr	r3, [r7, #4]
 800a490:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800a494:	4618      	mov	r0, r3
 800a496:	f000 f82d 	bl	800a4f4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	4618      	mov	r0, r3
 800a49e:	f005 feb1 	bl	8010204 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800a4a2:	bf00      	nop
 800a4a4:	3708      	adds	r7, #8
 800a4a6:	46bd      	mov	sp, r7
 800a4a8:	bd80      	pop	{r7, pc}
	...

0800a4ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a4ac:	b580      	push	{r7, lr}
 800a4ae:	b084      	sub	sp, #16
 800a4b0:	af00      	add	r7, sp, #0
 800a4b2:	60f8      	str	r0, [r7, #12]
 800a4b4:	60b9      	str	r1, [r7, #8]
 800a4b6:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800a4b8:	68fb      	ldr	r3, [r7, #12]
 800a4ba:	687a      	ldr	r2, [r7, #4]
 800a4bc:	68b9      	ldr	r1, [r7, #8]
 800a4be:	4618      	mov	r0, r3
 800a4c0:	f7fd ff60 	bl	8008384 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a4c4:	4a03      	ldr	r2, [pc, #12]	@ (800a4d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800a4c6:	68fb      	ldr	r3, [r7, #12]
 800a4c8:	601a      	str	r2, [r3, #0]
{

}
 800a4ca:	68fb      	ldr	r3, [r7, #12]
 800a4cc:	4618      	mov	r0, r3
 800a4ce:	3710      	adds	r7, #16
 800a4d0:	46bd      	mov	sp, r7
 800a4d2:	bd80      	pop	{r7, pc}
 800a4d4:	08024260 	.word	0x08024260

0800a4d8 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800a4d8:	b480      	push	{r7}
 800a4da:	b083      	sub	sp, #12
 800a4dc:	af00      	add	r7, sp, #0
 800a4de:	6078      	str	r0, [r7, #4]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	2200      	movs	r2, #0
 800a4e4:	601a      	str	r2, [r3, #0]
{

}
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	4618      	mov	r0, r3
 800a4ea:	370c      	adds	r7, #12
 800a4ec:	46bd      	mov	sp, r7
 800a4ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4f2:	4770      	bx	lr

0800a4f4 <_ZN5Model4tickEv>:

void Model::tick()
{
 800a4f4:	b480      	push	{r7}
 800a4f6:	b083      	sub	sp, #12
 800a4f8:	af00      	add	r7, sp, #0
 800a4fa:	6078      	str	r0, [r7, #4]

}
 800a4fc:	bf00      	nop
 800a4fe:	370c      	adds	r7, #12
 800a500:	46bd      	mov	sp, r7
 800a502:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a506:	4770      	bx	lr

0800a508 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800a508:	b480      	push	{r7}
 800a50a:	b083      	sub	sp, #12
 800a50c:	af00      	add	r7, sp, #0
 800a50e:	6078      	str	r0, [r7, #4]
    {
    }
 800a510:	bf00      	nop
 800a512:	370c      	adds	r7, #12
 800a514:	46bd      	mov	sp, r7
 800a516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a51a:	4770      	bx	lr

0800a51c <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800a51c:	b480      	push	{r7}
 800a51e:	b083      	sub	sp, #12
 800a520:	af00      	add	r7, sp, #0
 800a522:	6078      	str	r0, [r7, #4]
    {
    }
 800a524:	bf00      	nop
 800a526:	370c      	adds	r7, #12
 800a528:	46bd      	mov	sp, r7
 800a52a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a52e:	4770      	bx	lr

0800a530 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800a530:	b480      	push	{r7}
 800a532:	b083      	sub	sp, #12
 800a534:	af00      	add	r7, sp, #0
 800a536:	6078      	str	r0, [r7, #4]
    {
 800a538:	4a04      	ldr	r2, [pc, #16]	@ (800a54c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	601a      	str	r2, [r3, #0]
    }
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	4618      	mov	r0, r3
 800a542:	370c      	adds	r7, #12
 800a544:	46bd      	mov	sp, r7
 800a546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a54a:	4770      	bx	lr
 800a54c:	080242ec 	.word	0x080242ec

0800a550 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800a550:	b580      	push	{r7, lr}
 800a552:	b082      	sub	sp, #8
 800a554:	af00      	add	r7, sp, #0
 800a556:	6078      	str	r0, [r7, #4]
    }
 800a558:	6878      	ldr	r0, [r7, #4]
 800a55a:	f7ff ffe9 	bl	800a530 <_ZN8touchgfx9PresenterD1Ev>
 800a55e:	2104      	movs	r1, #4
 800a560:	6878      	ldr	r0, [r7, #4]
 800a562:	f017 fa8e 	bl	8021a82 <_ZdlPvj>
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	4618      	mov	r0, r3
 800a56a:	3708      	adds	r7, #8
 800a56c:	46bd      	mov	sp, r7
 800a56e:	bd80      	pop	{r7, pc}

0800a570 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800a570:	b480      	push	{r7}
 800a572:	b083      	sub	sp, #12
 800a574:	af00      	add	r7, sp, #0
 800a576:	6078      	str	r0, [r7, #4]
    {
 800a578:	4a04      	ldr	r2, [pc, #16]	@ (800a58c <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	601a      	str	r2, [r3, #0]
    }
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	4618      	mov	r0, r3
 800a582:	370c      	adds	r7, #12
 800a584:	46bd      	mov	sp, r7
 800a586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a58a:	4770      	bx	lr
 800a58c:	080242ec 	.word	0x080242ec

0800a590 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800a590:	b480      	push	{r7}
 800a592:	b083      	sub	sp, #12
 800a594:	af00      	add	r7, sp, #0
 800a596:	6078      	str	r0, [r7, #4]
 800a598:	4a06      	ldr	r2, [pc, #24]	@ (800a5b4 <_ZN13ModelListenerC1Ev+0x24>)
 800a59a:	687b      	ldr	r3, [r7, #4]
 800a59c:	601a      	str	r2, [r3, #0]
 800a59e:	687b      	ldr	r3, [r7, #4]
 800a5a0:	2200      	movs	r2, #0
 800a5a2:	605a      	str	r2, [r3, #4]
 800a5a4:	687b      	ldr	r3, [r7, #4]
 800a5a6:	4618      	mov	r0, r3
 800a5a8:	370c      	adds	r7, #12
 800a5aa:	46bd      	mov	sp, r7
 800a5ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b0:	4770      	bx	lr
 800a5b2:	bf00      	nop
 800a5b4:	080242dc 	.word	0x080242dc

0800a5b8 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800a5b8:	b480      	push	{r7}
 800a5ba:	b083      	sub	sp, #12
 800a5bc:	af00      	add	r7, sp, #0
 800a5be:	6078      	str	r0, [r7, #4]
 800a5c0:	4a04      	ldr	r2, [pc, #16]	@ (800a5d4 <_ZN13ModelListenerD1Ev+0x1c>)
 800a5c2:	687b      	ldr	r3, [r7, #4]
 800a5c4:	601a      	str	r2, [r3, #0]
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	4618      	mov	r0, r3
 800a5ca:	370c      	adds	r7, #12
 800a5cc:	46bd      	mov	sp, r7
 800a5ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5d2:	4770      	bx	lr
 800a5d4:	080242dc 	.word	0x080242dc

0800a5d8 <_ZN13ModelListenerD0Ev>:
 800a5d8:	b580      	push	{r7, lr}
 800a5da:	b082      	sub	sp, #8
 800a5dc:	af00      	add	r7, sp, #0
 800a5de:	6078      	str	r0, [r7, #4]
 800a5e0:	6878      	ldr	r0, [r7, #4]
 800a5e2:	f7ff ffe9 	bl	800a5b8 <_ZN13ModelListenerD1Ev>
 800a5e6:	2108      	movs	r1, #8
 800a5e8:	6878      	ldr	r0, [r7, #4]
 800a5ea:	f017 fa4a 	bl	8021a82 <_ZdlPvj>
 800a5ee:	687b      	ldr	r3, [r7, #4]
 800a5f0:	4618      	mov	r0, r3
 800a5f2:	3708      	adds	r7, #8
 800a5f4:	46bd      	mov	sp, r7
 800a5f6:	bd80      	pop	{r7, pc}

0800a5f8 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800a5f8:	b580      	push	{r7, lr}
 800a5fa:	b082      	sub	sp, #8
 800a5fc:	af00      	add	r7, sp, #0
 800a5fe:	6078      	str	r0, [r7, #4]
 800a600:	4a09      	ldr	r2, [pc, #36]	@ (800a628 <_ZN16Screen1PresenterD1Ev+0x30>)
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	601a      	str	r2, [r3, #0]
 800a606:	4a09      	ldr	r2, [pc, #36]	@ (800a62c <_ZN16Screen1PresenterD1Ev+0x34>)
 800a608:	687b      	ldr	r3, [r7, #4]
 800a60a:	605a      	str	r2, [r3, #4]
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	3304      	adds	r3, #4
 800a610:	4618      	mov	r0, r3
 800a612:	f7ff ffd1 	bl	800a5b8 <_ZN13ModelListenerD1Ev>
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	4618      	mov	r0, r3
 800a61a:	f7ff ff89 	bl	800a530 <_ZN8touchgfx9PresenterD1Ev>
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	4618      	mov	r0, r3
 800a622:	3708      	adds	r7, #8
 800a624:	46bd      	mov	sp, r7
 800a626:	bd80      	pop	{r7, pc}
 800a628:	080242b4 	.word	0x080242b4
 800a62c:	080242cc 	.word	0x080242cc

0800a630 <_ZThn4_N16Screen1PresenterD1Ev>:
 800a630:	f1a0 0004 	sub.w	r0, r0, #4
 800a634:	e7e0      	b.n	800a5f8 <_ZN16Screen1PresenterD1Ev>
 800a636:	bf00      	nop

0800a638 <_ZN16Screen1PresenterD0Ev>:
 800a638:	b580      	push	{r7, lr}
 800a63a:	b082      	sub	sp, #8
 800a63c:	af00      	add	r7, sp, #0
 800a63e:	6078      	str	r0, [r7, #4]
 800a640:	6878      	ldr	r0, [r7, #4]
 800a642:	f7ff ffd9 	bl	800a5f8 <_ZN16Screen1PresenterD1Ev>
 800a646:	2110      	movs	r1, #16
 800a648:	6878      	ldr	r0, [r7, #4]
 800a64a:	f017 fa1a 	bl	8021a82 <_ZdlPvj>
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	4618      	mov	r0, r3
 800a652:	3708      	adds	r7, #8
 800a654:	46bd      	mov	sp, r7
 800a656:	bd80      	pop	{r7, pc}

0800a658 <_ZThn4_N16Screen1PresenterD0Ev>:
 800a658:	f1a0 0004 	sub.w	r0, r0, #4
 800a65c:	e7ec      	b.n	800a638 <_ZN16Screen1PresenterD0Ev>
	...

0800a660 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800a660:	b580      	push	{r7, lr}
 800a662:	b082      	sub	sp, #8
 800a664:	af00      	add	r7, sp, #0
 800a666:	6078      	str	r0, [r7, #4]
 800a668:	6039      	str	r1, [r7, #0]
    : view(v)
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	4618      	mov	r0, r3
 800a66e:	f7ff ff7f 	bl	800a570 <_ZN8touchgfx9PresenterC1Ev>
 800a672:	687b      	ldr	r3, [r7, #4]
 800a674:	3304      	adds	r3, #4
 800a676:	4618      	mov	r0, r3
 800a678:	f7ff ff8a 	bl	800a590 <_ZN13ModelListenerC1Ev>
 800a67c:	4a06      	ldr	r2, [pc, #24]	@ (800a698 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	601a      	str	r2, [r3, #0]
 800a682:	4a06      	ldr	r2, [pc, #24]	@ (800a69c <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800a684:	687b      	ldr	r3, [r7, #4]
 800a686:	605a      	str	r2, [r3, #4]
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	683a      	ldr	r2, [r7, #0]
 800a68c:	60da      	str	r2, [r3, #12]
{

}
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	4618      	mov	r0, r3
 800a692:	3708      	adds	r7, #8
 800a694:	46bd      	mov	sp, r7
 800a696:	bd80      	pop	{r7, pc}
 800a698:	080242b4 	.word	0x080242b4
 800a69c:	080242cc 	.word	0x080242cc

0800a6a0 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800a6a0:	b480      	push	{r7}
 800a6a2:	b083      	sub	sp, #12
 800a6a4:	af00      	add	r7, sp, #0
 800a6a6:	6078      	str	r0, [r7, #4]

}
 800a6a8:	bf00      	nop
 800a6aa:	370c      	adds	r7, #12
 800a6ac:	46bd      	mov	sp, r7
 800a6ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b2:	4770      	bx	lr

0800a6b4 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800a6b4:	b480      	push	{r7}
 800a6b6:	b083      	sub	sp, #12
 800a6b8:	af00      	add	r7, sp, #0
 800a6ba:	6078      	str	r0, [r7, #4]

}
 800a6bc:	bf00      	nop
 800a6be:	370c      	adds	r7, #12
 800a6c0:	46bd      	mov	sp, r7
 800a6c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6c6:	4770      	bx	lr

0800a6c8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800a6c8:	b580      	push	{r7, lr}
 800a6ca:	b082      	sub	sp, #8
 800a6cc:	af00      	add	r7, sp, #0
 800a6ce:	6078      	str	r0, [r7, #4]
 800a6d0:	4a05      	ldr	r2, [pc, #20]	@ (800a6e8 <_ZN11Screen1ViewD1Ev+0x20>)
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	601a      	str	r2, [r3, #0]
 800a6d6:	687b      	ldr	r3, [r7, #4]
 800a6d8:	4618      	mov	r0, r3
 800a6da:	f7ff f999 	bl	8009a10 <_ZN15Screen1ViewBaseD1Ev>
 800a6de:	687b      	ldr	r3, [r7, #4]
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	3708      	adds	r7, #8
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}
 800a6e8:	08024304 	.word	0x08024304

0800a6ec <_ZN11Screen1ViewD0Ev>:
 800a6ec:	b580      	push	{r7, lr}
 800a6ee:	b082      	sub	sp, #8
 800a6f0:	af00      	add	r7, sp, #0
 800a6f2:	6078      	str	r0, [r7, #4]
 800a6f4:	6878      	ldr	r0, [r7, #4]
 800a6f6:	f7ff ffe7 	bl	800a6c8 <_ZN11Screen1ViewD1Ev>
 800a6fa:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 800a6fe:	6878      	ldr	r0, [r7, #4]
 800a700:	f017 f9bf 	bl	8021a82 <_ZdlPvj>
 800a704:	687b      	ldr	r3, [r7, #4]
 800a706:	4618      	mov	r0, r3
 800a708:	3708      	adds	r7, #8
 800a70a:	46bd      	mov	sp, r7
 800a70c:	bd80      	pop	{r7, pc}

0800a70e <_ZN11Screen1View15switchToScreen1Ev>:
    virtual void setupScreen();
    virtual void tearDownScreen();
    virtual void handleTickEvent();
protected:
    int counter;
    void switchToScreen1()
 800a70e:	b580      	push	{r7, lr}
 800a710:	b082      	sub	sp, #8
 800a712:	af00      	add	r7, sp, #0
 800a714:	6078      	str	r0, [r7, #4]
    {
        static_cast<FrontendApplication*>(Application::getInstance())->gotoscreenScreenNoTransition();
 800a716:	f005 fcf3 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800a71a:	4603      	mov	r3, r0
 800a71c:	4618      	mov	r0, r3
 800a71e:	f7fd fe99 	bl	8008454 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800a722:	bf00      	nop
 800a724:	3708      	adds	r7, #8
 800a726:	46bd      	mov	sp, r7
 800a728:	bd80      	pop	{r7, pc}
	...

0800a72c <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800a72c:	b580      	push	{r7, lr}
 800a72e:	b082      	sub	sp, #8
 800a730:	af00      	add	r7, sp, #0
 800a732:	6078      	str	r0, [r7, #4]
 800a734:	687b      	ldr	r3, [r7, #4]
 800a736:	4618      	mov	r0, r3
 800a738:	f7fe ffb0 	bl	800969c <_ZN15Screen1ViewBaseC1Ev>
 800a73c:	4a03      	ldr	r2, [pc, #12]	@ (800a74c <_ZN11Screen1ViewC1Ev+0x20>)
 800a73e:	687b      	ldr	r3, [r7, #4]
 800a740:	601a      	str	r2, [r3, #0]
{

}
 800a742:	687b      	ldr	r3, [r7, #4]
 800a744:	4618      	mov	r0, r3
 800a746:	3708      	adds	r7, #8
 800a748:	46bd      	mov	sp, r7
 800a74a:	bd80      	pop	{r7, pc}
 800a74c:	08024304 	.word	0x08024304

0800a750 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800a750:	b580      	push	{r7, lr}
 800a752:	b082      	sub	sp, #8
 800a754:	af00      	add	r7, sp, #0
 800a756:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	4618      	mov	r0, r3
 800a75c:	f7ff f995 	bl	8009a8a <_ZN15Screen1ViewBase11setupScreenEv>
}
 800a760:	bf00      	nop
 800a762:	3708      	adds	r7, #8
 800a764:	46bd      	mov	sp, r7
 800a766:	bd80      	pop	{r7, pc}

0800a768 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800a768:	b580      	push	{r7, lr}
 800a76a:	b082      	sub	sp, #8
 800a76c:	af00      	add	r7, sp, #0
 800a76e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	4618      	mov	r0, r3
 800a774:	f7fe fcd4 	bl	8009120 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800a778:	bf00      	nop
 800a77a:	3708      	adds	r7, #8
 800a77c:	46bd      	mov	sp, r7
 800a77e:	bd80      	pop	{r7, pc}

0800a780 <_ZN11Screen1View15handleTickEventEv>:

void Screen1View::handleTickEvent()
{
 800a780:	b580      	push	{r7, lr}
 800a782:	b082      	sub	sp, #8
 800a784:	af00      	add	r7, sp, #0
 800a786:	6078      	str	r0, [r7, #4]
	counter++;
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a78e:	1c5a      	adds	r2, r3, #1
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
	//Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y9WY).getText());

	if(counter == 30)
 800a796:	687b      	ldr	r3, [r7, #4]
 800a798:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a79c:	2b1e      	cmp	r3, #30
 800a79e:	d106      	bne.n	800a7ae <_ZN11Screen1View15handleTickEventEv+0x2e>
	{
		counter = 0;
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	2200      	movs	r2, #0
 800a7a4:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
		switchToScreen1();
 800a7a8:	6878      	ldr	r0, [r7, #4]
 800a7aa:	f7ff ffb0 	bl	800a70e <_ZN11Screen1View15switchToScreen1Ev>
	}
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 800a7ae:	687b      	ldr	r3, [r7, #4]
 800a7b0:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a7ba:	4a06      	ldr	r2, [pc, #24]	@ (800a7d4 <_ZN11Screen1View15handleTickEventEv+0x54>)
 800a7bc:	210a      	movs	r1, #10
 800a7be:	f008 fd9e 	bl	80132fe <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	3398      	adds	r3, #152	@ 0x98
 800a7c6:	4618      	mov	r0, r3
 800a7c8:	f006 fe4c 	bl	8011464 <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800a7cc:	bf00      	nop
 800a7ce:	3708      	adds	r7, #8
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	bd80      	pop	{r7, pc}
 800a7d4:	08023464 	.word	0x08023464

0800a7d8 <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 800a7d8:	b580      	push	{r7, lr}
 800a7da:	b082      	sub	sp, #8
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	6078      	str	r0, [r7, #4]
 800a7e0:	4a09      	ldr	r2, [pc, #36]	@ (800a808 <_ZN15screenPresenterD1Ev+0x30>)
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	601a      	str	r2, [r3, #0]
 800a7e6:	4a09      	ldr	r2, [pc, #36]	@ (800a80c <_ZN15screenPresenterD1Ev+0x34>)
 800a7e8:	687b      	ldr	r3, [r7, #4]
 800a7ea:	605a      	str	r2, [r3, #4]
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	3304      	adds	r3, #4
 800a7f0:	4618      	mov	r0, r3
 800a7f2:	f7ff fee1 	bl	800a5b8 <_ZN13ModelListenerD1Ev>
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	4618      	mov	r0, r3
 800a7fa:	f7ff fe99 	bl	800a530 <_ZN8touchgfx9PresenterD1Ev>
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	4618      	mov	r0, r3
 800a802:	3708      	adds	r7, #8
 800a804:	46bd      	mov	sp, r7
 800a806:	bd80      	pop	{r7, pc}
 800a808:	08024338 	.word	0x08024338
 800a80c:	08024350 	.word	0x08024350

0800a810 <_ZThn4_N15screenPresenterD1Ev>:
 800a810:	f1a0 0004 	sub.w	r0, r0, #4
 800a814:	e7e0      	b.n	800a7d8 <_ZN15screenPresenterD1Ev>
 800a816:	bf00      	nop

0800a818 <_ZN15screenPresenterD0Ev>:
 800a818:	b580      	push	{r7, lr}
 800a81a:	b082      	sub	sp, #8
 800a81c:	af00      	add	r7, sp, #0
 800a81e:	6078      	str	r0, [r7, #4]
 800a820:	6878      	ldr	r0, [r7, #4]
 800a822:	f7ff ffd9 	bl	800a7d8 <_ZN15screenPresenterD1Ev>
 800a826:	2110      	movs	r1, #16
 800a828:	6878      	ldr	r0, [r7, #4]
 800a82a:	f017 f92a 	bl	8021a82 <_ZdlPvj>
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	4618      	mov	r0, r3
 800a832:	3708      	adds	r7, #8
 800a834:	46bd      	mov	sp, r7
 800a836:	bd80      	pop	{r7, pc}

0800a838 <_ZThn4_N15screenPresenterD0Ev>:
 800a838:	f1a0 0004 	sub.w	r0, r0, #4
 800a83c:	e7ec      	b.n	800a818 <_ZN15screenPresenterD0Ev>
	...

0800a840 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 800a840:	b580      	push	{r7, lr}
 800a842:	b082      	sub	sp, #8
 800a844:	af00      	add	r7, sp, #0
 800a846:	6078      	str	r0, [r7, #4]
 800a848:	6039      	str	r1, [r7, #0]
    : view(v)
 800a84a:	687b      	ldr	r3, [r7, #4]
 800a84c:	4618      	mov	r0, r3
 800a84e:	f7ff fe8f 	bl	800a570 <_ZN8touchgfx9PresenterC1Ev>
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	3304      	adds	r3, #4
 800a856:	4618      	mov	r0, r3
 800a858:	f7ff fe9a 	bl	800a590 <_ZN13ModelListenerC1Ev>
 800a85c:	4a06      	ldr	r2, [pc, #24]	@ (800a878 <_ZN15screenPresenterC1ER10screenView+0x38>)
 800a85e:	687b      	ldr	r3, [r7, #4]
 800a860:	601a      	str	r2, [r3, #0]
 800a862:	4a06      	ldr	r2, [pc, #24]	@ (800a87c <_ZN15screenPresenterC1ER10screenView+0x3c>)
 800a864:	687b      	ldr	r3, [r7, #4]
 800a866:	605a      	str	r2, [r3, #4]
 800a868:	687b      	ldr	r3, [r7, #4]
 800a86a:	683a      	ldr	r2, [r7, #0]
 800a86c:	60da      	str	r2, [r3, #12]
{

}
 800a86e:	687b      	ldr	r3, [r7, #4]
 800a870:	4618      	mov	r0, r3
 800a872:	3708      	adds	r7, #8
 800a874:	46bd      	mov	sp, r7
 800a876:	bd80      	pop	{r7, pc}
 800a878:	08024338 	.word	0x08024338
 800a87c:	08024350 	.word	0x08024350

0800a880 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 800a880:	b480      	push	{r7}
 800a882:	b083      	sub	sp, #12
 800a884:	af00      	add	r7, sp, #0
 800a886:	6078      	str	r0, [r7, #4]

}
 800a888:	bf00      	nop
 800a88a:	370c      	adds	r7, #12
 800a88c:	46bd      	mov	sp, r7
 800a88e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a892:	4770      	bx	lr

0800a894 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 800a894:	b480      	push	{r7}
 800a896:	b083      	sub	sp, #12
 800a898:	af00      	add	r7, sp, #0
 800a89a:	6078      	str	r0, [r7, #4]

}
 800a89c:	bf00      	nop
 800a89e:	370c      	adds	r7, #12
 800a8a0:	46bd      	mov	sp, r7
 800a8a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a6:	4770      	bx	lr

0800a8a8 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 800a8a8:	b580      	push	{r7, lr}
 800a8aa:	b082      	sub	sp, #8
 800a8ac:	af00      	add	r7, sp, #0
 800a8ae:	6078      	str	r0, [r7, #4]
 800a8b0:	4a05      	ldr	r2, [pc, #20]	@ (800a8c8 <_ZN10screenViewD1Ev+0x20>)
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	601a      	str	r2, [r3, #0]
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	4618      	mov	r0, r3
 800a8ba:	f7ff fb55 	bl	8009f68 <_ZN14screenViewBaseD1Ev>
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	4618      	mov	r0, r3
 800a8c2:	3708      	adds	r7, #8
 800a8c4:	46bd      	mov	sp, r7
 800a8c6:	bd80      	pop	{r7, pc}
 800a8c8:	08024360 	.word	0x08024360

0800a8cc <_ZN10screenViewD0Ev>:
 800a8cc:	b580      	push	{r7, lr}
 800a8ce:	b082      	sub	sp, #8
 800a8d0:	af00      	add	r7, sp, #0
 800a8d2:	6078      	str	r0, [r7, #4]
 800a8d4:	6878      	ldr	r0, [r7, #4]
 800a8d6:	f7ff ffe7 	bl	800a8a8 <_ZN10screenViewD1Ev>
 800a8da:	f44f 71aa 	mov.w	r1, #340	@ 0x154
 800a8de:	6878      	ldr	r0, [r7, #4]
 800a8e0:	f017 f8cf 	bl	8021a82 <_ZdlPvj>
 800a8e4:	687b      	ldr	r3, [r7, #4]
 800a8e6:	4618      	mov	r0, r3
 800a8e8:	3708      	adds	r7, #8
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	bd80      	pop	{r7, pc}

0800a8ee <_ZN10screenView15switchToScreen2Ev>:
    virtual void tearDownScreen();
    virtual void handleTickEvent();
protected:
    int counter;

void switchToScreen2()
 800a8ee:	b580      	push	{r7, lr}
 800a8f0:	b082      	sub	sp, #8
 800a8f2:	af00      	add	r7, sp, #0
 800a8f4:	6078      	str	r0, [r7, #4]
{
    static_cast<FrontendApplication*>(Application::getInstance())->gotoScreen1ScreenNoTransition();
 800a8f6:	f005 fc03 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800a8fa:	4603      	mov	r3, r0
 800a8fc:	4618      	mov	r0, r3
 800a8fe:	f7fd fdef 	bl	80084e0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 800a902:	bf00      	nop
 800a904:	3708      	adds	r7, #8
 800a906:	46bd      	mov	sp, r7
 800a908:	bd80      	pop	{r7, pc}
	...

0800a90c <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 800a90c:	b580      	push	{r7, lr}
 800a90e:	b082      	sub	sp, #8
 800a910:	af00      	add	r7, sp, #0
 800a912:	6078      	str	r0, [r7, #4]
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	4618      	mov	r0, r3
 800a918:	f7ff f96c 	bl	8009bf4 <_ZN14screenViewBaseC1Ev>
 800a91c:	4a03      	ldr	r2, [pc, #12]	@ (800a92c <_ZN10screenViewC1Ev+0x20>)
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	601a      	str	r2, [r3, #0]
{

}
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	4618      	mov	r0, r3
 800a926:	3708      	adds	r7, #8
 800a928:	46bd      	mov	sp, r7
 800a92a:	bd80      	pop	{r7, pc}
 800a92c:	08024360 	.word	0x08024360

0800a930 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 800a930:	b580      	push	{r7, lr}
 800a932:	b082      	sub	sp, #8
 800a934:	af00      	add	r7, sp, #0
 800a936:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	4618      	mov	r0, r3
 800a93c:	f7ff fb51 	bl	8009fe2 <_ZN14screenViewBase11setupScreenEv>
}
 800a940:	bf00      	nop
 800a942:	3708      	adds	r7, #8
 800a944:	46bd      	mov	sp, r7
 800a946:	bd80      	pop	{r7, pc}

0800a948 <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 800a948:	b580      	push	{r7, lr}
 800a94a:	b082      	sub	sp, #8
 800a94c:	af00      	add	r7, sp, #0
 800a94e:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	4618      	mov	r0, r3
 800a954:	f7fe fbe4 	bl	8009120 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800a958:	bf00      	nop
 800a95a:	3708      	adds	r7, #8
 800a95c:	46bd      	mov	sp, r7
 800a95e:	bd80      	pop	{r7, pc}

0800a960 <_ZN10screenView15handleTickEventEv>:

void screenView::handleTickEvent()
{
 800a960:	b580      	push	{r7, lr}
 800a962:	b082      	sub	sp, #8
 800a964:	af00      	add	r7, sp, #0
 800a966:	6078      	str	r0, [r7, #4]
	counter++;
 800a968:	687b      	ldr	r3, [r7, #4]
 800a96a:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a96e:	1c5a      	adds	r2, r3, #1
 800a970:	687b      	ldr	r3, [r7, #4]
 800a972:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
	//Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y9WY).getText());

	if(counter == 30)
 800a976:	687b      	ldr	r3, [r7, #4]
 800a978:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a97c:	2b1e      	cmp	r3, #30
 800a97e:	d106      	bne.n	800a98e <_ZN10screenView15handleTickEventEv+0x2e>
	{
		counter = 0;
 800a980:	687b      	ldr	r3, [r7, #4]
 800a982:	2200      	movs	r2, #0
 800a984:	f8c3 2150 	str.w	r2, [r3, #336]	@ 0x150
		switchToScreen2();
 800a988:	6878      	ldr	r0, [r7, #4]
 800a98a:	f7ff ffb0 	bl	800a8ee <_ZN10screenView15switchToScreen2Ev>
	}
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	f8d3 3150 	ldr.w	r3, [r3, #336]	@ 0x150
 800a99a:	4a06      	ldr	r2, [pc, #24]	@ (800a9b4 <_ZN10screenView15handleTickEventEv+0x54>)
 800a99c:	210a      	movs	r1, #10
 800a99e:	f008 fcae 	bl	80132fe <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	3398      	adds	r3, #152	@ 0x98
 800a9a6:	4618      	mov	r0, r3
 800a9a8:	f006 fd5c 	bl	8011464 <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800a9ac:	bf00      	nop
 800a9ae:	3708      	adds	r7, #8
 800a9b0:	46bd      	mov	sp, r7
 800a9b2:	bd80      	pop	{r7, pc}
 800a9b4:	08023468 	.word	0x08023468

0800a9b8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800a9b8:	b480      	push	{r7}
 800a9ba:	b083      	sub	sp, #12
 800a9bc:	af00      	add	r7, sp, #0
 800a9be:	6078      	str	r0, [r7, #4]
    {
 800a9c0:	4a04      	ldr	r2, [pc, #16]	@ (800a9d4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	601a      	str	r2, [r3, #0]
    }
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	4618      	mov	r0, r3
 800a9ca:	370c      	adds	r7, #12
 800a9cc:	46bd      	mov	sp, r7
 800a9ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9d2:	4770      	bx	lr
 800a9d4:	080243ac 	.word	0x080243ac

0800a9d8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800a9d8:	b580      	push	{r7, lr}
 800a9da:	b082      	sub	sp, #8
 800a9dc:	af00      	add	r7, sp, #0
 800a9de:	6078      	str	r0, [r7, #4]
    }
 800a9e0:	6878      	ldr	r0, [r7, #4]
 800a9e2:	f7ff ffe9 	bl	800a9b8 <_ZN8touchgfx15TouchControllerD1Ev>
 800a9e6:	2104      	movs	r1, #4
 800a9e8:	6878      	ldr	r0, [r7, #4]
 800a9ea:	f017 f84a 	bl	8021a82 <_ZdlPvj>
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	4618      	mov	r0, r3
 800a9f2:	3708      	adds	r7, #8
 800a9f4:	46bd      	mov	sp, r7
 800a9f6:	bd80      	pop	{r7, pc}

0800a9f8 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800a9f8:	b480      	push	{r7}
 800a9fa:	b083      	sub	sp, #12
 800a9fc:	af00      	add	r7, sp, #0
 800a9fe:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800aa00:	bf00      	nop
 800aa02:	370c      	adds	r7, #12
 800aa04:	46bd      	mov	sp, r7
 800aa06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa0a:	4770      	bx	lr

0800aa0c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800aa0c:	b480      	push	{r7}
 800aa0e:	b085      	sub	sp, #20
 800aa10:	af00      	add	r7, sp, #0
 800aa12:	60f8      	str	r0, [r7, #12]
 800aa14:	60b9      	str	r1, [r7, #8]
 800aa16:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800aa18:	2300      	movs	r3, #0
}
 800aa1a:	4618      	mov	r0, r3
 800aa1c:	3714      	adds	r7, #20
 800aa1e:	46bd      	mov	sp, r7
 800aa20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa24:	4770      	bx	lr
	...

0800aa28 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800aa28:	b580      	push	{r7, lr}
 800aa2a:	b082      	sub	sp, #8
 800aa2c:	af00      	add	r7, sp, #0
 800aa2e:	6078      	str	r0, [r7, #4]
 800aa30:	4a05      	ldr	r2, [pc, #20]	@ (800aa48 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	601a      	str	r2, [r3, #0]
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	4618      	mov	r0, r3
 800aa3a:	f7ff ffbd 	bl	800a9b8 <_ZN8touchgfx15TouchControllerD1Ev>
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	4618      	mov	r0, r3
 800aa42:	3708      	adds	r7, #8
 800aa44:	46bd      	mov	sp, r7
 800aa46:	bd80      	pop	{r7, pc}
 800aa48:	08024394 	.word	0x08024394

0800aa4c <_ZN20STM32TouchControllerD0Ev>:
 800aa4c:	b580      	push	{r7, lr}
 800aa4e:	b082      	sub	sp, #8
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
 800aa54:	6878      	ldr	r0, [r7, #4]
 800aa56:	f7ff ffe7 	bl	800aa28 <_ZN20STM32TouchControllerD1Ev>
 800aa5a:	2104      	movs	r1, #4
 800aa5c:	6878      	ldr	r0, [r7, #4]
 800aa5e:	f017 f810 	bl	8021a82 <_ZdlPvj>
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	4618      	mov	r0, r3
 800aa66:	3708      	adds	r7, #8
 800aa68:	46bd      	mov	sp, r7
 800aa6a:	bd80      	pop	{r7, pc}

0800aa6c <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800aa6c:	b480      	push	{r7}
 800aa6e:	af00      	add	r7, sp, #0

}
 800aa70:	bf00      	nop
 800aa72:	46bd      	mov	sp, r7
 800aa74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa78:	4770      	bx	lr
	...

0800aa7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800aa7c:	b480      	push	{r7}
 800aa7e:	b083      	sub	sp, #12
 800aa80:	af00      	add	r7, sp, #0
 800aa82:	4603      	mov	r3, r0
 800aa84:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800aa86:	79fb      	ldrb	r3, [r7, #7]
 800aa88:	2b03      	cmp	r3, #3
 800aa8a:	d80c      	bhi.n	800aaa6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800aa8c:	a201      	add	r2, pc, #4	@ (adr r2, 800aa94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800aa8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aa92:	bf00      	nop
 800aa94:	0800aaa5 	.word	0x0800aaa5
 800aa98:	0800aaa5 	.word	0x0800aaa5
 800aa9c:	0800aaa5 	.word	0x0800aaa5
 800aaa0:	0800aaa5 	.word	0x0800aaa5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800aaa4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800aaa6:	bf00      	nop
 800aaa8:	370c      	adds	r7, #12
 800aaaa:	46bd      	mov	sp, r7
 800aaac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aab0:	4770      	bx	lr
 800aab2:	bf00      	nop

0800aab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800aab4:	b480      	push	{r7}
 800aab6:	b083      	sub	sp, #12
 800aab8:	af00      	add	r7, sp, #0
 800aaba:	4603      	mov	r3, r0
 800aabc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800aabe:	79fb      	ldrb	r3, [r7, #7]
 800aac0:	2b03      	cmp	r3, #3
 800aac2:	d80c      	bhi.n	800aade <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800aac4:	a201      	add	r2, pc, #4	@ (adr r2, 800aacc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800aac6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aaca:	bf00      	nop
 800aacc:	0800aadd 	.word	0x0800aadd
 800aad0:	0800aadd 	.word	0x0800aadd
 800aad4:	0800aadd 	.word	0x0800aadd
 800aad8:	0800aadd 	.word	0x0800aadd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800aadc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800aade:	bf00      	nop
 800aae0:	370c      	adds	r7, #12
 800aae2:	46bd      	mov	sp, r7
 800aae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aae8:	4770      	bx	lr
 800aaea:	bf00      	nop

0800aaec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800aaec:	b480      	push	{r7}
 800aaee:	b083      	sub	sp, #12
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	4603      	mov	r3, r0
 800aaf4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800aaf6:	79fb      	ldrb	r3, [r7, #7]
 800aaf8:	2b03      	cmp	r3, #3
 800aafa:	d80c      	bhi.n	800ab16 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800aafc:	a201      	add	r2, pc, #4	@ (adr r2, 800ab04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800aafe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ab02:	bf00      	nop
 800ab04:	0800ab15 	.word	0x0800ab15
 800ab08:	0800ab15 	.word	0x0800ab15
 800ab0c:	0800ab15 	.word	0x0800ab15
 800ab10:	0800ab15 	.word	0x0800ab15
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800ab14:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800ab16:	bf00      	nop
 800ab18:	370c      	adds	r7, #12
 800ab1a:	46bd      	mov	sp, r7
 800ab1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab20:	4770      	bx	lr
 800ab22:	bf00      	nop

0800ab24 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800ab24:	b480      	push	{r7}
 800ab26:	b083      	sub	sp, #12
 800ab28:	af00      	add	r7, sp, #0
 800ab2a:	6078      	str	r0, [r7, #4]
    {
 800ab2c:	4a04      	ldr	r2, [pc, #16]	@ (800ab40 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800ab2e:	687b      	ldr	r3, [r7, #4]
 800ab30:	601a      	str	r2, [r3, #0]
    }
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	4618      	mov	r0, r3
 800ab36:	370c      	adds	r7, #12
 800ab38:	46bd      	mov	sp, r7
 800ab3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab3e:	4770      	bx	lr
 800ab40:	0802480c 	.word	0x0802480c

0800ab44 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800ab44:	b580      	push	{r7, lr}
 800ab46:	b082      	sub	sp, #8
 800ab48:	af00      	add	r7, sp, #0
 800ab4a:	6078      	str	r0, [r7, #4]
    }
 800ab4c:	6878      	ldr	r0, [r7, #4]
 800ab4e:	f7ff ffe9 	bl	800ab24 <_ZN8touchgfx3HALD1Ev>
 800ab52:	2184      	movs	r1, #132	@ 0x84
 800ab54:	6878      	ldr	r0, [r7, #4]
 800ab56:	f016 ff94 	bl	8021a82 <_ZdlPvj>
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	4618      	mov	r0, r3
 800ab5e:	3708      	adds	r7, #8
 800ab60:	46bd      	mov	sp, r7
 800ab62:	bd80      	pop	{r7, pc}

0800ab64 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800ab64:	b480      	push	{r7}
 800ab66:	b083      	sub	sp, #12
 800ab68:	af00      	add	r7, sp, #0
 800ab6a:	6078      	str	r0, [r7, #4]
 800ab6c:	460b      	mov	r3, r1
 800ab6e:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	78fa      	ldrb	r2, [r7, #3]
 800ab74:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	2201      	movs	r2, #1
 800ab7c:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800ab80:	bf00      	nop
 800ab82:	370c      	adds	r7, #12
 800ab84:	46bd      	mov	sp, r7
 800ab86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab8a:	4770      	bx	lr

0800ab8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800ab8c:	b580      	push	{r7, lr}
 800ab8e:	b082      	sub	sp, #8
 800ab90:	af00      	add	r7, sp, #0
 800ab92:	6078      	str	r0, [r7, #4]
 800ab94:	460b      	mov	r3, r1
 800ab96:	807b      	strh	r3, [r7, #2]
 800ab98:	4613      	mov	r3, r2
 800ab9a:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800ab9c:	4b0c      	ldr	r3, [pc, #48]	@ (800abd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800ab9e:	881b      	ldrh	r3, [r3, #0]
 800aba0:	887a      	ldrh	r2, [r7, #2]
 800aba2:	429a      	cmp	r2, r3
 800aba4:	d304      	bcc.n	800abb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800aba6:	4b0b      	ldr	r3, [pc, #44]	@ (800abd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800aba8:	881b      	ldrh	r3, [r3, #0]
 800abaa:	883a      	ldrh	r2, [r7, #0]
 800abac:	429a      	cmp	r2, r3
 800abae:	d205      	bcs.n	800abbc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800abb0:	4b09      	ldr	r3, [pc, #36]	@ (800abd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800abb2:	4a0a      	ldr	r2, [pc, #40]	@ (800abdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800abb4:	21a3      	movs	r1, #163	@ 0xa3
 800abb6:	480a      	ldr	r0, [pc, #40]	@ (800abe0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800abb8:	f016 ff90 	bl	8021adc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800abbc:	4a09      	ldr	r2, [pc, #36]	@ (800abe4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800abbe:	887b      	ldrh	r3, [r7, #2]
 800abc0:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800abc2:	4a09      	ldr	r2, [pc, #36]	@ (800abe8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800abc4:	883b      	ldrh	r3, [r7, #0]
 800abc6:	8013      	strh	r3, [r2, #0]
    }
 800abc8:	bf00      	nop
 800abca:	3708      	adds	r7, #8
 800abcc:	46bd      	mov	sp, r7
 800abce:	bd80      	pop	{r7, pc}
 800abd0:	20002224 	.word	0x20002224
 800abd4:	20002226 	.word	0x20002226
 800abd8:	0802346c 	.word	0x0802346c
 800abdc:	080234d0 	.word	0x080234d0
 800abe0:	08023514 	.word	0x08023514
 800abe4:	2000222a 	.word	0x2000222a
 800abe8:	2000222c 	.word	0x2000222c

0800abec <_ZN8touchgfx3HAL11submitGPU2DEv>:
    virtual void submitGPU2D()
 800abec:	b480      	push	{r7}
 800abee:	b083      	sub	sp, #12
 800abf0:	af00      	add	r7, sp, #0
 800abf2:	6078      	str	r0, [r7, #4]
    }
 800abf4:	bf00      	nop
 800abf6:	370c      	adds	r7, #12
 800abf8:	46bd      	mov	sp, r7
 800abfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abfe:	4770      	bx	lr

0800ac00 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800ac00:	b580      	push	{r7, lr}
 800ac02:	b082      	sub	sp, #8
 800ac04:	af00      	add	r7, sp, #0
 800ac06:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800ac08:	687b      	ldr	r3, [r7, #4]
 800ac0a:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800ac0e:	2b00      	cmp	r3, #0
 800ac10:	d009      	beq.n	800ac26 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800ac12:	687b      	ldr	r3, [r7, #4]
 800ac14:	685a      	ldr	r2, [r3, #4]
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	685b      	ldr	r3, [r3, #4]
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	4610      	mov	r0, r2
 800ac20:	4798      	blx	r3
 800ac22:	4603      	mov	r3, r0
 800ac24:	e000      	b.n	800ac28 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800ac26:	2300      	movs	r3, #0
    }
 800ac28:	4618      	mov	r0, r3
 800ac2a:	3708      	adds	r7, #8
 800ac2c:	46bd      	mov	sp, r7
 800ac2e:	bd80      	pop	{r7, pc}

0800ac30 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    }

    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800ac30:	b580      	push	{r7, lr}
 800ac32:	b082      	sub	sp, #8
 800ac34:	af00      	add	r7, sp, #0
 800ac36:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800ac38:	6878      	ldr	r0, [r7, #4]
 800ac3a:	f003 f811 	bl	800dc60 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800ac3e:	687b      	ldr	r3, [r7, #4]
 800ac40:	681b      	ldr	r3, [r3, #0]
 800ac42:	33bc      	adds	r3, #188	@ 0xbc
 800ac44:	681b      	ldr	r3, [r3, #0]
 800ac46:	6878      	ldr	r0, [r7, #4]
 800ac48:	4798      	blx	r3
    }
 800ac4a:	bf00      	nop
 800ac4c:	3708      	adds	r7, #8
 800ac4e:	46bd      	mov	sp, r7
 800ac50:	bd80      	pop	{r7, pc}

0800ac52 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800ac52:	b480      	push	{r7}
 800ac54:	b083      	sub	sp, #12
 800ac56:	af00      	add	r7, sp, #0
 800ac58:	6078      	str	r0, [r7, #4]
 800ac5a:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800ac5c:	2300      	movs	r3, #0
    }
 800ac5e:	4618      	mov	r0, r3
 800ac60:	370c      	adds	r7, #12
 800ac62:	46bd      	mov	sp, r7
 800ac64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac68:	4770      	bx	lr
	...

0800ac6c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800ac6c:	b580      	push	{r7, lr}
 800ac6e:	b084      	sub	sp, #16
 800ac70:	af00      	add	r7, sp, #0
 800ac72:	60f8      	str	r0, [r7, #12]
 800ac74:	60b9      	str	r1, [r7, #8]
 800ac76:	607a      	str	r2, [r7, #4]
 800ac78:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800ac7a:	68bb      	ldr	r3, [r7, #8]
 800ac7c:	2b00      	cmp	r3, #0
 800ac7e:	d106      	bne.n	800ac8e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800ac80:	4b0f      	ldr	r3, [pc, #60]	@ (800acc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800ac82:	4a10      	ldr	r2, [pc, #64]	@ (800acc4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800ac84:	f240 21ff 	movw	r1, #767	@ 0x2ff
 800ac88:	480f      	ldr	r0, [pc, #60]	@ (800acc8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800ac8a:	f016 ff27 	bl	8021adc <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800ac8e:	68fb      	ldr	r3, [r7, #12]
 800ac90:	68ba      	ldr	r2, [r7, #8]
 800ac92:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800ac94:	68fb      	ldr	r3, [r7, #12]
 800ac96:	687a      	ldr	r2, [r7, #4]
 800ac98:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800ac9a:	687b      	ldr	r3, [r7, #4]
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	bf14      	ite	ne
 800aca0:	2301      	movne	r3, #1
 800aca2:	2300      	moveq	r3, #0
 800aca4:	b2da      	uxtb	r2, r3
 800aca6:	4b09      	ldr	r3, [pc, #36]	@ (800accc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800aca8:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800acaa:	68fb      	ldr	r3, [r7, #12]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	3390      	adds	r3, #144	@ 0x90
 800acb0:	681b      	ldr	r3, [r3, #0]
 800acb2:	6839      	ldr	r1, [r7, #0]
 800acb4:	68f8      	ldr	r0, [r7, #12]
 800acb6:	4798      	blx	r3
    }
 800acb8:	bf00      	nop
 800acba:	3710      	adds	r7, #16
 800acbc:	46bd      	mov	sp, r7
 800acbe:	bd80      	pop	{r7, pc}
 800acc0:	08023558 	.word	0x08023558
 800acc4:	08023590 	.word	0x08023590
 800acc8:	08023514 	.word	0x08023514
 800accc:	2000222e 	.word	0x2000222e

0800acd0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800acd0:	b480      	push	{r7}
 800acd2:	b083      	sub	sp, #12
 800acd4:	af00      	add	r7, sp, #0
 800acd6:	6078      	str	r0, [r7, #4]
 800acd8:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	683a      	ldr	r2, [r7, #0]
 800acde:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800ace0:	683b      	ldr	r3, [r7, #0]
 800ace2:	2b00      	cmp	r3, #0
 800ace4:	bf14      	ite	ne
 800ace6:	2301      	movne	r3, #1
 800ace8:	2300      	moveq	r3, #0
 800acea:	b2da      	uxtb	r2, r3
 800acec:	4b03      	ldr	r3, [pc, #12]	@ (800acfc <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800acee:	701a      	strb	r2, [r3, #0]
    }
 800acf0:	bf00      	nop
 800acf2:	370c      	adds	r7, #12
 800acf4:	46bd      	mov	sp, r7
 800acf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acfa:	4770      	bx	lr
 800acfc:	2000222f 	.word	0x2000222f

0800ad00 <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     * Only applicable on LTDC systems and when the partial framebuffer strategy is
     * enabled.
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
 800ad00:	b480      	push	{r7}
 800ad02:	b083      	sub	sp, #12
 800ad04:	af00      	add	r7, sp, #0
 800ad06:	6078      	str	r0, [r7, #4]
 800ad08:	460b      	mov	r3, r1
 800ad0a:	807b      	strh	r3, [r7, #2]
    {
    }
 800ad0c:	bf00      	nop
 800ad0e:	370c      	adds	r7, #12
 800ad10:	46bd      	mov	sp, r7
 800ad12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad16:	4770      	bx	lr

0800ad18 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800ad18:	b480      	push	{r7}
 800ad1a:	b083      	sub	sp, #12
 800ad1c:	af00      	add	r7, sp, #0
 800ad1e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800ad20:	2300      	movs	r3, #0
    }
 800ad22:	4618      	mov	r0, r3
 800ad24:	370c      	adds	r7, #12
 800ad26:	46bd      	mov	sp, r7
 800ad28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad2c:	4770      	bx	lr

0800ad2e <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800ad2e:	b580      	push	{r7, lr}
 800ad30:	b082      	sub	sp, #8
 800ad32:	af00      	add	r7, sp, #0
 800ad34:	6078      	str	r0, [r7, #4]
 800ad36:	460b      	mov	r3, r1
 800ad38:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800ad3a:	687b      	ldr	r3, [r7, #4]
 800ad3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ad3e:	2b00      	cmp	r3, #0
 800ad40:	d004      	beq.n	800ad4c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ad46:	887a      	ldrh	r2, [r7, #2]
 800ad48:	4610      	mov	r0, r2
 800ad4a:	4798      	blx	r3
        }
    }
 800ad4c:	bf00      	nop
 800ad4e:	3708      	adds	r7, #8
 800ad50:	46bd      	mov	sp, r7
 800ad52:	bd80      	pop	{r7, pc}

0800ad54 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800ad54:	b480      	push	{r7}
 800ad56:	b083      	sub	sp, #12
 800ad58:	af00      	add	r7, sp, #0
 800ad5a:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800ad5c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800ad60:	4618      	mov	r0, r3
 800ad62:	370c      	adds	r7, #12
 800ad64:	46bd      	mov	sp, r7
 800ad66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad6a:	4770      	bx	lr

0800ad6c <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	b082      	sub	sp, #8
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800ad74:	687b      	ldr	r3, [r7, #4]
 800ad76:	685a      	ldr	r2, [r3, #4]
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	685b      	ldr	r3, [r3, #4]
 800ad7c:	681b      	ldr	r3, [r3, #0]
 800ad7e:	3318      	adds	r3, #24
 800ad80:	681b      	ldr	r3, [r3, #0]
 800ad82:	4610      	mov	r0, r2
 800ad84:	4798      	blx	r3
 800ad86:	4603      	mov	r3, r0
    }
 800ad88:	4618      	mov	r0, r3
 800ad8a:	3708      	adds	r7, #8
 800ad8c:	46bd      	mov	sp, r7
 800ad8e:	bd80      	pop	{r7, pc}

0800ad90 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This occurrence will lead to tearing on the display.
     *
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
 800ad90:	b480      	push	{r7}
 800ad92:	b083      	sub	sp, #12
 800ad94:	af00      	add	r7, sp, #0
 800ad96:	6078      	str	r0, [r7, #4]
    {
    }
 800ad98:	bf00      	nop
 800ad9a:	370c      	adds	r7, #12
 800ad9c:	46bd      	mov	sp, r7
 800ad9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ada2:	4770      	bx	lr

0800ada4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800ada4:	b480      	push	{r7}
 800ada6:	b085      	sub	sp, #20
 800ada8:	af00      	add	r7, sp, #0
 800adaa:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800adac:	687b      	ldr	r3, [r7, #4]
 800adae:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800adb8:	429a      	cmp	r2, r3
 800adba:	d011      	beq.n	800ade0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800adbc:	4b14      	ldr	r3, [pc, #80]	@ (800ae10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800adbe:	781b      	ldrb	r3, [r3, #0]
 800adc0:	2b00      	cmp	r3, #0
 800adc2:	d11e      	bne.n	800ae02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800adc4:	4b13      	ldr	r3, [pc, #76]	@ (800ae14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800adc6:	881b      	ldrh	r3, [r3, #0]
 800adc8:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800adca:	4b13      	ldr	r3, [pc, #76]	@ (800ae18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800adcc:	881a      	ldrh	r2, [r3, #0]
 800adce:	4b11      	ldr	r3, [pc, #68]	@ (800ae14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800add0:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800add2:	4a11      	ldr	r2, [pc, #68]	@ (800ae18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800add4:	89bb      	ldrh	r3, [r7, #12]
 800add6:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800add8:	4b0d      	ldr	r3, [pc, #52]	@ (800ae10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800adda:	2201      	movs	r2, #1
 800addc:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800adde:	e010      	b.n	800ae02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800ade0:	4b0b      	ldr	r3, [pc, #44]	@ (800ae10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ade2:	781b      	ldrb	r3, [r3, #0]
 800ade4:	2b00      	cmp	r3, #0
 800ade6:	d00c      	beq.n	800ae02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800ade8:	4b0a      	ldr	r3, [pc, #40]	@ (800ae14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800adea:	881b      	ldrh	r3, [r3, #0]
 800adec:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800adee:	4b0a      	ldr	r3, [pc, #40]	@ (800ae18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800adf0:	881a      	ldrh	r2, [r3, #0]
 800adf2:	4b08      	ldr	r3, [pc, #32]	@ (800ae14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800adf4:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800adf6:	4a08      	ldr	r2, [pc, #32]	@ (800ae18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800adf8:	89fb      	ldrh	r3, [r7, #14]
 800adfa:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800adfc:	4b04      	ldr	r3, [pc, #16]	@ (800ae10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800adfe:	2200      	movs	r2, #0
 800ae00:	701a      	strb	r2, [r3, #0]
    }
 800ae02:	bf00      	nop
 800ae04:	3714      	adds	r7, #20
 800ae06:	46bd      	mov	sp, r7
 800ae08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae0c:	4770      	bx	lr
 800ae0e:	bf00      	nop
 800ae10:	20002228 	.word	0x20002228
 800ae14:	20002226 	.word	0x20002226
 800ae18:	20002224 	.word	0x20002224

0800ae1c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 800ae1c:	b480      	push	{r7}
 800ae1e:	b083      	sub	sp, #12
 800ae20:	af00      	add	r7, sp, #0
 800ae22:	6078      	str	r0, [r7, #4]
    {
    }
 800ae24:	bf00      	nop
 800ae26:	370c      	adds	r7, #12
 800ae28:	46bd      	mov	sp, r7
 800ae2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae2e:	4770      	bx	lr

0800ae30 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 800ae30:	b480      	push	{r7}
 800ae32:	b083      	sub	sp, #12
 800ae34:	af00      	add	r7, sp, #0
 800ae36:	6078      	str	r0, [r7, #4]
    {
    }
 800ae38:	bf00      	nop
 800ae3a:	370c      	adds	r7, #12
 800ae3c:	46bd      	mov	sp, r7
 800ae3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae42:	4770      	bx	lr

0800ae44 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Invalidate texture cache(s).
     *
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
 800ae44:	b480      	push	{r7}
 800ae46:	b083      	sub	sp, #12
 800ae48:	af00      	add	r7, sp, #0
 800ae4a:	6078      	str	r0, [r7, #4]
    {
    }
 800ae4c:	bf00      	nop
 800ae4e:	370c      	adds	r7, #12
 800ae50:	46bd      	mov	sp, r7
 800ae52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae56:	4770      	bx	lr

0800ae58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800ae58:	b580      	push	{r7, lr}
 800ae5a:	b082      	sub	sp, #8
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	4618      	mov	r0, r3
 800ae64:	f002 f918 	bl	800d098 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800ae68:	bf00      	nop
 800ae6a:	3708      	adds	r7, #8
 800ae6c:	46bd      	mov	sp, r7
 800ae6e:	bd80      	pop	{r7, pc}

0800ae70 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800ae70:	b580      	push	{r7, lr}
 800ae72:	b082      	sub	sp, #8
 800ae74:	af00      	add	r7, sp, #0
 800ae76:	6078      	str	r0, [r7, #4]
 800ae78:	4a05      	ldr	r2, [pc, #20]	@ (800ae90 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	601a      	str	r2, [r3, #0]
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	4618      	mov	r0, r3
 800ae82:	f7ff fe4f 	bl	800ab24 <_ZN8touchgfx3HALD1Ev>
 800ae86:	687b      	ldr	r3, [r7, #4]
 800ae88:	4618      	mov	r0, r3
 800ae8a:	3708      	adds	r7, #8
 800ae8c:	46bd      	mov	sp, r7
 800ae8e:	bd80      	pop	{r7, pc}
 800ae90:	08024624 	.word	0x08024624

0800ae94 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800ae94:	b580      	push	{r7, lr}
 800ae96:	b082      	sub	sp, #8
 800ae98:	af00      	add	r7, sp, #0
 800ae9a:	6078      	str	r0, [r7, #4]
 800ae9c:	6878      	ldr	r0, [r7, #4]
 800ae9e:	f7ff ffe7 	bl	800ae70 <_ZN20TouchGFXGeneratedHALD1Ev>
 800aea2:	2184      	movs	r1, #132	@ 0x84
 800aea4:	6878      	ldr	r0, [r7, #4]
 800aea6:	f016 fdec 	bl	8021a82 <_ZdlPvj>
 800aeaa:	687b      	ldr	r3, [r7, #4]
 800aeac:	4618      	mov	r0, r3
 800aeae:	3708      	adds	r7, #8
 800aeb0:	46bd      	mov	sp, r7
 800aeb2:	bd80      	pop	{r7, pc}

0800aeb4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800aeb4:	b580      	push	{r7, lr}
 800aeb6:	b082      	sub	sp, #8
 800aeb8:	af00      	add	r7, sp, #0
 800aeba:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	4618      	mov	r0, r3
 800aec0:	f7ff ffca 	bl	800ae58 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800aec4:	bf00      	nop
 800aec6:	3708      	adds	r7, #8
 800aec8:	46bd      	mov	sp, r7
 800aeca:	bd80      	pop	{r7, pc}

0800aecc <_ZN11TouchGFXHAL10initializeEv>:
 */
//#warning "A user must call touchgfx::startNewTransfer(); once touchgfxDisplayDriverTransmitBlock() has succesfully sent a block."
//#warning "A user must implement C-methods touchgfxDisplayDriverTransmitActive() and touchgfxDisplayDriverTransmitBlock() used by the Partial Framebuffer Strategy."

void TouchGFXHAL::initialize()
{
 800aecc:	b580      	push	{r7, lr}
 800aece:	b082      	sub	sp, #8
 800aed0:	af00      	add	r7, sp, #0
 800aed2:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800aed4:	687b      	ldr	r3, [r7, #4]
 800aed6:	4618      	mov	r0, r3
 800aed8:	f001 fa52 	bl	800c380 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800aedc:	bf00      	nop
 800aede:	3708      	adds	r7, #8
 800aee0:	46bd      	mov	sp, r7
 800aee2:	bd80      	pop	{r7, pc}

0800aee4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800aee4:	b580      	push	{r7, lr}
 800aee6:	b082      	sub	sp, #8
 800aee8:	af00      	add	r7, sp, #0
 800aeea:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800aeec:	687b      	ldr	r3, [r7, #4]
 800aeee:	4618      	mov	r0, r3
 800aef0:	f001 facc 	bl	800c48c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800aef4:	4603      	mov	r3, r0
}
 800aef6:	4618      	mov	r0, r3
 800aef8:	3708      	adds	r7, #8
 800aefa:	46bd      	mov	sp, r7
 800aefc:	bd80      	pop	{r7, pc}

0800aefe <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800aefe:	b580      	push	{r7, lr}
 800af00:	b082      	sub	sp, #8
 800af02:	af00      	add	r7, sp, #0
 800af04:	6078      	str	r0, [r7, #4]
 800af06:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	6839      	ldr	r1, [r7, #0]
 800af0c:	4618      	mov	r0, r3
 800af0e:	f001 fac8 	bl	800c4a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800af12:	bf00      	nop
 800af14:	3708      	adds	r7, #8
 800af16:	46bd      	mov	sp, r7
 800af18:	bd80      	pop	{r7, pc}

0800af1a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800af1a:	b580      	push	{r7, lr}
 800af1c:	b082      	sub	sp, #8
 800af1e:	af00      	add	r7, sp, #0
 800af20:	6078      	str	r0, [r7, #4]
 800af22:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	6839      	ldr	r1, [r7, #0]
 800af28:	4618      	mov	r0, r3
 800af2a:	f001 fac5 	bl	800c4b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800af2e:	bf00      	nop
 800af30:	3708      	adds	r7, #8
 800af32:	46bd      	mov	sp, r7
 800af34:	bd80      	pop	{r7, pc}

0800af36 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800af36:	b580      	push	{r7, lr}
 800af38:	b084      	sub	sp, #16
 800af3a:	af00      	add	r7, sp, #0
 800af3c:	60f8      	str	r0, [r7, #12]
 800af3e:	60b9      	str	r1, [r7, #8]
 800af40:	607a      	str	r2, [r7, #4]
 800af42:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800af44:	68f8      	ldr	r0, [r7, #12]
 800af46:	683b      	ldr	r3, [r7, #0]
 800af48:	687a      	ldr	r2, [r7, #4]
 800af4a:	68b9      	ldr	r1, [r7, #8]
 800af4c:	f001 faf7 	bl	800c53e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800af50:	4603      	mov	r3, r0
}
 800af52:	4618      	mov	r0, r3
 800af54:	3710      	adds	r7, #16
 800af56:	46bd      	mov	sp, r7
 800af58:	bd80      	pop	{r7, pc}

0800af5a <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800af5a:	b580      	push	{r7, lr}
 800af5c:	b082      	sub	sp, #8
 800af5e:	af00      	add	r7, sp, #0
 800af60:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	4618      	mov	r0, r3
 800af66:	f001 fa43 	bl	800c3f0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800af6a:	bf00      	nop
 800af6c:	3708      	adds	r7, #8
 800af6e:	46bd      	mov	sp, r7
 800af70:	bd80      	pop	{r7, pc}

0800af72 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800af72:	b580      	push	{r7, lr}
 800af74:	b082      	sub	sp, #8
 800af76:	af00      	add	r7, sp, #0
 800af78:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800af7a:	687b      	ldr	r3, [r7, #4]
 800af7c:	4618      	mov	r0, r3
 800af7e:	f001 fa41 	bl	800c404 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800af82:	bf00      	nop
 800af84:	3708      	adds	r7, #8
 800af86:	46bd      	mov	sp, r7
 800af88:	bd80      	pop	{r7, pc}

0800af8a <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800af8a:	b580      	push	{r7, lr}
 800af8c:	b082      	sub	sp, #8
 800af8e:	af00      	add	r7, sp, #0
 800af90:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	4618      	mov	r0, r3
 800af96:	f001 fa3f 	bl	800c418 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800af9a:	bf00      	nop
 800af9c:	3708      	adds	r7, #8
 800af9e:	46bd      	mov	sp, r7
 800afa0:	bd80      	pop	{r7, pc}

0800afa2 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800afa2:	b580      	push	{r7, lr}
 800afa4:	b082      	sub	sp, #8
 800afa6:	af00      	add	r7, sp, #0
 800afa8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800afaa:	687b      	ldr	r3, [r7, #4]
 800afac:	4618      	mov	r0, r3
 800afae:	f001 fa3d 	bl	800c42c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800afb2:	bf00      	nop
 800afb4:	3708      	adds	r7, #8
 800afb6:	46bd      	mov	sp, r7
 800afb8:	bd80      	pop	{r7, pc}

0800afba <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800afba:	b580      	push	{r7, lr}
 800afbc:	b082      	sub	sp, #8
 800afbe:	af00      	add	r7, sp, #0
 800afc0:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	4618      	mov	r0, r3
 800afc6:	f001 fa3b 	bl	800c440 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800afca:	4603      	mov	r3, r0
}
 800afcc:	4618      	mov	r0, r3
 800afce:	3708      	adds	r7, #8
 800afd0:	46bd      	mov	sp, r7
 800afd2:	bd80      	pop	{r7, pc}

0800afd4 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800afd4:	b580      	push	{r7, lr}
 800afd6:	b082      	sub	sp, #8
 800afd8:	af00      	add	r7, sp, #0
 800afda:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800afdc:	687b      	ldr	r3, [r7, #4]
 800afde:	4618      	mov	r0, r3
 800afe0:	f001 fa3b 	bl	800c45a <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800afe4:	bf00      	nop
 800afe6:	3708      	adds	r7, #8
 800afe8:	46bd      	mov	sp, r7
 800afea:	bd80      	pop	{r7, pc}

0800afec <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800afec:	b580      	push	{r7, lr}
 800afee:	b082      	sub	sp, #8
 800aff0:	af00      	add	r7, sp, #0
 800aff2:	6078      	str	r0, [r7, #4]
 800aff4:	4a05      	ldr	r2, [pc, #20]	@ (800b00c <_ZN11TouchGFXHALD1Ev+0x20>)
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	601a      	str	r2, [r3, #0]
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	4618      	mov	r0, r3
 800affe:	f7ff ff37 	bl	800ae70 <_ZN20TouchGFXGeneratedHALD1Ev>
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	4618      	mov	r0, r3
 800b006:	3708      	adds	r7, #8
 800b008:	46bd      	mov	sp, r7
 800b00a:	bd80      	pop	{r7, pc}
 800b00c:	080243c4 	.word	0x080243c4

0800b010 <_ZN11TouchGFXHALD0Ev>:
 800b010:	b580      	push	{r7, lr}
 800b012:	b082      	sub	sp, #8
 800b014:	af00      	add	r7, sp, #0
 800b016:	6078      	str	r0, [r7, #4]
 800b018:	6878      	ldr	r0, [r7, #4]
 800b01a:	f7ff ffe7 	bl	800afec <_ZN11TouchGFXHALD1Ev>
 800b01e:	2184      	movs	r1, #132	@ 0x84
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f016 fd2e 	bl	8021a82 <_ZdlPvj>
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	4618      	mov	r0, r3
 800b02a:	3708      	adds	r7, #8
 800b02c:	46bd      	mov	sp, r7
 800b02e:	bd80      	pop	{r7, pc}

0800b030 <touchgfxDisplayDriverTransmitActive>:
extern void DisplayDriver_TransferCompleteCallback();

static uint8_t isTransmittingData = 0;

uint32_t touchgfxDisplayDriverTransmitActive(void)
{
 800b030:	b480      	push	{r7}
 800b032:	af00      	add	r7, sp, #0
	return isTransmittingData;
 800b034:	4b03      	ldr	r3, [pc, #12]	@ (800b044 <touchgfxDisplayDriverTransmitActive+0x14>)
 800b036:	781b      	ldrb	r3, [r3, #0]
}
 800b038:	4618      	mov	r0, r3
 800b03a:	46bd      	mov	sp, r7
 800b03c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b040:	4770      	bx	lr
 800b042:	bf00      	nop
 800b044:	20000594 	.word	0x20000594

0800b048 <touchgfxDisplayDriverTransmitBlock>:

void touchgfxDisplayDriverTransmitBlock(uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h)
{
 800b048:	b590      	push	{r4, r7, lr}
 800b04a:	b085      	sub	sp, #20
 800b04c:	af00      	add	r7, sp, #0
 800b04e:	60f8      	str	r0, [r7, #12]
 800b050:	4608      	mov	r0, r1
 800b052:	4611      	mov	r1, r2
 800b054:	461a      	mov	r2, r3
 800b056:	4603      	mov	r3, r0
 800b058:	817b      	strh	r3, [r7, #10]
 800b05a:	460b      	mov	r3, r1
 800b05c:	813b      	strh	r3, [r7, #8]
 800b05e:	4613      	mov	r3, r2
 800b060:	80fb      	strh	r3, [r7, #6]
	isTransmittingData = 1;
 800b062:	4b0f      	ldr	r3, [pc, #60]	@ (800b0a0 <touchgfxDisplayDriverTransmitBlock+0x58>)
 800b064:	2201      	movs	r2, #1
 800b066:	701a      	strb	r2, [r3, #0]
	ILI9341_SetWindow(x, y, x+w-1, y+h-1);
 800b068:	897a      	ldrh	r2, [r7, #10]
 800b06a:	88fb      	ldrh	r3, [r7, #6]
 800b06c:	4413      	add	r3, r2
 800b06e:	b29b      	uxth	r3, r3
 800b070:	3b01      	subs	r3, #1
 800b072:	b29c      	uxth	r4, r3
 800b074:	893a      	ldrh	r2, [r7, #8]
 800b076:	8c3b      	ldrh	r3, [r7, #32]
 800b078:	4413      	add	r3, r2
 800b07a:	b29b      	uxth	r3, r3
 800b07c:	3b01      	subs	r3, #1
 800b07e:	b29b      	uxth	r3, r3
 800b080:	8939      	ldrh	r1, [r7, #8]
 800b082:	8978      	ldrh	r0, [r7, #10]
 800b084:	4622      	mov	r2, r4
 800b086:	f7f5 fa08 	bl	800049a <ILI9341_SetWindow>
	ILI9341_DrawBitmap(w, h, pixels);
 800b08a:	8c39      	ldrh	r1, [r7, #32]
 800b08c:	88fb      	ldrh	r3, [r7, #6]
 800b08e:	68fa      	ldr	r2, [r7, #12]
 800b090:	4618      	mov	r0, r3
 800b092:	f7f5 fa6d 	bl	8000570 <ILI9341_DrawBitmap>
}
 800b096:	bf00      	nop
 800b098:	3714      	adds	r7, #20
 800b09a:	46bd      	mov	sp, r7
 800b09c:	bd90      	pop	{r4, r7, pc}
 800b09e:	bf00      	nop
 800b0a0:	20000594 	.word	0x20000594

0800b0a4 <HAL_SPI_TxCpltCallback>:

void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 800b0a4:	b580      	push	{r7, lr}
 800b0a6:	b082      	sub	sp, #8
 800b0a8:	af00      	add	r7, sp, #0
 800b0aa:	6078      	str	r0, [r7, #4]
	if (hspi->Instance == SPI1) {
 800b0ac:	687b      	ldr	r3, [r7, #4]
 800b0ae:	681b      	ldr	r3, [r3, #0]
 800b0b0:	4a06      	ldr	r2, [pc, #24]	@ (800b0cc <HAL_SPI_TxCpltCallback+0x28>)
 800b0b2:	4293      	cmp	r3, r2
 800b0b4:	d106      	bne.n	800b0c4 <HAL_SPI_TxCpltCallback+0x20>
		ILI9341_EndOfDrawBitmap();
 800b0b6:	f7f5 fa83 	bl	80005c0 <ILI9341_EndOfDrawBitmap>
		isTransmittingData = 0;
 800b0ba:	4b05      	ldr	r3, [pc, #20]	@ (800b0d0 <HAL_SPI_TxCpltCallback+0x2c>)
 800b0bc:	2200      	movs	r2, #0
 800b0be:	701a      	strb	r2, [r3, #0]
		DisplayDriver_TransferCompleteCallback();
 800b0c0:	f001 fa98 	bl	800c5f4 <DisplayDriver_TransferCompleteCallback>
	}
}
 800b0c4:	bf00      	nop
 800b0c6:	3708      	adds	r7, #8
 800b0c8:	46bd      	mov	sp, r7
 800b0ca:	bd80      	pop	{r7, pc}
 800b0cc:	40013000 	.word	0x40013000
 800b0d0:	20000594 	.word	0x20000594

0800b0d4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800b0d4:	b480      	push	{r7}
 800b0d6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b0d8:	4b05      	ldr	r3, [pc, #20]	@ (800b0f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800b0da:	2200      	movs	r2, #0
 800b0dc:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800b0de:	4b05      	ldr	r3, [pc, #20]	@ (800b0f4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800b0e0:	2200      	movs	r2, #0
 800b0e2:	601a      	str	r2, [r3, #0]
}
 800b0e4:	bf00      	nop
 800b0e6:	46bd      	mov	sp, r7
 800b0e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0ec:	4770      	bx	lr
 800b0ee:	bf00      	nop
 800b0f0:	20000598 	.word	0x20000598
 800b0f4:	2000059c 	.word	0x2000059c

0800b0f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800b0f8:	b480      	push	{r7}
 800b0fa:	af00      	add	r7, sp, #0
    while (fb_sem);
 800b0fc:	bf00      	nop
 800b0fe:	4b08      	ldr	r3, [pc, #32]	@ (800b120 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b100:	681b      	ldr	r3, [r3, #0]
 800b102:	2b00      	cmp	r3, #0
 800b104:	bf14      	ite	ne
 800b106:	2301      	movne	r3, #1
 800b108:	2300      	moveq	r3, #0
 800b10a:	b2db      	uxtb	r3, r3
 800b10c:	2b00      	cmp	r3, #0
 800b10e:	d1f6      	bne.n	800b0fe <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800b110:	4b03      	ldr	r3, [pc, #12]	@ (800b120 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b112:	2201      	movs	r2, #1
 800b114:	601a      	str	r2, [r3, #0]
}
 800b116:	bf00      	nop
 800b118:	46bd      	mov	sp, r7
 800b11a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11e:	4770      	bx	lr
 800b120:	20000598 	.word	0x20000598

0800b124 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800b124:	b480      	push	{r7}
 800b126:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b128:	4b03      	ldr	r3, [pc, #12]	@ (800b138 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800b12a:	2200      	movs	r2, #0
 800b12c:	601a      	str	r2, [r3, #0]
}
 800b12e:	bf00      	nop
 800b130:	46bd      	mov	sp, r7
 800b132:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b136:	4770      	bx	lr
 800b138:	20000598 	.word	0x20000598

0800b13c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800b13c:	b480      	push	{r7}
 800b13e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800b140:	4b03      	ldr	r3, [pc, #12]	@ (800b150 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800b142:	2201      	movs	r2, #1
 800b144:	601a      	str	r2, [r3, #0]
}
 800b146:	bf00      	nop
 800b148:	46bd      	mov	sp, r7
 800b14a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b14e:	4770      	bx	lr
 800b150:	20000598 	.word	0x20000598

0800b154 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800b154:	b480      	push	{r7}
 800b156:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b158:	4b03      	ldr	r3, [pc, #12]	@ (800b168 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800b15a:	2200      	movs	r2, #0
 800b15c:	601a      	str	r2, [r3, #0]
}
 800b15e:	bf00      	nop
 800b160:	46bd      	mov	sp, r7
 800b162:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b166:	4770      	bx	lr
 800b168:	20000598 	.word	0x20000598

0800b16c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800b16c:	b480      	push	{r7}
 800b16e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800b170:	4b03      	ldr	r3, [pc, #12]	@ (800b180 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800b172:	2201      	movs	r2, #1
 800b174:	601a      	str	r2, [r3, #0]
}
 800b176:	bf00      	nop
 800b178:	46bd      	mov	sp, r7
 800b17a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b17e:	4770      	bx	lr
 800b180:	2000059c 	.word	0x2000059c

0800b184 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800b184:	b480      	push	{r7}
 800b186:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800b188:	4b03      	ldr	r3, [pc, #12]	@ (800b198 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800b18a:	2200      	movs	r2, #0
 800b18c:	601a      	str	r2, [r3, #0]
}
 800b18e:	bf00      	nop
 800b190:	46bd      	mov	sp, r7
 800b192:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b196:	4770      	bx	lr
 800b198:	2000059c 	.word	0x2000059c

0800b19c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800b19c:	b480      	push	{r7}
 800b19e:	af00      	add	r7, sp, #0
    return vsync_sem;
 800b1a0:	4b05      	ldr	r3, [pc, #20]	@ (800b1b8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800b1a2:	681b      	ldr	r3, [r3, #0]
 800b1a4:	2b00      	cmp	r3, #0
 800b1a6:	bf14      	ite	ne
 800b1a8:	2301      	movne	r3, #1
 800b1aa:	2300      	moveq	r3, #0
 800b1ac:	b2db      	uxtb	r3, r3
}
 800b1ae:	4618      	mov	r0, r3
 800b1b0:	46bd      	mov	sp, r7
 800b1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1b6:	4770      	bx	lr
 800b1b8:	2000059c 	.word	0x2000059c

0800b1bc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800b1bc:	b580      	push	{r7, lr}
 800b1be:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800b1c0:	4b0a      	ldr	r3, [pc, #40]	@ (800b1ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b1c2:	681b      	ldr	r3, [r3, #0]
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	bf14      	ite	ne
 800b1c8:	2301      	movne	r3, #1
 800b1ca:	2300      	moveq	r3, #0
 800b1cc:	b2db      	uxtb	r3, r3
 800b1ce:	2b00      	cmp	r3, #0
 800b1d0:	d00a      	beq.n	800b1e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800b1d2:	4b06      	ldr	r3, [pc, #24]	@ (800b1ec <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b1d4:	2200      	movs	r2, #0
 800b1d6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800b1d8:	f7fc fc84 	bl	8007ae4 <_ZN8touchgfx3HAL11getInstanceEv>
 800b1dc:	4603      	mov	r3, r0
 800b1de:	681a      	ldr	r2, [r3, #0]
 800b1e0:	3274      	adds	r2, #116	@ 0x74
 800b1e2:	6812      	ldr	r2, [r2, #0]
 800b1e4:	4618      	mov	r0, r3
 800b1e6:	4790      	blx	r2
    }
}
 800b1e8:	bf00      	nop
 800b1ea:	bd80      	pop	{r7, pc}
 800b1ec:	2000059c 	.word	0x2000059c

0800b1f0 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800b1f0:	b480      	push	{r7}
 800b1f2:	b083      	sub	sp, #12
 800b1f4:	af00      	add	r7, sp, #0
 800b1f6:	6078      	str	r0, [r7, #4]
        : color(0)
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	601a      	str	r2, [r3, #0]
    }
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	4618      	mov	r0, r3
 800b202:	370c      	adds	r7, #12
 800b204:	46bd      	mov	sp, r7
 800b206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b20a:	4770      	bx	lr

0800b20c <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800b20c:	b480      	push	{r7}
 800b20e:	b083      	sub	sp, #12
 800b210:	af00      	add	r7, sp, #0
 800b212:	6078      	str	r0, [r7, #4]
    {
 800b214:	4a04      	ldr	r2, [pc, #16]	@ (800b228 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800b216:	687b      	ldr	r3, [r7, #4]
 800b218:	601a      	str	r2, [r3, #0]
    }
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	4618      	mov	r0, r3
 800b21e:	370c      	adds	r7, #12
 800b220:	46bd      	mov	sp, r7
 800b222:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b226:	4770      	bx	lr
 800b228:	08024500 	.word	0x08024500

0800b22c <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800b22c:	b580      	push	{r7, lr}
 800b22e:	b082      	sub	sp, #8
 800b230:	af00      	add	r7, sp, #0
 800b232:	6078      	str	r0, [r7, #4]
    }
 800b234:	6878      	ldr	r0, [r7, #4]
 800b236:	f7ff ffe9 	bl	800b20c <_ZN8touchgfx9DMA_QueueD1Ev>
 800b23a:	2104      	movs	r1, #4
 800b23c:	6878      	ldr	r0, [r7, #4]
 800b23e:	f016 fc20 	bl	8021a82 <_ZdlPvj>
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4618      	mov	r0, r3
 800b246:	3708      	adds	r7, #8
 800b248:	46bd      	mov	sp, r7
 800b24a:	bd80      	pop	{r7, pc}

0800b24c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    {
        waitForFrameBufferSemaphore();
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
 800b24c:	b480      	push	{r7}
 800b24e:	b083      	sub	sp, #12
 800b250:	af00      	add	r7, sp, #0
 800b252:	6078      	str	r0, [r7, #4]
    {
    }
 800b254:	bf00      	nop
 800b256:	370c      	adds	r7, #12
 800b258:	46bd      	mov	sp, r7
 800b25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b25e:	4770      	bx	lr

0800b260 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA_Interface implementation. As
     * default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
 800b260:	b480      	push	{r7}
 800b262:	b083      	sub	sp, #12
 800b264:	af00      	add	r7, sp, #0
 800b266:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 800b268:	2300      	movs	r3, #0
    }
 800b26a:	4618      	mov	r0, r3
 800b26c:	370c      	adds	r7, #12
 800b26e:	46bd      	mov	sp, r7
 800b270:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b274:	4770      	bx	lr
	...

0800b278 <_ZN8touchgfx13DMA_InterfaceD1Ev>:

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800b278:	b480      	push	{r7}
 800b27a:	b083      	sub	sp, #12
 800b27c:	af00      	add	r7, sp, #0
 800b27e:	6078      	str	r0, [r7, #4]
    {
 800b280:	4a04      	ldr	r2, [pc, #16]	@ (800b294 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800b282:	687b      	ldr	r3, [r7, #4]
 800b284:	601a      	str	r2, [r3, #0]
    }
 800b286:	687b      	ldr	r3, [r7, #4]
 800b288:	4618      	mov	r0, r3
 800b28a:	370c      	adds	r7, #12
 800b28c:	46bd      	mov	sp, r7
 800b28e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b292:	4770      	bx	lr
 800b294:	080248f8 	.word	0x080248f8

0800b298 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800b298:	b580      	push	{r7, lr}
 800b29a:	b082      	sub	sp, #8
 800b29c:	af00      	add	r7, sp, #0
 800b29e:	6078      	str	r0, [r7, #4]
    }
 800b2a0:	6878      	ldr	r0, [r7, #4]
 800b2a2:	f7ff ffe9 	bl	800b278 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b2a6:	210c      	movs	r1, #12
 800b2a8:	6878      	ldr	r0, [r7, #4]
 800b2aa:	f016 fbea 	bl	8021a82 <_ZdlPvj>
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	4618      	mov	r0, r3
 800b2b2:	3708      	adds	r7, #8
 800b2b4:	46bd      	mov	sp, r7
 800b2b6:	bd80      	pop	{r7, pc}

0800b2b8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800b2b8:	b480      	push	{r7}
 800b2ba:	b083      	sub	sp, #12
 800b2bc:	af00      	add	r7, sp, #0
 800b2be:	6078      	str	r0, [r7, #4]
 800b2c0:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800b2c2:	4a09      	ldr	r2, [pc, #36]	@ (800b2e8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	601a      	str	r2, [r3, #0]
 800b2c8:	687b      	ldr	r3, [r7, #4]
 800b2ca:	683a      	ldr	r2, [r7, #0]
 800b2cc:	605a      	str	r2, [r3, #4]
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	2200      	movs	r2, #0
 800b2d2:	721a      	strb	r2, [r3, #8]
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	2200      	movs	r2, #0
 800b2d8:	725a      	strb	r2, [r3, #9]
    {
    }
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	4618      	mov	r0, r3
 800b2de:	370c      	adds	r7, #12
 800b2e0:	46bd      	mov	sp, r7
 800b2e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2e6:	4770      	bx	lr
 800b2e8:	080248f8 	.word	0x080248f8

0800b2ec <_ZN8STM32DMA18signalDMAInterruptEv>:
    /**
     * @fn virtual void STM32DMA::signalDMAInterrupt();
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
 800b2ec:	b480      	push	{r7}
 800b2ee:	b083      	sub	sp, #12
 800b2f0:	af00      	add	r7, sp, #0
 800b2f2:	6078      	str	r0, [r7, #4]
    {
    }
 800b2f4:	bf00      	nop
 800b2f6:	370c      	adds	r7, #12
 800b2f8:	46bd      	mov	sp, r7
 800b2fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2fe:	4770      	bx	lr

0800b300 <_ZN8STM32DMA5flushEv>:
     * @fn virtual void STM32DMA::flush();
     *
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
 800b300:	b480      	push	{r7}
 800b302:	b083      	sub	sp, #12
 800b304:	af00      	add	r7, sp, #0
 800b306:	6078      	str	r0, [r7, #4]
    {
    }
 800b308:	bf00      	nop
 800b30a:	370c      	adds	r7, #12
 800b30c:	46bd      	mov	sp, r7
 800b30e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b312:	4770      	bx	lr

0800b314 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800b314:	b580      	push	{r7, lr}
 800b316:	b082      	sub	sp, #8
 800b318:	af00      	add	r7, sp, #0
 800b31a:	6078      	str	r0, [r7, #4]
 800b31c:	687b      	ldr	r3, [r7, #4]
 800b31e:	330c      	adds	r3, #12
 800b320:	4618      	mov	r0, r3
 800b322:	f7ff ff65 	bl	800b1f0 <_ZN8touchgfx9colortypeC1Ev>
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	4618      	mov	r0, r3
 800b32a:	3708      	adds	r7, #8
 800b32c:	46bd      	mov	sp, r7
 800b32e:	bd80      	pop	{r7, pc}

0800b330 <_ZN8STM32DMAC1Ev>:
  */

#include <STM32DMA.hpp>
#include <assert.h>

STM32DMA::STM32DMA()
 800b330:	b580      	push	{r7, lr}
 800b332:	b082      	sub	sp, #8
 800b334:	af00      	add	r7, sp, #0
 800b336:	6078      	str	r0, [r7, #4]
    : DMA_Interface(q), q(&b, 1)
 800b338:	687a      	ldr	r2, [r7, #4]
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	330c      	adds	r3, #12
 800b33e:	4619      	mov	r1, r3
 800b340:	4610      	mov	r0, r2
 800b342:	f7ff ffb9 	bl	800b2b8 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800b346:	4a0b      	ldr	r2, [pc, #44]	@ (800b374 <_ZN8STM32DMAC1Ev+0x44>)
 800b348:	687b      	ldr	r3, [r7, #4]
 800b34a:	601a      	str	r2, [r3, #0]
 800b34c:	687b      	ldr	r3, [r7, #4]
 800b34e:	f103 000c 	add.w	r0, r3, #12
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	3320      	adds	r3, #32
 800b356:	2201      	movs	r2, #1
 800b358:	4619      	mov	r1, r3
 800b35a:	f002 fdb9 	bl	800ded0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	3320      	adds	r3, #32
 800b362:	4618      	mov	r0, r3
 800b364:	f7ff ffd6 	bl	800b314 <_ZN8touchgfx6BlitOpC1Ev>
{
}
 800b368:	687b      	ldr	r3, [r7, #4]
 800b36a:	4618      	mov	r0, r3
 800b36c:	3708      	adds	r7, #8
 800b36e:	46bd      	mov	sp, r7
 800b370:	bd80      	pop	{r7, pc}
 800b372:	bf00      	nop
 800b374:	080244b0 	.word	0x080244b0

0800b378 <_ZN8STM32DMA11getBlitCapsEv>:

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
 800b378:	b480      	push	{r7}
 800b37a:	b083      	sub	sp, #12
 800b37c:	af00      	add	r7, sp, #0
 800b37e:	6078      	str	r0, [r7, #4]
    return static_cast<touchgfx::BlitOperations>(0);
 800b380:	2300      	movs	r3, #0
}
 800b382:	4618      	mov	r0, r3
 800b384:	370c      	adds	r7, #12
 800b386:	46bd      	mov	sp, r7
 800b388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b38c:	4770      	bx	lr
	...

0800b390 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 800b390:	b580      	push	{r7, lr}
 800b392:	b082      	sub	sp, #8
 800b394:	af00      	add	r7, sp, #0
 800b396:	6078      	str	r0, [r7, #4]
 800b398:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800b39a:	4b03      	ldr	r3, [pc, #12]	@ (800b3a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800b39c:	4a03      	ldr	r2, [pc, #12]	@ (800b3ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800b39e:	2122      	movs	r1, #34	@ 0x22
 800b3a0:	4803      	ldr	r0, [pc, #12]	@ (800b3b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800b3a2:	f016 fb9b 	bl	8021adc <__assert_func>
 800b3a6:	bf00      	nop
 800b3a8:	080235e0 	.word	0x080235e0
 800b3ac:	08023604 	.word	0x08023604
 800b3b0:	08023644 	.word	0x08023644

0800b3b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800b3b4:	b580      	push	{r7, lr}
 800b3b6:	b082      	sub	sp, #8
 800b3b8:	af00      	add	r7, sp, #0
 800b3ba:	6078      	str	r0, [r7, #4]
 800b3bc:	6039      	str	r1, [r7, #0]
    assert(0 && "DMA operation not supported");
 800b3be:	4b03      	ldr	r3, [pc, #12]	@ (800b3cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800b3c0:	4a03      	ldr	r2, [pc, #12]	@ (800b3d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800b3c2:	2127      	movs	r1, #39	@ 0x27
 800b3c4:	4803      	ldr	r0, [pc, #12]	@ (800b3d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800b3c6:	f016 fb89 	bl	8021adc <__assert_func>
 800b3ca:	bf00      	nop
 800b3cc:	080235e0 	.word	0x080235e0
 800b3d0:	08023670 	.word	0x08023670
 800b3d4:	08023644 	.word	0x08023644

0800b3d8 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800b3d8:	b580      	push	{r7, lr}
 800b3da:	b082      	sub	sp, #8
 800b3dc:	af00      	add	r7, sp, #0
 800b3de:	6078      	str	r0, [r7, #4]
 800b3e0:	4a08      	ldr	r2, [pc, #32]	@ (800b404 <_ZN8STM32DMAD1Ev+0x2c>)
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	601a      	str	r2, [r3, #0]
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	330c      	adds	r3, #12
 800b3ea:	4618      	mov	r0, r3
 800b3ec:	f000 f81c 	bl	800b428 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b3f0:	687b      	ldr	r3, [r7, #4]
 800b3f2:	4618      	mov	r0, r3
 800b3f4:	f7ff ff40 	bl	800b278 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	4618      	mov	r0, r3
 800b3fc:	3708      	adds	r7, #8
 800b3fe:	46bd      	mov	sp, r7
 800b400:	bd80      	pop	{r7, pc}
 800b402:	bf00      	nop
 800b404:	080244b0 	.word	0x080244b0

0800b408 <_ZN8STM32DMAD0Ev>:
 800b408:	b580      	push	{r7, lr}
 800b40a:	b082      	sub	sp, #8
 800b40c:	af00      	add	r7, sp, #0
 800b40e:	6078      	str	r0, [r7, #4]
 800b410:	6878      	ldr	r0, [r7, #4]
 800b412:	f7ff ffe1 	bl	800b3d8 <_ZN8STM32DMAD1Ev>
 800b416:	2144      	movs	r1, #68	@ 0x44
 800b418:	6878      	ldr	r0, [r7, #4]
 800b41a:	f016 fb32 	bl	8021a82 <_ZdlPvj>
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	4618      	mov	r0, r3
 800b422:	3708      	adds	r7, #8
 800b424:	46bd      	mov	sp, r7
 800b426:	bd80      	pop	{r7, pc}

0800b428 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800b428:	b580      	push	{r7, lr}
 800b42a:	b082      	sub	sp, #8
 800b42c:	af00      	add	r7, sp, #0
 800b42e:	6078      	str	r0, [r7, #4]
 800b430:	4a05      	ldr	r2, [pc, #20]	@ (800b448 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	601a      	str	r2, [r3, #0]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	4618      	mov	r0, r3
 800b43a:	f7ff fee7 	bl	800b20c <_ZN8touchgfx9DMA_QueueD1Ev>
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	4618      	mov	r0, r3
 800b442:	3708      	adds	r7, #8
 800b444:	46bd      	mov	sp, r7
 800b446:	bd80      	pop	{r7, pc}
 800b448:	08024948 	.word	0x08024948

0800b44c <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b44c:	b580      	push	{r7, lr}
 800b44e:	b082      	sub	sp, #8
 800b450:	af00      	add	r7, sp, #0
 800b452:	6078      	str	r0, [r7, #4]
 800b454:	6878      	ldr	r0, [r7, #4]
 800b456:	f7ff ffe7 	bl	800b428 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b45a:	2114      	movs	r1, #20
 800b45c:	6878      	ldr	r0, [r7, #4]
 800b45e:	f016 fb10 	bl	8021a82 <_ZdlPvj>
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	4618      	mov	r0, r3
 800b466:	3708      	adds	r7, #8
 800b468:	46bd      	mov	sp, r7
 800b46a:	bd80      	pop	{r7, pc}

0800b46c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800b46c:	b480      	push	{r7}
 800b46e:	b083      	sub	sp, #12
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800b474:	4a04      	ldr	r2, [pc, #16]	@ (800b488 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	6013      	str	r3, [r2, #0]
    }
 800b47a:	bf00      	nop
 800b47c:	370c      	adds	r7, #12
 800b47e:	46bd      	mov	sp, r7
 800b480:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b484:	4770      	bx	lr
 800b486:	bf00      	nop
 800b488:	2000228c 	.word	0x2000228c

0800b48c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800b48c:	b480      	push	{r7}
 800b48e:	b085      	sub	sp, #20
 800b490:	af00      	add	r7, sp, #0
 800b492:	60f8      	str	r0, [r7, #12]
 800b494:	60b9      	str	r1, [r7, #8]
 800b496:	607a      	str	r2, [r7, #4]
 800b498:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800b49a:	4a0b      	ldr	r2, [pc, #44]	@ (800b4c8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800b49c:	68fb      	ldr	r3, [r7, #12]
 800b49e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800b4a0:	68fb      	ldr	r3, [r7, #12]
 800b4a2:	68ba      	ldr	r2, [r7, #8]
 800b4a4:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800b4a6:	68fb      	ldr	r3, [r7, #12]
 800b4a8:	687a      	ldr	r2, [r7, #4]
 800b4aa:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800b4ac:	68fb      	ldr	r3, [r7, #12]
 800b4ae:	683a      	ldr	r2, [r7, #0]
 800b4b0:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800b4b2:	68fb      	ldr	r3, [r7, #12]
 800b4b4:	69ba      	ldr	r2, [r7, #24]
 800b4b6:	611a      	str	r2, [r3, #16]
    {
    }
 800b4b8:	68fb      	ldr	r3, [r7, #12]
 800b4ba:	4618      	mov	r0, r3
 800b4bc:	3714      	adds	r7, #20
 800b4be:	46bd      	mov	sp, r7
 800b4c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4c4:	4770      	bx	lr
 800b4c6:	bf00      	nop
 800b4c8:	080245e8 	.word	0x080245e8

0800b4cc <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800b4cc:	b480      	push	{r7}
 800b4ce:	b083      	sub	sp, #12
 800b4d0:	af00      	add	r7, sp, #0
 800b4d2:	6078      	str	r0, [r7, #4]
    {
 800b4d4:	4a04      	ldr	r2, [pc, #16]	@ (800b4e8 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	601a      	str	r2, [r3, #0]
    }
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	4618      	mov	r0, r3
 800b4de:	370c      	adds	r7, #12
 800b4e0:	46bd      	mov	sp, r7
 800b4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4e6:	4770      	bx	lr
 800b4e8:	080245e8 	.word	0x080245e8

0800b4ec <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800b4ec:	b580      	push	{r7, lr}
 800b4ee:	b082      	sub	sp, #8
 800b4f0:	af00      	add	r7, sp, #0
 800b4f2:	6078      	str	r0, [r7, #4]
    }
 800b4f4:	6878      	ldr	r0, [r7, #4]
 800b4f6:	f7ff ffe9 	bl	800b4cc <_ZN8touchgfx7MVPHeapD1Ev>
 800b4fa:	2114      	movs	r1, #20
 800b4fc:	6878      	ldr	r0, [r7, #4]
 800b4fe:	f016 fac0 	bl	8021a82 <_ZdlPvj>
 800b502:	687b      	ldr	r3, [r7, #4]
 800b504:	4618      	mov	r0, r3
 800b506:	3708      	adds	r7, #8
 800b508:	46bd      	mov	sp, r7
 800b50a:	bd80      	pop	{r7, pc}

0800b50c <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800b50c:	b480      	push	{r7}
 800b50e:	b083      	sub	sp, #12
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
    {
 800b514:	4a04      	ldr	r2, [pc, #16]	@ (800b528 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800b516:	687b      	ldr	r3, [r7, #4]
 800b518:	601a      	str	r2, [r3, #0]
    }
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	4618      	mov	r0, r3
 800b51e:	370c      	adds	r7, #12
 800b520:	46bd      	mov	sp, r7
 800b522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b526:	4770      	bx	lr
 800b528:	08024af4 	.word	0x08024af4

0800b52c <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800b52c:	b580      	push	{r7, lr}
 800b52e:	b082      	sub	sp, #8
 800b530:	af00      	add	r7, sp, #0
 800b532:	6078      	str	r0, [r7, #4]
    }
 800b534:	6878      	ldr	r0, [r7, #4]
 800b536:	f7ff ffe9 	bl	800b50c <_ZN8touchgfx3LCDD1Ev>
 800b53a:	210c      	movs	r1, #12
 800b53c:	6878      	ldr	r0, [r7, #4]
 800b53e:	f016 faa0 	bl	8021a82 <_ZdlPvj>
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	4618      	mov	r0, r3
 800b546:	3708      	adds	r7, #8
 800b548:	46bd      	mov	sp, r7
 800b54a:	bd80      	pop	{r7, pc}

0800b54c <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800b54c:	b480      	push	{r7}
 800b54e:	b083      	sub	sp, #12
 800b550:	af00      	add	r7, sp, #0
 800b552:	6078      	str	r0, [r7, #4]
            : startX(0),
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	2200      	movs	r2, #0
 800b558:	801a      	strh	r2, [r3, #0]
              startY(0),
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	2200      	movs	r2, #0
 800b55e:	805a      	strh	r2, [r3, #2]
              downX(0),
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	2200      	movs	r2, #0
 800b564:	809a      	strh	r2, [r3, #4]
              downY(0),
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	2200      	movs	r2, #0
 800b56a:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800b56c:	687b      	ldr	r3, [r7, #4]
 800b56e:	2200      	movs	r2, #0
 800b570:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	2200      	movs	r2, #0
 800b576:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	2200      	movs	r2, #0
 800b57c:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800b57e:	687b      	ldr	r3, [r7, #4]
 800b580:	2200      	movs	r2, #0
 800b582:	739a      	strb	r2, [r3, #14]
        {
        }
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	4618      	mov	r0, r3
 800b588:	370c      	adds	r7, #12
 800b58a:	46bd      	mov	sp, r7
 800b58c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b590:	4770      	bx	lr

0800b592 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800b592:	b580      	push	{r7, lr}
 800b594:	b082      	sub	sp, #8
 800b596:	af00      	add	r7, sp, #0
 800b598:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800b59a:	687b      	ldr	r3, [r7, #4]
 800b59c:	4618      	mov	r0, r3
 800b59e:	f7ff ffd5 	bl	800b54c <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	2200      	movs	r2, #0
 800b5a6:	611a      	str	r2, [r3, #16]
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	2200      	movs	r2, #0
 800b5ac:	829a      	strh	r2, [r3, #20]
    {
    }
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	3708      	adds	r7, #8
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}

0800b5b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800b5b8:	b580      	push	{r7, lr}
 800b5ba:	b084      	sub	sp, #16
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	60f8      	str	r0, [r7, #12]
 800b5c0:	60b9      	str	r1, [r7, #8]
 800b5c2:	607a      	str	r2, [r7, #4]
 800b5c4:	603b      	str	r3, [r7, #0]
          maxBlockLines(20)
 800b5c6:	4a65      	ldr	r2, [pc, #404]	@ (800b75c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1a4>)
 800b5c8:	68fb      	ldr	r3, [r7, #12]
 800b5ca:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800b5cc:	68fb      	ldr	r3, [r7, #12]
 800b5ce:	68ba      	ldr	r2, [r7, #8]
 800b5d0:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	687a      	ldr	r2, [r7, #4]
 800b5d6:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800b5d8:	68fb      	ldr	r3, [r7, #12]
 800b5da:	683a      	ldr	r2, [r7, #0]
 800b5dc:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800b5de:	68fb      	ldr	r3, [r7, #12]
 800b5e0:	2200      	movs	r2, #0
 800b5e2:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800b5e4:	68fb      	ldr	r3, [r7, #12]
 800b5e6:	2200      	movs	r2, #0
 800b5e8:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800b5ea:	68fb      	ldr	r3, [r7, #12]
 800b5ec:	2200      	movs	r2, #0
 800b5ee:	619a      	str	r2, [r3, #24]
          gestures(),
 800b5f0:	68fb      	ldr	r3, [r7, #12]
 800b5f2:	331c      	adds	r3, #28
 800b5f4:	4618      	mov	r0, r3
 800b5f6:	f7ff ffcc 	bl	800b592 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800b5fa:	68fb      	ldr	r3, [r7, #12]
 800b5fc:	2200      	movs	r2, #0
 800b5fe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800b602:	68fb      	ldr	r3, [r7, #12]
 800b604:	2200      	movs	r2, #0
 800b606:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800b608:	68fb      	ldr	r3, [r7, #12]
 800b60a:	2200      	movs	r2, #0
 800b60c:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800b60e:	68fb      	ldr	r3, [r7, #12]
 800b610:	2200      	movs	r2, #0
 800b612:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800b614:	68fb      	ldr	r3, [r7, #12]
 800b616:	2200      	movs	r2, #0
 800b618:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800b61a:	68fb      	ldr	r3, [r7, #12]
 800b61c:	2200      	movs	r2, #0
 800b61e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800b622:	68fb      	ldr	r3, [r7, #12]
 800b624:	2201      	movs	r2, #1
 800b626:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800b62a:	68fb      	ldr	r3, [r7, #12]
 800b62c:	2200      	movs	r2, #0
 800b62e:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800b632:	68fb      	ldr	r3, [r7, #12]
 800b634:	2200      	movs	r2, #0
 800b636:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800b63a:	68fb      	ldr	r3, [r7, #12]
 800b63c:	2200      	movs	r2, #0
 800b63e:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800b640:	68fb      	ldr	r3, [r7, #12]
 800b642:	3350      	adds	r3, #80	@ 0x50
 800b644:	4618      	mov	r0, r3
 800b646:	f7fd fb36 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800b64a:	68fb      	ldr	r3, [r7, #12]
 800b64c:	2200      	movs	r2, #0
 800b64e:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800b652:	68fb      	ldr	r3, [r7, #12]
 800b654:	2200      	movs	r2, #0
 800b656:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800b658:	68fb      	ldr	r3, [r7, #12]
 800b65a:	2200      	movs	r2, #0
 800b65c:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800b65e:	68fb      	ldr	r3, [r7, #12]
 800b660:	2200      	movs	r2, #0
 800b662:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800b664:	68fb      	ldr	r3, [r7, #12]
 800b666:	2201      	movs	r2, #1
 800b668:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800b66c:	68fb      	ldr	r3, [r7, #12]
 800b66e:	2200      	movs	r2, #0
 800b670:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800b674:	68fb      	ldr	r3, [r7, #12]
 800b676:	2200      	movs	r2, #0
 800b678:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800b67c:	68fb      	ldr	r3, [r7, #12]
 800b67e:	2201      	movs	r2, #1
 800b680:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800b684:	68fb      	ldr	r3, [r7, #12]
 800b686:	2200      	movs	r2, #0
 800b688:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	2200      	movs	r2, #0
 800b690:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800b694:	68fb      	ldr	r3, [r7, #12]
 800b696:	2200      	movs	r2, #0
 800b698:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800b69c:	68fb      	ldr	r3, [r7, #12]
 800b69e:	2200      	movs	r2, #0
 800b6a0:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800b6a4:	68fb      	ldr	r3, [r7, #12]
 800b6a6:	2200      	movs	r2, #0
 800b6a8:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800b6ac:	68fb      	ldr	r3, [r7, #12]
 800b6ae:	2200      	movs	r2, #0
 800b6b0:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800b6b2:	68fb      	ldr	r3, [r7, #12]
 800b6b4:	2200      	movs	r2, #0
 800b6b6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800b6ba:	68fb      	ldr	r3, [r7, #12]
 800b6bc:	2200      	movs	r2, #0
 800b6be:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800b6c2:	68fb      	ldr	r3, [r7, #12]
 800b6c4:	2201      	movs	r2, #1
 800b6c6:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE),
 800b6ca:	68fb      	ldr	r3, [r7, #12]
 800b6cc:	2201      	movs	r2, #1
 800b6ce:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
          isFrontPorchEntered(false),
 800b6d2:	68fb      	ldr	r3, [r7, #12]
 800b6d4:	2200      	movs	r2, #0
 800b6d6:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
          numberOfBlocks(4),
 800b6da:	68fb      	ldr	r3, [r7, #12]
 800b6dc:	2204      	movs	r2, #4
 800b6de:	f883 207d 	strb.w	r2, [r3, #125]	@ 0x7d
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
 800b6e2:	8bbb      	ldrh	r3, [r7, #28]
 800b6e4:	68fa      	ldr	r2, [r7, #12]
 800b6e6:	f892 207d 	ldrb.w	r2, [r2, #125]	@ 0x7d
 800b6ea:	fb93 f3f2 	sdiv	r3, r3, r2
 800b6ee:	b29a      	uxth	r2, r3
 800b6f0:	68fb      	ldr	r3, [r7, #12]
 800b6f2:	f8a3 207e 	strh.w	r2, [r3, #126]	@ 0x7e
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 800b6f6:	68fb      	ldr	r3, [r7, #12]
 800b6f8:	f8b3 307e 	ldrh.w	r3, [r3, #126]	@ 0x7e
 800b6fc:	4a18      	ldr	r2, [pc, #96]	@ (800b760 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1a8>)
 800b6fe:	fba2 2303 	umull	r2, r3, r2, r3
 800b702:	085b      	lsrs	r3, r3, #1
 800b704:	b29a      	uxth	r2, r3
 800b706:	68fb      	ldr	r3, [r7, #12]
 800b708:	f8a3 2080 	strh.w	r2, [r3, #128]	@ 0x80
          maxBlockLines(20)
 800b70c:	68fb      	ldr	r3, [r7, #12]
 800b70e:	2214      	movs	r2, #20
 800b710:	f8a3 2082 	strh.w	r2, [r3, #130]	@ 0x82
        instance = this;
 800b714:	4a13      	ldr	r2, [pc, #76]	@ (800b764 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1ac>)
 800b716:	68fb      	ldr	r3, [r7, #12]
 800b718:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800b71a:	4a13      	ldr	r2, [pc, #76]	@ (800b768 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b0>)
 800b71c:	8b3b      	ldrh	r3, [r7, #24]
 800b71e:	8013      	strh	r3, [r2, #0]
 800b720:	4b11      	ldr	r3, [pc, #68]	@ (800b768 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b0>)
 800b722:	881a      	ldrh	r2, [r3, #0]
 800b724:	4b11      	ldr	r3, [pc, #68]	@ (800b76c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b4>)
 800b726:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800b728:	4a11      	ldr	r2, [pc, #68]	@ (800b770 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b8>)
 800b72a:	8bbb      	ldrh	r3, [r7, #28]
 800b72c:	8013      	strh	r3, [r2, #0]
 800b72e:	4b10      	ldr	r3, [pc, #64]	@ (800b770 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1b8>)
 800b730:	881a      	ldrh	r2, [r3, #0]
 800b732:	4b10      	ldr	r3, [pc, #64]	@ (800b774 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1bc>)
 800b734:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800b736:	4b10      	ldr	r3, [pc, #64]	@ (800b778 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x1c0>)
 800b738:	2200      	movs	r2, #0
 800b73a:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800b73c:	8b3a      	ldrh	r2, [r7, #24]
 800b73e:	8bbb      	ldrh	r3, [r7, #28]
 800b740:	429a      	cmp	r2, r3
 800b742:	bf34      	ite	cc
 800b744:	2301      	movcc	r3, #1
 800b746:	2300      	movcs	r3, #0
 800b748:	b2db      	uxtb	r3, r3
 800b74a:	461a      	mov	r2, r3
 800b74c:	68fb      	ldr	r3, [r7, #12]
 800b74e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800b752:	68fb      	ldr	r3, [r7, #12]
 800b754:	4618      	mov	r0, r3
 800b756:	3710      	adds	r7, #16
 800b758:	46bd      	mov	sp, r7
 800b75a:	bd80      	pop	{r7, pc}
 800b75c:	0802480c 	.word	0x0802480c
 800b760:	aaaaaaab 	.word	0xaaaaaaab
 800b764:	20002230 	.word	0x20002230
 800b768:	20002224 	.word	0x20002224
 800b76c:	2000222a 	.word	0x2000222a
 800b770:	20002226 	.word	0x20002226
 800b774:	2000222c 	.word	0x2000222c
 800b778:	20002228 	.word	0x20002228

0800b77c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800b77c:	b580      	push	{r7, lr}
 800b77e:	b082      	sub	sp, #8
 800b780:	af00      	add	r7, sp, #0
 800b782:	6078      	str	r0, [r7, #4]
 800b784:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 800b786:	683b      	ldr	r3, [r7, #0]
 800b788:	4618      	mov	r0, r3
 800b78a:	f7fc fe63 	bl	8008454 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800b78e:	bf00      	nop
 800b790:	3708      	adds	r7, #8
 800b792:	46bd      	mov	sp, r7
 800b794:	bd80      	pop	{r7, pc}
	...

0800b798 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800b798:	b580      	push	{r7, lr}
 800b79a:	b086      	sub	sp, #24
 800b79c:	af02      	add	r7, sp, #8
 800b79e:	60f8      	str	r0, [r7, #12]
 800b7a0:	60b9      	str	r1, [r7, #8]
 800b7a2:	607a      	str	r2, [r7, #4]
 800b7a4:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800b7a6:	68f8      	ldr	r0, [r7, #12]
 800b7a8:	69bb      	ldr	r3, [r7, #24]
 800b7aa:	9300      	str	r3, [sp, #0]
 800b7ac:	683b      	ldr	r3, [r7, #0]
 800b7ae:	687a      	ldr	r2, [r7, #4]
 800b7b0:	68b9      	ldr	r1, [r7, #8]
 800b7b2:	f7ff fe6b 	bl	800b48c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800b7b6:	4a04      	ldr	r2, [pc, #16]	@ (800b7c8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800b7b8:	68fb      	ldr	r3, [r7, #12]
 800b7ba:	601a      	str	r2, [r3, #0]
    {

    }
 800b7bc:	68fb      	ldr	r3, [r7, #12]
 800b7be:	4618      	mov	r0, r3
 800b7c0:	3710      	adds	r7, #16
 800b7c2:	46bd      	mov	sp, r7
 800b7c4:	bd80      	pop	{r7, pc}
 800b7c6:	bf00      	nop
 800b7c8:	080245d4 	.word	0x080245d4

0800b7cc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800b7cc:	b580      	push	{r7, lr}
 800b7ce:	af00      	add	r7, sp, #0
 800b7d0:	4801      	ldr	r0, [pc, #4]	@ (800b7d8 <__tcf_0+0xc>)
 800b7d2:	f000 f969 	bl	800baa8 <_ZN12FrontendHeapD1Ev>
 800b7d6:	bd80      	pop	{r7, pc}
 800b7d8:	200005a0 	.word	0x200005a0

0800b7dc <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800b7dc:	b580      	push	{r7, lr}
 800b7de:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800b7e0:	4b11      	ldr	r3, [pc, #68]	@ (800b828 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800b7e2:	e8d3 3faf 	lda	r3, [r3]
 800b7e6:	f003 0301 	and.w	r3, r3, #1
 800b7ea:	2b00      	cmp	r3, #0
 800b7ec:	bf0c      	ite	eq
 800b7ee:	2301      	moveq	r3, #1
 800b7f0:	2300      	movne	r3, #0
 800b7f2:	b2db      	uxtb	r3, r3
 800b7f4:	2b00      	cmp	r3, #0
 800b7f6:	d013      	beq.n	800b820 <_ZN12FrontendHeap11getInstanceEv+0x44>
 800b7f8:	480b      	ldr	r0, [pc, #44]	@ (800b828 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800b7fa:	f016 f944 	bl	8021a86 <__cxa_guard_acquire>
 800b7fe:	4603      	mov	r3, r0
 800b800:	2b00      	cmp	r3, #0
 800b802:	bf14      	ite	ne
 800b804:	2301      	movne	r3, #1
 800b806:	2300      	moveq	r3, #0
 800b808:	b2db      	uxtb	r3, r3
 800b80a:	2b00      	cmp	r3, #0
 800b80c:	d008      	beq.n	800b820 <_ZN12FrontendHeap11getInstanceEv+0x44>
 800b80e:	4807      	ldr	r0, [pc, #28]	@ (800b82c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800b810:	f000 f868 	bl	800b8e4 <_ZN12FrontendHeapC1Ev>
 800b814:	4806      	ldr	r0, [pc, #24]	@ (800b830 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800b816:	f016 f97f 	bl	8021b18 <atexit>
 800b81a:	4803      	ldr	r0, [pc, #12]	@ (800b828 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800b81c:	f016 f93f 	bl	8021a9e <__cxa_guard_release>
        return instance;
 800b820:	4b02      	ldr	r3, [pc, #8]	@ (800b82c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800b822:	4618      	mov	r0, r3
 800b824:	bd80      	pop	{r7, pc}
 800b826:	bf00      	nop
 800b828:	2000089c 	.word	0x2000089c
 800b82c:	200005a0 	.word	0x200005a0
 800b830:	0800b7cd 	.word	0x0800b7cd

0800b834 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800b834:	b580      	push	{r7, lr}
 800b836:	b082      	sub	sp, #8
 800b838:	af00      	add	r7, sp, #0
 800b83a:	6078      	str	r0, [r7, #4]
 800b83c:	4a05      	ldr	r2, [pc, #20]	@ (800b854 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800b83e:	687b      	ldr	r3, [r7, #4]
 800b840:	601a      	str	r2, [r3, #0]
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	4618      	mov	r0, r3
 800b846:	f7ff fe41 	bl	800b4cc <_ZN8touchgfx7MVPHeapD1Ev>
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	4618      	mov	r0, r3
 800b84e:	3708      	adds	r7, #8
 800b850:	46bd      	mov	sp, r7
 800b852:	bd80      	pop	{r7, pc}
 800b854:	080245d4 	.word	0x080245d4

0800b858 <_ZN16FrontendHeapBaseD0Ev>:
 800b858:	b580      	push	{r7, lr}
 800b85a:	b082      	sub	sp, #8
 800b85c:	af00      	add	r7, sp, #0
 800b85e:	6078      	str	r0, [r7, #4]
 800b860:	6878      	ldr	r0, [r7, #4]
 800b862:	f7ff ffe7 	bl	800b834 <_ZN16FrontendHeapBaseD1Ev>
 800b866:	2114      	movs	r1, #20
 800b868:	6878      	ldr	r0, [r7, #4]
 800b86a:	f016 f90a 	bl	8021a82 <_ZdlPvj>
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	4618      	mov	r0, r3
 800b872:	3708      	adds	r7, #8
 800b874:	46bd      	mov	sp, r7
 800b876:	bd80      	pop	{r7, pc}

0800b878 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800b878:	b580      	push	{r7, lr}
 800b87a:	b082      	sub	sp, #8
 800b87c:	af00      	add	r7, sp, #0
 800b87e:	6078      	str	r0, [r7, #4]
 800b880:	687b      	ldr	r3, [r7, #4]
 800b882:	4618      	mov	r0, r3
 800b884:	f001 f96a 	bl	800cb5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b888:	4a03      	ldr	r2, [pc, #12]	@ (800b898 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	601a      	str	r2, [r3, #0]
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	4618      	mov	r0, r3
 800b892:	3708      	adds	r7, #8
 800b894:	46bd      	mov	sp, r7
 800b896:	bd80      	pop	{r7, pc}
 800b898:	080245a0 	.word	0x080245a0

0800b89c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800b89c:	b580      	push	{r7, lr}
 800b89e:	b082      	sub	sp, #8
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	6078      	str	r0, [r7, #4]
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	4618      	mov	r0, r3
 800b8a8:	f001 f958 	bl	800cb5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b8ac:	4a03      	ldr	r2, [pc, #12]	@ (800b8bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	601a      	str	r2, [r3, #0]
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	4618      	mov	r0, r3
 800b8b6:	3708      	adds	r7, #8
 800b8b8:	46bd      	mov	sp, r7
 800b8ba:	bd80      	pop	{r7, pc}
 800b8bc:	0802456c 	.word	0x0802456c

0800b8c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800b8c0:	b580      	push	{r7, lr}
 800b8c2:	b082      	sub	sp, #8
 800b8c4:	af00      	add	r7, sp, #0
 800b8c6:	6078      	str	r0, [r7, #4]
 800b8c8:	687b      	ldr	r3, [r7, #4]
 800b8ca:	4618      	mov	r0, r3
 800b8cc:	f001 f946 	bl	800cb5c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800b8d0:	4a03      	ldr	r2, [pc, #12]	@ (800b8e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	601a      	str	r2, [r3, #0]
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	4618      	mov	r0, r3
 800b8da:	3708      	adds	r7, #8
 800b8dc:	46bd      	mov	sp, r7
 800b8de:	bd80      	pop	{r7, pc}
 800b8e0:	08024538 	.word	0x08024538

0800b8e4 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b8e4:	b590      	push	{r4, r7, lr}
 800b8e6:	b085      	sub	sp, #20
 800b8e8:	af02      	add	r7, sp, #8
 800b8ea:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800b8ec:	6878      	ldr	r0, [r7, #4]
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	f103 0114 	add.w	r1, r3, #20
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800b8fa:	687b      	ldr	r3, [r7, #4]
 800b8fc:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
                     app(model, *this)
 800b906:	9300      	str	r3, [sp, #0]
 800b908:	4623      	mov	r3, r4
 800b90a:	f7ff ff45 	bl	800b798 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800b90e:	4a18      	ldr	r2, [pc, #96]	@ (800b970 <_ZN12FrontendHeapC1Ev+0x8c>)
 800b910:	687b      	ldr	r3, [r7, #4]
 800b912:	601a      	str	r2, [r3, #0]
 800b914:	687b      	ldr	r3, [r7, #4]
 800b916:	3314      	adds	r3, #20
 800b918:	4618      	mov	r0, r3
 800b91a:	f7ff ffad 	bl	800b878 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	332c      	adds	r3, #44	@ 0x2c
 800b922:	4618      	mov	r0, r3
 800b924:	f7ff ffba 	bl	800b89c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b928:	687b      	ldr	r3, [r7, #4]
 800b92a:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b92e:	4618      	mov	r0, r3
 800b930:	f7ff ffc6 	bl	800b8c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800b934:	687b      	ldr	r3, [r7, #4]
 800b936:	f503 73ce 	add.w	r3, r3, #412	@ 0x19c
 800b93a:	4618      	mov	r0, r3
 800b93c:	f7fe fdcc 	bl	800a4d8 <_ZN5ModelC1Ev>
 800b940:	687b      	ldr	r3, [r7, #4]
 800b942:	f503 70d0 	add.w	r0, r3, #416	@ 0x1a0
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	f503 73ce 	add.w	r3, r3, #412	@ 0x19c
 800b94c:	687a      	ldr	r2, [r7, #4]
 800b94e:	4619      	mov	r1, r3
 800b950:	f7fe fdac 	bl	800a4ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800b954:	687a      	ldr	r2, [r7, #4]
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 800b95c:	4619      	mov	r1, r3
 800b95e:	4610      	mov	r0, r2
 800b960:	f7ff ff0c 	bl	800b77c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	4618      	mov	r0, r3
 800b968:	370c      	adds	r7, #12
 800b96a:	46bd      	mov	sp, r7
 800b96c:	bd90      	pop	{r4, r7, pc}
 800b96e:	bf00      	nop
 800b970:	08024524 	.word	0x08024524

0800b974 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800b974:	b580      	push	{r7, lr}
 800b976:	b086      	sub	sp, #24
 800b978:	af02      	add	r7, sp, #8
 800b97a:	60f8      	str	r0, [r7, #12]
 800b97c:	60b9      	str	r1, [r7, #8]
 800b97e:	607a      	str	r2, [r7, #4]
 800b980:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800b982:	68f8      	ldr	r0, [r7, #12]
 800b984:	8bbb      	ldrh	r3, [r7, #28]
 800b986:	9301      	str	r3, [sp, #4]
 800b988:	8b3b      	ldrh	r3, [r7, #24]
 800b98a:	9300      	str	r3, [sp, #0]
 800b98c:	683b      	ldr	r3, [r7, #0]
 800b98e:	687a      	ldr	r2, [r7, #4]
 800b990:	68b9      	ldr	r1, [r7, #8]
 800b992:	f7ff fe11 	bl	800b5b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b996:	4a04      	ldr	r2, [pc, #16]	@ (800b9a8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b998:	68fb      	ldr	r3, [r7, #12]
 800b99a:	601a      	str	r2, [r3, #0]
    }
 800b99c:	68fb      	ldr	r3, [r7, #12]
 800b99e:	4618      	mov	r0, r3
 800b9a0:	3710      	adds	r7, #16
 800b9a2:	46bd      	mov	sp, r7
 800b9a4:	bd80      	pop	{r7, pc}
 800b9a6:	bf00      	nop
 800b9a8:	08024624 	.word	0x08024624

0800b9ac <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800b9ac:	b580      	push	{r7, lr}
 800b9ae:	b086      	sub	sp, #24
 800b9b0:	af02      	add	r7, sp, #8
 800b9b2:	60f8      	str	r0, [r7, #12]
 800b9b4:	60b9      	str	r1, [r7, #8]
 800b9b6:	607a      	str	r2, [r7, #4]
 800b9b8:	603b      	str	r3, [r7, #0]
 800b9ba:	68f8      	ldr	r0, [r7, #12]
 800b9bc:	8bbb      	ldrh	r3, [r7, #28]
 800b9be:	9301      	str	r3, [sp, #4]
 800b9c0:	8b3b      	ldrh	r3, [r7, #24]
 800b9c2:	9300      	str	r3, [sp, #0]
 800b9c4:	683b      	ldr	r3, [r7, #0]
 800b9c6:	687a      	ldr	r2, [r7, #4]
 800b9c8:	68b9      	ldr	r1, [r7, #8]
 800b9ca:	f7ff ffd3 	bl	800b974 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b9ce:	4a04      	ldr	r2, [pc, #16]	@ (800b9e0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b9d0:	68fb      	ldr	r3, [r7, #12]
 800b9d2:	601a      	str	r2, [r3, #0]
    }
 800b9d4:	68fb      	ldr	r3, [r7, #12]
 800b9d6:	4618      	mov	r0, r3
 800b9d8:	3710      	adds	r7, #16
 800b9da:	46bd      	mov	sp, r7
 800b9dc:	bd80      	pop	{r7, pc}
 800b9de:	bf00      	nop
 800b9e0:	080243c4 	.word	0x080243c4

0800b9e4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800b9e4:	b480      	push	{r7}
 800b9e6:	b083      	sub	sp, #12
 800b9e8:	af00      	add	r7, sp, #0
 800b9ea:	6078      	str	r0, [r7, #4]
 800b9ec:	4a04      	ldr	r2, [pc, #16]	@ (800ba00 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	601a      	str	r2, [r3, #0]
 800b9f2:	687b      	ldr	r3, [r7, #4]
 800b9f4:	4618      	mov	r0, r3
 800b9f6:	370c      	adds	r7, #12
 800b9f8:	46bd      	mov	sp, r7
 800b9fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9fe:	4770      	bx	lr
 800ba00:	080243ac 	.word	0x080243ac

0800ba04 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800ba04:	b580      	push	{r7, lr}
 800ba06:	b082      	sub	sp, #8
 800ba08:	af00      	add	r7, sp, #0
 800ba0a:	6078      	str	r0, [r7, #4]
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	4618      	mov	r0, r3
 800ba10:	f7ff ffe8 	bl	800b9e4 <_ZN8touchgfx15TouchControllerC1Ev>
 800ba14:	4a03      	ldr	r2, [pc, #12]	@ (800ba24 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	601a      	str	r2, [r3, #0]
 800ba1a:	687b      	ldr	r3, [r7, #4]
 800ba1c:	4618      	mov	r0, r3
 800ba1e:	3708      	adds	r7, #8
 800ba20:	46bd      	mov	sp, r7
 800ba22:	bd80      	pop	{r7, pc}
 800ba24:	08024394 	.word	0x08024394

0800ba28 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 240);

void touchgfx_init()
{
 800ba28:	b590      	push	{r4, r7, lr}
 800ba2a:	b085      	sub	sp, #20
 800ba2c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800ba2e:	f7fe fb0d 	bl	800a04c <_ZN14BitmapDatabase11getInstanceEv>
 800ba32:	4604      	mov	r4, r0
 800ba34:	f7fe fb14 	bl	800a060 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800ba38:	4603      	mov	r3, r0
 800ba3a:	4619      	mov	r1, r3
 800ba3c:	2300      	movs	r3, #0
 800ba3e:	9300      	str	r3, [sp, #0]
 800ba40:	2300      	movs	r3, #0
 800ba42:	2200      	movs	r2, #0
 800ba44:	4620      	mov	r0, r4
 800ba46:	f007 fcff 	bl	8013448 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800ba4a:	4809      	ldr	r0, [pc, #36]	@ (800ba70 <touchgfx_init+0x48>)
 800ba4c:	f7ff fd0e 	bl	800b46c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800ba50:	2000      	movs	r0, #0
 800ba52:	f7fe fc49 	bl	800a2e8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800ba56:	4807      	ldr	r0, [pc, #28]	@ (800ba74 <touchgfx_init+0x4c>)
 800ba58:	f007 fc5e 	bl	8013318 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800ba5c:	f7ff febe 	bl	800b7dc <_ZN12FrontendHeap11getInstanceEv>
 800ba60:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800ba62:	4805      	ldr	r0, [pc, #20]	@ (800ba78 <touchgfx_init+0x50>)
 800ba64:	f7ff fa32 	bl	800aecc <_ZN11TouchGFXHAL10initializeEv>
}
 800ba68:	bf00      	nop
 800ba6a:	370c      	adds	r7, #12
 800ba6c:	46bd      	mov	sp, r7
 800ba6e:	bd90      	pop	{r4, r7, pc}
 800ba70:	20000974 	.word	0x20000974
 800ba74:	20000010 	.word	0x20000010
 800ba78:	20000978 	.word	0x20000978

0800ba7c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800ba7c:	b480      	push	{r7}
 800ba7e:	af00      	add	r7, sp, #0
}
 800ba80:	bf00      	nop
 800ba82:	46bd      	mov	sp, r7
 800ba84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba88:	4770      	bx	lr
	...

0800ba8c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800ba8c:	b580      	push	{r7, lr}
 800ba8e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800ba90:	f7ff fb84 	bl	800b19c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800ba94:	4603      	mov	r3, r0
 800ba96:	2b00      	cmp	r3, #0
 800ba98:	d002      	beq.n	800baa0 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800ba9a:	4802      	ldr	r0, [pc, #8]	@ (800baa4 <touchgfx_taskEntry+0x18>)
 800ba9c:	f7ff f8c8 	bl	800ac30 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800baa0:	bf00      	nop
 800baa2:	bd80      	pop	{r7, pc}
 800baa4:	20000978 	.word	0x20000978

0800baa8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800baa8:	b580      	push	{r7, lr}
 800baaa:	b082      	sub	sp, #8
 800baac:	af00      	add	r7, sp, #0
 800baae:	6078      	str	r0, [r7, #4]
 800bab0:	4a10      	ldr	r2, [pc, #64]	@ (800baf4 <_ZN12FrontendHeapD1Ev+0x4c>)
 800bab2:	687b      	ldr	r3, [r7, #4]
 800bab4:	601a      	str	r2, [r3, #0]
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 800babc:	4618      	mov	r0, r3
 800babe:	f7fe fcbf 	bl	800a440 <_ZN19FrontendApplicationD1Ev>
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800bac8:	4618      	mov	r0, r3
 800baca:	f000 f827 	bl	800bb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bace:	687b      	ldr	r3, [r7, #4]
 800bad0:	332c      	adds	r3, #44	@ 0x2c
 800bad2:	4618      	mov	r0, r3
 800bad4:	f000 f844 	bl	800bb60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bad8:	687b      	ldr	r3, [r7, #4]
 800bada:	3314      	adds	r3, #20
 800badc:	4618      	mov	r0, r3
 800bade:	f000 f863 	bl	800bba8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	4618      	mov	r0, r3
 800bae6:	f7ff fea5 	bl	800b834 <_ZN16FrontendHeapBaseD1Ev>
 800baea:	687b      	ldr	r3, [r7, #4]
 800baec:	4618      	mov	r0, r3
 800baee:	3708      	adds	r7, #8
 800baf0:	46bd      	mov	sp, r7
 800baf2:	bd80      	pop	{r7, pc}
 800baf4:	08024524 	.word	0x08024524

0800baf8 <_ZN12FrontendHeapD0Ev>:
 800baf8:	b580      	push	{r7, lr}
 800bafa:	b082      	sub	sp, #8
 800bafc:	af00      	add	r7, sp, #0
 800bafe:	6078      	str	r0, [r7, #4]
 800bb00:	6878      	ldr	r0, [r7, #4]
 800bb02:	f7ff ffd1 	bl	800baa8 <_ZN12FrontendHeapD1Ev>
 800bb06:	f44f 713f 	mov.w	r1, #764	@ 0x2fc
 800bb0a:	6878      	ldr	r0, [r7, #4]
 800bb0c:	f015 ffb9 	bl	8021a82 <_ZdlPvj>
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	4618      	mov	r0, r3
 800bb14:	3708      	adds	r7, #8
 800bb16:	46bd      	mov	sp, r7
 800bb18:	bd80      	pop	{r7, pc}
	...

0800bb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bb1c:	b580      	push	{r7, lr}
 800bb1e:	b082      	sub	sp, #8
 800bb20:	af00      	add	r7, sp, #0
 800bb22:	6078      	str	r0, [r7, #4]
 800bb24:	4a05      	ldr	r2, [pc, #20]	@ (800bb3c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	601a      	str	r2, [r3, #0]
 800bb2a:	687b      	ldr	r3, [r7, #4]
 800bb2c:	4618      	mov	r0, r3
 800bb2e:	f001 f814 	bl	800cb5a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	4618      	mov	r0, r3
 800bb36:	3708      	adds	r7, #8
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	bd80      	pop	{r7, pc}
 800bb3c:	08024538 	.word	0x08024538

0800bb40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bb40:	b580      	push	{r7, lr}
 800bb42:	b082      	sub	sp, #8
 800bb44:	af00      	add	r7, sp, #0
 800bb46:	6078      	str	r0, [r7, #4]
 800bb48:	6878      	ldr	r0, [r7, #4]
 800bb4a:	f7ff ffe7 	bl	800bb1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bb4e:	2114      	movs	r1, #20
 800bb50:	6878      	ldr	r0, [r7, #4]
 800bb52:	f015 ff96 	bl	8021a82 <_ZdlPvj>
 800bb56:	687b      	ldr	r3, [r7, #4]
 800bb58:	4618      	mov	r0, r3
 800bb5a:	3708      	adds	r7, #8
 800bb5c:	46bd      	mov	sp, r7
 800bb5e:	bd80      	pop	{r7, pc}

0800bb60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bb60:	b580      	push	{r7, lr}
 800bb62:	b082      	sub	sp, #8
 800bb64:	af00      	add	r7, sp, #0
 800bb66:	6078      	str	r0, [r7, #4]
 800bb68:	4a05      	ldr	r2, [pc, #20]	@ (800bb80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	601a      	str	r2, [r3, #0]
 800bb6e:	687b      	ldr	r3, [r7, #4]
 800bb70:	4618      	mov	r0, r3
 800bb72:	f000 fff2 	bl	800cb5a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	4618      	mov	r0, r3
 800bb7a:	3708      	adds	r7, #8
 800bb7c:	46bd      	mov	sp, r7
 800bb7e:	bd80      	pop	{r7, pc}
 800bb80:	0802456c 	.word	0x0802456c

0800bb84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bb84:	b580      	push	{r7, lr}
 800bb86:	b082      	sub	sp, #8
 800bb88:	af00      	add	r7, sp, #0
 800bb8a:	6078      	str	r0, [r7, #4]
 800bb8c:	6878      	ldr	r0, [r7, #4]
 800bb8e:	f7ff ffe7 	bl	800bb60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bb92:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800bb96:	6878      	ldr	r0, [r7, #4]
 800bb98:	f015 ff73 	bl	8021a82 <_ZdlPvj>
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	4618      	mov	r0, r3
 800bba0:	3708      	adds	r7, #8
 800bba2:	46bd      	mov	sp, r7
 800bba4:	bd80      	pop	{r7, pc}
	...

0800bba8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bba8:	b580      	push	{r7, lr}
 800bbaa:	b082      	sub	sp, #8
 800bbac:	af00      	add	r7, sp, #0
 800bbae:	6078      	str	r0, [r7, #4]
 800bbb0:	4a05      	ldr	r2, [pc, #20]	@ (800bbc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bbb2:	687b      	ldr	r3, [r7, #4]
 800bbb4:	601a      	str	r2, [r3, #0]
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	4618      	mov	r0, r3
 800bbba:	f000 ffce 	bl	800cb5a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	4618      	mov	r0, r3
 800bbc2:	3708      	adds	r7, #8
 800bbc4:	46bd      	mov	sp, r7
 800bbc6:	bd80      	pop	{r7, pc}
 800bbc8:	080245a0 	.word	0x080245a0

0800bbcc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bbcc:	b580      	push	{r7, lr}
 800bbce:	b082      	sub	sp, #8
 800bbd0:	af00      	add	r7, sp, #0
 800bbd2:	6078      	str	r0, [r7, #4]
 800bbd4:	6878      	ldr	r0, [r7, #4]
 800bbd6:	f7ff ffe7 	bl	800bba8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bbda:	2118      	movs	r1, #24
 800bbdc:	6878      	ldr	r0, [r7, #4]
 800bbde:	f015 ff50 	bl	8021a82 <_ZdlPvj>
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	4618      	mov	r0, r3
 800bbe6:	3708      	adds	r7, #8
 800bbe8:	46bd      	mov	sp, r7
 800bbea:	bd80      	pop	{r7, pc}

0800bbec <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800bbec:	b580      	push	{r7, lr}
 800bbee:	b082      	sub	sp, #8
 800bbf0:	af00      	add	r7, sp, #0
 800bbf2:	6078      	str	r0, [r7, #4]
 800bbf4:	4a05      	ldr	r2, [pc, #20]	@ (800bc0c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	601a      	str	r2, [r3, #0]
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	4618      	mov	r0, r3
 800bbfe:	f7ff fc85 	bl	800b50c <_ZN8touchgfx3LCDD1Ev>
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	4618      	mov	r0, r3
 800bc06:	3708      	adds	r7, #8
 800bc08:	46bd      	mov	sp, r7
 800bc0a:	bd80      	pop	{r7, pc}
 800bc0c:	08024f7c 	.word	0x08024f7c

0800bc10 <_ZN8touchgfx8LCD16bppD0Ev>:
 800bc10:	b580      	push	{r7, lr}
 800bc12:	b082      	sub	sp, #8
 800bc14:	af00      	add	r7, sp, #0
 800bc16:	6078      	str	r0, [r7, #4]
 800bc18:	6878      	ldr	r0, [r7, #4]
 800bc1a:	f7ff ffe7 	bl	800bbec <_ZN8touchgfx8LCD16bppD1Ev>
 800bc1e:	218c      	movs	r1, #140	@ 0x8c
 800bc20:	6878      	ldr	r0, [r7, #4]
 800bc22:	f015 ff2e 	bl	8021a82 <_ZdlPvj>
 800bc26:	687b      	ldr	r3, [r7, #4]
 800bc28:	4618      	mov	r0, r3
 800bc2a:	3708      	adds	r7, #8
 800bc2c:	46bd      	mov	sp, r7
 800bc2e:	bd80      	pop	{r7, pc}

0800bc30 <_Z41__static_initialization_and_destruction_0ii>:
 800bc30:	b580      	push	{r7, lr}
 800bc32:	b084      	sub	sp, #16
 800bc34:	af02      	add	r7, sp, #8
 800bc36:	6078      	str	r0, [r7, #4]
 800bc38:	6039      	str	r1, [r7, #0]
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	2b01      	cmp	r3, #1
 800bc3e:	d118      	bne.n	800bc72 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800bc40:	683b      	ldr	r3, [r7, #0]
 800bc42:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800bc46:	4293      	cmp	r3, r2
 800bc48:	d113      	bne.n	800bc72 <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800bc4a:	4817      	ldr	r0, [pc, #92]	@ (800bca8 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bc4c:	f7ff feda 	bl	800ba04 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800bc50:	4816      	ldr	r0, [pc, #88]	@ (800bcac <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bc52:	f7ff fb6d 	bl	800b330 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800bc56:	4816      	ldr	r0, [pc, #88]	@ (800bcb0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bc58:	f00c fcf6 	bl	8018648 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 240);
 800bc5c:	23f0      	movs	r3, #240	@ 0xf0
 800bc5e:	9301      	str	r3, [sp, #4]
 800bc60:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800bc64:	9300      	str	r3, [sp, #0]
 800bc66:	4b10      	ldr	r3, [pc, #64]	@ (800bca8 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bc68:	4a11      	ldr	r2, [pc, #68]	@ (800bcb0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bc6a:	4910      	ldr	r1, [pc, #64]	@ (800bcac <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bc6c:	4811      	ldr	r0, [pc, #68]	@ (800bcb4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800bc6e:	f7ff fe9d 	bl	800b9ac <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d113      	bne.n	800bca0 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800bc78:	683b      	ldr	r3, [r7, #0]
 800bc7a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800bc7e:	4293      	cmp	r3, r2
 800bc80:	d10e      	bne.n	800bca0 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800bc82:	480c      	ldr	r0, [pc, #48]	@ (800bcb4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800bc84:	f7ff f9b2 	bl	800afec <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800bc88:	480b      	ldr	r0, [pc, #44]	@ (800bcb8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800bc8a:	f7fb fe1d 	bl	80078c8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800bc8e:	4808      	ldr	r0, [pc, #32]	@ (800bcb0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800bc90:	f7ff ffac 	bl	800bbec <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800bc94:	4805      	ldr	r0, [pc, #20]	@ (800bcac <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800bc96:	f7ff fb9f 	bl	800b3d8 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800bc9a:	4803      	ldr	r0, [pc, #12]	@ (800bca8 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800bc9c:	f7fe fec4 	bl	800aa28 <_ZN20STM32TouchControllerD1Ev>
}
 800bca0:	bf00      	nop
 800bca2:	3708      	adds	r7, #8
 800bca4:	46bd      	mov	sp, r7
 800bca6:	bd80      	pop	{r7, pc}
 800bca8:	200008a0 	.word	0x200008a0
 800bcac:	200008a4 	.word	0x200008a4
 800bcb0:	200008e8 	.word	0x200008e8
 800bcb4:	20000978 	.word	0x20000978
 800bcb8:	20000010 	.word	0x20000010

0800bcbc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800bcbc:	b480      	push	{r7}
 800bcbe:	b083      	sub	sp, #12
 800bcc0:	af00      	add	r7, sp, #0
 800bcc2:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800bcc4:	2301      	movs	r3, #1
    }
 800bcc6:	4618      	mov	r0, r3
 800bcc8:	370c      	adds	r7, #12
 800bcca:	46bd      	mov	sp, r7
 800bccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcd0:	4770      	bx	lr

0800bcd2 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800bcd2:	b480      	push	{r7}
 800bcd4:	b083      	sub	sp, #12
 800bcd6:	af00      	add	r7, sp, #0
 800bcd8:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800bcda:	230c      	movs	r3, #12
    }
 800bcdc:	4618      	mov	r0, r3
 800bcde:	370c      	adds	r7, #12
 800bce0:	46bd      	mov	sp, r7
 800bce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bce6:	4770      	bx	lr

0800bce8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800bce8:	b480      	push	{r7}
 800bcea:	b083      	sub	sp, #12
 800bcec:	af00      	add	r7, sp, #0
 800bcee:	6078      	str	r0, [r7, #4]
 800bcf0:	460b      	mov	r3, r1
 800bcf2:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800bcf4:	887a      	ldrh	r2, [r7, #2]
 800bcf6:	4613      	mov	r3, r2
 800bcf8:	005b      	lsls	r3, r3, #1
 800bcfa:	4413      	add	r3, r2
 800bcfc:	009b      	lsls	r3, r3, #2
 800bcfe:	3308      	adds	r3, #8
 800bd00:	687a      	ldr	r2, [r7, #4]
 800bd02:	4413      	add	r3, r2
    }
 800bd04:	4618      	mov	r0, r3
 800bd06:	370c      	adds	r7, #12
 800bd08:	46bd      	mov	sp, r7
 800bd0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0e:	4770      	bx	lr

0800bd10 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800bd10:	b480      	push	{r7}
 800bd12:	b083      	sub	sp, #12
 800bd14:	af00      	add	r7, sp, #0
 800bd16:	6078      	str	r0, [r7, #4]
 800bd18:	460b      	mov	r3, r1
 800bd1a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800bd1c:	887a      	ldrh	r2, [r7, #2]
 800bd1e:	4613      	mov	r3, r2
 800bd20:	005b      	lsls	r3, r3, #1
 800bd22:	4413      	add	r3, r2
 800bd24:	009b      	lsls	r3, r3, #2
 800bd26:	3308      	adds	r3, #8
 800bd28:	687a      	ldr	r2, [r7, #4]
 800bd2a:	4413      	add	r3, r2
    }
 800bd2c:	4618      	mov	r0, r3
 800bd2e:	370c      	adds	r7, #12
 800bd30:	46bd      	mov	sp, r7
 800bd32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd36:	4770      	bx	lr

0800bd38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800bd38:	b480      	push	{r7}
 800bd3a:	b083      	sub	sp, #12
 800bd3c:	af00      	add	r7, sp, #0
 800bd3e:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800bd40:	2301      	movs	r3, #1
    }
 800bd42:	4618      	mov	r0, r3
 800bd44:	370c      	adds	r7, #12
 800bd46:	46bd      	mov	sp, r7
 800bd48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd4c:	4770      	bx	lr

0800bd4e <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800bd4e:	b480      	push	{r7}
 800bd50:	b083      	sub	sp, #12
 800bd52:	af00      	add	r7, sp, #0
 800bd54:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800bd56:	f44f 73aa 	mov.w	r3, #340	@ 0x154
    }
 800bd5a:	4618      	mov	r0, r3
 800bd5c:	370c      	adds	r7, #12
 800bd5e:	46bd      	mov	sp, r7
 800bd60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd64:	4770      	bx	lr

0800bd66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800bd66:	b480      	push	{r7}
 800bd68:	b083      	sub	sp, #12
 800bd6a:	af00      	add	r7, sp, #0
 800bd6c:	6078      	str	r0, [r7, #4]
 800bd6e:	460b      	mov	r3, r1
 800bd70:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800bd72:	887b      	ldrh	r3, [r7, #2]
 800bd74:	f44f 72aa 	mov.w	r2, #340	@ 0x154
 800bd78:	fb02 f303 	mul.w	r3, r2, r3
 800bd7c:	3308      	adds	r3, #8
 800bd7e:	687a      	ldr	r2, [r7, #4]
 800bd80:	4413      	add	r3, r2
    }
 800bd82:	4618      	mov	r0, r3
 800bd84:	370c      	adds	r7, #12
 800bd86:	46bd      	mov	sp, r7
 800bd88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd8c:	4770      	bx	lr

0800bd8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800bd8e:	b480      	push	{r7}
 800bd90:	b083      	sub	sp, #12
 800bd92:	af00      	add	r7, sp, #0
 800bd94:	6078      	str	r0, [r7, #4]
 800bd96:	460b      	mov	r3, r1
 800bd98:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800bd9a:	887b      	ldrh	r3, [r7, #2]
 800bd9c:	f44f 72aa 	mov.w	r2, #340	@ 0x154
 800bda0:	fb02 f303 	mul.w	r3, r2, r3
 800bda4:	3308      	adds	r3, #8
 800bda6:	687a      	ldr	r2, [r7, #4]
 800bda8:	4413      	add	r3, r2
    }
 800bdaa:	4618      	mov	r0, r3
 800bdac:	370c      	adds	r7, #12
 800bdae:	46bd      	mov	sp, r7
 800bdb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdb4:	4770      	bx	lr

0800bdb6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800bdb6:	b480      	push	{r7}
 800bdb8:	b083      	sub	sp, #12
 800bdba:	af00      	add	r7, sp, #0
 800bdbc:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800bdbe:	2301      	movs	r3, #1
    }
 800bdc0:	4618      	mov	r0, r3
 800bdc2:	370c      	adds	r7, #12
 800bdc4:	46bd      	mov	sp, r7
 800bdc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdca:	4770      	bx	lr

0800bdcc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800bdcc:	b480      	push	{r7}
 800bdce:	b083      	sub	sp, #12
 800bdd0:	af00      	add	r7, sp, #0
 800bdd2:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800bdd4:	2310      	movs	r3, #16
    }
 800bdd6:	4618      	mov	r0, r3
 800bdd8:	370c      	adds	r7, #12
 800bdda:	46bd      	mov	sp, r7
 800bddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bde0:	4770      	bx	lr

0800bde2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800bde2:	b480      	push	{r7}
 800bde4:	b083      	sub	sp, #12
 800bde6:	af00      	add	r7, sp, #0
 800bde8:	6078      	str	r0, [r7, #4]
 800bdea:	460b      	mov	r3, r1
 800bdec:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800bdee:	887b      	ldrh	r3, [r7, #2]
 800bdf0:	011b      	lsls	r3, r3, #4
 800bdf2:	3308      	adds	r3, #8
 800bdf4:	687a      	ldr	r2, [r7, #4]
 800bdf6:	4413      	add	r3, r2
    }
 800bdf8:	4618      	mov	r0, r3
 800bdfa:	370c      	adds	r7, #12
 800bdfc:	46bd      	mov	sp, r7
 800bdfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be02:	4770      	bx	lr

0800be04 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800be04:	b480      	push	{r7}
 800be06:	b083      	sub	sp, #12
 800be08:	af00      	add	r7, sp, #0
 800be0a:	6078      	str	r0, [r7, #4]
 800be0c:	460b      	mov	r3, r1
 800be0e:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800be10:	887b      	ldrh	r3, [r7, #2]
 800be12:	011b      	lsls	r3, r3, #4
 800be14:	3308      	adds	r3, #8
 800be16:	687a      	ldr	r2, [r7, #4]
 800be18:	4413      	add	r3, r2
    }
 800be1a:	4618      	mov	r0, r3
 800be1c:	370c      	adds	r7, #12
 800be1e:	46bd      	mov	sp, r7
 800be20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be24:	4770      	bx	lr

0800be26 <_GLOBAL__sub_I_touchgfx_init>:
 800be26:	b580      	push	{r7, lr}
 800be28:	af00      	add	r7, sp, #0
 800be2a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800be2e:	2001      	movs	r0, #1
 800be30:	f7ff fefe 	bl	800bc30 <_Z41__static_initialization_and_destruction_0ii>
 800be34:	bd80      	pop	{r7, pc}

0800be36 <_GLOBAL__sub_D_touchgfx_init>:
 800be36:	b580      	push	{r7, lr}
 800be38:	af00      	add	r7, sp, #0
 800be3a:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800be3e:	2000      	movs	r0, #0
 800be40:	f7ff fef6 	bl	800bc30 <_Z41__static_initialization_and_destruction_0ii>
 800be44:	bd80      	pop	{r7, pc}

0800be46 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800be46:	b480      	push	{r7}
 800be48:	b083      	sub	sp, #12
 800be4a:	af00      	add	r7, sp, #0
 800be4c:	6078      	str	r0, [r7, #4]
        return color;
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	681b      	ldr	r3, [r3, #0]
    }
 800be52:	4618      	mov	r0, r3
 800be54:	370c      	adds	r7, #12
 800be56:	46bd      	mov	sp, r7
 800be58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be5c:	4770      	bx	lr
	...

0800be60 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800be60:	b480      	push	{r7}
 800be62:	b083      	sub	sp, #12
 800be64:	af00      	add	r7, sp, #0
 800be66:	6078      	str	r0, [r7, #4]
    {
 800be68:	4a04      	ldr	r2, [pc, #16]	@ (800be7c <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	601a      	str	r2, [r3, #0]
    }
 800be6e:	687b      	ldr	r3, [r7, #4]
 800be70:	4618      	mov	r0, r3
 800be72:	370c      	adds	r7, #12
 800be74:	46bd      	mov	sp, r7
 800be76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be7a:	4770      	bx	lr
 800be7c:	08024710 	.word	0x08024710

0800be80 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800be80:	b580      	push	{r7, lr}
 800be82:	b082      	sub	sp, #8
 800be84:	af00      	add	r7, sp, #0
 800be86:	6078      	str	r0, [r7, #4]
    }
 800be88:	6878      	ldr	r0, [r7, #4]
 800be8a:	f7ff ffe9 	bl	800be60 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800be8e:	2104      	movs	r1, #4
 800be90:	6878      	ldr	r0, [r7, #4]
 800be92:	f015 fdf6 	bl	8021a82 <_ZdlPvj>
 800be96:	687b      	ldr	r3, [r7, #4]
 800be98:	4618      	mov	r0, r3
 800be9a:	3708      	adds	r7, #8
 800be9c:	46bd      	mov	sp, r7
 800be9e:	bd80      	pop	{r7, pc}

0800bea0 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800bea0:	b480      	push	{r7}
 800bea2:	b083      	sub	sp, #12
 800bea4:	af00      	add	r7, sp, #0
 800bea6:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800bea8:	687b      	ldr	r3, [r7, #4]
 800beaa:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800beae:	3301      	adds	r3, #1
 800beb0:	b2da      	uxtb	r2, r3
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	2200      	movs	r2, #0
 800bebc:	f883 207c 	strb.w	r2, [r3, #124]	@ 0x7c
    }
 800bec0:	bf00      	nop
 800bec2:	370c      	adds	r7, #12
 800bec4:	46bd      	mov	sp, r7
 800bec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800beca:	4770      	bx	lr

0800becc <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800becc:	b480      	push	{r7}
 800bece:	b083      	sub	sp, #12
 800bed0:	af00      	add	r7, sp, #0
 800bed2:	6078      	str	r0, [r7, #4]
 800bed4:	6039      	str	r1, [r7, #0]
        frameBufferAllocator = allocator;
 800bed6:	687b      	ldr	r3, [r7, #4]
 800bed8:	683a      	ldr	r2, [r7, #0]
 800beda:	619a      	str	r2, [r3, #24]
    }
 800bedc:	bf00      	nop
 800bede:	370c      	adds	r7, #12
 800bee0:	46bd      	mov	sp, r7
 800bee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bee6:	4770      	bx	lr

0800bee8 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    FrameBufferAllocator* getFrameBufferAllocator()
 800bee8:	b480      	push	{r7}
 800beea:	b083      	sub	sp, #12
 800beec:	af00      	add	r7, sp, #0
 800beee:	6078      	str	r0, [r7, #4]
        return frameBufferAllocator;
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	699b      	ldr	r3, [r3, #24]
    }
 800bef4:	4618      	mov	r0, r3
 800bef6:	370c      	adds	r7, #12
 800bef8:	46bd      	mov	sp, r7
 800befa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800befe:	4770      	bx	lr

0800bf00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800bf00:	b580      	push	{r7, lr}
 800bf02:	b082      	sub	sp, #8
 800bf04:	af00      	add	r7, sp, #0
 800bf06:	6078      	str	r0, [r7, #4]
 800bf08:	460b      	mov	r3, r1
 800bf0a:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800bf0c:	78fb      	ldrb	r3, [r7, #3]
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	d002      	beq.n	800bf18 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800bf12:	78fb      	ldrb	r3, [r7, #3]
 800bf14:	2b03      	cmp	r3, #3
 800bf16:	d105      	bne.n	800bf24 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800bf18:	687b      	ldr	r3, [r7, #4]
 800bf1a:	78fa      	ldrb	r2, [r7, #3]
 800bf1c:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800bf20:	2301      	movs	r3, #1
 800bf22:	e04a      	b.n	800bfba <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800bf24:	78fb      	ldrb	r3, [r7, #3]
 800bf26:	2b01      	cmp	r3, #1
 800bf28:	d123      	bne.n	800bf72 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800bf2a:	687b      	ldr	r3, [r7, #4]
 800bf2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bf2e:	2b00      	cmp	r3, #0
 800bf30:	d014      	beq.n	800bf5c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf32:	687b      	ldr	r3, [r7, #4]
 800bf34:	681b      	ldr	r3, [r3, #0]
 800bf36:	33a8      	adds	r3, #168	@ 0xa8
 800bf38:	681b      	ldr	r3, [r3, #0]
 800bf3a:	6878      	ldr	r0, [r7, #4]
 800bf3c:	4798      	blx	r3
 800bf3e:	4603      	mov	r3, r0
 800bf40:	461a      	mov	r2, r3
 800bf42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bf46:	429a      	cmp	r2, r3
 800bf48:	d008      	beq.n	800bf5c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf4a:	4b1e      	ldr	r3, [pc, #120]	@ (800bfc4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xc4>)
 800bf4c:	781b      	ldrb	r3, [r3, #0]
 800bf4e:	f083 0301 	eor.w	r3, r3, #1
 800bf52:	b2db      	uxtb	r3, r3
 800bf54:	2b00      	cmp	r3, #0
 800bf56:	d001      	beq.n	800bf5c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800bf58:	2301      	movs	r3, #1
 800bf5a:	e000      	b.n	800bf5e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800bf5c:	2300      	movs	r3, #0
 800bf5e:	2b00      	cmp	r3, #0
 800bf60:	d005      	beq.n	800bf6e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800bf62:	687b      	ldr	r3, [r7, #4]
 800bf64:	78fa      	ldrb	r2, [r7, #3]
 800bf66:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800bf6a:	2301      	movs	r3, #1
 800bf6c:	e025      	b.n	800bfba <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
            return false;
 800bf6e:	2300      	movs	r3, #0
 800bf70:	e023      	b.n	800bfba <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        if (s == REFRESH_STRATEGY_PARTIAL_BUFFER_TFT_CTRL)
 800bf72:	78fb      	ldrb	r3, [r7, #3]
 800bf74:	2b02      	cmp	r3, #2
 800bf76:	d11f      	bne.n	800bfb8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xb8>
            if (getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800bf78:	687b      	ldr	r3, [r7, #4]
 800bf7a:	681b      	ldr	r3, [r3, #0]
 800bf7c:	33a8      	adds	r3, #168	@ 0xa8
 800bf7e:	681b      	ldr	r3, [r3, #0]
 800bf80:	6878      	ldr	r0, [r7, #4]
 800bf82:	4798      	blx	r3
 800bf84:	4603      	mov	r3, r0
 800bf86:	461a      	mov	r2, r3
 800bf88:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800bf8c:	429a      	cmp	r2, r3
 800bf8e:	d008      	beq.n	800bfa2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa2>
 800bf90:	4b0c      	ldr	r3, [pc, #48]	@ (800bfc4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xc4>)
 800bf92:	781b      	ldrb	r3, [r3, #0]
 800bf94:	f083 0301 	eor.w	r3, r3, #1
 800bf98:	b2db      	uxtb	r3, r3
 800bf9a:	2b00      	cmp	r3, #0
 800bf9c:	d001      	beq.n	800bfa2 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa2>
 800bf9e:	2301      	movs	r3, #1
 800bfa0:	e000      	b.n	800bfa4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xa4>
 800bfa2:	2300      	movs	r3, #0
 800bfa4:	2b00      	cmp	r3, #0
 800bfa6:	d005      	beq.n	800bfb4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xb4>
                refreshStrategy = s;
 800bfa8:	687b      	ldr	r3, [r7, #4]
 800bfaa:	78fa      	ldrb	r2, [r7, #3]
 800bfac:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800bfb0:	2301      	movs	r3, #1
 800bfb2:	e002      	b.n	800bfba <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
            return false;
 800bfb4:	2300      	movs	r3, #0
 800bfb6:	e000      	b.n	800bfba <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0xba>
        return false;
 800bfb8:	2300      	movs	r3, #0
    }
 800bfba:	4618      	mov	r0, r3
 800bfbc:	3708      	adds	r7, #8
 800bfbe:	46bd      	mov	sp, r7
 800bfc0:	bd80      	pop	{r7, pc}
 800bfc2:	bf00      	nop
 800bfc4:	2000222e 	.word	0x2000222e

0800bfc8 <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800bfc8:	b480      	push	{r7}
 800bfca:	af00      	add	r7, sp, #0
}
 800bfcc:	bf00      	nop
 800bfce:	46bd      	mov	sp, r7
 800bfd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfd4:	4770      	bx	lr

0800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800bfd6:	b480      	push	{r7}
 800bfd8:	b083      	sub	sp, #12
 800bfda:	af00      	add	r7, sp, #0
 800bfdc:	6078      	str	r0, [r7, #4]
 800bfde:	6039      	str	r1, [r7, #0]
}
 800bfe0:	bf00      	nop
 800bfe2:	370c      	adds	r7, #12
 800bfe4:	46bd      	mov	sp, r7
 800bfe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfea:	4770      	bx	lr

0800bfec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800bfec:	b480      	push	{r7}
 800bfee:	b08d      	sub	sp, #52	@ 0x34
 800bff0:	af00      	add	r7, sp, #0
 800bff2:	60f8      	str	r0, [r7, #12]
 800bff4:	60b9      	str	r1, [r7, #8]
 800bff6:	607a      	str	r2, [r7, #4]
 800bff8:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800bffa:	68fb      	ldr	r3, [r7, #12]
 800bffc:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800bffe:	68bb      	ldr	r3, [r7, #8]
 800c000:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800c002:	687b      	ldr	r3, [r7, #4]
 800c004:	005b      	lsls	r3, r3, #1
 800c006:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c008:	4413      	add	r3, r2
 800c00a:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800c00c:	78fb      	ldrb	r3, [r7, #3]
 800c00e:	2bff      	cmp	r3, #255	@ 0xff
 800c010:	d112      	bne.n	800c038 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800c012:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c014:	1c9a      	adds	r2, r3, #2
 800c016:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c018:	881a      	ldrh	r2, [r3, #0]
 800c01a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c01c:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c01e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c020:	3302      	adds	r3, #2
 800c022:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c024:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c026:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c028:	429a      	cmp	r2, r3
 800c02a:	bf34      	ite	cc
 800c02c:	2301      	movcc	r3, #1
 800c02e:	2300      	movcs	r3, #0
 800c030:	b2db      	uxtb	r3, r3
 800c032:	2b00      	cmp	r3, #0
 800c034:	d1ed      	bne.n	800c012 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800c036:	e079      	b.n	800c12c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c038:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c03a:	1c9a      	adds	r2, r3, #2
 800c03c:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c03e:	881a      	ldrh	r2, [r3, #0]
 800c040:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c042:	881b      	ldrh	r3, [r3, #0]
 800c044:	847a      	strh	r2, [r7, #34]	@ 0x22
 800c046:	843b      	strh	r3, [r7, #32]
 800c048:	78fb      	ldrb	r3, [r7, #3]
 800c04a:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c04c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c04e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c052:	f023 0307 	bic.w	r3, r3, #7
 800c056:	b299      	uxth	r1, r3
 800c058:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c05a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c05e:	b29a      	uxth	r2, r3
 800c060:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c062:	f003 031f 	and.w	r3, r3, #31
 800c066:	b29b      	uxth	r3, r3
 800c068:	83b9      	strh	r1, [r7, #28]
 800c06a:	837a      	strh	r2, [r7, #26]
 800c06c:	833b      	strh	r3, [r7, #24]
 800c06e:	8c3b      	ldrh	r3, [r7, #32]
 800c070:	82fb      	strh	r3, [r7, #22]
 800c072:	7ffb      	ldrb	r3, [r7, #31]
 800c074:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800c076:	7d7b      	ldrb	r3, [r7, #21]
 800c078:	43db      	mvns	r3, r3
 800c07a:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c07c:	8bbb      	ldrh	r3, [r7, #28]
 800c07e:	7d7a      	ldrb	r2, [r7, #21]
 800c080:	fb03 f202 	mul.w	r2, r3, r2
 800c084:	8afb      	ldrh	r3, [r7, #22]
 800c086:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800c08a:	7d39      	ldrb	r1, [r7, #20]
 800c08c:	fb01 f303 	mul.w	r3, r1, r3
 800c090:	4413      	add	r3, r2
 800c092:	4a29      	ldr	r2, [pc, #164]	@ (800c138 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c094:	fb82 1203 	smull	r1, r2, r2, r3
 800c098:	441a      	add	r2, r3
 800c09a:	11d2      	asrs	r2, r2, #7
 800c09c:	17db      	asrs	r3, r3, #31
 800c09e:	1ad3      	subs	r3, r2, r3
 800c0a0:	b21b      	sxth	r3, r3
 800c0a2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c0a6:	f023 0307 	bic.w	r3, r3, #7
 800c0aa:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c0ac:	8b7b      	ldrh	r3, [r7, #26]
 800c0ae:	7d79      	ldrb	r1, [r7, #21]
 800c0b0:	fb03 f101 	mul.w	r1, r3, r1
 800c0b4:	8afb      	ldrh	r3, [r7, #22]
 800c0b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c0ba:	7d38      	ldrb	r0, [r7, #20]
 800c0bc:	fb00 f303 	mul.w	r3, r0, r3
 800c0c0:	440b      	add	r3, r1
 800c0c2:	491d      	ldr	r1, [pc, #116]	@ (800c138 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c0c4:	fb81 0103 	smull	r0, r1, r1, r3
 800c0c8:	4419      	add	r1, r3
 800c0ca:	11c9      	asrs	r1, r1, #7
 800c0cc:	17db      	asrs	r3, r3, #31
 800c0ce:	1acb      	subs	r3, r1, r3
 800c0d0:	b21b      	sxth	r3, r3
 800c0d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c0d6:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c0d8:	4313      	orrs	r3, r2
 800c0da:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c0dc:	8b3b      	ldrh	r3, [r7, #24]
 800c0de:	7d79      	ldrb	r1, [r7, #21]
 800c0e0:	fb03 f101 	mul.w	r1, r3, r1
 800c0e4:	8afb      	ldrh	r3, [r7, #22]
 800c0e6:	f003 031f 	and.w	r3, r3, #31
 800c0ea:	7d38      	ldrb	r0, [r7, #20]
 800c0ec:	fb00 f303 	mul.w	r3, r0, r3
 800c0f0:	440b      	add	r3, r1
 800c0f2:	4911      	ldr	r1, [pc, #68]	@ (800c138 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c0f4:	fb81 0103 	smull	r0, r1, r1, r3
 800c0f8:	4419      	add	r1, r3
 800c0fa:	11c9      	asrs	r1, r1, #7
 800c0fc:	17db      	asrs	r3, r3, #31
 800c0fe:	1acb      	subs	r3, r1, r3
 800c100:	b21b      	sxth	r3, r3
 800c102:	f003 031f 	and.w	r3, r3, #31
 800c106:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c108:	4313      	orrs	r3, r2
 800c10a:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c10c:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c10e:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c110:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c112:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c114:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c116:	3302      	adds	r3, #2
 800c118:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c11a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c11c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c11e:	429a      	cmp	r2, r3
 800c120:	bf34      	ite	cc
 800c122:	2301      	movcc	r3, #1
 800c124:	2300      	movcs	r3, #0
 800c126:	b2db      	uxtb	r3, r3
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d185      	bne.n	800c038 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800c12c:	bf00      	nop
 800c12e:	3734      	adds	r7, #52	@ 0x34
 800c130:	46bd      	mov	sp, r7
 800c132:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c136:	4770      	bx	lr
 800c138:	80808081 	.word	0x80808081

0800c13c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800c13c:	b590      	push	{r4, r7, lr}
 800c13e:	b093      	sub	sp, #76	@ 0x4c
 800c140:	af00      	add	r7, sp, #0
 800c142:	60f8      	str	r0, [r7, #12]
 800c144:	60b9      	str	r1, [r7, #8]
 800c146:	607a      	str	r2, [r7, #4]
 800c148:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800c14a:	68fb      	ldr	r3, [r7, #12]
 800c14c:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800c14e:	68bb      	ldr	r3, [r7, #8]
 800c150:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	005b      	lsls	r3, r3, #1
 800c156:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c158:	4413      	add	r3, r2
 800c15a:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800c15c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c15e:	681b      	ldr	r3, [r3, #0]
 800c160:	0e1b      	lsrs	r3, r3, #24
 800c162:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800c166:	78fb      	ldrb	r3, [r7, #3]
 800c168:	b29a      	uxth	r2, r3
 800c16a:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800c16e:	b29b      	uxth	r3, r3
 800c170:	fb12 f303 	smulbb	r3, r2, r3
 800c174:	b29b      	uxth	r3, r3
 800c176:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800c178:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800c17a:	3301      	adds	r3, #1
 800c17c:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800c17e:	0a12      	lsrs	r2, r2, #8
 800c180:	b292      	uxth	r2, r2
 800c182:	4413      	add	r3, r2
 800c184:	121b      	asrs	r3, r3, #8
 800c186:	b2db      	uxtb	r3, r3
 800c188:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800c18c:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c190:	2bff      	cmp	r3, #255	@ 0xff
 800c192:	d133      	bne.n	800c1fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800c194:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c196:	681a      	ldr	r2, [r3, #0]
 800c198:	f107 0318 	add.w	r3, r7, #24
 800c19c:	4611      	mov	r1, r2
 800c19e:	4618      	mov	r0, r3
 800c1a0:	f7fc fd7a 	bl	8008c98 <_ZN8touchgfx9colortypeC1Em>
 800c1a4:	69bb      	ldr	r3, [r7, #24]
 800c1a6:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800c1a8:	f107 0314 	add.w	r3, r7, #20
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	f7ff fe4a 	bl	800be46 <_ZNK8touchgfx9colortypecvmEv>
 800c1b2:	4603      	mov	r3, r0
 800c1b4:	0a1b      	lsrs	r3, r3, #8
 800c1b6:	b29b      	uxth	r3, r3
 800c1b8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c1bc:	f023 0307 	bic.w	r3, r3, #7
 800c1c0:	b29c      	uxth	r4, r3
 800c1c2:	f107 0314 	add.w	r3, r7, #20
 800c1c6:	4618      	mov	r0, r3
 800c1c8:	f7ff fe3d 	bl	800be46 <_ZNK8touchgfx9colortypecvmEv>
 800c1cc:	4603      	mov	r3, r0
 800c1ce:	095b      	lsrs	r3, r3, #5
 800c1d0:	b29b      	uxth	r3, r3
 800c1d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c1d6:	b29b      	uxth	r3, r3
 800c1d8:	4323      	orrs	r3, r4
 800c1da:	b29c      	uxth	r4, r3
 800c1dc:	f107 0314 	add.w	r3, r7, #20
 800c1e0:	4618      	mov	r0, r3
 800c1e2:	f7ff fe30 	bl	800be46 <_ZNK8touchgfx9colortypecvmEv>
 800c1e6:	4603      	mov	r3, r0
 800c1e8:	08db      	lsrs	r3, r3, #3
 800c1ea:	b29b      	uxth	r3, r3
 800c1ec:	f003 031f 	and.w	r3, r3, #31
 800c1f0:	b29b      	uxth	r3, r3
 800c1f2:	4323      	orrs	r3, r4
 800c1f4:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800c1f6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c1f8:	801a      	strh	r2, [r3, #0]
 800c1fa:	e0a9      	b.n	800c350 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800c1fc:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c200:	2b00      	cmp	r3, #0
 800c202:	f000 80a5 	beq.w	800c350 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800c206:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c208:	681b      	ldr	r3, [r3, #0]
 800c20a:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c20c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c20e:	0c1b      	lsrs	r3, r3, #16
 800c210:	b2d8      	uxtb	r0, r3
 800c212:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c214:	0a1b      	lsrs	r3, r3, #8
 800c216:	b2d9      	uxtb	r1, r3
 800c218:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c21a:	b2da      	uxtb	r2, r3
 800c21c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c21e:	881b      	ldrh	r3, [r3, #0]
 800c220:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800c224:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800c228:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800c22c:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800c22e:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c232:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800c236:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800c23a:	43db      	mvns	r3, r3
 800c23c:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800c240:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c242:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800c244:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800c246:	0a1b      	lsrs	r3, r3, #8
 800c248:	b29b      	uxth	r3, r3
 800c24a:	b2db      	uxtb	r3, r3
 800c24c:	f023 0307 	bic.w	r3, r3, #7
 800c250:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800c254:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c258:	095b      	lsrs	r3, r3, #5
 800c25a:	b2da      	uxtb	r2, r3
 800c25c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c260:	4313      	orrs	r3, r2
 800c262:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800c264:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800c268:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c26a:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800c26c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800c26e:	08db      	lsrs	r3, r3, #3
 800c270:	b29b      	uxth	r3, r3
 800c272:	b2db      	uxtb	r3, r3
 800c274:	f023 0303 	bic.w	r3, r3, #3
 800c278:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800c27c:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c280:	099b      	lsrs	r3, r3, #6
 800c282:	b2da      	uxtb	r2, r3
 800c284:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c288:	4313      	orrs	r3, r2
 800c28a:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800c28c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800c290:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c292:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800c294:	8c3b      	ldrh	r3, [r7, #32]
 800c296:	b2db      	uxtb	r3, r3
 800c298:	00db      	lsls	r3, r3, #3
 800c29a:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800c29c:	7ffb      	ldrb	r3, [r7, #31]
 800c29e:	095b      	lsrs	r3, r3, #5
 800c2a0:	b2da      	uxtb	r2, r3
 800c2a2:	7ffb      	ldrb	r3, [r7, #31]
 800c2a4:	4313      	orrs	r3, r2
 800c2a6:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800c2a8:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c2aa:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800c2ae:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800c2b2:	fb03 f202 	mul.w	r2, r3, r2
 800c2b6:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800c2ba:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800c2be:	fb01 f303 	mul.w	r3, r1, r3
 800c2c2:	4413      	add	r3, r2
 800c2c4:	4a2d      	ldr	r2, [pc, #180]	@ (800c37c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c2c6:	fb82 1203 	smull	r1, r2, r2, r3
 800c2ca:	441a      	add	r2, r3
 800c2cc:	11d2      	asrs	r2, r2, #7
 800c2ce:	17db      	asrs	r3, r3, #31
 800c2d0:	1ad3      	subs	r3, r2, r3
 800c2d2:	021b      	lsls	r3, r3, #8
 800c2d4:	b21b      	sxth	r3, r3
 800c2d6:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c2da:	f023 0307 	bic.w	r3, r3, #7
 800c2de:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c2e0:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800c2e4:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c2e8:	fb03 f101 	mul.w	r1, r3, r1
 800c2ec:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800c2f0:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c2f4:	fb00 f303 	mul.w	r3, r0, r3
 800c2f8:	440b      	add	r3, r1
 800c2fa:	4920      	ldr	r1, [pc, #128]	@ (800c37c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c2fc:	fb81 0103 	smull	r0, r1, r1, r3
 800c300:	4419      	add	r1, r3
 800c302:	11c9      	asrs	r1, r1, #7
 800c304:	17db      	asrs	r3, r3, #31
 800c306:	1acb      	subs	r3, r1, r3
 800c308:	00db      	lsls	r3, r3, #3
 800c30a:	b21b      	sxth	r3, r3
 800c30c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c310:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c312:	4313      	orrs	r3, r2
 800c314:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c316:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800c31a:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c31e:	fb03 f101 	mul.w	r1, r3, r1
 800c322:	7fbb      	ldrb	r3, [r7, #30]
 800c324:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c328:	fb00 f303 	mul.w	r3, r0, r3
 800c32c:	440b      	add	r3, r1
 800c32e:	4913      	ldr	r1, [pc, #76]	@ (800c37c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c330:	fb81 0103 	smull	r0, r1, r1, r3
 800c334:	4419      	add	r1, r3
 800c336:	11c9      	asrs	r1, r1, #7
 800c338:	17db      	asrs	r3, r3, #31
 800c33a:	1acb      	subs	r3, r1, r3
 800c33c:	10db      	asrs	r3, r3, #3
 800c33e:	b21b      	sxth	r3, r3
 800c340:	f003 031f 	and.w	r3, r3, #31
 800c344:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c346:	4313      	orrs	r3, r2
 800c348:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c34a:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c34c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c34e:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800c350:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c352:	3304      	adds	r3, #4
 800c354:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800c356:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c358:	3302      	adds	r3, #2
 800c35a:	647b      	str	r3, [r7, #68]	@ 0x44
 800c35c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c35e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c360:	429a      	cmp	r2, r3
 800c362:	bf34      	ite	cc
 800c364:	2301      	movcc	r3, #1
 800c366:	2300      	movcs	r3, #0
 800c368:	b2db      	uxtb	r3, r3
 800c36a:	2b00      	cmp	r3, #0
 800c36c:	f47f aef6 	bne.w	800c15c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800c370:	bf00      	nop
 800c372:	bf00      	nop
 800c374:	374c      	adds	r7, #76	@ 0x4c
 800c376:	46bd      	mov	sp, r7
 800c378:	bd90      	pop	{r4, r7, pc}
 800c37a:	bf00      	nop
 800c37c:	80808081 	.word	0x80808081

0800c380 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800c380:	b5b0      	push	{r4, r5, r7, lr}
 800c382:	b082      	sub	sp, #8
 800c384:	af00      	add	r7, sp, #0
 800c386:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800c388:	687b      	ldr	r3, [r7, #4]
 800c38a:	4618      	mov	r0, r3
 800c38c:	f000 fed9 	bl	800d142 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800c390:	687d      	ldr	r5, [r7, #4]
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	681b      	ldr	r3, [r3, #0]
 800c396:	3368      	adds	r3, #104	@ 0x68
 800c398:	681c      	ldr	r4, [r3, #0]
 800c39a:	f003 feb1 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800c39e:	4603      	mov	r3, r0
 800c3a0:	4619      	mov	r1, r3
 800c3a2:	4628      	mov	r0, r5
 800c3a4:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800c3a6:	687b      	ldr	r3, [r7, #4]
 800c3a8:	681b      	ldr	r3, [r3, #0]
 800c3aa:	3384      	adds	r3, #132	@ 0x84
 800c3ac:	681b      	ldr	r3, [r3, #0]
 800c3ae:	6878      	ldr	r0, [r7, #4]
 800c3b0:	4798      	blx	r3
    enableInterrupts();
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	681b      	ldr	r3, [r3, #0]
 800c3b6:	337c      	adds	r3, #124	@ 0x7c
 800c3b8:	681b      	ldr	r3, [r3, #0]
 800c3ba:	6878      	ldr	r0, [r7, #4]
 800c3bc:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800c3be:	687b      	ldr	r3, [r7, #4]
 800c3c0:	490a      	ldr	r1, [pc, #40]	@ (800c3ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
 800c3c2:	4618      	mov	r0, r3
 800c3c4:	f7ff fd82 	bl	800becc <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    if (!setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER))
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	2103      	movs	r1, #3
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	f7ff fd97 	bl	800bf00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
 800c3d2:	4603      	mov	r3, r0
 800c3d4:	f083 0301 	eor.w	r3, r3, #1
 800c3d8:	b2db      	uxtb	r3, r3
 800c3da:	2b00      	cmp	r3, #0
 800c3dc:	d001      	beq.n	800c3e2 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x62>
    {
        while (1);
 800c3de:	bf00      	nop
 800c3e0:	e7fd      	b.n	800c3de <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
    }
}
 800c3e2:	bf00      	nop
 800c3e4:	3708      	adds	r7, #8
 800c3e6:	46bd      	mov	sp, r7
 800c3e8:	bdb0      	pop	{r4, r5, r7, pc}
 800c3ea:	bf00      	nop
 800c3ec:	200009fc 	.word	0x200009fc

0800c3f0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800c3f0:	b480      	push	{r7}
 800c3f2:	b083      	sub	sp, #12
 800c3f4:	af00      	add	r7, sp, #0
 800c3f6:	6078      	str	r0, [r7, #4]
}
 800c3f8:	bf00      	nop
 800c3fa:	370c      	adds	r7, #12
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c402:	4770      	bx	lr

0800c404 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800c404:	b480      	push	{r7}
 800c406:	b083      	sub	sp, #12
 800c408:	af00      	add	r7, sp, #0
 800c40a:	6078      	str	r0, [r7, #4]
}
 800c40c:	bf00      	nop
 800c40e:	370c      	adds	r7, #12
 800c410:	46bd      	mov	sp, r7
 800c412:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c416:	4770      	bx	lr

0800c418 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800c418:	b480      	push	{r7}
 800c41a:	b083      	sub	sp, #12
 800c41c:	af00      	add	r7, sp, #0
 800c41e:	6078      	str	r0, [r7, #4]
}
 800c420:	bf00      	nop
 800c422:	370c      	adds	r7, #12
 800c424:	46bd      	mov	sp, r7
 800c426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c42a:	4770      	bx	lr

0800c42c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800c42c:	b480      	push	{r7}
 800c42e:	b083      	sub	sp, #12
 800c430:	af00      	add	r7, sp, #0
 800c432:	6078      	str	r0, [r7, #4]
}
 800c434:	bf00      	nop
 800c436:	370c      	adds	r7, #12
 800c438:	46bd      	mov	sp, r7
 800c43a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c43e:	4770      	bx	lr

0800c440 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800c440:	b580      	push	{r7, lr}
 800c442:	b082      	sub	sp, #8
 800c444:	af00      	add	r7, sp, #0
 800c446:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	4618      	mov	r0, r3
 800c44c:	f000 fe60 	bl	800d110 <_ZN8touchgfx3HAL10beginFrameEv>
 800c450:	4603      	mov	r3, r0
}
 800c452:	4618      	mov	r0, r3
 800c454:	3708      	adds	r7, #8
 800c456:	46bd      	mov	sp, r7
 800c458:	bd80      	pop	{r7, pc}

0800c45a <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800c45a:	b580      	push	{r7, lr}
 800c45c:	b082      	sub	sp, #8
 800c45e:	af00      	add	r7, sp, #0
 800c460:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800c462:	bf00      	nop
 800c464:	f7fe fde4 	bl	800b030 <touchgfxDisplayDriverTransmitActive>
 800c468:	4603      	mov	r3, r0
 800c46a:	2b00      	cmp	r3, #0
 800c46c:	bf14      	ite	ne
 800c46e:	2301      	movne	r3, #1
 800c470:	2300      	moveq	r3, #0
 800c472:	b2db      	uxtb	r3, r3
 800c474:	2b00      	cmp	r3, #0
 800c476:	d1f5      	bne.n	800c464 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800c478:	687b      	ldr	r3, [r7, #4]
 800c47a:	4618      	mov	r0, r3
 800c47c:	f000 fe54 	bl	800d128 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800c480:	f7fe fe80 	bl	800b184 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800c484:	bf00      	nop
 800c486:	3708      	adds	r7, #8
 800c488:	46bd      	mov	sp, r7
 800c48a:	bd80      	pop	{r7, pc}

0800c48c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800c48c:	b480      	push	{r7}
 800c48e:	b083      	sub	sp, #12
 800c490:	af00      	add	r7, sp, #0
 800c492:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800c494:	2300      	movs	r3, #0
}
 800c496:	4618      	mov	r0, r3
 800c498:	370c      	adds	r7, #12
 800c49a:	46bd      	mov	sp, r7
 800c49c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4a0:	4770      	bx	lr

0800c4a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800c4a2:	b480      	push	{r7}
 800c4a4:	b083      	sub	sp, #12
 800c4a6:	af00      	add	r7, sp, #0
 800c4a8:	6078      	str	r0, [r7, #4]
 800c4aa:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800c4ac:	bf00      	nop
 800c4ae:	370c      	adds	r7, #12
 800c4b0:	46bd      	mov	sp, r7
 800c4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4b6:	4770      	bx	lr

0800c4b8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800c4b8:	b580      	push	{r7, lr}
 800c4ba:	b088      	sub	sp, #32
 800c4bc:	af02      	add	r7, sp, #8
 800c4be:	6078      	str	r0, [r7, #4]
 800c4c0:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800c4c2:	687b      	ldr	r3, [r7, #4]
 800c4c4:	6839      	ldr	r1, [r7, #0]
 800c4c6:	4618      	mov	r0, r3
 800c4c8:	f000 fdec 	bl	800d0a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800c4cc:	687b      	ldr	r3, [r7, #4]
 800c4ce:	699a      	ldr	r2, [r3, #24]
 800c4d0:	687b      	ldr	r3, [r7, #4]
 800c4d2:	699b      	ldr	r3, [r3, #24]
 800c4d4:	681b      	ldr	r3, [r3, #0]
 800c4d6:	3304      	adds	r3, #4
 800c4d8:	681b      	ldr	r3, [r3, #0]
 800c4da:	4610      	mov	r0, r2
 800c4dc:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800c4de:	f7fe fda7 	bl	800b030 <touchgfxDisplayDriverTransmitActive>
 800c4e2:	4603      	mov	r3, r0
 800c4e4:	2b00      	cmp	r3, #0
 800c4e6:	bf0c      	ite	eq
 800c4e8:	2301      	moveq	r3, #1
 800c4ea:	2300      	movne	r3, #0
 800c4ec:	b2db      	uxtb	r3, r3
 800c4ee:	2b00      	cmp	r3, #0
 800c4f0:	d021      	beq.n	800c536 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800c4f2:	f107 030c 	add.w	r3, r7, #12
 800c4f6:	4618      	mov	r0, r3
 800c4f8:	f7fc fbdd 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	699a      	ldr	r2, [r3, #24]
 800c500:	687b      	ldr	r3, [r7, #4]
 800c502:	699b      	ldr	r3, [r3, #24]
 800c504:	681b      	ldr	r3, [r3, #0]
 800c506:	330c      	adds	r3, #12
 800c508:	681b      	ldr	r3, [r3, #0]
 800c50a:	f107 010c 	add.w	r1, r7, #12
 800c50e:	4610      	mov	r0, r2
 800c510:	4798      	blx	r3
 800c512:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800c514:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800c518:	b299      	uxth	r1, r3
 800c51a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800c51e:	b29a      	uxth	r2, r3
 800c520:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800c524:	b298      	uxth	r0, r3
 800c526:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800c52a:	b29b      	uxth	r3, r3
 800c52c:	9300      	str	r3, [sp, #0]
 800c52e:	4603      	mov	r3, r0
 800c530:	6978      	ldr	r0, [r7, #20]
 800c532:	f7fe fd89 	bl	800b048 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800c536:	bf00      	nop
 800c538:	3718      	adds	r7, #24
 800c53a:	46bd      	mov	sp, r7
 800c53c:	bd80      	pop	{r7, pc}

0800c53e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800c53e:	b580      	push	{r7, lr}
 800c540:	b084      	sub	sp, #16
 800c542:	af00      	add	r7, sp, #0
 800c544:	60f8      	str	r0, [r7, #12]
 800c546:	60b9      	str	r1, [r7, #8]
 800c548:	607a      	str	r2, [r7, #4]
 800c54a:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800c54c:	68f8      	ldr	r0, [r7, #12]
 800c54e:	683b      	ldr	r3, [r7, #0]
 800c550:	687a      	ldr	r2, [r7, #4]
 800c552:	68b9      	ldr	r1, [r7, #8]
 800c554:	f000 ff29 	bl	800d3aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800c558:	4603      	mov	r3, r0
}
 800c55a:	4618      	mov	r0, r3
 800c55c:	3710      	adds	r7, #16
 800c55e:	46bd      	mov	sp, r7
 800c560:	bd80      	pop	{r7, pc}

0800c562 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
__weak void FrameBufferAllocatorWaitOnTransfer()
{
 800c562:	b480      	push	{r7}
 800c564:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800c566:	bf00      	nop
 800c568:	46bd      	mov	sp, r7
 800c56a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c56e:	4770      	bx	lr

0800c570 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
__weak void FrameBufferAllocatorSignalBlockDrawn()
{
 800c570:	b480      	push	{r7}
 800c572:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800c574:	bf00      	nop
 800c576:	46bd      	mov	sp, r7
 800c578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c57c:	4770      	bx	lr

0800c57e <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800c57e:	b580      	push	{r7, lr}
 800c580:	b086      	sub	sp, #24
 800c582:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800c584:	f7fb faae 	bl	8007ae4 <_ZN8touchgfx3HAL11getInstanceEv>
 800c588:	4603      	mov	r3, r0
 800c58a:	4618      	mov	r0, r3
 800c58c:	f7ff fcac 	bl	800bee8 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800c590:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800c592:	68fb      	ldr	r3, [r7, #12]
 800c594:	681b      	ldr	r3, [r3, #0]
 800c596:	3318      	adds	r3, #24
 800c598:	681b      	ldr	r3, [r3, #0]
 800c59a:	68f8      	ldr	r0, [r7, #12]
 800c59c:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800c59e:	68fb      	ldr	r3, [r7, #12]
 800c5a0:	681b      	ldr	r3, [r3, #0]
 800c5a2:	3308      	adds	r3, #8
 800c5a4:	681b      	ldr	r3, [r3, #0]
 800c5a6:	68f8      	ldr	r0, [r7, #12]
 800c5a8:	4798      	blx	r3
 800c5aa:	4603      	mov	r3, r0
 800c5ac:	2b00      	cmp	r3, #0
 800c5ae:	d01d      	beq.n	800c5ec <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800c5b0:	463b      	mov	r3, r7
 800c5b2:	4618      	mov	r0, r3
 800c5b4:	f7fc fb7f 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800c5b8:	68fb      	ldr	r3, [r7, #12]
 800c5ba:	681b      	ldr	r3, [r3, #0]
 800c5bc:	330c      	adds	r3, #12
 800c5be:	681b      	ldr	r3, [r3, #0]
 800c5c0:	463a      	mov	r2, r7
 800c5c2:	4611      	mov	r1, r2
 800c5c4:	68f8      	ldr	r0, [r7, #12]
 800c5c6:	4798      	blx	r3
 800c5c8:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800c5ca:	f9b7 3000 	ldrsh.w	r3, [r7]
 800c5ce:	b299      	uxth	r1, r3
 800c5d0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800c5d4:	b29a      	uxth	r2, r3
 800c5d6:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800c5da:	b298      	uxth	r0, r3
 800c5dc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c5e0:	b29b      	uxth	r3, r3
 800c5e2:	9300      	str	r3, [sp, #0]
 800c5e4:	4603      	mov	r3, r0
 800c5e6:	68b8      	ldr	r0, [r7, #8]
 800c5e8:	f7fe fd2e 	bl	800b048 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800c5ec:	bf00      	nop
 800c5ee:	3710      	adds	r7, #16
 800c5f0:	46bd      	mov	sp, r7
 800c5f2:	bd80      	pop	{r7, pc}

0800c5f4 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800c5f4:	b580      	push	{r7, lr}
 800c5f6:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800c5f8:	f7ff ffc1 	bl	800c57e <_ZN8touchgfx16startNewTransferEv>
}
 800c5fc:	bf00      	nop
 800c5fe:	bd80      	pop	{r7, pc}

0800c600 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800c600:	b580      	push	{r7, lr}
 800c602:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800c604:	f7fb fa6e 	bl	8007ae4 <_ZN8touchgfx3HAL11getInstanceEv>
 800c608:	4603      	mov	r3, r0
 800c60a:	4618      	mov	r0, r3
 800c60c:	f7ff fc48 	bl	800bea0 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800c610:	f7fe fdac 	bl	800b16c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800c614:	bf00      	nop
 800c616:	bd80      	pop	{r7, pc}

0800c618 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800c618:	b480      	push	{r7}
 800c61a:	b083      	sub	sp, #12
 800c61c:	af00      	add	r7, sp, #0
 800c61e:	6078      	str	r0, [r7, #4]
 800c620:	4a04      	ldr	r2, [pc, #16]	@ (800c634 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800c622:	687b      	ldr	r3, [r7, #4]
 800c624:	601a      	str	r2, [r3, #0]
 800c626:	687b      	ldr	r3, [r7, #4]
 800c628:	4618      	mov	r0, r3
 800c62a:	370c      	adds	r7, #12
 800c62c:	46bd      	mov	sp, r7
 800c62e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c632:	4770      	bx	lr
 800c634:	08024710 	.word	0x08024710

0800c638 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800c638:	b5b0      	push	{r4, r5, r7, lr}
 800c63a:	b084      	sub	sp, #16
 800c63c:	af00      	add	r7, sp, #0
 800c63e:	6078      	str	r0, [r7, #4]
    {
 800c640:	687b      	ldr	r3, [r7, #4]
 800c642:	4618      	mov	r0, r3
 800c644:	f7ff ffe8 	bl	800c618 <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800c648:	4a1a      	ldr	r2, [pc, #104]	@ (800c6b4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x7c>)
 800c64a:	687b      	ldr	r3, [r7, #4]
 800c64c:	601a      	str	r2, [r3, #0]
 800c64e:	687b      	ldr	r3, [r7, #4]
 800c650:	f503 53c0 	add.w	r3, r3, #6144	@ 0x1800
 800c654:	3308      	adds	r3, #8
 800c656:	2402      	movs	r4, #2
 800c658:	461d      	mov	r5, r3
 800c65a:	e004      	b.n	800c666 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x2e>
 800c65c:	4628      	mov	r0, r5
 800c65e:	f7fc fb2a 	bl	8008cb6 <_ZN8touchgfx4RectC1Ev>
 800c662:	3c01      	subs	r4, #1
 800c664:	3508      	adds	r5, #8
 800c666:	2c00      	cmp	r4, #0
 800c668:	daf8      	bge.n	800c65c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800c66a:	687b      	ldr	r3, [r7, #4]
 800c66c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c670:	461a      	mov	r2, r3
 800c672:	f04f 33ff 	mov.w	r3, #4294967295
 800c676:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        drawingBlock = -1;
 800c67a:	687b      	ldr	r3, [r7, #4]
 800c67c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c680:	461a      	mov	r2, r3
 800c682:	f04f 33ff 	mov.w	r3, #4294967295
 800c686:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        for (uint32_t i = 0; i < blocks; i++)
 800c68a:	2300      	movs	r3, #0
 800c68c:	60fb      	str	r3, [r7, #12]
 800c68e:	e008      	b.n	800c6a2 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800c690:	687a      	ldr	r2, [r7, #4]
 800c692:	68fb      	ldr	r3, [r7, #12]
 800c694:	4413      	add	r3, r2
 800c696:	3304      	adds	r3, #4
 800c698:	2200      	movs	r2, #0
 800c69a:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800c69c:	68fb      	ldr	r3, [r7, #12]
 800c69e:	3301      	adds	r3, #1
 800c6a0:	60fb      	str	r3, [r7, #12]
 800c6a2:	68fb      	ldr	r3, [r7, #12]
 800c6a4:	2b02      	cmp	r3, #2
 800c6a6:	d9f3      	bls.n	800c690 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev+0x58>
        }
    }
 800c6a8:	687b      	ldr	r3, [r7, #4]
 800c6aa:	4618      	mov	r0, r3
 800c6ac:	3710      	adds	r7, #16
 800c6ae:	46bd      	mov	sp, r7
 800c6b0:	bdb0      	pop	{r4, r5, r7, pc}
 800c6b2:	bf00      	nop
 800c6b4:	080245f8 	.word	0x080245f8

0800c6b8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800c6b8:	b580      	push	{r7, lr}
 800c6ba:	b082      	sub	sp, #8
 800c6bc:	af00      	add	r7, sp, #0
 800c6be:	6078      	str	r0, [r7, #4]
 800c6c0:	4a05      	ldr	r2, [pc, #20]	@ (800c6d8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev+0x20>)
 800c6c2:	687b      	ldr	r3, [r7, #4]
 800c6c4:	601a      	str	r2, [r3, #0]
 800c6c6:	687b      	ldr	r3, [r7, #4]
 800c6c8:	4618      	mov	r0, r3
 800c6ca:	f7ff fbc9 	bl	800be60 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800c6ce:	687b      	ldr	r3, [r7, #4]
 800c6d0:	4618      	mov	r0, r3
 800c6d2:	3708      	adds	r7, #8
 800c6d4:	46bd      	mov	sp, r7
 800c6d6:	bd80      	pop	{r7, pc}
 800c6d8:	080245f8 	.word	0x080245f8

0800c6dc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED0Ev>:
 800c6dc:	b580      	push	{r7, lr}
 800c6de:	b082      	sub	sp, #8
 800c6e0:	af00      	add	r7, sp, #0
 800c6e2:	6078      	str	r0, [r7, #4]
 800c6e4:	6878      	ldr	r0, [r7, #4]
 800c6e6:	f7ff ffe7 	bl	800c6b8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>
 800c6ea:	f641 0128 	movw	r1, #6184	@ 0x1828
 800c6ee:	6878      	ldr	r0, [r7, #4]
 800c6f0:	f015 f9c7 	bl	8021a82 <_ZdlPvj>
 800c6f4:	687b      	ldr	r3, [r7, #4]
 800c6f6:	4618      	mov	r0, r3
 800c6f8:	3708      	adds	r7, #8
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	bd80      	pop	{r7, pc}
	...

0800c700 <_Z41__static_initialization_and_destruction_0ii>:
 800c700:	b580      	push	{r7, lr}
 800c702:	b082      	sub	sp, #8
 800c704:	af00      	add	r7, sp, #0
 800c706:	6078      	str	r0, [r7, #4]
 800c708:	6039      	str	r1, [r7, #0]
 800c70a:	687b      	ldr	r3, [r7, #4]
 800c70c:	2b01      	cmp	r3, #1
 800c70e:	d107      	bne.n	800c720 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800c710:	683b      	ldr	r3, [r7, #0]
 800c712:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c716:	4293      	cmp	r3, r2
 800c718:	d102      	bne.n	800c720 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800c71a:	4809      	ldr	r0, [pc, #36]	@ (800c740 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800c71c:	f7ff ff8c 	bl	800c638 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EEC1Ev>
 800c720:	687b      	ldr	r3, [r7, #4]
 800c722:	2b00      	cmp	r3, #0
 800c724:	d107      	bne.n	800c736 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800c726:	683b      	ldr	r3, [r7, #0]
 800c728:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c72c:	4293      	cmp	r3, r2
 800c72e:	d102      	bne.n	800c736 <_Z41__static_initialization_and_destruction_0ii+0x36>
 800c730:	4803      	ldr	r0, [pc, #12]	@ (800c740 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800c732:	f7ff ffc1 	bl	800c6b8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EED1Ev>
}
 800c736:	bf00      	nop
 800c738:	3708      	adds	r7, #8
 800c73a:	46bd      	mov	sp, r7
 800c73c:	bd80      	pop	{r7, pc}
 800c73e:	bf00      	nop
 800c740:	200009fc 	.word	0x200009fc

0800c744 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800c744:	b580      	push	{r7, lr}
 800c746:	b086      	sub	sp, #24
 800c748:	af00      	add	r7, sp, #0
 800c74a:	60f8      	str	r0, [r7, #12]
 800c74c:	4608      	mov	r0, r1
 800c74e:	4611      	mov	r1, r2
 800c750:	461a      	mov	r2, r3
 800c752:	4603      	mov	r3, r0
 800c754:	817b      	strh	r3, [r7, #10]
 800c756:	460b      	mov	r3, r1
 800c758:	813b      	strh	r3, [r7, #8]
 800c75a:	4613      	mov	r3, r2
 800c75c:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800c75e:	68fb      	ldr	r3, [r7, #12]
 800c760:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c764:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c768:	3301      	adds	r3, #1
 800c76a:	68fa      	ldr	r2, [r7, #12]
 800c76c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800c770:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        if (drawingBlock == blocks)
 800c774:	68fb      	ldr	r3, [r7, #12]
 800c776:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c77a:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c77e:	2b03      	cmp	r3, #3
 800c780:	d109      	bne.n	800c796 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800c782:	68fb      	ldr	r3, [r7, #12]
 800c784:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c788:	461a      	mov	r2, r3
 800c78a:	2300      	movs	r3, #0
 800c78c:	f8c2 3824 	str.w	r3, [r2, #2084]	@ 0x824
        }
        while (state[drawingBlock] != EMPTY)
 800c790:	e001      	b.n	800c796 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800c792:	f7ff fee6 	bl	800c562 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800c796:	68fb      	ldr	r3, [r7, #12]
 800c798:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c79c:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c7a0:	68fa      	ldr	r2, [r7, #12]
 800c7a2:	4413      	add	r3, r2
 800c7a4:	791b      	ldrb	r3, [r3, #4]
 800c7a6:	b2db      	uxtb	r3, r3
 800c7a8:	2b00      	cmp	r3, #0
 800c7aa:	bf14      	ite	ne
 800c7ac:	2301      	movne	r3, #1
 800c7ae:	2300      	moveq	r3, #0
 800c7b0:	b2db      	uxtb	r3, r3
 800c7b2:	2b00      	cmp	r3, #0
 800c7b4:	d1ed      	bne.n	800c792 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800c7b6:	68fb      	ldr	r3, [r7, #12]
 800c7b8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c7bc:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c7c0:	68fa      	ldr	r2, [r7, #12]
 800c7c2:	4413      	add	r3, r2
 800c7c4:	791b      	ldrb	r3, [r3, #4]
 800c7c6:	b2db      	uxtb	r3, r3
 800c7c8:	2b00      	cmp	r3, #0
 800c7ca:	d005      	beq.n	800c7d8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800c7cc:	4b36      	ldr	r3, [pc, #216]	@ (800c8a8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x164>)
 800c7ce:	4a37      	ldr	r2, [pc, #220]	@ (800c8ac <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x168>)
 800c7d0:	21aa      	movs	r1, #170	@ 0xaa
 800c7d2:	4837      	ldr	r0, [pc, #220]	@ (800c8b0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800c7d4:	f015 f982 	bl	8021adc <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800c7d8:	68fb      	ldr	r3, [r7, #12]
 800c7da:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c7de:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c7e2:	68fa      	ldr	r2, [r7, #12]
 800c7e4:	4413      	add	r3, r2
 800c7e6:	2201      	movs	r2, #1
 800c7e8:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800c7ea:	88fb      	ldrh	r3, [r7, #6]
 800c7ec:	005b      	lsls	r3, r3, #1
 800c7ee:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800c7f0:	697b      	ldr	r3, [r7, #20]
 800c7f2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800c7f6:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7fa:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800c7fc:	68fb      	ldr	r3, [r7, #12]
 800c7fe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c802:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c806:	02db      	lsls	r3, r3, #11
 800c808:	3308      	adds	r3, #8
 800c80a:	68fa      	ldr	r2, [r7, #12]
 800c80c:	441a      	add	r2, r3
 800c80e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c810:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800c812:	68fb      	ldr	r3, [r7, #12]
 800c814:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c818:	f8d3 2824 	ldr.w	r2, [r3, #2084]	@ 0x824
 800c81c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800c820:	68fb      	ldr	r3, [r7, #12]
 800c822:	f202 3201 	addw	r2, r2, #769	@ 0x301
 800c826:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800c82a:	68fb      	ldr	r3, [r7, #12]
 800c82c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c830:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c834:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800c838:	68fa      	ldr	r2, [r7, #12]
 800c83a:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c83e:	00db      	lsls	r3, r3, #3
 800c840:	4413      	add	r3, r2
 800c842:	460a      	mov	r2, r1
 800c844:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800c846:	68fb      	ldr	r3, [r7, #12]
 800c848:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c84c:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c850:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800c854:	68fa      	ldr	r2, [r7, #12]
 800c856:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c85a:	00db      	lsls	r3, r3, #3
 800c85c:	4413      	add	r3, r2
 800c85e:	460a      	mov	r2, r1
 800c860:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800c862:	8c3a      	ldrh	r2, [r7, #32]
 800c864:	693b      	ldr	r3, [r7, #16]
 800c866:	429a      	cmp	r2, r3
 800c868:	bfa8      	it	ge
 800c86a:	461a      	movge	r2, r3
 800c86c:	68fb      	ldr	r3, [r7, #12]
 800c86e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c872:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c876:	b211      	sxth	r1, r2
 800c878:	68fa      	ldr	r2, [r7, #12]
 800c87a:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c87e:	00db      	lsls	r3, r3, #3
 800c880:	4413      	add	r3, r2
 800c882:	460a      	mov	r2, r1
 800c884:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800c886:	68fb      	ldr	r3, [r7, #12]
 800c888:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c88c:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c890:	68fa      	ldr	r2, [r7, #12]
 800c892:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c896:	00db      	lsls	r3, r3, #3
 800c898:	4413      	add	r3, r2
 800c89a:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800c89e:	b29b      	uxth	r3, r3
    }
 800c8a0:	4618      	mov	r0, r3
 800c8a2:	3718      	adds	r7, #24
 800c8a4:	46bd      	mov	sp, r7
 800c8a6:	bd80      	pop	{r7, pc}
 800c8a8:	08023824 	.word	0x08023824
 800c8ac:	08023844 	.word	0x08023844
 800c8b0:	08023978 	.word	0x08023978

0800c8b4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800c8b4:	b580      	push	{r7, lr}
 800c8b6:	b082      	sub	sp, #8
 800c8b8:	af00      	add	r7, sp, #0
 800c8ba:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800c8bc:	687b      	ldr	r3, [r7, #4]
 800c8be:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c8c2:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c8c6:	687a      	ldr	r2, [r7, #4]
 800c8c8:	4413      	add	r3, r2
 800c8ca:	791b      	ldrb	r3, [r3, #4]
 800c8cc:	b2db      	uxtb	r3, r3
 800c8ce:	2b01      	cmp	r3, #1
 800c8d0:	d005      	beq.n	800c8de <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800c8d2:	4b0a      	ldr	r3, [pc, #40]	@ (800c8fc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800c8d4:	4a0a      	ldr	r2, [pc, #40]	@ (800c900 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800c8d6:	21b9      	movs	r1, #185	@ 0xb9
 800c8d8:	480a      	ldr	r0, [pc, #40]	@ (800c904 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800c8da:	f015 f8ff 	bl	8021adc <__assert_func>
        state[drawingBlock] = DRAWN;
 800c8de:	687b      	ldr	r3, [r7, #4]
 800c8e0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c8e4:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800c8e8:	687a      	ldr	r2, [r7, #4]
 800c8ea:	4413      	add	r3, r2
 800c8ec:	2202      	movs	r2, #2
 800c8ee:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800c8f0:	f7ff fe3e 	bl	800c570 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800c8f4:	bf00      	nop
 800c8f6:	3708      	adds	r7, #8
 800c8f8:	46bd      	mov	sp, r7
 800c8fa:	bd80      	pop	{r7, pc}
 800c8fc:	080239cc 	.word	0x080239cc
 800c900:	080239f0 	.word	0x080239f0
 800c904:	08023978 	.word	0x08023978

0800c908 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800c908:	b480      	push	{r7}
 800c90a:	b085      	sub	sp, #20
 800c90c:	af00      	add	r7, sp, #0
 800c90e:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800c910:	2300      	movs	r3, #0
 800c912:	60fb      	str	r3, [r7, #12]
 800c914:	e011      	b.n	800c93a <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800c916:	687a      	ldr	r2, [r7, #4]
 800c918:	68fb      	ldr	r3, [r7, #12]
 800c91a:	4413      	add	r3, r2
 800c91c:	3304      	adds	r3, #4
 800c91e:	781b      	ldrb	r3, [r3, #0]
 800c920:	b2db      	uxtb	r3, r3
 800c922:	2b02      	cmp	r3, #2
 800c924:	bf0c      	ite	eq
 800c926:	2301      	moveq	r3, #1
 800c928:	2300      	movne	r3, #0
 800c92a:	b2db      	uxtb	r3, r3
 800c92c:	2b00      	cmp	r3, #0
 800c92e:	d001      	beq.n	800c934 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800c930:	2301      	movs	r3, #1
 800c932:	e006      	b.n	800c942 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800c934:	68fb      	ldr	r3, [r7, #12]
 800c936:	3301      	adds	r3, #1
 800c938:	60fb      	str	r3, [r7, #12]
 800c93a:	68fb      	ldr	r3, [r7, #12]
 800c93c:	2b02      	cmp	r3, #2
 800c93e:	d9ea      	bls.n	800c916 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800c940:	2300      	movs	r3, #0
    }
 800c942:	4618      	mov	r0, r3
 800c944:	3714      	adds	r7, #20
 800c946:	46bd      	mov	sp, r7
 800c948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c94c:	4770      	bx	lr
	...

0800c950 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800c950:	b580      	push	{r7, lr}
 800c952:	b082      	sub	sp, #8
 800c954:	af00      	add	r7, sp, #0
 800c956:	6078      	str	r0, [r7, #4]
 800c958:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c960:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c964:	3301      	adds	r3, #1
 800c966:	687a      	ldr	r2, [r7, #4]
 800c968:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
 800c96c:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        if (sendingBlock == blocks)
 800c970:	687b      	ldr	r3, [r7, #4]
 800c972:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c976:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c97a:	2b03      	cmp	r3, #3
 800c97c:	d106      	bne.n	800c98c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c984:	461a      	mov	r2, r3
 800c986:	2300      	movs	r3, #0
 800c988:	f8c2 3820 	str.w	r3, [r2, #2080]	@ 0x820
        }
        assert(state[sendingBlock] == DRAWN);
 800c98c:	687b      	ldr	r3, [r7, #4]
 800c98e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c992:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c996:	687a      	ldr	r2, [r7, #4]
 800c998:	4413      	add	r3, r2
 800c99a:	791b      	ldrb	r3, [r3, #4]
 800c99c:	b2db      	uxtb	r3, r3
 800c99e:	2b02      	cmp	r3, #2
 800c9a0:	d005      	beq.n	800c9ae <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800c9a2:	4b15      	ldr	r3, [pc, #84]	@ (800c9f8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xa8>)
 800c9a4:	4a15      	ldr	r2, [pc, #84]	@ (800c9fc <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800c9a6:	21dd      	movs	r1, #221	@ 0xdd
 800c9a8:	4815      	ldr	r0, [pc, #84]	@ (800ca00 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800c9aa:	f015 f897 	bl	8021adc <__assert_func>
        rect = blockRect[sendingBlock];
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c9b4:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c9b8:	683a      	ldr	r2, [r7, #0]
 800c9ba:	6879      	ldr	r1, [r7, #4]
 800c9bc:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800c9c0:	00db      	lsls	r3, r3, #3
 800c9c2:	440b      	add	r3, r1
 800c9c4:	cb03      	ldmia	r3!, {r0, r1}
 800c9c6:	6010      	str	r0, [r2, #0]
 800c9c8:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800c9ca:	687b      	ldr	r3, [r7, #4]
 800c9cc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c9d0:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c9d4:	687a      	ldr	r2, [r7, #4]
 800c9d6:	4413      	add	r3, r2
 800c9d8:	2203      	movs	r2, #3
 800c9da:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800c9dc:	687b      	ldr	r3, [r7, #4]
 800c9de:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c9e2:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800c9e6:	02db      	lsls	r3, r3, #11
 800c9e8:	3308      	adds	r3, #8
 800c9ea:	687a      	ldr	r2, [r7, #4]
 800c9ec:	4413      	add	r3, r2
    }
 800c9ee:	4618      	mov	r0, r3
 800c9f0:	3708      	adds	r7, #8
 800c9f2:	46bd      	mov	sp, r7
 800c9f4:	bd80      	pop	{r7, pc}
 800c9f6:	bf00      	nop
 800c9f8:	08023ac4 	.word	0x08023ac4
 800c9fc:	08023ae4 	.word	0x08023ae4
 800ca00:	08023978 	.word	0x08023978

0800ca04 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800ca04:	b580      	push	{r7, lr}
 800ca06:	b084      	sub	sp, #16
 800ca08:	af00      	add	r7, sp, #0
 800ca0a:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800ca0c:	687b      	ldr	r3, [r7, #4]
 800ca0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ca12:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800ca16:	3301      	adds	r3, #1
 800ca18:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800ca1a:	68fb      	ldr	r3, [r7, #12]
 800ca1c:	2b03      	cmp	r3, #3
 800ca1e:	d101      	bne.n	800ca24 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800ca20:	2300      	movs	r3, #0
 800ca22:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800ca24:	687a      	ldr	r2, [r7, #4]
 800ca26:	68fb      	ldr	r3, [r7, #12]
 800ca28:	4413      	add	r3, r2
 800ca2a:	3304      	adds	r3, #4
 800ca2c:	781b      	ldrb	r3, [r3, #0]
 800ca2e:	b2db      	uxtb	r3, r3
 800ca30:	2b02      	cmp	r3, #2
 800ca32:	d005      	beq.n	800ca40 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800ca34:	4b07      	ldr	r3, [pc, #28]	@ (800ca54 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800ca36:	4a08      	ldr	r2, [pc, #32]	@ (800ca58 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800ca38:	21ea      	movs	r1, #234	@ 0xea
 800ca3a:	4808      	ldr	r0, [pc, #32]	@ (800ca5c <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800ca3c:	f015 f84e 	bl	8021adc <__assert_func>
        return blockRect[nextSendingBlock];
 800ca40:	68fb      	ldr	r3, [r7, #12]
 800ca42:	f203 3301 	addw	r3, r3, #769	@ 0x301
 800ca46:	00db      	lsls	r3, r3, #3
 800ca48:	687a      	ldr	r2, [r7, #4]
 800ca4a:	4413      	add	r3, r2
    }
 800ca4c:	4618      	mov	r0, r3
 800ca4e:	3710      	adds	r7, #16
 800ca50:	46bd      	mov	sp, r7
 800ca52:	bd80      	pop	{r7, pc}
 800ca54:	08023be4 	.word	0x08023be4
 800ca58:	08023c08 	.word	0x08023c08
 800ca5c:	08023978 	.word	0x08023978

0800ca60 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800ca60:	b480      	push	{r7}
 800ca62:	b085      	sub	sp, #20
 800ca64:	af00      	add	r7, sp, #0
 800ca66:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800ca68:	687b      	ldr	r3, [r7, #4]
 800ca6a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ca6e:	f8d3 3824 	ldr.w	r3, [r3, #2084]	@ 0x824
 800ca72:	3301      	adds	r3, #1
 800ca74:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800ca76:	68fb      	ldr	r3, [r7, #12]
 800ca78:	2b03      	cmp	r3, #3
 800ca7a:	d101      	bne.n	800ca80 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800ca7c:	2300      	movs	r3, #0
 800ca7e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800ca80:	687a      	ldr	r2, [r7, #4]
 800ca82:	68fb      	ldr	r3, [r7, #12]
 800ca84:	4413      	add	r3, r2
 800ca86:	3304      	adds	r3, #4
 800ca88:	781b      	ldrb	r3, [r3, #0]
 800ca8a:	b2db      	uxtb	r3, r3
 800ca8c:	2b00      	cmp	r3, #0
 800ca8e:	bf0c      	ite	eq
 800ca90:	2301      	moveq	r3, #1
 800ca92:	2300      	movne	r3, #0
 800ca94:	b2db      	uxtb	r3, r3
    }
 800ca96:	4618      	mov	r0, r3
 800ca98:	3714      	adds	r7, #20
 800ca9a:	46bd      	mov	sp, r7
 800ca9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caa0:	4770      	bx	lr
	...

0800caa4 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800caa4:	b580      	push	{r7, lr}
 800caa6:	b082      	sub	sp, #8
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800caac:	687b      	ldr	r3, [r7, #4]
 800caae:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cab2:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800cab6:	687a      	ldr	r2, [r7, #4]
 800cab8:	4413      	add	r3, r2
 800caba:	791b      	ldrb	r3, [r3, #4]
 800cabc:	b2db      	uxtb	r3, r3
 800cabe:	2b03      	cmp	r3, #3
 800cac0:	d005      	beq.n	800cace <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800cac2:	4b09      	ldr	r3, [pc, #36]	@ (800cae8 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800cac4:	4a09      	ldr	r2, [pc, #36]	@ (800caec <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800cac6:	21ff      	movs	r1, #255	@ 0xff
 800cac8:	4809      	ldr	r0, [pc, #36]	@ (800caf0 <_ZN8touchgfx18ManyBlockAllocatorILm2048ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800caca:	f015 f807 	bl	8021adc <__assert_func>
        state[sendingBlock] = EMPTY;
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cad4:	f8d3 3820 	ldr.w	r3, [r3, #2080]	@ 0x820
 800cad8:	687a      	ldr	r2, [r7, #4]
 800cada:	4413      	add	r3, r2
 800cadc:	2200      	movs	r2, #0
 800cade:	711a      	strb	r2, [r3, #4]
    }
 800cae0:	bf00      	nop
 800cae2:	3708      	adds	r7, #8
 800cae4:	46bd      	mov	sp, r7
 800cae6:	bd80      	pop	{r7, pc}
 800cae8:	08023ce8 	.word	0x08023ce8
 800caec:	08023d08 	.word	0x08023d08
 800caf0:	08023978 	.word	0x08023978

0800caf4 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800caf4:	b580      	push	{r7, lr}
 800caf6:	af00      	add	r7, sp, #0
 800caf8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800cafc:	2001      	movs	r0, #1
 800cafe:	f7ff fdff 	bl	800c700 <_Z41__static_initialization_and_destruction_0ii>
 800cb02:	bd80      	pop	{r7, pc}

0800cb04 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800cb04:	b580      	push	{r7, lr}
 800cb06:	af00      	add	r7, sp, #0
 800cb08:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800cb0c:	2000      	movs	r0, #0
 800cb0e:	f7ff fdf7 	bl	800c700 <_Z41__static_initialization_and_destruction_0ii>
 800cb12:	bd80      	pop	{r7, pc}

0800cb14 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800cb14:	8880      	ldrh	r0, [r0, #4]
 800cb16:	4770      	bx	lr

0800cb18 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800cb18:	b570      	push	{r4, r5, r6, lr}
 800cb1a:	6803      	ldr	r3, [r0, #0]
 800cb1c:	4605      	mov	r5, r0
 800cb1e:	460c      	mov	r4, r1
 800cb20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cb22:	2100      	movs	r1, #0
 800cb24:	4798      	blx	r3
 800cb26:	682b      	ldr	r3, [r5, #0]
 800cb28:	4606      	mov	r6, r0
 800cb2a:	6a1b      	ldr	r3, [r3, #32]
 800cb2c:	4628      	mov	r0, r5
 800cb2e:	4798      	blx	r3
 800cb30:	1ba4      	subs	r4, r4, r6
 800cb32:	b2a4      	uxth	r4, r4
 800cb34:	fbb4 f0f0 	udiv	r0, r4, r0
 800cb38:	bd70      	pop	{r4, r5, r6, pc}

0800cb3a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800cb3a:	2300      	movs	r3, #0
 800cb3c:	8083      	strh	r3, [r0, #4]
 800cb3e:	4770      	bx	lr

0800cb40 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800cb40:	b510      	push	{r4, lr}
 800cb42:	4604      	mov	r4, r0
 800cb44:	6803      	ldr	r3, [r0, #0]
 800cb46:	8881      	ldrh	r1, [r0, #4]
 800cb48:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cb4a:	4798      	blx	r3
 800cb4c:	88a3      	ldrh	r3, [r4, #4]
 800cb4e:	3301      	adds	r3, #1
 800cb50:	80a3      	strh	r3, [r4, #4]
 800cb52:	bd10      	pop	{r4, pc}

0800cb54 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800cb54:	6803      	ldr	r3, [r0, #0]
 800cb56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cb58:	4718      	bx	r3

0800cb5a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800cb5a:	4770      	bx	lr

0800cb5c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800cb5c:	4a02      	ldr	r2, [pc, #8]	@ (800cb68 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800cb5e:	6002      	str	r2, [r0, #0]
 800cb60:	2200      	movs	r2, #0
 800cb62:	8082      	strh	r2, [r0, #4]
 800cb64:	4770      	bx	lr
 800cb66:	bf00      	nop
 800cb68:	0802473c 	.word	0x0802473c

0800cb6c <_ZN8touchgfx9Container13getFirstChildEv>:
 800cb6c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800cb6e:	4770      	bx	lr

0800cb70 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800cb70:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cb72:	2000      	movs	r0, #0
 800cb74:	b12b      	cbz	r3, 800cb82 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cb76:	b920      	cbnz	r0, 800cb82 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cb78:	1a5a      	subs	r2, r3, r1
 800cb7a:	4250      	negs	r0, r2
 800cb7c:	4150      	adcs	r0, r2
 800cb7e:	699b      	ldr	r3, [r3, #24]
 800cb80:	e7f8      	b.n	800cb74 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800cb82:	4770      	bx	lr

0800cb84 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800cb84:	2300      	movs	r3, #0
 800cb86:	6148      	str	r0, [r1, #20]
 800cb88:	618b      	str	r3, [r1, #24]
 800cb8a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cb8c:	b913      	cbnz	r3, 800cb94 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800cb8e:	6281      	str	r1, [r0, #40]	@ 0x28
 800cb90:	4770      	bx	lr
 800cb92:	4613      	mov	r3, r2
 800cb94:	699a      	ldr	r2, [r3, #24]
 800cb96:	2a00      	cmp	r2, #0
 800cb98:	d1fb      	bne.n	800cb92 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800cb9a:	6199      	str	r1, [r3, #24]
 800cb9c:	4770      	bx	lr

0800cb9e <_ZN8touchgfx9Container9removeAllEv>:
 800cb9e:	2200      	movs	r2, #0
 800cba0:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cba2:	b123      	cbz	r3, 800cbae <_ZN8touchgfx9Container9removeAllEv+0x10>
 800cba4:	6999      	ldr	r1, [r3, #24]
 800cba6:	6281      	str	r1, [r0, #40]	@ 0x28
 800cba8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800cbac:	e7f8      	b.n	800cba0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800cbae:	4770      	bx	lr

0800cbb0 <_ZN8touchgfx9Container6unlinkEv>:
 800cbb0:	2300      	movs	r3, #0
 800cbb2:	6283      	str	r3, [r0, #40]	@ 0x28
 800cbb4:	4770      	bx	lr

0800cbb6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800cbb6:	2200      	movs	r2, #0
 800cbb8:	8002      	strh	r2, [r0, #0]
 800cbba:	8042      	strh	r2, [r0, #2]
 800cbbc:	8082      	strh	r2, [r0, #4]
 800cbbe:	80c2      	strh	r2, [r0, #6]
 800cbc0:	4770      	bx	lr

0800cbc2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800cbc2:	b570      	push	{r4, r5, r6, lr}
 800cbc4:	460d      	mov	r5, r1
 800cbc6:	4616      	mov	r6, r2
 800cbc8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cbca:	b13c      	cbz	r4, 800cbdc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800cbcc:	6823      	ldr	r3, [r4, #0]
 800cbce:	4620      	mov	r0, r4
 800cbd0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cbd2:	4632      	mov	r2, r6
 800cbd4:	4629      	mov	r1, r5
 800cbd6:	4798      	blx	r3
 800cbd8:	69a4      	ldr	r4, [r4, #24]
 800cbda:	e7f6      	b.n	800cbca <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800cbdc:	bd70      	pop	{r4, r5, r6, pc}

0800cbde <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800cbde:	b538      	push	{r3, r4, r5, lr}
 800cbe0:	460d      	mov	r5, r1
 800cbe2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cbe4:	b134      	cbz	r4, 800cbf4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800cbe6:	682b      	ldr	r3, [r5, #0]
 800cbe8:	4621      	mov	r1, r4
 800cbea:	689b      	ldr	r3, [r3, #8]
 800cbec:	4628      	mov	r0, r5
 800cbee:	4798      	blx	r3
 800cbf0:	69a4      	ldr	r4, [r4, #24]
 800cbf2:	e7f7      	b.n	800cbe4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800cbf4:	bd38      	pop	{r3, r4, r5, pc}

0800cbf6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800cbf6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cbf8:	b19b      	cbz	r3, 800cc22 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cbfa:	428b      	cmp	r3, r1
 800cbfc:	d109      	bne.n	800cc12 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800cbfe:	2100      	movs	r1, #0
 800cc00:	699a      	ldr	r2, [r3, #24]
 800cc02:	6159      	str	r1, [r3, #20]
 800cc04:	6282      	str	r2, [r0, #40]	@ 0x28
 800cc06:	b902      	cbnz	r2, 800cc0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800cc08:	4770      	bx	lr
 800cc0a:	6199      	str	r1, [r3, #24]
 800cc0c:	4770      	bx	lr
 800cc0e:	4613      	mov	r3, r2
 800cc10:	b13a      	cbz	r2, 800cc22 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cc12:	699a      	ldr	r2, [r3, #24]
 800cc14:	428a      	cmp	r2, r1
 800cc16:	d1fa      	bne.n	800cc0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800cc18:	698a      	ldr	r2, [r1, #24]
 800cc1a:	619a      	str	r2, [r3, #24]
 800cc1c:	2300      	movs	r3, #0
 800cc1e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800cc22:	4770      	bx	lr

0800cc24 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800cc24:	b410      	push	{r4}
 800cc26:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cc28:	4604      	mov	r4, r0
 800cc2a:	b92b      	cbnz	r3, 800cc38 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800cc2c:	6803      	ldr	r3, [r0, #0]
 800cc2e:	4611      	mov	r1, r2
 800cc30:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800cc32:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc36:	4718      	bx	r3
 800cc38:	b941      	cbnz	r1, 800cc4c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800cc3a:	6193      	str	r3, [r2, #24]
 800cc3c:	6282      	str	r2, [r0, #40]	@ 0x28
 800cc3e:	6154      	str	r4, [r2, #20]
 800cc40:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc44:	4770      	bx	lr
 800cc46:	4603      	mov	r3, r0
 800cc48:	2800      	cmp	r0, #0
 800cc4a:	d0f9      	beq.n	800cc40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800cc4c:	4299      	cmp	r1, r3
 800cc4e:	6998      	ldr	r0, [r3, #24]
 800cc50:	d1f9      	bne.n	800cc46 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800cc52:	6190      	str	r0, [r2, #24]
 800cc54:	618a      	str	r2, [r1, #24]
 800cc56:	e7f2      	b.n	800cc3e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800cc58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800cc58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc5c:	461f      	mov	r7, r3
 800cc5e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800cc62:	460d      	mov	r5, r1
 800cc64:	4616      	mov	r6, r2
 800cc66:	b103      	cbz	r3, 800cc6a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800cc68:	6038      	str	r0, [r7, #0]
 800cc6a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cc6c:	b314      	cbz	r4, 800ccb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800cc6e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800cc72:	b1eb      	cbz	r3, 800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc74:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800cc78:	428d      	cmp	r5, r1
 800cc7a:	db19      	blt.n	800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc7c:	8923      	ldrh	r3, [r4, #8]
 800cc7e:	b289      	uxth	r1, r1
 800cc80:	440b      	add	r3, r1
 800cc82:	b21b      	sxth	r3, r3
 800cc84:	429d      	cmp	r5, r3
 800cc86:	da13      	bge.n	800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc88:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cc8c:	4296      	cmp	r6, r2
 800cc8e:	db0f      	blt.n	800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc90:	8963      	ldrh	r3, [r4, #10]
 800cc92:	b292      	uxth	r2, r2
 800cc94:	4413      	add	r3, r2
 800cc96:	b21b      	sxth	r3, r3
 800cc98:	429e      	cmp	r6, r3
 800cc9a:	da09      	bge.n	800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc9c:	6823      	ldr	r3, [r4, #0]
 800cc9e:	1ab2      	subs	r2, r6, r2
 800cca0:	1a69      	subs	r1, r5, r1
 800cca2:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800cca6:	b212      	sxth	r2, r2
 800cca8:	463b      	mov	r3, r7
 800ccaa:	b209      	sxth	r1, r1
 800ccac:	4620      	mov	r0, r4
 800ccae:	47c0      	blx	r8
 800ccb0:	69a4      	ldr	r4, [r4, #24]
 800ccb2:	e7db      	b.n	800cc6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ccb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ccb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ccb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccbc:	4c6c      	ldr	r4, [pc, #432]	@ (800ce70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>)
 800ccbe:	b0a1      	sub	sp, #132	@ 0x84
 800ccc0:	6824      	ldr	r4, [r4, #0]
 800ccc2:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800ccc4:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800ccc8:	2400      	movs	r4, #0
 800ccca:	802c      	strh	r4, [r5, #0]
 800cccc:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800ccce:	4606      	mov	r6, r0
 800ccd0:	802c      	strh	r4, [r5, #0]
 800ccd2:	601c      	str	r4, [r3, #0]
 800ccd4:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ccd8:	9303      	str	r3, [sp, #12]
 800ccda:	f7ff ffbd 	bl	800cc58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ccde:	f1b9 0f03 	cmp.w	r9, #3
 800cce2:	f340 80bf 	ble.w	800ce64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1ac>
 800cce6:	4631      	mov	r1, r6
 800cce8:	a80c      	add	r0, sp, #48	@ 0x30
 800ccea:	f004 fc57 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ccee:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800ccf2:	9306      	str	r3, [sp, #24]
 800ccf4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ccf8:	9307      	str	r3, [sp, #28]
 800ccfa:	9b03      	ldr	r3, [sp, #12]
 800ccfc:	f8d3 a000 	ldr.w	sl, [r3]
 800cd00:	f1ba 0f00 	cmp.w	sl, #0
 800cd04:	f000 80b1 	beq.w	800ce6a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800cd08:	4651      	mov	r1, sl
 800cd0a:	a810      	add	r0, sp, #64	@ 0x40
 800cd0c:	f004 fc46 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cd10:	2002      	movs	r0, #2
 800cd12:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800cd16:	9b01      	ldr	r3, [sp, #4]
 800cd18:	fb91 f1f0 	sdiv	r1, r1, r0
 800cd1c:	9a06      	ldr	r2, [sp, #24]
 800cd1e:	189d      	adds	r5, r3, r2
 800cd20:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800cd24:	9a07      	ldr	r2, [sp, #28]
 800cd26:	4419      	add	r1, r3
 800cd28:	9b02      	ldr	r3, [sp, #8]
 800cd2a:	1a6d      	subs	r5, r5, r1
 800cd2c:	4413      	add	r3, r2
 800cd2e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800cd32:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800cd36:	fb92 f2f0 	sdiv	r2, r2, r0
 800cd3a:	440a      	add	r2, r1
 800cd3c:	1a9b      	subs	r3, r3, r2
 800cd3e:	435b      	muls	r3, r3
 800cd40:	fb05 3505 	mla	r5, r5, r5, r3
 800cd44:	4f4b      	ldr	r7, [pc, #300]	@ (800ce74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800cd46:	ac10      	add	r4, sp, #64	@ 0x40
 800cd48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd4c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd50:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd54:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800cd58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800cd5c:	2303      	movs	r3, #3
 800cd5e:	f1b9 0f0c 	cmp.w	r9, #12
 800cd62:	bfda      	itte	le
 800cd64:	f109 32ff 	addle.w	r2, r9, #4294967295
 800cd68:	fb92 f8f3 	sdivle	r8, r2, r3
 800cd6c:	4698      	movgt	r8, r3
 800cd6e:	2400      	movs	r4, #0
 800cd70:	f8cd 9000 	str.w	r9, [sp]
 800cd74:	1c63      	adds	r3, r4, #1
 800cd76:	9308      	str	r3, [sp, #32]
 800cd78:	9b00      	ldr	r3, [sp, #0]
 800cd7a:	f04f 0b00 	mov.w	fp, #0
 800cd7e:	fb93 f3f8 	sdiv	r3, r3, r8
 800cd82:	f004 0401 	and.w	r4, r4, #1
 800cd86:	aa10      	add	r2, sp, #64	@ 0x40
 800cd88:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800cd8c:	b29b      	uxth	r3, r3
 800cd8e:	3404      	adds	r4, #4
 800cd90:	9304      	str	r3, [sp, #16]
 800cd92:	9a04      	ldr	r2, [sp, #16]
 800cd94:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800cd98:	fb13 f302 	smulbb	r3, r3, r2
 800cd9c:	9a01      	ldr	r2, [sp, #4]
 800cd9e:	b29b      	uxth	r3, r3
 800cda0:	1899      	adds	r1, r3, r2
 800cda2:	9305      	str	r3, [sp, #20]
 800cda4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800cda8:	b209      	sxth	r1, r1
 800cdaa:	4299      	cmp	r1, r3
 800cdac:	db4d      	blt.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdae:	8932      	ldrh	r2, [r6, #8]
 800cdb0:	4413      	add	r3, r2
 800cdb2:	b21b      	sxth	r3, r3
 800cdb4:	4299      	cmp	r1, r3
 800cdb6:	da48      	bge.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdb8:	9b04      	ldr	r3, [sp, #16]
 800cdba:	6827      	ldr	r7, [r4, #0]
 800cdbc:	fb17 f703 	smulbb	r7, r7, r3
 800cdc0:	9b02      	ldr	r3, [sp, #8]
 800cdc2:	b2bf      	uxth	r7, r7
 800cdc4:	18fa      	adds	r2, r7, r3
 800cdc6:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800cdca:	b212      	sxth	r2, r2
 800cdcc:	429a      	cmp	r2, r3
 800cdce:	db3c      	blt.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdd0:	8970      	ldrh	r0, [r6, #10]
 800cdd2:	4403      	add	r3, r0
 800cdd4:	b21b      	sxth	r3, r3
 800cdd6:	429a      	cmp	r2, r3
 800cdd8:	da37      	bge.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdda:	2300      	movs	r3, #0
 800cddc:	4630      	mov	r0, r6
 800cdde:	930b      	str	r3, [sp, #44]	@ 0x2c
 800cde0:	ab0b      	add	r3, sp, #44	@ 0x2c
 800cde2:	f7ff ff39 	bl	800cc58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cde6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800cde8:	b37a      	cbz	r2, 800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdea:	4552      	cmp	r2, sl
 800cdec:	d02d      	beq.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x192>
 800cdee:	4611      	mov	r1, r2
 800cdf0:	a80e      	add	r0, sp, #56	@ 0x38
 800cdf2:	9209      	str	r2, [sp, #36]	@ 0x24
 800cdf4:	f004 fbd2 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cdf8:	f04f 0e02 	mov.w	lr, #2
 800cdfc:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800ce00:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800ce04:	fb91 f1fe 	sdiv	r1, r1, lr
 800ce08:	fb9c fcfe 	sdiv	ip, ip, lr
 800ce0c:	9a06      	ldr	r2, [sp, #24]
 800ce0e:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ce12:	9b01      	ldr	r3, [sp, #4]
 800ce14:	4401      	add	r1, r0
 800ce16:	4413      	add	r3, r2
 800ce18:	1a58      	subs	r0, r3, r1
 800ce1a:	9a07      	ldr	r2, [sp, #28]
 800ce1c:	9b02      	ldr	r3, [sp, #8]
 800ce1e:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ce22:	4413      	add	r3, r2
 800ce24:	448c      	add	ip, r1
 800ce26:	eba3 030c 	sub.w	r3, r3, ip
 800ce2a:	435b      	muls	r3, r3
 800ce2c:	fb00 3300 	mla	r3, r0, r0, r3
 800ce30:	42ab      	cmp	r3, r5
 800ce32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ce34:	d208      	bcs.n	800ce48 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x190>
 800ce36:	461d      	mov	r5, r3
 800ce38:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ce3a:	9803      	ldr	r0, [sp, #12]
 800ce3c:	6001      	str	r1, [r0, #0]
 800ce3e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ce40:	9805      	ldr	r0, [sp, #20]
 800ce42:	8008      	strh	r0, [r1, #0]
 800ce44:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ce46:	800f      	strh	r7, [r1, #0]
 800ce48:	4692      	mov	sl, r2
 800ce4a:	f10b 0b01 	add.w	fp, fp, #1
 800ce4e:	f1bb 0f04 	cmp.w	fp, #4
 800ce52:	f104 0408 	add.w	r4, r4, #8
 800ce56:	d19c      	bne.n	800cd92 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xda>
 800ce58:	9b00      	ldr	r3, [sp, #0]
 800ce5a:	9c08      	ldr	r4, [sp, #32]
 800ce5c:	444b      	add	r3, r9
 800ce5e:	4544      	cmp	r4, r8
 800ce60:	9300      	str	r3, [sp, #0]
 800ce62:	d187      	bne.n	800cd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xbc>
 800ce64:	b021      	add	sp, #132	@ 0x84
 800ce66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce6a:	f04f 35ff 	mov.w	r5, #4294967295
 800ce6e:	e769      	b.n	800cd44 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ce70:	20002230 	.word	0x20002230
 800ce74:	08023dd8 	.word	0x08023dd8

0800ce78 <_ZN8touchgfx4RectaNERKS0_>:
 800ce78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce7c:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ce80:	888c      	ldrh	r4, [r1, #4]
 800ce82:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ce86:	443c      	add	r4, r7
 800ce88:	b2a4      	uxth	r4, r4
 800ce8a:	fa0f f884 	sxth.w	r8, r4
 800ce8e:	45c1      	cmp	r9, r8
 800ce90:	da2f      	bge.n	800cef2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ce92:	8882      	ldrh	r2, [r0, #4]
 800ce94:	444a      	add	r2, r9
 800ce96:	b292      	uxth	r2, r2
 800ce98:	fa0f fe82 	sxth.w	lr, r2
 800ce9c:	4577      	cmp	r7, lr
 800ce9e:	da28      	bge.n	800cef2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800cea0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800cea4:	88cb      	ldrh	r3, [r1, #6]
 800cea6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ceaa:	442b      	add	r3, r5
 800ceac:	b21b      	sxth	r3, r3
 800ceae:	429e      	cmp	r6, r3
 800ceb0:	da1f      	bge.n	800cef2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ceb2:	88c3      	ldrh	r3, [r0, #6]
 800ceb4:	4433      	add	r3, r6
 800ceb6:	b29b      	uxth	r3, r3
 800ceb8:	fa0f fc83 	sxth.w	ip, r3
 800cebc:	4565      	cmp	r5, ip
 800cebe:	da18      	bge.n	800cef2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800cec0:	454f      	cmp	r7, r9
 800cec2:	bfb8      	it	lt
 800cec4:	464f      	movlt	r7, r9
 800cec6:	42b5      	cmp	r5, r6
 800cec8:	bfb8      	it	lt
 800ceca:	4635      	movlt	r5, r6
 800cecc:	45f0      	cmp	r8, lr
 800cece:	bfd8      	it	le
 800ced0:	4622      	movle	r2, r4
 800ced2:	1bd2      	subs	r2, r2, r7
 800ced4:	8082      	strh	r2, [r0, #4]
 800ced6:	884a      	ldrh	r2, [r1, #2]
 800ced8:	88c9      	ldrh	r1, [r1, #6]
 800ceda:	8007      	strh	r7, [r0, #0]
 800cedc:	440a      	add	r2, r1
 800cede:	b292      	uxth	r2, r2
 800cee0:	b211      	sxth	r1, r2
 800cee2:	458c      	cmp	ip, r1
 800cee4:	bfa8      	it	ge
 800cee6:	4613      	movge	r3, r2
 800cee8:	1b5b      	subs	r3, r3, r5
 800ceea:	80c3      	strh	r3, [r0, #6]
 800ceec:	8045      	strh	r5, [r0, #2]
 800ceee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cef2:	2300      	movs	r3, #0
 800cef4:	8003      	strh	r3, [r0, #0]
 800cef6:	8043      	strh	r3, [r0, #2]
 800cef8:	8083      	strh	r3, [r0, #4]
 800cefa:	80c3      	strh	r3, [r0, #6]
 800cefc:	e7f7      	b.n	800ceee <_ZN8touchgfx4RectaNERKS0_+0x76>

0800cefe <_ZNK8touchgfx4Rect7isEmptyEv>:
 800cefe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cf02:	2b00      	cmp	r3, #0
 800cf04:	dd06      	ble.n	800cf14 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800cf06:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800cf0a:	2800      	cmp	r0, #0
 800cf0c:	bfcc      	ite	gt
 800cf0e:	2000      	movgt	r0, #0
 800cf10:	2001      	movle	r0, #1
 800cf12:	4770      	bx	lr
 800cf14:	2001      	movs	r0, #1
 800cf16:	4770      	bx	lr

0800cf18 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800cf18:	2300      	movs	r3, #0
 800cf1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf1e:	4604      	mov	r4, r0
 800cf20:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800cf22:	8003      	strh	r3, [r0, #0]
 800cf24:	8043      	strh	r3, [r0, #2]
 800cf26:	8083      	strh	r3, [r0, #4]
 800cf28:	80c3      	strh	r3, [r0, #6]
 800cf2a:	2d00      	cmp	r5, #0
 800cf2c:	d040      	beq.n	800cfb0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800cf2e:	1d28      	adds	r0, r5, #4
 800cf30:	f7ff ffe5 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf34:	b988      	cbnz	r0, 800cf5a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cf36:	4620      	mov	r0, r4
 800cf38:	f7ff ffe1 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf3c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800cf40:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cf44:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800cf48:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800cf4c:	b138      	cbz	r0, 800cf5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800cf4e:	8022      	strh	r2, [r4, #0]
 800cf50:	8063      	strh	r3, [r4, #2]
 800cf52:	f8a4 e004 	strh.w	lr, [r4, #4]
 800cf56:	f8a4 c006 	strh.w	ip, [r4, #6]
 800cf5a:	69ad      	ldr	r5, [r5, #24]
 800cf5c:	e7e5      	b.n	800cf2a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800cf5e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cf62:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cf66:	4290      	cmp	r0, r2
 800cf68:	4607      	mov	r7, r0
 800cf6a:	bfa8      	it	ge
 800cf6c:	4617      	movge	r7, r2
 800cf6e:	4299      	cmp	r1, r3
 800cf70:	460e      	mov	r6, r1
 800cf72:	bfa8      	it	ge
 800cf74:	461e      	movge	r6, r3
 800cf76:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800cf7a:	4472      	add	r2, lr
 800cf7c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800cf80:	4440      	add	r0, r8
 800cf82:	4471      	add	r1, lr
 800cf84:	4463      	add	r3, ip
 800cf86:	b200      	sxth	r0, r0
 800cf88:	b212      	sxth	r2, r2
 800cf8a:	b209      	sxth	r1, r1
 800cf8c:	b21b      	sxth	r3, r3
 800cf8e:	4290      	cmp	r0, r2
 800cf90:	bfac      	ite	ge
 800cf92:	ebc7 0200 	rsbge	r2, r7, r0
 800cf96:	ebc7 0202 	rsblt	r2, r7, r2
 800cf9a:	4299      	cmp	r1, r3
 800cf9c:	bfac      	ite	ge
 800cf9e:	ebc6 0301 	rsbge	r3, r6, r1
 800cfa2:	ebc6 0303 	rsblt	r3, r6, r3
 800cfa6:	8027      	strh	r7, [r4, #0]
 800cfa8:	8066      	strh	r6, [r4, #2]
 800cfaa:	80a2      	strh	r2, [r4, #4]
 800cfac:	80e3      	strh	r3, [r4, #6]
 800cfae:	e7d4      	b.n	800cf5a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cfb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800cfb6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cfba:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800cfbe:	b383      	cbz	r3, 800d022 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cfc0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cfc2:	b374      	cbz	r4, 800d022 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cfc4:	f9b1 5000 	ldrsh.w	r5, [r1]
 800cfc8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800cfcc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800cfd0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800cfd4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800cfd8:	b303      	cbz	r3, 800d01c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cfda:	4668      	mov	r0, sp
 800cfdc:	1d21      	adds	r1, r4, #4
 800cfde:	f8ad 5000 	strh.w	r5, [sp]
 800cfe2:	f8ad 6002 	strh.w	r6, [sp, #2]
 800cfe6:	f8ad 7004 	strh.w	r7, [sp, #4]
 800cfea:	f8ad 8006 	strh.w	r8, [sp, #6]
 800cfee:	f7ff ff43 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 800cff2:	4668      	mov	r0, sp
 800cff4:	f7ff ff83 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 800cff8:	b980      	cbnz	r0, 800d01c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cffa:	f8bd 3000 	ldrh.w	r3, [sp]
 800cffe:	88a2      	ldrh	r2, [r4, #4]
 800d000:	4669      	mov	r1, sp
 800d002:	1a9b      	subs	r3, r3, r2
 800d004:	f8ad 3000 	strh.w	r3, [sp]
 800d008:	88e2      	ldrh	r2, [r4, #6]
 800d00a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d00e:	4620      	mov	r0, r4
 800d010:	1a9b      	subs	r3, r3, r2
 800d012:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d016:	6823      	ldr	r3, [r4, #0]
 800d018:	689b      	ldr	r3, [r3, #8]
 800d01a:	4798      	blx	r3
 800d01c:	69a4      	ldr	r4, [r4, #24]
 800d01e:	2c00      	cmp	r4, #0
 800d020:	d1d8      	bne.n	800cfd4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800d022:	b002      	add	sp, #8
 800d024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d028 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800d028:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d02a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d02e:	460d      	mov	r5, r1
 800d030:	4616      	mov	r6, r2
 800d032:	b323      	cbz	r3, 800d07e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d034:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d036:	b314      	cbz	r4, 800d07e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d038:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d03c:	b1eb      	cbz	r3, 800d07a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d03e:	466b      	mov	r3, sp
 800d040:	6828      	ldr	r0, [r5, #0]
 800d042:	6869      	ldr	r1, [r5, #4]
 800d044:	c303      	stmia	r3!, {r0, r1}
 800d046:	4668      	mov	r0, sp
 800d048:	1d21      	adds	r1, r4, #4
 800d04a:	f7ff ff15 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 800d04e:	4668      	mov	r0, sp
 800d050:	f7ff ff55 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 800d054:	b988      	cbnz	r0, 800d07a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d056:	f8bd 3000 	ldrh.w	r3, [sp]
 800d05a:	88a2      	ldrh	r2, [r4, #4]
 800d05c:	4669      	mov	r1, sp
 800d05e:	1a9b      	subs	r3, r3, r2
 800d060:	f8ad 3000 	strh.w	r3, [sp]
 800d064:	88e2      	ldrh	r2, [r4, #6]
 800d066:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d06a:	4620      	mov	r0, r4
 800d06c:	1a9b      	subs	r3, r3, r2
 800d06e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d072:	6823      	ldr	r3, [r4, #0]
 800d074:	4632      	mov	r2, r6
 800d076:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d078:	4798      	blx	r3
 800d07a:	69a4      	ldr	r4, [r4, #24]
 800d07c:	e7db      	b.n	800d036 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800d07e:	b002      	add	sp, #8
 800d080:	bd70      	pop	{r4, r5, r6, pc}

0800d082 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800d082:	b513      	push	{r0, r1, r4, lr}
 800d084:	6803      	ldr	r3, [r0, #0]
 800d086:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 800d08a:	2300      	movs	r3, #0
 800d08c:	e9cd 3300 	strd	r3, r3, [sp]
 800d090:	466b      	mov	r3, sp
 800d092:	47a0      	blx	r4
 800d094:	b002      	add	sp, #8
 800d096:	bd10      	pop	{r4, pc}

0800d098 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800d098:	2301      	movs	r3, #1
 800d09a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d09e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d0a2:	4770      	bx	lr

0800d0a4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800d0a4:	2301      	movs	r3, #1
 800d0a6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d0aa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d0ae:	4770      	bx	lr

0800d0b0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800d0b0:	2201      	movs	r2, #1
 800d0b2:	6843      	ldr	r3, [r0, #4]
 800d0b4:	725a      	strb	r2, [r3, #9]
 800d0b6:	6840      	ldr	r0, [r0, #4]
 800d0b8:	6803      	ldr	r3, [r0, #0]
 800d0ba:	691b      	ldr	r3, [r3, #16]
 800d0bc:	4718      	bx	r3

0800d0be <_ZN8touchgfx3HAL8flushDMAEv>:
 800d0be:	6840      	ldr	r0, [r0, #4]
 800d0c0:	6803      	ldr	r3, [r0, #0]
 800d0c2:	689b      	ldr	r3, [r3, #8]
 800d0c4:	4718      	bx	r3

0800d0c6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800d0c6:	b530      	push	{r4, r5, lr}
 800d0c8:	b08b      	sub	sp, #44	@ 0x2c
 800d0ca:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800d0ce:	6804      	ldr	r4, [r0, #0]
 800d0d0:	9509      	str	r5, [sp, #36]	@ 0x24
 800d0d2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800d0d6:	9508      	str	r5, [sp, #32]
 800d0d8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800d0dc:	9507      	str	r5, [sp, #28]
 800d0de:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800d0e2:	9506      	str	r5, [sp, #24]
 800d0e4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800d0e8:	9505      	str	r5, [sp, #20]
 800d0ea:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800d0ee:	9504      	str	r5, [sp, #16]
 800d0f0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800d0f4:	9503      	str	r5, [sp, #12]
 800d0f6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800d0fa:	9502      	str	r5, [sp, #8]
 800d0fc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800d100:	e9cd 3500 	strd	r3, r5, [sp]
 800d104:	4613      	mov	r3, r2
 800d106:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 800d108:	2200      	movs	r2, #0
 800d10a:	47a0      	blx	r4
 800d10c:	b00b      	add	sp, #44	@ 0x2c
 800d10e:	bd30      	pop	{r4, r5, pc}

0800d110 <_ZN8touchgfx3HAL10beginFrameEv>:
 800d110:	4b04      	ldr	r3, [pc, #16]	@ (800d124 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800d112:	781b      	ldrb	r3, [r3, #0]
 800d114:	b123      	cbz	r3, 800d120 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800d116:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800d11a:	f080 0001 	eor.w	r0, r0, #1
 800d11e:	4770      	bx	lr
 800d120:	2001      	movs	r0, #1
 800d122:	4770      	bx	lr
 800d124:	2000222e 	.word	0x2000222e

0800d128 <_ZN8touchgfx3HAL8endFrameEv>:
 800d128:	b510      	push	{r4, lr}
 800d12a:	4604      	mov	r4, r0
 800d12c:	6840      	ldr	r0, [r0, #4]
 800d12e:	6803      	ldr	r3, [r0, #0]
 800d130:	689b      	ldr	r3, [r3, #8]
 800d132:	4798      	blx	r3
 800d134:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800d138:	b113      	cbz	r3, 800d140 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800d13a:	2301      	movs	r3, #1
 800d13c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d140:	bd10      	pop	{r4, pc}

0800d142 <_ZN8touchgfx3HAL10initializeEv>:
 800d142:	b510      	push	{r4, lr}
 800d144:	4604      	mov	r4, r0
 800d146:	f7fd ffc5 	bl	800b0d4 <_ZN8touchgfx10OSWrappers10initializeEv>
 800d14a:	f7fd fc8f 	bl	800aa6c <_ZN8touchgfx4GPIO4initEv>
 800d14e:	6860      	ldr	r0, [r4, #4]
 800d150:	6803      	ldr	r3, [r0, #0]
 800d152:	68db      	ldr	r3, [r3, #12]
 800d154:	4798      	blx	r3
 800d156:	68e0      	ldr	r0, [r4, #12]
 800d158:	6803      	ldr	r3, [r0, #0]
 800d15a:	689b      	ldr	r3, [r3, #8]
 800d15c:	4798      	blx	r3
 800d15e:	6823      	ldr	r3, [r4, #0]
 800d160:	4620      	mov	r0, r4
 800d162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d166:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800d168:	4718      	bx	r3

0800d16a <_ZN8touchgfx3HAL9taskEntryEv>:
 800d16a:	4604      	mov	r4, r0
 800d16c:	b508      	push	{r3, lr}
 800d16e:	6803      	ldr	r3, [r0, #0]
 800d170:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800d174:	4798      	blx	r3
 800d176:	6823      	ldr	r3, [r4, #0]
 800d178:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800d17a:	4620      	mov	r0, r4
 800d17c:	4798      	blx	r3
 800d17e:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800d182:	2b02      	cmp	r3, #2
 800d184:	d001      	beq.n	800d18a <_ZN8touchgfx3HAL9taskEntryEv+0x20>
 800d186:	f7fe f819 	bl	800b1bc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800d18a:	6823      	ldr	r3, [r4, #0]
 800d18c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d18e:	e7f4      	b.n	800d17a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800d190 <_ZN8touchgfx3HAL4tickEv>:
 800d190:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d192:	6803      	ldr	r3, [r0, #0]
 800d194:	4604      	mov	r4, r0
 800d196:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800d19a:	4798      	blx	r3
 800d19c:	4d60      	ldr	r5, [pc, #384]	@ (800d320 <_ZN8touchgfx3HAL4tickEv+0x190>)
 800d19e:	2800      	cmp	r0, #0
 800d1a0:	f000 809e 	beq.w	800d2e0 <_ZN8touchgfx3HAL4tickEv+0x150>
 800d1a4:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800d1a8:	2b02      	cmp	r3, #2
 800d1aa:	d002      	beq.n	800d1b2 <_ZN8touchgfx3HAL4tickEv+0x22>
 800d1ac:	2001      	movs	r0, #1
 800d1ae:	f7fd fc65 	bl	800aa7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d1b2:	2600      	movs	r6, #0
 800d1b4:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800d1b8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800d1bc:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d1c0:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800d1c4:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800d1c8:	b133      	cbz	r3, 800d1d8 <_ZN8touchgfx3HAL4tickEv+0x48>
 800d1ca:	6823      	ldr	r3, [r4, #0]
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800d1d2:	4798      	blx	r3
 800d1d4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800d1d8:	2601      	movs	r6, #1
 800d1da:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800d1de:	6862      	ldr	r2, [r4, #4]
 800d1e0:	f083 0301 	eor.w	r3, r3, #1
 800d1e4:	7253      	strb	r3, [r2, #9]
 800d1e6:	702e      	strb	r6, [r5, #0]
 800d1e8:	f002 ff8a 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800d1ec:	6803      	ldr	r3, [r0, #0]
 800d1ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d1f0:	4798      	blx	r3
 800d1f2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d1f6:	b90b      	cbnz	r3, 800d1fc <_ZN8touchgfx3HAL4tickEv+0x6c>
 800d1f8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800d1fc:	f002 ff80 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800d200:	6803      	ldr	r3, [r0, #0]
 800d202:	695b      	ldr	r3, [r3, #20]
 800d204:	4798      	blx	r3
 800d206:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d208:	6803      	ldr	r3, [r0, #0]
 800d20a:	691b      	ldr	r3, [r3, #16]
 800d20c:	4798      	blx	r3
 800d20e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d212:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800d216:	3b01      	subs	r3, #1
 800d218:	b2db      	uxtb	r3, r3
 800d21a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d21e:	b10a      	cbz	r2, 800d224 <_ZN8touchgfx3HAL4tickEv+0x94>
 800d220:	2b00      	cmp	r3, #0
 800d222:	d1eb      	bne.n	800d1fc <_ZN8touchgfx3HAL4tickEv+0x6c>
 800d224:	4a3f      	ldr	r2, [pc, #252]	@ (800d324 <_ZN8touchgfx3HAL4tickEv+0x194>)
 800d226:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800d22a:	7813      	ldrb	r3, [r2, #0]
 800d22c:	3301      	adds	r3, #1
 800d22e:	b25b      	sxtb	r3, r3
 800d230:	4299      	cmp	r1, r3
 800d232:	7013      	strb	r3, [r2, #0]
 800d234:	dc10      	bgt.n	800d258 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800d236:	2300      	movs	r3, #0
 800d238:	68e0      	ldr	r0, [r4, #12]
 800d23a:	7013      	strb	r3, [r2, #0]
 800d23c:	6803      	ldr	r3, [r0, #0]
 800d23e:	aa03      	add	r2, sp, #12
 800d240:	68db      	ldr	r3, [r3, #12]
 800d242:	a902      	add	r1, sp, #8
 800d244:	4798      	blx	r3
 800d246:	6823      	ldr	r3, [r4, #0]
 800d248:	2800      	cmp	r0, #0
 800d24a:	d059      	beq.n	800d300 <_ZN8touchgfx3HAL4tickEv+0x170>
 800d24c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d250:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800d254:	4620      	mov	r0, r4
 800d256:	4798      	blx	r3
 800d258:	2300      	movs	r3, #0
 800d25a:	6960      	ldr	r0, [r4, #20]
 800d25c:	f88d 3007 	strb.w	r3, [sp, #7]
 800d260:	b158      	cbz	r0, 800d27a <_ZN8touchgfx3HAL4tickEv+0xea>
 800d262:	6803      	ldr	r3, [r0, #0]
 800d264:	f10d 0107 	add.w	r1, sp, #7
 800d268:	68db      	ldr	r3, [r3, #12]
 800d26a:	4798      	blx	r3
 800d26c:	b128      	cbz	r0, 800d27a <_ZN8touchgfx3HAL4tickEv+0xea>
 800d26e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d270:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d274:	6803      	ldr	r3, [r0, #0]
 800d276:	68db      	ldr	r3, [r3, #12]
 800d278:	4798      	blx	r3
 800d27a:	f104 001c 	add.w	r0, r4, #28
 800d27e:	f014 fb4b 	bl	8021918 <_ZN8touchgfx8Gestures4tickEv>
 800d282:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800d286:	b30b      	cbz	r3, 800d2cc <_ZN8touchgfx3HAL4tickEv+0x13c>
 800d288:	6920      	ldr	r0, [r4, #16]
 800d28a:	6803      	ldr	r3, [r0, #0]
 800d28c:	691b      	ldr	r3, [r3, #16]
 800d28e:	4798      	blx	r3
 800d290:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d292:	4606      	mov	r6, r0
 800d294:	b903      	cbnz	r3, 800d298 <_ZN8touchgfx3HAL4tickEv+0x108>
 800d296:	6760      	str	r0, [r4, #116]	@ 0x74
 800d298:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d29a:	4a23      	ldr	r2, [pc, #140]	@ (800d328 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800d29c:	1af3      	subs	r3, r6, r3
 800d29e:	4293      	cmp	r3, r2
 800d2a0:	d914      	bls.n	800d2cc <_ZN8touchgfx3HAL4tickEv+0x13c>
 800d2a2:	6920      	ldr	r0, [r4, #16]
 800d2a4:	6803      	ldr	r3, [r0, #0]
 800d2a6:	699b      	ldr	r3, [r3, #24]
 800d2a8:	4798      	blx	r3
 800d2aa:	2264      	movs	r2, #100	@ 0x64
 800d2ac:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d2ae:	1af3      	subs	r3, r6, r3
 800d2b0:	fbb3 f3f2 	udiv	r3, r3, r2
 800d2b4:	fbb0 f0f3 	udiv	r0, r0, r3
 800d2b8:	2800      	cmp	r0, #0
 800d2ba:	dc26      	bgt.n	800d30a <_ZN8touchgfx3HAL4tickEv+0x17a>
 800d2bc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800d2c0:	6920      	ldr	r0, [r4, #16]
 800d2c2:	2100      	movs	r1, #0
 800d2c4:	6803      	ldr	r3, [r0, #0]
 800d2c6:	69db      	ldr	r3, [r3, #28]
 800d2c8:	4798      	blx	r3
 800d2ca:	6766      	str	r6, [r4, #116]	@ 0x74
 800d2cc:	6823      	ldr	r3, [r4, #0]
 800d2ce:	4620      	mov	r0, r4
 800d2d0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800d2d4:	4798      	blx	r3
 800d2d6:	f002 ff13 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 800d2da:	6803      	ldr	r3, [r0, #0]
 800d2dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d2de:	4798      	blx	r3
 800d2e0:	6823      	ldr	r3, [r4, #0]
 800d2e2:	4620      	mov	r0, r4
 800d2e4:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800d2e8:	4798      	blx	r3
 800d2ea:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800d2ee:	2b02      	cmp	r3, #2
 800d2f0:	d002      	beq.n	800d2f8 <_ZN8touchgfx3HAL4tickEv+0x168>
 800d2f2:	2001      	movs	r0, #1
 800d2f4:	f7fd fbde 	bl	800aab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d2f8:	2300      	movs	r3, #0
 800d2fa:	702b      	strb	r3, [r5, #0]
 800d2fc:	b004      	add	sp, #16
 800d2fe:	bd70      	pop	{r4, r5, r6, pc}
 800d300:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800d304:	4620      	mov	r0, r4
 800d306:	4798      	blx	r3
 800d308:	e7a6      	b.n	800d258 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800d30a:	2863      	cmp	r0, #99	@ 0x63
 800d30c:	bfcb      	itete	gt
 800d30e:	2300      	movgt	r3, #0
 800d310:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800d314:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800d318:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800d31c:	e7d0      	b.n	800d2c0 <_ZN8touchgfx3HAL4tickEv+0x130>
 800d31e:	bf00      	nop
 800d320:	20002234 	.word	0x20002234
 800d324:	20002235 	.word	0x20002235
 800d328:	05f5e100 	.word	0x05f5e100

0800d32c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800d32c:	b510      	push	{r4, lr}
 800d32e:	4604      	mov	r4, r0
 800d330:	f7fd fef8 	bl	800b124 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800d334:	2200      	movs	r2, #0
 800d336:	6863      	ldr	r3, [r4, #4]
 800d338:	729a      	strb	r2, [r3, #10]
 800d33a:	bd10      	pop	{r4, pc}

0800d33c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800d33c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800d33e:	301c      	adds	r0, #28
 800d340:	f014 bae8 	b.w	8021914 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800d344 <_ZN8touchgfx3HAL5touchEll>:
 800d344:	b530      	push	{r4, r5, lr}
 800d346:	4604      	mov	r4, r0
 800d348:	b087      	sub	sp, #28
 800d34a:	a804      	add	r0, sp, #16
 800d34c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800d350:	f002 fcc8 	bl	800fce4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800d354:	9b04      	ldr	r3, [sp, #16]
 800d356:	a906      	add	r1, sp, #24
 800d358:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d35c:	9b05      	ldr	r3, [sp, #20]
 800d35e:	a803      	add	r0, sp, #12
 800d360:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800d364:	f002 fd10 	bl	800fd88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800d368:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800d36c:	f104 001c 	add.w	r0, r4, #28
 800d370:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d374:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d378:	b189      	cbz	r1, 800d39e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800d37a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800d37e:	9300      	str	r3, [sp, #0]
 800d380:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800d384:	4613      	mov	r3, r2
 800d386:	462a      	mov	r2, r5
 800d388:	f014 fad4 	bl	8021934 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800d38c:	b128      	cbz	r0, 800d39a <_ZN8touchgfx3HAL5touchEll+0x56>
 800d38e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d392:	6623      	str	r3, [r4, #96]	@ 0x60
 800d394:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d398:	6663      	str	r3, [r4, #100]	@ 0x64
 800d39a:	b007      	add	sp, #28
 800d39c:	bd30      	pop	{r4, r5, pc}
 800d39e:	f014 fb09 	bl	80219b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d3a2:	2301      	movs	r3, #1
 800d3a4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d3a8:	e7f1      	b.n	800d38e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800d3aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800d3aa:	b510      	push	{r4, lr}
 800d3ac:	2b00      	cmp	r3, #0
 800d3ae:	d046      	beq.n	800d43e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d3b0:	ea81 0002 	eor.w	r0, r1, r2
 800d3b4:	07c4      	lsls	r4, r0, #31
 800d3b6:	d508      	bpl.n	800d3ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800d3b8:	440b      	add	r3, r1
 800d3ba:	3a01      	subs	r2, #1
 800d3bc:	428b      	cmp	r3, r1
 800d3be:	d93e      	bls.n	800d43e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d3c0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d3c4:	f801 0b01 	strb.w	r0, [r1], #1
 800d3c8:	e7f8      	b.n	800d3bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800d3ca:	07d0      	lsls	r0, r2, #31
 800d3cc:	bf42      	ittt	mi
 800d3ce:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800d3d2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800d3d6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800d3da:	2b01      	cmp	r3, #1
 800d3dc:	d911      	bls.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d3de:	ea81 0402 	eor.w	r4, r1, r2
 800d3e2:	07a4      	lsls	r4, r4, #30
 800d3e4:	4610      	mov	r0, r2
 800d3e6:	d022      	beq.n	800d42e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800d3e8:	f023 0401 	bic.w	r4, r3, #1
 800d3ec:	440c      	add	r4, r1
 800d3ee:	428c      	cmp	r4, r1
 800d3f0:	4602      	mov	r2, r0
 800d3f2:	d904      	bls.n	800d3fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800d3f4:	8812      	ldrh	r2, [r2, #0]
 800d3f6:	3002      	adds	r0, #2
 800d3f8:	f821 2b02 	strh.w	r2, [r1], #2
 800d3fc:	e7f7      	b.n	800d3ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800d3fe:	f003 0301 	and.w	r3, r3, #1
 800d402:	f023 0003 	bic.w	r0, r3, #3
 800d406:	4408      	add	r0, r1
 800d408:	4288      	cmp	r0, r1
 800d40a:	4614      	mov	r4, r2
 800d40c:	d904      	bls.n	800d418 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800d40e:	6824      	ldr	r4, [r4, #0]
 800d410:	3204      	adds	r2, #4
 800d412:	f841 4b04 	str.w	r4, [r1], #4
 800d416:	e7f7      	b.n	800d408 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800d418:	f003 0303 	and.w	r3, r3, #3
 800d41c:	440b      	add	r3, r1
 800d41e:	3a01      	subs	r2, #1
 800d420:	428b      	cmp	r3, r1
 800d422:	d90c      	bls.n	800d43e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d424:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d428:	f801 0b01 	strb.w	r0, [r1], #1
 800d42c:	e7f8      	b.n	800d420 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800d42e:	0790      	lsls	r0, r2, #30
 800d430:	d0e7      	beq.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d432:	f832 0b02 	ldrh.w	r0, [r2], #2
 800d436:	3b02      	subs	r3, #2
 800d438:	f821 0b02 	strh.w	r0, [r1], #2
 800d43c:	e7e1      	b.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d43e:	2001      	movs	r0, #1
 800d440:	bd10      	pop	{r4, pc}

0800d442 <_ZN8touchgfx3HAL7noTouchEv>:
 800d442:	b510      	push	{r4, lr}
 800d444:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800d448:	4604      	mov	r4, r0
 800d44a:	b153      	cbz	r3, 800d462 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800d44c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800d450:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800d454:	2101      	movs	r1, #1
 800d456:	301c      	adds	r0, #28
 800d458:	f014 faac 	bl	80219b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d45c:	2300      	movs	r3, #0
 800d45e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d462:	bd10      	pop	{r4, pc}

0800d464 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800d464:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d468:	4604      	mov	r4, r0
 800d46a:	2000      	movs	r0, #0
 800d46c:	b085      	sub	sp, #20
 800d46e:	ad04      	add	r5, sp, #16
 800d470:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d474:	69a0      	ldr	r0, [r4, #24]
 800d476:	4699      	mov	r9, r3
 800d478:	6806      	ldr	r6, [r0, #0]
 800d47a:	9501      	str	r5, [sp, #4]
 800d47c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800d480:	460f      	mov	r7, r1
 800d482:	9500      	str	r5, [sp, #0]
 800d484:	6835      	ldr	r5, [r6, #0]
 800d486:	4690      	mov	r8, r2
 800d488:	47a8      	blx	r5
 800d48a:	4d10      	ldr	r5, [pc, #64]	@ (800d4cc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800d48c:	4606      	mov	r6, r0
 800d48e:	f8a5 9000 	strh.w	r9, [r5]
 800d492:	f7fa fde9 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d496:	6803      	ldr	r3, [r0, #0]
 800d498:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d49a:	4798      	blx	r3
 800d49c:	b128      	cbz	r0, 800d4aa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800d49e:	2801      	cmp	r0, #1
 800d4a0:	d00b      	beq.n	800d4ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800d4a2:	4630      	mov	r0, r6
 800d4a4:	b005      	add	sp, #20
 800d4a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d4aa:	882b      	ldrh	r3, [r5, #0]
 800d4ac:	fb08 7203 	mla	r2, r8, r3, r7
 800d4b0:	9b03      	ldr	r3, [sp, #12]
 800d4b2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800d4b6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800d4b8:	e7f3      	b.n	800d4a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d4ba:	882a      	ldrh	r2, [r5, #0]
 800d4bc:	9b03      	ldr	r3, [sp, #12]
 800d4be:	fb08 7202 	mla	r2, r8, r2, r7
 800d4c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d4c6:	1a9a      	subs	r2, r3, r2
 800d4c8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800d4ca:	e7ea      	b.n	800d4a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d4cc:	2000222a 	.word	0x2000222a

0800d4d0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800d4d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d4d2:	4b15      	ldr	r3, [pc, #84]	@ (800d528 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800d4d4:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800d4d8:	881b      	ldrh	r3, [r3, #0]
 800d4da:	460f      	mov	r7, r1
 800d4dc:	fb93 f4f4 	sdiv	r4, r3, r4
 800d4e0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800d4e2:	4606      	mov	r6, r0
 800d4e4:	f7fa fdc0 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d4e8:	6803      	ldr	r3, [r0, #0]
 800d4ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d4ec:	4798      	blx	r3
 800d4ee:	2801      	cmp	r0, #1
 800d4f0:	d00b      	beq.n	800d50a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800d4f2:	d303      	bcc.n	800d4fc <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800d4f4:	2802      	cmp	r0, #2
 800d4f6:	d010      	beq.n	800d51a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800d4f8:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800d4fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d4fc:	437c      	muls	r4, r7
 800d4fe:	4b0b      	ldr	r3, [pc, #44]	@ (800d52c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800d500:	8819      	ldrh	r1, [r3, #0]
 800d502:	434c      	muls	r4, r1
 800d504:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800d508:	e7f6      	b.n	800d4f8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800d50a:	437c      	muls	r4, r7
 800d50c:	4b07      	ldr	r3, [pc, #28]	@ (800d52c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800d50e:	8819      	ldrh	r1, [r3, #0]
 800d510:	434c      	muls	r4, r1
 800d512:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800d516:	1b2d      	subs	r5, r5, r4
 800d518:	e7ee      	b.n	800d4f8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800d51a:	437c      	muls	r4, r7
 800d51c:	4b03      	ldr	r3, [pc, #12]	@ (800d52c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800d51e:	8819      	ldrh	r1, [r3, #0]
 800d520:	434c      	muls	r4, r1
 800d522:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800d526:	e7e7      	b.n	800d4f8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800d528:	2000222c 	.word	0x2000222c
 800d52c:	2000222a 	.word	0x2000222a

0800d530 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800d530:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d532:	b08b      	sub	sp, #44	@ 0x2c
 800d534:	4617      	mov	r7, r2
 800d536:	4604      	mov	r4, r0
 800d538:	460e      	mov	r6, r1
 800d53a:	461d      	mov	r5, r3
 800d53c:	f7fa fd94 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d540:	6803      	ldr	r3, [r0, #0]
 800d542:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d544:	4798      	blx	r3
 800d546:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800d54a:	9007      	str	r0, [sp, #28]
 800d54c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d550:	4b0d      	ldr	r3, [pc, #52]	@ (800d588 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800d552:	6822      	ldr	r2, [r4, #0]
 800d554:	881b      	ldrh	r3, [r3, #0]
 800d556:	4631      	mov	r1, r6
 800d558:	9306      	str	r3, [sp, #24]
 800d55a:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d55e:	4620      	mov	r0, r4
 800d560:	9305      	str	r3, [sp, #20]
 800d562:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800d566:	9304      	str	r3, [sp, #16]
 800d568:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d56c:	9303      	str	r3, [sp, #12]
 800d56e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d572:	9302      	str	r3, [sp, #8]
 800d574:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d578:	e9cd 5300 	strd	r5, r3, [sp]
 800d57c:	463b      	mov	r3, r7
 800d57e:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800d580:	2200      	movs	r2, #0
 800d582:	47a8      	blx	r5
 800d584:	b00b      	add	sp, #44	@ 0x2c
 800d586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d588:	2000222a 	.word	0x2000222a

0800d58c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800d58c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d590:	4698      	mov	r8, r3
 800d592:	6803      	ldr	r3, [r0, #0]
 800d594:	b08b      	sub	sp, #44	@ 0x2c
 800d596:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800d598:	4b14      	ldr	r3, [pc, #80]	@ (800d5ec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800d59a:	4617      	mov	r7, r2
 800d59c:	f8b3 9000 	ldrh.w	r9, [r3]
 800d5a0:	460e      	mov	r6, r1
 800d5a2:	4604      	mov	r4, r0
 800d5a4:	f7fa fd60 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d5a8:	6803      	ldr	r3, [r0, #0]
 800d5aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d5ac:	4798      	blx	r3
 800d5ae:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800d5b2:	2200      	movs	r2, #0
 800d5b4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d5b8:	2302      	movs	r3, #2
 800d5ba:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800d5be:	2301      	movs	r3, #1
 800d5c0:	9305      	str	r3, [sp, #20]
 800d5c2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800d5c6:	4631      	mov	r1, r6
 800d5c8:	9304      	str	r3, [sp, #16]
 800d5ca:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800d5ce:	4620      	mov	r0, r4
 800d5d0:	9303      	str	r3, [sp, #12]
 800d5d2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d5d6:	9302      	str	r3, [sp, #8]
 800d5d8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d5dc:	e9cd 8300 	strd	r8, r3, [sp]
 800d5e0:	463b      	mov	r3, r7
 800d5e2:	47a8      	blx	r5
 800d5e4:	b00b      	add	sp, #44	@ 0x2c
 800d5e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5ea:	bf00      	nop
 800d5ec:	2000222a 	.word	0x2000222a

0800d5f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800d5f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d5f4:	4698      	mov	r8, r3
 800d5f6:	6803      	ldr	r3, [r0, #0]
 800d5f8:	b087      	sub	sp, #28
 800d5fa:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800d5fc:	4b10      	ldr	r3, [pc, #64]	@ (800d640 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800d5fe:	460e      	mov	r6, r1
 800d600:	f8b3 9000 	ldrh.w	r9, [r3]
 800d604:	4617      	mov	r7, r2
 800d606:	4604      	mov	r4, r0
 800d608:	f7fa fd2e 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d60c:	6803      	ldr	r3, [r0, #0]
 800d60e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d610:	4798      	blx	r3
 800d612:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800d616:	f8cd 900c 	str.w	r9, [sp, #12]
 800d61a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800d61e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800d622:	463a      	mov	r2, r7
 800d624:	9302      	str	r3, [sp, #8]
 800d626:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800d62a:	4631      	mov	r1, r6
 800d62c:	9301      	str	r3, [sp, #4]
 800d62e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d632:	4620      	mov	r0, r4
 800d634:	9300      	str	r3, [sp, #0]
 800d636:	4643      	mov	r3, r8
 800d638:	47a8      	blx	r5
 800d63a:	b007      	add	sp, #28
 800d63c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d640:	2000222a 	.word	0x2000222a

0800d644 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800d644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d648:	4604      	mov	r4, r0
 800d64a:	b08f      	sub	sp, #60	@ 0x3c
 800d64c:	4610      	mov	r0, r2
 800d64e:	460d      	mov	r5, r1
 800d650:	4691      	mov	r9, r2
 800d652:	461e      	mov	r6, r3
 800d654:	f005 fe78 	bl	8013348 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d658:	2800      	cmp	r0, #0
 800d65a:	f000 809d 	beq.w	800d798 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800d65e:	6823      	ldr	r3, [r4, #0]
 800d660:	4620      	mov	r0, r4
 800d662:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d664:	4798      	blx	r3
 800d666:	6823      	ldr	r3, [r4, #0]
 800d668:	f8df b190 	ldr.w	fp, [pc, #400]	@ 800d7fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800d66c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d66e:	4620      	mov	r0, r4
 800d670:	4798      	blx	r3
 800d672:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800d800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800d676:	f8bb 3000 	ldrh.w	r3, [fp]
 800d67a:	4f5d      	ldr	r7, [pc, #372]	@ (800d7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d67c:	9301      	str	r3, [sp, #4]
 800d67e:	f8ba 3000 	ldrh.w	r3, [sl]
 800d682:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800d686:	9302      	str	r3, [sp, #8]
 800d688:	883b      	ldrh	r3, [r7, #0]
 800d68a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800d68e:	9303      	str	r3, [sp, #12]
 800d690:	4b58      	ldr	r3, [pc, #352]	@ (800d7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d692:	4640      	mov	r0, r8
 800d694:	881a      	ldrh	r2, [r3, #0]
 800d696:	9305      	str	r3, [sp, #20]
 800d698:	9204      	str	r2, [sp, #16]
 800d69a:	f005 fee9 	bl	8013470 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d69e:	8038      	strh	r0, [r7, #0]
 800d6a0:	4640      	mov	r0, r8
 800d6a2:	f005 ff19 	bl	80134d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d6a6:	9b05      	ldr	r3, [sp, #20]
 800d6a8:	b280      	uxth	r0, r0
 800d6aa:	8018      	strh	r0, [r3, #0]
 800d6ac:	4b52      	ldr	r3, [pc, #328]	@ (800d7f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800d6ae:	781b      	ldrb	r3, [r3, #0]
 800d6b0:	2b00      	cmp	r3, #0
 800d6b2:	d174      	bne.n	800d79e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800d6b4:	883b      	ldrh	r3, [r7, #0]
 800d6b6:	f8aa 0000 	strh.w	r0, [sl]
 800d6ba:	f8ab 3000 	strh.w	r3, [fp]
 800d6be:	4648      	mov	r0, r9
 800d6c0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800d6c4:	f005 fe40 	bl	8013348 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d6c8:	2200      	movs	r2, #0
 800d6ca:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800d6ce:	4611      	mov	r1, r2
 800d6d0:	4628      	mov	r0, r5
 800d6d2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800d6d6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800d6da:	f7fb fbd0 	bl	8008e7e <_ZN8touchgfx8Drawable5setXYEss>
 800d6de:	2301      	movs	r3, #1
 800d6e0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800d6e4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800d6e8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d6ec:	2b00      	cmp	r3, #0
 800d6ee:	dd5c      	ble.n	800d7aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800d6f0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d6f4:	2b00      	cmp	r3, #0
 800d6f6:	dd58      	ble.n	800d7aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800d6f8:	462a      	mov	r2, r5
 800d6fa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d6fe:	ab0a      	add	r3, sp, #40	@ 0x28
 800d700:	6851      	ldr	r1, [r2, #4]
 800d702:	c303      	stmia	r3!, {r0, r1}
 800d704:	4631      	mov	r1, r6
 800d706:	a80a      	add	r0, sp, #40	@ 0x28
 800d708:	f7ff fbb6 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 800d70c:	2100      	movs	r1, #0
 800d70e:	4b38      	ldr	r3, [pc, #224]	@ (800d7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d710:	910c      	str	r1, [sp, #48]	@ 0x30
 800d712:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d716:	4b37      	ldr	r3, [pc, #220]	@ (800d7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d718:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800d71c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d720:	aa0a      	add	r2, sp, #40	@ 0x28
 800d722:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800d726:	ab08      	add	r3, sp, #32
 800d728:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d72c:	e883 0003 	stmia.w	r3, {r0, r1}
 800d730:	4618      	mov	r0, r3
 800d732:	a90c      	add	r1, sp, #48	@ 0x30
 800d734:	f7ff fba0 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 800d738:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800d73a:	2b00      	cmp	r3, #0
 800d73c:	d13c      	bne.n	800d7b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800d73e:	2000      	movs	r0, #0
 800d740:	2600      	movs	r6, #0
 800d742:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800d746:	696b      	ldr	r3, [r5, #20]
 800d748:	682a      	ldr	r2, [r5, #0]
 800d74a:	616e      	str	r6, [r5, #20]
 800d74c:	9305      	str	r3, [sp, #20]
 800d74e:	6892      	ldr	r2, [r2, #8]
 800d750:	a908      	add	r1, sp, #32
 800d752:	4628      	mov	r0, r5
 800d754:	4790      	blx	r2
 800d756:	9b05      	ldr	r3, [sp, #20]
 800d758:	4652      	mov	r2, sl
 800d75a:	616b      	str	r3, [r5, #20]
 800d75c:	4649      	mov	r1, r9
 800d75e:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800d762:	4628      	mov	r0, r5
 800d764:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800d768:	f7fb fb89 	bl	8008e7e <_ZN8touchgfx8Drawable5setXYEss>
 800d76c:	9a01      	ldr	r2, [sp, #4]
 800d76e:	4b23      	ldr	r3, [pc, #140]	@ (800d7fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800d770:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800d774:	801a      	strh	r2, [r3, #0]
 800d776:	9a02      	ldr	r2, [sp, #8]
 800d778:	4b21      	ldr	r3, [pc, #132]	@ (800d800 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800d77a:	4620      	mov	r0, r4
 800d77c:	801a      	strh	r2, [r3, #0]
 800d77e:	9a03      	ldr	r2, [sp, #12]
 800d780:	4b1b      	ldr	r3, [pc, #108]	@ (800d7f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d782:	801a      	strh	r2, [r3, #0]
 800d784:	4b1b      	ldr	r3, [pc, #108]	@ (800d7f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d786:	9a04      	ldr	r2, [sp, #16]
 800d788:	801a      	strh	r2, [r3, #0]
 800d78a:	6823      	ldr	r3, [r4, #0]
 800d78c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d78e:	4798      	blx	r3
 800d790:	6823      	ldr	r3, [r4, #0]
 800d792:	4620      	mov	r0, r4
 800d794:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800d796:	4798      	blx	r3
 800d798:	b00f      	add	sp, #60	@ 0x3c
 800d79a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d79e:	883b      	ldrh	r3, [r7, #0]
 800d7a0:	f8ab 0000 	strh.w	r0, [fp]
 800d7a4:	f8aa 3000 	strh.w	r3, [sl]
 800d7a8:	e789      	b.n	800d6be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800d7aa:	462a      	mov	r2, r5
 800d7ac:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d7b0:	ab0a      	add	r3, sp, #40	@ 0x28
 800d7b2:	6851      	ldr	r1, [r2, #4]
 800d7b4:	c303      	stmia	r3!, {r0, r1}
 800d7b6:	e7a9      	b.n	800d70c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800d7b8:	a807      	add	r0, sp, #28
 800d7ba:	f005 ffcf 	bl	801375c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d7be:	4606      	mov	r6, r0
 800d7c0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800d7c2:	6803      	ldr	r3, [r0, #0]
 800d7c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d7c6:	4798      	blx	r3
 800d7c8:	4286      	cmp	r6, r0
 800d7ca:	d1b8      	bne.n	800d73e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800d7cc:	f7fa fc4c 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800d7d0:	6803      	ldr	r3, [r0, #0]
 800d7d2:	4606      	mov	r6, r0
 800d7d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d7d6:	a807      	add	r0, sp, #28
 800d7d8:	9305      	str	r3, [sp, #20]
 800d7da:	f005 ffbf 	bl	801375c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d7de:	9b05      	ldr	r3, [sp, #20]
 800d7e0:	4601      	mov	r1, r0
 800d7e2:	4630      	mov	r0, r6
 800d7e4:	4798      	blx	r3
 800d7e6:	f080 0001 	eor.w	r0, r0, #1
 800d7ea:	b2c0      	uxtb	r0, r0
 800d7ec:	e7a8      	b.n	800d740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800d7ee:	bf00      	nop
 800d7f0:	20002224 	.word	0x20002224
 800d7f4:	20002226 	.word	0x20002226
 800d7f8:	20002228 	.word	0x20002228
 800d7fc:	2000222a 	.word	0x2000222a
 800d800:	2000222c 	.word	0x2000222c

0800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800d804:	b510      	push	{r4, lr}
 800d806:	4b07      	ldr	r3, [pc, #28]	@ (800d824 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800d808:	4604      	mov	r4, r0
 800d80a:	781b      	ldrb	r3, [r3, #0]
 800d80c:	b13b      	cbz	r3, 800d81e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d80e:	6803      	ldr	r3, [r0, #0]
 800d810:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d812:	4798      	blx	r3
 800d814:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800d816:	4283      	cmp	r3, r0
 800d818:	d101      	bne.n	800d81e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d81a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800d81c:	bd10      	pop	{r4, pc}
 800d81e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800d820:	e7fc      	b.n	800d81c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800d822:	bf00      	nop
 800d824:	2000222e 	.word	0x2000222e

0800d828 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800d828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d82c:	461d      	mov	r5, r3
 800d82e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800d832:	2400      	movs	r4, #0
 800d834:	b08a      	sub	sp, #40	@ 0x28
 800d836:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d83a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d83e:	4690      	mov	r8, r2
 800d840:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d844:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d848:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800d84c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d850:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d854:	4607      	mov	r7, r0
 800d856:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d85a:	9404      	str	r4, [sp, #16]
 800d85c:	f88d 4020 	strb.w	r4, [sp, #32]
 800d860:	f7ff ffd0 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d864:	fb06 8505 	mla	r5, r6, r5, r8
 800d868:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d86c:	6878      	ldr	r0, [r7, #4]
 800d86e:	9505      	str	r5, [sp, #20]
 800d870:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d874:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d878:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800d87c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800d880:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800d884:	6803      	ldr	r3, [r0, #0]
 800d886:	a901      	add	r1, sp, #4
 800d888:	685b      	ldr	r3, [r3, #4]
 800d88a:	4798      	blx	r3
 800d88c:	b00a      	add	sp, #40	@ 0x28
 800d88e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d892 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800d892:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d896:	2400      	movs	r4, #0
 800d898:	461d      	mov	r5, r3
 800d89a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800d89e:	4691      	mov	r9, r2
 800d8a0:	b08b      	sub	sp, #44	@ 0x2c
 800d8a2:	4688      	mov	r8, r1
 800d8a4:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800d8a8:	4607      	mov	r7, r0
 800d8aa:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d8ae:	9404      	str	r4, [sp, #16]
 800d8b0:	f7ff ffa8 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d8b4:	fb06 9505 	mla	r5, r6, r5, r9
 800d8b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d8bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d8c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d8c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d8c8:	6878      	ldr	r0, [r7, #4]
 800d8ca:	9505      	str	r5, [sp, #20]
 800d8cc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d8d0:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d8d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d8d8:	f8cd 8010 	str.w	r8, [sp, #16]
 800d8dc:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d8e0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d8e4:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800d8e8:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800d8ec:	6803      	ldr	r3, [r0, #0]
 800d8ee:	a901      	add	r1, sp, #4
 800d8f0:	685b      	ldr	r3, [r3, #4]
 800d8f2:	4798      	blx	r3
 800d8f4:	b00b      	add	sp, #44	@ 0x2c
 800d8f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d8fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d8fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d900:	4698      	mov	r8, r3
 800d902:	2300      	movs	r3, #0
 800d904:	b08a      	sub	sp, #40	@ 0x28
 800d906:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800d90a:	4606      	mov	r6, r0
 800d90c:	2d0b      	cmp	r5, #11
 800d90e:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800d912:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800d916:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800d91a:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800d91e:	9304      	str	r3, [sp, #16]
 800d920:	d137      	bne.n	800d992 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800d922:	2380      	movs	r3, #128	@ 0x80
 800d924:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d928:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d92c:	f88d 0020 	strb.w	r0, [sp, #32]
 800d930:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d934:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d938:	4630      	mov	r0, r6
 800d93a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d93e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d942:	9203      	str	r2, [sp, #12]
 800d944:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d948:	f7ff ff5c 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d94c:	2c0b      	cmp	r4, #11
 800d94e:	bf8c      	ite	hi
 800d950:	2100      	movhi	r1, #0
 800d952:	4b1b      	ldrls	r3, [pc, #108]	@ (800d9c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800d954:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800d958:	bf98      	it	ls
 800d95a:	5d19      	ldrbls	r1, [r3, r4]
 800d95c:	fb02 8307 	mla	r3, r2, r7, r8
 800d960:	10c9      	asrs	r1, r1, #3
 800d962:	fb01 0003 	mla	r0, r1, r3, r0
 800d966:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800d96a:	9005      	str	r0, [sp, #20]
 800d96c:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800d970:	2300      	movs	r3, #0
 800d972:	6870      	ldr	r0, [r6, #4]
 800d974:	f8ad 701e 	strh.w	r7, [sp, #30]
 800d978:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800d97c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800d980:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800d984:	6803      	ldr	r3, [r0, #0]
 800d986:	a901      	add	r1, sp, #4
 800d988:	685b      	ldr	r3, [r3, #4]
 800d98a:	4798      	blx	r3
 800d98c:	b00a      	add	sp, #40	@ 0x28
 800d98e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d992:	2d02      	cmp	r5, #2
 800d994:	d109      	bne.n	800d9aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800d996:	28ff      	cmp	r0, #255	@ 0xff
 800d998:	d105      	bne.n	800d9a6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800d99a:	f1bc 0f00 	cmp.w	ip, #0
 800d99e:	bf14      	ite	ne
 800d9a0:	2340      	movne	r3, #64	@ 0x40
 800d9a2:	2320      	moveq	r3, #32
 800d9a4:	e7be      	b.n	800d924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d9a6:	2340      	movs	r3, #64	@ 0x40
 800d9a8:	e7bc      	b.n	800d924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d9aa:	28ff      	cmp	r0, #255	@ 0xff
 800d9ac:	d105      	bne.n	800d9ba <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800d9ae:	f1bc 0f00 	cmp.w	ip, #0
 800d9b2:	bf14      	ite	ne
 800d9b4:	2304      	movne	r3, #4
 800d9b6:	2301      	moveq	r3, #1
 800d9b8:	e7b4      	b.n	800d924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d9ba:	2304      	movs	r3, #4
 800d9bc:	e7b2      	b.n	800d924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d9be:	bf00      	nop
 800d9c0:	080247f8 	.word	0x080247f8

0800d9c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d9c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9c8:	b08b      	sub	sp, #44	@ 0x2c
 800d9ca:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800d9ce:	461d      	mov	r5, r3
 800d9d0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800d9d4:	bf14      	ite	ne
 800d9d6:	2308      	movne	r3, #8
 800d9d8:	2302      	moveq	r3, #2
 800d9da:	2400      	movs	r4, #0
 800d9dc:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800d9e0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d9e4:	4688      	mov	r8, r1
 800d9e6:	4693      	mov	fp, r2
 800d9e8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800d9ec:	9404      	str	r4, [sp, #16]
 800d9ee:	4607      	mov	r7, r0
 800d9f0:	f7ff ff08 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d9f4:	2e0b      	cmp	r6, #11
 800d9f6:	bf98      	it	ls
 800d9f8:	4b15      	ldrls	r3, [pc, #84]	@ (800da50 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800d9fa:	fb05 b50a 	mla	r5, r5, sl, fp
 800d9fe:	bf98      	it	ls
 800da00:	5d9c      	ldrbls	r4, [r3, r6]
 800da02:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800da06:	10e4      	asrs	r4, r4, #3
 800da08:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da0c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800da10:	fb04 0405 	mla	r4, r4, r5, r0
 800da14:	f8ad 301a 	strh.w	r3, [sp, #26]
 800da18:	2300      	movs	r3, #0
 800da1a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800da1e:	6878      	ldr	r0, [r7, #4]
 800da20:	9405      	str	r4, [sp, #20]
 800da22:	f8ad 301c 	strh.w	r3, [sp, #28]
 800da26:	f8ad a01e 	strh.w	sl, [sp, #30]
 800da2a:	f8cd 8010 	str.w	r8, [sp, #16]
 800da2e:	f88d 9020 	strb.w	r9, [sp, #32]
 800da32:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800da36:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800da3a:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800da3e:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800da42:	6803      	ldr	r3, [r0, #0]
 800da44:	a901      	add	r1, sp, #4
 800da46:	685b      	ldr	r3, [r3, #4]
 800da48:	4798      	blx	r3
 800da4a:	b00b      	add	sp, #44	@ 0x2c
 800da4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da50:	080247f8 	.word	0x080247f8

0800da54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800da54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da58:	461e      	mov	r6, r3
 800da5a:	4b0a      	ldr	r3, [pc, #40]	@ (800da84 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800da5c:	460f      	mov	r7, r1
 800da5e:	881d      	ldrh	r5, [r3, #0]
 800da60:	4690      	mov	r8, r2
 800da62:	f7fa fb01 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800da66:	6803      	ldr	r3, [r0, #0]
 800da68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800da6a:	4798      	blx	r3
 800da6c:	280b      	cmp	r0, #11
 800da6e:	bf8e      	itee	hi
 800da70:	2400      	movhi	r4, #0
 800da72:	4b05      	ldrls	r3, [pc, #20]	@ (800da88 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800da74:	5c1c      	ldrbls	r4, [r3, r0]
 800da76:	fb08 7005 	mla	r0, r8, r5, r7
 800da7a:	10e4      	asrs	r4, r4, #3
 800da7c:	fb04 6000 	mla	r0, r4, r0, r6
 800da80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da84:	2000222a 	.word	0x2000222a
 800da88:	080247f8 	.word	0x080247f8

0800da8c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800da8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da8e:	2500      	movs	r5, #0
 800da90:	b08b      	sub	sp, #44	@ 0x2c
 800da92:	461f      	mov	r7, r3
 800da94:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800da98:	4604      	mov	r4, r0
 800da9a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800da9e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800daa2:	4616      	mov	r6, r2
 800daa4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800daa8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800daac:	9504      	str	r5, [sp, #16]
 800daae:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dab2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dab6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800daba:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800dabe:	f88d 3020 	strb.w	r3, [sp, #32]
 800dac2:	f7ff fe9f 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dac6:	463a      	mov	r2, r7
 800dac8:	4631      	mov	r1, r6
 800daca:	4603      	mov	r3, r0
 800dacc:	4620      	mov	r0, r4
 800dace:	f7ff ffc1 	bl	800da54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800dad2:	4b0e      	ldr	r3, [pc, #56]	@ (800db0c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800dad4:	9005      	str	r0, [sp, #20]
 800dad6:	881b      	ldrh	r3, [r3, #0]
 800dad8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dadc:	f7fa fac4 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800dae0:	6803      	ldr	r3, [r0, #0]
 800dae2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dae4:	4798      	blx	r3
 800dae6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800dae8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800daec:	9304      	str	r3, [sp, #16]
 800daee:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800daf2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800daf6:	6860      	ldr	r0, [r4, #4]
 800daf8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800dafc:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800db00:	6803      	ldr	r3, [r0, #0]
 800db02:	a901      	add	r1, sp, #4
 800db04:	685b      	ldr	r3, [r3, #4]
 800db06:	4798      	blx	r3
 800db08:	b00b      	add	sp, #44	@ 0x2c
 800db0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db0c:	2000222a 	.word	0x2000222a

0800db10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800db10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db12:	b08d      	sub	sp, #52	@ 0x34
 800db14:	466b      	mov	r3, sp
 800db16:	e883 0006 	stmia.w	r3, {r1, r2}
 800db1a:	2300      	movs	r3, #0
 800db1c:	2501      	movs	r5, #1
 800db1e:	9306      	str	r3, [sp, #24]
 800db20:	6803      	ldr	r3, [r0, #0]
 800db22:	9503      	str	r5, [sp, #12]
 800db24:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800db26:	4604      	mov	r4, r0
 800db28:	f8bd 6000 	ldrh.w	r6, [sp]
 800db2c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800db30:	4798      	blx	r3
 800db32:	463a      	mov	r2, r7
 800db34:	4631      	mov	r1, r6
 800db36:	4603      	mov	r3, r0
 800db38:	4620      	mov	r0, r4
 800db3a:	f7ff ff8b 	bl	800da54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800db3e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800db40:	9004      	str	r0, [sp, #16]
 800db42:	9307      	str	r3, [sp, #28]
 800db44:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800db48:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db4c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800db50:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800db54:	4b0e      	ldr	r3, [pc, #56]	@ (800db90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800db56:	881b      	ldrh	r3, [r3, #0]
 800db58:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800db5c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800db60:	f7fa fa82 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800db64:	6803      	ldr	r3, [r0, #0]
 800db66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800db68:	4798      	blx	r3
 800db6a:	23ff      	movs	r3, #255	@ 0xff
 800db6c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800db70:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800db74:	6860      	ldr	r0, [r4, #4]
 800db76:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800db7a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800db7e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800db82:	6803      	ldr	r3, [r0, #0]
 800db84:	a903      	add	r1, sp, #12
 800db86:	685b      	ldr	r3, [r3, #4]
 800db88:	4798      	blx	r3
 800db8a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800db8c:	b00d      	add	sp, #52	@ 0x34
 800db8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db90:	2000222a 	.word	0x2000222a

0800db94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800db94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db98:	b08c      	sub	sp, #48	@ 0x30
 800db9a:	466d      	mov	r5, sp
 800db9c:	461e      	mov	r6, r3
 800db9e:	2300      	movs	r3, #0
 800dba0:	e885 0006 	stmia.w	r5, {r1, r2}
 800dba4:	2501      	movs	r5, #1
 800dba6:	9306      	str	r3, [sp, #24]
 800dba8:	6803      	ldr	r3, [r0, #0]
 800dbaa:	9503      	str	r5, [sp, #12]
 800dbac:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dbae:	4604      	mov	r4, r0
 800dbb0:	f8bd 7000 	ldrh.w	r7, [sp]
 800dbb4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800dbb8:	4798      	blx	r3
 800dbba:	4642      	mov	r2, r8
 800dbbc:	4639      	mov	r1, r7
 800dbbe:	4603      	mov	r3, r0
 800dbc0:	4620      	mov	r0, r4
 800dbc2:	f7ff ff47 	bl	800da54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800dbc6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800dbca:	9004      	str	r0, [sp, #16]
 800dbcc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dbd0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800dbd4:	9607      	str	r6, [sp, #28]
 800dbd6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800dbda:	4b10      	ldr	r3, [pc, #64]	@ (800dc1c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800dbdc:	881b      	ldrh	r3, [r3, #0]
 800dbde:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800dbe2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800dbe4:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800dbe8:	f7fa fa3e 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 800dbec:	6803      	ldr	r3, [r0, #0]
 800dbee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dbf0:	4798      	blx	r3
 800dbf2:	23ff      	movs	r3, #255	@ 0xff
 800dbf4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800dbf8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800dbfc:	6860      	ldr	r0, [r4, #4]
 800dbfe:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800dc02:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800dc06:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800dc0a:	6803      	ldr	r3, [r0, #0]
 800dc0c:	a903      	add	r1, sp, #12
 800dc0e:	685b      	ldr	r3, [r3, #4]
 800dc10:	4798      	blx	r3
 800dc12:	4630      	mov	r0, r6
 800dc14:	b00c      	add	sp, #48	@ 0x30
 800dc16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc1a:	bf00      	nop
 800dc1c:	2000222a 	.word	0x2000222a

0800dc20 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800dc20:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc22:	b085      	sub	sp, #20
 800dc24:	ac02      	add	r4, sp, #8
 800dc26:	e884 0006 	stmia.w	r4, {r1, r2}
 800dc2a:	4605      	mov	r5, r0
 800dc2c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800dc30:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800dc34:	f7ff fde6 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dc38:	463a      	mov	r2, r7
 800dc3a:	4603      	mov	r3, r0
 800dc3c:	4631      	mov	r1, r6
 800dc3e:	4628      	mov	r0, r5
 800dc40:	f7ff ff08 	bl	800da54 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800dc44:	4a05      	ldr	r2, [pc, #20]	@ (800dc5c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800dc46:	682b      	ldr	r3, [r5, #0]
 800dc48:	8812      	ldrh	r2, [r2, #0]
 800dc4a:	9200      	str	r2, [sp, #0]
 800dc4c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800dc4e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800dc52:	4603      	mov	r3, r0
 800dc54:	4628      	mov	r0, r5
 800dc56:	47b0      	blx	r6
 800dc58:	b005      	add	sp, #20
 800dc5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dc5c:	2000222a 	.word	0x2000222a

0800dc60 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800dc60:	b570      	push	{r4, r5, r6, lr}
 800dc62:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800dc66:	4604      	mov	r4, r0
 800dc68:	b19b      	cbz	r3, 800dc92 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800dc6a:	2002      	movs	r0, #2
 800dc6c:	f7fc ff3e 	bl	800aaec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800dc70:	2300      	movs	r3, #0
 800dc72:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800dc76:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800dc7a:	6823      	ldr	r3, [r4, #0]
 800dc7c:	4620      	mov	r0, r4
 800dc7e:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800dc82:	f7ff fdbf 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dc86:	462b      	mov	r3, r5
 800dc88:	4601      	mov	r1, r0
 800dc8a:	4620      	mov	r0, r4
 800dc8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc90:	4718      	bx	r3
 800dc92:	bd70      	pop	{r4, r5, r6, pc}

0800dc94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800dc94:	b538      	push	{r3, r4, r5, lr}
 800dc96:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800dc9a:	4604      	mov	r4, r0
 800dc9c:	428b      	cmp	r3, r1
 800dc9e:	460d      	mov	r5, r1
 800dca0:	d006      	beq.n	800dcb0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800dca2:	6803      	ldr	r3, [r0, #0]
 800dca4:	b929      	cbnz	r1, 800dcb2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800dca6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800dcaa:	4798      	blx	r3
 800dcac:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800dcb0:	bd38      	pop	{r3, r4, r5, pc}
 800dcb2:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800dcb6:	e7f8      	b.n	800dcaa <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800dcb8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800dcb8:	b510      	push	{r4, lr}
 800dcba:	4b0c      	ldr	r3, [pc, #48]	@ (800dcec <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800dcbc:	4604      	mov	r4, r0
 800dcbe:	781b      	ldrb	r3, [r3, #0]
 800dcc0:	b953      	cbnz	r3, 800dcd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800dcc2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800dcc6:	b93b      	cbnz	r3, 800dcd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800dcc8:	6840      	ldr	r0, [r0, #4]
 800dcca:	f000 f90d 	bl	800dee8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800dcce:	b118      	cbz	r0, 800dcd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800dcd0:	6862      	ldr	r2, [r4, #4]
 800dcd2:	7a53      	ldrb	r3, [r2, #9]
 800dcd4:	2b00      	cmp	r3, #0
 800dcd6:	d0fc      	beq.n	800dcd2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800dcd8:	f7fd fa0e 	bl	800b0f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800dcdc:	4620      	mov	r0, r4
 800dcde:	2100      	movs	r1, #0
 800dce0:	f7ff ffd8 	bl	800dc94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800dce4:	4620      	mov	r0, r4
 800dce6:	f7ff fd8d 	bl	800d804 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dcea:	bd10      	pop	{r4, pc}
 800dcec:	2000222e 	.word	0x2000222e

0800dcf0 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800dcf0:	6803      	ldr	r3, [r0, #0]
 800dcf2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800dcf4:	4718      	bx	r3

0800dcf6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800dcf6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800dcfa:	1a13      	subs	r3, r2, r0
 800dcfc:	4258      	negs	r0, r3
 800dcfe:	4158      	adcs	r0, r3
 800dd00:	4770      	bx	lr

0800dd02 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800dd02:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800dd06:	1a9b      	subs	r3, r3, r2
 800dd08:	2b00      	cmp	r3, #0
 800dd0a:	bfdc      	itt	le
 800dd0c:	6882      	ldrle	r2, [r0, #8]
 800dd0e:	189b      	addle	r3, r3, r2
 800dd10:	2b01      	cmp	r3, #1
 800dd12:	bfcc      	ite	gt
 800dd14:	2000      	movgt	r0, #0
 800dd16:	2001      	movle	r0, #1
 800dd18:	4770      	bx	lr

0800dd1a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800dd1a:	6902      	ldr	r2, [r0, #16]
 800dd1c:	6843      	ldr	r3, [r0, #4]
 800dd1e:	2024      	movs	r0, #36	@ 0x24
 800dd20:	fb00 3002 	mla	r0, r0, r2, r3
 800dd24:	4770      	bx	lr

0800dd26 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800dd26:	6803      	ldr	r3, [r0, #0]
 800dd28:	691b      	ldr	r3, [r3, #16]
 800dd2a:	4718      	bx	r3

0800dd2c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800dd2c:	2301      	movs	r3, #1
 800dd2e:	b570      	push	{r4, r5, r6, lr}
 800dd30:	7203      	strb	r3, [r0, #8]
 800dd32:	4604      	mov	r4, r0
 800dd34:	6840      	ldr	r0, [r0, #4]
 800dd36:	6803      	ldr	r3, [r0, #0]
 800dd38:	699b      	ldr	r3, [r3, #24]
 800dd3a:	4798      	blx	r3
 800dd3c:	6803      	ldr	r3, [r0, #0]
 800dd3e:	4605      	mov	r5, r0
 800dd40:	2b40      	cmp	r3, #64	@ 0x40
 800dd42:	d00c      	beq.n	800dd5e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dd44:	d810      	bhi.n	800dd68 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800dd46:	2b04      	cmp	r3, #4
 800dd48:	d01d      	beq.n	800dd86 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800dd4a:	d804      	bhi.n	800dd56 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800dd4c:	2b01      	cmp	r3, #1
 800dd4e:	d006      	beq.n	800dd5e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dd50:	2b02      	cmp	r3, #2
 800dd52:	d02c      	beq.n	800ddae <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800dd54:	bd70      	pop	{r4, r5, r6, pc}
 800dd56:	2b08      	cmp	r3, #8
 800dd58:	d01d      	beq.n	800dd96 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800dd5a:	2b20      	cmp	r3, #32
 800dd5c:	d1fa      	bne.n	800dd54 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800dd5e:	6823      	ldr	r3, [r4, #0]
 800dd60:	4620      	mov	r0, r4
 800dd62:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800dd64:	4798      	blx	r3
 800dd66:	e013      	b.n	800dd90 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800dd68:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800dd6c:	d0f7      	beq.n	800dd5e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dd6e:	d804      	bhi.n	800dd7a <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800dd70:	2b80      	cmp	r3, #128	@ 0x80
 800dd72:	d0f4      	beq.n	800dd5e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dd74:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800dd78:	e7f0      	b.n	800dd5c <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800dd7a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800dd7e:	d0ee      	beq.n	800dd5e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dd80:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800dd84:	e7e5      	b.n	800dd52 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800dd86:	6823      	ldr	r3, [r4, #0]
 800dd88:	7f01      	ldrb	r1, [r0, #28]
 800dd8a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd8c:	4620      	mov	r0, r4
 800dd8e:	4798      	blx	r3
 800dd90:	6823      	ldr	r3, [r4, #0]
 800dd92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dd94:	e006      	b.n	800dda4 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800dd96:	6823      	ldr	r3, [r4, #0]
 800dd98:	7f01      	ldrb	r1, [r0, #28]
 800dd9a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dd9c:	4620      	mov	r0, r4
 800dd9e:	4798      	blx	r3
 800dda0:	6823      	ldr	r3, [r4, #0]
 800dda2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dda4:	4629      	mov	r1, r5
 800dda6:	4620      	mov	r0, r4
 800dda8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddac:	4718      	bx	r3
 800ddae:	6823      	ldr	r3, [r4, #0]
 800ddb0:	4620      	mov	r0, r4
 800ddb2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ddb4:	4798      	blx	r3
 800ddb6:	e7f3      	b.n	800dda0 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800ddb8 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800ddb8:	4770      	bx	lr

0800ddba <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800ddba:	4770      	bx	lr

0800ddbc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800ddbc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800ddc0:	1ad2      	subs	r2, r2, r3
 800ddc2:	2a00      	cmp	r2, #0
 800ddc4:	b510      	push	{r4, lr}
 800ddc6:	bfdc      	itt	le
 800ddc8:	6884      	ldrle	r4, [r0, #8]
 800ddca:	1912      	addle	r2, r2, r4
 800ddcc:	2a01      	cmp	r2, #1
 800ddce:	dd16      	ble.n	800ddfe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800ddd0:	2424      	movs	r4, #36	@ 0x24
 800ddd2:	6842      	ldr	r2, [r0, #4]
 800ddd4:	fb04 2303 	mla	r3, r4, r3, r2
 800ddd8:	f101 0220 	add.w	r2, r1, #32
 800dddc:	f851 4b04 	ldr.w	r4, [r1], #4
 800dde0:	4291      	cmp	r1, r2
 800dde2:	f843 4b04 	str.w	r4, [r3], #4
 800dde6:	d1f9      	bne.n	800dddc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800dde8:	780a      	ldrb	r2, [r1, #0]
 800ddea:	701a      	strb	r2, [r3, #0]
 800ddec:	68c3      	ldr	r3, [r0, #12]
 800ddee:	6882      	ldr	r2, [r0, #8]
 800ddf0:	3301      	adds	r3, #1
 800ddf2:	429a      	cmp	r2, r3
 800ddf4:	bfd8      	it	le
 800ddf6:	1a9b      	suble	r3, r3, r2
 800ddf8:	f3bf 8f5b 	dmb	ish
 800ddfc:	60c3      	str	r3, [r0, #12]
 800ddfe:	bd10      	pop	{r4, pc}

0800de00 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800de00:	6903      	ldr	r3, [r0, #16]
 800de02:	6882      	ldr	r2, [r0, #8]
 800de04:	3301      	adds	r3, #1
 800de06:	429a      	cmp	r2, r3
 800de08:	bfd8      	it	le
 800de0a:	1a9b      	suble	r3, r3, r2
 800de0c:	f3bf 8f5b 	dmb	ish
 800de10:	6103      	str	r3, [r0, #16]
 800de12:	4770      	bx	lr

0800de14 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800de14:	b570      	push	{r4, r5, r6, lr}
 800de16:	4604      	mov	r4, r0
 800de18:	460e      	mov	r6, r1
 800de1a:	6860      	ldr	r0, [r4, #4]
 800de1c:	6803      	ldr	r3, [r0, #0]
 800de1e:	685b      	ldr	r3, [r3, #4]
 800de20:	4798      	blx	r3
 800de22:	2800      	cmp	r0, #0
 800de24:	d1f9      	bne.n	800de1a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800de26:	4d0d      	ldr	r5, [pc, #52]	@ (800de5c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800de28:	6828      	ldr	r0, [r5, #0]
 800de2a:	6803      	ldr	r3, [r0, #0]
 800de2c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800de30:	4798      	blx	r3
 800de32:	f7fd f983 	bl	800b13c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800de36:	6828      	ldr	r0, [r5, #0]
 800de38:	2101      	movs	r1, #1
 800de3a:	f7ff ff2b 	bl	800dc94 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800de3e:	6860      	ldr	r0, [r4, #4]
 800de40:	4631      	mov	r1, r6
 800de42:	6803      	ldr	r3, [r0, #0]
 800de44:	689b      	ldr	r3, [r3, #8]
 800de46:	4798      	blx	r3
 800de48:	6823      	ldr	r3, [r4, #0]
 800de4a:	4620      	mov	r0, r4
 800de4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de4e:	4798      	blx	r3
 800de50:	6828      	ldr	r0, [r5, #0]
 800de52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de56:	6803      	ldr	r3, [r0, #0]
 800de58:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800de5a:	4718      	bx	r3
 800de5c:	20002230 	.word	0x20002230

0800de60 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800de60:	b508      	push	{r3, lr}
 800de62:	f7fd f949 	bl	800b0f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800de66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800de6a:	f7fd b95b 	b.w	800b124 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800de6e <_ZN8touchgfx13DMA_Interface5startEv>:
 800de6e:	b510      	push	{r4, lr}
 800de70:	4604      	mov	r4, r0
 800de72:	6840      	ldr	r0, [r0, #4]
 800de74:	6803      	ldr	r3, [r0, #0]
 800de76:	681b      	ldr	r3, [r3, #0]
 800de78:	4798      	blx	r3
 800de7a:	b948      	cbnz	r0, 800de90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800de7c:	7a63      	ldrb	r3, [r4, #9]
 800de7e:	b13b      	cbz	r3, 800de90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800de80:	7a23      	ldrb	r3, [r4, #8]
 800de82:	b92b      	cbnz	r3, 800de90 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800de84:	6823      	ldr	r3, [r4, #0]
 800de86:	4620      	mov	r0, r4
 800de88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de8c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800de8e:	4718      	bx	r3
 800de90:	bd10      	pop	{r4, pc}

0800de92 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800de92:	b570      	push	{r4, r5, r6, lr}
 800de94:	4604      	mov	r4, r0
 800de96:	6840      	ldr	r0, [r0, #4]
 800de98:	6803      	ldr	r3, [r0, #0]
 800de9a:	681b      	ldr	r3, [r3, #0]
 800de9c:	4798      	blx	r3
 800de9e:	4605      	mov	r5, r0
 800dea0:	b930      	cbnz	r0, 800deb0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800dea2:	7a23      	ldrb	r3, [r4, #8]
 800dea4:	b123      	cbz	r3, 800deb0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800dea6:	6860      	ldr	r0, [r4, #4]
 800dea8:	6803      	ldr	r3, [r0, #0]
 800deaa:	695b      	ldr	r3, [r3, #20]
 800deac:	4798      	blx	r3
 800deae:	7225      	strb	r5, [r4, #8]
 800deb0:	6860      	ldr	r0, [r4, #4]
 800deb2:	6803      	ldr	r3, [r0, #0]
 800deb4:	681b      	ldr	r3, [r3, #0]
 800deb6:	4798      	blx	r3
 800deb8:	b928      	cbnz	r0, 800dec6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800deba:	6823      	ldr	r3, [r4, #0]
 800debc:	4620      	mov	r0, r4
 800debe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dec2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dec4:	4718      	bx	r3
 800dec6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800deca:	f7fd b943 	b.w	800b154 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800ded0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ded0:	6082      	str	r2, [r0, #8]
 800ded2:	2200      	movs	r2, #0
 800ded4:	b510      	push	{r4, lr}
 800ded6:	4c03      	ldr	r4, [pc, #12]	@ (800dee4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ded8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800dedc:	e9c0 4100 	strd	r4, r1, [r0]
 800dee0:	bd10      	pop	{r4, pc}
 800dee2:	bf00      	nop
 800dee4:	08024948 	.word	0x08024948

0800dee8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800dee8:	6840      	ldr	r0, [r0, #4]
 800deea:	6803      	ldr	r3, [r0, #0]
 800deec:	681b      	ldr	r3, [r3, #0]
 800deee:	4718      	bx	r3

0800def0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800def0:	2000      	movs	r0, #0
 800def2:	4770      	bx	lr

0800def4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800def4:	4b07      	ldr	r3, [pc, #28]	@ (800df14 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800def6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800def8:	881b      	ldrh	r3, [r3, #0]
 800defa:	4293      	cmp	r3, r2
 800defc:	bf81      	itttt	hi
 800defe:	4b06      	ldrhi	r3, [pc, #24]	@ (800df18 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800df00:	681b      	ldrhi	r3, [r3, #0]
 800df02:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800df06:	7858      	ldrbhi	r0, [r3, #1]
 800df08:	bf8c      	ite	hi
 800df0a:	f000 0003 	andhi.w	r0, r0, #3
 800df0e:	2000      	movls	r0, #0
 800df10:	4770      	bx	lr
 800df12:	bf00      	nop
 800df14:	20002284 	.word	0x20002284
 800df18:	20002280 	.word	0x20002280

0800df1c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800df1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df20:	4b10      	ldr	r3, [pc, #64]	@ (800df64 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800df22:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800df24:	881b      	ldrh	r3, [r3, #0]
 800df26:	4604      	mov	r4, r0
 800df28:	428b      	cmp	r3, r1
 800df2a:	d918      	bls.n	800df5e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800df2c:	6803      	ldr	r3, [r0, #0]
 800df2e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800df30:	4b0d      	ldr	r3, [pc, #52]	@ (800df68 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800df32:	6818      	ldr	r0, [r3, #0]
 800df34:	f7fc fa2e 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800df38:	6823      	ldr	r3, [r4, #0]
 800df3a:	4606      	mov	r6, r0
 800df3c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800df3e:	4620      	mov	r0, r4
 800df40:	4798      	blx	r3
 800df42:	6823      	ldr	r3, [r4, #0]
 800df44:	4607      	mov	r7, r0
 800df46:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800df4a:	4620      	mov	r0, r4
 800df4c:	4798      	blx	r3
 800df4e:	463a      	mov	r2, r7
 800df50:	4603      	mov	r3, r0
 800df52:	4631      	mov	r1, r6
 800df54:	4620      	mov	r0, r4
 800df56:	46ac      	mov	ip, r5
 800df58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800df5c:	4760      	bx	ip
 800df5e:	2000      	movs	r0, #0
 800df60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df64:	20002284 	.word	0x20002284
 800df68:	2000228c 	.word	0x2000228c

0800df6c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800df6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df70:	4b17      	ldr	r3, [pc, #92]	@ (800dfd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800df72:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800df74:	881b      	ldrh	r3, [r3, #0]
 800df76:	4604      	mov	r4, r0
 800df78:	428b      	cmp	r3, r1
 800df7a:	d926      	bls.n	800dfca <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800df7c:	4b15      	ldr	r3, [pc, #84]	@ (800dfd4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800df7e:	681b      	ldr	r3, [r3, #0]
 800df80:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800df84:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800df88:	4b13      	ldr	r3, [pc, #76]	@ (800dfd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800df8a:	7855      	ldrb	r5, [r2, #1]
 800df8c:	681b      	ldr	r3, [r3, #0]
 800df8e:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800df92:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800df96:	6833      	ldr	r3, [r6, #0]
 800df98:	69df      	ldr	r7, [r3, #28]
 800df9a:	4b10      	ldr	r3, [pc, #64]	@ (800dfdc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800df9c:	6818      	ldr	r0, [r3, #0]
 800df9e:	f7fc f9f9 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800dfa2:	6823      	ldr	r3, [r4, #0]
 800dfa4:	4680      	mov	r8, r0
 800dfa6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800dfa8:	4620      	mov	r0, r4
 800dfaa:	4798      	blx	r3
 800dfac:	6823      	ldr	r3, [r4, #0]
 800dfae:	4681      	mov	r9, r0
 800dfb0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800dfb4:	4620      	mov	r0, r4
 800dfb6:	4798      	blx	r3
 800dfb8:	464b      	mov	r3, r9
 800dfba:	9000      	str	r0, [sp, #0]
 800dfbc:	4642      	mov	r2, r8
 800dfbe:	4629      	mov	r1, r5
 800dfc0:	4630      	mov	r0, r6
 800dfc2:	47b8      	blx	r7
 800dfc4:	b003      	add	sp, #12
 800dfc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dfca:	2000      	movs	r0, #0
 800dfcc:	e7fa      	b.n	800dfc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dfce:	bf00      	nop
 800dfd0:	20002284 	.word	0x20002284
 800dfd4:	20002280 	.word	0x20002280
 800dfd8:	20002288 	.word	0x20002288
 800dfdc:	2000228c 	.word	0x2000228c

0800dfe0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dfe0:	b40e      	push	{r1, r2, r3}
 800dfe2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dfe6:	4b2f      	ldr	r3, [pc, #188]	@ (800e0a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dfe8:	b09d      	sub	sp, #116	@ 0x74
 800dfea:	881a      	ldrh	r2, [r3, #0]
 800dfec:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800dfee:	4604      	mov	r4, r0
 800dff0:	429a      	cmp	r2, r3
 800dff2:	d954      	bls.n	800e09e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dff4:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800e0a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dff8:	aa26      	add	r2, sp, #152	@ 0x98
 800dffa:	9202      	str	r2, [sp, #8]
 800dffc:	f8df 80ac 	ldr.w	r8, [pc, #172]	@ 800e0ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e000:	f8d9 2000 	ldr.w	r2, [r9]
 800e004:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e008:	f8d8 3000 	ldr.w	r3, [r8]
 800e00c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e010:	682b      	ldr	r3, [r5, #0]
 800e012:	4628      	mov	r0, r5
 800e014:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e016:	4798      	blx	r3
 800e018:	b207      	sxth	r7, r0
 800e01a:	4606      	mov	r6, r0
 800e01c:	a803      	add	r0, sp, #12
 800e01e:	f003 fe73 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 800e022:	682b      	ldr	r3, [r5, #0]
 800e024:	4628      	mov	r0, r5
 800e026:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e028:	4798      	blx	r3
 800e02a:	682b      	ldr	r3, [r5, #0]
 800e02c:	4682      	mov	sl, r0
 800e02e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e030:	4628      	mov	r0, r5
 800e032:	4798      	blx	r3
 800e034:	4653      	mov	r3, sl
 800e036:	9000      	str	r0, [sp, #0]
 800e038:	9a02      	ldr	r2, [sp, #8]
 800e03a:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800e03c:	a803      	add	r0, sp, #12
 800e03e:	f003 febe 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e042:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e044:	f8d9 3000 	ldr.w	r3, [r9]
 800e048:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800e04c:	8925      	ldrh	r5, [r4, #8]
 800e04e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e052:	eba5 050c 	sub.w	r5, r5, ip
 800e056:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e05a:	b22d      	sxth	r5, r5
 800e05c:	784a      	ldrb	r2, [r1, #1]
 800e05e:	f8d8 3000 	ldr.w	r3, [r8]
 800e062:	9500      	str	r5, [sp, #0]
 800e064:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e068:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800e06c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e070:	a803      	add	r0, sp, #12
 800e072:	f001 fbbd 	bl	800f7f0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e076:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800e07a:	b203      	sxth	r3, r0
 800e07c:	18b9      	adds	r1, r7, r2
 800e07e:	2900      	cmp	r1, #0
 800e080:	dd0b      	ble.n	800e09a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e082:	3b01      	subs	r3, #1
 800e084:	fb13 f302 	smulbb	r3, r3, r2
 800e088:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e08c:	b21f      	sxth	r7, r3
 800e08e:	4638      	mov	r0, r7
 800e090:	b01d      	add	sp, #116	@ 0x74
 800e092:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e096:	b003      	add	sp, #12
 800e098:	4770      	bx	lr
 800e09a:	2b00      	cmp	r3, #0
 800e09c:	dcf7      	bgt.n	800e08e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e09e:	2700      	movs	r7, #0
 800e0a0:	e7f5      	b.n	800e08e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e0a2:	bf00      	nop
 800e0a4:	20002284 	.word	0x20002284
 800e0a8:	20002280 	.word	0x20002280
 800e0ac:	20002288 	.word	0x20002288

0800e0b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0b4:	4bbc      	ldr	r3, [pc, #752]	@ (800e3a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e0b6:	460c      	mov	r4, r1
 800e0b8:	881b      	ldrh	r3, [r3, #0]
 800e0ba:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800e0bc:	b0a9      	sub	sp, #164	@ 0xa4
 800e0be:	428b      	cmp	r3, r1
 800e0c0:	4680      	mov	r8, r0
 800e0c2:	d809      	bhi.n	800e0d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e0c4:	2300      	movs	r3, #0
 800e0c6:	f04f 32ff 	mov.w	r2, #4294967295
 800e0ca:	e9c0 3200 	strd	r3, r2, [r0]
 800e0ce:	6083      	str	r3, [r0, #8]
 800e0d0:	4640      	mov	r0, r8
 800e0d2:	b029      	add	sp, #164	@ 0xa4
 800e0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e0d8:	4eb4      	ldr	r6, [pc, #720]	@ (800e3ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e0da:	6833      	ldr	r3, [r6, #0]
 800e0dc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e0e0:	4bb3      	ldr	r3, [pc, #716]	@ (800e3b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e0e2:	681b      	ldr	r3, [r3, #0]
 800e0e4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e0e8:	4bb2      	ldr	r3, [pc, #712]	@ (800e3b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e0ea:	6818      	ldr	r0, [r3, #0]
 800e0ec:	f7fc f952 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e0f0:	682b      	ldr	r3, [r5, #0]
 800e0f2:	4681      	mov	r9, r0
 800e0f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0f6:	4628      	mov	r0, r5
 800e0f8:	4798      	blx	r3
 800e0fa:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800e0fc:	b203      	sxth	r3, r0
 800e0fe:	4407      	add	r7, r0
 800e100:	9304      	str	r3, [sp, #16]
 800e102:	b2bb      	uxth	r3, r7
 800e104:	9303      	str	r3, [sp, #12]
 800e106:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e10a:	4682      	mov	sl, r0
 800e10c:	a80f      	add	r0, sp, #60	@ 0x3c
 800e10e:	2b00      	cmp	r3, #0
 800e110:	f040 80a5 	bne.w	800e25e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
 800e114:	f003 fdf8 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 800e118:	682b      	ldr	r3, [r5, #0]
 800e11a:	4628      	mov	r0, r5
 800e11c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e11e:	4798      	blx	r3
 800e120:	682b      	ldr	r3, [r5, #0]
 800e122:	4606      	mov	r6, r0
 800e124:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e126:	4628      	mov	r0, r5
 800e128:	4798      	blx	r3
 800e12a:	6823      	ldr	r3, [r4, #0]
 800e12c:	4607      	mov	r7, r0
 800e12e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e130:	4620      	mov	r0, r4
 800e132:	4798      	blx	r3
 800e134:	6823      	ldr	r3, [r4, #0]
 800e136:	4683      	mov	fp, r0
 800e138:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e13c:	4620      	mov	r0, r4
 800e13e:	4798      	blx	r3
 800e140:	4632      	mov	r2, r6
 800e142:	2600      	movs	r6, #0
 800e144:	463b      	mov	r3, r7
 800e146:	4637      	mov	r7, r6
 800e148:	e9cd b000 	strd	fp, r0, [sp]
 800e14c:	4649      	mov	r1, r9
 800e14e:	a80f      	add	r0, sp, #60	@ 0x3c
 800e150:	f003 fe4a 	bl	8011de8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e154:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e158:	f8df b250 	ldr.w	fp, [pc, #592]	@ 800e3ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e15c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e160:	bf0c      	ite	eq
 800e162:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e166:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e16a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e16c:	f8db 3000 	ldr.w	r3, [fp]
 800e170:	4629      	mov	r1, r5
 800e172:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e176:	785b      	ldrb	r3, [r3, #1]
 800e178:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800e17c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e180:	a80f      	add	r0, sp, #60	@ 0x3c
 800e182:	f001 f83e 	bl	800f202 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e186:	4286      	cmp	r6, r0
 800e188:	bfb8      	it	lt
 800e18a:	4606      	movlt	r6, r0
 800e18c:	9b03      	ldr	r3, [sp, #12]
 800e18e:	3701      	adds	r7, #1
 800e190:	eba9 0903 	sub.w	r9, r9, r3
 800e194:	a80f      	add	r0, sp, #60	@ 0x3c
 800e196:	b236      	sxth	r6, r6
 800e198:	b2bf      	uxth	r7, r7
 800e19a:	fa0f f989 	sxth.w	r9, r9
 800e19e:	f003 fdda 	bl	8011d56 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e1a2:	b918      	cbnz	r0, 800e1ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800e1a4:	7a2b      	ldrb	r3, [r5, #8]
 800e1a6:	444b      	add	r3, r9
 800e1a8:	2b00      	cmp	r3, #0
 800e1aa:	dcde      	bgt.n	800e16a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
 800e1ac:	9b03      	ldr	r3, [sp, #12]
 800e1ae:	9a04      	ldr	r2, [sp, #16]
 800e1b0:	fb13 f707 	smulbb	r7, r3, r7
 800e1b4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e1b6:	4620      	mov	r0, r4
 800e1b8:	1aff      	subs	r7, r7, r3
 800e1ba:	b2bf      	uxth	r7, r7
 800e1bc:	b23b      	sxth	r3, r7
 800e1be:	429a      	cmp	r2, r3
 800e1c0:	bfa8      	it	ge
 800e1c2:	4657      	movge	r7, sl
 800e1c4:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e1c8:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e1cc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e1d0:	6823      	ldr	r3, [r4, #0]
 800e1d2:	bf08      	it	eq
 800e1d4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e1d8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e1da:	bf18      	it	ne
 800e1dc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e1e0:	4798      	blx	r3
 800e1e2:	444f      	add	r7, r9
 800e1e4:	fa1f f987 	uxth.w	r9, r7
 800e1e8:	2801      	cmp	r0, #1
 800e1ea:	fa0f f789 	sxth.w	r7, r9
 800e1ee:	b2b3      	uxth	r3, r6
 800e1f0:	f000 80e2 	beq.w	800e3b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e1f4:	2802      	cmp	r0, #2
 800e1f6:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800e1fa:	f000 80e3 	beq.w	800e3c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e1fe:	7aea      	ldrb	r2, [r5, #11]
 800e200:	7b2d      	ldrb	r5, [r5, #12]
 800e202:	b236      	sxth	r6, r6
 800e204:	1ab6      	subs	r6, r6, r2
 800e206:	442a      	add	r2, r5
 800e208:	4413      	add	r3, r2
 800e20a:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800e20e:	fa1f fa86 	uxth.w	sl, r6
 800e212:	b29b      	uxth	r3, r3
 800e214:	2a02      	cmp	r2, #2
 800e216:	fa0f fb8a 	sxth.w	fp, sl
 800e21a:	b21e      	sxth	r6, r3
 800e21c:	f000 80d6 	beq.w	800e3cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e220:	2a03      	cmp	r2, #3
 800e222:	f000 80de 	beq.w	800e3e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e226:	2a01      	cmp	r2, #1
 800e228:	f040 80e6 	bne.w	800e3f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e22c:	4633      	mov	r3, r6
 800e22e:	463e      	mov	r6, r7
 800e230:	461f      	mov	r7, r3
 800e232:	8925      	ldrh	r5, [r4, #8]
 800e234:	eba5 0909 	sub.w	r9, r5, r9
 800e238:	465d      	mov	r5, fp
 800e23a:	fa0f fb89 	sxth.w	fp, r9
 800e23e:	4b5d      	ldr	r3, [pc, #372]	@ (800e3b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e240:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e242:	6818      	ldr	r0, [r3, #0]
 800e244:	f7fc f8a6 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e248:	f8a8 b000 	strh.w	fp, [r8]
 800e24c:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e250:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e254:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e258:	f8c8 0008 	str.w	r0, [r8, #8]
 800e25c:	e738      	b.n	800e0d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e25e:	f003 fd53 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 800e262:	682b      	ldr	r3, [r5, #0]
 800e264:	4628      	mov	r0, r5
 800e266:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e268:	4798      	blx	r3
 800e26a:	682b      	ldr	r3, [r5, #0]
 800e26c:	4607      	mov	r7, r0
 800e26e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e270:	4628      	mov	r0, r5
 800e272:	4798      	blx	r3
 800e274:	6823      	ldr	r3, [r4, #0]
 800e276:	4683      	mov	fp, r0
 800e278:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e27a:	4620      	mov	r0, r4
 800e27c:	4798      	blx	r3
 800e27e:	6822      	ldr	r2, [r4, #0]
 800e280:	9005      	str	r0, [sp, #20]
 800e282:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800e286:	4620      	mov	r0, r4
 800e288:	4790      	blx	r2
 800e28a:	9b05      	ldr	r3, [sp, #20]
 800e28c:	463a      	mov	r2, r7
 800e28e:	4649      	mov	r1, r9
 800e290:	9001      	str	r0, [sp, #4]
 800e292:	9300      	str	r3, [sp, #0]
 800e294:	a80f      	add	r0, sp, #60	@ 0x3c
 800e296:	465b      	mov	r3, fp
 800e298:	f003 fda6 	bl	8011de8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e29c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e2a0:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e2a4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e2a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e2ac:	bf0a      	itet	eq
 800e2ae:	464a      	moveq	r2, r9
 800e2b0:	461a      	movne	r2, r3
 800e2b2:	4699      	moveq	r9, r3
 800e2b4:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800e2b8:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e2ba:	1ad2      	subs	r2, r2, r3
 800e2bc:	6833      	ldr	r3, [r6, #0]
 800e2be:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800e2c2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e2c6:	7859      	ldrb	r1, [r3, #1]
 800e2c8:	2300      	movs	r3, #0
 800e2ca:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800e2ce:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e2d2:	af0f      	add	r7, sp, #60	@ 0x3c
 800e2d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e2d8:	9707      	str	r7, [sp, #28]
 800e2da:	f88d 1020 	strb.w	r1, [sp, #32]
 800e2de:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e2e2:	9509      	str	r5, [sp, #36]	@ 0x24
 800e2e4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e2e8:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800e2ec:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800e2f0:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e2f4:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800e2f8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e2fc:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800e300:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e304:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e308:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800e30c:	b350      	cbz	r0, 800e364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800e30e:	682b      	ldr	r3, [r5, #0]
 800e310:	4628      	mov	r0, r5
 800e312:	695b      	ldr	r3, [r3, #20]
 800e314:	4798      	blx	r3
 800e316:	4607      	mov	r7, r0
 800e318:	b320      	cbz	r0, 800e364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800e31a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e31c:	4639      	mov	r1, r7
 800e31e:	6803      	ldr	r3, [r0, #0]
 800e320:	68db      	ldr	r3, [r3, #12]
 800e322:	4798      	blx	r3
 800e324:	4606      	mov	r6, r0
 800e326:	b1e8      	cbz	r0, 800e364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800e328:	7b43      	ldrb	r3, [r0, #13]
 800e32a:	7a82      	ldrb	r2, [r0, #10]
 800e32c:	005b      	lsls	r3, r3, #1
 800e32e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e332:	4313      	orrs	r3, r2
 800e334:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e338:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800e33c:	2b06      	cmp	r3, #6
 800e33e:	d111      	bne.n	800e364 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
 800e340:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e342:	4632      	mov	r2, r6
 800e344:	6803      	ldr	r3, [r0, #0]
 800e346:	4639      	mov	r1, r7
 800e348:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e34a:	4798      	blx	r3
 800e34c:	7b73      	ldrb	r3, [r6, #13]
 800e34e:	005b      	lsls	r3, r3, #1
 800e350:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e354:	7ab3      	ldrb	r3, [r6, #10]
 800e356:	4313      	orrs	r3, r2
 800e358:	4418      	add	r0, r3
 800e35a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e35e:	4418      	add	r0, r3
 800e360:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800e364:	2600      	movs	r6, #0
 800e366:	4637      	mov	r7, r6
 800e368:	a806      	add	r0, sp, #24
 800e36a:	f001 f93f 	bl	800f5ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e36e:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800e372:	9b03      	ldr	r3, [sp, #12]
 800e374:	4286      	cmp	r6, r0
 800e376:	bfb8      	it	lt
 800e378:	4606      	movlt	r6, r0
 800e37a:	eba9 0903 	sub.w	r9, r9, r3
 800e37e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e382:	3701      	adds	r7, #1
 800e384:	b236      	sxth	r6, r6
 800e386:	b2bf      	uxth	r7, r7
 800e388:	fa0f f989 	sxth.w	r9, r9
 800e38c:	2b00      	cmp	r3, #0
 800e38e:	f43f af0d 	beq.w	800e1ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800e392:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800e396:	2b00      	cmp	r3, #0
 800e398:	f47f af08 	bne.w	800e1ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800e39c:	7a2b      	ldrb	r3, [r5, #8]
 800e39e:	444b      	add	r3, r9
 800e3a0:	2b00      	cmp	r3, #0
 800e3a2:	dce1      	bgt.n	800e368 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
 800e3a4:	e702      	b.n	800e1ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800e3a6:	bf00      	nop
 800e3a8:	20002284 	.word	0x20002284
 800e3ac:	20002280 	.word	0x20002280
 800e3b0:	20002288 	.word	0x20002288
 800e3b4:	2000228c 	.word	0x2000228c
 800e3b8:	2002      	movs	r0, #2
 800e3ba:	ebaa 0606 	sub.w	r6, sl, r6
 800e3be:	fb96 f6f0 	sdiv	r6, r6, r0
 800e3c2:	e71c      	b.n	800e1fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800e3c4:	441e      	add	r6, r3
 800e3c6:	ebaa 0606 	sub.w	r6, sl, r6
 800e3ca:	e718      	b.n	800e1fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800e3cc:	8925      	ldrh	r5, [r4, #8]
 800e3ce:	1aed      	subs	r5, r5, r3
 800e3d0:	eba5 050a 	sub.w	r5, r5, sl
 800e3d4:	fa0f fb85 	sxth.w	fp, r5
 800e3d8:	8965      	ldrh	r5, [r4, #10]
 800e3da:	eba5 0509 	sub.w	r5, r5, r9
 800e3de:	b22d      	sxth	r5, r5
 800e3e0:	e72d      	b.n	800e23e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800e3e2:	8965      	ldrh	r5, [r4, #10]
 800e3e4:	f04f 0b00 	mov.w	fp, #0
 800e3e8:	1aed      	subs	r5, r5, r3
 800e3ea:	4633      	mov	r3, r6
 800e3ec:	eba5 050a 	sub.w	r5, r5, sl
 800e3f0:	463e      	mov	r6, r7
 800e3f2:	b22d      	sxth	r5, r5
 800e3f4:	461f      	mov	r7, r3
 800e3f6:	e722      	b.n	800e23e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800e3f8:	2500      	movs	r5, #0
 800e3fa:	e720      	b.n	800e23e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

0800e3fc <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e3fc:	b513      	push	{r0, r1, r4, lr}
 800e3fe:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800e402:	4604      	mov	r4, r0
 800e404:	b1fb      	cbz	r3, 800e446 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e406:	4b16      	ldr	r3, [pc, #88]	@ (800e460 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e408:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e40a:	881b      	ldrh	r3, [r3, #0]
 800e40c:	428b      	cmp	r3, r1
 800e40e:	d91a      	bls.n	800e446 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e410:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e414:	2b00      	cmp	r3, #0
 800e416:	dd16      	ble.n	800e446 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e418:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e41c:	2b00      	cmp	r3, #0
 800e41e:	dd12      	ble.n	800e446 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e420:	4b10      	ldr	r3, [pc, #64]	@ (800e464 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e422:	6818      	ldr	r0, [r3, #0]
 800e424:	f7fb ffb6 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e428:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e42c:	6822      	ldr	r2, [r4, #0]
 800e42e:	2b00      	cmp	r3, #0
 800e430:	db06      	blt.n	800e440 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e432:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e436:	2b00      	cmp	r3, #0
 800e438:	db02      	blt.n	800e440 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e43a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e43c:	4298      	cmp	r0, r3
 800e43e:	d004      	beq.n	800e44a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e440:	6953      	ldr	r3, [r2, #20]
 800e442:	4620      	mov	r0, r4
 800e444:	4798      	blx	r3
 800e446:	b002      	add	sp, #8
 800e448:	bd10      	pop	{r4, pc}
 800e44a:	466b      	mov	r3, sp
 800e44c:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800e450:	c903      	ldmia	r1, {r0, r1}
 800e452:	6912      	ldr	r2, [r2, #16]
 800e454:	e883 0003 	stmia.w	r3, {r0, r1}
 800e458:	4619      	mov	r1, r3
 800e45a:	4620      	mov	r0, r4
 800e45c:	4790      	blx	r2
 800e45e:	e7f2      	b.n	800e446 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e460:	20002284 	.word	0x20002284
 800e464:	2000228c 	.word	0x2000228c

0800e468 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e468:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e46c:	4b44      	ldr	r3, [pc, #272]	@ (800e580 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e46e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e470:	881b      	ldrh	r3, [r3, #0]
 800e472:	b08e      	sub	sp, #56	@ 0x38
 800e474:	4293      	cmp	r3, r2
 800e476:	4604      	mov	r4, r0
 800e478:	d97e      	bls.n	800e578 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e47a:	6808      	ldr	r0, [r1, #0]
 800e47c:	4d41      	ldr	r5, [pc, #260]	@ (800e584 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e47e:	6849      	ldr	r1, [r1, #4]
 800e480:	ab05      	add	r3, sp, #20
 800e482:	c303      	stmia	r3!, {r0, r1}
 800e484:	4611      	mov	r1, r2
 800e486:	6828      	ldr	r0, [r5, #0]
 800e488:	f7fb ff84 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e48c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e490:	2b00      	cmp	r3, #0
 800e492:	db11      	blt.n	800e4b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e494:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e498:	2b00      	cmp	r3, #0
 800e49a:	db0d      	blt.n	800e4b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e49c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e49e:	4298      	cmp	r0, r3
 800e4a0:	d10a      	bne.n	800e4b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e4a2:	ab09      	add	r3, sp, #36	@ 0x24
 800e4a4:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800e4a8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e4ac:	e883 0003 	stmia.w	r3, {r0, r1}
 800e4b0:	4619      	mov	r1, r3
 800e4b2:	a805      	add	r0, sp, #20
 800e4b4:	f7fe fce0 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 800e4b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e4bc:	2b00      	cmp	r3, #0
 800e4be:	dd5b      	ble.n	800e578 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4c0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	dd57      	ble.n	800e578 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4c8:	4f2f      	ldr	r7, [pc, #188]	@ (800e588 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e4ca:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e4cc:	683b      	ldr	r3, [r7, #0]
 800e4ce:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e4d2:	4b2e      	ldr	r3, [pc, #184]	@ (800e58c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e4d4:	681b      	ldr	r3, [r3, #0]
 800e4d6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e4da:	2e00      	cmp	r6, #0
 800e4dc:	d04c      	beq.n	800e578 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e4de:	6823      	ldr	r3, [r4, #0]
 800e4e0:	4620      	mov	r0, r4
 800e4e2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e4e4:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800e4e8:	4798      	blx	r3
 800e4ea:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e4ec:	683b      	ldr	r3, [r7, #0]
 800e4ee:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800e4f2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e4f6:	785b      	ldrb	r3, [r3, #1]
 800e4f8:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800e4fc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e500:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800e504:	4b22      	ldr	r3, [pc, #136]	@ (800e590 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e506:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800e50a:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800e50e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800e510:	681b      	ldr	r3, [r3, #0]
 800e512:	9609      	str	r6, [sp, #36]	@ 0x24
 800e514:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800e518:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800e51c:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e51e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800e522:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800e526:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800e52a:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800e52e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e532:	b10a      	cbz	r2, 800e538 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e534:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800e536:	b906      	cbnz	r6, 800e53a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e538:	689e      	ldr	r6, [r3, #8]
 800e53a:	af07      	add	r7, sp, #28
 800e53c:	4621      	mov	r1, r4
 800e53e:	4638      	mov	r0, r7
 800e540:	f003 f82c 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e544:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e546:	6828      	ldr	r0, [r5, #0]
 800e548:	f7fb ff24 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e54c:	6823      	ldr	r3, [r4, #0]
 800e54e:	4605      	mov	r5, r0
 800e550:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e552:	4620      	mov	r0, r4
 800e554:	4798      	blx	r3
 800e556:	6823      	ldr	r3, [r4, #0]
 800e558:	4680      	mov	r8, r0
 800e55a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e55e:	4620      	mov	r0, r4
 800e560:	4798      	blx	r3
 800e562:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e566:	ab09      	add	r3, sp, #36	@ 0x24
 800e568:	9300      	str	r3, [sp, #0]
 800e56a:	9501      	str	r5, [sp, #4]
 800e56c:	ab05      	add	r3, sp, #20
 800e56e:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e572:	4630      	mov	r0, r6
 800e574:	f7fb fe9f 	bl	800a2b6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e578:	b00e      	add	sp, #56	@ 0x38
 800e57a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e57e:	bf00      	nop
 800e580:	20002284 	.word	0x20002284
 800e584:	2000228c 	.word	0x2000228c
 800e588:	20002280 	.word	0x20002280
 800e58c:	20002288 	.word	0x20002288
 800e590:	20002230 	.word	0x20002230

0800e594 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e594:	b538      	push	{r3, r4, r5, lr}
 800e596:	4b0e      	ldr	r3, [pc, #56]	@ (800e5d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e598:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e59a:	881b      	ldrh	r3, [r3, #0]
 800e59c:	4604      	mov	r4, r0
 800e59e:	429a      	cmp	r2, r3
 800e5a0:	d214      	bcs.n	800e5cc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e5a2:	6803      	ldr	r3, [r0, #0]
 800e5a4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800e5a6:	4798      	blx	r3
 800e5a8:	6823      	ldr	r3, [r4, #0]
 800e5aa:	4605      	mov	r5, r0
 800e5ac:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800e5ae:	4620      	mov	r0, r4
 800e5b0:	4798      	blx	r3
 800e5b2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e5b6:	b22d      	sxth	r5, r5
 800e5b8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e5bc:	4601      	mov	r1, r0
 800e5be:	bf06      	itte	eq
 800e5c0:	4602      	moveq	r2, r0
 800e5c2:	4629      	moveq	r1, r5
 800e5c4:	462a      	movne	r2, r5
 800e5c6:	4620      	mov	r0, r4
 800e5c8:	f7fa fcb5 	bl	8008f36 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e5cc:	bd38      	pop	{r3, r4, r5, pc}
 800e5ce:	bf00      	nop
 800e5d0:	20002284 	.word	0x20002284

0800e5d4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e5d4:	b530      	push	{r4, r5, lr}
 800e5d6:	888b      	ldrh	r3, [r1, #4]
 800e5d8:	b085      	sub	sp, #20
 800e5da:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800e5dc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e5e0:	4604      	mov	r4, r0
 800e5e2:	b923      	cbnz	r3, 800e5ee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e5e4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e5e8:	b90b      	cbnz	r3, 800e5ee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e5ea:	f7ff ffd3 	bl	800e594 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e5ee:	466d      	mov	r5, sp
 800e5f0:	6823      	ldr	r3, [r4, #0]
 800e5f2:	4621      	mov	r1, r4
 800e5f4:	4628      	mov	r0, r5
 800e5f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800e5fa:	4798      	blx	r3
 800e5fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e600:	343c      	adds	r4, #60	@ 0x3c
 800e602:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e606:	b005      	add	sp, #20
 800e608:	bd30      	pop	{r4, r5, pc}

0800e60a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e60a:	2300      	movs	r3, #0
 800e60c:	8083      	strh	r3, [r0, #4]
 800e60e:	80c3      	strh	r3, [r0, #6]
 800e610:	8003      	strh	r3, [r0, #0]
 800e612:	8043      	strh	r3, [r0, #2]
 800e614:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e618:	2bff      	cmp	r3, #255	@ 0xff
 800e61a:	bf01      	itttt	eq
 800e61c:	890b      	ldrheq	r3, [r1, #8]
 800e61e:	8083      	strheq	r3, [r0, #4]
 800e620:	894b      	ldrheq	r3, [r1, #10]
 800e622:	80c3      	strheq	r3, [r0, #6]
 800e624:	4770      	bx	lr
	...

0800e628 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e628:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e62a:	4604      	mov	r4, r0
 800e62c:	466b      	mov	r3, sp
 800e62e:	6808      	ldr	r0, [r1, #0]
 800e630:	6849      	ldr	r1, [r1, #4]
 800e632:	c303      	stmia	r3!, {r0, r1}
 800e634:	6823      	ldr	r3, [r4, #0]
 800e636:	4669      	mov	r1, sp
 800e638:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e63a:	4620      	mov	r0, r4
 800e63c:	4798      	blx	r3
 800e63e:	4b08      	ldr	r3, [pc, #32]	@ (800e660 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e640:	681b      	ldr	r3, [r3, #0]
 800e642:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e646:	b10a      	cbz	r2, 800e64c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e648:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800e64a:	b900      	cbnz	r0, 800e64e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e64c:	6898      	ldr	r0, [r3, #8]
 800e64e:	6803      	ldr	r3, [r0, #0]
 800e650:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800e652:	6a1d      	ldr	r5, [r3, #32]
 800e654:	4669      	mov	r1, sp
 800e656:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800e65a:	47a8      	blx	r5
 800e65c:	b003      	add	sp, #12
 800e65e:	bd30      	pop	{r4, r5, pc}
 800e660:	20002230 	.word	0x20002230

0800e664 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e664:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800e668:	b12a      	cbz	r2, 800e676 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e66a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e66e:	b112      	cbz	r2, 800e676 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e670:	6803      	ldr	r3, [r0, #0]
 800e672:	695b      	ldr	r3, [r3, #20]
 800e674:	4718      	bx	r3
 800e676:	4770      	bx	lr

0800e678 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e678:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e67c:	4b2f      	ldr	r3, [pc, #188]	@ (800e73c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e67e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e680:	881b      	ldrh	r3, [r3, #0]
 800e682:	b08d      	sub	sp, #52	@ 0x34
 800e684:	4293      	cmp	r3, r2
 800e686:	4604      	mov	r4, r0
 800e688:	460f      	mov	r7, r1
 800e68a:	d954      	bls.n	800e736 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e68c:	4b2c      	ldr	r3, [pc, #176]	@ (800e740 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e68e:	6819      	ldr	r1, [r3, #0]
 800e690:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e694:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e698:	4a2a      	ldr	r2, [pc, #168]	@ (800e744 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e69a:	6812      	ldr	r2, [r2, #0]
 800e69c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e6a0:	2900      	cmp	r1, #0
 800e6a2:	d048      	beq.n	800e736 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e6a4:	785a      	ldrb	r2, [r3, #1]
 800e6a6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e6aa:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e6ae:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800e6b2:	4b25      	ldr	r3, [pc, #148]	@ (800e748 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e6b4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e6b8:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800e6bc:	681a      	ldr	r2, [r3, #0]
 800e6be:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800e6c2:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800e6c6:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800e6ca:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800e6cc:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800e6d0:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800e6d4:	9107      	str	r1, [sp, #28]
 800e6d6:	f88d 8020 	strb.w	r8, [sp, #32]
 800e6da:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800e6de:	9609      	str	r6, [sp, #36]	@ 0x24
 800e6e0:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800e6e4:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800e6e8:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800e6ec:	b10b      	cbz	r3, 800e6f2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e6ee:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800e6f0:	b905      	cbnz	r5, 800e6f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e6f2:	6895      	ldr	r5, [r2, #8]
 800e6f4:	ae05      	add	r6, sp, #20
 800e6f6:	4621      	mov	r1, r4
 800e6f8:	4630      	mov	r0, r6
 800e6fa:	f002 ff4f 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e6fe:	4b13      	ldr	r3, [pc, #76]	@ (800e74c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e700:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e702:	6818      	ldr	r0, [r3, #0]
 800e704:	f7fb fe46 	bl	800a394 <_ZNK8touchgfx5Texts7getTextEt>
 800e708:	6823      	ldr	r3, [r4, #0]
 800e70a:	4680      	mov	r8, r0
 800e70c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e70e:	4620      	mov	r0, r4
 800e710:	4798      	blx	r3
 800e712:	6823      	ldr	r3, [r4, #0]
 800e714:	4681      	mov	r9, r0
 800e716:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e71a:	4620      	mov	r0, r4
 800e71c:	4798      	blx	r3
 800e71e:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e722:	ab07      	add	r3, sp, #28
 800e724:	9300      	str	r3, [sp, #0]
 800e726:	f8cd 8004 	str.w	r8, [sp, #4]
 800e72a:	463b      	mov	r3, r7
 800e72c:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e730:	4628      	mov	r0, r5
 800e732:	f7fb fdc0 	bl	800a2b6 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e736:	b00d      	add	sp, #52	@ 0x34
 800e738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e73c:	20002284 	.word	0x20002284
 800e740:	20002280 	.word	0x20002280
 800e744:	20002288 	.word	0x20002288
 800e748:	20002230 	.word	0x20002230
 800e74c:	2000228c 	.word	0x2000228c

0800e750 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e750:	b510      	push	{r4, lr}
 800e752:	6803      	ldr	r3, [r0, #0]
 800e754:	460c      	mov	r4, r1
 800e756:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e758:	4798      	blx	r3
 800e75a:	1b03      	subs	r3, r0, r4
 800e75c:	4258      	negs	r0, r3
 800e75e:	4158      	adcs	r0, r3
 800e760:	bd10      	pop	{r4, pc}
	...

0800e764 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e764:	4b01      	ldr	r3, [pc, #4]	@ (800e76c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e766:	6019      	str	r1, [r3, #0]
 800e768:	4770      	bx	lr
 800e76a:	bf00      	nop
 800e76c:	20002238 	.word	0x20002238

0800e770 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e774:	4696      	mov	lr, r2
 800e776:	4614      	mov	r4, r2
 800e778:	4605      	mov	r5, r0
 800e77a:	460e      	mov	r6, r1
 800e77c:	461f      	mov	r7, r3
 800e77e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e782:	b097      	sub	sp, #92	@ 0x5c
 800e784:	f10d 0c1c 	add.w	ip, sp, #28
 800e788:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e78c:	f8de 3000 	ldr.w	r3, [lr]
 800e790:	f104 0e14 	add.w	lr, r4, #20
 800e794:	f8cc 3000 	str.w	r3, [ip]
 800e798:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e79c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7a4:	f8de 3000 	ldr.w	r3, [lr]
 800e7a8:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e7ac:	f8cc 3000 	str.w	r3, [ip]
 800e7b0:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e7b4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800e7c0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800e7c4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800e7c8:	f8de 3000 	ldr.w	r3, [lr]
 800e7cc:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e7ce:	f8cc 3000 	str.w	r3, [ip]
 800e7d2:	9201      	str	r2, [sp, #4]
 800e7d4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e7d8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e7da:	682b      	ldr	r3, [r5, #0]
 800e7dc:	9200      	str	r2, [sp, #0]
 800e7de:	f8cd 8008 	str.w	r8, [sp, #8]
 800e7e2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800e7e6:	aa07      	add	r2, sp, #28
 800e7e8:	463b      	mov	r3, r7
 800e7ea:	4631      	mov	r1, r6
 800e7ec:	4628      	mov	r0, r5
 800e7ee:	47d8      	blx	fp
 800e7f0:	46a6      	mov	lr, r4
 800e7f2:	f10d 0c1c 	add.w	ip, sp, #28
 800e7f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e7fa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e7fe:	f8de 3000 	ldr.w	r3, [lr]
 800e802:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800e806:	f8cc 3000 	str.w	r3, [ip]
 800e80a:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800e80e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e812:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e816:	f8de 3000 	ldr.w	r3, [lr]
 800e81a:	343c      	adds	r4, #60	@ 0x3c
 800e81c:	f8cc 3000 	str.w	r3, [ip]
 800e820:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800e824:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e826:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e82a:	6823      	ldr	r3, [r4, #0]
 800e82c:	4631      	mov	r1, r6
 800e82e:	f8cc 3000 	str.w	r3, [ip]
 800e832:	682b      	ldr	r3, [r5, #0]
 800e834:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e838:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800e83a:	f8cd 8008 	str.w	r8, [sp, #8]
 800e83e:	9201      	str	r2, [sp, #4]
 800e840:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800e842:	4628      	mov	r0, r5
 800e844:	9200      	str	r2, [sp, #0]
 800e846:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800e848:	aa07      	add	r2, sp, #28
 800e84a:	463b      	mov	r3, r7
 800e84c:	47a0      	blx	r4
 800e84e:	b017      	add	sp, #92	@ 0x5c
 800e850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e854 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800e854:	2000      	movs	r0, #0
 800e856:	4770      	bx	lr

0800e858 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e85c:	b08d      	sub	sp, #52	@ 0x34
 800e85e:	4688      	mov	r8, r1
 800e860:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800e862:	f8d3 c000 	ldr.w	ip, [r3]
 800e866:	680f      	ldr	r7, [r1, #0]
 800e868:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800e86c:	eba7 070c 	sub.w	r7, r7, ip
 800e870:	42bc      	cmp	r4, r7
 800e872:	bfa8      	it	ge
 800e874:	463c      	movge	r4, r7
 800e876:	ee07 4a90 	vmov	s15, r4
 800e87a:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800e87e:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e882:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800e886:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800e88a:	edd3 6a07 	vldr	s13, [r3, #28]
 800e88e:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e892:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e896:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e89a:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800e89e:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800e8a2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800e8a6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e8aa:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800e8ac:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800e8b0:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e8b4:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e8b8:	eb09 0e0c 	add.w	lr, r9, ip
 800e8bc:	4571      	cmp	r1, lr
 800e8be:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e8c2:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e8c6:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e8ca:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e8ce:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e8d2:	f340 808c 	ble.w	800e9ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800e8d6:	eba1 060e 	sub.w	r6, r1, lr
 800e8da:	fb96 f5f4 	sdiv	r5, r6, r4
 800e8de:	ee07 5a10 	vmov	s14, r5
 800e8e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e8e6:	2d00      	cmp	r5, #0
 800e8e8:	fb04 6615 	mls	r6, r4, r5, r6
 800e8ec:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e8f0:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e8f4:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e8f8:	dd12      	ble.n	800e920 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800e8fa:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e8fe:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e906:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e90a:	bf14      	ite	ne
 800e90c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e910:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e914:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e918:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e91c:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e920:	fb05 f204 	mul.w	r2, r5, r4
 800e924:	1abf      	subs	r7, r7, r2
 800e926:	4494      	add	ip, r2
 800e928:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e92c:	4411      	add	r1, r2
 800e92e:	eb09 020c 	add.w	r2, r9, ip
 800e932:	443a      	add	r2, r7
 800e934:	b209      	sxth	r1, r1
 800e936:	428a      	cmp	r2, r1
 800e938:	bfc4      	itt	gt
 800e93a:	eba1 0209 	subgt.w	r2, r1, r9
 800e93e:	eba2 070c 	subgt.w	r7, r2, ip
 800e942:	2f00      	cmp	r7, #0
 800e944:	dd50      	ble.n	800e9e8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800e946:	fb97 f1f4 	sdiv	r1, r7, r4
 800e94a:	fb04 7211 	mls	r2, r4, r1, r7
 800e94e:	b90a      	cbnz	r2, 800e954 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800e950:	4622      	mov	r2, r4
 800e952:	3901      	subs	r1, #1
 800e954:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e958:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e95c:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e960:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e964:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e968:	ee17 7a90 	vmov	r7, s15
 800e96c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e970:	eef0 6a42 	vmov.f32	s13, s4
 800e974:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e978:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e97c:	ee17 ca90 	vmov	ip, s15
 800e980:	eeb0 7a61 	vmov.f32	s14, s3
 800e984:	6840      	ldr	r0, [r0, #4]
 800e986:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800e98a:	f8d0 a000 	ldr.w	sl, [r0]
 800e98e:	900b      	str	r0, [sp, #44]	@ 0x2c
 800e990:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800e992:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800e996:	9008      	str	r0, [sp, #32]
 800e998:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800e99a:	695b      	ldr	r3, [r3, #20]
 800e99c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e9a0:	fb9c fcf4 	sdiv	ip, ip, r4
 800e9a4:	445b      	add	r3, fp
 800e9a6:	9307      	str	r3, [sp, #28]
 800e9a8:	ee16 3a90 	vmov	r3, s13
 800e9ac:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e9b0:	fb0c 3306 	mla	r3, ip, r6, r3
 800e9b4:	fb97 f7f4 	sdiv	r7, r7, r4
 800e9b8:	9302      	str	r3, [sp, #8]
 800e9ba:	ee17 3a10 	vmov	r3, s14
 800e9be:	2900      	cmp	r1, #0
 800e9c0:	bfcc      	ite	gt
 800e9c2:	46a1      	movgt	r9, r4
 800e9c4:	4691      	movle	r9, r2
 800e9c6:	44b6      	add	lr, r6
 800e9c8:	fb04 e505 	mla	r5, r4, r5, lr
 800e9cc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e9d0:	fb07 3706 	mla	r7, r7, r6, r3
 800e9d4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e9d8:	e9cd 4700 	strd	r4, r7, [sp]
 800e9dc:	eba9 0306 	sub.w	r3, r9, r6
 800e9e0:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e9e4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800e9e6:	47a0      	blx	r4
 800e9e8:	b00d      	add	sp, #52	@ 0x34
 800e9ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9ee:	2500      	movs	r5, #0
 800e9f0:	462e      	mov	r6, r5
 800e9f2:	e799      	b.n	800e928 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800e9f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e9f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9f8:	461d      	mov	r5, r3
 800e9fa:	b0db      	sub	sp, #364	@ 0x16c
 800e9fc:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800ea00:	910f      	str	r1, [sp, #60]	@ 0x3c
 800ea02:	930a      	str	r3, [sp, #40]	@ 0x28
 800ea04:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800ea08:	9009      	str	r0, [sp, #36]	@ 0x24
 800ea0a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ea0c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800ea10:	4614      	mov	r4, r2
 800ea12:	9310      	str	r3, [sp, #64]	@ 0x40
 800ea14:	6803      	ldr	r3, [r0, #0]
 800ea16:	4629      	mov	r1, r5
 800ea18:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800ea1a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800ea1e:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800ea22:	47b8      	blx	r7
 800ea24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ea26:	6058      	str	r0, [r3, #4]
 800ea28:	2800      	cmp	r0, #0
 800ea2a:	f000 83a1 	beq.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea2e:	ed94 7a02 	vldr	s14, [r4, #8]
 800ea32:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800ea36:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea3a:	682b      	ldr	r3, [r5, #0]
 800ea3c:	9314      	str	r3, [sp, #80]	@ 0x50
 800ea3e:	686b      	ldr	r3, [r5, #4]
 800ea40:	9315      	str	r3, [sp, #84]	@ 0x54
 800ea42:	4bc1      	ldr	r3, [pc, #772]	@ (800ed48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800ea44:	7819      	ldrb	r1, [r3, #0]
 800ea46:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ea4a:	2900      	cmp	r1, #0
 800ea4c:	bf16      	itet	ne
 800ea4e:	4619      	movne	r1, r3
 800ea50:	4611      	moveq	r1, r2
 800ea52:	4613      	movne	r3, r2
 800ea54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea58:	9116      	str	r1, [sp, #88]	@ 0x58
 800ea5a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800ea5e:	f240 8387 	bls.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea62:	ed94 7a07 	vldr	s14, [r4, #28]
 800ea66:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea6e:	f240 837f 	bls.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea72:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800ea76:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ea7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea7e:	f240 8377 	bls.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea82:	6822      	ldr	r2, [r4, #0]
 800ea84:	4bb1      	ldr	r3, [pc, #708]	@ (800ed4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ea86:	429a      	cmp	r2, r3
 800ea88:	f2c0 8372 	blt.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea8c:	49b0      	ldr	r1, [pc, #704]	@ (800ed50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ea8e:	6963      	ldr	r3, [r4, #20]
 800ea90:	428a      	cmp	r2, r1
 800ea92:	f300 836d 	bgt.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea96:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800ea9a:	48ae      	ldr	r0, [pc, #696]	@ (800ed54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ea9c:	33ff      	adds	r3, #255	@ 0xff
 800ea9e:	4283      	cmp	r3, r0
 800eaa0:	f200 8366 	bhi.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eaa4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800eaa6:	4dac      	ldr	r5, [pc, #688]	@ (800ed58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800eaa8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800eaac:	33ff      	adds	r3, #255	@ 0xff
 800eaae:	42ab      	cmp	r3, r5
 800eab0:	f200 835e 	bhi.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eab4:	6862      	ldr	r2, [r4, #4]
 800eab6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800eaba:	33ff      	adds	r3, #255	@ 0xff
 800eabc:	4283      	cmp	r3, r0
 800eabe:	f200 8357 	bhi.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eac2:	69a1      	ldr	r1, [r4, #24]
 800eac4:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800eac8:	33ff      	adds	r3, #255	@ 0xff
 800eaca:	4283      	cmp	r3, r0
 800eacc:	f200 8350 	bhi.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ead0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800ead2:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800ead6:	30ff      	adds	r0, #255	@ 0xff
 800ead8:	42a8      	cmp	r0, r5
 800eada:	f200 8349 	bhi.w	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eade:	428a      	cmp	r2, r1
 800eae0:	f280 8110 	bge.w	800ed04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800eae4:	429a      	cmp	r2, r3
 800eae6:	f300 8119 	bgt.w	800ed1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800eaea:	4299      	cmp	r1, r3
 800eaec:	f280 811d 	bge.w	800ed2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800eaf0:	2502      	movs	r5, #2
 800eaf2:	2701      	movs	r7, #1
 800eaf4:	46a9      	mov	r9, r5
 800eaf6:	46b8      	mov	r8, r7
 800eaf8:	f04f 0a00 	mov.w	sl, #0
 800eafc:	4621      	mov	r1, r4
 800eafe:	a849      	add	r0, sp, #292	@ 0x124
 800eb00:	f003 fe74 	bl	80127ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800eb04:	4622      	mov	r2, r4
 800eb06:	4653      	mov	r3, sl
 800eb08:	a949      	add	r1, sp, #292	@ 0x124
 800eb0a:	f8cd 9000 	str.w	r9, [sp]
 800eb0e:	a819      	add	r0, sp, #100	@ 0x64
 800eb10:	f003 ff9e 	bl	8012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb14:	4622      	mov	r2, r4
 800eb16:	4653      	mov	r3, sl
 800eb18:	a949      	add	r1, sp, #292	@ 0x124
 800eb1a:	f8cd 8000 	str.w	r8, [sp]
 800eb1e:	a829      	add	r0, sp, #164	@ 0xa4
 800eb20:	f003 ff96 	bl	8012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb24:	4643      	mov	r3, r8
 800eb26:	4622      	mov	r2, r4
 800eb28:	a949      	add	r1, sp, #292	@ 0x124
 800eb2a:	f8cd 9000 	str.w	r9, [sp]
 800eb2e:	a839      	add	r0, sp, #228	@ 0xe4
 800eb30:	f003 ff8e 	bl	8012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800eb34:	42af      	cmp	r7, r5
 800eb36:	bfb5      	itete	lt
 800eb38:	2300      	movlt	r3, #0
 800eb3a:	2301      	movge	r3, #1
 800eb3c:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800eb3e:	930e      	strge	r3, [sp, #56]	@ 0x38
 800eb40:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800eb42:	af12      	add	r7, sp, #72	@ 0x48
 800eb44:	e893 0003 	ldmia.w	r3, {r0, r1}
 800eb48:	bfb9      	ittee	lt
 800eb4a:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800eb4c:	ac19      	addlt	r4, sp, #100	@ 0x64
 800eb4e:	ad19      	addge	r5, sp, #100	@ 0x64
 800eb50:	ac29      	addge	r4, sp, #164	@ 0xa4
 800eb52:	e887 0003 	stmia.w	r7, {r0, r1}
 800eb56:	b928      	cbnz	r0, 800eb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800eb58:	4b80      	ldr	r3, [pc, #512]	@ (800ed5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800eb5a:	6818      	ldr	r0, [r3, #0]
 800eb5c:	6803      	ldr	r3, [r0, #0]
 800eb5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb60:	4798      	blx	r3
 800eb62:	6038      	str	r0, [r7, #0]
 800eb64:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eb66:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800eb6a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800eb6e:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800eb70:	930c      	str	r3, [sp, #48]	@ 0x30
 800eb72:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eb74:	6963      	ldr	r3, [r4, #20]
 800eb76:	440b      	add	r3, r1
 800eb78:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eb7c:	4408      	add	r0, r1
 800eb7e:	b200      	sxth	r0, r0
 800eb80:	4283      	cmp	r3, r0
 800eb82:	900d      	str	r0, [sp, #52]	@ 0x34
 800eb84:	f280 80dd 	bge.w	800ed42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800eb88:	428b      	cmp	r3, r1
 800eb8a:	da08      	bge.n	800eb9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eb8c:	2a00      	cmp	r2, #0
 800eb8e:	dd06      	ble.n	800eb9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800eb90:	1acb      	subs	r3, r1, r3
 800eb92:	429a      	cmp	r2, r3
 800eb94:	f2c0 80e4 	blt.w	800ed60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800eb98:	2b00      	cmp	r3, #0
 800eb9a:	f300 80e2 	bgt.w	800ed62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800eb9e:	6967      	ldr	r7, [r4, #20]
 800eba0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800eba2:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800eba6:	443b      	add	r3, r7
 800eba8:	461f      	mov	r7, r3
 800ebaa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ebac:	1bdf      	subs	r7, r3, r7
 800ebae:	4297      	cmp	r7, r2
 800ebb0:	bfa8      	it	ge
 800ebb2:	4617      	movge	r7, r2
 800ebb4:	2f00      	cmp	r7, #0
 800ebb6:	f340 8166 	ble.w	800ee86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ebba:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ebbc:	6829      	ldr	r1, [r5, #0]
 800ebbe:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ebc2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ebc6:	4411      	add	r1, r2
 800ebc8:	4299      	cmp	r1, r3
 800ebca:	6820      	ldr	r0, [r4, #0]
 800ebcc:	dd1a      	ble.n	800ec04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ebce:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ebd2:	4402      	add	r2, r0
 800ebd4:	440b      	add	r3, r1
 800ebd6:	b21b      	sxth	r3, r3
 800ebd8:	429a      	cmp	r2, r3
 800ebda:	dc13      	bgt.n	800ec04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ebdc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ebde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ebe0:	a912      	add	r1, sp, #72	@ 0x48
 800ebe2:	681b      	ldr	r3, [r3, #0]
 800ebe4:	9206      	str	r2, [sp, #24]
 800ebe6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ebe8:	9500      	str	r5, [sp, #0]
 800ebea:	9205      	str	r2, [sp, #20]
 800ebec:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ebee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ebf0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ebf4:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ebf6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ebfa:	aa49      	add	r2, sp, #292	@ 0x124
 800ebfc:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ec00:	4623      	mov	r3, r4
 800ec02:	47c8      	blx	r9
 800ec04:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ec08:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ec0c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ec10:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ec14:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ec18:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ec1c:	ed94 6a08 	vldr	s12, [r4, #32]
 800ec20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec24:	edd4 6a07 	vldr	s13, [r4, #28]
 800ec28:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ec2c:	441a      	add	r2, r3
 800ec2e:	6963      	ldr	r3, [r4, #20]
 800ec30:	68a1      	ldr	r1, [r4, #8]
 800ec32:	3301      	adds	r3, #1
 800ec34:	6163      	str	r3, [r4, #20]
 800ec36:	69a3      	ldr	r3, [r4, #24]
 800ec38:	6022      	str	r2, [r4, #0]
 800ec3a:	3b01      	subs	r3, #1
 800ec3c:	61a3      	str	r3, [r4, #24]
 800ec3e:	6923      	ldr	r3, [r4, #16]
 800ec40:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ec44:	440b      	add	r3, r1
 800ec46:	68e1      	ldr	r1, [r4, #12]
 800ec48:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec4c:	428b      	cmp	r3, r1
 800ec4e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ec52:	6123      	str	r3, [r4, #16]
 800ec54:	db15      	blt.n	800ec82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ec56:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ec5a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ec5e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ec62:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ec66:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ec6a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ec6e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800ec72:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ec76:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ec7a:	3201      	adds	r2, #1
 800ec7c:	1a5b      	subs	r3, r3, r1
 800ec7e:	6022      	str	r2, [r4, #0]
 800ec80:	6123      	str	r3, [r4, #16]
 800ec82:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800ec86:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ec8a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800ec8e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800ec92:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ec96:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800ec9a:	ed95 6a08 	vldr	s12, [r5, #32]
 800ec9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eca2:	edd5 6a07 	vldr	s13, [r5, #28]
 800eca6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ecaa:	441a      	add	r2, r3
 800ecac:	696b      	ldr	r3, [r5, #20]
 800ecae:	68a9      	ldr	r1, [r5, #8]
 800ecb0:	3301      	adds	r3, #1
 800ecb2:	616b      	str	r3, [r5, #20]
 800ecb4:	69ab      	ldr	r3, [r5, #24]
 800ecb6:	602a      	str	r2, [r5, #0]
 800ecb8:	3b01      	subs	r3, #1
 800ecba:	61ab      	str	r3, [r5, #24]
 800ecbc:	692b      	ldr	r3, [r5, #16]
 800ecbe:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ecc2:	440b      	add	r3, r1
 800ecc4:	68e9      	ldr	r1, [r5, #12]
 800ecc6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ecca:	428b      	cmp	r3, r1
 800eccc:	edc5 6a07 	vstr	s13, [r5, #28]
 800ecd0:	612b      	str	r3, [r5, #16]
 800ecd2:	db15      	blt.n	800ed00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ecd4:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800ecd8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ecdc:	edc5 6a07 	vstr	s13, [r5, #28]
 800ece0:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800ece4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ece8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800ecec:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800ecf0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ecf4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800ecf8:	3201      	adds	r2, #1
 800ecfa:	1a5b      	subs	r3, r3, r1
 800ecfc:	602a      	str	r2, [r5, #0]
 800ecfe:	612b      	str	r3, [r5, #16]
 800ed00:	3f01      	subs	r7, #1
 800ed02:	e757      	b.n	800ebb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ed04:	4299      	cmp	r1, r3
 800ed06:	dc13      	bgt.n	800ed30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ed08:	429a      	cmp	r2, r3
 800ed0a:	da14      	bge.n	800ed36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ed0c:	2502      	movs	r5, #2
 800ed0e:	2703      	movs	r7, #3
 800ed10:	46a9      	mov	r9, r5
 800ed12:	f04f 0800 	mov.w	r8, #0
 800ed16:	f04f 0a01 	mov.w	sl, #1
 800ed1a:	e6ef      	b.n	800eafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed1c:	2501      	movs	r5, #1
 800ed1e:	2700      	movs	r7, #0
 800ed20:	46a9      	mov	r9, r5
 800ed22:	46b8      	mov	r8, r7
 800ed24:	f04f 0a02 	mov.w	sl, #2
 800ed28:	e6e8      	b.n	800eafc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ed2a:	2501      	movs	r5, #1
 800ed2c:	2702      	movs	r7, #2
 800ed2e:	e6e1      	b.n	800eaf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ed30:	2500      	movs	r5, #0
 800ed32:	2701      	movs	r7, #1
 800ed34:	e7f4      	b.n	800ed20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ed36:	2702      	movs	r7, #2
 800ed38:	2503      	movs	r5, #3
 800ed3a:	f04f 0900 	mov.w	r9, #0
 800ed3e:	46b8      	mov	r8, r7
 800ed40:	e7e9      	b.n	800ed16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ed42:	4613      	mov	r3, r2
 800ed44:	e728      	b.n	800eb98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ed46:	bf00      	nop
 800ed48:	20002228 	.word	0x20002228
 800ed4c:	fffd8f01 	.word	0xfffd8f01
 800ed50:	00027100 	.word	0x00027100
 800ed54:	0004e1ff 	.word	0x0004e1ff
 800ed58:	0004e1fe 	.word	0x0004e1fe
 800ed5c:	20002230 	.word	0x20002230
 800ed60:	4613      	mov	r3, r2
 800ed62:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800ed66:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800ed6a:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800ed6e:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800ed72:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800ed76:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800ed7a:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800ed7e:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800ed82:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800ed86:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800ed8a:	469e      	mov	lr, r3
 800ed8c:	469c      	mov	ip, r3
 800ed8e:	f04f 0900 	mov.w	r9, #0
 800ed92:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ed94:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800ed96:	9111      	str	r1, [sp, #68]	@ 0x44
 800ed98:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800ed9c:	f1bc 0f00 	cmp.w	ip, #0
 800eda0:	d147      	bne.n	800ee32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800eda2:	eb03 0c07 	add.w	ip, r3, r7
 800eda6:	1ad7      	subs	r7, r2, r3
 800eda8:	f1b9 0f00 	cmp.w	r9, #0
 800edac:	d009      	beq.n	800edc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800edae:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800edb2:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800edb6:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800edba:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800edbe:	9029      	str	r0, [sp, #164]	@ 0xa4
 800edc0:	912d      	str	r1, [sp, #180]	@ 0xb4
 800edc2:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800edc6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800edca:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800edce:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800edd2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800edd6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800edda:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800edde:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ede2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ede6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800edea:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800edee:	f04f 0800 	mov.w	r8, #0
 800edf2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800edf4:	9111      	str	r1, [sp, #68]	@ 0x44
 800edf6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800edfa:	f1be 0f00 	cmp.w	lr, #0
 800edfe:	d031      	beq.n	800ee64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ee00:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ee02:	4450      	add	r0, sl
 800ee04:	4431      	add	r1, r6
 800ee06:	4549      	cmp	r1, r9
 800ee08:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ee0c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ee10:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ee14:	db08      	blt.n	800ee28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ee16:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ee1a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ee1e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ee22:	3001      	adds	r0, #1
 800ee24:	eba1 0109 	sub.w	r1, r1, r9
 800ee28:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ee2c:	f04f 0801 	mov.w	r8, #1
 800ee30:	e7e3      	b.n	800edfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ee32:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800ee34:	4450      	add	r0, sl
 800ee36:	4431      	add	r1, r6
 800ee38:	4541      	cmp	r1, r8
 800ee3a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ee3e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ee42:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ee46:	db08      	blt.n	800ee5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ee48:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ee4c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ee50:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ee54:	3001      	adds	r0, #1
 800ee56:	eba1 0108 	sub.w	r1, r1, r8
 800ee5a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ee5e:	f04f 0901 	mov.w	r9, #1
 800ee62:	e79b      	b.n	800ed9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ee64:	449c      	add	ip, r3
 800ee66:	1aff      	subs	r7, r7, r3
 800ee68:	f1b8 0f00 	cmp.w	r8, #0
 800ee6c:	d009      	beq.n	800ee82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ee6e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800ee72:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800ee76:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800ee7a:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800ee7e:	9019      	str	r0, [sp, #100]	@ 0x64
 800ee80:	911d      	str	r1, [sp, #116]	@ 0x74
 800ee82:	1ad2      	subs	r2, r2, r3
 800ee84:	e68b      	b.n	800eb9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ee86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ee88:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800ee8a:	2b00      	cmp	r3, #0
 800ee8c:	f000 80d1 	beq.w	800f032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ee90:	ad19      	add	r5, sp, #100	@ 0x64
 800ee92:	ac39      	add	r4, sp, #228	@ 0xe4
 800ee94:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800ee96:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ee9a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ee9e:	930c      	str	r3, [sp, #48]	@ 0x30
 800eea0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800eea2:	6963      	ldr	r3, [r4, #20]
 800eea4:	440b      	add	r3, r1
 800eea6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800eeaa:	4408      	add	r0, r1
 800eeac:	b200      	sxth	r0, r0
 800eeae:	4283      	cmp	r3, r0
 800eeb0:	900d      	str	r0, [sp, #52]	@ 0x34
 800eeb2:	f280 80c1 	bge.w	800f038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800eeb6:	428b      	cmp	r3, r1
 800eeb8:	da08      	bge.n	800eecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eeba:	2a00      	cmp	r2, #0
 800eebc:	dd06      	ble.n	800eecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800eebe:	1acb      	subs	r3, r1, r3
 800eec0:	429a      	cmp	r2, r3
 800eec2:	f2c0 80bb 	blt.w	800f03c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800eec6:	2b00      	cmp	r3, #0
 800eec8:	f300 80b9 	bgt.w	800f03e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800eecc:	6967      	ldr	r7, [r4, #20]
 800eece:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800eed0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800eed4:	443b      	add	r3, r7
 800eed6:	461f      	mov	r7, r3
 800eed8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800eeda:	1bdf      	subs	r7, r3, r7
 800eedc:	4297      	cmp	r7, r2
 800eede:	bfa8      	it	ge
 800eee0:	4617      	movge	r7, r2
 800eee2:	2f00      	cmp	r7, #0
 800eee4:	f340 813c 	ble.w	800f160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800eee8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800eeea:	6829      	ldr	r1, [r5, #0]
 800eeec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eef0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800eef4:	4411      	add	r1, r2
 800eef6:	4299      	cmp	r1, r3
 800eef8:	6820      	ldr	r0, [r4, #0]
 800eefa:	dd1a      	ble.n	800ef32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800eefc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ef00:	4402      	add	r2, r0
 800ef02:	440b      	add	r3, r1
 800ef04:	b21b      	sxth	r3, r3
 800ef06:	429a      	cmp	r2, r3
 800ef08:	dc13      	bgt.n	800ef32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ef0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800ef0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ef0e:	a912      	add	r1, sp, #72	@ 0x48
 800ef10:	681b      	ldr	r3, [r3, #0]
 800ef12:	9206      	str	r2, [sp, #24]
 800ef14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ef16:	9500      	str	r5, [sp, #0]
 800ef18:	9205      	str	r2, [sp, #20]
 800ef1a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800ef1c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ef1e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ef22:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800ef24:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ef28:	aa49      	add	r2, sp, #292	@ 0x124
 800ef2a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800ef2e:	4623      	mov	r3, r4
 800ef30:	47c8      	blx	r9
 800ef32:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ef36:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800ef3a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800ef3e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800ef42:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ef46:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800ef4a:	ed94 6a08 	vldr	s12, [r4, #32]
 800ef4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef52:	edd4 6a07 	vldr	s13, [r4, #28]
 800ef56:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ef5a:	441a      	add	r2, r3
 800ef5c:	6963      	ldr	r3, [r4, #20]
 800ef5e:	68a1      	ldr	r1, [r4, #8]
 800ef60:	3301      	adds	r3, #1
 800ef62:	6163      	str	r3, [r4, #20]
 800ef64:	69a3      	ldr	r3, [r4, #24]
 800ef66:	6022      	str	r2, [r4, #0]
 800ef68:	3b01      	subs	r3, #1
 800ef6a:	61a3      	str	r3, [r4, #24]
 800ef6c:	6923      	ldr	r3, [r4, #16]
 800ef6e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ef72:	440b      	add	r3, r1
 800ef74:	68e1      	ldr	r1, [r4, #12]
 800ef76:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800ef7a:	428b      	cmp	r3, r1
 800ef7c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ef80:	6123      	str	r3, [r4, #16]
 800ef82:	db15      	blt.n	800efb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ef84:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800ef88:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ef8c:	edc4 6a07 	vstr	s13, [r4, #28]
 800ef90:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800ef94:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ef98:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800ef9c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800efa0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800efa4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800efa8:	3201      	adds	r2, #1
 800efaa:	1a5b      	subs	r3, r3, r1
 800efac:	6022      	str	r2, [r4, #0]
 800efae:	6123      	str	r3, [r4, #16]
 800efb0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800efb4:	e9d5 2300 	ldrd	r2, r3, [r5]
 800efb8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800efbc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800efc0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800efc4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800efc8:	ed95 6a08 	vldr	s12, [r5, #32]
 800efcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800efd0:	edd5 6a07 	vldr	s13, [r5, #28]
 800efd4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800efd8:	441a      	add	r2, r3
 800efda:	696b      	ldr	r3, [r5, #20]
 800efdc:	68a9      	ldr	r1, [r5, #8]
 800efde:	3301      	adds	r3, #1
 800efe0:	616b      	str	r3, [r5, #20]
 800efe2:	69ab      	ldr	r3, [r5, #24]
 800efe4:	602a      	str	r2, [r5, #0]
 800efe6:	3b01      	subs	r3, #1
 800efe8:	61ab      	str	r3, [r5, #24]
 800efea:	692b      	ldr	r3, [r5, #16]
 800efec:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800eff0:	440b      	add	r3, r1
 800eff2:	68e9      	ldr	r1, [r5, #12]
 800eff4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800eff8:	428b      	cmp	r3, r1
 800effa:	edc5 6a07 	vstr	s13, [r5, #28]
 800effe:	612b      	str	r3, [r5, #16]
 800f000:	db15      	blt.n	800f02e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f002:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f006:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f00a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f00e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f012:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f016:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f01a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f01e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f022:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f026:	3201      	adds	r2, #1
 800f028:	1a5b      	subs	r3, r3, r1
 800f02a:	602a      	str	r2, [r5, #0]
 800f02c:	612b      	str	r3, [r5, #16]
 800f02e:	3f01      	subs	r7, #1
 800f030:	e757      	b.n	800eee2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f032:	ad39      	add	r5, sp, #228	@ 0xe4
 800f034:	ac19      	add	r4, sp, #100	@ 0x64
 800f036:	e72d      	b.n	800ee94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f038:	4613      	mov	r3, r2
 800f03a:	e744      	b.n	800eec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f03c:	4613      	mov	r3, r2
 800f03e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f042:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f046:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f04a:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f04e:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f052:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f056:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f05a:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f05e:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f062:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f066:	469e      	mov	lr, r3
 800f068:	461f      	mov	r7, r3
 800f06a:	f04f 0900 	mov.w	r9, #0
 800f06e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f070:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f074:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f076:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f07a:	960e      	str	r6, [sp, #56]	@ 0x38
 800f07c:	2f00      	cmp	r7, #0
 800f07e:	d146      	bne.n	800f10e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f080:	449c      	add	ip, r3
 800f082:	1ad7      	subs	r7, r2, r3
 800f084:	f1b9 0f00 	cmp.w	r9, #0
 800f088:	d009      	beq.n	800f09e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f08a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f08e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f092:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f096:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f09a:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f09c:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f09e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f0a2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f0a6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f0aa:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f0ae:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f0b2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f0b6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f0ba:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f0be:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f0c2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f0c6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f0ca:	f04f 0800 	mov.w	r8, #0
 800f0ce:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f0d0:	910e      	str	r1, [sp, #56]	@ 0x38
 800f0d2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f0d6:	f1be 0f00 	cmp.w	lr, #0
 800f0da:	d030      	beq.n	800f13e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f0dc:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f0de:	4450      	add	r0, sl
 800f0e0:	4431      	add	r1, r6
 800f0e2:	4549      	cmp	r1, r9
 800f0e4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f0e8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f0ec:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f0f0:	db08      	blt.n	800f104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f0f2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f0f6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f0fa:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f0fe:	3001      	adds	r0, #1
 800f100:	eba1 0109 	sub.w	r1, r1, r9
 800f104:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f108:	f04f 0801 	mov.w	r8, #1
 800f10c:	e7e3      	b.n	800f0d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f10e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f110:	4450      	add	r0, sl
 800f112:	4431      	add	r1, r6
 800f114:	4541      	cmp	r1, r8
 800f116:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f11a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f11e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f122:	db08      	blt.n	800f136 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f124:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f128:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f12c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f130:	3001      	adds	r0, #1
 800f132:	eba1 0108 	sub.w	r1, r1, r8
 800f136:	3f01      	subs	r7, #1
 800f138:	f04f 0901 	mov.w	r9, #1
 800f13c:	e79e      	b.n	800f07c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f13e:	449c      	add	ip, r3
 800f140:	1aff      	subs	r7, r7, r3
 800f142:	f1b8 0f00 	cmp.w	r8, #0
 800f146:	d009      	beq.n	800f15c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f148:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f14c:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f150:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f154:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f158:	9019      	str	r0, [sp, #100]	@ 0x64
 800f15a:	911d      	str	r1, [sp, #116]	@ 0x74
 800f15c:	1ad2      	subs	r2, r2, r3
 800f15e:	e6b5      	b.n	800eecc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f160:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f162:	681b      	ldr	r3, [r3, #0]
 800f164:	b923      	cbnz	r3, 800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f166:	4b04      	ldr	r3, [pc, #16]	@ (800f178 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f168:	6818      	ldr	r0, [r3, #0]
 800f16a:	6803      	ldr	r3, [r0, #0]
 800f16c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f16e:	4798      	blx	r3
 800f170:	b05b      	add	sp, #364	@ 0x16c
 800f172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f176:	bf00      	nop
 800f178:	20002230 	.word	0x20002230

0800f17c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f17c:	b570      	push	{r4, r5, r6, lr}
 800f17e:	4604      	mov	r4, r0
 800f180:	2500      	movs	r5, #0
 800f182:	9805      	ldr	r0, [sp, #20]
 800f184:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f188:	6061      	str	r1, [r4, #4]
 800f18a:	8263      	strh	r3, [r4, #18]
 800f18c:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f190:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f194:	8025      	strh	r5, [r4, #0]
 800f196:	7221      	strb	r1, [r4, #8]
 800f198:	7266      	strb	r6, [r4, #9]
 800f19a:	60e0      	str	r0, [r4, #12]
 800f19c:	8222      	strh	r2, [r4, #16]
 800f19e:	82a3      	strh	r3, [r4, #20]
 800f1a0:	82e5      	strh	r5, [r4, #22]
 800f1a2:	8325      	strh	r5, [r4, #24]
 800f1a4:	8365      	strh	r5, [r4, #26]
 800f1a6:	83a5      	strh	r5, [r4, #28]
 800f1a8:	83e5      	strh	r5, [r4, #30]
 800f1aa:	8425      	strh	r5, [r4, #32]
 800f1ac:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800f1b0:	b32e      	cbz	r6, 800f1fe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f1b2:	6803      	ldr	r3, [r0, #0]
 800f1b4:	695b      	ldr	r3, [r3, #20]
 800f1b6:	4798      	blx	r3
 800f1b8:	4606      	mov	r6, r0
 800f1ba:	b300      	cbz	r0, 800f1fe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f1bc:	68e0      	ldr	r0, [r4, #12]
 800f1be:	4631      	mov	r1, r6
 800f1c0:	6803      	ldr	r3, [r0, #0]
 800f1c2:	68db      	ldr	r3, [r3, #12]
 800f1c4:	4798      	blx	r3
 800f1c6:	4605      	mov	r5, r0
 800f1c8:	b1c8      	cbz	r0, 800f1fe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f1ca:	7b43      	ldrb	r3, [r0, #13]
 800f1cc:	7a82      	ldrb	r2, [r0, #10]
 800f1ce:	005b      	lsls	r3, r3, #1
 800f1d0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f1d4:	4313      	orrs	r3, r2
 800f1d6:	8423      	strh	r3, [r4, #32]
 800f1d8:	7a63      	ldrb	r3, [r4, #9]
 800f1da:	2b06      	cmp	r3, #6
 800f1dc:	d10f      	bne.n	800f1fe <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f1de:	68e0      	ldr	r0, [r4, #12]
 800f1e0:	462a      	mov	r2, r5
 800f1e2:	6803      	ldr	r3, [r0, #0]
 800f1e4:	4631      	mov	r1, r6
 800f1e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f1e8:	4798      	blx	r3
 800f1ea:	7b6b      	ldrb	r3, [r5, #13]
 800f1ec:	005b      	lsls	r3, r3, #1
 800f1ee:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f1f2:	7aab      	ldrb	r3, [r5, #10]
 800f1f4:	4313      	orrs	r3, r2
 800f1f6:	4418      	add	r0, r3
 800f1f8:	8c23      	ldrh	r3, [r4, #32]
 800f1fa:	4418      	add	r0, r3
 800f1fc:	8420      	strh	r0, [r4, #32]
 800f1fe:	4620      	mov	r0, r4
 800f200:	bd70      	pop	{r4, r5, r6, pc}

0800f202 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f202:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f206:	2400      	movs	r4, #0
 800f208:	4681      	mov	r9, r0
 800f20a:	4688      	mov	r8, r1
 800f20c:	4692      	mov	sl, r2
 800f20e:	469b      	mov	fp, r3
 800f210:	4627      	mov	r7, r4
 800f212:	4625      	mov	r5, r4
 800f214:	4626      	mov	r6, r4
 800f216:	b085      	sub	sp, #20
 800f218:	4554      	cmp	r4, sl
 800f21a:	da2a      	bge.n	800f272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f21c:	2300      	movs	r3, #0
 800f21e:	9303      	str	r3, [sp, #12]
 800f220:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f224:	429d      	cmp	r5, r3
 800f226:	d004      	beq.n	800f232 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f228:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f22c:	429d      	cmp	r5, r3
 800f22e:	bf18      	it	ne
 800f230:	462f      	movne	r7, r5
 800f232:	ab03      	add	r3, sp, #12
 800f234:	4642      	mov	r2, r8
 800f236:	4659      	mov	r1, fp
 800f238:	4648      	mov	r0, r9
 800f23a:	f003 f8ed 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f23e:	4605      	mov	r5, r0
 800f240:	b1b8      	cbz	r0, 800f272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f242:	280a      	cmp	r0, #10
 800f244:	d015      	beq.n	800f272 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f246:	9a03      	ldr	r2, [sp, #12]
 800f248:	b18a      	cbz	r2, 800f26e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f24a:	7b50      	ldrb	r0, [r2, #13]
 800f24c:	7a93      	ldrb	r3, [r2, #10]
 800f24e:	0040      	lsls	r0, r0, #1
 800f250:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f254:	4303      	orrs	r3, r0
 800f256:	9301      	str	r3, [sp, #4]
 800f258:	f8d8 3000 	ldr.w	r3, [r8]
 800f25c:	4639      	mov	r1, r7
 800f25e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f260:	4640      	mov	r0, r8
 800f262:	8895      	ldrh	r5, [r2, #4]
 800f264:	4798      	blx	r3
 800f266:	9b01      	ldr	r3, [sp, #4]
 800f268:	4418      	add	r0, r3
 800f26a:	4406      	add	r6, r0
 800f26c:	b2b6      	uxth	r6, r6
 800f26e:	3401      	adds	r4, #1
 800f270:	e7d2      	b.n	800f218 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f272:	4630      	mov	r0, r6
 800f274:	b005      	add	sp, #20
 800f276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f27a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f27a:	2a02      	cmp	r2, #2
 800f27c:	b530      	push	{r4, r5, lr}
 800f27e:	d011      	beq.n	800f2a4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f280:	2a03      	cmp	r2, #3
 800f282:	d01c      	beq.n	800f2be <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f284:	2a01      	cmp	r2, #1
 800f286:	d10c      	bne.n	800f2a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f288:	888b      	ldrh	r3, [r1, #4]
 800f28a:	8801      	ldrh	r1, [r0, #0]
 800f28c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f290:	1a5b      	subs	r3, r3, r1
 800f292:	8844      	ldrh	r4, [r0, #2]
 800f294:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f298:	1a9b      	subs	r3, r3, r2
 800f29a:	8004      	strh	r4, [r0, #0]
 800f29c:	8043      	strh	r3, [r0, #2]
 800f29e:	8081      	strh	r1, [r0, #4]
 800f2a0:	80c2      	strh	r2, [r0, #6]
 800f2a2:	bd30      	pop	{r4, r5, pc}
 800f2a4:	88cb      	ldrh	r3, [r1, #6]
 800f2a6:	8842      	ldrh	r2, [r0, #2]
 800f2a8:	1a9b      	subs	r3, r3, r2
 800f2aa:	88c2      	ldrh	r2, [r0, #6]
 800f2ac:	1a9b      	subs	r3, r3, r2
 800f2ae:	888a      	ldrh	r2, [r1, #4]
 800f2b0:	8801      	ldrh	r1, [r0, #0]
 800f2b2:	8043      	strh	r3, [r0, #2]
 800f2b4:	1a52      	subs	r2, r2, r1
 800f2b6:	8881      	ldrh	r1, [r0, #4]
 800f2b8:	1a52      	subs	r2, r2, r1
 800f2ba:	8002      	strh	r2, [r0, #0]
 800f2bc:	e7f1      	b.n	800f2a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f2be:	88cb      	ldrh	r3, [r1, #6]
 800f2c0:	8841      	ldrh	r1, [r0, #2]
 800f2c2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f2c6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f2ca:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f2ce:	1a5b      	subs	r3, r3, r1
 800f2d0:	1a9b      	subs	r3, r3, r2
 800f2d2:	8003      	strh	r3, [r0, #0]
 800f2d4:	8045      	strh	r5, [r0, #2]
 800f2d6:	8082      	strh	r2, [r0, #4]
 800f2d8:	80c4      	strh	r4, [r0, #6]
 800f2da:	e7e2      	b.n	800f2a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f2dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f2dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2e0:	b09f      	sub	sp, #124	@ 0x7c
 800f2e2:	920f      	str	r2, [sp, #60]	@ 0x3c
 800f2e4:	9312      	str	r3, [sp, #72]	@ 0x48
 800f2e6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f2e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f2ea:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800f2ec:	8812      	ldrh	r2, [r2, #0]
 800f2ee:	889b      	ldrh	r3, [r3, #4]
 800f2f0:	900e      	str	r0, [sp, #56]	@ 0x38
 800f2f2:	4413      	add	r3, r2
 800f2f4:	6828      	ldr	r0, [r5, #0]
 800f2f6:	b21b      	sxth	r3, r3
 800f2f8:	9311      	str	r3, [sp, #68]	@ 0x44
 800f2fa:	6803      	ldr	r3, [r0, #0]
 800f2fc:	9117      	str	r1, [sp, #92]	@ 0x5c
 800f2fe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f300:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800f304:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800f308:	4798      	blx	r3
 800f30a:	682b      	ldr	r3, [r5, #0]
 800f30c:	9013      	str	r0, [sp, #76]	@ 0x4c
 800f30e:	7b1a      	ldrb	r2, [r3, #12]
 800f310:	7adb      	ldrb	r3, [r3, #11]
 800f312:	9215      	str	r2, [sp, #84]	@ 0x54
 800f314:	9316      	str	r3, [sp, #88]	@ 0x58
 800f316:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800f31a:	2c00      	cmp	r4, #0
 800f31c:	d067      	beq.n	800f3ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f31e:	7c2b      	ldrb	r3, [r5, #16]
 800f320:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800f322:	2b06      	cmp	r3, #6
 800f324:	bf14      	ite	ne
 800f326:	2301      	movne	r3, #1
 800f328:	2302      	moveq	r3, #2
 800f32a:	4413      	add	r3, r2
 800f32c:	f04f 0900 	mov.w	r9, #0
 800f330:	464c      	mov	r4, r9
 800f332:	9310      	str	r3, [sp, #64]	@ 0x40
 800f334:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800f338:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800f33c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f33e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f340:	4293      	cmp	r3, r2
 800f342:	f280 808b 	bge.w	800f45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f346:	2300      	movs	r3, #0
 800f348:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800f34c:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800f350:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f354:	429c      	cmp	r4, r3
 800f356:	d006      	beq.n	800f366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800f358:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f35c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f35e:	4294      	cmp	r4, r2
 800f360:	bf18      	it	ne
 800f362:	4623      	movne	r3, r4
 800f364:	930c      	str	r3, [sp, #48]	@ 0x30
 800f366:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f368:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800f36a:	682a      	ldr	r2, [r5, #0]
 800f36c:	428b      	cmp	r3, r1
 800f36e:	db40      	blt.n	800f3f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f370:	6813      	ldr	r3, [r2, #0]
 800f372:	4610      	mov	r0, r2
 800f374:	695b      	ldr	r3, [r3, #20]
 800f376:	4798      	blx	r3
 800f378:	4604      	mov	r4, r0
 800f37a:	6828      	ldr	r0, [r5, #0]
 800f37c:	aa1d      	add	r2, sp, #116	@ 0x74
 800f37e:	6803      	ldr	r3, [r0, #0]
 800f380:	4621      	mov	r1, r4
 800f382:	689f      	ldr	r7, [r3, #8]
 800f384:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800f388:	47b8      	blx	r7
 800f38a:	901c      	str	r0, [sp, #112]	@ 0x70
 800f38c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f390:	429c      	cmp	r4, r3
 800f392:	f000 80ea 	beq.w	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f396:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f39a:	429c      	cmp	r4, r3
 800f39c:	f000 80e5 	beq.w	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f3a0:	2c00      	cmp	r4, #0
 800f3a2:	f000 810c 	beq.w	800f5be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800f3a6:	2c0a      	cmp	r4, #10
 800f3a8:	d05e      	beq.n	800f468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f3aa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f3ac:	b36a      	cbz	r2, 800f40a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f3ae:	8894      	ldrh	r4, [r2, #4]
 800f3b0:	f1bb 0f00 	cmp.w	fp, #0
 800f3b4:	d03a      	beq.n	800f42c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800f3b6:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f3ba:	f1bb 0f01 	cmp.w	fp, #1
 800f3be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f3c2:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800f3c6:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f3ca:	ea49 0903 	orr.w	r9, r9, r3
 800f3ce:	d133      	bne.n	800f438 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800f3d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f3d2:	eba6 0609 	sub.w	r6, r6, r9
 800f3d6:	2b00      	cmp	r3, #0
 800f3d8:	d14d      	bne.n	800f476 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f3da:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800f3dc:	eb09 0306 	add.w	r3, r9, r6
 800f3e0:	4413      	add	r3, r2
 800f3e2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f3e4:	f9b2 2000 	ldrsh.w	r2, [r2]
 800f3e8:	4293      	cmp	r3, r2
 800f3ea:	da4e      	bge.n	800f48a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800f3ec:	e036      	b.n	800f45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f3ee:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800f3f0:	e79c      	b.n	800f32c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800f3f2:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800f3f6:	9301      	str	r3, [sp, #4]
 800f3f8:	ab1d      	add	r3, sp, #116	@ 0x74
 800f3fa:	9300      	str	r3, [sp, #0]
 800f3fc:	4659      	mov	r1, fp
 800f3fe:	ab1c      	add	r3, sp, #112	@ 0x70
 800f400:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800f402:	f003 f852 	bl	80124aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800f406:	4604      	mov	r4, r0
 800f408:	e7c0      	b.n	800f38c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800f40a:	6828      	ldr	r0, [r5, #0]
 800f40c:	6803      	ldr	r3, [r0, #0]
 800f40e:	691b      	ldr	r3, [r3, #16]
 800f410:	4798      	blx	r3
 800f412:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f416:	4298      	cmp	r0, r3
 800f418:	f000 80a7 	beq.w	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f41c:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f420:	4298      	cmp	r0, r3
 800f422:	f000 80a2 	beq.w	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f426:	f1bb 0f00 	cmp.w	fp, #0
 800f42a:	d100      	bne.n	800f42e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800f42c:	444e      	add	r6, r9
 800f42e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f430:	2a00      	cmp	r2, #0
 800f432:	d1c0      	bne.n	800f3b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800f434:	4691      	mov	r9, r2
 800f436:	e098      	b.n	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f438:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f43a:	2b00      	cmp	r3, #0
 800f43c:	f000 80c1 	beq.w	800f5c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800f440:	f1bb 0f00 	cmp.w	fp, #0
 800f444:	d117      	bne.n	800f476 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f446:	6828      	ldr	r0, [r5, #0]
 800f448:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f44a:	6803      	ldr	r3, [r0, #0]
 800f44c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f44e:	4798      	blx	r3
 800f450:	4406      	add	r6, r0
 800f452:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800f454:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800f456:	1af3      	subs	r3, r6, r3
 800f458:	4293      	cmp	r3, r2
 800f45a:	dd16      	ble.n	800f48a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800f45c:	2c00      	cmp	r4, #0
 800f45e:	f000 80ae 	beq.w	800f5be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800f462:	2c0a      	cmp	r4, #10
 800f464:	f040 809c 	bne.w	800f5a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800f468:	240a      	movs	r4, #10
 800f46a:	fab4 f084 	clz	r0, r4
 800f46e:	0940      	lsrs	r0, r0, #5
 800f470:	b01f      	add	sp, #124	@ 0x7c
 800f472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f476:	6828      	ldr	r0, [r5, #0]
 800f478:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f47a:	6803      	ldr	r3, [r0, #0]
 800f47c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f47e:	4798      	blx	r3
 800f480:	f1bb 0f01 	cmp.w	fp, #1
 800f484:	eba6 0600 	sub.w	r6, r6, r0
 800f488:	d0a7      	beq.n	800f3da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800f48a:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800f48c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f48e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800f492:	f9b3 8000 	ldrsh.w	r8, [r3]
 800f496:	7b43      	ldrb	r3, [r0, #13]
 800f498:	4431      	add	r1, r6
 800f49a:	015b      	lsls	r3, r3, #5
 800f49c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f4a0:	7983      	ldrb	r3, [r0, #6]
 800f4a2:	4313      	orrs	r3, r2
 800f4a4:	440b      	add	r3, r1
 800f4a6:	4543      	cmp	r3, r8
 800f4a8:	db5f      	blt.n	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f4aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800f4ac:	4299      	cmp	r1, r3
 800f4ae:	da5c      	bge.n	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f4b0:	6828      	ldr	r0, [r5, #0]
 800f4b2:	45b0      	cmp	r8, r6
 800f4b4:	6803      	ldr	r3, [r0, #0]
 800f4b6:	bfc8      	it	gt
 800f4b8:	eba8 0806 	subgt.w	r8, r8, r6
 800f4bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f4be:	bfcc      	ite	gt
 800f4c0:	fa1f f888 	uxthgt.w	r8, r8
 800f4c4:	f04f 0800 	movle.w	r8, #0
 800f4c8:	4798      	blx	r3
 800f4ca:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f4cc:	7b53      	ldrb	r3, [r2, #13]
 800f4ce:	00d9      	lsls	r1, r3, #3
 800f4d0:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800f4d4:	7a11      	ldrb	r1, [r2, #8]
 800f4d6:	4339      	orrs	r1, r7
 800f4d8:	065f      	lsls	r7, r3, #25
 800f4da:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800f4dc:	bf44      	itt	mi
 800f4de:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800f4e2:	b209      	sxthmi	r1, r1
 800f4e4:	19c7      	adds	r7, r0, r7
 800f4e6:	1a7f      	subs	r7, r7, r1
 800f4e8:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800f4ea:	b2bf      	uxth	r7, r7
 800f4ec:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800f4f0:	fa0f fa87 	sxth.w	sl, r7
 800f4f4:	4551      	cmp	r1, sl
 800f4f6:	dd3c      	ble.n	800f572 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800f4f8:	011b      	lsls	r3, r3, #4
 800f4fa:	79d0      	ldrb	r0, [r2, #7]
 800f4fc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f500:	4303      	orrs	r3, r0
 800f502:	449a      	add	sl, r3
 800f504:	4551      	cmp	r1, sl
 800f506:	dc30      	bgt.n	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f508:	468a      	mov	sl, r1
 800f50a:	1bcf      	subs	r7, r1, r7
 800f50c:	b23f      	sxth	r7, r7
 800f50e:	9219      	str	r2, [sp, #100]	@ 0x64
 800f510:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800f512:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800f514:	6828      	ldr	r0, [r5, #0]
 800f516:	2a00      	cmp	r2, #0
 800f518:	d12d      	bne.n	800f576 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800f51a:	9318      	str	r3, [sp, #96]	@ 0x60
 800f51c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f51e:	b2bf      	uxth	r7, r7
 800f520:	6819      	ldr	r1, [r3, #0]
 800f522:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800f524:	6801      	ldr	r1, [r0, #0]
 800f526:	9314      	str	r3, [sp, #80]	@ 0x50
 800f528:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800f52a:	4788      	blx	r1
 800f52c:	79a9      	ldrb	r1, [r5, #6]
 800f52e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800f530:	910b      	str	r1, [sp, #44]	@ 0x2c
 800f532:	7ba9      	ldrb	r1, [r5, #14]
 800f534:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800f536:	910a      	str	r1, [sp, #40]	@ 0x28
 800f538:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800f53c:	9109      	str	r1, [sp, #36]	@ 0x24
 800f53e:	68a9      	ldr	r1, [r5, #8]
 800f540:	9306      	str	r3, [sp, #24]
 800f542:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f544:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800f548:	44b0      	add	r8, r6
 800f54a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800f54e:	9304      	str	r3, [sp, #16]
 800f550:	fa0f f388 	sxth.w	r3, r8
 800f554:	9300      	str	r3, [sp, #0]
 800f556:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f558:	9205      	str	r2, [sp, #20]
 800f55a:	f8cd a004 	str.w	sl, [sp, #4]
 800f55e:	681a      	ldr	r2, [r3, #0]
 800f560:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800f562:	685b      	ldr	r3, [r3, #4]
 800f564:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800f566:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800f568:	47b8      	blx	r7
 800f56a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f56c:	3301      	adds	r3, #1
 800f56e:	930d      	str	r3, [sp, #52]	@ 0x34
 800f570:	e6e4      	b.n	800f33c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800f572:	2700      	movs	r7, #0
 800f574:	e7cb      	b.n	800f50e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800f576:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800f578:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800f57c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800f57e:	f8dc 1000 	ldr.w	r1, [ip]
 800f582:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800f586:	79aa      	ldrb	r2, [r5, #6]
 800f588:	9203      	str	r2, [sp, #12]
 800f58a:	7baa      	ldrb	r2, [r5, #14]
 800f58c:	9202      	str	r2, [sp, #8]
 800f58e:	68aa      	ldr	r2, [r5, #8]
 800f590:	e9cd 0200 	strd	r0, r2, [sp]
 800f594:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f596:	688f      	ldr	r7, [r1, #8]
 800f598:	4660      	mov	r0, ip
 800f59a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800f59c:	47b8      	blx	r7
 800f59e:	e7e4      	b.n	800f56a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f5a0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800f5a2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800f5a4:	3501      	adds	r5, #1
 800f5a6:	429d      	cmp	r5, r3
 800f5a8:	f6bf af5f 	bge.w	800f46a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f5ac:	4659      	mov	r1, fp
 800f5ae:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800f5b0:	f7fa fdd0 	bl	800a154 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f5b4:	4604      	mov	r4, r0
 800f5b6:	b110      	cbz	r0, 800f5be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800f5b8:	280a      	cmp	r0, #10
 800f5ba:	d1f2      	bne.n	800f5a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800f5bc:	e754      	b.n	800f468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f5be:	2400      	movs	r4, #0
 800f5c0:	e753      	b.n	800f46a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800f5c2:	f1bb 0f00 	cmp.w	fp, #0
 800f5c6:	f43f af44 	beq.w	800f452 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800f5ca:	e75e      	b.n	800f48a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800f5cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800f5cc:	b530      	push	{r4, r5, lr}
 800f5ce:	8ac4      	ldrh	r4, [r0, #22]
 800f5d0:	8b45      	ldrh	r5, [r0, #26]
 800f5d2:	8343      	strh	r3, [r0, #26]
 800f5d4:	442c      	add	r4, r5
 800f5d6:	1ae4      	subs	r4, r4, r3
 800f5d8:	82c4      	strh	r4, [r0, #22]
 800f5da:	8b83      	ldrh	r3, [r0, #28]
 800f5dc:	8b04      	ldrh	r4, [r0, #24]
 800f5de:	4422      	add	r2, r4
 800f5e0:	440c      	add	r4, r1
 800f5e2:	1a59      	subs	r1, r3, r1
 800f5e4:	83c2      	strh	r2, [r0, #30]
 800f5e6:	8304      	strh	r4, [r0, #24]
 800f5e8:	8381      	strh	r1, [r0, #28]
 800f5ea:	bd30      	pop	{r4, r5, pc}

0800f5ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800f5ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5f0:	4604      	mov	r4, r0
 800f5f2:	8a47      	ldrh	r7, [r0, #18]
 800f5f4:	68c0      	ldr	r0, [r0, #12]
 800f5f6:	b085      	sub	sp, #20
 800f5f8:	6803      	ldr	r3, [r0, #0]
 800f5fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f5fc:	4798      	blx	r3
 800f5fe:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800f602:	7a63      	ldrb	r3, [r4, #9]
 800f604:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800f608:	42b7      	cmp	r7, r6
 800f60a:	f103 33ff 	add.w	r3, r3, #4294967295
 800f60e:	bfac      	ite	ge
 800f610:	f04f 0900 	movge.w	r9, #0
 800f614:	f04f 0901 	movlt.w	r9, #1
 800f618:	2b05      	cmp	r3, #5
 800f61a:	d804      	bhi.n	800f626 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800f61c:	e8df f003 	tbb	[pc, r3]
 800f620:	460e0852 	.word	0x460e0852
 800f624:	4b4b      	.short	0x4b4b
 800f626:	2500      	movs	r5, #0
 800f628:	46a9      	mov	r9, r5
 800f62a:	462e      	mov	r6, r5
 800f62c:	462f      	mov	r7, r5
 800f62e:	e00d      	b.n	800f64c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f630:	42b7      	cmp	r7, r6
 800f632:	bfb4      	ite	lt
 800f634:	2600      	movlt	r6, #0
 800f636:	2601      	movge	r6, #1
 800f638:	2500      	movs	r5, #0
 800f63a:	e7f7      	b.n	800f62c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800f63c:	464d      	mov	r5, r9
 800f63e:	f04f 0900 	mov.w	r9, #0
 800f642:	42b7      	cmp	r7, r6
 800f644:	bfb4      	ite	lt
 800f646:	2600      	movlt	r6, #0
 800f648:	2601      	movge	r6, #1
 800f64a:	464f      	mov	r7, r9
 800f64c:	f04f 0800 	mov.w	r8, #0
 800f650:	f8a4 8016 	strh.w	r8, [r4, #22]
 800f654:	f8a4 8018 	strh.w	r8, [r4, #24]
 800f658:	f8cd 8004 	str.w	r8, [sp, #4]
 800f65c:	2300      	movs	r3, #0
 800f65e:	9303      	str	r3, [sp, #12]
 800f660:	8823      	ldrh	r3, [r4, #0]
 800f662:	2b20      	cmp	r3, #32
 800f664:	d032      	beq.n	800f6cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe0>
 800f666:	f242 010b 	movw	r1, #8203	@ 0x200b
 800f66a:	1a5a      	subs	r2, r3, r1
 800f66c:	f1d2 0a00 	rsbs	sl, r2, #0
 800f670:	eb4a 0a02 	adc.w	sl, sl, r2
 800f674:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800f678:	4293      	cmp	r3, r2
 800f67a:	d008      	beq.n	800f68e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f67c:	428b      	cmp	r3, r1
 800f67e:	9a01      	ldr	r2, [sp, #4]
 800f680:	bf16      	itet	ne
 800f682:	461a      	movne	r2, r3
 800f684:	f04f 0a01 	moveq.w	sl, #1
 800f688:	f04f 0a00 	movne.w	sl, #0
 800f68c:	9201      	str	r2, [sp, #4]
 800f68e:	ab03      	add	r3, sp, #12
 800f690:	68e2      	ldr	r2, [r4, #12]
 800f692:	7a21      	ldrb	r1, [r4, #8]
 800f694:	6860      	ldr	r0, [r4, #4]
 800f696:	f002 febf 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f69a:	8020      	strh	r0, [r4, #0]
 800f69c:	b9d0      	cbnz	r0, 800f6d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe8>
 800f69e:	2300      	movs	r3, #0
 800f6a0:	8ba2      	ldrh	r2, [r4, #28]
 800f6a2:	4611      	mov	r1, r2
 800f6a4:	4620      	mov	r0, r4
 800f6a6:	f7ff ff91 	bl	800f5cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f6aa:	e06d      	b.n	800f788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800f6ac:	2500      	movs	r5, #0
 800f6ae:	2701      	movs	r7, #1
 800f6b0:	46a9      	mov	r9, r5
 800f6b2:	462e      	mov	r6, r5
 800f6b4:	e7ca      	b.n	800f64c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f6b6:	2500      	movs	r5, #0
 800f6b8:	42b7      	cmp	r7, r6
 800f6ba:	bfb4      	ite	lt
 800f6bc:	2700      	movlt	r7, #0
 800f6be:	2701      	movge	r7, #1
 800f6c0:	462e      	mov	r6, r5
 800f6c2:	e7c3      	b.n	800f64c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800f6c4:	2500      	movs	r5, #0
 800f6c6:	2601      	movs	r6, #1
 800f6c8:	46a9      	mov	r9, r5
 800f6ca:	e7af      	b.n	800f62c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800f6cc:	9301      	str	r3, [sp, #4]
 800f6ce:	f04f 0a01 	mov.w	sl, #1
 800f6d2:	e7dc      	b.n	800f68e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 800f6d4:	8b63      	ldrh	r3, [r4, #26]
 800f6d6:	280a      	cmp	r0, #10
 800f6d8:	f103 0301 	add.w	r3, r3, #1
 800f6dc:	8363      	strh	r3, [r4, #26]
 800f6de:	d0de      	beq.n	800f69e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 800f6e0:	9a03      	ldr	r2, [sp, #12]
 800f6e2:	bb62      	cbnz	r2, 800f73e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x152>
 800f6e4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f6e8:	4298      	cmp	r0, r3
 800f6ea:	d003      	beq.n	800f6f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x108>
 800f6ec:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f6f0:	4298      	cmp	r0, r3
 800f6f2:	d1b3      	bne.n	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f6f4:	8823      	ldrh	r3, [r4, #0]
 800f6f6:	8ba1      	ldrh	r1, [r4, #28]
 800f6f8:	2b20      	cmp	r3, #32
 800f6fa:	d003      	beq.n	800f704 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x118>
 800f6fc:	f242 000b 	movw	r0, #8203	@ 0x200b
 800f700:	4283      	cmp	r3, r0
 800f702:	d131      	bne.n	800f768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17c>
 800f704:	f1ba 0f00 	cmp.w	sl, #0
 800f708:	bf0a      	itet	eq
 800f70a:	4688      	moveq	r8, r1
 800f70c:	4650      	movne	r0, sl
 800f70e:	2001      	moveq	r0, #1
 800f710:	440a      	add	r2, r1
 800f712:	8b23      	ldrh	r3, [r4, #24]
 800f714:	b292      	uxth	r2, r2
 800f716:	83a2      	strh	r2, [r4, #28]
 800f718:	4413      	add	r3, r2
 800f71a:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800f71e:	f1b9 0f00 	cmp.w	r9, #0
 800f722:	d102      	bne.n	800f72a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x13e>
 800f724:	2d00      	cmp	r5, #0
 800f726:	d042      	beq.n	800f7ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c2>
 800f728:	b300      	cbz	r0, 800f76c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800f72a:	8c21      	ldrh	r1, [r4, #32]
 800f72c:	4419      	add	r1, r3
 800f72e:	458c      	cmp	ip, r1
 800f730:	da37      	bge.n	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b6>
 800f732:	8ae1      	ldrh	r1, [r4, #22]
 800f734:	2900      	cmp	r1, #0
 800f736:	d034      	beq.n	800f7a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b6>
 800f738:	4563      	cmp	r3, ip
 800f73a:	dd8f      	ble.n	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f73c:	e01d      	b.n	800f77a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x18e>
 800f73e:	8893      	ldrh	r3, [r2, #4]
 800f740:	9901      	ldr	r1, [sp, #4]
 800f742:	8023      	strh	r3, [r4, #0]
 800f744:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f748:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f74c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800f750:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f754:	ea4b 0b00 	orr.w	fp, fp, r0
 800f758:	68e0      	ldr	r0, [r4, #12]
 800f75a:	6803      	ldr	r3, [r0, #0]
 800f75c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f75e:	4798      	blx	r3
 800f760:	eb0b 0200 	add.w	r2, fp, r0
 800f764:	b292      	uxth	r2, r2
 800f766:	e7c5      	b.n	800f6f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x108>
 800f768:	2000      	movs	r0, #0
 800f76a:	e7d1      	b.n	800f710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x124>
 800f76c:	4563      	cmp	r3, ip
 800f76e:	f77f af75 	ble.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f772:	8ae3      	ldrh	r3, [r4, #22]
 800f774:	2b00      	cmp	r3, #0
 800f776:	f43f af71 	beq.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f77a:	2301      	movs	r3, #1
 800f77c:	8c22      	ldrh	r2, [r4, #32]
 800f77e:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800f782:	8be3      	ldrh	r3, [r4, #30]
 800f784:	4413      	add	r3, r2
 800f786:	83e3      	strh	r3, [r4, #30]
 800f788:	68e0      	ldr	r0, [r4, #12]
 800f78a:	6803      	ldr	r3, [r0, #0]
 800f78c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f78e:	4798      	blx	r3
 800f790:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f794:	4418      	add	r0, r3
 800f796:	8a63      	ldrh	r3, [r4, #18]
 800f798:	1a18      	subs	r0, r3, r0
 800f79a:	8260      	strh	r0, [r4, #18]
 800f79c:	b005      	add	sp, #20
 800f79e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7a2:	2300      	movs	r3, #0
 800f7a4:	4611      	mov	r1, r2
 800f7a6:	4620      	mov	r0, r4
 800f7a8:	f7ff ff10 	bl	800f5cc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f7ac:	e756      	b.n	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7ae:	4563      	cmp	r3, ip
 800f7b0:	dd14      	ble.n	800f7dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f0>
 800f7b2:	b117      	cbz	r7, 800f7ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ce>
 800f7b4:	2301      	movs	r3, #1
 800f7b6:	460a      	mov	r2, r1
 800f7b8:	e773      	b.n	800f6a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 800f7ba:	2e00      	cmp	r6, #0
 800f7bc:	f43f af4e 	beq.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7c0:	2800      	cmp	r0, #0
 800f7c2:	f47f af4b 	bne.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7c6:	f1ba 0f00 	cmp.w	sl, #0
 800f7ca:	d002      	beq.n	800f7d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e6>
 800f7cc:	2301      	movs	r3, #1
 800f7ce:	4642      	mov	r2, r8
 800f7d0:	e768      	b.n	800f6a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800f7d2:	8ae3      	ldrh	r3, [r4, #22]
 800f7d4:	2b00      	cmp	r3, #0
 800f7d6:	f43f af41 	beq.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7da:	e7d5      	b.n	800f788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19c>
 800f7dc:	2800      	cmp	r0, #0
 800f7de:	f47f af3d 	bne.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7e2:	f1ba 0f00 	cmp.w	sl, #0
 800f7e6:	f43f af39 	beq.w	800f65c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f7ea:	2301      	movs	r3, #1
 800f7ec:	4642      	mov	r2, r8
 800f7ee:	e7da      	b.n	800f7a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>

0800f7f0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f7f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7f2:	4605      	mov	r5, r0
 800f7f4:	b08f      	sub	sp, #60	@ 0x3c
 800f7f6:	4617      	mov	r7, r2
 800f7f8:	461c      	mov	r4, r3
 800f7fa:	460e      	mov	r6, r1
 800f7fc:	b1d1      	cbz	r1, 800f834 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f7fe:	681b      	ldr	r3, [r3, #0]
 800f800:	4620      	mov	r0, r4
 800f802:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f804:	4798      	blx	r3
 800f806:	4240      	negs	r0, r0
 800f808:	b200      	sxth	r0, r0
 800f80a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800f80e:	9603      	str	r6, [sp, #12]
 800f810:	9700      	str	r7, [sp, #0]
 800f812:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800f816:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800f81a:	4629      	mov	r1, r5
 800f81c:	a805      	add	r0, sp, #20
 800f81e:	f7ff fcad 	bl	800f17c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f822:	2401      	movs	r4, #1
 800f824:	a805      	add	r0, sp, #20
 800f826:	f7ff fee1 	bl	800f5ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f82a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800f82e:	b163      	cbz	r3, 800f84a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800f830:	3401      	adds	r4, #1
 800f832:	e7f7      	b.n	800f824 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f834:	f002 febe 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f838:	2401      	movs	r4, #1
 800f83a:	280a      	cmp	r0, #10
 800f83c:	4628      	mov	r0, r5
 800f83e:	bf08      	it	eq
 800f840:	3401      	addeq	r4, #1
 800f842:	f002 feb7 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f846:	2800      	cmp	r0, #0
 800f848:	d1f7      	bne.n	800f83a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800f84a:	b2a0      	uxth	r0, r4
 800f84c:	b00f      	add	sp, #60	@ 0x3c
 800f84e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f854:	b0e3      	sub	sp, #396	@ 0x18c
 800f856:	461c      	mov	r4, r3
 800f858:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800f85a:	4683      	mov	fp, r0
 800f85c:	4688      	mov	r8, r1
 800f85e:	2b00      	cmp	r3, #0
 800f860:	f000 8112 	beq.w	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f864:	6823      	ldr	r3, [r4, #0]
 800f866:	2b00      	cmp	r3, #0
 800f868:	f000 810e 	beq.w	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f86c:	7ba3      	ldrb	r3, [r4, #14]
 800f86e:	2b00      	cmp	r3, #0
 800f870:	f000 810a 	beq.w	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f874:	ad0a      	add	r5, sp, #40	@ 0x28
 800f876:	462b      	mov	r3, r5
 800f878:	6810      	ldr	r0, [r2, #0]
 800f87a:	6851      	ldr	r1, [r2, #4]
 800f87c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800f880:	c303      	stmia	r3!, {r0, r1}
 800f882:	2100      	movs	r1, #0
 800f884:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800f888:	910c      	str	r1, [sp, #48]	@ 0x30
 800f88a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f88e:	a90c      	add	r1, sp, #48	@ 0x30
 800f890:	79a2      	ldrb	r2, [r4, #6]
 800f892:	4628      	mov	r0, r5
 800f894:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f898:	f7ff fcef 	bl	800f27a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f89c:	a90c      	add	r1, sp, #48	@ 0x30
 800f89e:	4608      	mov	r0, r1
 800f8a0:	79a2      	ldrb	r2, [r4, #6]
 800f8a2:	f7ff fcea 	bl	800f27a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f8a6:	a817      	add	r0, sp, #92	@ 0x5c
 800f8a8:	f002 fa2e 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 800f8ac:	6820      	ldr	r0, [r4, #0]
 800f8ae:	6803      	ldr	r3, [r0, #0]
 800f8b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f8b2:	4798      	blx	r3
 800f8b4:	4606      	mov	r6, r0
 800f8b6:	6820      	ldr	r0, [r4, #0]
 800f8b8:	6803      	ldr	r3, [r0, #0]
 800f8ba:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f8bc:	4798      	blx	r3
 800f8be:	4633      	mov	r3, r6
 800f8c0:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800f8c2:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800f8c4:	9000      	str	r0, [sp, #0]
 800f8c6:	a817      	add	r0, sp, #92	@ 0x5c
 800f8c8:	f002 fa79 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f8cc:	6820      	ldr	r0, [r4, #0]
 800f8ce:	f894 a004 	ldrb.w	sl, [r4, #4]
 800f8d2:	6803      	ldr	r3, [r0, #0]
 800f8d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f8d6:	4798      	blx	r3
 800f8d8:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800f8dc:	6823      	ldr	r3, [r4, #0]
 800f8de:	4607      	mov	r7, r0
 800f8e0:	4406      	add	r6, r0
 800f8e2:	a830      	add	r0, sp, #192	@ 0xc0
 800f8e4:	f893 9009 	ldrb.w	r9, [r3, #9]
 800f8e8:	f002 fa0e 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 800f8ec:	7c23      	ldrb	r3, [r4, #16]
 800f8ee:	b17b      	cbz	r3, 800f910 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800f8f0:	6820      	ldr	r0, [r4, #0]
 800f8f2:	6803      	ldr	r3, [r0, #0]
 800f8f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f8f6:	4798      	blx	r3
 800f8f8:	9009      	str	r0, [sp, #36]	@ 0x24
 800f8fa:	6820      	ldr	r0, [r4, #0]
 800f8fc:	6802      	ldr	r2, [r0, #0]
 800f8fe:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800f900:	4790      	blx	r2
 800f902:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f904:	9000      	str	r0, [sp, #0]
 800f906:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800f908:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800f90a:	a830      	add	r0, sp, #192	@ 0xc0
 800f90c:	f002 fa57 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f910:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800f914:	7be2      	ldrb	r2, [r4, #15]
 800f916:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800f91a:	1a8a      	subs	r2, r1, r2
 800f91c:	7c21      	ldrb	r1, [r4, #16]
 800f91e:	b292      	uxth	r2, r2
 800f920:	9103      	str	r1, [sp, #12]
 800f922:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800f926:	a80e      	add	r0, sp, #56	@ 0x38
 800f928:	9102      	str	r1, [sp, #8]
 800f92a:	6821      	ldr	r1, [r4, #0]
 800f92c:	9101      	str	r1, [sp, #4]
 800f92e:	7961      	ldrb	r1, [r4, #5]
 800f930:	9100      	str	r1, [sp, #0]
 800f932:	a930      	add	r1, sp, #192	@ 0xc0
 800f934:	f7ff fc22 	bl	800f17c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f938:	2e00      	cmp	r6, #0
 800f93a:	dc5b      	bgt.n	800f9f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800f93c:	f04f 0900 	mov.w	r9, #0
 800f940:	af17      	add	r7, sp, #92	@ 0x5c
 800f942:	7c23      	ldrb	r3, [r4, #16]
 800f944:	2b00      	cmp	r3, #0
 800f946:	f000 80b1 	beq.w	800faac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800f94a:	a80e      	add	r0, sp, #56	@ 0x38
 800f94c:	f7ff fe4e 	bl	800f5ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f950:	f1ba 0f00 	cmp.w	sl, #0
 800f954:	f000 80a5 	beq.w	800faa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f958:	7c23      	ldrb	r3, [r4, #16]
 800f95a:	2264      	movs	r2, #100	@ 0x64
 800f95c:	4639      	mov	r1, r7
 800f95e:	a849      	add	r0, sp, #292	@ 0x124
 800f960:	9309      	str	r3, [sp, #36]	@ 0x24
 800f962:	f012 fb92 	bl	802208a <memcpy>
 800f966:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f968:	2b00      	cmp	r3, #0
 800f96a:	f000 80a7 	beq.w	800fabc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800f96e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800f972:	7922      	ldrb	r2, [r4, #4]
 800f974:	2a01      	cmp	r2, #1
 800f976:	f040 808a 	bne.w	800fa8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800f97a:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800f97e:	1ac0      	subs	r0, r0, r3
 800f980:	2302      	movs	r3, #2
 800f982:	fb90 f0f3 	sdiv	r0, r0, r3
 800f986:	b200      	sxth	r0, r0
 800f988:	7c23      	ldrb	r3, [r4, #16]
 800f98a:	2b00      	cmp	r3, #0
 800f98c:	f000 808b 	beq.w	800faa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f990:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800f994:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800f998:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800f99c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f9a0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800f9a4:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800f9a8:	4410      	add	r0, r2
 800f9aa:	b200      	sxth	r0, r0
 800f9ac:	9000      	str	r0, [sp, #0]
 800f9ae:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f9b2:	4642      	mov	r2, r8
 800f9b4:	2100      	movs	r1, #0
 800f9b6:	4658      	mov	r0, fp
 800f9b8:	f7ff fc90 	bl	800f2dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f9bc:	2800      	cmp	r0, #0
 800f9be:	d163      	bne.n	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f9c0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f9c4:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800f9c8:	b2b2      	uxth	r2, r6
 800f9ca:	4413      	add	r3, r2
 800f9cc:	1a8a      	subs	r2, r1, r2
 800f9ce:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800f9d2:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800f9d6:	b21b      	sxth	r3, r3
 800f9d8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800f9dc:	2a00      	cmp	r2, #0
 800f9de:	d153      	bne.n	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f9e0:	6822      	ldr	r2, [r4, #0]
 800f9e2:	8869      	ldrh	r1, [r5, #2]
 800f9e4:	7a12      	ldrb	r2, [r2, #8]
 800f9e6:	1a9b      	subs	r3, r3, r2
 800f9e8:	88ea      	ldrh	r2, [r5, #6]
 800f9ea:	440a      	add	r2, r1
 800f9ec:	b212      	sxth	r2, r2
 800f9ee:	4293      	cmp	r3, r2
 800f9f0:	dda7      	ble.n	800f942 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800f9f2:	e049      	b.n	800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f9f4:	7c23      	ldrb	r3, [r4, #16]
 800f9f6:	444f      	add	r7, r9
 800f9f8:	b1c3      	cbz	r3, 800fa2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800f9fa:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 800f9fe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800fa02:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fa06:	443b      	add	r3, r7
 800fa08:	4293      	cmp	r3, r2
 800fa0a:	da97      	bge.n	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fa0c:	a80e      	add	r0, sp, #56	@ 0x38
 800fa0e:	f7ff fded 	bl	800f5ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fa12:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 800fa16:	3b01      	subs	r3, #1
 800fa18:	b29b      	uxth	r3, r3
 800fa1a:	454b      	cmp	r3, r9
 800fa1c:	9309      	str	r3, [sp, #36]	@ 0x24
 800fa1e:	d021      	beq.n	800fa64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800fa20:	7961      	ldrb	r1, [r4, #5]
 800fa22:	a817      	add	r0, sp, #92	@ 0x5c
 800fa24:	f7fa fb96 	bl	800a154 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fa28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800fa2a:	e7f4      	b.n	800fa16 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800fa2c:	fa1f f986 	uxth.w	r9, r6
 800fa30:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800fa34:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fa38:	443b      	add	r3, r7
 800fa3a:	4293      	cmp	r3, r2
 800fa3c:	f6bf af7e 	bge.w	800f93c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800fa40:	a817      	add	r0, sp, #92	@ 0x5c
 800fa42:	f002 fdb7 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fa46:	b1f8      	cbz	r0, 800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa48:	280a      	cmp	r0, #10
 800fa4a:	d1f1      	bne.n	800fa30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fa4c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800fa50:	444b      	add	r3, r9
 800fa52:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800fa56:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800fa5a:	eba3 0309 	sub.w	r3, r3, r9
 800fa5e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800fa62:	e7e5      	b.n	800fa30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800fa64:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 800fa68:	b2b3      	uxth	r3, r6
 800fa6a:	441a      	add	r2, r3
 800fa6c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 800fa70:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800fa74:	1ad3      	subs	r3, r2, r3
 800fa76:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800fa7a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800fa7e:	b11b      	cbz	r3, 800fa88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fa80:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 800fa84:	2b00      	cmp	r3, #0
 800fa86:	d0ba      	beq.n	800f9fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800fa88:	b063      	add	sp, #396	@ 0x18c
 800fa8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa8e:	2a02      	cmp	r2, #2
 800fa90:	d105      	bne.n	800fa9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800fa92:	7be2      	ldrb	r2, [r4, #15]
 800fa94:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800fa98:	1a80      	subs	r0, r0, r2
 800fa9a:	1ac0      	subs	r0, r0, r3
 800fa9c:	e773      	b.n	800f986 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800fa9e:	2000      	movs	r0, #0
 800faa0:	e772      	b.n	800f988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800faa2:	7be0      	ldrb	r0, [r4, #15]
 800faa4:	e770      	b.n	800f988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800faa6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800faaa:	e773      	b.n	800f994 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800faac:	f1ba 0f00 	cmp.w	sl, #0
 800fab0:	d0f7      	beq.n	800faa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800fab2:	2264      	movs	r2, #100	@ 0x64
 800fab4:	4639      	mov	r1, r7
 800fab6:	a849      	add	r0, sp, #292	@ 0x124
 800fab8:	f012 fae7 	bl	802208a <memcpy>
 800fabc:	2300      	movs	r3, #0
 800fabe:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800fac2:	6821      	ldr	r1, [r4, #0]
 800fac4:	a849      	add	r0, sp, #292	@ 0x124
 800fac6:	f7ff fb9c 	bl	800f202 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800faca:	b203      	sxth	r3, r0
 800facc:	e751      	b.n	800f972 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800face <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800face:	2b03      	cmp	r3, #3
 800fad0:	d818      	bhi.n	800fb04 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800fad2:	e8df f003 	tbb	[pc, r3]
 800fad6:	0602      	.short	0x0602
 800fad8:	130d      	.short	0x130d
 800fada:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fade:	1850      	adds	r0, r2, r1
 800fae0:	4770      	bx	lr
 800fae2:	8803      	ldrh	r3, [r0, #0]
 800fae4:	8880      	ldrh	r0, [r0, #4]
 800fae6:	4418      	add	r0, r3
 800fae8:	b200      	sxth	r0, r0
 800faea:	1a80      	subs	r0, r0, r2
 800faec:	3801      	subs	r0, #1
 800faee:	4770      	bx	lr
 800faf0:	8803      	ldrh	r3, [r0, #0]
 800faf2:	8880      	ldrh	r0, [r0, #4]
 800faf4:	4418      	add	r0, r3
 800faf6:	b200      	sxth	r0, r0
 800faf8:	1a40      	subs	r0, r0, r1
 800fafa:	e7f7      	b.n	800faec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800fafc:	f9b0 0000 	ldrsh.w	r0, [r0]
 800fb00:	4410      	add	r0, r2
 800fb02:	4770      	bx	lr
 800fb04:	2000      	movs	r0, #0
 800fb06:	4770      	bx	lr

0800fb08 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800fb08:	2b03      	cmp	r3, #3
 800fb0a:	d817      	bhi.n	800fb3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800fb0c:	e8df f003 	tbb	[pc, r3]
 800fb10:	10090602 	.word	0x10090602
 800fb14:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fb18:	1850      	adds	r0, r2, r1
 800fb1a:	4770      	bx	lr
 800fb1c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fb20:	e7fa      	b.n	800fb18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800fb22:	8843      	ldrh	r3, [r0, #2]
 800fb24:	88c0      	ldrh	r0, [r0, #6]
 800fb26:	4418      	add	r0, r3
 800fb28:	b200      	sxth	r0, r0
 800fb2a:	1a80      	subs	r0, r0, r2
 800fb2c:	3801      	subs	r0, #1
 800fb2e:	4770      	bx	lr
 800fb30:	8843      	ldrh	r3, [r0, #2]
 800fb32:	88c0      	ldrh	r0, [r0, #6]
 800fb34:	4418      	add	r0, r3
 800fb36:	b200      	sxth	r0, r0
 800fb38:	1a40      	subs	r0, r0, r1
 800fb3a:	e7f7      	b.n	800fb2c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800fb3c:	2000      	movs	r0, #0
 800fb3e:	4770      	bx	lr

0800fb40 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800fb40:	2200      	movs	r2, #0
 800fb42:	4b01      	ldr	r3, [pc, #4]	@ (800fb48 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800fb44:	601a      	str	r2, [r3, #0]
 800fb46:	4770      	bx	lr
 800fb48:	20002238 	.word	0x20002238

0800fb4c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800fb4c:	4603      	mov	r3, r0
 800fb4e:	b1c8      	cbz	r0, 800fb84 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800fb50:	0c02      	lsrs	r2, r0, #16
 800fb52:	0412      	lsls	r2, r2, #16
 800fb54:	b9a2      	cbnz	r2, 800fb80 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800fb56:	0403      	lsls	r3, r0, #16
 800fb58:	2010      	movs	r0, #16
 800fb5a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800fb5e:	bf04      	itt	eq
 800fb60:	021b      	lsleq	r3, r3, #8
 800fb62:	3008      	addeq	r0, #8
 800fb64:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800fb68:	bf04      	itt	eq
 800fb6a:	011b      	lsleq	r3, r3, #4
 800fb6c:	3004      	addeq	r0, #4
 800fb6e:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800fb72:	bf04      	itt	eq
 800fb74:	009b      	lsleq	r3, r3, #2
 800fb76:	3002      	addeq	r0, #2
 800fb78:	2b00      	cmp	r3, #0
 800fb7a:	db04      	blt.n	800fb86 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800fb7c:	3001      	adds	r0, #1
 800fb7e:	4770      	bx	lr
 800fb80:	2000      	movs	r0, #0
 800fb82:	e7ea      	b.n	800fb5a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800fb84:	2020      	movs	r0, #32
 800fb86:	4770      	bx	lr

0800fb88 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800fb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb8c:	b087      	sub	sp, #28
 800fb8e:	460d      	mov	r5, r1
 800fb90:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800fb94:	4616      	mov	r6, r2
 800fb96:	4698      	mov	r8, r3
 800fb98:	4601      	mov	r1, r0
 800fb9a:	b120      	cbz	r0, 800fba6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fb9c:	b11a      	cbz	r2, 800fba6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fb9e:	2d1f      	cmp	r5, #31
 800fba0:	d801      	bhi.n	800fba6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800fba2:	2b1f      	cmp	r3, #31
 800fba4:	d904      	bls.n	800fbb0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800fba6:	2000      	movs	r0, #0
 800fba8:	6038      	str	r0, [r7, #0]
 800fbaa:	b007      	add	sp, #28
 800fbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbb0:	b97d      	cbnz	r5, 800fbd2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800fbb2:	b143      	cbz	r3, 800fbc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800fbb4:	4602      	mov	r2, r0
 800fbb6:	e9cd 4700 	strd	r4, r7, [sp]
 800fbba:	462b      	mov	r3, r5
 800fbbc:	4641      	mov	r1, r8
 800fbbe:	4630      	mov	r0, r6
 800fbc0:	f7ff ffe2 	bl	800fb88 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fbc4:	e7f1      	b.n	800fbaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fbc6:	f04f 33ff 	mov.w	r3, #4294967295
 800fbca:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800fbce:	603b      	str	r3, [r7, #0]
 800fbd0:	e7eb      	b.n	800fbaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fbd2:	fa32 fa05 	lsrs.w	sl, r2, r5
 800fbd6:	d106      	bne.n	800fbe6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800fbd8:	4346      	muls	r6, r0
 800fbda:	fbb6 f0f4 	udiv	r0, r6, r4
 800fbde:	fb04 6610 	mls	r6, r4, r0, r6
 800fbe2:	603e      	str	r6, [r7, #0]
 800fbe4:	e7e1      	b.n	800fbaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800fbe6:	fa00 fb05 	lsl.w	fp, r0, r5
 800fbea:	fbbb f9f4 	udiv	r9, fp, r4
 800fbee:	2201      	movs	r2, #1
 800fbf0:	fb0a f309 	mul.w	r3, sl, r9
 800fbf4:	40aa      	lsls	r2, r5
 800fbf6:	3a01      	subs	r2, #1
 800fbf8:	4016      	ands	r6, r2
 800fbfa:	4630      	mov	r0, r6
 800fbfc:	9303      	str	r3, [sp, #12]
 800fbfe:	f7ff ffa5 	bl	800fb4c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fc02:	462b      	mov	r3, r5
 800fc04:	460a      	mov	r2, r1
 800fc06:	e9cd 4700 	strd	r4, r7, [sp]
 800fc0a:	4601      	mov	r1, r0
 800fc0c:	4630      	mov	r0, r6
 800fc0e:	f7ff ffbb 	bl	800fb88 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fc12:	fb04 b919 	mls	r9, r4, r9, fp
 800fc16:	4606      	mov	r6, r0
 800fc18:	4648      	mov	r0, r9
 800fc1a:	eb05 0108 	add.w	r1, r5, r8
 800fc1e:	f7ff ff95 	bl	800fb4c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fc22:	ab05      	add	r3, sp, #20
 800fc24:	e9cd 4300 	strd	r4, r3, [sp]
 800fc28:	464a      	mov	r2, r9
 800fc2a:	4603      	mov	r3, r0
 800fc2c:	4650      	mov	r0, sl
 800fc2e:	f7ff ffab 	bl	800fb88 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fc32:	6839      	ldr	r1, [r7, #0]
 800fc34:	9a05      	ldr	r2, [sp, #20]
 800fc36:	9b03      	ldr	r3, [sp, #12]
 800fc38:	4411      	add	r1, r2
 800fc3a:	fbb1 f2f4 	udiv	r2, r1, r4
 800fc3e:	fb04 1412 	mls	r4, r4, r2, r1
 800fc42:	18d3      	adds	r3, r2, r3
 800fc44:	441e      	add	r6, r3
 800fc46:	4430      	add	r0, r6
 800fc48:	603c      	str	r4, [r7, #0]
 800fc4a:	e7ae      	b.n	800fbaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800fc4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800fc4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fc50:	b085      	sub	sp, #20
 800fc52:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800fc54:	f1b0 0900 	subs.w	r9, r0, #0
 800fc58:	461d      	mov	r5, r3
 800fc5a:	bfbf      	itttt	lt
 800fc5c:	6823      	ldrlt	r3, [r4, #0]
 800fc5e:	f1c9 0900 	rsblt	r9, r9, #0
 800fc62:	425b      	neglt	r3, r3
 800fc64:	6023      	strlt	r3, [r4, #0]
 800fc66:	bfb4      	ite	lt
 800fc68:	f04f 36ff 	movlt.w	r6, #4294967295
 800fc6c:	2601      	movge	r6, #1
 800fc6e:	2a00      	cmp	r2, #0
 800fc70:	4617      	mov	r7, r2
 800fc72:	da04      	bge.n	800fc7e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800fc74:	6823      	ldr	r3, [r4, #0]
 800fc76:	4257      	negs	r7, r2
 800fc78:	425b      	negs	r3, r3
 800fc7a:	4276      	negs	r6, r6
 800fc7c:	6023      	str	r3, [r4, #0]
 800fc7e:	2d00      	cmp	r5, #0
 800fc80:	4638      	mov	r0, r7
 800fc82:	bfba      	itte	lt
 800fc84:	426d      	neglt	r5, r5
 800fc86:	f04f 38ff 	movlt.w	r8, #4294967295
 800fc8a:	f04f 0801 	movge.w	r8, #1
 800fc8e:	f7ff ff5d 	bl	800fb4c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800fc92:	ab03      	add	r3, sp, #12
 800fc94:	e9cd 5300 	strd	r5, r3, [sp]
 800fc98:	463a      	mov	r2, r7
 800fc9a:	4603      	mov	r3, r0
 800fc9c:	4648      	mov	r0, r9
 800fc9e:	f7ff ff73 	bl	800fb88 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800fca2:	6823      	ldr	r3, [r4, #0]
 800fca4:	9a03      	ldr	r2, [sp, #12]
 800fca6:	4546      	cmp	r6, r8
 800fca8:	441a      	add	r2, r3
 800fcaa:	fb92 f3f5 	sdiv	r3, r2, r5
 800fcae:	4418      	add	r0, r3
 800fcb0:	fb05 2313 	mls	r3, r5, r3, r2
 800fcb4:	bf18      	it	ne
 800fcb6:	4240      	negne	r0, r0
 800fcb8:	1c72      	adds	r2, r6, #1
 800fcba:	6023      	str	r3, [r4, #0]
 800fcbc:	d105      	bne.n	800fcca <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800fcbe:	2b00      	cmp	r3, #0
 800fcc0:	f1c3 0200 	rsb	r2, r3, #0
 800fcc4:	db0b      	blt.n	800fcde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800fcc6:	6022      	str	r2, [r4, #0]
 800fcc8:	e006      	b.n	800fcd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fcca:	2e01      	cmp	r6, #1
 800fccc:	d104      	bne.n	800fcd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fcce:	2b00      	cmp	r3, #0
 800fcd0:	da02      	bge.n	800fcd8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800fcd2:	442b      	add	r3, r5
 800fcd4:	3801      	subs	r0, #1
 800fcd6:	6023      	str	r3, [r4, #0]
 800fcd8:	b005      	add	sp, #20
 800fcda:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fcde:	3801      	subs	r0, #1
 800fce0:	1b52      	subs	r2, r2, r5
 800fce2:	e7f0      	b.n	800fcc6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800fce4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800fce4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800fce8:	4c1c      	ldr	r4, [pc, #112]	@ (800fd5c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800fcea:	4605      	mov	r5, r0
 800fcec:	69a3      	ldr	r3, [r4, #24]
 800fcee:	6807      	ldr	r7, [r0, #0]
 800fcf0:	b92b      	cbnz	r3, 800fcfe <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800fcf2:	6840      	ldr	r0, [r0, #4]
 800fcf4:	e9c5 7000 	strd	r7, r0, [r5]
 800fcf8:	b004      	add	sp, #16
 800fcfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fcfe:	f04f 0802 	mov.w	r8, #2
 800fd02:	fb93 f1f8 	sdiv	r1, r3, r8
 800fd06:	68a2      	ldr	r2, [r4, #8]
 800fd08:	ae04      	add	r6, sp, #16
 800fd0a:	440a      	add	r2, r1
 800fd0c:	f846 2d04 	str.w	r2, [r6, #-4]!
 800fd10:	69e1      	ldr	r1, [r4, #28]
 800fd12:	463a      	mov	r2, r7
 800fd14:	9600      	str	r6, [sp, #0]
 800fd16:	6820      	ldr	r0, [r4, #0]
 800fd18:	f7ff ff98 	bl	800fc4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fd1c:	69a3      	ldr	r3, [r4, #24]
 800fd1e:	4607      	mov	r7, r0
 800fd20:	686a      	ldr	r2, [r5, #4]
 800fd22:	6a21      	ldr	r1, [r4, #32]
 800fd24:	9600      	str	r6, [sp, #0]
 800fd26:	6860      	ldr	r0, [r4, #4]
 800fd28:	f7ff ff90 	bl	800fc4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fd2c:	69a3      	ldr	r3, [r4, #24]
 800fd2e:	6962      	ldr	r2, [r4, #20]
 800fd30:	fb93 f8f8 	sdiv	r8, r3, r8
 800fd34:	4442      	add	r2, r8
 800fd36:	9203      	str	r2, [sp, #12]
 800fd38:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800fd3a:	682a      	ldr	r2, [r5, #0]
 800fd3c:	4407      	add	r7, r0
 800fd3e:	9600      	str	r6, [sp, #0]
 800fd40:	68e0      	ldr	r0, [r4, #12]
 800fd42:	f7ff ff83 	bl	800fc4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fd46:	9600      	str	r6, [sp, #0]
 800fd48:	4680      	mov	r8, r0
 800fd4a:	69a3      	ldr	r3, [r4, #24]
 800fd4c:	686a      	ldr	r2, [r5, #4]
 800fd4e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800fd50:	6920      	ldr	r0, [r4, #16]
 800fd52:	f7ff ff7b 	bl	800fc4c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800fd56:	4440      	add	r0, r8
 800fd58:	e7cc      	b.n	800fcf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800fd5a:	bf00      	nop
 800fd5c:	2000223c 	.word	0x2000223c

0800fd60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800fd60:	4b07      	ldr	r3, [pc, #28]	@ (800fd80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800fd62:	781b      	ldrb	r3, [r3, #0]
 800fd64:	2b01      	cmp	r3, #1
 800fd66:	d109      	bne.n	800fd7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800fd68:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fd6c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fd70:	8003      	strh	r3, [r0, #0]
 800fd72:	4b04      	ldr	r3, [pc, #16]	@ (800fd84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800fd74:	881b      	ldrh	r3, [r3, #0]
 800fd76:	3b01      	subs	r3, #1
 800fd78:	1a9b      	subs	r3, r3, r2
 800fd7a:	800b      	strh	r3, [r1, #0]
 800fd7c:	4770      	bx	lr
 800fd7e:	bf00      	nop
 800fd80:	20002228 	.word	0x20002228
 800fd84:	20002224 	.word	0x20002224

0800fd88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800fd88:	b510      	push	{r4, lr}
 800fd8a:	4b07      	ldr	r3, [pc, #28]	@ (800fda8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800fd8c:	781b      	ldrb	r3, [r3, #0]
 800fd8e:	2b01      	cmp	r3, #1
 800fd90:	d108      	bne.n	800fda4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800fd92:	4b06      	ldr	r3, [pc, #24]	@ (800fdac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800fd94:	880c      	ldrh	r4, [r1, #0]
 800fd96:	881b      	ldrh	r3, [r3, #0]
 800fd98:	f9b0 2000 	ldrsh.w	r2, [r0]
 800fd9c:	3b01      	subs	r3, #1
 800fd9e:	1b1b      	subs	r3, r3, r4
 800fda0:	8003      	strh	r3, [r0, #0]
 800fda2:	800a      	strh	r2, [r1, #0]
 800fda4:	bd10      	pop	{r4, pc}
 800fda6:	bf00      	nop
 800fda8:	20002228 	.word	0x20002228
 800fdac:	20002224 	.word	0x20002224

0800fdb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800fdb0:	b510      	push	{r4, lr}
 800fdb2:	4b0a      	ldr	r3, [pc, #40]	@ (800fddc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800fdb4:	781b      	ldrb	r3, [r3, #0]
 800fdb6:	2b01      	cmp	r3, #1
 800fdb8:	d10e      	bne.n	800fdd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800fdba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fdbe:	8843      	ldrh	r3, [r0, #2]
 800fdc0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fdc4:	18ca      	adds	r2, r1, r3
 800fdc6:	4b06      	ldr	r3, [pc, #24]	@ (800fde0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800fdc8:	8044      	strh	r4, [r0, #2]
 800fdca:	881b      	ldrh	r3, [r3, #0]
 800fdcc:	1a9b      	subs	r3, r3, r2
 800fdce:	8003      	strh	r3, [r0, #0]
 800fdd0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fdd4:	8081      	strh	r1, [r0, #4]
 800fdd6:	80c3      	strh	r3, [r0, #6]
 800fdd8:	bd10      	pop	{r4, pc}
 800fdda:	bf00      	nop
 800fddc:	20002228 	.word	0x20002228
 800fde0:	20002224 	.word	0x20002224

0800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fde4:	4b08      	ldr	r3, [pc, #32]	@ (800fe08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fde6:	781b      	ldrb	r3, [r3, #0]
 800fde8:	2b01      	cmp	r3, #1
 800fdea:	d10c      	bne.n	800fe06 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fdec:	8803      	ldrh	r3, [r0, #0]
 800fdee:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fdf2:	8842      	ldrh	r2, [r0, #2]
 800fdf4:	8002      	strh	r2, [r0, #0]
 800fdf6:	185a      	adds	r2, r3, r1
 800fdf8:	4b04      	ldr	r3, [pc, #16]	@ (800fe0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fdfa:	881b      	ldrh	r3, [r3, #0]
 800fdfc:	1a9b      	subs	r3, r3, r2
 800fdfe:	8043      	strh	r3, [r0, #2]
 800fe00:	88c3      	ldrh	r3, [r0, #6]
 800fe02:	80c1      	strh	r1, [r0, #6]
 800fe04:	8083      	strh	r3, [r0, #4]
 800fe06:	4770      	bx	lr
 800fe08:	20002228 	.word	0x20002228
 800fe0c:	20002224 	.word	0x20002224

0800fe10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fe10:	b510      	push	{r4, lr}
 800fe12:	4b07      	ldr	r3, [pc, #28]	@ (800fe30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fe14:	781b      	ldrb	r3, [r3, #0]
 800fe16:	2b01      	cmp	r3, #1
 800fe18:	d108      	bne.n	800fe2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fe1a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fe1e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fe22:	8003      	strh	r3, [r0, #0]
 800fe24:	8893      	ldrh	r3, [r2, #4]
 800fe26:	3b01      	subs	r3, #1
 800fe28:	1b1b      	subs	r3, r3, r4
 800fe2a:	800b      	strh	r3, [r1, #0]
 800fe2c:	bd10      	pop	{r4, pc}
 800fe2e:	bf00      	nop
 800fe30:	20002228 	.word	0x20002228

0800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fe34:	b510      	push	{r4, lr}
 800fe36:	4b0a      	ldr	r3, [pc, #40]	@ (800fe60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fe38:	460a      	mov	r2, r1
 800fe3a:	781b      	ldrb	r3, [r3, #0]
 800fe3c:	2b01      	cmp	r3, #1
 800fe3e:	d10d      	bne.n	800fe5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fe40:	8881      	ldrh	r1, [r0, #4]
 800fe42:	8803      	ldrh	r3, [r0, #0]
 800fe44:	440b      	add	r3, r1
 800fe46:	4601      	mov	r1, r0
 800fe48:	3b01      	subs	r3, #1
 800fe4a:	f821 3b02 	strh.w	r3, [r1], #2
 800fe4e:	f7ff ffdf 	bl	800fe10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fe52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fe56:	88c2      	ldrh	r2, [r0, #6]
 800fe58:	80c3      	strh	r3, [r0, #6]
 800fe5a:	8082      	strh	r2, [r0, #4]
 800fe5c:	bd10      	pop	{r4, pc}
 800fe5e:	bf00      	nop
 800fe60:	20002228 	.word	0x20002228

0800fe64 <_ZN8touchgfx11Application13requestRedrawEv>:
 800fe64:	2100      	movs	r1, #0
 800fe66:	4b06      	ldr	r3, [pc, #24]	@ (800fe80 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fe68:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800fe6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fe70:	4b04      	ldr	r3, [pc, #16]	@ (800fe84 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fe72:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800fe76:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fe7a:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800fe7e:	4770      	bx	lr
 800fe80:	20002224 	.word	0x20002224
 800fe84:	20002226 	.word	0x20002226

0800fe88 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800fe88:	4b03      	ldr	r3, [pc, #12]	@ (800fe98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800fe8a:	6818      	ldr	r0, [r3, #0]
 800fe8c:	b110      	cbz	r0, 800fe94 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800fe8e:	6803      	ldr	r3, [r0, #0]
 800fe90:	699b      	ldr	r3, [r3, #24]
 800fe92:	4718      	bx	r3
 800fe94:	4770      	bx	lr
 800fe96:	bf00      	nop
 800fe98:	2000226c 	.word	0x2000226c

0800fe9c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fe9c:	4770      	bx	lr
	...

0800fea0 <_ZN8touchgfx11Application4drawEv>:
 800fea0:	b507      	push	{r0, r1, r2, lr}
 800fea2:	2100      	movs	r1, #0
 800fea4:	4b08      	ldr	r3, [pc, #32]	@ (800fec8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fea6:	9100      	str	r1, [sp, #0]
 800fea8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800feac:	4b07      	ldr	r3, [pc, #28]	@ (800fecc <_ZN8touchgfx11Application4drawEv+0x2c>)
 800feae:	f8ad 2004 	strh.w	r2, [sp, #4]
 800feb2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800feb6:	4669      	mov	r1, sp
 800feb8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800febc:	6803      	ldr	r3, [r0, #0]
 800febe:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fec0:	4798      	blx	r3
 800fec2:	b003      	add	sp, #12
 800fec4:	f85d fb04 	ldr.w	pc, [sp], #4
 800fec8:	20002224 	.word	0x20002224
 800fecc:	20002226 	.word	0x20002226

0800fed0 <_ZN8touchgfx11Application10invalidateEv>:
 800fed0:	2100      	movs	r1, #0
 800fed2:	4b09      	ldr	r3, [pc, #36]	@ (800fef8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800fed4:	b082      	sub	sp, #8
 800fed6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800feda:	4b08      	ldr	r3, [pc, #32]	@ (800fefc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800fedc:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fee0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fee4:	9100      	str	r1, [sp, #0]
 800fee6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800feea:	6803      	ldr	r3, [r0, #0]
 800feec:	aa02      	add	r2, sp, #8
 800feee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fef0:	e912 0006 	ldmdb	r2, {r1, r2}
 800fef4:	b002      	add	sp, #8
 800fef6:	4718      	bx	r3
 800fef8:	20002224 	.word	0x20002224
 800fefc:	20002226 	.word	0x20002226

0800ff00 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ff00:	4b03      	ldr	r3, [pc, #12]	@ (800ff10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ff02:	6818      	ldr	r0, [r3, #0]
 800ff04:	b110      	cbz	r0, 800ff0c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ff06:	6803      	ldr	r3, [r0, #0]
 800ff08:	69db      	ldr	r3, [r3, #28]
 800ff0a:	4718      	bx	r3
 800ff0c:	4770      	bx	lr
 800ff0e:	bf00      	nop
 800ff10:	2000226c 	.word	0x2000226c

0800ff14 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ff14:	4b03      	ldr	r3, [pc, #12]	@ (800ff24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ff16:	6818      	ldr	r0, [r3, #0]
 800ff18:	b110      	cbz	r0, 800ff20 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ff1a:	6803      	ldr	r3, [r0, #0]
 800ff1c:	6a1b      	ldr	r3, [r3, #32]
 800ff1e:	4718      	bx	r3
 800ff20:	4770      	bx	lr
 800ff22:	bf00      	nop
 800ff24:	2000226c 	.word	0x2000226c

0800ff28 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ff28:	2300      	movs	r3, #0
 800ff2a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800ff2e:	4770      	bx	lr

0800ff30 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ff30:	4b03      	ldr	r3, [pc, #12]	@ (800ff40 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ff32:	6818      	ldr	r0, [r3, #0]
 800ff34:	b110      	cbz	r0, 800ff3c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ff36:	6803      	ldr	r3, [r0, #0]
 800ff38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ff3a:	4718      	bx	r3
 800ff3c:	4770      	bx	lr
 800ff3e:	bf00      	nop
 800ff40:	2000226c 	.word	0x2000226c

0800ff44 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ff44:	b510      	push	{r4, lr}
 800ff46:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ff4a:	888a      	ldrh	r2, [r1, #4]
 800ff4c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ff50:	4422      	add	r2, r4
 800ff52:	b212      	sxth	r2, r2
 800ff54:	4293      	cmp	r3, r2
 800ff56:	da15      	bge.n	800ff84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ff58:	8882      	ldrh	r2, [r0, #4]
 800ff5a:	4413      	add	r3, r2
 800ff5c:	b21b      	sxth	r3, r3
 800ff5e:	429c      	cmp	r4, r3
 800ff60:	da10      	bge.n	800ff84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ff62:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ff66:	88c9      	ldrh	r1, [r1, #6]
 800ff68:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ff6c:	4419      	add	r1, r3
 800ff6e:	b209      	sxth	r1, r1
 800ff70:	428a      	cmp	r2, r1
 800ff72:	da07      	bge.n	800ff84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ff74:	88c0      	ldrh	r0, [r0, #6]
 800ff76:	4410      	add	r0, r2
 800ff78:	b200      	sxth	r0, r0
 800ff7a:	4283      	cmp	r3, r0
 800ff7c:	bfac      	ite	ge
 800ff7e:	2000      	movge	r0, #0
 800ff80:	2001      	movlt	r0, #1
 800ff82:	bd10      	pop	{r4, pc}
 800ff84:	2000      	movs	r0, #0
 800ff86:	e7fc      	b.n	800ff82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ff88 <_ZN8touchgfx4Rect10restrictToEss>:
 800ff88:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ff8c:	b510      	push	{r4, lr}
 800ff8e:	2b00      	cmp	r3, #0
 800ff90:	da04      	bge.n	800ff9c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800ff92:	8884      	ldrh	r4, [r0, #4]
 800ff94:	4423      	add	r3, r4
 800ff96:	8083      	strh	r3, [r0, #4]
 800ff98:	2300      	movs	r3, #0
 800ff9a:	8003      	strh	r3, [r0, #0]
 800ff9c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ffa0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ffa4:	1b09      	subs	r1, r1, r4
 800ffa6:	428b      	cmp	r3, r1
 800ffa8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ffac:	bfc8      	it	gt
 800ffae:	8081      	strhgt	r1, [r0, #4]
 800ffb0:	2b00      	cmp	r3, #0
 800ffb2:	da04      	bge.n	800ffbe <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ffb4:	88c1      	ldrh	r1, [r0, #6]
 800ffb6:	440b      	add	r3, r1
 800ffb8:	80c3      	strh	r3, [r0, #6]
 800ffba:	2300      	movs	r3, #0
 800ffbc:	8043      	strh	r3, [r0, #2]
 800ffbe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ffc2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ffc6:	1a52      	subs	r2, r2, r1
 800ffc8:	4293      	cmp	r3, r2
 800ffca:	bfc8      	it	gt
 800ffcc:	80c2      	strhgt	r2, [r0, #6]
 800ffce:	bd10      	pop	{r4, pc}

0800ffd0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ffd0:	b510      	push	{r4, lr}
 800ffd2:	460c      	mov	r4, r1
 800ffd4:	4b0f      	ldr	r3, [pc, #60]	@ (8010014 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ffd6:	4620      	mov	r0, r4
 800ffd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffdc:	4b0e      	ldr	r3, [pc, #56]	@ (8010018 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ffde:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ffe2:	f7ff ffd1 	bl	800ff88 <_ZN8touchgfx4Rect10restrictToEss>
 800ffe6:	4b0d      	ldr	r3, [pc, #52]	@ (801001c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800ffe8:	6818      	ldr	r0, [r3, #0]
 800ffea:	b190      	cbz	r0, 8010012 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800ffec:	6803      	ldr	r3, [r0, #0]
 800ffee:	4621      	mov	r1, r4
 800fff0:	689b      	ldr	r3, [r3, #8]
 800fff2:	4798      	blx	r3
 800fff4:	4b0a      	ldr	r3, [pc, #40]	@ (8010020 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fff6:	6818      	ldr	r0, [r3, #0]
 800fff8:	b118      	cbz	r0, 8010002 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fffa:	6803      	ldr	r3, [r0, #0]
 800fffc:	4621      	mov	r1, r4
 800fffe:	689b      	ldr	r3, [r3, #8]
 8010000:	4798      	blx	r3
 8010002:	4b08      	ldr	r3, [pc, #32]	@ (8010024 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010004:	4621      	mov	r1, r4
 8010006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801000a:	6818      	ldr	r0, [r3, #0]
 801000c:	6803      	ldr	r3, [r0, #0]
 801000e:	69db      	ldr	r3, [r3, #28]
 8010010:	4718      	bx	r3
 8010012:	bd10      	pop	{r4, pc}
 8010014:	20002226 	.word	0x20002226
 8010018:	20002224 	.word	0x20002224
 801001c:	2000226c 	.word	0x2000226c
 8010020:	20002268 	.word	0x20002268
 8010024:	20002230 	.word	0x20002230

08010028 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801002a:	4606      	mov	r6, r0
 801002c:	4608      	mov	r0, r1
 801002e:	460f      	mov	r7, r1
 8010030:	f7fc ff65 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010034:	b9e8      	cbnz	r0, 8010072 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010036:	f9b7 5000 	ldrsh.w	r5, [r7]
 801003a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801003e:	42a5      	cmp	r5, r4
 8010040:	db17      	blt.n	8010072 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010042:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8010046:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801004a:	429a      	cmp	r2, r3
 801004c:	db11      	blt.n	8010072 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801004e:	88b9      	ldrh	r1, [r7, #4]
 8010050:	440d      	add	r5, r1
 8010052:	88b1      	ldrh	r1, [r6, #4]
 8010054:	b22d      	sxth	r5, r5
 8010056:	440c      	add	r4, r1
 8010058:	b224      	sxth	r4, r4
 801005a:	42a5      	cmp	r5, r4
 801005c:	dc09      	bgt.n	8010072 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801005e:	88f8      	ldrh	r0, [r7, #6]
 8010060:	4410      	add	r0, r2
 8010062:	88f2      	ldrh	r2, [r6, #6]
 8010064:	b200      	sxth	r0, r0
 8010066:	4413      	add	r3, r2
 8010068:	b21b      	sxth	r3, r3
 801006a:	4298      	cmp	r0, r3
 801006c:	bfcc      	ite	gt
 801006e:	2000      	movgt	r0, #0
 8010070:	2001      	movle	r0, #1
 8010072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010074 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010074:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010076:	4604      	mov	r4, r0
 8010078:	4608      	mov	r0, r1
 801007a:	460d      	mov	r5, r1
 801007c:	f7fc ff3f 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010080:	b978      	cbnz	r0, 80100a2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010082:	4620      	mov	r0, r4
 8010084:	f7fc ff3b 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010088:	f9b5 6000 	ldrsh.w	r6, [r5]
 801008c:	b150      	cbz	r0, 80100a4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801008e:	8026      	strh	r6, [r4, #0]
 8010090:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010094:	8063      	strh	r3, [r4, #2]
 8010096:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801009a:	80a3      	strh	r3, [r4, #4]
 801009c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80100a0:	80e3      	strh	r3, [r4, #6]
 80100a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80100a4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80100a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80100ac:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80100b0:	42b1      	cmp	r1, r6
 80100b2:	460f      	mov	r7, r1
 80100b4:	bfa8      	it	ge
 80100b6:	4637      	movge	r7, r6
 80100b8:	4293      	cmp	r3, r2
 80100ba:	4618      	mov	r0, r3
 80100bc:	bfa8      	it	ge
 80100be:	4610      	movge	r0, r2
 80100c0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80100c4:	88ed      	ldrh	r5, [r5, #6]
 80100c6:	4466      	add	r6, ip
 80100c8:	442a      	add	r2, r5
 80100ca:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80100ce:	88e5      	ldrh	r5, [r4, #6]
 80100d0:	4461      	add	r1, ip
 80100d2:	442b      	add	r3, r5
 80100d4:	b236      	sxth	r6, r6
 80100d6:	b209      	sxth	r1, r1
 80100d8:	b212      	sxth	r2, r2
 80100da:	b21b      	sxth	r3, r3
 80100dc:	428e      	cmp	r6, r1
 80100de:	bfac      	ite	ge
 80100e0:	ebc7 0106 	rsbge	r1, r7, r6
 80100e4:	ebc7 0101 	rsblt	r1, r7, r1
 80100e8:	429a      	cmp	r2, r3
 80100ea:	bfac      	ite	ge
 80100ec:	ebc0 0202 	rsbge	r2, r0, r2
 80100f0:	ebc0 0203 	rsblt	r2, r0, r3
 80100f4:	8027      	strh	r7, [r4, #0]
 80100f6:	8060      	strh	r0, [r4, #2]
 80100f8:	80a1      	strh	r1, [r4, #4]
 80100fa:	80e2      	strh	r2, [r4, #6]
 80100fc:	e7d1      	b.n	80100a2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010100 <_ZN8touchgfx11Application11getInstanceEv>:
 8010100:	4b01      	ldr	r3, [pc, #4]	@ (8010108 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010102:	6818      	ldr	r0, [r3, #0]
 8010104:	4770      	bx	lr
 8010106:	bf00      	nop
 8010108:	2000227c 	.word	0x2000227c

0801010c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801010c:	2300      	movs	r3, #0
 801010e:	b510      	push	{r4, lr}
 8010110:	4604      	mov	r4, r0
 8010112:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8010116:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801011a:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801011e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010122:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8010126:	429a      	cmp	r2, r3
 8010128:	d90e      	bls.n	8010148 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801012a:	18e2      	adds	r2, r4, r3
 801012c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8010130:	b122      	cbz	r2, 801013c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8010132:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010136:	6803      	ldr	r3, [r0, #0]
 8010138:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801013a:	4798      	blx	r3
 801013c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8010140:	3301      	adds	r3, #1
 8010142:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010146:	e7ea      	b.n	801011e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8010148:	bd10      	pop	{r4, pc}

0801014a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801014a:	2300      	movs	r3, #0
 801014c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8010150:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8010154:	30a4      	adds	r0, #164	@ 0xa4
 8010156:	f802 3b01 	strb.w	r3, [r2], #1
 801015a:	4282      	cmp	r2, r0
 801015c:	d1fb      	bne.n	8010156 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801015e:	4770      	bx	lr

08010160 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010160:	b570      	push	{r4, r5, r6, lr}
 8010162:	4c0b      	ldr	r4, [pc, #44]	@ (8010190 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010164:	4605      	mov	r5, r0
 8010166:	6820      	ldr	r0, [r4, #0]
 8010168:	460e      	mov	r6, r1
 801016a:	b110      	cbz	r0, 8010172 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801016c:	6803      	ldr	r3, [r0, #0]
 801016e:	695b      	ldr	r3, [r3, #20]
 8010170:	4798      	blx	r3
 8010172:	1d28      	adds	r0, r5, #4
 8010174:	f7ff ffe9 	bl	801014a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010178:	6026      	str	r6, [r4, #0]
 801017a:	6833      	ldr	r3, [r6, #0]
 801017c:	4630      	mov	r0, r6
 801017e:	68db      	ldr	r3, [r3, #12]
 8010180:	4798      	blx	r3
 8010182:	682b      	ldr	r3, [r5, #0]
 8010184:	4628      	mov	r0, r5
 8010186:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801018a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801018c:	4718      	bx	r3
 801018e:	bf00      	nop
 8010190:	2000226c 	.word	0x2000226c

08010194 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010194:	2300      	movs	r3, #0
 8010196:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010198:	461a      	mov	r2, r3
 801019a:	461c      	mov	r4, r3
 801019c:	461d      	mov	r5, r3
 801019e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80101a2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80101a6:	459c      	cmp	ip, r3
 80101a8:	dd1a      	ble.n	80101e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80101aa:	18c6      	adds	r6, r0, r3
 80101ac:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 80101b0:	b16e      	cbz	r6, 80101ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80101b2:	429a      	cmp	r2, r3
 80101b4:	d008      	beq.n	80101c8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80101b6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80101ba:	fa1f fe82 	uxth.w	lr, r2
 80101be:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80101c2:	1887      	adds	r7, r0, r2
 80101c4:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 80101c8:	3201      	adds	r2, #1
 80101ca:	3301      	adds	r3, #1
 80101cc:	e7eb      	b.n	80101a6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80101ce:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 80101d2:	4299      	cmp	r1, r3
 80101d4:	bfa8      	it	ge
 80101d6:	3501      	addge	r5, #1
 80101d8:	429e      	cmp	r6, r3
 80101da:	bfc8      	it	gt
 80101dc:	3401      	addgt	r4, #1
 80101de:	e7f4      	b.n	80101ca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80101e0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 80101e4:	1b49      	subs	r1, r1, r5
 80101e6:	1b1b      	subs	r3, r3, r4
 80101e8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 80101ec:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 80101f0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80101f4:	4293      	cmp	r3, r2
 80101f6:	dd03      	ble.n	8010200 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80101f8:	3b01      	subs	r3, #1
 80101fa:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80101fe:	e7f7      	b.n	80101f0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010200:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010204 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010204:	b570      	push	{r4, r5, r6, lr}
 8010206:	4d16      	ldr	r5, [pc, #88]	@ (8010260 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010208:	4604      	mov	r4, r0
 801020a:	6828      	ldr	r0, [r5, #0]
 801020c:	b140      	cbz	r0, 8010220 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801020e:	7a03      	ldrb	r3, [r0, #8]
 8010210:	b933      	cbnz	r3, 8010220 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010212:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010216:	6803      	ldr	r3, [r0, #0]
 8010218:	689b      	ldr	r3, [r3, #8]
 801021a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801021e:	4718      	bx	r3
 8010220:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8010224:	4e0f      	ldr	r6, [pc, #60]	@ (8010264 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010226:	b973      	cbnz	r3, 8010246 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010228:	b168      	cbz	r0, 8010246 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801022a:	7a03      	ldrb	r3, [r0, #8]
 801022c:	b15b      	cbz	r3, 8010246 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801022e:	6830      	ldr	r0, [r6, #0]
 8010230:	b110      	cbz	r0, 8010238 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010232:	6803      	ldr	r3, [r0, #0]
 8010234:	691b      	ldr	r3, [r3, #16]
 8010236:	4798      	blx	r3
 8010238:	6828      	ldr	r0, [r5, #0]
 801023a:	6803      	ldr	r3, [r0, #0]
 801023c:	68db      	ldr	r3, [r3, #12]
 801023e:	4798      	blx	r3
 8010240:	2301      	movs	r3, #1
 8010242:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010246:	3404      	adds	r4, #4
 8010248:	4620      	mov	r0, r4
 801024a:	f7ff ff5f 	bl	801010c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801024e:	4620      	mov	r0, r4
 8010250:	f7ff ffa0 	bl	8010194 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010254:	6830      	ldr	r0, [r6, #0]
 8010256:	b110      	cbz	r0, 801025e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010258:	6803      	ldr	r3, [r0, #0]
 801025a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801025c:	e7dd      	b.n	801021a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801025e:	bd70      	pop	{r4, r5, r6, pc}
 8010260:	20002270 	.word	0x20002270
 8010264:	2000226c 	.word	0x2000226c

08010268 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010268:	4603      	mov	r3, r0
 801026a:	2200      	movs	r2, #0
 801026c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8010270:	801a      	strh	r2, [r3, #0]
 8010272:	805a      	strh	r2, [r3, #2]
 8010274:	809a      	strh	r2, [r3, #4]
 8010276:	80da      	strh	r2, [r3, #6]
 8010278:	3308      	adds	r3, #8
 801027a:	428b      	cmp	r3, r1
 801027c:	d1f8      	bne.n	8010270 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801027e:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8010282:	4770      	bx	lr

08010284 <_ZN8touchgfx11ApplicationC1Ev>:
 8010284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010286:	4606      	mov	r6, r0
 8010288:	4604      	mov	r4, r0
 801028a:	2500      	movs	r5, #0
 801028c:	4b1b      	ldr	r3, [pc, #108]	@ (80102fc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801028e:	22a8      	movs	r2, #168	@ 0xa8
 8010290:	f846 3b04 	str.w	r3, [r6], #4
 8010294:	2100      	movs	r1, #0
 8010296:	4630      	mov	r0, r6
 8010298:	f011 fe27 	bl	8021eea <memset>
 801029c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80102a0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80102a4:	f7ff ffe0 	bl	8010268 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80102a8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80102ac:	f7ff ffdc 	bl	8010268 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80102b0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80102b4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80102b8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80102bc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80102c0:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80102c4:	490e      	ldr	r1, [pc, #56]	@ (8010300 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80102c6:	480f      	ldr	r0, [pc, #60]	@ (8010304 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80102c8:	f011 fab2 	bl	8021830 <CRC_Lock>
 80102cc:	4f0e      	ldr	r7, [pc, #56]	@ (8010308 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80102ce:	4b0f      	ldr	r3, [pc, #60]	@ (801030c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80102d0:	b158      	cbz	r0, 80102ea <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80102d2:	801d      	strh	r5, [r3, #0]
 80102d4:	2300      	movs	r3, #0
 80102d6:	4a0e      	ldr	r2, [pc, #56]	@ (8010310 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80102d8:	4630      	mov	r0, r6
 80102da:	6013      	str	r3, [r2, #0]
 80102dc:	4a0d      	ldr	r2, [pc, #52]	@ (8010314 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80102de:	603b      	str	r3, [r7, #0]
 80102e0:	6013      	str	r3, [r2, #0]
 80102e2:	f7ff ff32 	bl	801014a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80102e6:	4620      	mov	r0, r4
 80102e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102ea:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80102ee:	2002      	movs	r0, #2
 80102f0:	801a      	strh	r2, [r3, #0]
 80102f2:	6038      	str	r0, [r7, #0]
 80102f4:	f001 fb8e 	bl	8011a14 <_ZN8touchgfx6Screen4drawEv>
 80102f8:	e7ec      	b.n	80102d4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 80102fa:	bf00      	nop
 80102fc:	08024b4c 	.word	0x08024b4c
 8010300:	b5e8b5cd 	.word	0xb5e8b5cd
 8010304:	f407a5c2 	.word	0xf407a5c2
 8010308:	2000226c 	.word	0x2000226c
 801030c:	20000014 	.word	0x20000014
 8010310:	2000227c 	.word	0x2000227c
 8010314:	20002270 	.word	0x20002270

08010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010318:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801031c:	b510      	push	{r4, lr}
 801031e:	3b01      	subs	r3, #1
 8010320:	b29b      	uxth	r3, r3
 8010322:	428b      	cmp	r3, r1
 8010324:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010328:	d908      	bls.n	801033c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801032a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801032e:	681a      	ldr	r2, [r3, #0]
 8010330:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010334:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010338:	685a      	ldr	r2, [r3, #4]
 801033a:	6062      	str	r2, [r4, #4]
 801033c:	bd10      	pop	{r4, pc}
	...

08010340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010344:	4b92      	ldr	r3, [pc, #584]	@ (8010590 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 8010346:	b08f      	sub	sp, #60	@ 0x3c
 8010348:	ac0a      	add	r4, sp, #40	@ 0x28
 801034a:	e884 0006 	stmia.w	r4, {r1, r2}
 801034e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010352:	4b90      	ldr	r3, [pc, #576]	@ (8010594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 8010354:	4683      	mov	fp, r0
 8010356:	f9b3 1000 	ldrsh.w	r1, [r3]
 801035a:	4620      	mov	r0, r4
 801035c:	f7ff fe14 	bl	800ff88 <_ZN8touchgfx4Rect10restrictToEss>
 8010360:	4620      	mov	r0, r4
 8010362:	f7fc fdcc 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010366:	2800      	cmp	r0, #0
 8010368:	d170      	bne.n	801044c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801036a:	4b8b      	ldr	r3, [pc, #556]	@ (8010598 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801036c:	681b      	ldr	r3, [r3, #0]
 801036e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8010372:	2b02      	cmp	r3, #2
 8010374:	d06a      	beq.n	801044c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010376:	9403      	str	r4, [sp, #12]
 8010378:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801037c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010380:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010384:	35a4      	adds	r5, #164	@ 0xa4
 8010386:	9301      	str	r3, [sp, #4]
 8010388:	b15c      	cbz	r4, 80103a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801038a:	4629      	mov	r1, r5
 801038c:	9803      	ldr	r0, [sp, #12]
 801038e:	f7ff fe4b 	bl	8010028 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010392:	3c01      	subs	r4, #1
 8010394:	b118      	cbz	r0, 801039e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 8010396:	b2a1      	uxth	r1, r4
 8010398:	9801      	ldr	r0, [sp, #4]
 801039a:	f7ff ffbd 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801039e:	3d08      	subs	r5, #8
 80103a0:	e7f2      	b.n	8010388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 80103a2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80103a6:	f10a 33ff 	add.w	r3, sl, #4294967295
 80103aa:	9302      	str	r3, [sp, #8]
 80103ac:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80103b0:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80103b4:	f8cd a010 	str.w	sl, [sp, #16]
 80103b8:	9306      	str	r3, [sp, #24]
 80103ba:	445c      	add	r4, fp
 80103bc:	2500      	movs	r5, #0
 80103be:	4626      	mov	r6, r4
 80103c0:	462f      	mov	r7, r5
 80103c2:	f8cd a014 	str.w	sl, [sp, #20]
 80103c6:	9b05      	ldr	r3, [sp, #20]
 80103c8:	2b00      	cmp	r3, #0
 80103ca:	d073      	beq.n	80104b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 80103cc:	9903      	ldr	r1, [sp, #12]
 80103ce:	4630      	mov	r0, r6
 80103d0:	f7ff fdb8 	bl	800ff44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80103d4:	b350      	cbz	r0, 801042c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 80103d6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80103da:	f9b6 c000 	ldrsh.w	ip, [r6]
 80103de:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80103e2:	45e6      	cmp	lr, ip
 80103e4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80103e8:	db33      	blt.n	8010452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 80103ea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80103ee:	88b3      	ldrh	r3, [r6, #4]
 80103f0:	4472      	add	r2, lr
 80103f2:	4463      	add	r3, ip
 80103f4:	b212      	sxth	r2, r2
 80103f6:	b21b      	sxth	r3, r3
 80103f8:	429a      	cmp	r2, r3
 80103fa:	dc2a      	bgt.n	8010452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 80103fc:	88f3      	ldrh	r3, [r6, #6]
 80103fe:	fa1f f289 	uxth.w	r2, r9
 8010402:	4413      	add	r3, r2
 8010404:	b29b      	uxth	r3, r3
 8010406:	45c8      	cmp	r8, r9
 8010408:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801040c:	fa1f fc88 	uxth.w	ip, r8
 8010410:	fa0f fe83 	sxth.w	lr, r3
 8010414:	db0f      	blt.n	8010436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 8010416:	eba3 030c 	sub.w	r3, r3, ip
 801041a:	1ac9      	subs	r1, r1, r3
 801041c:	b209      	sxth	r1, r1
 801041e:	2900      	cmp	r1, #0
 8010420:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010424:	dd12      	ble.n	801044c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010426:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801042a:	4605      	mov	r5, r0
 801042c:	9b05      	ldr	r3, [sp, #20]
 801042e:	3e08      	subs	r6, #8
 8010430:	3b01      	subs	r3, #1
 8010432:	9305      	str	r3, [sp, #20]
 8010434:	e7c7      	b.n	80103c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 8010436:	4461      	add	r1, ip
 8010438:	b209      	sxth	r1, r1
 801043a:	4571      	cmp	r1, lr
 801043c:	dc38      	bgt.n	80104b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801043e:	eba2 020c 	sub.w	r2, r2, ip
 8010442:	b212      	sxth	r2, r2
 8010444:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010448:	2a00      	cmp	r2, #0
 801044a:	dcee      	bgt.n	801042a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801044c:	b00f      	add	sp, #60	@ 0x3c
 801044e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010452:	45c8      	cmp	r8, r9
 8010454:	db2c      	blt.n	80104b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 8010456:	88f3      	ldrh	r3, [r6, #6]
 8010458:	4499      	add	r9, r3
 801045a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801045e:	fa0f f989 	sxth.w	r9, r9
 8010462:	4498      	add	r8, r3
 8010464:	fa0f f888 	sxth.w	r8, r8
 8010468:	45c1      	cmp	r9, r8
 801046a:	db21      	blt.n	80104b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 801046c:	88b3      	ldrh	r3, [r6, #4]
 801046e:	fa1f f28c 	uxth.w	r2, ip
 8010472:	4413      	add	r3, r2
 8010474:	b29b      	uxth	r3, r3
 8010476:	45e6      	cmp	lr, ip
 8010478:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801047c:	fa1f f88e 	uxth.w	r8, lr
 8010480:	fa0f f983 	sxth.w	r9, r3
 8010484:	db0a      	blt.n	801049c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 8010486:	eba3 0308 	sub.w	r3, r3, r8
 801048a:	1ac9      	subs	r1, r1, r3
 801048c:	b209      	sxth	r1, r1
 801048e:	2900      	cmp	r1, #0
 8010490:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010494:	ddda      	ble.n	801044c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 8010496:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801049a:	e7c6      	b.n	801042a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801049c:	4441      	add	r1, r8
 801049e:	b209      	sxth	r1, r1
 80104a0:	4549      	cmp	r1, r9
 80104a2:	dc05      	bgt.n	80104b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 80104a4:	eba2 0208 	sub.w	r2, r2, r8
 80104a8:	b212      	sxth	r2, r2
 80104aa:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80104ae:	e7cb      	b.n	8010448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 80104b0:	4607      	mov	r7, r0
 80104b2:	e7bb      	b.n	801042c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 80104b4:	2d00      	cmp	r5, #0
 80104b6:	d181      	bne.n	80103bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 80104b8:	2f00      	cmp	r7, #0
 80104ba:	f000 81e0 	beq.w	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 80104be:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80104c2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80104c6:	b2b3      	uxth	r3, r6
 80104c8:	9305      	str	r3, [sp, #20]
 80104ca:	9a05      	ldr	r2, [sp, #20]
 80104cc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80104d0:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80104d4:	4413      	add	r3, r2
 80104d6:	b2ba      	uxth	r2, r7
 80104d8:	4492      	add	sl, r2
 80104da:	b29b      	uxth	r3, r3
 80104dc:	fa1f fa8a 	uxth.w	sl, sl
 80104e0:	fa0f f883 	sxth.w	r8, r3
 80104e4:	fa0f f98a 	sxth.w	r9, sl
 80104e8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80104ec:	9b04      	ldr	r3, [sp, #16]
 80104ee:	2b00      	cmp	r3, #0
 80104f0:	d054      	beq.n	801059c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 80104f2:	9903      	ldr	r1, [sp, #12]
 80104f4:	4620      	mov	r0, r4
 80104f6:	f7ff fd25 	bl	800ff44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80104fa:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80104fe:	b1c0      	cbz	r0, 8010532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010500:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010504:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010508:	4576      	cmp	r6, lr
 801050a:	dc22      	bgt.n	8010552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801050c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010510:	44f4      	add	ip, lr
 8010512:	fa0f fc8c 	sxth.w	ip, ip
 8010516:	45e0      	cmp	r8, ip
 8010518:	db1b      	blt.n	8010552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 801051a:	428f      	cmp	r7, r1
 801051c:	fa1f fc81 	uxth.w	ip, r1
 8010520:	88e1      	ldrh	r1, [r4, #6]
 8010522:	dc0d      	bgt.n	8010540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 8010524:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010528:	eba1 010c 	sub.w	r1, r1, ip
 801052c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010530:	80e1      	strh	r1, [r4, #6]
 8010532:	4628      	mov	r0, r5
 8010534:	9904      	ldr	r1, [sp, #16]
 8010536:	3c08      	subs	r4, #8
 8010538:	3901      	subs	r1, #1
 801053a:	9104      	str	r1, [sp, #16]
 801053c:	4605      	mov	r5, r0
 801053e:	e7d3      	b.n	80104e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 8010540:	4461      	add	r1, ip
 8010542:	b209      	sxth	r1, r1
 8010544:	4549      	cmp	r1, r9
 8010546:	dcf5      	bgt.n	8010534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010548:	eba2 0c0c 	sub.w	ip, r2, ip
 801054c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010550:	e7ef      	b.n	8010532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010552:	428f      	cmp	r7, r1
 8010554:	dcee      	bgt.n	8010534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010556:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801055a:	4461      	add	r1, ip
 801055c:	b209      	sxth	r1, r1
 801055e:	4589      	cmp	r9, r1
 8010560:	dbe8      	blt.n	8010534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010562:	4576      	cmp	r6, lr
 8010564:	fa1f fc8e 	uxth.w	ip, lr
 8010568:	88a1      	ldrh	r1, [r4, #4]
 801056a:	dc07      	bgt.n	801057c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 801056c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010570:	eba1 010c 	sub.w	r1, r1, ip
 8010574:	f8a4 8000 	strh.w	r8, [r4]
 8010578:	80a1      	strh	r1, [r4, #4]
 801057a:	e7da      	b.n	8010532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801057c:	4461      	add	r1, ip
 801057e:	b209      	sxth	r1, r1
 8010580:	4588      	cmp	r8, r1
 8010582:	dbd7      	blt.n	8010534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010584:	9905      	ldr	r1, [sp, #20]
 8010586:	eba1 0c0c 	sub.w	ip, r1, ip
 801058a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801058e:	e7d0      	b.n	8010532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8010590:	20002226 	.word	0x20002226
 8010594:	20002224 	.word	0x20002224
 8010598:	20002230 	.word	0x20002230
 801059c:	2d00      	cmp	r5, #0
 801059e:	f000 816e 	beq.w	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 80105a2:	9b06      	ldr	r3, [sp, #24]
 80105a4:	445b      	add	r3, fp
 80105a6:	461c      	mov	r4, r3
 80105a8:	9b02      	ldr	r3, [sp, #8]
 80105aa:	3301      	adds	r3, #1
 80105ac:	f000 8167 	beq.w	801087e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53e>
 80105b0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80105b4:	4629      	mov	r1, r5
 80105b6:	9803      	ldr	r0, [sp, #12]
 80105b8:	f7ff fd36 	bl	8010028 <_ZNK8touchgfx4Rect8includesERKS0_>
 80105bc:	b120      	cbz	r0, 80105c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 80105be:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80105c2:	9801      	ldr	r0, [sp, #4]
 80105c4:	f7ff fea8 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80105c8:	9903      	ldr	r1, [sp, #12]
 80105ca:	4628      	mov	r0, r5
 80105cc:	f7ff fcba 	bl	800ff44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80105d0:	2800      	cmp	r0, #0
 80105d2:	f000 809c 	beq.w	801070e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 80105d6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80105da:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80105de:	fa1f f189 	uxth.w	r1, r9
 80105e2:	eb01 0c03 	add.w	ip, r1, r3
 80105e6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80105ea:	fa1f fa8c 	uxth.w	sl, ip
 80105ee:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80105f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80105f4:	b283      	uxth	r3, r0
 80105f6:	eb03 050c 	add.w	r5, r3, ip
 80105fa:	b2ad      	uxth	r5, r5
 80105fc:	9505      	str	r5, [sp, #20]
 80105fe:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010602:	4548      	cmp	r0, r9
 8010604:	9504      	str	r5, [sp, #16]
 8010606:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 801060a:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801060e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010612:	f340 8099 	ble.w	8010748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 8010616:	1a5b      	subs	r3, r3, r1
 8010618:	b29b      	uxth	r3, r3
 801061a:	4596      	cmp	lr, r2
 801061c:	fa0f f08a 	sxth.w	r0, sl
 8010620:	b21e      	sxth	r6, r3
 8010622:	dd2e      	ble.n	8010682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 8010624:	9f02      	ldr	r7, [sp, #8]
 8010626:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801062a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801062e:	9f04      	ldr	r7, [sp, #16]
 8010630:	fa1f fe8e 	uxth.w	lr, lr
 8010634:	1a3f      	subs	r7, r7, r0
 8010636:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801063a:	b292      	uxth	r2, r2
 801063c:	ebae 0102 	sub.w	r1, lr, r2
 8010640:	44a6      	add	lr, r4
 8010642:	4402      	add	r2, r0
 8010644:	b289      	uxth	r1, r1
 8010646:	fa0f fe8e 	sxth.w	lr, lr
 801064a:	b212      	sxth	r2, r2
 801064c:	b20d      	sxth	r5, r1
 801064e:	ebae 0202 	sub.w	r2, lr, r2
 8010652:	436f      	muls	r7, r5
 8010654:	4372      	muls	r2, r6
 8010656:	4297      	cmp	r7, r2
 8010658:	db09      	blt.n	801066e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 801065a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801065e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8010662:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010666:	449c      	add	ip, r3
 8010668:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801066c:	e684      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801066e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8010672:	4421      	add	r1, r4
 8010674:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8010678:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801067c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010680:	e67a      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010682:	9f04      	ldr	r7, [sp, #16]
 8010684:	42b8      	cmp	r0, r7
 8010686:	da27      	bge.n	80106d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 8010688:	9902      	ldr	r1, [sp, #8]
 801068a:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 801068e:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010692:	eb05 010e 	add.w	r1, r5, lr
 8010696:	fa1f f881 	uxth.w	r8, r1
 801069a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801069e:	fa0f f988 	sxth.w	r9, r8
 80106a2:	4411      	add	r1, r2
 80106a4:	eba1 0108 	sub.w	r1, r1, r8
 80106a8:	b289      	uxth	r1, r1
 80106aa:	fa0f f881 	sxth.w	r8, r1
 80106ae:	eba2 020e 	sub.w	r2, r2, lr
 80106b2:	1a3f      	subs	r7, r7, r0
 80106b4:	4372      	muls	r2, r6
 80106b6:	fb08 f707 	mul.w	r7, r8, r7
 80106ba:	42ba      	cmp	r2, r7
 80106bc:	dc06      	bgt.n	80106cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 80106be:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80106c2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80106c6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80106ca:	e7ca      	b.n	8010662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 80106cc:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80106d0:	4429      	add	r1, r5
 80106d2:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80106d6:	e64f      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80106d8:	9805      	ldr	r0, [sp, #20]
 80106da:	2d06      	cmp	r5, #6
 80106dc:	ebaa 0000 	sub.w	r0, sl, r0
 80106e0:	b280      	uxth	r0, r0
 80106e2:	fa0f fe80 	sxth.w	lr, r0
 80106e6:	d817      	bhi.n	8010718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 80106e8:	9b04      	ldr	r3, [sp, #16]
 80106ea:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80106ee:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80106f2:	1c6b      	adds	r3, r5, #1
 80106f4:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80106f8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80106fc:	9b01      	ldr	r3, [sp, #4]
 80106fe:	9801      	ldr	r0, [sp, #4]
 8010700:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010704:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010708:	805a      	strh	r2, [r3, #2]
 801070a:	809e      	strh	r6, [r3, #4]
 801070c:	80d9      	strh	r1, [r3, #6]
 801070e:	9b02      	ldr	r3, [sp, #8]
 8010710:	3c08      	subs	r4, #8
 8010712:	3b01      	subs	r3, #1
 8010714:	9302      	str	r3, [sp, #8]
 8010716:	e747      	b.n	80105a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 8010718:	9a02      	ldr	r2, [sp, #8]
 801071a:	45b6      	cmp	lr, r6
 801071c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010720:	db0d      	blt.n	801073e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 8010722:	449c      	add	ip, r3
 8010724:	fa1f fc8c 	uxth.w	ip, ip
 8010728:	445a      	add	r2, fp
 801072a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801072e:	448c      	add	ip, r1
 8010730:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010734:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010738:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801073c:	e61c      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 801073e:	445a      	add	r2, fp
 8010740:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010744:	4484      	add	ip, r0
 8010746:	e78f      	b.n	8010668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010748:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801074c:	fa1f f18e 	uxth.w	r1, lr
 8010750:	eb01 0806 	add.w	r8, r1, r6
 8010754:	b293      	uxth	r3, r2
 8010756:	fa1f f888 	uxth.w	r8, r8
 801075a:	9306      	str	r3, [sp, #24]
 801075c:	fa0f f388 	sxth.w	r3, r8
 8010760:	9307      	str	r3, [sp, #28]
 8010762:	9f06      	ldr	r7, [sp, #24]
 8010764:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010768:	4596      	cmp	lr, r2
 801076a:	443b      	add	r3, r7
 801076c:	b29b      	uxth	r3, r3
 801076e:	9308      	str	r3, [sp, #32]
 8010770:	da24      	bge.n	80107bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 8010772:	9905      	ldr	r1, [sp, #20]
 8010774:	eba3 0308 	sub.w	r3, r3, r8
 8010778:	ebaa 0401 	sub.w	r4, sl, r1
 801077c:	b2a4      	uxth	r4, r4
 801077e:	b29b      	uxth	r3, r3
 8010780:	b225      	sxth	r5, r4
 8010782:	b219      	sxth	r1, r3
 8010784:	eba2 020e 	sub.w	r2, r2, lr
 8010788:	eba9 0000 	sub.w	r0, r9, r0
 801078c:	436a      	muls	r2, r5
 801078e:	4348      	muls	r0, r1
 8010790:	4282      	cmp	r2, r0
 8010792:	9a02      	ldr	r2, [sp, #8]
 8010794:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010798:	445a      	add	r2, fp
 801079a:	dc06      	bgt.n	80107aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801079c:	9b07      	ldr	r3, [sp, #28]
 801079e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80107a2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80107a6:	44a4      	add	ip, r4
 80107a8:	e75e      	b.n	8010668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 80107aa:	9904      	ldr	r1, [sp, #16]
 80107ac:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80107b0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80107b4:	4433      	add	r3, r6
 80107b6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80107ba:	e5dd      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 80107bc:	9f06      	ldr	r7, [sp, #24]
 80107be:	9b04      	ldr	r3, [sp, #16]
 80107c0:	1bc9      	subs	r1, r1, r7
 80107c2:	fa0f f78a 	sxth.w	r7, sl
 80107c6:	b289      	uxth	r1, r1
 80107c8:	429f      	cmp	r7, r3
 80107ca:	fa0f fe81 	sxth.w	lr, r1
 80107ce:	dd24      	ble.n	801081a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4da>
 80107d0:	9a05      	ldr	r2, [sp, #20]
 80107d2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80107d6:	ebaa 0202 	sub.w	r2, sl, r2
 80107da:	9d07      	ldr	r5, [sp, #28]
 80107dc:	b292      	uxth	r2, r2
 80107de:	eba5 0a03 	sub.w	sl, r5, r3
 80107e2:	b214      	sxth	r4, r2
 80107e4:	eba9 0000 	sub.w	r0, r9, r0
 80107e8:	fb0e f000 	mul.w	r0, lr, r0
 80107ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80107f0:	9b02      	ldr	r3, [sp, #8]
 80107f2:	4550      	cmp	r0, sl
 80107f4:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80107f8:	445b      	add	r3, fp
 80107fa:	db03      	blt.n	8010804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c4>
 80107fc:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010800:	4494      	add	ip, r2
 8010802:	e731      	b.n	8010668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 8010804:	9a04      	ldr	r2, [sp, #16]
 8010806:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801080a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 801080e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010812:	4431      	add	r1, r6
 8010814:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010818:	e75b      	b.n	80106d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 801081a:	9b08      	ldr	r3, [sp, #32]
 801081c:	2d06      	cmp	r5, #6
 801081e:	eba3 0308 	sub.w	r3, r3, r8
 8010822:	b29b      	uxth	r3, r3
 8010824:	b218      	sxth	r0, r3
 8010826:	d813      	bhi.n	8010850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x510>
 8010828:	9b07      	ldr	r3, [sp, #28]
 801082a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 801082e:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010832:	1c6b      	adds	r3, r5, #1
 8010834:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010838:	9b01      	ldr	r3, [sp, #4]
 801083a:	9901      	ldr	r1, [sp, #4]
 801083c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010840:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010844:	805a      	strh	r2, [r3, #2]
 8010846:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010848:	f8a3 e006 	strh.w	lr, [r3, #6]
 801084c:	809a      	strh	r2, [r3, #4]
 801084e:	e75e      	b.n	801070e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 8010850:	9c02      	ldr	r4, [sp, #8]
 8010852:	4570      	cmp	r0, lr
 8010854:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010858:	db0d      	blt.n	8010876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 801085a:	4431      	add	r1, r6
 801085c:	9b06      	ldr	r3, [sp, #24]
 801085e:	b289      	uxth	r1, r1
 8010860:	445c      	add	r4, fp
 8010862:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010866:	4419      	add	r1, r3
 8010868:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801086c:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010870:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010874:	e580      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010876:	445c      	add	r4, fp
 8010878:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801087c:	e79a      	b.n	80107b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 801087e:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8010882:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010886:	1e65      	subs	r5, r4, #1
 8010888:	b2ad      	uxth	r5, r5
 801088a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801088e:	42b5      	cmp	r5, r6
 8010890:	d044      	beq.n	801091c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5dc>
 8010892:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8010896:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 801089a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801089e:	4282      	cmp	r2, r0
 80108a0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80108a4:	d11f      	bne.n	80108e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a6>
 80108a6:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80108aa:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80108ae:	459c      	cmp	ip, r3
 80108b0:	d119      	bne.n	80108e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a6>
 80108b2:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80108b6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80108ba:	19d8      	adds	r0, r3, r7
 80108bc:	b200      	sxth	r0, r0
 80108be:	4288      	cmp	r0, r1
 80108c0:	d109      	bne.n	80108d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x596>
 80108c2:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80108c6:	4413      	add	r3, r2
 80108c8:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80108cc:	4629      	mov	r1, r5
 80108ce:	9801      	ldr	r0, [sp, #4]
 80108d0:	f7ff fd22 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80108d4:	e003      	b.n	80108de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 80108d6:	4411      	add	r1, r2
 80108d8:	b209      	sxth	r1, r1
 80108da:	42b9      	cmp	r1, r7
 80108dc:	d0f3      	beq.n	80108c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 80108de:	3d01      	subs	r5, #1
 80108e0:	b2ad      	uxth	r5, r5
 80108e2:	3c08      	subs	r4, #8
 80108e4:	e7d3      	b.n	801088e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 80108e6:	42b9      	cmp	r1, r7
 80108e8:	d1f9      	bne.n	80108de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 80108ea:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 80108ee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80108f2:	4299      	cmp	r1, r3
 80108f4:	d1f3      	bne.n	80108de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 80108f6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80108fa:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 80108fe:	181f      	adds	r7, r3, r0
 8010900:	b23f      	sxth	r7, r7
 8010902:	42ba      	cmp	r2, r7
 8010904:	d105      	bne.n	8010912 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d2>
 8010906:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801090a:	440b      	add	r3, r1
 801090c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010910:	e7dc      	b.n	80108cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010912:	440a      	add	r2, r1
 8010914:	b212      	sxth	r2, r2
 8010916:	4290      	cmp	r0, r2
 8010918:	d1e1      	bne.n	80108de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59e>
 801091a:	e7f6      	b.n	801090a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801091c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010920:	2e07      	cmp	r6, #7
 8010922:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010926:	d812      	bhi.n	801094e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>
 8010928:	1c75      	adds	r5, r6, #1
 801092a:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801092e:	9d01      	ldr	r5, [sp, #4]
 8010930:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010934:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010938:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801093c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8010940:	442c      	add	r4, r5
 8010942:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010946:	8061      	strh	r1, [r4, #2]
 8010948:	80a2      	strh	r2, [r4, #4]
 801094a:	80e3      	strh	r3, [r4, #6]
 801094c:	e57e      	b.n	801044c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 801094e:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8010952:	f04f 37ff 	mov.w	r7, #4294967295
 8010956:	2500      	movs	r5, #0
 8010958:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801095c:	3e01      	subs	r6, #1
 801095e:	445c      	add	r4, fp
 8010960:	9305      	str	r3, [sp, #20]
 8010962:	1e72      	subs	r2, r6, #1
 8010964:	4691      	mov	r9, r2
 8010966:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801096a:	9302      	str	r3, [sp, #8]
 801096c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010970:	9304      	str	r3, [sp, #16]
 8010972:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8010976:	f1b9 3fff 	cmp.w	r9, #4294967295
 801097a:	bf16      	itet	ne
 801097c:	9905      	ldrne	r1, [sp, #20]
 801097e:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010982:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010986:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801098a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801098e:	6818      	ldr	r0, [r3, #0]
 8010990:	fb18 f801 	smulbb	r8, r8, r1
 8010994:	6859      	ldr	r1, [r3, #4]
 8010996:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801099a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801099e:	4671      	mov	r1, lr
 80109a0:	a80c      	add	r0, sp, #48	@ 0x30
 80109a2:	9207      	str	r2, [sp, #28]
 80109a4:	9306      	str	r3, [sp, #24]
 80109a6:	f7ff fb65 	bl	8010074 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80109aa:	f04f 0c08 	mov.w	ip, #8
 80109ae:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80109b2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80109b6:	9b04      	ldr	r3, [sp, #16]
 80109b8:	9a02      	ldr	r2, [sp, #8]
 80109ba:	fb10 f001 	smulbb	r0, r0, r1
 80109be:	fb02 8803 	mla	r8, r2, r3, r8
 80109c2:	eba0 0108 	sub.w	r1, r0, r8
 80109c6:	fb90 f0fc 	sdiv	r0, r0, ip
 80109ca:	4288      	cmp	r0, r1
 80109cc:	dc20      	bgt.n	8010a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80109ce:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80109d2:	4551      	cmp	r1, sl
 80109d4:	da03      	bge.n	80109de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 80109d6:	b1d9      	cbz	r1, 8010a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 80109d8:	468a      	mov	sl, r1
 80109da:	464f      	mov	r7, r9
 80109dc:	4635      	mov	r5, r6
 80109de:	f109 39ff 	add.w	r9, r9, #4294967295
 80109e2:	f119 0f02 	cmn.w	r9, #2
 80109e6:	d1c6      	bne.n	8010976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 80109e8:	4616      	mov	r6, r2
 80109ea:	3201      	adds	r2, #1
 80109ec:	f1a4 0408 	sub.w	r4, r4, #8
 80109f0:	d1b7      	bne.n	8010962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 80109f2:	9b01      	ldr	r3, [sp, #4]
 80109f4:	b2ac      	uxth	r4, r5
 80109f6:	00ed      	lsls	r5, r5, #3
 80109f8:	1958      	adds	r0, r3, r5
 80109fa:	1c7b      	adds	r3, r7, #1
 80109fc:	d10b      	bne.n	8010a16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 80109fe:	4601      	mov	r1, r0
 8010a00:	9803      	ldr	r0, [sp, #12]
 8010a02:	f7ff fb37 	bl	8010074 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010a06:	4621      	mov	r1, r4
 8010a08:	9801      	ldr	r0, [sp, #4]
 8010a0a:	f7ff fc85 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010a0e:	e4b3      	b.n	8010378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 8010a10:	464f      	mov	r7, r9
 8010a12:	4635      	mov	r5, r6
 8010a14:	e7ed      	b.n	80109f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 8010a16:	9b01      	ldr	r3, [sp, #4]
 8010a18:	00ff      	lsls	r7, r7, #3
 8010a1a:	19d9      	adds	r1, r3, r7
 8010a1c:	f7ff fb2a 	bl	8010074 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010a20:	9b03      	ldr	r3, [sp, #12]
 8010a22:	445f      	add	r7, fp
 8010a24:	cb03      	ldmia	r3!, {r0, r1}
 8010a26:	445d      	add	r5, fp
 8010a28:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8010a2c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010a30:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010a34:	9b03      	ldr	r3, [sp, #12]
 8010a36:	6869      	ldr	r1, [r5, #4]
 8010a38:	c303      	stmia	r3!, {r0, r1}
 8010a3a:	e7e4      	b.n	8010a06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

08010a3c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a40:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010a44:	b0a1      	sub	sp, #132	@ 0x84
 8010a46:	4604      	mov	r4, r0
 8010a48:	4630      	mov	r0, r6
 8010a4a:	f7fc fa58 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a4e:	4605      	mov	r5, r0
 8010a50:	b948      	cbnz	r0, 8010a66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010a52:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010a56:	6823      	ldr	r3, [r4, #0]
 8010a58:	4620      	mov	r0, r4
 8010a5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010a5c:	4798      	blx	r3
 8010a5e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8010a62:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8010a66:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010a6a:	2b00      	cmp	r3, #0
 8010a6c:	d149      	bne.n	8010b02 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 8010a6e:	4bb2      	ldr	r3, [pc, #712]	@ (8010d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8010a70:	681b      	ldr	r3, [r3, #0]
 8010a72:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 8010a76:	1ebb      	subs	r3, r7, #2
 8010a78:	425f      	negs	r7, r3
 8010a7a:	415f      	adcs	r7, r3
 8010a7c:	4baf      	ldr	r3, [pc, #700]	@ (8010d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 8010a7e:	681b      	ldr	r3, [r3, #0]
 8010a80:	2b00      	cmp	r3, #0
 8010a82:	d040      	beq.n	8010b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010a84:	4dae      	ldr	r5, [pc, #696]	@ (8010d40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 8010a86:	4628      	mov	r0, r5
 8010a88:	f7fc fa39 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a8c:	4606      	mov	r6, r0
 8010a8e:	2800      	cmp	r0, #0
 8010a90:	d139      	bne.n	8010b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 8010a92:	4628      	mov	r0, r5
 8010a94:	f7ff f98c 	bl	800fdb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010a98:	6823      	ldr	r3, [r4, #0]
 8010a9a:	6829      	ldr	r1, [r5, #0]
 8010a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010a9e:	686a      	ldr	r2, [r5, #4]
 8010aa0:	4620      	mov	r0, r4
 8010aa2:	4798      	blx	r3
 8010aa4:	802e      	strh	r6, [r5, #0]
 8010aa6:	806e      	strh	r6, [r5, #2]
 8010aa8:	80ae      	strh	r6, [r5, #4]
 8010aaa:	80ee      	strh	r6, [r5, #6]
 8010aac:	af0f      	add	r7, sp, #60	@ 0x3c
 8010aae:	4ea5      	ldr	r6, [pc, #660]	@ (8010d44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 8010ab0:	4638      	mov	r0, r7
 8010ab2:	f7ff fbd9 	bl	8010268 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010ab6:	8835      	ldrh	r5, [r6, #0]
 8010ab8:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 8010abc:	462b      	mov	r3, r5
 8010abe:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8010ac2:	4563      	cmp	r3, ip
 8010ac4:	d224      	bcs.n	8010b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010ac6:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 8010aca:	2907      	cmp	r1, #7
 8010acc:	d816      	bhi.n	8010afc <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010ace:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010ad2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8010ad6:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 8010ada:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 8010ade:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8010ae2:	1c4a      	adds	r2, r1, #1
 8010ae4:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 8010ae8:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 8010aec:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 8010af0:	f8a2 a002 	strh.w	sl, [r2, #2]
 8010af4:	f8a2 8004 	strh.w	r8, [r2, #4]
 8010af8:	f8a2 e006 	strh.w	lr, [r2, #6]
 8010afc:	3301      	adds	r3, #1
 8010afe:	b29b      	uxth	r3, r3
 8010b00:	e7df      	b.n	8010ac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 8010b02:	2701      	movs	r7, #1
 8010b04:	e7ba      	b.n	8010a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 8010b06:	2f00      	cmp	r7, #0
 8010b08:	d1d0      	bne.n	8010aac <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 8010b0a:	b021      	add	sp, #132	@ 0x84
 8010b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b10:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010b14:	42ab      	cmp	r3, r5
 8010b16:	d90c      	bls.n	8010b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 8010b18:	6822      	ldr	r2, [r4, #0]
 8010b1a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8010b1e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010b20:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010b24:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8010b28:	4620      	mov	r0, r4
 8010b2a:	3501      	adds	r5, #1
 8010b2c:	47b8      	blx	r7
 8010b2e:	b2ad      	uxth	r5, r5
 8010b30:	e7ee      	b.n	8010b10 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 8010b32:	4d81      	ldr	r5, [pc, #516]	@ (8010d38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 8010b34:	6828      	ldr	r0, [r5, #0]
 8010b36:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8010b3a:	2b01      	cmp	r3, #1
 8010b3c:	f040 813d 	bne.w	8010dba <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
 8010b40:	4a81      	ldr	r2, [pc, #516]	@ (8010d48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 8010b42:	8833      	ldrh	r3, [r6, #0]
 8010b44:	7812      	ldrb	r2, [r2, #0]
 8010b46:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 8010b4a:	2a01      	cmp	r2, #1
 8010b4c:	d014      	beq.n	8010b78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8010b4e:	f04f 0900 	mov.w	r9, #0
 8010b52:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 8010b56:	32ae      	adds	r2, #174	@ 0xae
 8010b58:	4283      	cmp	r3, r0
 8010b5a:	f102 0208 	add.w	r2, r2, #8
 8010b5e:	f280 8083 	bge.w	8010c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8010b62:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 8010b66:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 8010b6a:	3301      	adds	r3, #1
 8010b6c:	4439      	add	r1, r7
 8010b6e:	b209      	sxth	r1, r1
 8010b70:	4589      	cmp	r9, r1
 8010b72:	bfb8      	it	lt
 8010b74:	4689      	movlt	r9, r1
 8010b76:	e7ef      	b.n	8010b58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 8010b78:	4f74      	ldr	r7, [pc, #464]	@ (8010d4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 8010b7a:	883a      	ldrh	r2, [r7, #0]
 8010b7c:	4693      	mov	fp, r2
 8010b7e:	4283      	cmp	r3, r0
 8010b80:	da08      	bge.n	8010b94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 8010b82:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 8010b86:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 8010b8a:	3301      	adds	r3, #1
 8010b8c:	458b      	cmp	fp, r1
 8010b8e:	bfa8      	it	ge
 8010b90:	468b      	movge	fp, r1
 8010b92:	e7f4      	b.n	8010b7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 8010b94:	2300      	movs	r3, #0
 8010b96:	2a0f      	cmp	r2, #15
 8010b98:	bf98      	it	ls
 8010b9a:	f04f 0801 	movls.w	r8, #1
 8010b9e:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 8010d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 8010ba2:	bf88      	it	hi
 8010ba4:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 8010ba8:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010bac:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010bb0:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8010bb4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010bb8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8010bbc:	6828      	ldr	r0, [r5, #0]
 8010bbe:	455b      	cmp	r3, fp
 8010bc0:	f340 80c8 	ble.w	8010d54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010bc4:	6803      	ldr	r3, [r0, #0]
 8010bc6:	f8b7 a000 	ldrh.w	sl, [r7]
 8010bca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010bce:	4798      	blx	r3
 8010bd0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8010bd4:	ebaa 0000 	sub.w	r0, sl, r0
 8010bd8:	682b      	ldr	r3, [r5, #0]
 8010bda:	b280      	uxth	r0, r0
 8010bdc:	ebac 0e08 	sub.w	lr, ip, r8
 8010be0:	4570      	cmp	r0, lr
 8010be2:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 8010be6:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 8010bea:	dd05      	ble.n	8010bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
 8010bec:	4558      	cmp	r0, fp
 8010bee:	dd03      	ble.n	8010bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
 8010bf0:	b901      	cbnz	r1, 8010bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 8010bf2:	b392      	cbz	r2, 8010c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
 8010bf4:	4658      	mov	r0, fp
 8010bf6:	e006      	b.n	8010c06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
 8010bf8:	2900      	cmp	r1, #0
 8010bfa:	d1fb      	bne.n	8010bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 8010bfc:	2a00      	cmp	r2, #0
 8010bfe:	d1f9      	bne.n	8010bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
 8010c00:	4558      	cmp	r0, fp
 8010c02:	bfb8      	it	lt
 8010c04:	4658      	movlt	r0, fp
 8010c06:	2200      	movs	r2, #0
 8010c08:	f9b9 3000 	ldrsh.w	r3, [r9]
 8010c0c:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 8010c10:	f8b6 a000 	ldrh.w	sl, [r6]
 8010c14:	ebac 0000 	sub.w	r0, ip, r0
 8010c18:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010c1c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8010c20:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010c24:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010c28:	4553      	cmp	r3, sl
 8010c2a:	ddc5      	ble.n	8010bb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8010c2c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010c30:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010c34:	ab0d      	add	r3, sp, #52	@ 0x34
 8010c36:	6851      	ldr	r1, [r2, #4]
 8010c38:	c303      	stmia	r3!, {r0, r1}
 8010c3a:	a80d      	add	r0, sp, #52	@ 0x34
 8010c3c:	a90b      	add	r1, sp, #44	@ 0x2c
 8010c3e:	f7fc f91b 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8010c42:	a80d      	add	r0, sp, #52	@ 0x34
 8010c44:	f7fc f95b 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c48:	b920      	cbnz	r0, 8010c54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
 8010c4a:	6823      	ldr	r3, [r4, #0]
 8010c4c:	a90d      	add	r1, sp, #52	@ 0x34
 8010c4e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010c50:	4620      	mov	r0, r4
 8010c52:	4798      	blx	r3
 8010c54:	f10a 0a01 	add.w	sl, sl, #1
 8010c58:	e7e4      	b.n	8010c24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
 8010c5a:	681a      	ldr	r2, [r3, #0]
 8010c5c:	2101      	movs	r1, #1
 8010c5e:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 8010c62:	4618      	mov	r0, r3
 8010c64:	4790      	blx	r2
 8010c66:	e7a7      	b.n	8010bb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8010c68:	4b39      	ldr	r3, [pc, #228]	@ (8010d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
 8010c6a:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 8010d4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 8010c6e:	881f      	ldrh	r7, [r3, #0]
 8010c70:	2300      	movs	r3, #0
 8010c72:	2f0f      	cmp	r7, #15
 8010c74:	bf98      	it	ls
 8010c76:	2701      	movls	r7, #1
 8010c78:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 8010c7c:	bf88      	it	hi
 8010c7e:	08ff      	lsrhi	r7, r7, #3
 8010c80:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010c84:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 8010c88:	6828      	ldr	r0, [r5, #0]
 8010c8a:	4413      	add	r3, r2
 8010c8c:	b21b      	sxth	r3, r3
 8010c8e:	454b      	cmp	r3, r9
 8010c90:	da60      	bge.n	8010d54 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010c92:	6803      	ldr	r3, [r0, #0]
 8010c94:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010c98:	4798      	blx	r3
 8010c9a:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 8010c9e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8010ca2:	682a      	ldr	r2, [r5, #0]
 8010ca4:	4473      	add	r3, lr
 8010ca6:	b21b      	sxth	r3, r3
 8010ca8:	eb03 0e07 	add.w	lr, r3, r7
 8010cac:	4570      	cmp	r0, lr
 8010cae:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 8010cb2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 8010cb6:	da0d      	bge.n	8010cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x298>
 8010cb8:	4548      	cmp	r0, r9
 8010cba:	da0b      	bge.n	8010cd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x298>
 8010cbc:	f1bc 0f00 	cmp.w	ip, #0
 8010cc0:	d138      	bne.n	8010d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 8010cc2:	2900      	cmp	r1, #0
 8010cc4:	d136      	bne.n	8010d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 8010cc6:	6813      	ldr	r3, [r2, #0]
 8010cc8:	2101      	movs	r1, #1
 8010cca:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8010cce:	4610      	mov	r0, r2
 8010cd0:	4798      	blx	r3
 8010cd2:	e7d5      	b.n	8010c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010cd4:	f1bc 0f00 	cmp.w	ip, #0
 8010cd8:	d12c      	bne.n	8010d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 8010cda:	bb59      	cbnz	r1, 8010d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>
 8010cdc:	4548      	cmp	r0, r9
 8010cde:	bfa8      	it	ge
 8010ce0:	4648      	movge	r0, r9
 8010ce2:	2100      	movs	r1, #0
 8010ce4:	f9b8 2000 	ldrsh.w	r2, [r8]
 8010ce8:	1ac0      	subs	r0, r0, r3
 8010cea:	f8b6 a000 	ldrh.w	sl, [r6]
 8010cee:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010cf2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010cf6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8010cfa:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 8010cfe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010d02:	4553      	cmp	r3, sl
 8010d04:	ddbc      	ble.n	8010c80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8010d06:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8010d0a:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010d0e:	ab0d      	add	r3, sp, #52	@ 0x34
 8010d10:	6851      	ldr	r1, [r2, #4]
 8010d12:	c303      	stmia	r3!, {r0, r1}
 8010d14:	a80d      	add	r0, sp, #52	@ 0x34
 8010d16:	a90b      	add	r1, sp, #44	@ 0x2c
 8010d18:	f7fc f8ae 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8010d1c:	a80d      	add	r0, sp, #52	@ 0x34
 8010d1e:	f7fc f8ee 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d22:	b920      	cbnz	r0, 8010d2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
 8010d24:	6823      	ldr	r3, [r4, #0]
 8010d26:	a90d      	add	r1, sp, #52	@ 0x34
 8010d28:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010d2a:	4620      	mov	r0, r4
 8010d2c:	4798      	blx	r3
 8010d2e:	f10a 0a01 	add.w	sl, sl, #1
 8010d32:	e7e4      	b.n	8010cfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 8010d34:	4648      	mov	r0, r9
 8010d36:	e7d4      	b.n	8010ce2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a6>
 8010d38:	20002230 	.word	0x20002230
 8010d3c:	20002268 	.word	0x20002268
 8010d40:	20002274 	.word	0x20002274
 8010d44:	20000014 	.word	0x20000014
 8010d48:	20002228 	.word	0x20002228
 8010d4c:	20002224 	.word	0x20002224
 8010d50:	20002226 	.word	0x20002226
 8010d54:	6828      	ldr	r0, [r5, #0]
 8010d56:	6803      	ldr	r3, [r0, #0]
 8010d58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010d5a:	4798      	blx	r3
 8010d5c:	4ba4      	ldr	r3, [pc, #656]	@ (8010ff0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 8010d5e:	781b      	ldrb	r3, [r3, #0]
 8010d60:	2b00      	cmp	r3, #0
 8010d62:	f43f aed2 	beq.w	8010b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010d66:	2300      	movs	r3, #0
 8010d68:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8010d6c:	4ba1      	ldr	r3, [pc, #644]	@ (8010ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 8010d6e:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 8010d72:	881b      	ldrh	r3, [r3, #0]
 8010d74:	a80f      	add	r0, sp, #60	@ 0x3c
 8010d76:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 8010d7a:	42b3      	cmp	r3, r6
 8010d7c:	f4bf aec5 	bcs.w	8010b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 8010d80:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8010d84:	2907      	cmp	r1, #7
 8010d86:	d815      	bhi.n	8010db4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
 8010d88:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8010d8c:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8010d90:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8010d94:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8010d98:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 8010d9c:	1c4a      	adds	r2, r1, #1
 8010d9e:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8010da2:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 8010da6:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 8010daa:	f8a2 e002 	strh.w	lr, [r2, #2]
 8010dae:	f8a2 c004 	strh.w	ip, [r2, #4]
 8010db2:	80d7      	strh	r7, [r2, #6]
 8010db4:	3301      	adds	r3, #1
 8010db6:	b29b      	uxth	r3, r3
 8010db8:	e7df      	b.n	8010d7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
 8010dba:	2b02      	cmp	r3, #2
 8010dbc:	f040 80cf 	bne.w	8010f5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8010dc0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010dc4:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 8010dc8:	9308      	str	r3, [sp, #32]
 8010dca:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 8010dce:	f10b 37ff 	add.w	r7, fp, #4294967295
 8010dd2:	9307      	str	r3, [sp, #28]
 8010dd4:	6803      	ldr	r3, [r0, #0]
 8010dd6:	b2bf      	uxth	r7, r7
 8010dd8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010ddc:	4798      	blx	r3
 8010dde:	4b86      	ldr	r3, [pc, #536]	@ (8010ff8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 8010de0:	4682      	mov	sl, r0
 8010de2:	881b      	ldrh	r3, [r3, #0]
 8010de4:	2000      	movs	r0, #0
 8010de6:	9302      	str	r3, [sp, #8]
 8010de8:	4b84      	ldr	r3, [pc, #528]	@ (8010ffc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 8010dea:	fa0f f887 	sxth.w	r8, r7
 8010dee:	881e      	ldrh	r6, [r3, #0]
 8010df0:	4b83      	ldr	r3, [pc, #524]	@ (8011000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010df2:	781b      	ldrb	r3, [r3, #0]
 8010df4:	2b01      	cmp	r3, #1
 8010df6:	bf1e      	ittt	ne
 8010df8:	9b02      	ldrne	r3, [sp, #8]
 8010dfa:	9602      	strne	r6, [sp, #8]
 8010dfc:	461e      	movne	r6, r3
 8010dfe:	f7f9 fe3d 	bl	800aa7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010e02:	fb96 fbfb 	sdiv	fp, r6, fp
 8010e06:	fb0b f808 	mul.w	r8, fp, r8
 8010e0a:	45c2      	cmp	sl, r8
 8010e0c:	da0c      	bge.n	8010e28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 8010e0e:	6828      	ldr	r0, [r5, #0]
 8010e10:	210a      	movs	r1, #10
 8010e12:	6803      	ldr	r3, [r0, #0]
 8010e14:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010e18:	4798      	blx	r3
 8010e1a:	6828      	ldr	r0, [r5, #0]
 8010e1c:	6803      	ldr	r3, [r0, #0]
 8010e1e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010e22:	4798      	blx	r3
 8010e24:	4682      	mov	sl, r0
 8010e26:	e7f0      	b.n	8010e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 8010e28:	f04f 0800 	mov.w	r8, #0
 8010e2c:	4645      	mov	r5, r8
 8010e2e:	2000      	movs	r0, #0
 8010e30:	f7f9 fe40 	bl	800aab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010e34:	fa1f f38b 	uxth.w	r3, fp
 8010e38:	fb17 f703 	smulbb	r7, r7, r3
 8010e3c:	9304      	str	r3, [sp, #16]
 8010e3e:	b2bb      	uxth	r3, r7
 8010e40:	9305      	str	r3, [sp, #20]
 8010e42:	4f70      	ldr	r7, [pc, #448]	@ (8011004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 8010e44:	0973      	lsrs	r3, r6, #5
 8010e46:	9306      	str	r3, [sp, #24]
 8010e48:	42b5      	cmp	r5, r6
 8010e4a:	d087      	beq.n	8010d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010e4c:	6838      	ldr	r0, [r7, #0]
 8010e4e:	6803      	ldr	r3, [r0, #0]
 8010e50:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8010e54:	4798      	blx	r3
 8010e56:	4582      	cmp	sl, r0
 8010e58:	4681      	mov	r9, r0
 8010e5a:	d907      	bls.n	8010e6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 8010e5c:	f1b8 0f00 	cmp.w	r8, #0
 8010e60:	d007      	beq.n	8010e72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 8010e62:	6838      	ldr	r0, [r7, #0]
 8010e64:	6803      	ldr	r3, [r0, #0]
 8010e66:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8010e6a:	e776      	b.n	8010d5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8010e6c:	f1b8 0f00 	cmp.w	r8, #0
 8010e70:	d003      	beq.n	8010e7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 8010e72:	454d      	cmp	r5, r9
 8010e74:	d3f5      	bcc.n	8010e62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 8010e76:	f04f 0801 	mov.w	r8, #1
 8010e7a:	fb95 f3fb 	sdiv	r3, r5, fp
 8010e7e:	9a04      	ldr	r2, [sp, #16]
 8010e80:	9303      	str	r3, [sp, #12]
 8010e82:	3301      	adds	r3, #1
 8010e84:	fb13 f302 	smulbb	r3, r3, r2
 8010e88:	b299      	uxth	r1, r3
 8010e8a:	f1b8 0f00 	cmp.w	r8, #0
 8010e8e:	d04e      	beq.n	8010f2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 8010e90:	eb09 030b 	add.w	r3, r9, fp
 8010e94:	42b3      	cmp	r3, r6
 8010e96:	bfa8      	it	ge
 8010e98:	4633      	movge	r3, r6
 8010e9a:	b29b      	uxth	r3, r3
 8010e9c:	428b      	cmp	r3, r1
 8010e9e:	bf94      	ite	ls
 8010ea0:	ebc5 0203 	rsbls	r2, r5, r3
 8010ea4:	ebc5 0201 	rsbhi	r2, r5, r1
 8010ea8:	9807      	ldr	r0, [sp, #28]
 8010eaa:	4282      	cmp	r2, r0
 8010eac:	bfa8      	it	ge
 8010eae:	4602      	movge	r2, r0
 8010eb0:	9808      	ldr	r0, [sp, #32]
 8010eb2:	fa1f fa82 	uxth.w	sl, r2
 8010eb6:	4582      	cmp	sl, r0
 8010eb8:	d205      	bcs.n	8010ec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010eba:	fa15 f082 	uxtah	r0, r5, r2
 8010ebe:	4286      	cmp	r6, r0
 8010ec0:	d001      	beq.n	8010ec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 8010ec2:	4299      	cmp	r1, r3
 8010ec4:	d240      	bcs.n	8010f48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 8010ec6:	2001      	movs	r0, #1
 8010ec8:	9209      	str	r2, [sp, #36]	@ 0x24
 8010eca:	f7f9 fdd7 	bl	800aa7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010ece:	6838      	ldr	r0, [r7, #0]
 8010ed0:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8010ed4:	6803      	ldr	r3, [r0, #0]
 8010ed6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010eda:	4798      	blx	r3
 8010edc:	4b48      	ldr	r3, [pc, #288]	@ (8011000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010ede:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010ee0:	781b      	ldrb	r3, [r3, #0]
 8010ee2:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8010ee6:	2b01      	cmp	r3, #1
 8010ee8:	b212      	sxth	r2, r2
 8010eea:	f04f 0000 	mov.w	r0, #0
 8010eee:	d122      	bne.n	8010f36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 8010ef0:	1b73      	subs	r3, r6, r5
 8010ef2:	eba3 030a 	sub.w	r3, r3, sl
 8010ef6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8010efa:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 8010efe:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8010f02:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 8010f06:	6823      	ldr	r3, [r4, #0]
 8010f08:	a90d      	add	r1, sp, #52	@ 0x34
 8010f0a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010f0c:	4620      	mov	r0, r4
 8010f0e:	4798      	blx	r3
 8010f10:	6838      	ldr	r0, [r7, #0]
 8010f12:	9b03      	ldr	r3, [sp, #12]
 8010f14:	4455      	add	r5, sl
 8010f16:	4259      	negs	r1, r3
 8010f18:	6803      	ldr	r3, [r0, #0]
 8010f1a:	b209      	sxth	r1, r1
 8010f1c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8010f20:	4798      	blx	r3
 8010f22:	2001      	movs	r0, #1
 8010f24:	b2ad      	uxth	r5, r5
 8010f26:	f7f9 fdc5 	bl	800aab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010f2a:	46ca      	mov	sl, r9
 8010f2c:	e78c      	b.n	8010e48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 8010f2e:	9b05      	ldr	r3, [sp, #20]
 8010f30:	eba9 0303 	sub.w	r3, r9, r3
 8010f34:	e7b1      	b.n	8010e9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8010f36:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 8010f3a:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 8010f3e:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 8010f42:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 8010f46:	e7de      	b.n	8010f06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 8010f48:	6838      	ldr	r0, [r7, #0]
 8010f4a:	6803      	ldr	r3, [r0, #0]
 8010f4c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010f4e:	4798      	blx	r3
 8010f50:	6838      	ldr	r0, [r7, #0]
 8010f52:	9906      	ldr	r1, [sp, #24]
 8010f54:	6803      	ldr	r3, [r0, #0]
 8010f56:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8010f5a:	4798      	blx	r3
 8010f5c:	e7e5      	b.n	8010f2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 8010f5e:	2b03      	cmp	r3, #3
 8010f60:	f040 8130 	bne.w	80111c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 8010f64:	4b26      	ldr	r3, [pc, #152]	@ (8011000 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 8010f66:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 8010f6a:	781b      	ldrb	r3, [r3, #0]
 8010f6c:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8010f70:	2b01      	cmp	r3, #1
 8010f72:	f000 8093 	beq.w	801109c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8010f76:	8832      	ldrh	r2, [r6, #0]
 8010f78:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8010f7c:	3201      	adds	r2, #1
 8010f7e:	b292      	uxth	r2, r2
 8010f80:	2900      	cmp	r1, #0
 8010f82:	f43f aeeb 	beq.w	8010d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8010f86:	4694      	mov	ip, r2
 8010f88:	f04f 0800 	mov.w	r8, #0
 8010f8c:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 8010f90:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 8010f94:	441d      	add	r5, r3
 8010f96:	b22d      	sxth	r5, r5
 8010f98:	fa1f f38c 	uxth.w	r3, ip
 8010f9c:	4299      	cmp	r1, r3
 8010f9e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8010fa2:	f240 80ba 	bls.w	801111a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 8010fa6:	4427      	add	r7, r4
 8010fa8:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010fac:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8010fb0:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010fb4:	4283      	cmp	r3, r0
 8010fb6:	f340 809c 	ble.w	80110f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 8010fba:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 8010fbe:	46e0      	mov	r8, ip
 8010fc0:	4405      	add	r5, r0
 8010fc2:	b22d      	sxth	r5, r5
 8010fc4:	429d      	cmp	r5, r3
 8010fc6:	bfa8      	it	ge
 8010fc8:	461d      	movge	r5, r3
 8010fca:	f10c 0c01 	add.w	ip, ip, #1
 8010fce:	e7e3      	b.n	8010f98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 8010fd0:	d10a      	bne.n	8010fe8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 8010fd2:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 8010fd6:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8010fda:	4562      	cmp	r2, ip
 8010fdc:	bfb8      	it	lt
 8010fde:	4662      	movlt	r2, ip
 8010fe0:	4288      	cmp	r0, r1
 8010fe2:	bfb8      	it	lt
 8010fe4:	4698      	movlt	r8, r3
 8010fe6:	e082      	b.n	80110ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010fe8:	428a      	cmp	r2, r1
 8010fea:	bfb8      	it	lt
 8010fec:	460a      	movlt	r2, r1
 8010fee:	e07e      	b.n	80110ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 8010ff0:	2000222e 	.word	0x2000222e
 8010ff4:	20000014 	.word	0x20000014
 8010ff8:	20002226 	.word	0x20002226
 8010ffc:	20002224 	.word	0x20002224
 8011000:	20002228 	.word	0x20002228
 8011004:	20002230 	.word	0x20002230
 8011008:	19e1      	adds	r1, r4, r7
 801100a:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801100e:	ab0d      	add	r3, sp, #52	@ 0x34
 8011010:	6849      	ldr	r1, [r1, #4]
 8011012:	c303      	stmia	r3!, {r0, r1}
 8011014:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 8011018:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801101c:	454b      	cmp	r3, r9
 801101e:	bfb8      	it	lt
 8011020:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 8011024:	440b      	add	r3, r1
 8011026:	1a9b      	subs	r3, r3, r2
 8011028:	a80d      	add	r0, sp, #52	@ 0x34
 801102a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801102e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011032:	f7fe fed7 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011036:	a80d      	add	r0, sp, #52	@ 0x34
 8011038:	f7fb ff61 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 801103c:	bb70      	cbnz	r0, 801109c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 801103e:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 8011042:	6828      	ldr	r0, [r5, #0]
 8011044:	45cc      	cmp	ip, r9
 8011046:	f8d0 e000 	ldr.w	lr, [r0]
 801104a:	bfd4      	ite	le
 801104c:	fa1f fc8c 	uxthle.w	ip, ip
 8011050:	fa1f fc89 	uxthgt.w	ip, r9
 8011054:	f8cd c000 	str.w	ip, [sp]
 8011058:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 801105c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011060:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8011064:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011068:	47d8      	blx	fp
 801106a:	4683      	mov	fp, r0
 801106c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8011070:	a80d      	add	r0, sp, #52	@ 0x34
 8011072:	f7fe fe9d 	bl	800fdb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011076:	6823      	ldr	r3, [r4, #0]
 8011078:	4620      	mov	r0, r4
 801107a:	4427      	add	r7, r4
 801107c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801107e:	a90d      	add	r1, sp, #52	@ 0x34
 8011080:	4798      	blx	r3
 8011082:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 8011086:	eba0 000b 	sub.w	r0, r0, fp
 801108a:	b200      	sxth	r0, r0
 801108c:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 8011090:	b920      	cbnz	r0, 801109c <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 8011092:	fa1f f188 	uxth.w	r1, r8
 8011096:	4650      	mov	r0, sl
 8011098:	f7ff f93e 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801109c:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80110a0:	f1bb 0f00 	cmp.w	fp, #0
 80110a4:	f43f ae5a 	beq.w	8010d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 80110a8:	f04f 0800 	mov.w	r8, #0
 80110ac:	8833      	ldrh	r3, [r6, #0]
 80110ae:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80110b2:	3301      	adds	r3, #1
 80110b4:	b29b      	uxth	r3, r3
 80110b6:	b299      	uxth	r1, r3
 80110b8:	458b      	cmp	fp, r1
 80110ba:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80110be:	d9a3      	bls.n	8011008 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 80110c0:	4427      	add	r7, r4
 80110c2:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 80110c6:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 80110ca:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80110ce:	4408      	add	r0, r1
 80110d0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80110d4:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80110d8:	b200      	sxth	r0, r0
 80110da:	4461      	add	r1, ip
 80110dc:	b209      	sxth	r1, r1
 80110de:	4288      	cmp	r0, r1
 80110e0:	f6bf af76 	bge.w	8010fd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 80110e4:	4584      	cmp	ip, r0
 80110e6:	4662      	mov	r2, ip
 80110e8:	4698      	mov	r8, r3
 80110ea:	bfb8      	it	lt
 80110ec:	4602      	movlt	r2, r0
 80110ee:	3301      	adds	r3, #1
 80110f0:	e7e1      	b.n	80110b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 80110f2:	d10e      	bne.n	8011112 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 80110f4:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 80110f8:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80110fc:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8011100:	4473      	add	r3, lr
 8011102:	b21b      	sxth	r3, r3
 8011104:	429d      	cmp	r5, r3
 8011106:	bfa8      	it	ge
 8011108:	461d      	movge	r5, r3
 801110a:	4287      	cmp	r7, r0
 801110c:	bfb8      	it	lt
 801110e:	46e0      	movlt	r8, ip
 8011110:	e75b      	b.n	8010fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 8011112:	4285      	cmp	r5, r0
 8011114:	bfa8      	it	ge
 8011116:	4605      	movge	r5, r0
 8011118:	e757      	b.n	8010fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 801111a:	eb0a 0007 	add.w	r0, sl, r7
 801111e:	4427      	add	r7, r4
 8011120:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8011124:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8011128:	45cb      	cmp	fp, r9
 801112a:	bfbe      	ittt	lt
 801112c:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 8011130:	445d      	addlt	r5, fp
 8011132:	b22d      	sxthlt	r5, r5
 8011134:	f7fb fee3 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8011138:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801113c:	2800      	cmp	r0, #0
 801113e:	f47f af1f 	bne.w	8010f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 8011142:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8011146:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 801114a:	1aad      	subs	r5, r5, r2
 801114c:	454d      	cmp	r5, r9
 801114e:	bfa8      	it	ge
 8011150:	464d      	movge	r5, r9
 8011152:	4829      	ldr	r0, [pc, #164]	@ (80111f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 8011154:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8011158:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801115c:	6800      	ldr	r0, [r0, #0]
 801115e:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 8011162:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8011166:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801116a:	f8d0 c000 	ldr.w	ip, [r0]
 801116e:	b2ad      	uxth	r5, r5
 8011170:	fa1f fb8b 	uxth.w	fp, fp
 8011174:	455d      	cmp	r5, fp
 8011176:	bf94      	ite	ls
 8011178:	9500      	strls	r5, [sp, #0]
 801117a:	f8cd b000 	strhi.w	fp, [sp]
 801117e:	b292      	uxth	r2, r2
 8011180:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 8011184:	b29b      	uxth	r3, r3
 8011186:	b289      	uxth	r1, r1
 8011188:	47a8      	blx	r5
 801118a:	6823      	ldr	r3, [r4, #0]
 801118c:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 8011190:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011192:	a90d      	add	r1, sp, #52	@ 0x34
 8011194:	4620      	mov	r0, r4
 8011196:	4798      	blx	r3
 8011198:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 801119c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80111a0:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80111a4:	1a5b      	subs	r3, r3, r1
 80111a6:	440a      	add	r2, r1
 80111a8:	b21b      	sxth	r3, r3
 80111aa:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80111ae:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80111b2:	2b00      	cmp	r3, #0
 80111b4:	f47f aedf 	bne.w	8010f76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80111b8:	fa1f f188 	uxth.w	r1, r8
 80111bc:	4650      	mov	r0, sl
 80111be:	f7ff f8ab 	bl	8010318 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111c2:	e6d8      	b.n	8010f76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 80111c4:	8835      	ldrh	r5, [r6, #0]
 80111c6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80111ca:	42ab      	cmp	r3, r5
 80111cc:	f67f adc6 	bls.w	8010d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 80111d0:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80111d4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80111d8:	ab0d      	add	r3, sp, #52	@ 0x34
 80111da:	6851      	ldr	r1, [r2, #4]
 80111dc:	c303      	stmia	r3!, {r0, r1}
 80111de:	a80d      	add	r0, sp, #52	@ 0x34
 80111e0:	f7fb fe8d 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 80111e4:	b920      	cbnz	r0, 80111f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 80111e6:	6823      	ldr	r3, [r4, #0]
 80111e8:	a90d      	add	r1, sp, #52	@ 0x34
 80111ea:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80111ec:	4620      	mov	r0, r4
 80111ee:	4798      	blx	r3
 80111f0:	3501      	adds	r5, #1
 80111f2:	b2ad      	uxth	r5, r5
 80111f4:	e7e7      	b.n	80111c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 80111f6:	bf00      	nop
 80111f8:	20002230 	.word	0x20002230

080111fc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80111fc:	2200      	movs	r2, #0
 80111fe:	4b03      	ldr	r3, [pc, #12]	@ (801120c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011200:	801a      	strh	r2, [r3, #0]
 8011202:	805a      	strh	r2, [r3, #2]
 8011204:	809a      	strh	r2, [r3, #4]
 8011206:	80da      	strh	r2, [r3, #6]
 8011208:	4770      	bx	lr
 801120a:	bf00      	nop
 801120c:	20002274 	.word	0x20002274

08011210 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011214:	4606      	mov	r6, r0
 8011216:	b09d      	sub	sp, #116	@ 0x74
 8011218:	a803      	add	r0, sp, #12
 801121a:	4614      	mov	r4, r2
 801121c:	468a      	mov	sl, r1
 801121e:	461d      	mov	r5, r3
 8011220:	f000 fd72 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 8011224:	6833      	ldr	r3, [r6, #0]
 8011226:	4630      	mov	r0, r6
 8011228:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801122a:	4798      	blx	r3
 801122c:	6833      	ldr	r3, [r6, #0]
 801122e:	4607      	mov	r7, r0
 8011230:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011232:	4630      	mov	r0, r6
 8011234:	4798      	blx	r3
 8011236:	462a      	mov	r2, r5
 8011238:	2500      	movs	r5, #0
 801123a:	9000      	str	r0, [sp, #0]
 801123c:	4621      	mov	r1, r4
 801123e:	463b      	mov	r3, r7
 8011240:	a803      	add	r0, sp, #12
 8011242:	f000 fdbc 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011246:	462c      	mov	r4, r5
 8011248:	46a9      	mov	r9, r5
 801124a:	46a8      	mov	r8, r5
 801124c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8011250:	2300      	movs	r3, #0
 8011252:	9302      	str	r3, [sp, #8]
 8011254:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011258:	429c      	cmp	r4, r3
 801125a:	d002      	beq.n	8011262 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801125c:	455c      	cmp	r4, fp
 801125e:	bf18      	it	ne
 8011260:	4625      	movne	r5, r4
 8011262:	ab02      	add	r3, sp, #8
 8011264:	4632      	mov	r2, r6
 8011266:	4651      	mov	r1, sl
 8011268:	a803      	add	r0, sp, #12
 801126a:	f001 f8d5 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801126e:	4604      	mov	r4, r0
 8011270:	b108      	cbz	r0, 8011276 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011272:	280a      	cmp	r0, #10
 8011274:	d10a      	bne.n	801128c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011276:	45c1      	cmp	r9, r8
 8011278:	bf38      	it	cc
 801127a:	46c1      	movcc	r9, r8
 801127c:	f04f 0800 	mov.w	r8, #0
 8011280:	2c00      	cmp	r4, #0
 8011282:	d1e5      	bne.n	8011250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011284:	4648      	mov	r0, r9
 8011286:	b01d      	add	sp, #116	@ 0x74
 8011288:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801128c:	9a02      	ldr	r2, [sp, #8]
 801128e:	2a00      	cmp	r2, #0
 8011290:	d0de      	beq.n	8011250 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011292:	7b57      	ldrb	r7, [r2, #13]
 8011294:	6833      	ldr	r3, [r6, #0]
 8011296:	007f      	lsls	r7, r7, #1
 8011298:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801129c:	7a97      	ldrb	r7, [r2, #10]
 801129e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80112a0:	4307      	orrs	r7, r0
 80112a2:	4629      	mov	r1, r5
 80112a4:	4630      	mov	r0, r6
 80112a6:	8894      	ldrh	r4, [r2, #4]
 80112a8:	4798      	blx	r3
 80112aa:	4438      	add	r0, r7
 80112ac:	4480      	add	r8, r0
 80112ae:	fa1f f888 	uxth.w	r8, r8
 80112b2:	e7e5      	b.n	8011280 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080112b4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80112b4:	b508      	push	{r3, lr}
 80112b6:	6803      	ldr	r3, [r0, #0]
 80112b8:	68db      	ldr	r3, [r3, #12]
 80112ba:	4798      	blx	r3
 80112bc:	b128      	cbz	r0, 80112ca <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80112be:	7b43      	ldrb	r3, [r0, #13]
 80112c0:	7a80      	ldrb	r0, [r0, #10]
 80112c2:	005b      	lsls	r3, r3, #1
 80112c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80112c8:	4318      	orrs	r0, r3
 80112ca:	bd08      	pop	{r3, pc}

080112cc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80112cc:	b40e      	push	{r1, r2, r3}
 80112ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112d0:	4605      	mov	r5, r0
 80112d2:	b09e      	sub	sp, #120	@ 0x78
 80112d4:	ab23      	add	r3, sp, #140	@ 0x8c
 80112d6:	f853 4b04 	ldr.w	r4, [r3], #4
 80112da:	a805      	add	r0, sp, #20
 80112dc:	9303      	str	r3, [sp, #12]
 80112de:	f000 fd13 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 80112e2:	682b      	ldr	r3, [r5, #0]
 80112e4:	4628      	mov	r0, r5
 80112e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80112e8:	4798      	blx	r3
 80112ea:	682b      	ldr	r3, [r5, #0]
 80112ec:	4606      	mov	r6, r0
 80112ee:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80112f0:	4628      	mov	r0, r5
 80112f2:	4798      	blx	r3
 80112f4:	4621      	mov	r1, r4
 80112f6:	2400      	movs	r4, #0
 80112f8:	4633      	mov	r3, r6
 80112fa:	9000      	str	r0, [sp, #0]
 80112fc:	9a03      	ldr	r2, [sp, #12]
 80112fe:	ae1e      	add	r6, sp, #120	@ 0x78
 8011300:	a805      	add	r0, sp, #20
 8011302:	f000 fd5c 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011306:	f846 4d68 	str.w	r4, [r6, #-104]!
 801130a:	4633      	mov	r3, r6
 801130c:	462a      	mov	r2, r5
 801130e:	4621      	mov	r1, r4
 8011310:	a805      	add	r0, sp, #20
 8011312:	f001 f881 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011316:	b1f0      	cbz	r0, 8011356 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011318:	280a      	cmp	r0, #10
 801131a:	d018      	beq.n	801134e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801131c:	9f04      	ldr	r7, [sp, #16]
 801131e:	b1b7      	cbz	r7, 801134e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011320:	7b78      	ldrb	r0, [r7, #13]
 8011322:	7a3b      	ldrb	r3, [r7, #8]
 8011324:	00c1      	lsls	r1, r0, #3
 8011326:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801132a:	4319      	orrs	r1, r3
 801132c:	0643      	lsls	r3, r0, #25
 801132e:	bf44      	itt	mi
 8011330:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8011334:	b219      	sxthmi	r1, r3
 8011336:	0100      	lsls	r0, r0, #4
 8011338:	79fb      	ldrb	r3, [r7, #7]
 801133a:	88ea      	ldrh	r2, [r5, #6]
 801133c:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8011340:	4303      	orrs	r3, r0
 8011342:	4413      	add	r3, r2
 8011344:	1a5b      	subs	r3, r3, r1
 8011346:	b21b      	sxth	r3, r3
 8011348:	429c      	cmp	r4, r3
 801134a:	bfb8      	it	lt
 801134c:	461c      	movlt	r4, r3
 801134e:	4633      	mov	r3, r6
 8011350:	462a      	mov	r2, r5
 8011352:	2100      	movs	r1, #0
 8011354:	e7dc      	b.n	8011310 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011356:	b2a0      	uxth	r0, r4
 8011358:	b01e      	add	sp, #120	@ 0x78
 801135a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801135e:	b003      	add	sp, #12
 8011360:	4770      	bx	lr

08011362 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8011362:	7a43      	ldrb	r3, [r0, #9]
 8011364:	8880      	ldrh	r0, [r0, #4]
 8011366:	4418      	add	r0, r3
 8011368:	b280      	uxth	r0, r0
 801136a:	4770      	bx	lr

0801136c <_ZNK8touchgfx4Font13getFontHeightEv>:
 801136c:	6803      	ldr	r3, [r0, #0]
 801136e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011370:	4718      	bx	r3

08011372 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011372:	b40e      	push	{r1, r2, r3}
 8011374:	b570      	push	{r4, r5, r6, lr}
 8011376:	4604      	mov	r4, r0
 8011378:	b09d      	sub	sp, #116	@ 0x74
 801137a:	ab21      	add	r3, sp, #132	@ 0x84
 801137c:	f853 5b04 	ldr.w	r5, [r3], #4
 8011380:	a803      	add	r0, sp, #12
 8011382:	9302      	str	r3, [sp, #8]
 8011384:	f000 fcc0 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 8011388:	6823      	ldr	r3, [r4, #0]
 801138a:	4620      	mov	r0, r4
 801138c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801138e:	4798      	blx	r3
 8011390:	6823      	ldr	r3, [r4, #0]
 8011392:	4606      	mov	r6, r0
 8011394:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011396:	4620      	mov	r0, r4
 8011398:	4798      	blx	r3
 801139a:	4633      	mov	r3, r6
 801139c:	9000      	str	r0, [sp, #0]
 801139e:	9a02      	ldr	r2, [sp, #8]
 80113a0:	4629      	mov	r1, r5
 80113a2:	a803      	add	r0, sp, #12
 80113a4:	f000 fd0b 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80113a8:	a803      	add	r0, sp, #12
 80113aa:	f001 f903 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80113ae:	2401      	movs	r4, #1
 80113b0:	b2a3      	uxth	r3, r4
 80113b2:	b140      	cbz	r0, 80113c6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80113b4:	280a      	cmp	r0, #10
 80113b6:	bf08      	it	eq
 80113b8:	3301      	addeq	r3, #1
 80113ba:	a803      	add	r0, sp, #12
 80113bc:	bf08      	it	eq
 80113be:	b21c      	sxtheq	r4, r3
 80113c0:	f001 f8f8 	bl	80125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80113c4:	e7f4      	b.n	80113b0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80113c6:	4618      	mov	r0, r3
 80113c8:	b01d      	add	sp, #116	@ 0x74
 80113ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113ce:	b003      	add	sp, #12
 80113d0:	4770      	bx	lr

080113d2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80113d2:	b40e      	push	{r1, r2, r3}
 80113d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113d6:	4604      	mov	r4, r0
 80113d8:	b09e      	sub	sp, #120	@ 0x78
 80113da:	ab23      	add	r3, sp, #140	@ 0x8c
 80113dc:	f853 5b04 	ldr.w	r5, [r3], #4
 80113e0:	a805      	add	r0, sp, #20
 80113e2:	9303      	str	r3, [sp, #12]
 80113e4:	f000 fc90 	bl	8011d08 <_ZN8touchgfx12TextProviderC1Ev>
 80113e8:	6823      	ldr	r3, [r4, #0]
 80113ea:	4620      	mov	r0, r4
 80113ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80113ee:	4798      	blx	r3
 80113f0:	6823      	ldr	r3, [r4, #0]
 80113f2:	4606      	mov	r6, r0
 80113f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80113f6:	4620      	mov	r0, r4
 80113f8:	4798      	blx	r3
 80113fa:	4633      	mov	r3, r6
 80113fc:	4629      	mov	r1, r5
 80113fe:	9000      	str	r0, [sp, #0]
 8011400:	9a03      	ldr	r2, [sp, #12]
 8011402:	a805      	add	r0, sp, #20
 8011404:	f000 fcdb 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011408:	2100      	movs	r1, #0
 801140a:	ad1e      	add	r5, sp, #120	@ 0x78
 801140c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011410:	462b      	mov	r3, r5
 8011412:	4622      	mov	r2, r4
 8011414:	a805      	add	r0, sp, #20
 8011416:	f000 ffff 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801141a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801141e:	b1d8      	cbz	r0, 8011458 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011420:	280a      	cmp	r0, #10
 8011422:	d012      	beq.n	801144a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011424:	9804      	ldr	r0, [sp, #16]
 8011426:	b180      	cbz	r0, 801144a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011428:	7b47      	ldrb	r7, [r0, #13]
 801142a:	88e2      	ldrh	r2, [r4, #6]
 801142c:	00fb      	lsls	r3, r7, #3
 801142e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011432:	7a03      	ldrb	r3, [r0, #8]
 8011434:	430b      	orrs	r3, r1
 8011436:	0679      	lsls	r1, r7, #25
 8011438:	bf44      	itt	mi
 801143a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801143e:	b21b      	sxthmi	r3, r3
 8011440:	1ad3      	subs	r3, r2, r3
 8011442:	b21b      	sxth	r3, r3
 8011444:	429e      	cmp	r6, r3
 8011446:	bfa8      	it	ge
 8011448:	461e      	movge	r6, r3
 801144a:	462b      	mov	r3, r5
 801144c:	4622      	mov	r2, r4
 801144e:	2100      	movs	r1, #0
 8011450:	a805      	add	r0, sp, #20
 8011452:	f000 ffe1 	bl	8012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011456:	e7e2      	b.n	801141e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8011458:	4630      	mov	r0, r6
 801145a:	b01e      	add	sp, #120	@ 0x78
 801145c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011460:	b003      	add	sp, #12
 8011462:	4770      	bx	lr

08011464 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011464:	b513      	push	{r0, r1, r4, lr}
 8011466:	2400      	movs	r4, #0
 8011468:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801146c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011470:	6803      	ldr	r3, [r0, #0]
 8011472:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011476:	9400      	str	r4, [sp, #0]
 8011478:	f8ad 2006 	strh.w	r2, [sp, #6]
 801147c:	691b      	ldr	r3, [r3, #16]
 801147e:	4669      	mov	r1, sp
 8011480:	4798      	blx	r3
 8011482:	b002      	add	sp, #8
 8011484:	bd10      	pop	{r4, pc}

08011486 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011486:	b538      	push	{r3, r4, r5, lr}
 8011488:	460c      	mov	r4, r1
 801148a:	4605      	mov	r5, r0
 801148c:	680b      	ldr	r3, [r1, #0]
 801148e:	68db      	ldr	r3, [r3, #12]
 8011490:	4798      	blx	r3
 8011492:	6823      	ldr	r3, [r4, #0]
 8011494:	4620      	mov	r0, r4
 8011496:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011498:	4629      	mov	r1, r5
 801149a:	4798      	blx	r3
 801149c:	4628      	mov	r0, r5
 801149e:	bd38      	pop	{r3, r4, r5, pc}

080114a0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80114a0:	b410      	push	{r4}
 80114a2:	880a      	ldrh	r2, [r1, #0]
 80114a4:	8884      	ldrh	r4, [r0, #4]
 80114a6:	4422      	add	r2, r4
 80114a8:	800a      	strh	r2, [r1, #0]
 80114aa:	88c4      	ldrh	r4, [r0, #6]
 80114ac:	884a      	ldrh	r2, [r1, #2]
 80114ae:	4422      	add	r2, r4
 80114b0:	804a      	strh	r2, [r1, #2]
 80114b2:	6940      	ldr	r0, [r0, #20]
 80114b4:	b120      	cbz	r0, 80114c0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80114b6:	6803      	ldr	r3, [r0, #0]
 80114b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80114bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80114be:	4718      	bx	r3
 80114c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80114c4:	4770      	bx	lr

080114c6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80114c6:	b570      	push	{r4, r5, r6, lr}
 80114c8:	460c      	mov	r4, r1
 80114ca:	8882      	ldrh	r2, [r0, #4]
 80114cc:	880b      	ldrh	r3, [r1, #0]
 80114ce:	4605      	mov	r5, r0
 80114d0:	4413      	add	r3, r2
 80114d2:	800b      	strh	r3, [r1, #0]
 80114d4:	88c2      	ldrh	r2, [r0, #6]
 80114d6:	884b      	ldrh	r3, [r1, #2]
 80114d8:	4413      	add	r3, r2
 80114da:	804b      	strh	r3, [r1, #2]
 80114dc:	1d01      	adds	r1, r0, #4
 80114de:	4620      	mov	r0, r4
 80114e0:	f7fb fcca 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 80114e4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80114e8:	2b00      	cmp	r3, #0
 80114ea:	dd0b      	ble.n	8011504 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80114ec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80114f0:	2b00      	cmp	r3, #0
 80114f2:	dd07      	ble.n	8011504 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80114f4:	6968      	ldr	r0, [r5, #20]
 80114f6:	b128      	cbz	r0, 8011504 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80114f8:	6803      	ldr	r3, [r0, #0]
 80114fa:	4621      	mov	r1, r4
 80114fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011500:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011502:	4718      	bx	r3
 8011504:	bd70      	pop	{r4, r5, r6, pc}
	...

08011508 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011508:	b570      	push	{r4, r5, r6, lr}
 801150a:	460c      	mov	r4, r1
 801150c:	8882      	ldrh	r2, [r0, #4]
 801150e:	880b      	ldrh	r3, [r1, #0]
 8011510:	4605      	mov	r5, r0
 8011512:	4413      	add	r3, r2
 8011514:	800b      	strh	r3, [r1, #0]
 8011516:	88c2      	ldrh	r2, [r0, #6]
 8011518:	884b      	ldrh	r3, [r1, #2]
 801151a:	4413      	add	r3, r2
 801151c:	804b      	strh	r3, [r1, #2]
 801151e:	1d01      	adds	r1, r0, #4
 8011520:	4620      	mov	r0, r4
 8011522:	f7fb fca9 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8011526:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801152a:	2b00      	cmp	r3, #0
 801152c:	dd19      	ble.n	8011562 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801152e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011532:	2b00      	cmp	r3, #0
 8011534:	dd15      	ble.n	8011562 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011536:	6968      	ldr	r0, [r5, #20]
 8011538:	b128      	cbz	r0, 8011546 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801153a:	6803      	ldr	r3, [r0, #0]
 801153c:	4621      	mov	r1, r4
 801153e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011542:	691b      	ldr	r3, [r3, #16]
 8011544:	4718      	bx	r3
 8011546:	4b07      	ldr	r3, [pc, #28]	@ (8011564 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011548:	681b      	ldr	r3, [r3, #0]
 801154a:	3304      	adds	r3, #4
 801154c:	429d      	cmp	r5, r3
 801154e:	d108      	bne.n	8011562 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011550:	f7fe fdd6 	bl	8010100 <_ZN8touchgfx11Application11getInstanceEv>
 8011554:	6803      	ldr	r3, [r0, #0]
 8011556:	6821      	ldr	r1, [r4, #0]
 8011558:	6862      	ldr	r2, [r4, #4]
 801155a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801155c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011560:	4718      	bx	r3
 8011562:	bd70      	pop	{r4, r5, r6, pc}
 8011564:	2000226c 	.word	0x2000226c

08011568 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011568:	b570      	push	{r4, r5, r6, lr}
 801156a:	4604      	mov	r4, r0
 801156c:	4616      	mov	r6, r2
 801156e:	460d      	mov	r5, r1
 8011570:	b901      	cbnz	r1, 8011574 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011572:	b192      	cbz	r2, 801159a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011574:	6823      	ldr	r3, [r4, #0]
 8011576:	4620      	mov	r0, r4
 8011578:	699b      	ldr	r3, [r3, #24]
 801157a:	4798      	blx	r3
 801157c:	88e2      	ldrh	r2, [r4, #6]
 801157e:	88a1      	ldrh	r1, [r4, #4]
 8011580:	4432      	add	r2, r6
 8011582:	4429      	add	r1, r5
 8011584:	4620      	mov	r0, r4
 8011586:	b212      	sxth	r2, r2
 8011588:	b209      	sxth	r1, r1
 801158a:	f7f7 fc78 	bl	8008e7e <_ZN8touchgfx8Drawable5setXYEss>
 801158e:	6823      	ldr	r3, [r4, #0]
 8011590:	4620      	mov	r0, r4
 8011592:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011596:	699b      	ldr	r3, [r3, #24]
 8011598:	4718      	bx	r3
 801159a:	bd70      	pop	{r4, r5, r6, pc}

0801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801159c:	b510      	push	{r4, lr}
 801159e:	2300      	movs	r3, #0
 80115a0:	4604      	mov	r4, r0
 80115a2:	4608      	mov	r0, r1
 80115a4:	8023      	strh	r3, [r4, #0]
 80115a6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80115aa:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80115ae:	8063      	strh	r3, [r4, #2]
 80115b0:	6803      	ldr	r3, [r0, #0]
 80115b2:	80a1      	strh	r1, [r4, #4]
 80115b4:	80e2      	strh	r2, [r4, #6]
 80115b6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115b8:	4621      	mov	r1, r4
 80115ba:	4798      	blx	r3
 80115bc:	4620      	mov	r0, r4
 80115be:	bd10      	pop	{r4, pc}

080115c0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80115c0:	b530      	push	{r4, r5, lr}
 80115c2:	8083      	strh	r3, [r0, #4]
 80115c4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80115c8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80115cc:	80c3      	strh	r3, [r0, #6]
 80115ce:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80115d2:	6141      	str	r1, [r0, #20]
 80115d4:	7203      	strb	r3, [r0, #8]
 80115d6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80115da:	8302      	strh	r2, [r0, #24]
 80115dc:	7243      	strb	r3, [r0, #9]
 80115de:	7a83      	ldrb	r3, [r0, #10]
 80115e0:	f365 0306 	bfi	r3, r5, #0, #7
 80115e4:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80115e8:	f365 13c7 	bfi	r3, r5, #7, #1
 80115ec:	7283      	strb	r3, [r0, #10]
 80115ee:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80115f2:	72c3      	strb	r3, [r0, #11]
 80115f4:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80115f8:	7303      	strb	r3, [r0, #12]
 80115fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80115fe:	81c3      	strh	r3, [r0, #14]
 8011600:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8011604:	8203      	strh	r3, [r0, #16]
 8011606:	4b01      	ldr	r3, [pc, #4]	@ (801160c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011608:	6003      	str	r3, [r0, #0]
 801160a:	bd30      	pop	{r4, r5, pc}
 801160c:	08024c08 	.word	0x08024c08

08011610 <_ZNK8touchgfx9ConstFont4findEt>:
 8011610:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011612:	6944      	ldr	r4, [r0, #20]
 8011614:	b3bc      	cbz	r4, 8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011616:	88a3      	ldrh	r3, [r4, #4]
 8011618:	8b02      	ldrh	r2, [r0, #24]
 801161a:	1acb      	subs	r3, r1, r3
 801161c:	f102 32ff 	add.w	r2, r2, #4294967295
 8011620:	d431      	bmi.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011622:	4293      	cmp	r3, r2
 8011624:	dd0c      	ble.n	8011640 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011626:	230e      	movs	r3, #14
 8011628:	fb03 4302 	mla	r3, r3, r2, r4
 801162c:	889b      	ldrh	r3, [r3, #4]
 801162e:	1a5b      	subs	r3, r3, r1
 8011630:	1ad3      	subs	r3, r2, r3
 8011632:	429a      	cmp	r2, r3
 8011634:	db27      	blt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011636:	2b00      	cmp	r3, #0
 8011638:	bfbc      	itt	lt
 801163a:	2302      	movlt	r3, #2
 801163c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011640:	2500      	movs	r5, #0
 8011642:	260e      	movs	r6, #14
 8011644:	4295      	cmp	r5, r2
 8011646:	dc1e      	bgt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011648:	fb06 4003 	mla	r0, r6, r3, r4
 801164c:	8887      	ldrh	r7, [r0, #4]
 801164e:	42b9      	cmp	r1, r7
 8011650:	d01a      	beq.n	8011688 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011652:	d20d      	bcs.n	8011670 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011654:	1e5a      	subs	r2, r3, #1
 8011656:	4295      	cmp	r5, r2
 8011658:	dc15      	bgt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801165a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801165e:	1a5b      	subs	r3, r3, r1
 8011660:	1ad3      	subs	r3, r2, r3
 8011662:	429a      	cmp	r2, r3
 8011664:	db0f      	blt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011666:	429d      	cmp	r5, r3
 8011668:	ddec      	ble.n	8011644 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801166a:	1953      	adds	r3, r2, r5
 801166c:	105b      	asrs	r3, r3, #1
 801166e:	e7e9      	b.n	8011644 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011670:	1c5d      	adds	r5, r3, #1
 8011672:	42aa      	cmp	r2, r5
 8011674:	db07      	blt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011676:	8a43      	ldrh	r3, [r0, #18]
 8011678:	1acb      	subs	r3, r1, r3
 801167a:	442b      	add	r3, r5
 801167c:	429d      	cmp	r5, r3
 801167e:	dc02      	bgt.n	8011686 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011680:	429a      	cmp	r2, r3
 8011682:	dadf      	bge.n	8011644 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011684:	e7f1      	b.n	801166a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011686:	2000      	movs	r0, #0
 8011688:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801168a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801168a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801168c:	4604      	mov	r4, r0
 801168e:	4617      	mov	r7, r2
 8011690:	461e      	mov	r6, r3
 8011692:	b911      	cbnz	r1, 801169a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011694:	2500      	movs	r5, #0
 8011696:	4628      	mov	r0, r5
 8011698:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801169a:	290a      	cmp	r1, #10
 801169c:	d0fa      	beq.n	8011694 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801169e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80116a2:	4291      	cmp	r1, r2
 80116a4:	d0f6      	beq.n	8011694 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116a6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80116aa:	4291      	cmp	r1, r2
 80116ac:	d0f2      	beq.n	8011694 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116ae:	f7ff ffaf 	bl	8011610 <_ZNK8touchgfx9ConstFont4findEt>
 80116b2:	4605      	mov	r5, r0
 80116b4:	b950      	cbnz	r0, 80116cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80116b6:	6823      	ldr	r3, [r4, #0]
 80116b8:	4620      	mov	r0, r4
 80116ba:	691b      	ldr	r3, [r3, #16]
 80116bc:	4798      	blx	r3
 80116be:	4601      	mov	r1, r0
 80116c0:	4620      	mov	r0, r4
 80116c2:	f7ff ffa5 	bl	8011610 <_ZNK8touchgfx9ConstFont4findEt>
 80116c6:	4605      	mov	r5, r0
 80116c8:	2800      	cmp	r0, #0
 80116ca:	d0e3      	beq.n	8011694 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80116cc:	6823      	ldr	r3, [r4, #0]
 80116ce:	4629      	mov	r1, r5
 80116d0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80116d2:	4620      	mov	r0, r4
 80116d4:	4798      	blx	r3
 80116d6:	6038      	str	r0, [r7, #0]
 80116d8:	6823      	ldr	r3, [r4, #0]
 80116da:	4620      	mov	r0, r4
 80116dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80116de:	4798      	blx	r3
 80116e0:	7030      	strb	r0, [r6, #0]
 80116e2:	e7d8      	b.n	8011696 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080116e4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80116e4:	2000      	movs	r0, #0
 80116e6:	4770      	bx	lr

080116e8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80116e8:	2001      	movs	r0, #1
 80116ea:	4770      	bx	lr

080116ec <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80116ec:	2002      	movs	r0, #2
 80116ee:	4770      	bx	lr

080116f0 <_ZN8touchgfx12GestureEventD1Ev>:
 80116f0:	4770      	bx	lr

080116f2 <_ZN8touchgfx9DragEventD1Ev>:
 80116f2:	4770      	bx	lr

080116f4 <_ZN8touchgfx10ClickEventD1Ev>:
 80116f4:	4770      	bx	lr

080116f6 <_ZN8touchgfx10ClickEventD0Ev>:
 80116f6:	b510      	push	{r4, lr}
 80116f8:	4604      	mov	r4, r0
 80116fa:	210c      	movs	r1, #12
 80116fc:	f010 f9c1 	bl	8021a82 <_ZdlPvj>
 8011700:	4620      	mov	r0, r4
 8011702:	bd10      	pop	{r4, pc}

08011704 <_ZN8touchgfx9DragEventD0Ev>:
 8011704:	b510      	push	{r4, lr}
 8011706:	4604      	mov	r4, r0
 8011708:	2110      	movs	r1, #16
 801170a:	f010 f9ba 	bl	8021a82 <_ZdlPvj>
 801170e:	4620      	mov	r0, r4
 8011710:	bd10      	pop	{r4, pc}

08011712 <_ZN8touchgfx12GestureEventD0Ev>:
 8011712:	b510      	push	{r4, lr}
 8011714:	4604      	mov	r4, r0
 8011716:	210c      	movs	r1, #12
 8011718:	f010 f9b3 	bl	8021a82 <_ZdlPvj>
 801171c:	4620      	mov	r0, r4
 801171e:	bd10      	pop	{r4, pc}

08011720 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011720:	b530      	push	{r4, r5, lr}
 8011722:	460d      	mov	r5, r1
 8011724:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011726:	b087      	sub	sp, #28
 8011728:	4604      	mov	r4, r0
 801172a:	b301      	cbz	r1, 801176e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801172c:	a801      	add	r0, sp, #4
 801172e:	f7ff ff35 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011732:	892a      	ldrh	r2, [r5, #8]
 8011734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011738:	7928      	ldrb	r0, [r5, #4]
 801173a:	1ad2      	subs	r2, r2, r3
 801173c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801173e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011742:	441a      	add	r2, r3
 8011744:	896b      	ldrh	r3, [r5, #10]
 8011746:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801174a:	f88d 0010 	strb.w	r0, [sp, #16]
 801174e:	1b5b      	subs	r3, r3, r5
 8011750:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011752:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011754:	442b      	add	r3, r5
 8011756:	4d07      	ldr	r5, [pc, #28]	@ (8011774 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011758:	f8ad 1012 	strh.w	r1, [sp, #18]
 801175c:	9503      	str	r5, [sp, #12]
 801175e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011762:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011766:	6803      	ldr	r3, [r0, #0]
 8011768:	a903      	add	r1, sp, #12
 801176a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801176c:	4798      	blx	r3
 801176e:	b007      	add	sp, #28
 8011770:	bd30      	pop	{r4, r5, pc}
 8011772:	bf00      	nop
 8011774:	08024c98 	.word	0x08024c98

08011778 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801177c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801177e:	b08a      	sub	sp, #40	@ 0x28
 8011780:	4604      	mov	r4, r0
 8011782:	460d      	mov	r5, r1
 8011784:	b113      	cbz	r3, 801178c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011786:	790b      	ldrb	r3, [r1, #4]
 8011788:	2b00      	cmp	r3, #0
 801178a:	d044      	beq.n	8011816 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801178c:	f104 0804 	add.w	r8, r4, #4
 8011790:	4641      	mov	r1, r8
 8011792:	a803      	add	r0, sp, #12
 8011794:	f7ff ff02 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011798:	792b      	ldrb	r3, [r5, #4]
 801179a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801179e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80117a2:	b983      	cbnz	r3, 80117c6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80117a4:	892a      	ldrh	r2, [r5, #8]
 80117a6:	88e9      	ldrh	r1, [r5, #6]
 80117a8:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80117ac:	1b92      	subs	r2, r2, r6
 80117ae:	1bc9      	subs	r1, r1, r7
 80117b0:	9301      	str	r3, [sp, #4]
 80117b2:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80117b6:	9300      	str	r3, [sp, #0]
 80117b8:	b212      	sxth	r2, r2
 80117ba:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80117be:	b209      	sxth	r1, r1
 80117c0:	4640      	mov	r0, r8
 80117c2:	f7fb fa79 	bl	800ccb8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80117c6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80117c8:	b329      	cbz	r1, 8011816 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80117ca:	a805      	add	r0, sp, #20
 80117cc:	f7ff fee6 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80117d0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80117d4:	792b      	ldrb	r3, [r5, #4]
 80117d6:	1abf      	subs	r7, r7, r2
 80117d8:	88ea      	ldrh	r2, [r5, #6]
 80117da:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80117dc:	4417      	add	r7, r2
 80117de:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80117e0:	f88d 3020 	strb.w	r3, [sp, #32]
 80117e4:	4417      	add	r7, r2
 80117e6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80117ea:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80117ee:	1ab6      	subs	r6, r6, r2
 80117f0:	892a      	ldrh	r2, [r5, #8]
 80117f2:	a907      	add	r1, sp, #28
 80117f4:	4416      	add	r6, r2
 80117f6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80117f8:	4416      	add	r6, r2
 80117fa:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80117fe:	2600      	movs	r6, #0
 8011800:	4a06      	ldr	r2, [pc, #24]	@ (801181c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011802:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011806:	9207      	str	r2, [sp, #28]
 8011808:	6803      	ldr	r3, [r0, #0]
 801180a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801180c:	4798      	blx	r3
 801180e:	792b      	ldrb	r3, [r5, #4]
 8011810:	b10b      	cbz	r3, 8011816 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011812:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011816:	b00a      	add	sp, #40	@ 0x28
 8011818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801181c:	08024c70 	.word	0x08024c70

08011820 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011824:	460c      	mov	r4, r1
 8011826:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011828:	b088      	sub	sp, #32
 801182a:	4605      	mov	r5, r0
 801182c:	2900      	cmp	r1, #0
 801182e:	d06d      	beq.n	801190c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011830:	4668      	mov	r0, sp
 8011832:	f7ff feb3 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011836:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011838:	88e3      	ldrh	r3, [r4, #6]
 801183a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801183e:	440b      	add	r3, r1
 8011840:	b21b      	sxth	r3, r3
 8011842:	4543      	cmp	r3, r8
 8011844:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011848:	db31      	blt.n	80118ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801184a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801184e:	44c4      	add	ip, r8
 8011850:	fa0f fc8c 	sxth.w	ip, ip
 8011854:	4563      	cmp	r3, ip
 8011856:	da2a      	bge.n	80118ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011858:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801185a:	8926      	ldrh	r6, [r4, #8]
 801185c:	4416      	add	r6, r2
 801185e:	b236      	sxth	r6, r6
 8011860:	42be      	cmp	r6, r7
 8011862:	db24      	blt.n	80118ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011864:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011868:	4438      	add	r0, r7
 801186a:	b200      	sxth	r0, r0
 801186c:	4286      	cmp	r6, r0
 801186e:	da1e      	bge.n	80118ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011870:	8963      	ldrh	r3, [r4, #10]
 8011872:	4419      	add	r1, r3
 8011874:	b209      	sxth	r1, r1
 8011876:	4541      	cmp	r1, r8
 8011878:	db08      	blt.n	801188c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801187a:	4561      	cmp	r1, ip
 801187c:	da06      	bge.n	801188c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801187e:	89a3      	ldrh	r3, [r4, #12]
 8011880:	441a      	add	r2, r3
 8011882:	b212      	sxth	r2, r2
 8011884:	42ba      	cmp	r2, r7
 8011886:	db01      	blt.n	801188c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011888:	4282      	cmp	r2, r0
 801188a:	db10      	blt.n	80118ae <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801188c:	4b21      	ldr	r3, [pc, #132]	@ (8011914 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801188e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011890:	9304      	str	r3, [sp, #16]
 8011892:	2302      	movs	r3, #2
 8011894:	f88d 3014 	strb.w	r3, [sp, #20]
 8011898:	2300      	movs	r3, #0
 801189a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801189e:	f8ad 3018 	strh.w	r3, [sp, #24]
 80118a2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80118a6:	6803      	ldr	r3, [r0, #0]
 80118a8:	a904      	add	r1, sp, #16
 80118aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80118ac:	4798      	blx	r3
 80118ae:	1d29      	adds	r1, r5, #4
 80118b0:	a802      	add	r0, sp, #8
 80118b2:	f7ff fe73 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80118b6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80118ba:	88e0      	ldrh	r0, [r4, #6]
 80118bc:	eba3 0808 	sub.w	r8, r3, r8
 80118c0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80118c4:	7921      	ldrb	r1, [r4, #4]
 80118c6:	1bdf      	subs	r7, r3, r7
 80118c8:	b2bb      	uxth	r3, r7
 80118ca:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80118ce:	fa1f f888 	uxth.w	r8, r8
 80118d2:	8922      	ldrh	r2, [r4, #8]
 80118d4:	8967      	ldrh	r7, [r4, #10]
 80118d6:	89a4      	ldrh	r4, [r4, #12]
 80118d8:	4440      	add	r0, r8
 80118da:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80118dc:	4460      	add	r0, ip
 80118de:	441a      	add	r2, r3
 80118e0:	44b8      	add	r8, r7
 80118e2:	4423      	add	r3, r4
 80118e4:	4c0c      	ldr	r4, [pc, #48]	@ (8011918 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80118e6:	f8ad 0016 	strh.w	r0, [sp, #22]
 80118ea:	4433      	add	r3, r6
 80118ec:	4432      	add	r2, r6
 80118ee:	44e0      	add	r8, ip
 80118f0:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80118f2:	f88d 1014 	strb.w	r1, [sp, #20]
 80118f6:	9404      	str	r4, [sp, #16]
 80118f8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80118fc:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011900:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011904:	6803      	ldr	r3, [r0, #0]
 8011906:	a904      	add	r1, sp, #16
 8011908:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801190a:	4798      	blx	r3
 801190c:	b008      	add	sp, #32
 801190e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011912:	bf00      	nop
 8011914:	08024c70 	.word	0x08024c70
 8011918:	08024c84 	.word	0x08024c84

0801191c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801191c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801191e:	4604      	mov	r4, r0
 8011920:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011924:	3201      	adds	r2, #1
 8011926:	d112      	bne.n	801194e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011928:	2500      	movs	r5, #0
 801192a:	9500      	str	r5, [sp, #0]
 801192c:	466d      	mov	r5, sp
 801192e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011932:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011936:	6803      	ldr	r3, [r0, #0]
 8011938:	f8ad 1004 	strh.w	r1, [sp, #4]
 801193c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011940:	4629      	mov	r1, r5
 8011942:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011944:	4798      	blx	r3
 8011946:	e895 0003 	ldmia.w	r5, {r0, r1}
 801194a:	e884 0003 	stmia.w	r4, {r0, r1}
 801194e:	4620      	mov	r0, r4
 8011950:	b003      	add	sp, #12
 8011952:	bd30      	pop	{r4, r5, pc}

08011954 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011954:	b513      	push	{r0, r1, r4, lr}
 8011956:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801195a:	4604      	mov	r4, r0
 801195c:	3301      	adds	r3, #1
 801195e:	d109      	bne.n	8011974 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011960:	4601      	mov	r1, r0
 8011962:	4668      	mov	r0, sp
 8011964:	f7ff fe1a 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011968:	f8bd 3000 	ldrh.w	r3, [sp]
 801196c:	8423      	strh	r3, [r4, #32]
 801196e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011972:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011974:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011978:	b002      	add	sp, #8
 801197a:	bd10      	pop	{r4, pc}

0801197c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801197c:	b513      	push	{r0, r1, r4, lr}
 801197e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011982:	4604      	mov	r4, r0
 8011984:	3301      	adds	r3, #1
 8011986:	d109      	bne.n	801199c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011988:	4601      	mov	r1, r0
 801198a:	4668      	mov	r0, sp
 801198c:	f7ff fe06 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011990:	f8bd 3000 	ldrh.w	r3, [sp]
 8011994:	8423      	strh	r3, [r4, #32]
 8011996:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801199a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801199c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80119a0:	b002      	add	sp, #8
 80119a2:	bd10      	pop	{r4, pc}

080119a4 <_ZN8touchgfx6ScreenC1Ev>:
 80119a4:	b570      	push	{r4, r5, r6, lr}
 80119a6:	4605      	mov	r5, r0
 80119a8:	4b16      	ldr	r3, [pc, #88]	@ (8011a04 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80119aa:	2101      	movs	r1, #1
 80119ac:	f845 3b04 	str.w	r3, [r5], #4
 80119b0:	2300      	movs	r3, #0
 80119b2:	4604      	mov	r4, r0
 80119b4:	8103      	strh	r3, [r0, #8]
 80119b6:	8143      	strh	r3, [r0, #10]
 80119b8:	8183      	strh	r3, [r0, #12]
 80119ba:	81c3      	strh	r3, [r0, #14]
 80119bc:	8203      	strh	r3, [r0, #16]
 80119be:	8243      	strh	r3, [r0, #18]
 80119c0:	8283      	strh	r3, [r0, #20]
 80119c2:	82c3      	strh	r3, [r0, #22]
 80119c4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80119c8:	6203      	str	r3, [r0, #32]
 80119ca:	8483      	strh	r3, [r0, #36]	@ 0x24
 80119cc:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80119ce:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80119d2:	4a0d      	ldr	r2, [pc, #52]	@ (8011a08 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80119d4:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80119d8:	6343      	str	r3, [r0, #52]	@ 0x34
 80119da:	4b0c      	ldr	r3, [pc, #48]	@ (8011a0c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80119dc:	6042      	str	r2, [r0, #4]
 80119de:	f9b3 6000 	ldrsh.w	r6, [r3]
 80119e2:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80119e4:	4a0a      	ldr	r2, [pc, #40]	@ (8011a10 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80119e6:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80119ea:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80119ee:	f9b2 1000 	ldrsh.w	r1, [r2]
 80119f2:	4628      	mov	r0, r5
 80119f4:	4798      	blx	r3
 80119f6:	6863      	ldr	r3, [r4, #4]
 80119f8:	4628      	mov	r0, r5
 80119fa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80119fc:	4631      	mov	r1, r6
 80119fe:	4798      	blx	r3
 8011a00:	4620      	mov	r0, r4
 8011a02:	bd70      	pop	{r4, r5, r6, pc}
 8011a04:	08024cac 	.word	0x08024cac
 8011a08:	08024770 	.word	0x08024770
 8011a0c:	20002226 	.word	0x20002226
 8011a10:	20002224 	.word	0x20002224

08011a14 <_ZN8touchgfx6Screen4drawEv>:
 8011a14:	b507      	push	{r0, r1, r2, lr}
 8011a16:	2100      	movs	r1, #0
 8011a18:	4b08      	ldr	r3, [pc, #32]	@ (8011a3c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011a1a:	9100      	str	r1, [sp, #0]
 8011a1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011a20:	4b07      	ldr	r3, [pc, #28]	@ (8011a40 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011a22:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011a26:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a2a:	4669      	mov	r1, sp
 8011a2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a30:	6803      	ldr	r3, [r0, #0]
 8011a32:	689b      	ldr	r3, [r3, #8]
 8011a34:	4798      	blx	r3
 8011a36:	b003      	add	sp, #12
 8011a38:	f85d fb04 	ldr.w	pc, [sp], #4
 8011a3c:	20002224 	.word	0x20002224
 8011a40:	20002226 	.word	0x20002226

08011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a48:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011a4c:	b089      	sub	sp, #36	@ 0x24
 8011a4e:	2b00      	cmp	r3, #0
 8011a50:	4680      	mov	r8, r0
 8011a52:	460c      	mov	r4, r1
 8011a54:	4615      	mov	r5, r2
 8011a56:	dd0e      	ble.n	8011a76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011a58:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011a5c:	2b00      	cmp	r3, #0
 8011a5e:	dd0a      	ble.n	8011a76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011a60:	4628      	mov	r0, r5
 8011a62:	f7ff ff5b 	bl	801191c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011a66:	4621      	mov	r1, r4
 8011a68:	f7fe fa6c 	bl	800ff44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011a6c:	69eb      	ldr	r3, [r5, #28]
 8011a6e:	b928      	cbnz	r0, 8011a7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011a70:	461d      	mov	r5, r3
 8011a72:	2b00      	cmp	r3, #0
 8011a74:	d1f4      	bne.n	8011a60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011a76:	b009      	add	sp, #36	@ 0x24
 8011a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a7c:	ae04      	add	r6, sp, #16
 8011a7e:	2b00      	cmp	r3, #0
 8011a80:	f000 80b5 	beq.w	8011bee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011a84:	682b      	ldr	r3, [r5, #0]
 8011a86:	4629      	mov	r1, r5
 8011a88:	68db      	ldr	r3, [r3, #12]
 8011a8a:	a802      	add	r0, sp, #8
 8011a8c:	4798      	blx	r3
 8011a8e:	4628      	mov	r0, r5
 8011a90:	f7ff ff60 	bl	8011954 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011a94:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011a98:	4407      	add	r7, r0
 8011a9a:	4628      	mov	r0, r5
 8011a9c:	f7ff ff6e 	bl	801197c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011aa0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011aa4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011aa8:	4418      	add	r0, r3
 8011aaa:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011aae:	4621      	mov	r1, r4
 8011ab0:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011ab4:	b23f      	sxth	r7, r7
 8011ab6:	4630      	mov	r0, r6
 8011ab8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011abc:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011ac0:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011ac4:	f7fb f9d8 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8011ac8:	4628      	mov	r0, r5
 8011aca:	f7ff ff27 	bl	801191c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011ace:	4602      	mov	r2, r0
 8011ad0:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011ad4:	ab06      	add	r3, sp, #24
 8011ad6:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ada:	4611      	mov	r1, r2
 8011adc:	4618      	mov	r0, r3
 8011ade:	f7fb f9cb 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8011ae2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011ae6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011aea:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011aee:	4299      	cmp	r1, r3
 8011af0:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011af4:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011af8:	d10b      	bne.n	8011b12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011afa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011afe:	4552      	cmp	r2, sl
 8011b00:	d107      	bne.n	8011b12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011b02:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011b06:	455a      	cmp	r2, fp
 8011b08:	d103      	bne.n	8011b12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011b0a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011b0e:	454a      	cmp	r2, r9
 8011b10:	d06d      	beq.n	8011bee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011b12:	f1bb 0f00 	cmp.w	fp, #0
 8011b16:	dd65      	ble.n	8011be4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011b18:	f1b9 0f00 	cmp.w	r9, #0
 8011b1c:	dd62      	ble.n	8011be4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011b1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011b22:	fa1f f08a 	uxth.w	r0, sl
 8011b26:	4552      	cmp	r2, sl
 8011b28:	9000      	str	r0, [sp, #0]
 8011b2a:	da12      	bge.n	8011b52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011b2c:	9301      	str	r3, [sp, #4]
 8011b2e:	9b00      	ldr	r3, [sp, #0]
 8011b30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011b34:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011b38:	1a9a      	subs	r2, r3, r2
 8011b3a:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011b3e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011b42:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011b46:	69ea      	ldr	r2, [r5, #28]
 8011b48:	4631      	mov	r1, r6
 8011b4a:	4640      	mov	r0, r8
 8011b4c:	f7ff ff7a 	bl	8011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b50:	9b01      	ldr	r3, [sp, #4]
 8011b52:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011b56:	b29f      	uxth	r7, r3
 8011b58:	429a      	cmp	r2, r3
 8011b5a:	da0d      	bge.n	8011b78 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011b5c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011b60:	1aba      	subs	r2, r7, r2
 8011b62:	f8ad a012 	strh.w	sl, [sp, #18]
 8011b66:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011b6a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011b6e:	69ea      	ldr	r2, [r5, #28]
 8011b70:	4631      	mov	r1, r6
 8011b72:	4640      	mov	r0, r8
 8011b74:	f7ff ff66 	bl	8011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011b78:	8822      	ldrh	r2, [r4, #0]
 8011b7a:	88a3      	ldrh	r3, [r4, #4]
 8011b7c:	445f      	add	r7, fp
 8011b7e:	4413      	add	r3, r2
 8011b80:	b29b      	uxth	r3, r3
 8011b82:	b2bf      	uxth	r7, r7
 8011b84:	b23a      	sxth	r2, r7
 8011b86:	b219      	sxth	r1, r3
 8011b88:	4291      	cmp	r1, r2
 8011b8a:	dd0d      	ble.n	8011ba8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011b8c:	1bdb      	subs	r3, r3, r7
 8011b8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011b92:	f8ad a012 	strh.w	sl, [sp, #18]
 8011b96:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011b9a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011b9e:	69ea      	ldr	r2, [r5, #28]
 8011ba0:	4631      	mov	r1, r6
 8011ba2:	4640      	mov	r0, r8
 8011ba4:	f7ff ff4e 	bl	8011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011ba8:	88e2      	ldrh	r2, [r4, #6]
 8011baa:	8863      	ldrh	r3, [r4, #2]
 8011bac:	4413      	add	r3, r2
 8011bae:	9a00      	ldr	r2, [sp, #0]
 8011bb0:	b29b      	uxth	r3, r3
 8011bb2:	444a      	add	r2, r9
 8011bb4:	fa1f f982 	uxth.w	r9, r2
 8011bb8:	fa0f f289 	sxth.w	r2, r9
 8011bbc:	b219      	sxth	r1, r3
 8011bbe:	428a      	cmp	r2, r1
 8011bc0:	da15      	bge.n	8011bee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011bc2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011bc6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011bca:	eba3 0309 	sub.w	r3, r3, r9
 8011bce:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011bd2:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011bd6:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011bda:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011bde:	69ea      	ldr	r2, [r5, #28]
 8011be0:	4631      	mov	r1, r6
 8011be2:	e001      	b.n	8011be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011be4:	4621      	mov	r1, r4
 8011be6:	69ea      	ldr	r2, [r5, #28]
 8011be8:	4640      	mov	r0, r8
 8011bea:	f7ff ff2b 	bl	8011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011bee:	4628      	mov	r0, r5
 8011bf0:	f7ff fe94 	bl	801191c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011bf4:	4633      	mov	r3, r6
 8011bf6:	4602      	mov	r2, r0
 8011bf8:	6861      	ldr	r1, [r4, #4]
 8011bfa:	6820      	ldr	r0, [r4, #0]
 8011bfc:	c303      	stmia	r3!, {r0, r1}
 8011bfe:	4611      	mov	r1, r2
 8011c00:	4630      	mov	r0, r6
 8011c02:	f7fb f939 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8011c06:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011c0a:	2b00      	cmp	r3, #0
 8011c0c:	f77f af33 	ble.w	8011a76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011c10:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011c14:	2b00      	cmp	r3, #0
 8011c16:	f77f af2e 	ble.w	8011a76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011c1a:	4628      	mov	r0, r5
 8011c1c:	f7ff fe9a 	bl	8011954 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011c20:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011c24:	1a18      	subs	r0, r3, r0
 8011c26:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011c2a:	4628      	mov	r0, r5
 8011c2c:	f7ff fea6 	bl	801197c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011c30:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011c34:	4631      	mov	r1, r6
 8011c36:	1a18      	subs	r0, r3, r0
 8011c38:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011c3c:	682b      	ldr	r3, [r5, #0]
 8011c3e:	4628      	mov	r0, r5
 8011c40:	689b      	ldr	r3, [r3, #8]
 8011c42:	4798      	blx	r3
 8011c44:	e717      	b.n	8011a76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011c46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011c46:	b570      	push	{r4, r5, r6, lr}
 8011c48:	2300      	movs	r3, #0
 8011c4a:	460c      	mov	r4, r1
 8011c4c:	b086      	sub	sp, #24
 8011c4e:	1d06      	adds	r6, r0, #4
 8011c50:	4631      	mov	r1, r6
 8011c52:	4605      	mov	r5, r0
 8011c54:	a802      	add	r0, sp, #8
 8011c56:	9301      	str	r3, [sp, #4]
 8011c58:	f7ff fca0 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011c60:	8822      	ldrh	r2, [r4, #0]
 8011c62:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8011c66:	1ad2      	subs	r2, r2, r3
 8011c68:	8863      	ldrh	r3, [r4, #2]
 8011c6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011c6e:	1a5b      	subs	r3, r3, r1
 8011c70:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011c74:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011c78:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011c7c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011c80:	aa01      	add	r2, sp, #4
 8011c82:	a904      	add	r1, sp, #16
 8011c84:	4630      	mov	r0, r6
 8011c86:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011c8a:	f7fb f9cd 	bl	800d028 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011c8e:	9a01      	ldr	r2, [sp, #4]
 8011c90:	b11a      	cbz	r2, 8011c9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011c92:	4621      	mov	r1, r4
 8011c94:	4628      	mov	r0, r5
 8011c96:	f7ff fed5 	bl	8011a44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011c9a:	b006      	add	sp, #24
 8011c9c:	bd70      	pop	{r4, r5, r6, pc}

08011c9e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011c9e:	b530      	push	{r4, r5, lr}
 8011ca0:	4602      	mov	r2, r0
 8011ca2:	b085      	sub	sp, #20
 8011ca4:	460d      	mov	r5, r1
 8011ca6:	466b      	mov	r3, sp
 8011ca8:	4604      	mov	r4, r0
 8011caa:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011cae:	6851      	ldr	r1, [r2, #4]
 8011cb0:	c303      	stmia	r3!, {r0, r1}
 8011cb2:	4629      	mov	r1, r5
 8011cb4:	4668      	mov	r0, sp
 8011cb6:	f7fb f8df 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8011cba:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011cbe:	b12b      	cbz	r3, 8011ccc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011cc0:	4669      	mov	r1, sp
 8011cc2:	4620      	mov	r0, r4
 8011cc4:	f7ff ffbf 	bl	8011c46 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011cc8:	b005      	add	sp, #20
 8011cca:	bd30      	pop	{r4, r5, pc}
 8011ccc:	3404      	adds	r4, #4
 8011cce:	4621      	mov	r1, r4
 8011cd0:	a802      	add	r0, sp, #8
 8011cd2:	f7ff fc63 	bl	801159c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011cd6:	f8bd 3000 	ldrh.w	r3, [sp]
 8011cda:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011cde:	4669      	mov	r1, sp
 8011ce0:	1a9b      	subs	r3, r3, r2
 8011ce2:	f8ad 3000 	strh.w	r3, [sp]
 8011ce6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011cea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011cee:	4620      	mov	r0, r4
 8011cf0:	1a9b      	subs	r3, r3, r2
 8011cf2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011cf6:	f7fb f95e 	bl	800cfb6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8011cfa:	e7e5      	b.n	8011cc8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08011cfc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8011cfc:	460b      	mov	r3, r1
 8011cfe:	680a      	ldr	r2, [r1, #0]
 8011d00:	1d01      	adds	r1, r0, #4
 8011d02:	6992      	ldr	r2, [r2, #24]
 8011d04:	4618      	mov	r0, r3
 8011d06:	4710      	bx	r2

08011d08 <_ZN8touchgfx12TextProviderC1Ev>:
 8011d08:	b538      	push	{r3, r4, r5, lr}
 8011d0a:	2500      	movs	r5, #0
 8011d0c:	2302      	movs	r3, #2
 8011d0e:	4604      	mov	r4, r0
 8011d10:	e9c0 5500 	strd	r5, r5, [r0]
 8011d14:	7403      	strb	r3, [r0, #16]
 8011d16:	6145      	str	r5, [r0, #20]
 8011d18:	7605      	strb	r5, [r0, #24]
 8011d1a:	83c5      	strh	r5, [r0, #30]
 8011d1c:	8405      	strh	r5, [r0, #32]
 8011d1e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011d20:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011d22:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8011d24:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8011d28:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8011d2c:	220e      	movs	r2, #14
 8011d2e:	4629      	mov	r1, r5
 8011d30:	304c      	adds	r0, #76	@ 0x4c
 8011d32:	f010 f8da 	bl	8021eea <memset>
 8011d36:	2301      	movs	r3, #1
 8011d38:	4620      	mov	r0, r4
 8011d3a:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8011d3e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011d42:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8011d46:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8011d4a:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8011d4e:	f7f8 faa7 	bl	800a2a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8011d52:	4620      	mov	r0, r4
 8011d54:	bd38      	pop	{r3, r4, r5, pc}

08011d56 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8011d56:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011d58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011d5c:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8011d5e:	fab0 f080 	clz	r0, r0
 8011d62:	0940      	lsrs	r0, r0, #5
 8011d64:	4770      	bx	lr

08011d66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8011d66:	b530      	push	{r4, r5, lr}
 8011d68:	2500      	movs	r5, #0
 8011d6a:	2401      	movs	r4, #1
 8011d6c:	6843      	ldr	r3, [r0, #4]
 8011d6e:	b913      	cbnz	r3, 8011d76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011d70:	6803      	ldr	r3, [r0, #0]
 8011d72:	b313      	cbz	r3, 8011dba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011d74:	6043      	str	r3, [r0, #4]
 8011d76:	7e03      	ldrb	r3, [r0, #24]
 8011d78:	b143      	cbz	r3, 8011d8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011d7a:	6943      	ldr	r3, [r0, #20]
 8011d7c:	b12b      	cbz	r3, 8011d8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011d7e:	881a      	ldrh	r2, [r3, #0]
 8011d80:	b11a      	cbz	r2, 8011d8a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011d82:	1c9a      	adds	r2, r3, #2
 8011d84:	6142      	str	r2, [r0, #20]
 8011d86:	8818      	ldrh	r0, [r3, #0]
 8011d88:	bd30      	pop	{r4, r5, pc}
 8011d8a:	7605      	strb	r5, [r0, #24]
 8011d8c:	6843      	ldr	r3, [r0, #4]
 8011d8e:	8819      	ldrh	r1, [r3, #0]
 8011d90:	b199      	cbz	r1, 8011dba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8011d92:	1c9a      	adds	r2, r3, #2
 8011d94:	2902      	cmp	r1, #2
 8011d96:	6042      	str	r2, [r0, #4]
 8011d98:	d1f5      	bne.n	8011d86 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011d9a:	7c03      	ldrb	r3, [r0, #16]
 8011d9c:	2b01      	cmp	r3, #1
 8011d9e:	d8e5      	bhi.n	8011d6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011da0:	1c5a      	adds	r2, r3, #1
 8011da2:	7402      	strb	r2, [r0, #16]
 8011da4:	3302      	adds	r3, #2
 8011da6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011daa:	6143      	str	r3, [r0, #20]
 8011dac:	2b00      	cmp	r3, #0
 8011dae:	d0dd      	beq.n	8011d6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011db0:	881b      	ldrh	r3, [r3, #0]
 8011db2:	2b00      	cmp	r3, #0
 8011db4:	d0da      	beq.n	8011d6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011db6:	7604      	strb	r4, [r0, #24]
 8011db8:	e7d8      	b.n	8011d6c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011dba:	2000      	movs	r0, #0
 8011dbc:	e7e4      	b.n	8011d88 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011dbe:	6001      	str	r1, [r0, #0]
 8011dc0:	2100      	movs	r1, #0
 8011dc2:	b430      	push	{r4, r5}
 8011dc4:	6041      	str	r1, [r0, #4]
 8011dc6:	6815      	ldr	r5, [r2, #0]
 8011dc8:	6085      	str	r5, [r0, #8]
 8011dca:	6852      	ldr	r2, [r2, #4]
 8011dcc:	6443      	str	r3, [r0, #68]	@ 0x44
 8011dce:	9b02      	ldr	r3, [sp, #8]
 8011dd0:	60c2      	str	r2, [r0, #12]
 8011dd2:	7401      	strb	r1, [r0, #16]
 8011dd4:	6141      	str	r1, [r0, #20]
 8011dd6:	7601      	strb	r1, [r0, #24]
 8011dd8:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011dda:	8401      	strh	r1, [r0, #32]
 8011ddc:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011de0:	6483      	str	r3, [r0, #72]	@ 0x48
 8011de2:	bc30      	pop	{r4, r5}
 8011de4:	f7f8 ba5c 	b.w	800a2a0 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011de8 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8011de8:	b408      	push	{r3}
 8011dea:	b510      	push	{r4, lr}
 8011dec:	b085      	sub	sp, #20
 8011dee:	ac07      	add	r4, sp, #28
 8011df0:	f854 3b04 	ldr.w	r3, [r4], #4
 8011df4:	9300      	str	r3, [sp, #0]
 8011df6:	4613      	mov	r3, r2
 8011df8:	4622      	mov	r2, r4
 8011dfa:	9403      	str	r4, [sp, #12]
 8011dfc:	f7ff ffdf 	bl	8011dbe <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e00:	b005      	add	sp, #20
 8011e02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e06:	b001      	add	sp, #4
 8011e08:	4770      	bx	lr

08011e0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011e0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e0c:	4605      	mov	r5, r0
 8011e0e:	4608      	mov	r0, r1
 8011e10:	b1e9      	cbz	r1, 8011e4e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8011e12:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8011e16:	460b      	mov	r3, r1
 8011e18:	4622      	mov	r2, r4
 8011e1a:	f101 0708 	add.w	r7, r1, #8
 8011e1e:	4626      	mov	r6, r4
 8011e20:	6818      	ldr	r0, [r3, #0]
 8011e22:	6859      	ldr	r1, [r3, #4]
 8011e24:	3308      	adds	r3, #8
 8011e26:	c603      	stmia	r6!, {r0, r1}
 8011e28:	42bb      	cmp	r3, r7
 8011e2a:	4634      	mov	r4, r6
 8011e2c:	d1f7      	bne.n	8011e1e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011e2e:	6818      	ldr	r0, [r3, #0]
 8011e30:	6030      	str	r0, [r6, #0]
 8011e32:	4610      	mov	r0, r2
 8011e34:	889b      	ldrh	r3, [r3, #4]
 8011e36:	80b3      	strh	r3, [r6, #4]
 8011e38:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8011e3c:	015b      	lsls	r3, r3, #5
 8011e3e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011e42:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8011e46:	430b      	orrs	r3, r1
 8011e48:	425b      	negs	r3, r3
 8011e4a:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011e50 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8011e50:	b538      	push	{r3, r4, r5, lr}
 8011e52:	460c      	mov	r4, r1
 8011e54:	6811      	ldr	r1, [r2, #0]
 8011e56:	4610      	mov	r0, r2
 8011e58:	68cd      	ldr	r5, [r1, #12]
 8011e5a:	4619      	mov	r1, r3
 8011e5c:	47a8      	blx	r5
 8011e5e:	2800      	cmp	r0, #0
 8011e60:	bf08      	it	eq
 8011e62:	4620      	moveq	r0, r4
 8011e64:	bd38      	pop	{r3, r4, r5, pc}
	...

08011e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8011e68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e6c:	468c      	mov	ip, r1
 8011e6e:	4605      	mov	r5, r0
 8011e70:	4614      	mov	r4, r2
 8011e72:	b942      	cbnz	r2, 8011e86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8011e74:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8011e78:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8011e7c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8011e80:	4620      	mov	r0, r4
 8011e82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e86:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011e8a:	7b50      	ldrb	r0, [r2, #13]
 8011e8c:	8893      	ldrh	r3, [r2, #4]
 8011e8e:	0106      	lsls	r6, r0, #4
 8011e90:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011e94:	79e6      	ldrb	r6, [r4, #7]
 8011e96:	4316      	orrs	r6, r2
 8011e98:	185a      	adds	r2, r3, r1
 8011e9a:	b291      	uxth	r1, r2
 8011e9c:	291d      	cmp	r1, #29
 8011e9e:	b2b7      	uxth	r7, r6
 8011ea0:	d87d      	bhi.n	8011f9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 8011ea2:	2201      	movs	r2, #1
 8011ea4:	408a      	lsls	r2, r1
 8011ea6:	498a      	ldr	r1, [pc, #552]	@ (80120d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8011ea8:	10f6      	asrs	r6, r6, #3
 8011eaa:	420a      	tst	r2, r1
 8011eac:	d12d      	bne.n	8011f0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa2>
 8011eae:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8011eb2:	d074      	beq.n	8011f9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x136>
 8011eb4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011eb8:	4623      	mov	r3, r4
 8011eba:	f104 0e08 	add.w	lr, r4, #8
 8011ebe:	4614      	mov	r4, r2
 8011ec0:	4694      	mov	ip, r2
 8011ec2:	6818      	ldr	r0, [r3, #0]
 8011ec4:	6859      	ldr	r1, [r3, #4]
 8011ec6:	3308      	adds	r3, #8
 8011ec8:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011ecc:	4573      	cmp	r3, lr
 8011ece:	4662      	mov	r2, ip
 8011ed0:	d1f6      	bne.n	8011ec0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 8011ed2:	6818      	ldr	r0, [r3, #0]
 8011ed4:	f8cc 0000 	str.w	r0, [ip]
 8011ed8:	889b      	ldrh	r3, [r3, #4]
 8011eda:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011ede:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8011ee2:	b2b3      	uxth	r3, r6
 8011ee4:	1aca      	subs	r2, r1, r3
 8011ee6:	b292      	uxth	r2, r2
 8011ee8:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011eec:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011ef0:	10d2      	asrs	r2, r2, #3
 8011ef2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8011ef6:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011efa:	4302      	orrs	r2, r0
 8011efc:	1bcf      	subs	r7, r1, r7
 8011efe:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8011f02:	1afb      	subs	r3, r7, r3
 8011f04:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011f08:	e7ba      	b.n	8011e80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011f0a:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011f0e:	4623      	mov	r3, r4
 8011f10:	f104 0808 	add.w	r8, r4, #8
 8011f14:	4614      	mov	r4, r2
 8011f16:	4696      	mov	lr, r2
 8011f18:	6818      	ldr	r0, [r3, #0]
 8011f1a:	6859      	ldr	r1, [r3, #4]
 8011f1c:	3308      	adds	r3, #8
 8011f1e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011f22:	4543      	cmp	r3, r8
 8011f24:	4672      	mov	r2, lr
 8011f26:	d1f6      	bne.n	8011f16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xae>
 8011f28:	6818      	ldr	r0, [r3, #0]
 8011f2a:	f8ce 0000 	str.w	r0, [lr]
 8011f2e:	889b      	ldrh	r3, [r3, #4]
 8011f30:	f8ae 3004 	strh.w	r3, [lr, #4]
 8011f34:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8011f36:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8011f3a:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8011f3c:	f640 6333 	movw	r3, #3635	@ 0xe33
 8011f40:	4299      	cmp	r1, r3
 8011f42:	d111      	bne.n	8011f68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x100>
 8011f44:	f8dc 3000 	ldr.w	r3, [ip]
 8011f48:	4660      	mov	r0, ip
 8011f4a:	68db      	ldr	r3, [r3, #12]
 8011f4c:	4798      	blx	r3
 8011f4e:	7b41      	ldrb	r1, [r0, #13]
 8011f50:	00cb      	lsls	r3, r1, #3
 8011f52:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011f56:	7a03      	ldrb	r3, [r0, #8]
 8011f58:	4313      	orrs	r3, r2
 8011f5a:	064a      	lsls	r2, r1, #25
 8011f5c:	bf44      	itt	mi
 8011f5e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011f62:	b21b      	sxthmi	r3, r3
 8011f64:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011f68:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8011f6c:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8011f70:	443b      	add	r3, r7
 8011f72:	4433      	add	r3, r6
 8011f74:	b29b      	uxth	r3, r3
 8011f76:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011f7a:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8011f7e:	10db      	asrs	r3, r3, #3
 8011f80:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011f84:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011f88:	4313      	orrs	r3, r2
 8011f8a:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8011f8e:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8011f92:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011f96:	1a9b      	subs	r3, r3, r2
 8011f98:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011f9c:	e770      	b.n	8011e80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011f9e:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011fa2:	f023 0204 	bic.w	r2, r3, #4
 8011fa6:	428a      	cmp	r2, r1
 8011fa8:	d003      	beq.n	8011fb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14a>
 8011faa:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8011fae:	4293      	cmp	r3, r2
 8011fb0:	d137      	bne.n	8012022 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8011fb2:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011fb6:	4622      	mov	r2, r4
 8011fb8:	f104 0808 	add.w	r8, r4, #8
 8011fbc:	4634      	mov	r4, r6
 8011fbe:	46b6      	mov	lr, r6
 8011fc0:	6810      	ldr	r0, [r2, #0]
 8011fc2:	6851      	ldr	r1, [r2, #4]
 8011fc4:	3208      	adds	r2, #8
 8011fc6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011fca:	4542      	cmp	r2, r8
 8011fcc:	4676      	mov	r6, lr
 8011fce:	d1f6      	bne.n	8011fbe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8011fd0:	6810      	ldr	r0, [r2, #0]
 8011fd2:	3b01      	subs	r3, #1
 8011fd4:	f8ce 0000 	str.w	r0, [lr]
 8011fd8:	8892      	ldrh	r2, [r2, #4]
 8011fda:	b29b      	uxth	r3, r3
 8011fdc:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011fe0:	4621      	mov	r1, r4
 8011fe2:	4662      	mov	r2, ip
 8011fe4:	4628      	mov	r0, r5
 8011fe6:	f7ff ff33 	bl	8011e50 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011fea:	7b41      	ldrb	r1, [r0, #13]
 8011fec:	00cb      	lsls	r3, r1, #3
 8011fee:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011ff2:	7a03      	ldrb	r3, [r0, #8]
 8011ff4:	0648      	lsls	r0, r1, #25
 8011ff6:	ea43 0302 	orr.w	r3, r3, r2
 8011ffa:	bf44      	itt	mi
 8011ffc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012000:	b21b      	sxthmi	r3, r3
 8012002:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012006:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801200a:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801200e:	005b      	lsls	r3, r3, #1
 8012010:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012014:	4313      	orrs	r3, r2
 8012016:	115a      	asrs	r2, r3, #5
 8012018:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801201c:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8012020:	e046      	b.n	80120b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x248>
 8012022:	00c2      	lsls	r2, r0, #3
 8012024:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8012028:	7a22      	ldrb	r2, [r4, #8]
 801202a:	430a      	orrs	r2, r1
 801202c:	0641      	lsls	r1, r0, #25
 801202e:	f640 6109 	movw	r1, #3593	@ 0xe09
 8012032:	bf44      	itt	mi
 8012034:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8012038:	b212      	sxthmi	r2, r2
 801203a:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801203e:	f023 0210 	bic.w	r2, r3, #16
 8012042:	428a      	cmp	r2, r1
 8012044:	d003      	beq.n	801204e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e6>
 8012046:	f640 6213 	movw	r2, #3603	@ 0xe13
 801204a:	4293      	cmp	r3, r2
 801204c:	d13d      	bne.n	80120ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x262>
 801204e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8012052:	4696      	mov	lr, r2
 8012054:	f104 0808 	add.w	r8, r4, #8
 8012058:	4616      	mov	r6, r2
 801205a:	6820      	ldr	r0, [r4, #0]
 801205c:	6861      	ldr	r1, [r4, #4]
 801205e:	3408      	adds	r4, #8
 8012060:	c603      	stmia	r6!, {r0, r1}
 8012062:	4544      	cmp	r4, r8
 8012064:	4632      	mov	r2, r6
 8012066:	d1f7      	bne.n	8012058 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f0>
 8012068:	6820      	ldr	r0, [r4, #0]
 801206a:	6030      	str	r0, [r6, #0]
 801206c:	88a1      	ldrh	r1, [r4, #4]
 801206e:	4628      	mov	r0, r5
 8012070:	80b1      	strh	r1, [r6, #4]
 8012072:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8012076:	4671      	mov	r1, lr
 8012078:	0076      	lsls	r6, r6, #1
 801207a:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801207e:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8012082:	4674      	mov	r4, lr
 8012084:	4316      	orrs	r6, r2
 8012086:	f640 6213 	movw	r2, #3603	@ 0xe13
 801208a:	4293      	cmp	r3, r2
 801208c:	bf1a      	itte	ne
 801208e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012092:	b29b      	uxthne	r3, r3
 8012094:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8012098:	4662      	mov	r2, ip
 801209a:	f7ff fed9 	bl	8011e50 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801209e:	7b43      	ldrb	r3, [r0, #13]
 80120a0:	7a82      	ldrb	r2, [r0, #10]
 80120a2:	005b      	lsls	r3, r3, #1
 80120a4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80120a8:	4313      	orrs	r3, r2
 80120aa:	1af6      	subs	r6, r6, r3
 80120ac:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 80120b0:	7b61      	ldrb	r1, [r4, #13]
 80120b2:	00cb      	lsls	r3, r1, #3
 80120b4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80120b8:	7a23      	ldrb	r3, [r4, #8]
 80120ba:	4313      	orrs	r3, r2
 80120bc:	064a      	lsls	r2, r1, #25
 80120be:	bf44      	itt	mi
 80120c0:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80120c4:	b21b      	sxthmi	r3, r3
 80120c6:	1bdb      	subs	r3, r3, r7
 80120c8:	e71c      	b.n	8011f04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9c>
 80120ca:	2300      	movs	r3, #0
 80120cc:	e7a6      	b.n	801201c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b4>
 80120ce:	bf00      	nop
 80120d0:	3fc00079 	.word	0x3fc00079

080120d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80120d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80120d8:	4604      	mov	r4, r0
 80120da:	b942      	cbnz	r2, 80120ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80120dc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80120e0:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80120e4:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80120e8:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80120ec:	e047      	b.n	801217e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80120ee:	7b51      	ldrb	r1, [r2, #13]
 80120f0:	8893      	ldrh	r3, [r2, #4]
 80120f2:	010d      	lsls	r5, r1, #4
 80120f4:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80120f8:	79d5      	ldrb	r5, [r2, #7]
 80120fa:	4305      	orrs	r5, r0
 80120fc:	2d04      	cmp	r5, #4
 80120fe:	bfcc      	ite	gt
 8012100:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012104:	f04f 0e01 	movle.w	lr, #1
 8012108:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 801210c:	f200 80ab 	bhi.w	8012266 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012110:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8012114:	4283      	cmp	r3, r0
 8012116:	d216      	bcs.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012118:	f240 605b 	movw	r0, #1627	@ 0x65b
 801211c:	4283      	cmp	r3, r0
 801211e:	d859      	bhi.n	80121d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012120:	f240 6057 	movw	r0, #1623	@ 0x657
 8012124:	4283      	cmp	r3, r0
 8012126:	d20e      	bcs.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012128:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 801212c:	d24a      	bcs.n	80121c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801212e:	f240 604e 	movw	r0, #1614	@ 0x64e
 8012132:	4283      	cmp	r3, r0
 8012134:	d207      	bcs.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012136:	f240 601a 	movw	r0, #1562	@ 0x61a
 801213a:	4283      	cmp	r3, r0
 801213c:	d02a      	beq.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801213e:	d821      	bhi.n	8012184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012140:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8012144:	d35b      	bcc.n	80121fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012146:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 801214a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801214e:	f040 80d0 	bne.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012152:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8012156:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801215a:	f040 80ca 	bne.w	80122f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801215e:	00cb      	lsls	r3, r1, #3
 8012160:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012164:	7a13      	ldrb	r3, [r2, #8]
 8012166:	0649      	lsls	r1, r1, #25
 8012168:	ea43 0300 	orr.w	r3, r3, r0
 801216c:	bf44      	itt	mi
 801216e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012172:	b21b      	sxthmi	r3, r3
 8012174:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012178:	1b5d      	subs	r5, r3, r5
 801217a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801217e:	4610      	mov	r0, r2
 8012180:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012184:	f240 604b 	movw	r0, #1611	@ 0x64b
 8012188:	4283      	cmp	r3, r0
 801218a:	d338      	bcc.n	80121fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801218c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8012190:	4283      	cmp	r3, r0
 8012192:	d9d8      	bls.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012194:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8012198:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801219c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80121a0:	f040 80f2 	bne.w	8012388 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80121a4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80121a8:	f040 80ee 	bne.w	8012388 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80121ac:	00cb      	lsls	r3, r1, #3
 80121ae:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80121b2:	7a13      	ldrb	r3, [r2, #8]
 80121b4:	064e      	lsls	r6, r1, #25
 80121b6:	ea43 0300 	orr.w	r3, r3, r0
 80121ba:	bf44      	itt	mi
 80121bc:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80121c0:	b21b      	sxthmi	r3, r3
 80121c2:	e7d9      	b.n	8012178 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80121c4:	f240 6054 	movw	r0, #1620	@ 0x654
 80121c8:	4283      	cmp	r3, r0
 80121ca:	d8e3      	bhi.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121cc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80121d0:	d9e0      	bls.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121d2:	e7b8      	b.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121d4:	f240 6074 	movw	r0, #1652	@ 0x674
 80121d8:	4283      	cmp	r3, r0
 80121da:	d0b4      	beq.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121dc:	d82d      	bhi.n	801223a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80121de:	f240 605e 	movw	r0, #1630	@ 0x65e
 80121e2:	4283      	cmp	r3, r0
 80121e4:	d804      	bhi.n	80121f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80121e6:	f240 605d 	movw	r0, #1629	@ 0x65d
 80121ea:	4283      	cmp	r3, r0
 80121ec:	d3d2      	bcc.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121ee:	e7aa      	b.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121f0:	f240 605f 	movw	r0, #1631	@ 0x65f
 80121f4:	4283      	cmp	r3, r0
 80121f6:	d0cd      	beq.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80121f8:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80121fc:	d0a3      	beq.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80121fe:	00cb      	lsls	r3, r1, #3
 8012200:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012204:	7a13      	ldrb	r3, [r2, #8]
 8012206:	0649      	lsls	r1, r1, #25
 8012208:	ea43 0300 	orr.w	r3, r3, r0
 801220c:	bf44      	itt	mi
 801220e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012212:	b21b      	sxthmi	r3, r3
 8012214:	1b5d      	subs	r5, r3, r5
 8012216:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801221a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801221e:	7b53      	ldrb	r3, [r2, #13]
 8012220:	015b      	lsls	r3, r3, #5
 8012222:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8012226:	7993      	ldrb	r3, [r2, #6]
 8012228:	430b      	orrs	r3, r1
 801222a:	2105      	movs	r1, #5
 801222c:	005b      	lsls	r3, r3, #1
 801222e:	fb93 f3f1 	sdiv	r3, r3, r1
 8012232:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012236:	440b      	add	r3, r1
 8012238:	e756      	b.n	80120e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801223a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 801223e:	4283      	cmp	r3, r0
 8012240:	d809      	bhi.n	8012256 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012242:	f240 60df 	movw	r0, #1759	@ 0x6df
 8012246:	4283      	cmp	r3, r0
 8012248:	f4bf af7d 	bcs.w	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801224c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8012250:	2b05      	cmp	r3, #5
 8012252:	d8d4      	bhi.n	80121fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012254:	e777      	b.n	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012256:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 801225a:	4283      	cmp	r3, r0
 801225c:	d09a      	beq.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801225e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8012262:	4283      	cmp	r3, r0
 8012264:	e7ca      	b.n	80121fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012266:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801226a:	d22b      	bcs.n	80122c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801226c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8012270:	4283      	cmp	r3, r0
 8012272:	d28f      	bcs.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012274:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8012278:	4283      	cmp	r3, r0
 801227a:	d816      	bhi.n	80122aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801227c:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8012280:	4283      	cmp	r3, r0
 8012282:	f4bf af60 	bcs.w	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012286:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801228a:	4283      	cmp	r3, r0
 801228c:	d80a      	bhi.n	80122a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801228e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8012292:	4283      	cmp	r3, r0
 8012294:	f4bf af57 	bcs.w	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012298:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801229c:	4283      	cmp	r3, r0
 801229e:	f43f af79 	beq.w	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122a2:	e7ac      	b.n	80121fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80122a4:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 80122a8:	e7f8      	b.n	801229c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80122aa:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 80122ae:	4283      	cmp	r3, r0
 80122b0:	d802      	bhi.n	80122b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80122b2:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 80122b6:	e798      	b.n	80121ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80122b8:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80122bc:	4283      	cmp	r3, r0
 80122be:	f47f af42 	bne.w	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122c2:	e767      	b.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122c4:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80122c8:	4283      	cmp	r3, r0
 80122ca:	f43f af63 	beq.w	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122ce:	d802      	bhi.n	80122d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80122d0:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80122d4:	e7f2      	b.n	80122bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80122d6:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80122da:	4283      	cmp	r3, r0
 80122dc:	d805      	bhi.n	80122ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80122de:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80122e2:	4283      	cmp	r3, r0
 80122e4:	f4ff af2f 	bcc.w	8012146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80122e8:	e754      	b.n	8012194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80122ea:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80122ee:	4283      	cmp	r3, r0
 80122f0:	e7af      	b.n	8012252 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80122f2:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80122f6:	4617      	mov	r7, r2
 80122f8:	4666      	mov	r6, ip
 80122fa:	f102 0808 	add.w	r8, r2, #8
 80122fe:	46e6      	mov	lr, ip
 8012300:	6838      	ldr	r0, [r7, #0]
 8012302:	6879      	ldr	r1, [r7, #4]
 8012304:	3708      	adds	r7, #8
 8012306:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801230a:	4547      	cmp	r7, r8
 801230c:	46f4      	mov	ip, lr
 801230e:	d1f6      	bne.n	80122fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012310:	6838      	ldr	r0, [r7, #0]
 8012312:	f8ce 0000 	str.w	r0, [lr]
 8012316:	88b9      	ldrh	r1, [r7, #4]
 8012318:	f8ae 1004 	strh.w	r1, [lr, #4]
 801231c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8012320:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012324:	d009      	beq.n	801233a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012326:	7b51      	ldrb	r1, [r2, #13]
 8012328:	7992      	ldrb	r2, [r2, #6]
 801232a:	0149      	lsls	r1, r1, #5
 801232c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8012330:	4311      	orrs	r1, r2
 8012332:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012336:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 801233a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801233e:	b2ad      	uxth	r5, r5
 8012340:	d00d      	beq.n	801235e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012342:	442b      	add	r3, r5
 8012344:	b29b      	uxth	r3, r3
 8012346:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 801234a:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801234e:	10db      	asrs	r3, r3, #3
 8012350:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012354:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8012358:	4313      	orrs	r3, r2
 801235a:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801235e:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012362:	00cb      	lsls	r3, r1, #3
 8012364:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012368:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801236c:	064f      	lsls	r7, r1, #25
 801236e:	ea43 0302 	orr.w	r3, r3, r2
 8012372:	bf44      	itt	mi
 8012374:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012378:	b21b      	sxthmi	r3, r3
 801237a:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801237e:	1b5b      	subs	r3, r3, r5
 8012380:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012384:	4632      	mov	r2, r6
 8012386:	e6fa      	b.n	801217e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012388:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801238c:	4617      	mov	r7, r2
 801238e:	4666      	mov	r6, ip
 8012390:	f102 0908 	add.w	r9, r2, #8
 8012394:	46e0      	mov	r8, ip
 8012396:	6838      	ldr	r0, [r7, #0]
 8012398:	6879      	ldr	r1, [r7, #4]
 801239a:	3708      	adds	r7, #8
 801239c:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80123a0:	454f      	cmp	r7, r9
 80123a2:	46c4      	mov	ip, r8
 80123a4:	d1f6      	bne.n	8012394 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80123a6:	6838      	ldr	r0, [r7, #0]
 80123a8:	f8c8 0000 	str.w	r0, [r8]
 80123ac:	88b9      	ldrh	r1, [r7, #4]
 80123ae:	f8a8 1004 	strh.w	r1, [r8, #4]
 80123b2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80123b6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80123ba:	d009      	beq.n	80123d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80123bc:	7b51      	ldrb	r1, [r2, #13]
 80123be:	7992      	ldrb	r2, [r2, #6]
 80123c0:	0149      	lsls	r1, r1, #5
 80123c2:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80123c6:	4311      	orrs	r1, r2
 80123c8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80123cc:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80123d0:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80123d4:	d00e      	beq.n	80123f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80123d6:	eba3 030e 	sub.w	r3, r3, lr
 80123da:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80123de:	b29b      	uxth	r3, r3
 80123e0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80123e4:	10db      	asrs	r3, r3, #3
 80123e6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80123ea:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80123ee:	4313      	orrs	r3, r2
 80123f0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80123f4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80123f8:	00cb      	lsls	r3, r1, #3
 80123fa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80123fe:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012402:	0648      	lsls	r0, r1, #25
 8012404:	ea43 0302 	orr.w	r3, r3, r2
 8012408:	bf44      	itt	mi
 801240a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801240e:	b21b      	sxthmi	r3, r3
 8012410:	1b5d      	subs	r5, r3, r5
 8012412:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012416:	e7b5      	b.n	8012384 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012418 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012418:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801241c:	461e      	mov	r6, r3
 801241e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012420:	4604      	mov	r4, r0
 8012422:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012426:	4617      	mov	r7, r2
 8012428:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 801242c:	f7f7 fe92 	bl	800a154 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012430:	4605      	mov	r5, r0
 8012432:	b918      	cbnz	r0, 801243c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012434:	6030      	str	r0, [r6, #0]
 8012436:	4628      	mov	r0, r5
 8012438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801243c:	683b      	ldr	r3, [r7, #0]
 801243e:	4601      	mov	r1, r0
 8012440:	68db      	ldr	r3, [r3, #12]
 8012442:	4638      	mov	r0, r7
 8012444:	4798      	blx	r3
 8012446:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 801244a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801244e:	4602      	mov	r2, r0
 8012450:	6030      	str	r0, [r6, #0]
 8012452:	d213      	bcs.n	801247c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012454:	4643      	mov	r3, r8
 8012456:	4639      	mov	r1, r7
 8012458:	4620      	mov	r0, r4
 801245a:	f7ff fe3b 	bl	80120d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801245e:	6030      	str	r0, [r6, #0]
 8012460:	6833      	ldr	r3, [r6, #0]
 8012462:	b143      	cbz	r3, 8012476 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012464:	7b5a      	ldrb	r2, [r3, #13]
 8012466:	7a9b      	ldrb	r3, [r3, #10]
 8012468:	0052      	lsls	r2, r2, #1
 801246a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801246e:	4313      	orrs	r3, r2
 8012470:	bf0c      	ite	eq
 8012472:	2301      	moveq	r3, #1
 8012474:	2300      	movne	r3, #0
 8012476:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801247a:	e7dc      	b.n	8012436 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801247c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012480:	b29b      	uxth	r3, r3
 8012482:	2b7f      	cmp	r3, #127	@ 0x7f
 8012484:	d804      	bhi.n	8012490 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012486:	4639      	mov	r1, r7
 8012488:	4620      	mov	r0, r4
 801248a:	f7ff fced 	bl	8011e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801248e:	e7e6      	b.n	801245e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012490:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012494:	2b00      	cmp	r3, #0
 8012496:	d0e3      	beq.n	8012460 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012498:	f640 1302 	movw	r3, #2306	@ 0x902
 801249c:	429d      	cmp	r5, r3
 801249e:	d1df      	bne.n	8012460 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80124a0:	4601      	mov	r1, r0
 80124a2:	4620      	mov	r0, r4
 80124a4:	f7ff fcb1 	bl	8011e0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80124a8:	e7d9      	b.n	801245e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080124aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80124aa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80124ae:	461e      	mov	r6, r3
 80124b0:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80124b2:	4604      	mov	r4, r0
 80124b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80124b8:	4617      	mov	r7, r2
 80124ba:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80124be:	f7f7 fe49 	bl	800a154 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80124c2:	4605      	mov	r5, r0
 80124c4:	b918      	cbnz	r0, 80124ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80124c6:	6030      	str	r0, [r6, #0]
 80124c8:	4628      	mov	r0, r5
 80124ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80124ce:	683b      	ldr	r3, [r7, #0]
 80124d0:	4601      	mov	r1, r0
 80124d2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80124d6:	4638      	mov	r0, r7
 80124d8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80124dc:	47c8      	blx	r9
 80124de:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80124e2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80124e6:	4602      	mov	r2, r0
 80124e8:	6030      	str	r0, [r6, #0]
 80124ea:	d213      	bcs.n	8012514 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80124ec:	4643      	mov	r3, r8
 80124ee:	4639      	mov	r1, r7
 80124f0:	4620      	mov	r0, r4
 80124f2:	f7ff fdef 	bl	80120d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80124f6:	6030      	str	r0, [r6, #0]
 80124f8:	6833      	ldr	r3, [r6, #0]
 80124fa:	b143      	cbz	r3, 801250e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80124fc:	7b5a      	ldrb	r2, [r3, #13]
 80124fe:	7a9b      	ldrb	r3, [r3, #10]
 8012500:	0052      	lsls	r2, r2, #1
 8012502:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012506:	4313      	orrs	r3, r2
 8012508:	bf0c      	ite	eq
 801250a:	2301      	moveq	r3, #1
 801250c:	2300      	movne	r3, #0
 801250e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8012512:	e7d9      	b.n	80124c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012514:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012518:	b29b      	uxth	r3, r3
 801251a:	2b7f      	cmp	r3, #127	@ 0x7f
 801251c:	d804      	bhi.n	8012528 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801251e:	4639      	mov	r1, r7
 8012520:	4620      	mov	r0, r4
 8012522:	f7ff fca1 	bl	8011e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012526:	e7e6      	b.n	80124f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012528:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801252c:	2b00      	cmp	r3, #0
 801252e:	d0e3      	beq.n	80124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012530:	f640 1302 	movw	r3, #2306	@ 0x902
 8012534:	429d      	cmp	r5, r3
 8012536:	d1df      	bne.n	80124f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012538:	4601      	mov	r1, r0
 801253a:	4620      	mov	r0, r4
 801253c:	f7ff fc65 	bl	8011e0a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012540:	e7d9      	b.n	80124f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012542 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012542:	b510      	push	{r4, lr}
 8012544:	4604      	mov	r4, r0
 8012546:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801254a:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801254c:	b1f1      	cbz	r1, 801258c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801254e:	2b0a      	cmp	r3, #10
 8012550:	d02f      	beq.n	80125b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012552:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8012554:	3901      	subs	r1, #1
 8012556:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801255a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 801255c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012560:	1c51      	adds	r1, r2, #1
 8012562:	b289      	uxth	r1, r1
 8012564:	2901      	cmp	r1, #1
 8012566:	bf84      	itt	hi
 8012568:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801256c:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 801256e:	f103 0201 	add.w	r2, r3, #1
 8012572:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012574:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012576:	bf98      	it	ls
 8012578:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801257a:	4413      	add	r3, r2
 801257c:	b29b      	uxth	r3, r3
 801257e:	2b09      	cmp	r3, #9
 8012580:	bf88      	it	hi
 8012582:	3b0a      	subhi	r3, #10
 8012584:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012588:	8458      	strh	r0, [r3, #34]	@ 0x22
 801258a:	e7dc      	b.n	8012546 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801258c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801258e:	2b0a      	cmp	r3, #10
 8012590:	d00f      	beq.n	80125b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012592:	4620      	mov	r0, r4
 8012594:	f7ff fbe7 	bl	8011d66 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012598:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801259a:	1c5a      	adds	r2, r3, #1
 801259c:	8722      	strh	r2, [r4, #56]	@ 0x38
 801259e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80125a0:	4413      	add	r3, r2
 80125a2:	b29b      	uxth	r3, r3
 80125a4:	2b09      	cmp	r3, #9
 80125a6:	bf88      	it	hi
 80125a8:	3b0a      	subhi	r3, #10
 80125aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80125ae:	8458      	strh	r0, [r3, #34]	@ 0x22
 80125b0:	e7ec      	b.n	801258c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80125b2:	bd10      	pop	{r4, pc}

080125b4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80125b4:	b538      	push	{r3, r4, r5, lr}
 80125b6:	4604      	mov	r4, r0
 80125b8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80125ba:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80125be:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80125c0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80125c2:	3a01      	subs	r2, #1
 80125c4:	8702      	strh	r2, [r0, #56]	@ 0x38
 80125c6:	1c5a      	adds	r2, r3, #1
 80125c8:	b292      	uxth	r2, r2
 80125ca:	2a09      	cmp	r2, #9
 80125cc:	bf86      	itte	hi
 80125ce:	3b09      	subhi	r3, #9
 80125d0:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80125d2:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80125d4:	f7ff ffb5 	bl	8012542 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80125d8:	8c23      	ldrh	r3, [r4, #32]
 80125da:	2b01      	cmp	r3, #1
 80125dc:	bf9c      	itt	ls
 80125de:	3301      	addls	r3, #1
 80125e0:	8423      	strhls	r3, [r4, #32]
 80125e2:	8be3      	ldrh	r3, [r4, #30]
 80125e4:	b90b      	cbnz	r3, 80125ea <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80125e6:	2302      	movs	r3, #2
 80125e8:	83e3      	strh	r3, [r4, #30]
 80125ea:	8be3      	ldrh	r3, [r4, #30]
 80125ec:	4628      	mov	r0, r5
 80125ee:	3b01      	subs	r3, #1
 80125f0:	b29b      	uxth	r3, r3
 80125f2:	83e3      	strh	r3, [r4, #30]
 80125f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80125f8:	8365      	strh	r5, [r4, #26]
 80125fa:	bd38      	pop	{r3, r4, r5, pc}

080125fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80125fc:	428a      	cmp	r2, r1
 80125fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012602:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8012604:	d931      	bls.n	801266a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012606:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8012608:	1a54      	subs	r4, r2, r1
 801260a:	19ee      	adds	r6, r5, r7
 801260c:	3e01      	subs	r6, #1
 801260e:	fa1f fe84 	uxth.w	lr, r4
 8012612:	b2b4      	uxth	r4, r6
 8012614:	eba4 090e 	sub.w	r9, r4, lr
 8012618:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801261c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8012620:	fa1f f989 	uxth.w	r9, r9
 8012624:	2c09      	cmp	r4, #9
 8012626:	4626      	mov	r6, r4
 8012628:	bf88      	it	hi
 801262a:	f1a4 060a 	subhi.w	r6, r4, #10
 801262e:	f1bc 0f00 	cmp.w	ip, #0
 8012632:	bf08      	it	eq
 8012634:	f04f 0c02 	moveq.w	ip, #2
 8012638:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801263c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012640:	3c01      	subs	r4, #1
 8012642:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8012646:	fa1f fc8c 	uxth.w	ip, ip
 801264a:	b2a4      	uxth	r4, r4
 801264c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012650:	454c      	cmp	r4, r9
 8012652:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8012656:	d1e5      	bne.n	8012624 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012658:	eba5 050e 	sub.w	r5, r5, lr
 801265c:	eb0e 0408 	add.w	r4, lr, r8
 8012660:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012662:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012666:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 801266a:	250a      	movs	r5, #10
 801266c:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 801266e:	1a64      	subs	r4, r4, r1
 8012670:	4439      	add	r1, r7
 8012672:	b289      	uxth	r1, r1
 8012674:	2909      	cmp	r1, #9
 8012676:	bf88      	it	hi
 8012678:	390a      	subhi	r1, #10
 801267a:	8704      	strh	r4, [r0, #56]	@ 0x38
 801267c:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801267e:	b18a      	cbz	r2, 80126a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012680:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012682:	3a01      	subs	r2, #1
 8012684:	3101      	adds	r1, #1
 8012686:	b292      	uxth	r2, r2
 8012688:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801268c:	8701      	strh	r1, [r0, #56]	@ 0x38
 801268e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012690:	b901      	cbnz	r1, 8012694 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012692:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012694:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012696:	3901      	subs	r1, #1
 8012698:	b289      	uxth	r1, r1
 801269a:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801269c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80126a0:	844c      	strh	r4, [r1, #34]	@ 0x22
 80126a2:	e7ec      	b.n	801267e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80126a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80126a8:	f7ff bf4b 	b.w	8012542 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080126ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80126ac:	b570      	push	{r4, r5, r6, lr}
 80126ae:	2500      	movs	r5, #0
 80126b0:	4295      	cmp	r5, r2
 80126b2:	d011      	beq.n	80126d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80126b4:	8bc4      	ldrh	r4, [r0, #30]
 80126b6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80126ba:	4414      	add	r4, r2
 80126bc:	3c01      	subs	r4, #1
 80126be:	1b64      	subs	r4, r4, r5
 80126c0:	b2a4      	uxth	r4, r4
 80126c2:	2c01      	cmp	r4, #1
 80126c4:	bf88      	it	hi
 80126c6:	3c02      	subhi	r4, #2
 80126c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80126cc:	8b64      	ldrh	r4, [r4, #26]
 80126ce:	42b4      	cmp	r4, r6
 80126d0:	d117      	bne.n	8012702 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80126d2:	3501      	adds	r5, #1
 80126d4:	b2ad      	uxth	r5, r5
 80126d6:	e7eb      	b.n	80126b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80126d8:	2400      	movs	r4, #0
 80126da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80126de:	4413      	add	r3, r2
 80126e0:	b2a2      	uxth	r2, r4
 80126e2:	429a      	cmp	r2, r3
 80126e4:	da0f      	bge.n	8012706 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80126e6:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80126e8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80126ec:	4432      	add	r2, r6
 80126ee:	b292      	uxth	r2, r2
 80126f0:	2a09      	cmp	r2, #9
 80126f2:	bf88      	it	hi
 80126f4:	3a0a      	subhi	r2, #10
 80126f6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80126fa:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80126fc:	3401      	adds	r4, #1
 80126fe:	42aa      	cmp	r2, r5
 8012700:	d0ee      	beq.n	80126e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012702:	2000      	movs	r0, #0
 8012704:	bd70      	pop	{r4, r5, r6, pc}
 8012706:	2001      	movs	r0, #1
 8012708:	e7fc      	b.n	8012704 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801270a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801270a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801270e:	4605      	mov	r5, r0
 8012710:	4616      	mov	r6, r2
 8012712:	1c8c      	adds	r4, r1, #2
 8012714:	8809      	ldrh	r1, [r1, #0]
 8012716:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801271a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801271e:	42b3      	cmp	r3, r6
 8012720:	d124      	bne.n	801276c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012722:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012726:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801272a:	f001 070f 	and.w	r7, r1, #15
 801272e:	f8cd 8000 	str.w	r8, [sp]
 8012732:	464b      	mov	r3, r9
 8012734:	4652      	mov	r2, sl
 8012736:	4621      	mov	r1, r4
 8012738:	4628      	mov	r0, r5
 801273a:	f7ff ffb7 	bl	80126ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801273e:	4683      	mov	fp, r0
 8012740:	b168      	cbz	r0, 801275e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012742:	eb0a 0109 	add.w	r1, sl, r9
 8012746:	4441      	add	r1, r8
 8012748:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801274c:	463a      	mov	r2, r7
 801274e:	4649      	mov	r1, r9
 8012750:	4628      	mov	r0, r5
 8012752:	f7ff ff53 	bl	80125fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012756:	4658      	mov	r0, fp
 8012758:	b003      	add	sp, #12
 801275a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801275e:	eb07 010a 	add.w	r1, r7, sl
 8012762:	4449      	add	r1, r9
 8012764:	4441      	add	r1, r8
 8012766:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801276a:	e7d2      	b.n	8012712 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801276c:	f04f 0b00 	mov.w	fp, #0
 8012770:	e7f1      	b.n	8012756 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012772 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012772:	b570      	push	{r4, r5, r6, lr}
 8012774:	8810      	ldrh	r0, [r2, #0]
 8012776:	4298      	cmp	r0, r3
 8012778:	d817      	bhi.n	80127aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801277a:	1e48      	subs	r0, r1, #1
 801277c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012780:	4298      	cmp	r0, r3
 8012782:	d312      	bcc.n	80127aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012784:	2400      	movs	r4, #0
 8012786:	428c      	cmp	r4, r1
 8012788:	d20f      	bcs.n	80127aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801278a:	1860      	adds	r0, r4, r1
 801278c:	1040      	asrs	r0, r0, #1
 801278e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012792:	0085      	lsls	r5, r0, #2
 8012794:	42b3      	cmp	r3, r6
 8012796:	d902      	bls.n	801279e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012798:	3001      	adds	r0, #1
 801279a:	b284      	uxth	r4, r0
 801279c:	e7f3      	b.n	8012786 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801279e:	d201      	bcs.n	80127a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80127a0:	b281      	uxth	r1, r0
 80127a2:	e7f0      	b.n	8012786 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80127a4:	442a      	add	r2, r5
 80127a6:	8850      	ldrh	r0, [r2, #2]
 80127a8:	bd70      	pop	{r4, r5, r6, pc}
 80127aa:	2000      	movs	r0, #0
 80127ac:	e7fc      	b.n	80127a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080127ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80127ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127b2:	4604      	mov	r4, r0
 80127b4:	260b      	movs	r6, #11
 80127b6:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80127b8:	886f      	ldrh	r7, [r5, #2]
 80127ba:	087f      	lsrs	r7, r7, #1
 80127bc:	3e01      	subs	r6, #1
 80127be:	d013      	beq.n	80127e8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80127c0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80127c2:	462a      	mov	r2, r5
 80127c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80127c8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80127cc:	4639      	mov	r1, r7
 80127ce:	4643      	mov	r3, r8
 80127d0:	4620      	mov	r0, r4
 80127d2:	f7ff ffce 	bl	8012772 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80127d6:	b138      	cbz	r0, 80127e8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80127d8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80127dc:	4642      	mov	r2, r8
 80127de:	4620      	mov	r0, r4
 80127e0:	f7ff ff93 	bl	801270a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80127e4:	2800      	cmp	r0, #0
 80127e6:	d1e9      	bne.n	80127bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80127e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080127ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80127ec:	b570      	push	{r4, r5, r6, lr}
 80127ee:	694a      	ldr	r2, [r1, #20]
 80127f0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80127f2:	684b      	ldr	r3, [r1, #4]
 80127f4:	1b54      	subs	r4, r2, r5
 80127f6:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80127f8:	f000 8107 	beq.w	8012a0a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21e>
 80127fc:	1b9b      	subs	r3, r3, r6
 80127fe:	d003      	beq.n	8012808 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012800:	2210      	movs	r2, #16
 8012802:	4363      	muls	r3, r4
 8012804:	fb93 f3f2 	sdiv	r3, r3, r2
 8012808:	680c      	ldr	r4, [r1, #0]
 801280a:	698a      	ldr	r2, [r1, #24]
 801280c:	1b65      	subs	r5, r4, r5
 801280e:	f000 80fe 	beq.w	8012a0e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x222>
 8012812:	1b92      	subs	r2, r2, r6
 8012814:	d003      	beq.n	801281e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012816:	2410      	movs	r4, #16
 8012818:	436a      	muls	r2, r5
 801281a:	fb92 f2f4 	sdiv	r2, r2, r4
 801281e:	1a9b      	subs	r3, r3, r2
 8012820:	ee07 3a90 	vmov	s15, r3
 8012824:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8012a4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x260>
 8012828:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801282c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012830:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012834:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012838:	460a      	mov	r2, r1
 801283a:	eeb1 6a43 	vneg.f32	s12, s6
 801283e:	4603      	mov	r3, r0
 8012840:	f100 040c 	add.w	r4, r0, #12
 8012844:	edd2 7a02 	vldr	s15, [r2, #8]
 8012848:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801284c:	ece3 6a01 	vstmia	r3!, {s13}
 8012850:	edd2 7a03 	vldr	s15, [r2, #12]
 8012854:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012858:	edc3 7a02 	vstr	s15, [r3, #8]
 801285c:	edd2 7a04 	vldr	s15, [r2, #16]
 8012860:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012864:	429c      	cmp	r4, r3
 8012866:	edc3 7a05 	vstr	s15, [r3, #20]
 801286a:	f102 0214 	add.w	r2, r2, #20
 801286e:	d1e9      	bne.n	8012844 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012870:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012872:	698b      	ldr	r3, [r1, #24]
 8012874:	edd0 4a02 	vldr	s9, [r0, #8]
 8012878:	1a9b      	subs	r3, r3, r2
 801287a:	ee07 3a90 	vmov	s15, r3
 801287e:	684b      	ldr	r3, [r1, #4]
 8012880:	edd0 3a00 	vldr	s7, [r0]
 8012884:	1a9b      	subs	r3, r3, r2
 8012886:	edd0 6a01 	vldr	s13, [r0, #4]
 801288a:	ee07 3a10 	vmov	s14, r3
 801288e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012892:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012896:	ee67 7a84 	vmul.f32	s15, s15, s8
 801289a:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801289e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80128a2:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80128a6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80128aa:	eee6 7a87 	vfma.f32	s15, s13, s14
 80128ae:	ee67 7a83 	vmul.f32	s15, s15, s6
 80128b2:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80128b6:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80128b8:	694a      	ldr	r2, [r1, #20]
 80128ba:	ed90 5a05 	vldr	s10, [r0, #20]
 80128be:	1b13      	subs	r3, r2, r4
 80128c0:	ee07 3a10 	vmov	s14, r3
 80128c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80128c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80128cc:	680b      	ldr	r3, [r1, #0]
 80128ce:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80128d2:	1b1b      	subs	r3, r3, r4
 80128d4:	ee07 3a10 	vmov	s14, r3
 80128d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80128dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80128e0:	eee6 4a87 	vfma.f32	s9, s13, s14
 80128e4:	ee64 4a86 	vmul.f32	s9, s9, s12
 80128e8:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80128ec:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80128ee:	698b      	ldr	r3, [r1, #24]
 80128f0:	ed90 2a03 	vldr	s4, [r0, #12]
 80128f4:	1a9b      	subs	r3, r3, r2
 80128f6:	ee06 3a90 	vmov	s13, r3
 80128fa:	684b      	ldr	r3, [r1, #4]
 80128fc:	edd0 5a04 	vldr	s11, [r0, #16]
 8012900:	1a9b      	subs	r3, r3, r2
 8012902:	ee07 3a10 	vmov	s14, r3
 8012906:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801290a:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801290e:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012912:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012916:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801291a:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801291e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012922:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012926:	ee66 6a83 	vmul.f32	s13, s13, s6
 801292a:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801292e:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012930:	694a      	ldr	r2, [r1, #20]
 8012932:	ed90 1a07 	vldr	s2, [r0, #28]
 8012936:	1b13      	subs	r3, r2, r4
 8012938:	ee07 3a10 	vmov	s14, r3
 801293c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012940:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012944:	680b      	ldr	r3, [r1, #0]
 8012946:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801294a:	1b1b      	subs	r3, r3, r4
 801294c:	ee07 3a10 	vmov	s14, r3
 8012950:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012954:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012958:	eea5 5a87 	vfma.f32	s10, s11, s14
 801295c:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012960:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012964:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012966:	698b      	ldr	r3, [r1, #24]
 8012968:	edd0 5a08 	vldr	s11, [r0, #32]
 801296c:	1a9b      	subs	r3, r3, r2
 801296e:	ee07 3a10 	vmov	s14, r3
 8012972:	684b      	ldr	r3, [r1, #4]
 8012974:	edd0 2a06 	vldr	s5, [r0, #24]
 8012978:	1a9b      	subs	r3, r3, r2
 801297a:	ee01 3a90 	vmov	s3, r3
 801297e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012982:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012986:	ee27 7a04 	vmul.f32	s14, s14, s8
 801298a:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801298e:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012992:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012996:	ee61 1a84 	vmul.f32	s3, s3, s8
 801299a:	eea1 7a21 	vfma.f32	s14, s2, s3
 801299e:	ee27 7a03 	vmul.f32	s14, s14, s6
 80129a2:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80129a6:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80129a8:	694a      	ldr	r2, [r1, #20]
 80129aa:	1b13      	subs	r3, r2, r4
 80129ac:	ee03 3a10 	vmov	s6, r3
 80129b0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80129b4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80129b8:	680b      	ldr	r3, [r1, #0]
 80129ba:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80129be:	1b1b      	subs	r3, r3, r4
 80129c0:	ee03 3a10 	vmov	s6, r3
 80129c4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80129c8:	ee23 4a04 	vmul.f32	s8, s6, s8
 80129cc:	eee1 5a04 	vfma.f32	s11, s2, s8
 80129d0:	ee25 6a86 	vmul.f32	s12, s11, s12
 80129d4:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80129d8:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80129dc:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80129e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129e4:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80129e8:	dd13      	ble.n	8012a12 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80129ea:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80129ee:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80129f2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80129f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80129fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129fe:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012a00:	dd15      	ble.n	8012a2e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012a02:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012a06:	6403      	str	r3, [r0, #64]	@ 0x40
 8012a08:	bd70      	pop	{r4, r5, r6, pc}
 8012a0a:	4623      	mov	r3, r4
 8012a0c:	e6fc      	b.n	8012808 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012a0e:	462a      	mov	r2, r5
 8012a10:	e705      	b.n	801281e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012a12:	d502      	bpl.n	8012a1a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22e>
 8012a14:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012a18:	e7e9      	b.n	80129ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x202>
 8012a1a:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012a1e:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012a22:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012a26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a2a:	dade      	bge.n	80129ea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fe>
 8012a2c:	e7f2      	b.n	8012a14 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x228>
 8012a2e:	d502      	bpl.n	8012a36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x24a>
 8012a30:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012a34:	e7e7      	b.n	8012a06 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21a>
 8012a36:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012a3a:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012a3e:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a46:	dadc      	bge.n	8012a02 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x216>
 8012a48:	e7f2      	b.n	8012a30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x244>
 8012a4a:	bf00      	nop
 8012a4c:	3d800000 	.word	0x3d800000

08012a50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a54:	2714      	movs	r7, #20
 8012a56:	435f      	muls	r7, r3
 8012a58:	eb02 0c07 	add.w	ip, r2, r7
 8012a5c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012a60:	f115 0e0f 	adds.w	lr, r5, #15
 8012a64:	f100 80a2 	bmi.w	8012bac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012a68:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012a6c:	2614      	movs	r6, #20
 8012a6e:	9c08      	ldr	r4, [sp, #32]
 8012a70:	f8c0 e014 	str.w	lr, [r0, #20]
 8012a74:	4366      	muls	r6, r4
 8012a76:	eb02 0806 	add.w	r8, r2, r6
 8012a7a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012a7e:	f115 040f 	adds.w	r4, r5, #15
 8012a82:	f100 809f 	bmi.w	8012bc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012a86:	1124      	asrs	r4, r4, #4
 8012a88:	eba4 040e 	sub.w	r4, r4, lr
 8012a8c:	6184      	str	r4, [r0, #24]
 8012a8e:	2c00      	cmp	r4, #0
 8012a90:	f000 808a 	beq.w	8012ba8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012a94:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012a98:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012a9c:	5995      	ldr	r5, [r2, r6]
 8012a9e:	eba4 0809 	sub.w	r8, r4, r9
 8012aa2:	59d4      	ldr	r4, [r2, r7]
 8012aa4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012aa8:	eba5 0a04 	sub.w	sl, r5, r4
 8012aac:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012ab0:	fb0e fe05 	mul.w	lr, lr, r5
 8012ab4:	fb0a ee19 	mls	lr, sl, r9, lr
 8012ab8:	fb08 e404 	mla	r4, r8, r4, lr
 8012abc:	3c01      	subs	r4, #1
 8012abe:	19a4      	adds	r4, r4, r6
 8012ac0:	f100 808c 	bmi.w	8012bdc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012ac4:	fb94 fef6 	sdiv	lr, r4, r6
 8012ac8:	fb06 441e 	mls	r4, r6, lr, r4
 8012acc:	f8c0 e000 	str.w	lr, [r0]
 8012ad0:	6104      	str	r4, [r0, #16]
 8012ad2:	2d00      	cmp	r5, #0
 8012ad4:	f2c0 8095 	blt.w	8012c02 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012ad8:	fb95 f4f6 	sdiv	r4, r5, r6
 8012adc:	fb06 5514 	mls	r5, r6, r4, r5
 8012ae0:	6044      	str	r4, [r0, #4]
 8012ae2:	6085      	str	r5, [r0, #8]
 8012ae4:	60c6      	str	r6, [r0, #12]
 8012ae6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012aea:	6945      	ldr	r5, [r0, #20]
 8012aec:	59d2      	ldr	r2, [r2, r7]
 8012aee:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012af2:	ee07 4a10 	vmov	s14, r4
 8012af6:	6804      	ldr	r4, [r0, #0]
 8012af8:	eddf 6a4a 	vldr	s13, [pc, #296]	@ 8012c24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012afc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012b00:	ee07 2a90 	vmov	s15, r2
 8012b04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012b08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b0c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012b10:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012b14:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012b18:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012b1c:	edd3 6a00 	vldr	s13, [r3]
 8012b20:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012b24:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8012b28:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012b2c:	edc0 6a07 	vstr	s13, [r0, #28]
 8012b30:	edd0 6a01 	vldr	s13, [r0, #4]
 8012b34:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8012b38:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012b3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012b40:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012b44:	ed80 6a08 	vstr	s12, [r0, #32]
 8012b48:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8012b4a:	6242      	str	r2, [r0, #36]	@ 0x24
 8012b4c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012b50:	ed93 6a03 	vldr	s12, [r3, #12]
 8012b54:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012b58:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012b5c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012b60:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012b64:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012b68:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012b6c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012b70:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012b74:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012b76:	6302      	str	r2, [r0, #48]	@ 0x30
 8012b78:	ed93 6a06 	vldr	s12, [r3, #24]
 8012b7c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012b80:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012b84:	eeb0 7a46 	vmov.f32	s14, s12
 8012b88:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012b8c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012b90:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012b94:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012b98:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012b9c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012ba0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012ba4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8012ba6:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012ba8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012bac:	2410      	movs	r4, #16
 8012bae:	f1c5 0501 	rsb	r5, r5, #1
 8012bb2:	f015 050f 	ands.w	r5, r5, #15
 8012bb6:	fb9e fef4 	sdiv	lr, lr, r4
 8012bba:	bf18      	it	ne
 8012bbc:	2501      	movne	r5, #1
 8012bbe:	ebae 0e05 	sub.w	lr, lr, r5
 8012bc2:	e753      	b.n	8012a6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012bc4:	f04f 0910 	mov.w	r9, #16
 8012bc8:	f1c5 0501 	rsb	r5, r5, #1
 8012bcc:	f015 050f 	ands.w	r5, r5, #15
 8012bd0:	fb94 f4f9 	sdiv	r4, r4, r9
 8012bd4:	bf18      	it	ne
 8012bd6:	2501      	movne	r5, #1
 8012bd8:	1b64      	subs	r4, r4, r5
 8012bda:	e755      	b.n	8012a88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012bdc:	4264      	negs	r4, r4
 8012bde:	fb94 fef6 	sdiv	lr, r4, r6
 8012be2:	fb06 441e 	mls	r4, r6, lr, r4
 8012be6:	f1ce 0800 	rsb	r8, lr, #0
 8012bea:	f8c0 8000 	str.w	r8, [r0]
 8012bee:	6104      	str	r4, [r0, #16]
 8012bf0:	2c00      	cmp	r4, #0
 8012bf2:	f43f af6e 	beq.w	8012ad2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012bf6:	ea6f 0e0e 	mvn.w	lr, lr
 8012bfa:	1b34      	subs	r4, r6, r4
 8012bfc:	f8c0 e000 	str.w	lr, [r0]
 8012c00:	e766      	b.n	8012ad0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012c02:	426d      	negs	r5, r5
 8012c04:	fb95 f4f6 	sdiv	r4, r5, r6
 8012c08:	fb06 5514 	mls	r5, r6, r4, r5
 8012c0c:	f1c4 0e00 	rsb	lr, r4, #0
 8012c10:	f8c0 e004 	str.w	lr, [r0, #4]
 8012c14:	6085      	str	r5, [r0, #8]
 8012c16:	2d00      	cmp	r5, #0
 8012c18:	f43f af64 	beq.w	8012ae4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012c1c:	43e4      	mvns	r4, r4
 8012c1e:	1b75      	subs	r5, r6, r5
 8012c20:	6044      	str	r4, [r0, #4]
 8012c22:	e75e      	b.n	8012ae2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012c24:	3d800000 	.word	0x3d800000

08012c28 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012c28:	4602      	mov	r2, r0
 8012c2a:	b148      	cbz	r0, 8012c40 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012c2c:	2300      	movs	r3, #0
 8012c2e:	b298      	uxth	r0, r3
 8012c30:	3301      	adds	r3, #1
 8012c32:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012c36:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012c3a:	2900      	cmp	r1, #0
 8012c3c:	d1f7      	bne.n	8012c2e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012c3e:	4770      	bx	lr
 8012c40:	4770      	bx	lr

08012c42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012c42:	b530      	push	{r4, r5, lr}
 8012c44:	4604      	mov	r4, r0
 8012c46:	b159      	cbz	r1, 8012c60 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012c48:	b148      	cbz	r0, 8012c5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012c4a:	2300      	movs	r3, #0
 8012c4c:	b298      	uxth	r0, r3
 8012c4e:	4282      	cmp	r2, r0
 8012c50:	d905      	bls.n	8012c5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012c52:	5ccd      	ldrb	r5, [r1, r3]
 8012c54:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012c58:	3301      	adds	r3, #1
 8012c5a:	2d00      	cmp	r5, #0
 8012c5c:	d1f6      	bne.n	8012c4c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012c5e:	bd30      	pop	{r4, r5, pc}
 8012c60:	4608      	mov	r0, r1
 8012c62:	e7fc      	b.n	8012c5e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012c64 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8012c64:	468c      	mov	ip, r1
 8012c66:	2100      	movs	r1, #0
 8012c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c6a:	4604      	mov	r4, r0
 8012c6c:	261f      	movs	r6, #31
 8012c6e:	b08b      	sub	sp, #44	@ 0x2c
 8012c70:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8012c74:	af01      	add	r7, sp, #4
 8012c76:	fb94 fef3 	sdiv	lr, r4, r3
 8012c7a:	fb03 441e 	mls	r4, r3, lr, r4
 8012c7e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012c82:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8012c86:	b2ec      	uxtb	r4, r5
 8012c88:	2d09      	cmp	r5, #9
 8012c8a:	bfd4      	ite	le
 8012c8c:	3430      	addle	r4, #48	@ 0x30
 8012c8e:	3457      	addgt	r4, #87	@ 0x57
 8012c90:	b2e4      	uxtb	r4, r4
 8012c92:	55bc      	strb	r4, [r7, r6]
 8012c94:	4674      	mov	r4, lr
 8012c96:	1e71      	subs	r1, r6, #1
 8012c98:	b974      	cbnz	r4, 8012cb8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8012c9a:	2800      	cmp	r0, #0
 8012c9c:	da05      	bge.n	8012caa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8012c9e:	ab0a      	add	r3, sp, #40	@ 0x28
 8012ca0:	4419      	add	r1, r3
 8012ca2:	232d      	movs	r3, #45	@ 0x2d
 8012ca4:	f801 3c24 	strb.w	r3, [r1, #-36]
 8012ca8:	1eb1      	subs	r1, r6, #2
 8012caa:	3101      	adds	r1, #1
 8012cac:	4439      	add	r1, r7
 8012cae:	4660      	mov	r0, ip
 8012cb0:	f7ff ffc7 	bl	8012c42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012cb4:	b00b      	add	sp, #44	@ 0x2c
 8012cb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012cb8:	460e      	mov	r6, r1
 8012cba:	e7dc      	b.n	8012c76 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08012cbc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8012cbc:	468c      	mov	ip, r1
 8012cbe:	2100      	movs	r1, #0
 8012cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012cc2:	b08b      	sub	sp, #44	@ 0x2c
 8012cc4:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8012cc8:	211f      	movs	r1, #31
 8012cca:	ae01      	add	r6, sp, #4
 8012ccc:	fbb0 f7f3 	udiv	r7, r0, r3
 8012cd0:	fb03 0517 	mls	r5, r3, r7, r0
 8012cd4:	b2ec      	uxtb	r4, r5
 8012cd6:	2d09      	cmp	r5, #9
 8012cd8:	bfd4      	ite	le
 8012cda:	3430      	addle	r4, #48	@ 0x30
 8012cdc:	3457      	addgt	r4, #87	@ 0x57
 8012cde:	b2e4      	uxtb	r4, r4
 8012ce0:	558c      	strb	r4, [r1, r6]
 8012ce2:	4638      	mov	r0, r7
 8012ce4:	1e4c      	subs	r4, r1, #1
 8012ce6:	b92f      	cbnz	r7, 8012cf4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8012ce8:	4431      	add	r1, r6
 8012cea:	4660      	mov	r0, ip
 8012cec:	f7ff ffa9 	bl	8012c42 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8012cf0:	b00b      	add	sp, #44	@ 0x2c
 8012cf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012cf4:	4621      	mov	r1, r4
 8012cf6:	e7e9      	b.n	8012ccc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08012cf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8012cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cfc:	4691      	mov	r9, r2
 8012cfe:	b085      	sub	sp, #20
 8012d00:	6802      	ldr	r2, [r0, #0]
 8012d02:	4688      	mov	r8, r1
 8012d04:	461c      	mov	r4, r3
 8012d06:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8012d0a:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8012d0e:	4683      	mov	fp, r0
 8012d10:	4610      	mov	r0, r2
 8012d12:	9103      	str	r1, [sp, #12]
 8012d14:	9302      	str	r3, [sp, #8]
 8012d16:	9201      	str	r2, [sp, #4]
 8012d18:	f7ff ff86 	bl	8012c28 <_ZN8touchgfx7Unicode6strlenEPKt>
 8012d1c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8012d20:	f1b8 0f00 	cmp.w	r8, #0
 8012d24:	bf0c      	ite	eq
 8012d26:	4684      	moveq	ip, r0
 8012d28:	f100 0c01 	addne.w	ip, r0, #1
 8012d2c:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8012d30:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8012d34:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8012d36:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012d38:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8012d3c:	fa1f fc8c 	uxth.w	ip, ip
 8012d40:	9903      	ldr	r1, [sp, #12]
 8012d42:	d041      	beq.n	8012dc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012d44:	d834      	bhi.n	8012db0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8012d46:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8012d4a:	d059      	beq.n	8012e00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8012d4c:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8012d50:	d03a      	beq.n	8012dc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012d52:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8012d56:	d034      	beq.n	8012dc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012d58:	2400      	movs	r4, #0
 8012d5a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8012d5e:	3a01      	subs	r2, #1
 8012d60:	b169      	cbz	r1, 8012d7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012d62:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8012d64:	458c      	cmp	ip, r1
 8012d66:	da09      	bge.n	8012d7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012d68:	eba1 010c 	sub.w	r1, r1, ip
 8012d6c:	b289      	uxth	r1, r1
 8012d6e:	b933      	cbnz	r3, 8012d7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012d70:	2e00      	cmp	r6, #0
 8012d72:	d051      	beq.n	8012e18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012d74:	2800      	cmp	r0, #0
 8012d76:	d04f      	beq.n	8012e18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012d78:	440c      	add	r4, r1
 8012d7a:	b2a4      	uxth	r4, r4
 8012d7c:	2100      	movs	r1, #0
 8012d7e:	682b      	ldr	r3, [r5, #0]
 8012d80:	4293      	cmp	r3, r2
 8012d82:	da07      	bge.n	8012d94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012d84:	f1b8 0f00 	cmp.w	r8, #0
 8012d88:	d004      	beq.n	8012d94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012d8a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8012d8e:	682b      	ldr	r3, [r5, #0]
 8012d90:	3301      	adds	r3, #1
 8012d92:	602b      	str	r3, [r5, #0]
 8012d94:	2730      	movs	r7, #48	@ 0x30
 8012d96:	2c00      	cmp	r4, #0
 8012d98:	d04e      	beq.n	8012e38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012d9a:	682e      	ldr	r6, [r5, #0]
 8012d9c:	3c01      	subs	r4, #1
 8012d9e:	42b2      	cmp	r2, r6
 8012da0:	b2a4      	uxth	r4, r4
 8012da2:	dd49      	ble.n	8012e38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012da4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012da8:	682b      	ldr	r3, [r5, #0]
 8012daa:	3301      	adds	r3, #1
 8012dac:	602b      	str	r3, [r5, #0]
 8012dae:	e7f2      	b.n	8012d96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8012db0:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8012db4:	d01d      	beq.n	8012df2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8012db6:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8012dba:	d002      	beq.n	8012dc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012dbc:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8012dc0:	e7c9      	b.n	8012d56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8012dc2:	4684      	mov	ip, r0
 8012dc4:	f04f 0800 	mov.w	r8, #0
 8012dc8:	2c00      	cmp	r4, #0
 8012dca:	d0c6      	beq.n	8012d5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012dcc:	b947      	cbnz	r7, 8012de0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012dce:	2801      	cmp	r0, #1
 8012dd0:	d106      	bne.n	8012de0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8012dd2:	8814      	ldrh	r4, [r2, #0]
 8012dd4:	2c30      	cmp	r4, #48	@ 0x30
 8012dd6:	bf02      	ittt	eq
 8012dd8:	4638      	moveq	r0, r7
 8012dda:	3202      	addeq	r2, #2
 8012ddc:	f8cb 2000 	streq.w	r2, [fp]
 8012de0:	45bc      	cmp	ip, r7
 8012de2:	da14      	bge.n	8012e0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8012de4:	b2bf      	uxth	r7, r7
 8012de6:	eba7 040c 	sub.w	r4, r7, ip
 8012dea:	46bc      	mov	ip, r7
 8012dec:	b2a4      	uxth	r4, r4
 8012dee:	2600      	movs	r6, #0
 8012df0:	e7b3      	b.n	8012d5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012df2:	4684      	mov	ip, r0
 8012df4:	b16c      	cbz	r4, 8012e12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8012df6:	42b8      	cmp	r0, r7
 8012df8:	dd00      	ble.n	8012dfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8012dfa:	b2b8      	uxth	r0, r7
 8012dfc:	2400      	movs	r4, #0
 8012dfe:	e003      	b.n	8012e08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8012e00:	f04f 0c01 	mov.w	ip, #1
 8012e04:	2400      	movs	r4, #0
 8012e06:	4660      	mov	r0, ip
 8012e08:	4626      	mov	r6, r4
 8012e0a:	46a0      	mov	r8, r4
 8012e0c:	e7a5      	b.n	8012d5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012e0e:	2400      	movs	r4, #0
 8012e10:	e7ed      	b.n	8012dee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8012e12:	4626      	mov	r6, r4
 8012e14:	46a0      	mov	r8, r4
 8012e16:	e7a0      	b.n	8012d5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012e18:	2900      	cmp	r1, #0
 8012e1a:	d0b0      	beq.n	8012d7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012e1c:	2720      	movs	r7, #32
 8012e1e:	682e      	ldr	r6, [r5, #0]
 8012e20:	2900      	cmp	r1, #0
 8012e22:	d0ac      	beq.n	8012d7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012e24:	3901      	subs	r1, #1
 8012e26:	4296      	cmp	r6, r2
 8012e28:	b289      	uxth	r1, r1
 8012e2a:	daa7      	bge.n	8012d7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012e2c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012e30:	682b      	ldr	r3, [r5, #0]
 8012e32:	3301      	adds	r3, #1
 8012e34:	602b      	str	r3, [r5, #0]
 8012e36:	e7f2      	b.n	8012e1e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8012e38:	b188      	cbz	r0, 8012e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012e3a:	682b      	ldr	r3, [r5, #0]
 8012e3c:	3801      	subs	r0, #1
 8012e3e:	429a      	cmp	r2, r3
 8012e40:	b280      	uxth	r0, r0
 8012e42:	dd0c      	ble.n	8012e5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012e44:	f8db 3000 	ldr.w	r3, [fp]
 8012e48:	1c9c      	adds	r4, r3, #2
 8012e4a:	f8cb 4000 	str.w	r4, [fp]
 8012e4e:	881c      	ldrh	r4, [r3, #0]
 8012e50:	682b      	ldr	r3, [r5, #0]
 8012e52:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8012e56:	682b      	ldr	r3, [r5, #0]
 8012e58:	3301      	adds	r3, #1
 8012e5a:	602b      	str	r3, [r5, #0]
 8012e5c:	e7ec      	b.n	8012e38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8012e5e:	2620      	movs	r6, #32
 8012e60:	b151      	cbz	r1, 8012e78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012e62:	6828      	ldr	r0, [r5, #0]
 8012e64:	3901      	subs	r1, #1
 8012e66:	4282      	cmp	r2, r0
 8012e68:	b289      	uxth	r1, r1
 8012e6a:	dd05      	ble.n	8012e78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012e6c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012e70:	682b      	ldr	r3, [r5, #0]
 8012e72:	3301      	adds	r3, #1
 8012e74:	602b      	str	r3, [r5, #0]
 8012e76:	e7f3      	b.n	8012e60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012e78:	b005      	add	sp, #20
 8012e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012e7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8012e7e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012e82:	2400      	movs	r4, #0
 8012e84:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8012e88:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8012e8c:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8012e90:	8014      	strh	r4, [r2, #0]
 8012e92:	701c      	strb	r4, [r3, #0]
 8012e94:	f888 4000 	strb.w	r4, [r8]
 8012e98:	f88c 4000 	strb.w	r4, [ip]
 8012e9c:	f88e 4000 	strb.w	r4, [lr]
 8012ea0:	703c      	strb	r4, [r7, #0]
 8012ea2:	6804      	ldr	r4, [r0, #0]
 8012ea4:	b1a4      	cbz	r4, 8012ed0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8012ea6:	8824      	ldrh	r4, [r4, #0]
 8012ea8:	f04f 0901 	mov.w	r9, #1
 8012eac:	b314      	cbz	r4, 8012ef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012eae:	2c2b      	cmp	r4, #43	@ 0x2b
 8012eb0:	d001      	beq.n	8012eb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8012eb2:	2c20      	cmp	r4, #32
 8012eb4:	d110      	bne.n	8012ed8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8012eb6:	8014      	strh	r4, [r2, #0]
 8012eb8:	6804      	ldr	r4, [r0, #0]
 8012eba:	b10c      	cbz	r4, 8012ec0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8012ebc:	3402      	adds	r4, #2
 8012ebe:	6004      	str	r4, [r0, #0]
 8012ec0:	680c      	ldr	r4, [r1, #0]
 8012ec2:	b10c      	cbz	r4, 8012ec8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8012ec4:	3401      	adds	r4, #1
 8012ec6:	600c      	str	r4, [r1, #0]
 8012ec8:	6804      	ldr	r4, [r0, #0]
 8012eca:	b17c      	cbz	r4, 8012eec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8012ecc:	8824      	ldrh	r4, [r4, #0]
 8012ece:	e7ed      	b.n	8012eac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012ed0:	680c      	ldr	r4, [r1, #0]
 8012ed2:	b17c      	cbz	r4, 8012ef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012ed4:	7824      	ldrb	r4, [r4, #0]
 8012ed6:	e7e7      	b.n	8012ea8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8012ed8:	2c2d      	cmp	r4, #45	@ 0x2d
 8012eda:	d102      	bne.n	8012ee2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8012edc:	f883 9000 	strb.w	r9, [r3]
 8012ee0:	e7ea      	b.n	8012eb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012ee2:	2c23      	cmp	r4, #35	@ 0x23
 8012ee4:	d107      	bne.n	8012ef6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8012ee6:	f888 9000 	strb.w	r9, [r8]
 8012eea:	e7e5      	b.n	8012eb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8012eec:	680c      	ldr	r4, [r1, #0]
 8012eee:	b10c      	cbz	r4, 8012ef4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8012ef0:	7824      	ldrb	r4, [r4, #0]
 8012ef2:	e7db      	b.n	8012eac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8012ef4:	2400      	movs	r4, #0
 8012ef6:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8012efa:	2b09      	cmp	r3, #9
 8012efc:	d901      	bls.n	8012f02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8012efe:	2c2a      	cmp	r4, #42	@ 0x2a
 8012f00:	d122      	bne.n	8012f48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012f02:	2301      	movs	r3, #1
 8012f04:	2c30      	cmp	r4, #48	@ 0x30
 8012f06:	f88e 3000 	strb.w	r3, [lr]
 8012f0a:	d10d      	bne.n	8012f28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012f0c:	f88c 3000 	strb.w	r3, [ip]
 8012f10:	6803      	ldr	r3, [r0, #0]
 8012f12:	b10b      	cbz	r3, 8012f18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012f14:	3302      	adds	r3, #2
 8012f16:	6003      	str	r3, [r0, #0]
 8012f18:	680b      	ldr	r3, [r1, #0]
 8012f1a:	b10b      	cbz	r3, 8012f20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8012f1c:	3301      	adds	r3, #1
 8012f1e:	600b      	str	r3, [r1, #0]
 8012f20:	6803      	ldr	r3, [r0, #0]
 8012f22:	2b00      	cmp	r3, #0
 8012f24:	d02f      	beq.n	8012f86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8012f26:	881c      	ldrh	r4, [r3, #0]
 8012f28:	2c2a      	cmp	r4, #42	@ 0x2a
 8012f2a:	d135      	bne.n	8012f98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012f2c:	f04f 33ff 	mov.w	r3, #4294967295
 8012f30:	6033      	str	r3, [r6, #0]
 8012f32:	6803      	ldr	r3, [r0, #0]
 8012f34:	b10b      	cbz	r3, 8012f3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012f36:	3302      	adds	r3, #2
 8012f38:	6003      	str	r3, [r0, #0]
 8012f3a:	680b      	ldr	r3, [r1, #0]
 8012f3c:	b10b      	cbz	r3, 8012f42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8012f3e:	3301      	adds	r3, #1
 8012f40:	600b      	str	r3, [r1, #0]
 8012f42:	6803      	ldr	r3, [r0, #0]
 8012f44:	b31b      	cbz	r3, 8012f8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012f46:	881c      	ldrh	r4, [r3, #0]
 8012f48:	2c2e      	cmp	r4, #46	@ 0x2e
 8012f4a:	d11a      	bne.n	8012f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012f4c:	2301      	movs	r3, #1
 8012f4e:	703b      	strb	r3, [r7, #0]
 8012f50:	6803      	ldr	r3, [r0, #0]
 8012f52:	b10b      	cbz	r3, 8012f58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012f54:	3302      	adds	r3, #2
 8012f56:	6003      	str	r3, [r0, #0]
 8012f58:	680b      	ldr	r3, [r1, #0]
 8012f5a:	b10b      	cbz	r3, 8012f60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8012f5c:	3301      	adds	r3, #1
 8012f5e:	600b      	str	r3, [r1, #0]
 8012f60:	6803      	ldr	r3, [r0, #0]
 8012f62:	2b00      	cmp	r3, #0
 8012f64:	d036      	beq.n	8012fd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012f66:	881b      	ldrh	r3, [r3, #0]
 8012f68:	2b2a      	cmp	r3, #42	@ 0x2a
 8012f6a:	d137      	bne.n	8012fdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012f6c:	f04f 33ff 	mov.w	r3, #4294967295
 8012f70:	602b      	str	r3, [r5, #0]
 8012f72:	6803      	ldr	r3, [r0, #0]
 8012f74:	b10b      	cbz	r3, 8012f7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012f76:	3302      	adds	r3, #2
 8012f78:	6003      	str	r3, [r0, #0]
 8012f7a:	680b      	ldr	r3, [r1, #0]
 8012f7c:	b10b      	cbz	r3, 8012f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012f7e:	3301      	adds	r3, #1
 8012f80:	600b      	str	r3, [r1, #0]
 8012f82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f86:	680c      	ldr	r4, [r1, #0]
 8012f88:	b134      	cbz	r4, 8012f98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8012f8a:	7824      	ldrb	r4, [r4, #0]
 8012f8c:	e7cc      	b.n	8012f28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8012f8e:	680b      	ldr	r3, [r1, #0]
 8012f90:	2b00      	cmp	r3, #0
 8012f92:	d0f6      	beq.n	8012f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012f94:	781c      	ldrb	r4, [r3, #0]
 8012f96:	e7d7      	b.n	8012f48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012f98:	2300      	movs	r3, #0
 8012f9a:	220a      	movs	r2, #10
 8012f9c:	6033      	str	r3, [r6, #0]
 8012f9e:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8012fa2:	fa1f f38c 	uxth.w	r3, ip
 8012fa6:	2b09      	cmp	r3, #9
 8012fa8:	d8ce      	bhi.n	8012f48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012faa:	6833      	ldr	r3, [r6, #0]
 8012fac:	fb02 c303 	mla	r3, r2, r3, ip
 8012fb0:	6033      	str	r3, [r6, #0]
 8012fb2:	6803      	ldr	r3, [r0, #0]
 8012fb4:	b10b      	cbz	r3, 8012fba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8012fb6:	3302      	adds	r3, #2
 8012fb8:	6003      	str	r3, [r0, #0]
 8012fba:	680b      	ldr	r3, [r1, #0]
 8012fbc:	b10b      	cbz	r3, 8012fc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8012fbe:	3301      	adds	r3, #1
 8012fc0:	600b      	str	r3, [r1, #0]
 8012fc2:	6803      	ldr	r3, [r0, #0]
 8012fc4:	b10b      	cbz	r3, 8012fca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8012fc6:	881c      	ldrh	r4, [r3, #0]
 8012fc8:	e7e9      	b.n	8012f9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012fca:	680c      	ldr	r4, [r1, #0]
 8012fcc:	2c00      	cmp	r4, #0
 8012fce:	d0e6      	beq.n	8012f9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012fd0:	7824      	ldrb	r4, [r4, #0]
 8012fd2:	e7e4      	b.n	8012f9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8012fd4:	680b      	ldr	r3, [r1, #0]
 8012fd6:	b10b      	cbz	r3, 8012fdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8012fd8:	781b      	ldrb	r3, [r3, #0]
 8012fda:	e7c5      	b.n	8012f68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8012fdc:	2200      	movs	r2, #0
 8012fde:	240a      	movs	r4, #10
 8012fe0:	602a      	str	r2, [r5, #0]
 8012fe2:	3b30      	subs	r3, #48	@ 0x30
 8012fe4:	b29e      	uxth	r6, r3
 8012fe6:	2e09      	cmp	r6, #9
 8012fe8:	682a      	ldr	r2, [r5, #0]
 8012fea:	d813      	bhi.n	8013014 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8012fec:	fb04 3302 	mla	r3, r4, r2, r3
 8012ff0:	602b      	str	r3, [r5, #0]
 8012ff2:	6803      	ldr	r3, [r0, #0]
 8012ff4:	b10b      	cbz	r3, 8012ffa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8012ff6:	3302      	adds	r3, #2
 8012ff8:	6003      	str	r3, [r0, #0]
 8012ffa:	680b      	ldr	r3, [r1, #0]
 8012ffc:	b10b      	cbz	r3, 8013002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8012ffe:	3301      	adds	r3, #1
 8013000:	600b      	str	r3, [r1, #0]
 8013002:	6803      	ldr	r3, [r0, #0]
 8013004:	b10b      	cbz	r3, 801300a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013006:	881b      	ldrh	r3, [r3, #0]
 8013008:	e7eb      	b.n	8012fe2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801300a:	680b      	ldr	r3, [r1, #0]
 801300c:	2b00      	cmp	r3, #0
 801300e:	d0e8      	beq.n	8012fe2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013010:	781b      	ldrb	r3, [r3, #0]
 8013012:	e7e6      	b.n	8012fe2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013014:	2a06      	cmp	r2, #6
 8013016:	bfa8      	it	ge
 8013018:	2206      	movge	r2, #6
 801301a:	602a      	str	r2, [r5, #0]
 801301c:	e7b1      	b.n	8012f82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801301e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801301e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013022:	2600      	movs	r6, #0
 8013024:	4607      	mov	r7, r0
 8013026:	b0a3      	sub	sp, #140	@ 0x8c
 8013028:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 801302c:	4688      	mov	r8, r1
 801302e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013032:	4631      	mov	r1, r6
 8013034:	2242      	movs	r2, #66	@ 0x42
 8013036:	4648      	mov	r0, r9
 8013038:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 801303a:	960d      	str	r6, [sp, #52]	@ 0x34
 801303c:	f00e ff55 	bl	8021eea <memset>
 8013040:	b15f      	cbz	r7, 801305a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013042:	f108 3aff 	add.w	sl, r8, #4294967295
 8013046:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013048:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801304a:	b152      	cbz	r2, 8013062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801304c:	8812      	ldrh	r2, [r2, #0]
 801304e:	b10a      	cbz	r2, 8013054 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013050:	459a      	cmp	sl, r3
 8013052:	dc2e      	bgt.n	80130b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013054:	2200      	movs	r2, #0
 8013056:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801305a:	4638      	mov	r0, r7
 801305c:	b023      	add	sp, #140	@ 0x8c
 801305e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013062:	9a08      	ldr	r2, [sp, #32]
 8013064:	2a00      	cmp	r2, #0
 8013066:	d0f5      	beq.n	8013054 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013068:	7812      	ldrb	r2, [r2, #0]
 801306a:	e7f0      	b.n	801304e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801306c:	2d00      	cmp	r5, #0
 801306e:	d0ea      	beq.n	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013070:	782a      	ldrb	r2, [r5, #0]
 8013072:	b142      	cbz	r2, 8013086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013074:	2a25      	cmp	r2, #37	@ 0x25
 8013076:	d001      	beq.n	801307c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013078:	459a      	cmp	sl, r3
 801307a:	dc08      	bgt.n	801308e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801307c:	f1bb 0f00 	cmp.w	fp, #0
 8013080:	d121      	bne.n	80130c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013082:	2d00      	cmp	r5, #0
 8013084:	d0df      	beq.n	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013086:	782a      	ldrb	r2, [r5, #0]
 8013088:	f04f 0b00 	mov.w	fp, #0
 801308c:	e01d      	b.n	80130ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801308e:	f1bb 0f00 	cmp.w	fp, #0
 8013092:	d076      	beq.n	8013182 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x164>
 8013094:	f8bb 2000 	ldrh.w	r2, [fp]
 8013098:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801309c:	f1bb 0f00 	cmp.w	fp, #0
 80130a0:	d002      	beq.n	80130a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80130a2:	f10b 0202 	add.w	r2, fp, #2
 80130a6:	9209      	str	r2, [sp, #36]	@ 0x24
 80130a8:	b10d      	cbz	r5, 80130ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80130aa:	3501      	adds	r5, #1
 80130ac:	9508      	str	r5, [sp, #32]
 80130ae:	3301      	adds	r3, #1
 80130b0:	930d      	str	r3, [sp, #52]	@ 0x34
 80130b2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80130b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80130b8:	f1bb 0f00 	cmp.w	fp, #0
 80130bc:	d0d6      	beq.n	801306c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80130be:	f8bb 2000 	ldrh.w	r2, [fp]
 80130c2:	2a00      	cmp	r2, #0
 80130c4:	d1d6      	bne.n	8013074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80130c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80130ca:	2a00      	cmp	r2, #0
 80130cc:	d0bb      	beq.n	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80130ce:	459a      	cmp	sl, r3
 80130d0:	ddb9      	ble.n	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80130d2:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 80130d6:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 80130da:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 80130de:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 80130e2:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 80130e6:	960e      	str	r6, [sp, #56]	@ 0x38
 80130e8:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80130ec:	960f      	str	r6, [sp, #60]	@ 0x3c
 80130ee:	f1bb 0f00 	cmp.w	fp, #0
 80130f2:	d002      	beq.n	80130fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80130f4:	f10b 0302 	add.w	r3, fp, #2
 80130f8:	9309      	str	r3, [sp, #36]	@ 0x24
 80130fa:	b10d      	cbz	r5, 8013100 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80130fc:	1c6b      	adds	r3, r5, #1
 80130fe:	9308      	str	r3, [sp, #32]
 8013100:	ab0f      	add	r3, sp, #60	@ 0x3c
 8013102:	9305      	str	r3, [sp, #20]
 8013104:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8013108:	9304      	str	r3, [sp, #16]
 801310a:	ab0e      	add	r3, sp, #56	@ 0x38
 801310c:	9303      	str	r3, [sp, #12]
 801310e:	ab0c      	add	r3, sp, #48	@ 0x30
 8013110:	9302      	str	r3, [sp, #8]
 8013112:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8013116:	9301      	str	r3, [sp, #4]
 8013118:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 801311c:	9300      	str	r3, [sp, #0]
 801311e:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8013122:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8013126:	a908      	add	r1, sp, #32
 8013128:	a809      	add	r0, sp, #36	@ 0x24
 801312a:	f7ff fea8 	bl	8012e7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801312e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013132:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013134:	2b00      	cmp	r3, #0
 8013136:	bfbf      	itttt	lt
 8013138:	6823      	ldrlt	r3, [r4, #0]
 801313a:	3404      	addlt	r4, #4
 801313c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013140:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8013142:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013144:	2b00      	cmp	r3, #0
 8013146:	bfbf      	itttt	lt
 8013148:	6823      	ldrlt	r3, [r4, #0]
 801314a:	3404      	addlt	r4, #4
 801314c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013150:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8013152:	b1d9      	cbz	r1, 801318c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013154:	880b      	ldrh	r3, [r1, #0]
 8013156:	2b69      	cmp	r3, #105	@ 0x69
 8013158:	d01f      	beq.n	801319a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 801315a:	d82f      	bhi.n	80131bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19e>
 801315c:	2b58      	cmp	r3, #88	@ 0x58
 801315e:	d01c      	beq.n	801319a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 8013160:	d818      	bhi.n	8013194 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x176>
 8013162:	2b25      	cmp	r3, #37	@ 0x25
 8013164:	d034      	beq.n	80131d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b2>
 8013166:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801316a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801316c:	f1bb 0f00 	cmp.w	fp, #0
 8013170:	f000 80b7 	beq.w	80132e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c4>
 8013174:	f8bb 5000 	ldrh.w	r5, [fp]
 8013178:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801317c:	3301      	adds	r3, #1
 801317e:	930d      	str	r3, [sp, #52]	@ 0x34
 8013180:	e029      	b.n	80131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b8>
 8013182:	b10d      	cbz	r5, 8013188 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16a>
 8013184:	782a      	ldrb	r2, [r5, #0]
 8013186:	e787      	b.n	8013098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013188:	462a      	mov	r2, r5
 801318a:	e785      	b.n	8013098 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801318c:	2a00      	cmp	r2, #0
 801318e:	d0ea      	beq.n	8013166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 8013190:	7813      	ldrb	r3, [r2, #0]
 8013192:	e7e0      	b.n	8013156 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x138>
 8013194:	3b63      	subs	r3, #99	@ 0x63
 8013196:	2b01      	cmp	r3, #1
 8013198:	d8e5      	bhi.n	8013166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 801319a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801319e:	b329      	cbz	r1, 80131ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ce>
 80131a0:	880b      	ldrh	r3, [r1, #0]
 80131a2:	2b69      	cmp	r3, #105	@ 0x69
 80131a4:	d063      	beq.n	801326e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80131a6:	d825      	bhi.n	80131f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d6>
 80131a8:	2b63      	cmp	r3, #99	@ 0x63
 80131aa:	d038      	beq.n	801321e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x200>
 80131ac:	2b64      	cmp	r3, #100	@ 0x64
 80131ae:	d05e      	beq.n	801326e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80131b0:	2b58      	cmp	r3, #88	@ 0x58
 80131b2:	d07a      	beq.n	80132aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28c>
 80131b4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 80131b8:	4625      	mov	r5, r4
 80131ba:	e036      	b.n	801322a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 80131bc:	2b73      	cmp	r3, #115	@ 0x73
 80131be:	d0ec      	beq.n	801319a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 80131c0:	d802      	bhi.n	80131c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80131c2:	2b6f      	cmp	r3, #111	@ 0x6f
 80131c4:	d1cf      	bne.n	8013166 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x148>
 80131c6:	e7e8      	b.n	801319a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 80131c8:	2b75      	cmp	r3, #117	@ 0x75
 80131ca:	d0e6      	beq.n	801319a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17c>
 80131cc:	2b78      	cmp	r3, #120	@ 0x78
 80131ce:	e7f9      	b.n	80131c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a6>
 80131d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80131d2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80131d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80131d8:	b10b      	cbz	r3, 80131de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c0>
 80131da:	3302      	adds	r3, #2
 80131dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80131de:	9b08      	ldr	r3, [sp, #32]
 80131e0:	2b00      	cmp	r3, #0
 80131e2:	f43f af30 	beq.w	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80131e6:	3301      	adds	r3, #1
 80131e8:	9308      	str	r3, [sp, #32]
 80131ea:	e72c      	b.n	8013046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80131ec:	2a00      	cmp	r2, #0
 80131ee:	d0e1      	beq.n	80131b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 80131f0:	7813      	ldrb	r3, [r2, #0]
 80131f2:	e7d6      	b.n	80131a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x184>
 80131f4:	2b73      	cmp	r3, #115	@ 0x73
 80131f6:	d036      	beq.n	8013266 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x248>
 80131f8:	d807      	bhi.n	801320a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ec>
 80131fa:	2b6f      	cmp	r3, #111	@ 0x6f
 80131fc:	d1da      	bne.n	80131b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 80131fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013200:	1d25      	adds	r5, r4, #4
 8013202:	eba8 0202 	sub.w	r2, r8, r2
 8013206:	2308      	movs	r3, #8
 8013208:	e049      	b.n	801329e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x280>
 801320a:	2b75      	cmp	r3, #117	@ 0x75
 801320c:	d042      	beq.n	8013294 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x276>
 801320e:	2b78      	cmp	r3, #120	@ 0x78
 8013210:	d1d0      	bne.n	80131b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x196>
 8013212:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013214:	1d25      	adds	r5, r4, #4
 8013216:	eba8 0202 	sub.w	r2, r8, r2
 801321a:	2310      	movs	r3, #16
 801321c:	e03f      	b.n	801329e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x280>
 801321e:	6823      	ldr	r3, [r4, #0]
 8013220:	1d25      	adds	r5, r4, #4
 8013222:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8013226:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801322a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801322c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8013230:	2b00      	cmp	r3, #0
 8013232:	d051      	beq.n	80132d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ba>
 8013234:	881a      	ldrh	r2, [r3, #0]
 8013236:	a80d      	add	r0, sp, #52	@ 0x34
 8013238:	9005      	str	r0, [sp, #20]
 801323a:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801323e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8013242:	9004      	str	r0, [sp, #16]
 8013244:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013246:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801324a:	9003      	str	r0, [sp, #12]
 801324c:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8013250:	462c      	mov	r4, r5
 8013252:	9002      	str	r0, [sp, #8]
 8013254:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8013256:	9001      	str	r0, [sp, #4]
 8013258:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801325c:	9000      	str	r0, [sp, #0]
 801325e:	a810      	add	r0, sp, #64	@ 0x40
 8013260:	f7ff fd4a 	bl	8012cf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013264:	e7b7      	b.n	80131d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b8>
 8013266:	6823      	ldr	r3, [r4, #0]
 8013268:	1d25      	adds	r5, r4, #4
 801326a:	9310      	str	r3, [sp, #64]	@ 0x40
 801326c:	e7dd      	b.n	801322a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 801326e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013270:	230a      	movs	r3, #10
 8013272:	eba8 0202 	sub.w	r2, r8, r2
 8013276:	b292      	uxth	r2, r2
 8013278:	4649      	mov	r1, r9
 801327a:	6820      	ldr	r0, [r4, #0]
 801327c:	f7ff fcf2 	bl	8012c64 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8013280:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013284:	1d25      	adds	r5, r4, #4
 8013286:	2b2d      	cmp	r3, #45	@ 0x2d
 8013288:	d1cf      	bne.n	801322a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 801328a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801328e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013290:	3302      	adds	r3, #2
 8013292:	e7ea      	b.n	801326a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013294:	230a      	movs	r3, #10
 8013296:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013298:	1d25      	adds	r5, r4, #4
 801329a:	eba8 0202 	sub.w	r2, r8, r2
 801329e:	b292      	uxth	r2, r2
 80132a0:	4649      	mov	r1, r9
 80132a2:	6820      	ldr	r0, [r4, #0]
 80132a4:	f7ff fd0a 	bl	8012cbc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80132a8:	e7bf      	b.n	801322a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 80132aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80132ac:	2310      	movs	r3, #16
 80132ae:	eba8 0202 	sub.w	r2, r8, r2
 80132b2:	b292      	uxth	r2, r2
 80132b4:	4649      	mov	r1, r9
 80132b6:	6820      	ldr	r0, [r4, #0]
 80132b8:	f7ff fd00 	bl	8012cbc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80132bc:	1d25      	adds	r5, r4, #4
 80132be:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 80132c2:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80132c6:	2b00      	cmp	r3, #0
 80132c8:	d0af      	beq.n	801322a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20c>
 80132ca:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 80132ce:	2919      	cmp	r1, #25
 80132d0:	d8f7      	bhi.n	80132c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a4>
 80132d2:	3b20      	subs	r3, #32
 80132d4:	8013      	strh	r3, [r2, #0]
 80132d6:	e7f4      	b.n	80132c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a4>
 80132d8:	9a08      	ldr	r2, [sp, #32]
 80132da:	2a00      	cmp	r2, #0
 80132dc:	d0ab      	beq.n	8013236 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x218>
 80132de:	7812      	ldrb	r2, [r2, #0]
 80132e0:	e7a9      	b.n	8013236 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x218>
 80132e2:	2d00      	cmp	r5, #0
 80132e4:	f43f af48 	beq.w	8013178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15a>
 80132e8:	782d      	ldrb	r5, [r5, #0]
 80132ea:	e745      	b.n	8013178 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15a>

080132ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80132ec:	b507      	push	{r0, r1, r2, lr}
 80132ee:	9300      	str	r3, [sp, #0]
 80132f0:	4613      	mov	r3, r2
 80132f2:	2200      	movs	r2, #0
 80132f4:	f7ff fe93 	bl	801301e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80132f8:	b003      	add	sp, #12
 80132fa:	f85d fb04 	ldr.w	pc, [sp], #4

080132fe <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80132fe:	b40c      	push	{r2, r3}
 8013300:	b507      	push	{r0, r1, r2, lr}
 8013302:	ab04      	add	r3, sp, #16
 8013304:	f853 2b04 	ldr.w	r2, [r3], #4
 8013308:	9301      	str	r3, [sp, #4]
 801330a:	f7ff ffef 	bl	80132ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801330e:	b003      	add	sp, #12
 8013310:	f85d eb04 	ldr.w	lr, [sp], #4
 8013314:	b002      	add	sp, #8
 8013316:	4770      	bx	lr

08013318 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013318:	4b01      	ldr	r3, [pc, #4]	@ (8013320 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801331a:	6018      	str	r0, [r3, #0]
 801331c:	4770      	bx	lr
 801331e:	bf00      	nop
 8013320:	20002290 	.word	0x20002290

08013324 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013324:	4b06      	ldr	r3, [pc, #24]	@ (8013340 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013326:	881a      	ldrh	r2, [r3, #0]
 8013328:	4282      	cmp	r2, r0
 801332a:	d807      	bhi.n	801333c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801332c:	4b05      	ldr	r3, [pc, #20]	@ (8013344 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801332e:	881b      	ldrh	r3, [r3, #0]
 8013330:	4413      	add	r3, r2
 8013332:	4298      	cmp	r0, r3
 8013334:	bfac      	ite	ge
 8013336:	2000      	movge	r0, #0
 8013338:	2001      	movlt	r0, #1
 801333a:	4770      	bx	lr
 801333c:	2000      	movs	r0, #0
 801333e:	4770      	bx	lr
 8013340:	200022b0 	.word	0x200022b0
 8013344:	200022b4 	.word	0x200022b4

08013348 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013348:	b508      	push	{r3, lr}
 801334a:	4601      	mov	r1, r0
 801334c:	f7ff ffea 	bl	8013324 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013350:	b118      	cbz	r0, 801335a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013352:	4b02      	ldr	r3, [pc, #8]	@ (801335c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013354:	681b      	ldr	r3, [r3, #0]
 8013356:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801335a:	bd08      	pop	{r3, pc}
 801335c:	20002294 	.word	0x20002294

08013360 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013362:	4c24      	ldr	r4, [pc, #144]	@ (80133f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013364:	6823      	ldr	r3, [r4, #0]
 8013366:	2b00      	cmp	r3, #0
 8013368:	d042      	beq.n	80133f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801336a:	4a23      	ldr	r2, [pc, #140]	@ (80133f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801336c:	4d23      	ldr	r5, [pc, #140]	@ (80133fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801336e:	8811      	ldrh	r1, [r2, #0]
 8013370:	f8b5 c000 	ldrh.w	ip, [r5]
 8013374:	4822      	ldr	r0, [pc, #136]	@ (8013400 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013376:	4461      	add	r1, ip
 8013378:	1c4a      	adds	r2, r1, #1
 801337a:	f022 0201 	bic.w	r2, r2, #1
 801337e:	008f      	lsls	r7, r1, #2
 8013380:	0412      	lsls	r2, r2, #16
 8013382:	19de      	adds	r6, r3, r7
 8013384:	0c12      	lsrs	r2, r2, #16
 8013386:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801338a:	6006      	str	r6, [r0, #0]
 801338c:	4e1d      	ldr	r6, [pc, #116]	@ (8013404 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801338e:	19da      	adds	r2, r3, r7
 8013390:	6032      	str	r2, [r6, #0]
 8013392:	220e      	movs	r2, #14
 8013394:	fb02 f20c 	mul.w	r2, r2, ip
 8013398:	3203      	adds	r2, #3
 801339a:	f022 0203 	bic.w	r2, r2, #3
 801339e:	443a      	add	r2, r7
 80133a0:	4f19      	ldr	r7, [pc, #100]	@ (8013408 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80133a2:	4413      	add	r3, r2
 80133a4:	603b      	str	r3, [r7, #0]
 80133a6:	2300      	movs	r3, #0
 80133a8:	4f18      	ldr	r7, [pc, #96]	@ (801340c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80133aa:	469c      	mov	ip, r3
 80133ac:	803b      	strh	r3, [r7, #0]
 80133ae:	4f18      	ldr	r7, [pc, #96]	@ (8013410 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80133b0:	683f      	ldr	r7, [r7, #0]
 80133b2:	1aba      	subs	r2, r7, r2
 80133b4:	4f17      	ldr	r7, [pc, #92]	@ (8013414 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80133b6:	603a      	str	r2, [r7, #0]
 80133b8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80133bc:	4a16      	ldr	r2, [pc, #88]	@ (8013418 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80133be:	8013      	strh	r3, [r2, #0]
 80133c0:	428b      	cmp	r3, r1
 80133c2:	d10d      	bne.n	80133e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80133c4:	2300      	movs	r3, #0
 80133c6:	240e      	movs	r4, #14
 80133c8:	882d      	ldrh	r5, [r5, #0]
 80133ca:	6830      	ldr	r0, [r6, #0]
 80133cc:	429d      	cmp	r5, r3
 80133ce:	d90f      	bls.n	80133f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80133d0:	fb04 0203 	mla	r2, r4, r3, r0
 80133d4:	7b11      	ldrb	r1, [r2, #12]
 80133d6:	3301      	adds	r3, #1
 80133d8:	f36f 1145 	bfc	r1, #5, #1
 80133dc:	7311      	strb	r1, [r2, #12]
 80133de:	e7f5      	b.n	80133cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80133e0:	6822      	ldr	r2, [r4, #0]
 80133e2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80133e6:	6802      	ldr	r2, [r0, #0]
 80133e8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80133ec:	3301      	adds	r3, #1
 80133ee:	e7e7      	b.n	80133c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80133f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80133f2:	bf00      	nop
 80133f4:	20002294 	.word	0x20002294
 80133f8:	200022b0 	.word	0x200022b0
 80133fc:	200022b4 	.word	0x200022b4
 8013400:	200022a8 	.word	0x200022a8
 8013404:	20002298 	.word	0x20002298
 8013408:	200022a0 	.word	0x200022a0
 801340c:	200022b2 	.word	0x200022b2
 8013410:	2000229c 	.word	0x2000229c
 8013414:	200022ac 	.word	0x200022ac
 8013418:	200022a4 	.word	0x200022a4

0801341c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801341c:	4b06      	ldr	r3, [pc, #24]	@ (8013438 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801341e:	681b      	ldr	r3, [r3, #0]
 8013420:	b943      	cbnz	r3, 8013434 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013422:	b139      	cbz	r1, 8013434 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013424:	4b05      	ldr	r3, [pc, #20]	@ (801343c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013426:	801a      	strh	r2, [r3, #0]
 8013428:	4b05      	ldr	r3, [pc, #20]	@ (8013440 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801342a:	6019      	str	r1, [r3, #0]
 801342c:	4b05      	ldr	r3, [pc, #20]	@ (8013444 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801342e:	6018      	str	r0, [r3, #0]
 8013430:	f7ff bf96 	b.w	8013360 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013434:	4770      	bx	lr
 8013436:	bf00      	nop
 8013438:	200022a0 	.word	0x200022a0
 801343c:	200022b4 	.word	0x200022b4
 8013440:	2000229c 	.word	0x2000229c
 8013444:	20002294 	.word	0x20002294

08013448 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013448:	b470      	push	{r4, r5, r6}
 801344a:	4c07      	ldr	r4, [pc, #28]	@ (8013468 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801344c:	4605      	mov	r5, r0
 801344e:	6826      	ldr	r6, [r4, #0]
 8013450:	4610      	mov	r0, r2
 8013452:	9a03      	ldr	r2, [sp, #12]
 8013454:	b936      	cbnz	r6, 8013464 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013456:	6025      	str	r5, [r4, #0]
 8013458:	4c04      	ldr	r4, [pc, #16]	@ (801346c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801345a:	8021      	strh	r1, [r4, #0]
 801345c:	bc70      	pop	{r4, r5, r6}
 801345e:	4619      	mov	r1, r3
 8013460:	f7ff bfdc 	b.w	801341c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013464:	bc70      	pop	{r4, r5, r6}
 8013466:	4770      	bx	lr
 8013468:	200022b8 	.word	0x200022b8
 801346c:	200022b0 	.word	0x200022b0

08013470 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013470:	4a12      	ldr	r2, [pc, #72]	@ (80134bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013472:	8803      	ldrh	r3, [r0, #0]
 8013474:	8812      	ldrh	r2, [r2, #0]
 8013476:	4293      	cmp	r3, r2
 8013478:	d207      	bcs.n	801348a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801347a:	2114      	movs	r1, #20
 801347c:	4a10      	ldr	r2, [pc, #64]	@ (80134c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801347e:	6812      	ldr	r2, [r2, #0]
 8013480:	fb01 2303 	mla	r3, r1, r3, r2
 8013484:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013488:	4770      	bx	lr
 801348a:	490e      	ldr	r1, [pc, #56]	@ (80134c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801348c:	8809      	ldrh	r1, [r1, #0]
 801348e:	4411      	add	r1, r2
 8013490:	428b      	cmp	r3, r1
 8013492:	da04      	bge.n	801349e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013494:	1a9b      	subs	r3, r3, r2
 8013496:	4a0c      	ldr	r2, [pc, #48]	@ (80134c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013498:	210e      	movs	r1, #14
 801349a:	6812      	ldr	r2, [r2, #0]
 801349c:	e7f0      	b.n	8013480 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801349e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80134a2:	4293      	cmp	r3, r2
 80134a4:	d108      	bne.n	80134b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80134a6:	4b09      	ldr	r3, [pc, #36]	@ (80134cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80134a8:	781b      	ldrb	r3, [r3, #0]
 80134aa:	b91b      	cbnz	r3, 80134b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80134ac:	4b08      	ldr	r3, [pc, #32]	@ (80134d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80134ae:	f9b3 0000 	ldrsh.w	r0, [r3]
 80134b2:	4770      	bx	lr
 80134b4:	4b07      	ldr	r3, [pc, #28]	@ (80134d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80134b6:	e7fa      	b.n	80134ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80134b8:	2000      	movs	r0, #0
 80134ba:	4770      	bx	lr
 80134bc:	200022b0 	.word	0x200022b0
 80134c0:	200022b8 	.word	0x200022b8
 80134c4:	200022b4 	.word	0x200022b4
 80134c8:	20002298 	.word	0x20002298
 80134cc:	20002228 	.word	0x20002228
 80134d0:	2000222a 	.word	0x2000222a
 80134d4:	2000222c 	.word	0x2000222c

080134d8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80134d8:	4a12      	ldr	r2, [pc, #72]	@ (8013524 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80134da:	8803      	ldrh	r3, [r0, #0]
 80134dc:	8812      	ldrh	r2, [r2, #0]
 80134de:	4293      	cmp	r3, r2
 80134e0:	d207      	bcs.n	80134f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80134e2:	2114      	movs	r1, #20
 80134e4:	4a10      	ldr	r2, [pc, #64]	@ (8013528 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80134e6:	6812      	ldr	r2, [r2, #0]
 80134e8:	fb01 2303 	mla	r3, r1, r3, r2
 80134ec:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80134f0:	4770      	bx	lr
 80134f2:	490e      	ldr	r1, [pc, #56]	@ (801352c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80134f4:	8809      	ldrh	r1, [r1, #0]
 80134f6:	4411      	add	r1, r2
 80134f8:	428b      	cmp	r3, r1
 80134fa:	da04      	bge.n	8013506 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80134fc:	1a9b      	subs	r3, r3, r2
 80134fe:	4a0c      	ldr	r2, [pc, #48]	@ (8013530 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013500:	210e      	movs	r1, #14
 8013502:	6812      	ldr	r2, [r2, #0]
 8013504:	e7f0      	b.n	80134e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013506:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801350a:	4293      	cmp	r3, r2
 801350c:	d108      	bne.n	8013520 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801350e:	4b09      	ldr	r3, [pc, #36]	@ (8013534 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013510:	781b      	ldrb	r3, [r3, #0]
 8013512:	b91b      	cbnz	r3, 801351c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013514:	4b08      	ldr	r3, [pc, #32]	@ (8013538 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013516:	f9b3 0000 	ldrsh.w	r0, [r3]
 801351a:	4770      	bx	lr
 801351c:	4b07      	ldr	r3, [pc, #28]	@ (801353c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801351e:	e7fa      	b.n	8013516 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013520:	2000      	movs	r0, #0
 8013522:	4770      	bx	lr
 8013524:	200022b0 	.word	0x200022b0
 8013528:	200022b8 	.word	0x200022b8
 801352c:	200022b4 	.word	0x200022b4
 8013530:	20002298 	.word	0x20002298
 8013534:	20002228 	.word	0x20002228
 8013538:	2000222c 	.word	0x2000222c
 801353c:	2000222a 	.word	0x2000222a

08013540 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013540:	b530      	push	{r4, r5, lr}
 8013542:	4a22      	ldr	r2, [pc, #136]	@ (80135cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013544:	880b      	ldrh	r3, [r1, #0]
 8013546:	8812      	ldrh	r2, [r2, #0]
 8013548:	4293      	cmp	r3, r2
 801354a:	d213      	bcs.n	8013574 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801354c:	2114      	movs	r1, #20
 801354e:	4a20      	ldr	r2, [pc, #128]	@ (80135d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013550:	6812      	ldr	r2, [r2, #0]
 8013552:	fb01 2303 	mla	r3, r1, r3, r2
 8013556:	8a1a      	ldrh	r2, [r3, #16]
 8013558:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801355c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013560:	8a5b      	ldrh	r3, [r3, #18]
 8013562:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013566:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801356a:	8004      	strh	r4, [r0, #0]
 801356c:	8041      	strh	r1, [r0, #2]
 801356e:	8082      	strh	r2, [r0, #4]
 8013570:	80c3      	strh	r3, [r0, #6]
 8013572:	e024      	b.n	80135be <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8013574:	4917      	ldr	r1, [pc, #92]	@ (80135d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013576:	8809      	ldrh	r1, [r1, #0]
 8013578:	4411      	add	r1, r2
 801357a:	428b      	cmp	r3, r1
 801357c:	da10      	bge.n	80135a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801357e:	1a9b      	subs	r3, r3, r2
 8013580:	220e      	movs	r2, #14
 8013582:	4353      	muls	r3, r2
 8013584:	4a14      	ldr	r2, [pc, #80]	@ (80135d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013586:	6811      	ldr	r1, [r2, #0]
 8013588:	18ca      	adds	r2, r1, r3
 801358a:	5ecd      	ldrsh	r5, [r1, r3]
 801358c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8013590:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8013594:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8013598:	8005      	strh	r5, [r0, #0]
 801359a:	8044      	strh	r4, [r0, #2]
 801359c:	8081      	strh	r1, [r0, #4]
 801359e:	e7e7      	b.n	8013570 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80135a0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80135a4:	4293      	cmp	r3, r2
 80135a6:	d10b      	bne.n	80135c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80135a8:	4b0c      	ldr	r3, [pc, #48]	@ (80135dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80135aa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80135ae:	4b0c      	ldr	r3, [pc, #48]	@ (80135e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80135b0:	8081      	strh	r1, [r0, #4]
 80135b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80135b6:	2300      	movs	r3, #0
 80135b8:	80c2      	strh	r2, [r0, #6]
 80135ba:	8003      	strh	r3, [r0, #0]
 80135bc:	8043      	strh	r3, [r0, #2]
 80135be:	bd30      	pop	{r4, r5, pc}
 80135c0:	2300      	movs	r3, #0
 80135c2:	8003      	strh	r3, [r0, #0]
 80135c4:	8043      	strh	r3, [r0, #2]
 80135c6:	8083      	strh	r3, [r0, #4]
 80135c8:	e7d2      	b.n	8013570 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80135ca:	bf00      	nop
 80135cc:	200022b0 	.word	0x200022b0
 80135d0:	200022b8 	.word	0x200022b8
 80135d4:	200022b4 	.word	0x200022b4
 80135d8:	20002298 	.word	0x20002298
 80135dc:	20002224 	.word	0x20002224
 80135e0:	20002226 	.word	0x20002226

080135e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80135e4:	4a17      	ldr	r2, [pc, #92]	@ (8013644 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80135e6:	8803      	ldrh	r3, [r0, #0]
 80135e8:	8812      	ldrh	r2, [r2, #0]
 80135ea:	4293      	cmp	r3, r2
 80135ec:	d213      	bcs.n	8013616 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80135ee:	2114      	movs	r1, #20
 80135f0:	4a15      	ldr	r2, [pc, #84]	@ (8013648 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80135f2:	6812      	ldr	r2, [r2, #0]
 80135f4:	fb01 2303 	mla	r3, r1, r3, r2
 80135f8:	8a1a      	ldrh	r2, [r3, #16]
 80135fa:	8919      	ldrh	r1, [r3, #8]
 80135fc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013600:	428a      	cmp	r2, r1
 8013602:	db1d      	blt.n	8013640 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013604:	8a58      	ldrh	r0, [r3, #18]
 8013606:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801360a:	895b      	ldrh	r3, [r3, #10]
 801360c:	4298      	cmp	r0, r3
 801360e:	bfac      	ite	ge
 8013610:	2000      	movge	r0, #0
 8013612:	2001      	movlt	r0, #1
 8013614:	4770      	bx	lr
 8013616:	490d      	ldr	r1, [pc, #52]	@ (801364c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013618:	8809      	ldrh	r1, [r1, #0]
 801361a:	4411      	add	r1, r2
 801361c:	428b      	cmp	r3, r1
 801361e:	da0d      	bge.n	801363c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013620:	210e      	movs	r1, #14
 8013622:	1a9b      	subs	r3, r3, r2
 8013624:	4a0a      	ldr	r2, [pc, #40]	@ (8013650 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013626:	6812      	ldr	r2, [r2, #0]
 8013628:	fb01 2303 	mla	r3, r1, r3, r2
 801362c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013630:	891a      	ldrh	r2, [r3, #8]
 8013632:	4291      	cmp	r1, r2
 8013634:	db04      	blt.n	8013640 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013636:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801363a:	e7e6      	b.n	801360a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801363c:	2000      	movs	r0, #0
 801363e:	4770      	bx	lr
 8013640:	2001      	movs	r0, #1
 8013642:	4770      	bx	lr
 8013644:	200022b0 	.word	0x200022b0
 8013648:	200022b8 	.word	0x200022b8
 801364c:	200022b4 	.word	0x200022b4
 8013650:	20002298 	.word	0x20002298

08013654 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013654:	4a12      	ldr	r2, [pc, #72]	@ (80136a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013656:	8803      	ldrh	r3, [r0, #0]
 8013658:	8811      	ldrh	r1, [r2, #0]
 801365a:	428b      	cmp	r3, r1
 801365c:	d20b      	bcs.n	8013676 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801365e:	4a11      	ldr	r2, [pc, #68]	@ (80136a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013660:	6812      	ldr	r2, [r2, #0]
 8013662:	b112      	cbz	r2, 801366a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013664:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013668:	b9c0      	cbnz	r0, 801369c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801366a:	4a0f      	ldr	r2, [pc, #60]	@ (80136a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801366c:	6811      	ldr	r1, [r2, #0]
 801366e:	2214      	movs	r2, #20
 8013670:	4353      	muls	r3, r2
 8013672:	58c8      	ldr	r0, [r1, r3]
 8013674:	4770      	bx	lr
 8013676:	4a0d      	ldr	r2, [pc, #52]	@ (80136ac <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013678:	8812      	ldrh	r2, [r2, #0]
 801367a:	440a      	add	r2, r1
 801367c:	4293      	cmp	r3, r2
 801367e:	da04      	bge.n	801368a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013680:	4a08      	ldr	r2, [pc, #32]	@ (80136a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013682:	6812      	ldr	r2, [r2, #0]
 8013684:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013688:	4770      	bx	lr
 801368a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801368e:	4293      	cmp	r3, r2
 8013690:	d103      	bne.n	801369a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013692:	4b07      	ldr	r3, [pc, #28]	@ (80136b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013694:	681b      	ldr	r3, [r3, #0]
 8013696:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013698:	4770      	bx	lr
 801369a:	2000      	movs	r0, #0
 801369c:	4770      	bx	lr
 801369e:	bf00      	nop
 80136a0:	200022b0 	.word	0x200022b0
 80136a4:	20002294 	.word	0x20002294
 80136a8:	200022b8 	.word	0x200022b8
 80136ac:	200022b4 	.word	0x200022b4
 80136b0:	20002230 	.word	0x20002230

080136b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80136b4:	4b24      	ldr	r3, [pc, #144]	@ (8013748 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80136b6:	8802      	ldrh	r2, [r0, #0]
 80136b8:	8818      	ldrh	r0, [r3, #0]
 80136ba:	4282      	cmp	r2, r0
 80136bc:	d221      	bcs.n	8013702 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80136be:	4b23      	ldr	r3, [pc, #140]	@ (801374c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80136c0:	6819      	ldr	r1, [r3, #0]
 80136c2:	2314      	movs	r3, #20
 80136c4:	fb03 1302 	mla	r3, r3, r2, r1
 80136c8:	6858      	ldr	r0, [r3, #4]
 80136ca:	2800      	cmp	r0, #0
 80136cc:	d03a      	beq.n	8013744 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80136ce:	4920      	ldr	r1, [pc, #128]	@ (8013750 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80136d0:	6809      	ldr	r1, [r1, #0]
 80136d2:	2900      	cmp	r1, #0
 80136d4:	d036      	beq.n	8013744 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80136d6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80136da:	2900      	cmp	r1, #0
 80136dc:	d032      	beq.n	8013744 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80136de:	891a      	ldrh	r2, [r3, #8]
 80136e0:	8958      	ldrh	r0, [r3, #10]
 80136e2:	4350      	muls	r0, r2
 80136e4:	7c5a      	ldrb	r2, [r3, #17]
 80136e6:	7cdb      	ldrb	r3, [r3, #19]
 80136e8:	0952      	lsrs	r2, r2, #5
 80136ea:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80136ee:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80136f2:	2b0b      	cmp	r3, #11
 80136f4:	bf18      	it	ne
 80136f6:	0040      	lslne	r0, r0, #1
 80136f8:	3003      	adds	r0, #3
 80136fa:	f020 0003 	bic.w	r0, r0, #3
 80136fe:	4408      	add	r0, r1
 8013700:	4770      	bx	lr
 8013702:	4b14      	ldr	r3, [pc, #80]	@ (8013754 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013704:	881b      	ldrh	r3, [r3, #0]
 8013706:	4403      	add	r3, r0
 8013708:	429a      	cmp	r2, r3
 801370a:	da1a      	bge.n	8013742 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801370c:	210e      	movs	r1, #14
 801370e:	4b12      	ldr	r3, [pc, #72]	@ (8013758 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013710:	1a10      	subs	r0, r2, r0
 8013712:	681b      	ldr	r3, [r3, #0]
 8013714:	fb01 3000 	mla	r0, r1, r0, r3
 8013718:	7b03      	ldrb	r3, [r0, #12]
 801371a:	f003 031f 	and.w	r3, r3, #31
 801371e:	2b0b      	cmp	r3, #11
 8013720:	d10b      	bne.n	801373a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013722:	8903      	ldrh	r3, [r0, #8]
 8013724:	8940      	ldrh	r0, [r0, #10]
 8013726:	4358      	muls	r0, r3
 8013728:	4b09      	ldr	r3, [pc, #36]	@ (8013750 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801372a:	3003      	adds	r0, #3
 801372c:	6819      	ldr	r1, [r3, #0]
 801372e:	f020 0303 	bic.w	r3, r0, #3
 8013732:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013736:	4418      	add	r0, r3
 8013738:	4770      	bx	lr
 801373a:	2b0d      	cmp	r3, #13
 801373c:	d101      	bne.n	8013742 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801373e:	300d      	adds	r0, #13
 8013740:	4770      	bx	lr
 8013742:	2000      	movs	r0, #0
 8013744:	4770      	bx	lr
 8013746:	bf00      	nop
 8013748:	200022b0 	.word	0x200022b0
 801374c:	200022b8 	.word	0x200022b8
 8013750:	20002294 	.word	0x20002294
 8013754:	200022b4 	.word	0x200022b4
 8013758:	20002298 	.word	0x20002298

0801375c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801375c:	b510      	push	{r4, lr}
 801375e:	4b1f      	ldr	r3, [pc, #124]	@ (80137dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8013760:	8802      	ldrh	r2, [r0, #0]
 8013762:	881b      	ldrh	r3, [r3, #0]
 8013764:	429a      	cmp	r2, r3
 8013766:	d21a      	bcs.n	801379e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8013768:	2114      	movs	r1, #20
 801376a:	4b1d      	ldr	r3, [pc, #116]	@ (80137e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 801376c:	681b      	ldr	r3, [r3, #0]
 801376e:	fb01 3102 	mla	r1, r1, r2, r3
 8013772:	7c4b      	ldrb	r3, [r1, #17]
 8013774:	0958      	lsrs	r0, r3, #5
 8013776:	7ccb      	ldrb	r3, [r1, #19]
 8013778:	491a      	ldr	r1, [pc, #104]	@ (80137e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801377a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801377e:	6809      	ldr	r1, [r1, #0]
 8013780:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8013784:	b2d8      	uxtb	r0, r3
 8013786:	b149      	cbz	r1, 801379c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013788:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801378c:	b132      	cbz	r2, 801379c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801378e:	2b0e      	cmp	r3, #14
 8013790:	d021      	beq.n	80137d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8013792:	280f      	cmp	r0, #15
 8013794:	d01d      	beq.n	80137d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8013796:	2810      	cmp	r0, #16
 8013798:	bf08      	it	eq
 801379a:	2002      	moveq	r0, #2
 801379c:	bd10      	pop	{r4, pc}
 801379e:	4912      	ldr	r1, [pc, #72]	@ (80137e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80137a0:	8809      	ldrh	r1, [r1, #0]
 80137a2:	4419      	add	r1, r3
 80137a4:	428a      	cmp	r2, r1
 80137a6:	da09      	bge.n	80137bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80137a8:	210e      	movs	r1, #14
 80137aa:	1ad3      	subs	r3, r2, r3
 80137ac:	4a0f      	ldr	r2, [pc, #60]	@ (80137ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80137ae:	6812      	ldr	r2, [r2, #0]
 80137b0:	fb01 2303 	mla	r3, r1, r3, r2
 80137b4:	7b18      	ldrb	r0, [r3, #12]
 80137b6:	f000 001f 	and.w	r0, r0, #31
 80137ba:	e7ef      	b.n	801379c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80137bc:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80137c0:	429a      	cmp	r2, r3
 80137c2:	d108      	bne.n	80137d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80137c4:	f7f4 fc50 	bl	8008068 <_ZN8touchgfx3HAL3lcdEv>
 80137c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137cc:	6803      	ldr	r3, [r0, #0]
 80137ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80137d0:	4718      	bx	r3
 80137d2:	2001      	movs	r0, #1
 80137d4:	e7e2      	b.n	801379c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80137d6:	2000      	movs	r0, #0
 80137d8:	e7e0      	b.n	801379c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80137da:	bf00      	nop
 80137dc:	200022b0 	.word	0x200022b0
 80137e0:	200022b8 	.word	0x200022b8
 80137e4:	20002294 	.word	0x20002294
 80137e8:	200022b4 	.word	0x200022b4
 80137ec:	20002298 	.word	0x20002298

080137f0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80137f0:	2010      	movs	r0, #16
 80137f2:	4770      	bx	lr

080137f4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80137f4:	2000      	movs	r0, #0
 80137f6:	4770      	bx	lr

080137f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80137f8:	4b02      	ldr	r3, [pc, #8]	@ (8013804 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80137fa:	8818      	ldrh	r0, [r3, #0]
 80137fc:	0040      	lsls	r0, r0, #1
 80137fe:	b280      	uxth	r0, r0
 8013800:	4770      	bx	lr
 8013802:	bf00      	nop
 8013804:	2000222a 	.word	0x2000222a

08013808 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013808:	2bff      	cmp	r3, #255	@ 0xff
 801380a:	d05e      	beq.n	80138ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801380c:	2a0b      	cmp	r2, #11
 801380e:	d058      	beq.n	80138c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013810:	d80e      	bhi.n	8013830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013812:	2a03      	cmp	r2, #3
 8013814:	d04d      	beq.n	80138b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8013816:	d804      	bhi.n	8013822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013818:	2a01      	cmp	r2, #1
 801381a:	d04c      	beq.n	80138b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801381c:	d94d      	bls.n	80138ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801381e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8013820:	e031      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013822:	2a09      	cmp	r2, #9
 8013824:	d04d      	beq.n	80138c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013826:	d84a      	bhi.n	80138be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013828:	2a08      	cmp	r2, #8
 801382a:	d048      	beq.n	80138be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801382c:	2300      	movs	r3, #0
 801382e:	e02a      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013830:	2a2f      	cmp	r2, #47	@ 0x2f
 8013832:	d02c      	beq.n	801388e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8013834:	d811      	bhi.n	801385a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8013836:	2a2d      	cmp	r2, #45	@ 0x2d
 8013838:	d018      	beq.n	801386c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801383a:	d831      	bhi.n	80138a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801383c:	2a2c      	cmp	r2, #44	@ 0x2c
 801383e:	d1f5      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013840:	684a      	ldr	r2, [r1, #4]
 8013842:	7813      	ldrb	r3, [r2, #0]
 8013844:	7852      	ldrb	r2, [r2, #1]
 8013846:	2a00      	cmp	r2, #0
 8013848:	d1f0      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801384a:	2b01      	cmp	r3, #1
 801384c:	d01d      	beq.n	801388a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801384e:	2b00      	cmp	r3, #0
 8013850:	d02d      	beq.n	80138ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8013852:	2b02      	cmp	r3, #2
 8013854:	d1ea      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013856:	68c3      	ldr	r3, [r0, #12]
 8013858:	e015      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801385a:	2a31      	cmp	r2, #49	@ 0x31
 801385c:	d004      	beq.n	8013868 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801385e:	d332      	bcc.n	80138c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013860:	2a32      	cmp	r2, #50	@ 0x32
 8013862:	d030      	beq.n	80138c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8013864:	2a33      	cmp	r2, #51	@ 0x33
 8013866:	d1e1      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013868:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 801386a:	e00c      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801386c:	684a      	ldr	r2, [r1, #4]
 801386e:	7813      	ldrb	r3, [r2, #0]
 8013870:	7852      	ldrb	r2, [r2, #1]
 8013872:	2a00      	cmp	r2, #0
 8013874:	d1da      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013876:	2b01      	cmp	r3, #1
 8013878:	d004      	beq.n	8013884 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801387a:	d30f      	bcc.n	801389c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801387c:	2b02      	cmp	r3, #2
 801387e:	d1d5      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013880:	6943      	ldr	r3, [r0, #20]
 8013882:	e000      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013884:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8013886:	4618      	mov	r0, r3
 8013888:	4770      	bx	lr
 801388a:	69c3      	ldr	r3, [r0, #28]
 801388c:	e7fb      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801388e:	684b      	ldr	r3, [r1, #4]
 8013890:	781a      	ldrb	r2, [r3, #0]
 8013892:	785b      	ldrb	r3, [r3, #1]
 8013894:	2b00      	cmp	r3, #0
 8013896:	d1c9      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013898:	2a00      	cmp	r2, #0
 801389a:	d1f4      	bne.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801389c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801389e:	e7f2      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138a0:	684b      	ldr	r3, [r1, #4]
 80138a2:	781a      	ldrb	r2, [r3, #0]
 80138a4:	785b      	ldrb	r3, [r3, #1]
 80138a6:	2b00      	cmp	r3, #0
 80138a8:	d1c0      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80138aa:	2a00      	cmp	r2, #0
 80138ac:	d1eb      	bne.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138ae:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80138b0:	e7e9      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138b2:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80138b4:	e7e7      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138b6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80138b8:	e7e5      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138ba:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80138bc:	e7e3      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138be:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80138c0:	e7e1      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138c2:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80138c4:	e7df      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138c6:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80138c8:	e7dd      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138ca:	2a0b      	cmp	r2, #11
 80138cc:	d059      	beq.n	8013982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80138ce:	d80e      	bhi.n	80138ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80138d0:	2a03      	cmp	r2, #3
 80138d2:	d050      	beq.n	8013976 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80138d4:	d804      	bhi.n	80138e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80138d6:	2a01      	cmp	r2, #1
 80138d8:	d04f      	beq.n	801397a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80138da:	d950      	bls.n	801397e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80138dc:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80138de:	e7d2      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138e0:	2a09      	cmp	r2, #9
 80138e2:	d04e      	beq.n	8013982 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80138e4:	d801      	bhi.n	80138ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 80138e6:	2a08      	cmp	r2, #8
 80138e8:	d1a0      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80138ea:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80138ec:	e7cb      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80138ee:	2a2f      	cmp	r2, #47	@ 0x2f
 80138f0:	d02d      	beq.n	801394e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80138f2:	d811      	bhi.n	8013918 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80138f4:	2a2d      	cmp	r2, #45	@ 0x2d
 80138f6:	d018      	beq.n	801392a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80138f8:	d833      	bhi.n	8013962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80138fa:	2a2c      	cmp	r2, #44	@ 0x2c
 80138fc:	d196      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80138fe:	684a      	ldr	r2, [r1, #4]
 8013900:	7813      	ldrb	r3, [r2, #0]
 8013902:	7852      	ldrb	r2, [r2, #1]
 8013904:	2a00      	cmp	r2, #0
 8013906:	d191      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013908:	2b01      	cmp	r3, #1
 801390a:	d01e      	beq.n	801394a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801390c:	2b00      	cmp	r3, #0
 801390e:	d030      	beq.n	8013972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8013910:	2b02      	cmp	r3, #2
 8013912:	d18b      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013914:	6903      	ldr	r3, [r0, #16]
 8013916:	e7b6      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013918:	2a31      	cmp	r2, #49	@ 0x31
 801391a:	d004      	beq.n	8013926 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801391c:	d333      	bcc.n	8013986 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801391e:	2a32      	cmp	r2, #50	@ 0x32
 8013920:	d031      	beq.n	8013986 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8013922:	2a33      	cmp	r2, #51	@ 0x33
 8013924:	d182      	bne.n	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013926:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8013928:	e7ad      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801392a:	684a      	ldr	r2, [r1, #4]
 801392c:	7813      	ldrb	r3, [r2, #0]
 801392e:	7852      	ldrb	r2, [r2, #1]
 8013930:	2a00      	cmp	r2, #0
 8013932:	f47f af7b 	bne.w	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013936:	2b01      	cmp	r3, #1
 8013938:	d005      	beq.n	8013946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801393a:	d310      	bcc.n	801395e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801393c:	2b02      	cmp	r3, #2
 801393e:	f47f af75 	bne.w	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013942:	6983      	ldr	r3, [r0, #24]
 8013944:	e79f      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013946:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8013948:	e79d      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801394a:	6a03      	ldr	r3, [r0, #32]
 801394c:	e79b      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801394e:	684b      	ldr	r3, [r1, #4]
 8013950:	781a      	ldrb	r2, [r3, #0]
 8013952:	785b      	ldrb	r3, [r3, #1]
 8013954:	2b00      	cmp	r3, #0
 8013956:	f47f af69 	bne.w	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801395a:	2a00      	cmp	r2, #0
 801395c:	d193      	bne.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801395e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8013960:	e791      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013962:	684b      	ldr	r3, [r1, #4]
 8013964:	781a      	ldrb	r2, [r3, #0]
 8013966:	785b      	ldrb	r3, [r3, #1]
 8013968:	2b00      	cmp	r3, #0
 801396a:	f47f af5f 	bne.w	801382c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801396e:	2a00      	cmp	r2, #0
 8013970:	d189      	bne.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013972:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013974:	e787      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013976:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8013978:	e785      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801397a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801397c:	e783      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801397e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8013980:	e781      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013982:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8013984:	e77f      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013986:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8013988:	e77d      	b.n	8013886 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801398a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801398a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801398e:	b087      	sub	sp, #28
 8013990:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013992:	9101      	str	r1, [sp, #4]
 8013994:	9205      	str	r2, [sp, #20]
 8013996:	6841      	ldr	r1, [r0, #4]
 8013998:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801399c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80139a0:	9202      	str	r2, [sp, #8]
 80139a2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80139a6:	fb01 2404 	mla	r4, r1, r4, r2
 80139aa:	6802      	ldr	r2, [r0, #0]
 80139ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80139b0:	f8de 2000 	ldr.w	r2, [lr]
 80139b4:	9203      	str	r2, [sp, #12]
 80139b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80139ba:	3204      	adds	r2, #4
 80139bc:	9204      	str	r2, [sp, #16]
 80139be:	9a02      	ldr	r2, [sp, #8]
 80139c0:	43d6      	mvns	r6, r2
 80139c2:	b2f6      	uxtb	r6, r6
 80139c4:	9a01      	ldr	r2, [sp, #4]
 80139c6:	2a00      	cmp	r2, #0
 80139c8:	dc03      	bgt.n	80139d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80139ca:	9a05      	ldr	r2, [sp, #20]
 80139cc:	2a00      	cmp	r2, #0
 80139ce:	f340 8129 	ble.w	8013c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80139d2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80139d4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80139d8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80139dc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80139de:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80139e2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80139e6:	2b00      	cmp	r3, #0
 80139e8:	dd0e      	ble.n	8013a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80139ea:	1408      	asrs	r0, r1, #16
 80139ec:	d405      	bmi.n	80139fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80139ee:	4560      	cmp	r0, ip
 80139f0:	da03      	bge.n	80139fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80139f2:	1410      	asrs	r0, r2, #16
 80139f4:	d401      	bmi.n	80139fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80139f6:	42b8      	cmp	r0, r7
 80139f8:	db07      	blt.n	8013a0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80139fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80139fc:	3b01      	subs	r3, #1
 80139fe:	4401      	add	r1, r0
 8013a00:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013a02:	3402      	adds	r4, #2
 8013a04:	4402      	add	r2, r0
 8013a06:	e7ee      	b.n	80139e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013a08:	d071      	beq.n	8013aee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013a0a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013a0c:	1e58      	subs	r0, r3, #1
 8013a0e:	fb05 1500 	mla	r5, r5, r0, r1
 8013a12:	142d      	asrs	r5, r5, #16
 8013a14:	d45f      	bmi.n	8013ad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013a16:	4565      	cmp	r5, ip
 8013a18:	da5d      	bge.n	8013ad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013a1a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013a1c:	fb05 2000 	mla	r0, r5, r0, r2
 8013a20:	1400      	asrs	r0, r0, #16
 8013a22:	d458      	bmi.n	8013ad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013a24:	42b8      	cmp	r0, r7
 8013a26:	da56      	bge.n	8013ad6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8013a28:	4699      	mov	r9, r3
 8013a2a:	46a2      	mov	sl, r4
 8013a2c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8013a30:	f1b9 0f00 	cmp.w	r9, #0
 8013a34:	dd57      	ble.n	8013ae6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8013a36:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013a3a:	9803      	ldr	r0, [sp, #12]
 8013a3c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8013a40:	fb07 000c 	mla	r0, r7, ip, r0
 8013a44:	140d      	asrs	r5, r1, #16
 8013a46:	5d40      	ldrb	r0, [r0, r5]
 8013a48:	9d04      	ldr	r5, [sp, #16]
 8013a4a:	f109 39ff 	add.w	r9, r9, #4294967295
 8013a4e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013a52:	f8ba 5000 	ldrh.w	r5, [sl]
 8013a56:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013a5a:	122f      	asrs	r7, r5, #8
 8013a5c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013a60:	fb17 f706 	smulbb	r7, r7, r6
 8013a64:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013a68:	00ed      	lsls	r5, r5, #3
 8013a6a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8013a6e:	b2ed      	uxtb	r5, r5
 8013a70:	fb18 f806 	smulbb	r8, r8, r6
 8013a74:	fb15 f506 	smulbb	r5, r5, r6
 8013a78:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013a7c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013a80:	10c7      	asrs	r7, r0, #3
 8013a82:	00c0      	lsls	r0, r0, #3
 8013a84:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013a88:	b2c0      	uxtb	r0, r0
 8013a8a:	fb07 870b 	mla	r7, r7, fp, r8
 8013a8e:	fb00 500b 	mla	r0, r0, fp, r5
 8013a92:	fa1f fc8c 	uxth.w	ip, ip
 8013a96:	b280      	uxth	r0, r0
 8013a98:	b2bf      	uxth	r7, r7
 8013a9a:	f10c 0501 	add.w	r5, ip, #1
 8013a9e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013aa2:	f107 0801 	add.w	r8, r7, #1
 8013aa6:	1c45      	adds	r5, r0, #1
 8013aa8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013aac:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013ab0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013ab2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013ab6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013aba:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013abe:	ea45 0c0c 	orr.w	ip, r5, ip
 8013ac2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8013ac6:	4401      	add	r1, r0
 8013ac8:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013aca:	ea4c 0c08 	orr.w	ip, ip, r8
 8013ace:	f82a cb02 	strh.w	ip, [sl], #2
 8013ad2:	4402      	add	r2, r0
 8013ad4:	e7ac      	b.n	8013a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013ad6:	f04f 0800 	mov.w	r8, #0
 8013ada:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013ade:	eb03 0008 	add.w	r0, r3, r8
 8013ae2:	2800      	cmp	r0, #0
 8013ae4:	dc41      	bgt.n	8013b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013ae6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013aea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013aee:	9b01      	ldr	r3, [sp, #4]
 8013af0:	2b00      	cmp	r3, #0
 8013af2:	f340 8097 	ble.w	8013c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013af6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013afa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013afe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013b06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b0a:	eef0 6a62 	vmov.f32	s13, s5
 8013b0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b22:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013b26:	eef0 6a43 	vmov.f32	s13, s6
 8013b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b2e:	ee12 2a90 	vmov	r2, s5
 8013b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013b38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013b3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b40:	ee13 2a10 	vmov	r2, s6
 8013b44:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013b46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013b48:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013b4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b50:	9314      	str	r3, [sp, #80]	@ 0x50
 8013b52:	9b01      	ldr	r3, [sp, #4]
 8013b54:	9a05      	ldr	r2, [sp, #20]
 8013b56:	3b01      	subs	r3, #1
 8013b58:	9301      	str	r3, [sp, #4]
 8013b5a:	eeb0 3a67 	vmov.f32	s6, s15
 8013b5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013b60:	eef0 2a47 	vmov.f32	s5, s14
 8013b64:	bf08      	it	eq
 8013b66:	4613      	moveq	r3, r2
 8013b68:	e72c      	b.n	80139c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013b6a:	140f      	asrs	r7, r1, #16
 8013b6c:	d453      	bmi.n	8013c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013b6e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013b72:	42bd      	cmp	r5, r7
 8013b74:	dd4f      	ble.n	8013c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013b76:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013b7a:	d44c      	bmi.n	8013c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013b7c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013b80:	4560      	cmp	r0, ip
 8013b82:	dd48      	ble.n	8013c16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013b84:	9803      	ldr	r0, [sp, #12]
 8013b86:	b22d      	sxth	r5, r5
 8013b88:	fb0c 0505 	mla	r5, ip, r5, r0
 8013b8c:	5de8      	ldrb	r0, [r5, r7]
 8013b8e:	9d04      	ldr	r5, [sp, #16]
 8013b90:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013b94:	f06f 0501 	mvn.w	r5, #1
 8013b98:	fb05 fb08 	mul.w	fp, r5, r8
 8013b9c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013ba0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013ba4:	122f      	asrs	r7, r5, #8
 8013ba6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013baa:	fb17 f706 	smulbb	r7, r7, r6
 8013bae:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013bb2:	00ed      	lsls	r5, r5, #3
 8013bb4:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013bb8:	b2ed      	uxtb	r5, r5
 8013bba:	fb19 f906 	smulbb	r9, r9, r6
 8013bbe:	fb15 f506 	smulbb	r5, r5, r6
 8013bc2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013bc6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013bca:	10c7      	asrs	r7, r0, #3
 8013bcc:	00c0      	lsls	r0, r0, #3
 8013bce:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013bd2:	b2c0      	uxtb	r0, r0
 8013bd4:	fb07 970a 	mla	r7, r7, sl, r9
 8013bd8:	fb00 500a 	mla	r0, r0, sl, r5
 8013bdc:	fa1f fc8c 	uxth.w	ip, ip
 8013be0:	b2bf      	uxth	r7, r7
 8013be2:	b280      	uxth	r0, r0
 8013be4:	f10c 0501 	add.w	r5, ip, #1
 8013be8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013bec:	f107 0901 	add.w	r9, r7, #1
 8013bf0:	1c45      	adds	r5, r0, #1
 8013bf2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013bf6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013bfa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013bfe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013c02:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013c06:	ea45 0c0c 	orr.w	ip, r5, ip
 8013c0a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013c0e:	ea4c 0c09 	orr.w	ip, ip, r9
 8013c12:	f824 c00b 	strh.w	ip, [r4, fp]
 8013c16:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013c18:	f108 38ff 	add.w	r8, r8, #4294967295
 8013c1c:	4401      	add	r1, r0
 8013c1e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013c20:	4402      	add	r2, r0
 8013c22:	e75c      	b.n	8013ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8013c24:	b007      	add	sp, #28
 8013c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013c2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c32:	b085      	sub	sp, #20
 8013c34:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013c36:	4693      	mov	fp, r2
 8013c38:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013c3c:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8013c40:	6870      	ldr	r0, [r6, #4]
 8013c42:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8013c44:	fb00 2404 	mla	r4, r0, r4, r2
 8013c48:	6832      	ldr	r2, [r6, #0]
 8013c4a:	9100      	str	r1, [sp, #0]
 8013c4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013c50:	682a      	ldr	r2, [r5, #0]
 8013c52:	9201      	str	r2, [sp, #4]
 8013c54:	686a      	ldr	r2, [r5, #4]
 8013c56:	3204      	adds	r2, #4
 8013c58:	9202      	str	r2, [sp, #8]
 8013c5a:	9a00      	ldr	r2, [sp, #0]
 8013c5c:	2a00      	cmp	r2, #0
 8013c5e:	dc03      	bgt.n	8013c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013c60:	f1bb 0f00 	cmp.w	fp, #0
 8013c64:	f340 80a0 	ble.w	8013da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013c68:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013c6a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013c6e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013c72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013c74:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013c78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013c7c:	2b00      	cmp	r3, #0
 8013c7e:	dd0c      	ble.n	8013c9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013c80:	1406      	asrs	r6, r0, #16
 8013c82:	d405      	bmi.n	8013c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013c84:	454e      	cmp	r6, r9
 8013c86:	da03      	bge.n	8013c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013c88:	1416      	asrs	r6, r2, #16
 8013c8a:	d401      	bmi.n	8013c90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013c8c:	4546      	cmp	r6, r8
 8013c8e:	db05      	blt.n	8013c9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013c90:	4470      	add	r0, lr
 8013c92:	4462      	add	r2, ip
 8013c94:	3b01      	subs	r3, #1
 8013c96:	3402      	adds	r4, #2
 8013c98:	e7f0      	b.n	8013c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013c9a:	d00f      	beq.n	8013cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013c9c:	1e5e      	subs	r6, r3, #1
 8013c9e:	fb0e 0706 	mla	r7, lr, r6, r0
 8013ca2:	143f      	asrs	r7, r7, #16
 8013ca4:	d541      	bpl.n	8013d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013ca6:	4698      	mov	r8, r3
 8013ca8:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013cac:	9603      	str	r6, [sp, #12]
 8013cae:	f1b8 0f00 	cmp.w	r8, #0
 8013cb2:	dc59      	bgt.n	8013d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013cb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013cb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013cbc:	9b00      	ldr	r3, [sp, #0]
 8013cbe:	2b00      	cmp	r3, #0
 8013cc0:	dd72      	ble.n	8013da8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013cc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013cc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013cca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013cce:	eeb0 6a62 	vmov.f32	s12, s5
 8013cd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013cd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013cda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013cde:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ce2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ce6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013cea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013cee:	eeb0 6a43 	vmov.f32	s12, s6
 8013cf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013cf6:	ee12 2a90 	vmov	r2, s5
 8013cfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013cfe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d04:	fb92 fef3 	sdiv	lr, r2, r3
 8013d08:	ee13 2a10 	vmov	r2, s6
 8013d0c:	fb92 fcf3 	sdiv	ip, r2, r3
 8013d10:	9b00      	ldr	r3, [sp, #0]
 8013d12:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013d16:	3b01      	subs	r3, #1
 8013d18:	9300      	str	r3, [sp, #0]
 8013d1a:	eeb0 3a67 	vmov.f32	s6, s15
 8013d1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d20:	eef0 2a47 	vmov.f32	s5, s14
 8013d24:	bf08      	it	eq
 8013d26:	465b      	moveq	r3, fp
 8013d28:	e797      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013d2a:	454f      	cmp	r7, r9
 8013d2c:	dabb      	bge.n	8013ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d2e:	fb0c 2606 	mla	r6, ip, r6, r2
 8013d32:	1436      	asrs	r6, r6, #16
 8013d34:	d4b7      	bmi.n	8013ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d36:	4546      	cmp	r6, r8
 8013d38:	dab5      	bge.n	8013ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013d3a:	461e      	mov	r6, r3
 8013d3c:	46a0      	mov	r8, r4
 8013d3e:	2e00      	cmp	r6, #0
 8013d40:	ddb8      	ble.n	8013cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013d42:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013d46:	9901      	ldr	r1, [sp, #4]
 8013d48:	1417      	asrs	r7, r2, #16
 8013d4a:	fb0a 1707 	mla	r7, sl, r7, r1
 8013d4e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013d52:	f817 7009 	ldrb.w	r7, [r7, r9]
 8013d56:	9902      	ldr	r1, [sp, #8]
 8013d58:	4470      	add	r0, lr
 8013d5a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013d5e:	4462      	add	r2, ip
 8013d60:	f828 7b02 	strh.w	r7, [r8], #2
 8013d64:	3e01      	subs	r6, #1
 8013d66:	e7ea      	b.n	8013d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013d68:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013d6c:	d417      	bmi.n	8013d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013d6e:	68ae      	ldr	r6, [r5, #8]
 8013d70:	454e      	cmp	r6, r9
 8013d72:	dd14      	ble.n	8013d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013d74:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013d78:	d411      	bmi.n	8013d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013d7a:	68ef      	ldr	r7, [r5, #12]
 8013d7c:	4557      	cmp	r7, sl
 8013d7e:	dd0e      	ble.n	8013d9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013d80:	f06f 0101 	mvn.w	r1, #1
 8013d84:	9f01      	ldr	r7, [sp, #4]
 8013d86:	b236      	sxth	r6, r6
 8013d88:	fb0a 7606 	mla	r6, sl, r6, r7
 8013d8c:	9f02      	ldr	r7, [sp, #8]
 8013d8e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8013d92:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013d96:	fb01 f608 	mul.w	r6, r1, r8
 8013d9a:	9903      	ldr	r1, [sp, #12]
 8013d9c:	538f      	strh	r7, [r1, r6]
 8013d9e:	4470      	add	r0, lr
 8013da0:	4462      	add	r2, ip
 8013da2:	f108 38ff 	add.w	r8, r8, #4294967295
 8013da6:	e782      	b.n	8013cae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013da8:	b005      	add	sp, #20
 8013daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013dae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013dae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db2:	b087      	sub	sp, #28
 8013db4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8013db6:	9102      	str	r1, [sp, #8]
 8013db8:	9205      	str	r2, [sp, #20]
 8013dba:	6861      	ldr	r1, [r4, #4]
 8013dbc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013dc0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8013dc4:	9203      	str	r2, [sp, #12]
 8013dc6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8013dca:	fb01 2000 	mla	r0, r1, r0, r2
 8013dce:	6822      	ldr	r2, [r4, #0]
 8013dd0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013dd4:	9200      	str	r2, [sp, #0]
 8013dd6:	f8dc 2000 	ldr.w	r2, [ip]
 8013dda:	9204      	str	r2, [sp, #16]
 8013ddc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013de0:	3204      	adds	r2, #4
 8013de2:	9201      	str	r2, [sp, #4]
 8013de4:	9a03      	ldr	r2, [sp, #12]
 8013de6:	43d5      	mvns	r5, r2
 8013de8:	b2ed      	uxtb	r5, r5
 8013dea:	9a02      	ldr	r2, [sp, #8]
 8013dec:	2a00      	cmp	r2, #0
 8013dee:	dc03      	bgt.n	8013df8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013df0:	9a05      	ldr	r2, [sp, #20]
 8013df2:	2a00      	cmp	r2, #0
 8013df4:	f340 812c 	ble.w	8014050 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013df8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013dfa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8013dfe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013e02:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013e04:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013e08:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013e0c:	2b00      	cmp	r3, #0
 8013e0e:	dd10      	ble.n	8013e32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013e10:	140c      	asrs	r4, r1, #16
 8013e12:	d405      	bmi.n	8013e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013e14:	4574      	cmp	r4, lr
 8013e16:	da03      	bge.n	8013e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013e18:	1414      	asrs	r4, r2, #16
 8013e1a:	d401      	bmi.n	8013e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013e1c:	42bc      	cmp	r4, r7
 8013e1e:	db09      	blt.n	8013e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013e20:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013e22:	9800      	ldr	r0, [sp, #0]
 8013e24:	4421      	add	r1, r4
 8013e26:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013e28:	3002      	adds	r0, #2
 8013e2a:	4422      	add	r2, r4
 8013e2c:	3b01      	subs	r3, #1
 8013e2e:	9000      	str	r0, [sp, #0]
 8013e30:	e7ec      	b.n	8013e0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013e32:	d071      	beq.n	8013f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8013e34:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013e36:	1e5c      	subs	r4, r3, #1
 8013e38:	fb06 1604 	mla	r6, r6, r4, r1
 8013e3c:	1436      	asrs	r6, r6, #16
 8013e3e:	d45d      	bmi.n	8013efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013e40:	4576      	cmp	r6, lr
 8013e42:	da5b      	bge.n	8013efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013e44:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8013e46:	fb06 2404 	mla	r4, r6, r4, r2
 8013e4a:	1424      	asrs	r4, r4, #16
 8013e4c:	d456      	bmi.n	8013efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013e4e:	42bc      	cmp	r4, r7
 8013e50:	da54      	bge.n	8013efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013e52:	4698      	mov	r8, r3
 8013e54:	f8dd 9000 	ldr.w	r9, [sp]
 8013e58:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013e5c:	f1b8 0f00 	cmp.w	r8, #0
 8013e60:	dd54      	ble.n	8013f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013e62:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013e66:	9804      	ldr	r0, [sp, #16]
 8013e68:	1414      	asrs	r4, r2, #16
 8013e6a:	fb07 0404 	mla	r4, r7, r4, r0
 8013e6e:	140e      	asrs	r6, r1, #16
 8013e70:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013e74:	9801      	ldr	r0, [sp, #4]
 8013e76:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013e7a:	eb00 0b0e 	add.w	fp, r0, lr
 8013e7e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013e82:	f8b9 4000 	ldrh.w	r4, [r9]
 8013e86:	fb16 f60a 	smulbb	r6, r6, sl
 8013e8a:	1227      	asrs	r7, r4, #8
 8013e8c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013e90:	fb07 6705 	mla	r7, r7, r5, r6
 8013e94:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013e98:	10e6      	asrs	r6, r4, #3
 8013e9a:	00e4      	lsls	r4, r4, #3
 8013e9c:	b2e4      	uxtb	r4, r4
 8013e9e:	fb1b fb0a 	smulbb	fp, fp, sl
 8013ea2:	fb14 f405 	smulbb	r4, r4, r5
 8013ea6:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013eaa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013eae:	fb06 b605 	mla	r6, r6, r5, fp
 8013eb2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013eb6:	b2bf      	uxth	r7, r7
 8013eb8:	b2b6      	uxth	r6, r6
 8013eba:	fa1f fe8e 	uxth.w	lr, lr
 8013ebe:	1c7c      	adds	r4, r7, #1
 8013ec0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013ec4:	f106 0b01 	add.w	fp, r6, #1
 8013ec8:	f10e 0401 	add.w	r4, lr, #1
 8013ecc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013ece:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8013ed2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013ed6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013eda:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8013ede:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013ee2:	4327      	orrs	r7, r4
 8013ee4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013ee8:	4401      	add	r1, r0
 8013eea:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013eec:	ea47 070b 	orr.w	r7, r7, fp
 8013ef0:	f829 7b02 	strh.w	r7, [r9], #2
 8013ef4:	4402      	add	r2, r0
 8013ef6:	f108 38ff 	add.w	r8, r8, #4294967295
 8013efa:	e7af      	b.n	8013e5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013efc:	f04f 0e00 	mov.w	lr, #0
 8013f00:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8013f04:	eb03 040e 	add.w	r4, r3, lr
 8013f08:	2c00      	cmp	r4, #0
 8013f0a:	dc43      	bgt.n	8013f94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013f0c:	9a00      	ldr	r2, [sp, #0]
 8013f0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013f16:	9300      	str	r3, [sp, #0]
 8013f18:	9b02      	ldr	r3, [sp, #8]
 8013f1a:	2b00      	cmp	r3, #0
 8013f1c:	f340 8098 	ble.w	8014050 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013f20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013f24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013f30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013f34:	eef0 6a62 	vmov.f32	s13, s5
 8013f38:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013f40:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013f44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013f4c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8013f50:	eef0 6a43 	vmov.f32	s13, s6
 8013f54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013f58:	ee12 2a90 	vmov	r2, s5
 8013f5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013f60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013f62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f6a:	ee13 2a10 	vmov	r2, s6
 8013f6e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013f70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013f72:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013f76:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f7a:	9314      	str	r3, [sp, #80]	@ 0x50
 8013f7c:	9b02      	ldr	r3, [sp, #8]
 8013f7e:	9a05      	ldr	r2, [sp, #20]
 8013f80:	3b01      	subs	r3, #1
 8013f82:	9302      	str	r3, [sp, #8]
 8013f84:	eeb0 3a67 	vmov.f32	s6, s15
 8013f88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013f8a:	eef0 2a47 	vmov.f32	s5, s14
 8013f8e:	bf08      	it	eq
 8013f90:	4613      	moveq	r3, r2
 8013f92:	e72a      	b.n	8013dea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013f94:	140f      	asrs	r7, r1, #16
 8013f96:	d454      	bmi.n	8014042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013f98:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013f9c:	42be      	cmp	r6, r7
 8013f9e:	dd50      	ble.n	8014042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013fa0:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013fa4:	d44d      	bmi.n	8014042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013fa6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013faa:	4544      	cmp	r4, r8
 8013fac:	dd49      	ble.n	8014042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013fae:	f06f 0001 	mvn.w	r0, #1
 8013fb2:	9c04      	ldr	r4, [sp, #16]
 8013fb4:	b236      	sxth	r6, r6
 8013fb6:	fb08 4606 	mla	r6, r8, r6, r4
 8013fba:	f816 8007 	ldrb.w	r8, [r6, r7]
 8013fbe:	9c01      	ldr	r4, [sp, #4]
 8013fc0:	fb00 fa0e 	mul.w	sl, r0, lr
 8013fc4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013fc8:	eb04 0b08 	add.w	fp, r4, r8
 8013fcc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013fd0:	9800      	ldr	r0, [sp, #0]
 8013fd2:	fb16 f609 	smulbb	r6, r6, r9
 8013fd6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8013fda:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013fde:	1227      	asrs	r7, r4, #8
 8013fe0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013fe4:	fb07 6705 	mla	r7, r7, r5, r6
 8013fe8:	10e6      	asrs	r6, r4, #3
 8013fea:	00e4      	lsls	r4, r4, #3
 8013fec:	b2e4      	uxtb	r4, r4
 8013fee:	fb1b fb09 	smulbb	fp, fp, r9
 8013ff2:	9801      	ldr	r0, [sp, #4]
 8013ff4:	fb14 f405 	smulbb	r4, r4, r5
 8013ff8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8013ffc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014000:	fb06 b605 	mla	r6, r6, r5, fp
 8014004:	fb08 4809 	mla	r8, r8, r9, r4
 8014008:	b2bf      	uxth	r7, r7
 801400a:	b2b6      	uxth	r6, r6
 801400c:	fa1f f888 	uxth.w	r8, r8
 8014010:	1c7c      	adds	r4, r7, #1
 8014012:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014016:	f106 0b01 	add.w	fp, r6, #1
 801401a:	f108 0401 	add.w	r4, r8, #1
 801401e:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014022:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014026:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801402a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801402e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014032:	4327      	orrs	r7, r4
 8014034:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8014038:	9800      	ldr	r0, [sp, #0]
 801403a:	ea47 070b 	orr.w	r7, r7, fp
 801403e:	f820 700a 	strh.w	r7, [r0, sl]
 8014042:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014044:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014048:	4401      	add	r1, r0
 801404a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801404c:	4402      	add	r2, r0
 801404e:	e759      	b.n	8013f04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014050:	b007      	add	sp, #28
 8014052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014058 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014058:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801405c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014060:	b085      	sub	sp, #20
 8014062:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014064:	9203      	str	r2, [sp, #12]
 8014066:	6870      	ldr	r0, [r6, #4]
 8014068:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801406c:	fb00 2404 	mla	r4, r0, r4, r2
 8014070:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014072:	6832      	ldr	r2, [r6, #0]
 8014074:	686f      	ldr	r7, [r5, #4]
 8014076:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801407a:	682a      	ldr	r2, [r5, #0]
 801407c:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8014080:	9101      	str	r1, [sp, #4]
 8014082:	9202      	str	r2, [sp, #8]
 8014084:	3704      	adds	r7, #4
 8014086:	9a01      	ldr	r2, [sp, #4]
 8014088:	2a00      	cmp	r2, #0
 801408a:	dc03      	bgt.n	8014094 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801408c:	9a03      	ldr	r2, [sp, #12]
 801408e:	2a00      	cmp	r2, #0
 8014090:	f340 80cc 	ble.w	801422c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014094:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014096:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801409a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801409e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80140a0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80140a4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80140a8:	2b00      	cmp	r3, #0
 80140aa:	dd0d      	ble.n	80140c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80140ac:	1406      	asrs	r6, r0, #16
 80140ae:	d405      	bmi.n	80140bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80140b0:	454e      	cmp	r6, r9
 80140b2:	da03      	bge.n	80140bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80140b4:	1416      	asrs	r6, r2, #16
 80140b6:	d401      	bmi.n	80140bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80140b8:	4546      	cmp	r6, r8
 80140ba:	db06      	blt.n	80140ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80140bc:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80140be:	4460      	add	r0, ip
 80140c0:	4432      	add	r2, r6
 80140c2:	3b01      	subs	r3, #1
 80140c4:	3402      	adds	r4, #2
 80140c6:	e7ef      	b.n	80140a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80140c8:	d00f      	beq.n	80140ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80140ca:	1e5e      	subs	r6, r3, #1
 80140cc:	fb0c 0e06 	mla	lr, ip, r6, r0
 80140d0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80140d4:	d543      	bpl.n	801415e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80140d6:	4698      	mov	r8, r3
 80140d8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80140dc:	f1b8 0f00 	cmp.w	r8, #0
 80140e0:	dc71      	bgt.n	80141c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80140e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140ea:	9b01      	ldr	r3, [sp, #4]
 80140ec:	2b00      	cmp	r3, #0
 80140ee:	f340 809d 	ble.w	801422c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80140f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80140f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80140fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80140fe:	eeb0 6a62 	vmov.f32	s12, s5
 8014102:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014106:	ee31 1a05 	vadd.f32	s2, s2, s10
 801410a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801410e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014112:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014116:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801411a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801411e:	eeb0 6a43 	vmov.f32	s12, s6
 8014122:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014126:	ee12 2a90 	vmov	r2, s5
 801412a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801412e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014130:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014134:	fb92 fcf3 	sdiv	ip, r2, r3
 8014138:	ee13 2a10 	vmov	r2, s6
 801413c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014140:	9312      	str	r3, [sp, #72]	@ 0x48
 8014142:	9b01      	ldr	r3, [sp, #4]
 8014144:	9a03      	ldr	r2, [sp, #12]
 8014146:	3b01      	subs	r3, #1
 8014148:	9301      	str	r3, [sp, #4]
 801414a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801414e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014150:	eeb0 3a67 	vmov.f32	s6, s15
 8014154:	bf08      	it	eq
 8014156:	4613      	moveq	r3, r2
 8014158:	eef0 2a47 	vmov.f32	s5, s14
 801415c:	e793      	b.n	8014086 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801415e:	45ce      	cmp	lr, r9
 8014160:	dab9      	bge.n	80140d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014162:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014164:	fb01 2606 	mla	r6, r1, r6, r2
 8014168:	1436      	asrs	r6, r6, #16
 801416a:	d4b4      	bmi.n	80140d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801416c:	4546      	cmp	r6, r8
 801416e:	dab2      	bge.n	80140d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014170:	4698      	mov	r8, r3
 8014172:	46a2      	mov	sl, r4
 8014174:	f1b8 0f00 	cmp.w	r8, #0
 8014178:	ddb3      	ble.n	80140e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801417a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801417e:	9902      	ldr	r1, [sp, #8]
 8014180:	1416      	asrs	r6, r2, #16
 8014182:	fb09 1606 	mla	r6, r9, r6, r1
 8014186:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801418a:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801418e:	4929      	ldr	r1, [pc, #164]	@ (8014234 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014190:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014194:	eb07 0b0e 	add.w	fp, r7, lr
 8014198:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801419c:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80141a0:	00f6      	lsls	r6, r6, #3
 80141a2:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80141a6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80141aa:	ea49 0606 	orr.w	r6, r9, r6
 80141ae:	f817 900e 	ldrb.w	r9, [r7, lr]
 80141b2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80141b4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80141b8:	f82a 6b02 	strh.w	r6, [sl], #2
 80141bc:	4460      	add	r0, ip
 80141be:	440a      	add	r2, r1
 80141c0:	f108 38ff 	add.w	r8, r8, #4294967295
 80141c4:	e7d6      	b.n	8014174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80141c6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80141ca:	d429      	bmi.n	8014220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80141cc:	68ae      	ldr	r6, [r5, #8]
 80141ce:	454e      	cmp	r6, r9
 80141d0:	dd26      	ble.n	8014220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80141d2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80141d6:	d423      	bmi.n	8014220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80141d8:	68e9      	ldr	r1, [r5, #12]
 80141da:	4559      	cmp	r1, fp
 80141dc:	dd20      	ble.n	8014220 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80141de:	9902      	ldr	r1, [sp, #8]
 80141e0:	fa0f fe86 	sxth.w	lr, r6
 80141e4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80141e8:	f06f 0101 	mvn.w	r1, #1
 80141ec:	f81e e009 	ldrb.w	lr, [lr, r9]
 80141f0:	fb01 f908 	mul.w	r9, r1, r8
 80141f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80141f8:	eb07 060e 	add.w	r6, r7, lr
 80141fc:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014200:	7876      	ldrb	r6, [r6, #1]
 8014202:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8014206:	00f6      	lsls	r6, r6, #3
 8014208:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801420c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014210:	ea4b 0606 	orr.w	r6, fp, r6
 8014214:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014218:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801421c:	f82a 6009 	strh.w	r6, [sl, r9]
 8014220:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8014222:	4460      	add	r0, ip
 8014224:	440a      	add	r2, r1
 8014226:	f108 38ff 	add.w	r8, r8, #4294967295
 801422a:	e757      	b.n	80140dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801422c:	b005      	add	sp, #20
 801422e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014232:	bf00      	nop
 8014234:	fffff800 	.word	0xfffff800

08014238 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014238:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801423c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014240:	b087      	sub	sp, #28
 8014242:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014244:	468b      	mov	fp, r1
 8014246:	9204      	str	r2, [sp, #16]
 8014248:	6841      	ldr	r1, [r0, #4]
 801424a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801424e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014252:	9205      	str	r2, [sp, #20]
 8014254:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014258:	fb01 2404 	mla	r4, r1, r4, r2
 801425c:	6802      	ldr	r2, [r0, #0]
 801425e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014262:	f8dc 2000 	ldr.w	r2, [ip]
 8014266:	9201      	str	r2, [sp, #4]
 8014268:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801426c:	3204      	adds	r2, #4
 801426e:	9202      	str	r2, [sp, #8]
 8014270:	f1bb 0f00 	cmp.w	fp, #0
 8014274:	dc03      	bgt.n	801427e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014276:	9a04      	ldr	r2, [sp, #16]
 8014278:	2a00      	cmp	r2, #0
 801427a:	f340 8138 	ble.w	80144ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801427e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014280:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014284:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014288:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801428a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801428e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014292:	2b00      	cmp	r3, #0
 8014294:	dd0e      	ble.n	80142b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014296:	1402      	asrs	r2, r0, #16
 8014298:	d405      	bmi.n	80142a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801429a:	42ba      	cmp	r2, r7
 801429c:	da03      	bge.n	80142a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801429e:	140a      	asrs	r2, r1, #16
 80142a0:	d401      	bmi.n	80142a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80142a2:	42b2      	cmp	r2, r6
 80142a4:	db07      	blt.n	80142b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80142a6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80142a8:	3b01      	subs	r3, #1
 80142aa:	4410      	add	r0, r2
 80142ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80142ae:	3402      	adds	r4, #2
 80142b0:	4411      	add	r1, r2
 80142b2:	e7ee      	b.n	8014292 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80142b4:	d019      	beq.n	80142ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80142b6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80142b8:	1e5a      	subs	r2, r3, #1
 80142ba:	fb05 0502 	mla	r5, r5, r2, r0
 80142be:	142d      	asrs	r5, r5, #16
 80142c0:	d409      	bmi.n	80142d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80142c2:	42bd      	cmp	r5, r7
 80142c4:	da07      	bge.n	80142d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80142c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80142c8:	fb05 1202 	mla	r2, r5, r2, r1
 80142cc:	1412      	asrs	r2, r2, #16
 80142ce:	d402      	bmi.n	80142d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80142d0:	42b2      	cmp	r2, r6
 80142d2:	f2c0 80ac 	blt.w	801442e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80142d6:	f04f 0e00 	mov.w	lr, #0
 80142da:	eb03 020e 	add.w	r2, r3, lr
 80142de:	2a00      	cmp	r2, #0
 80142e0:	dc3e      	bgt.n	8014360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80142e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142ea:	f1bb 0f00 	cmp.w	fp, #0
 80142ee:	f340 80fe 	ble.w	80144ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80142f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80142fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014302:	eeb0 6a62 	vmov.f32	s12, s5
 8014306:	ee31 1a05 	vadd.f32	s2, s2, s10
 801430a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801430e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014312:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014316:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801431a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801431e:	eeb0 6a43 	vmov.f32	s12, s6
 8014322:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014326:	ee12 2a90 	vmov	r2, s5
 801432a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801432e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014330:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014334:	fb92 f3f3 	sdiv	r3, r2, r3
 8014338:	ee13 2a10 	vmov	r2, s6
 801433c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801433e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014340:	f1bb 0b01 	subs.w	fp, fp, #1
 8014344:	fb92 f3f3 	sdiv	r3, r2, r3
 8014348:	9a04      	ldr	r2, [sp, #16]
 801434a:	9314      	str	r3, [sp, #80]	@ 0x50
 801434c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014350:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014352:	eeb0 3a67 	vmov.f32	s6, s15
 8014356:	bf08      	it	eq
 8014358:	4613      	moveq	r3, r2
 801435a:	eef0 2a47 	vmov.f32	s5, s14
 801435e:	e787      	b.n	8014270 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014360:	1406      	asrs	r6, r0, #16
 8014362:	d45d      	bmi.n	8014420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014364:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014368:	42b5      	cmp	r5, r6
 801436a:	dd59      	ble.n	8014420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801436c:	140f      	asrs	r7, r1, #16
 801436e:	d457      	bmi.n	8014420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014370:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014374:	42ba      	cmp	r2, r7
 8014376:	dd53      	ble.n	8014420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014378:	9a01      	ldr	r2, [sp, #4]
 801437a:	b22d      	sxth	r5, r5
 801437c:	fb07 2505 	mla	r5, r7, r5, r2
 8014380:	5daa      	ldrb	r2, [r5, r6]
 8014382:	9d02      	ldr	r5, [sp, #8]
 8014384:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014388:	0e2e      	lsrs	r6, r5, #24
 801438a:	d049      	beq.n	8014420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801438c:	f06f 0201 	mvn.w	r2, #1
 8014390:	fb02 f20e 	mul.w	r2, r2, lr
 8014394:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014398:	9203      	str	r2, [sp, #12]
 801439a:	9a05      	ldr	r2, [sp, #20]
 801439c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80143a0:	4356      	muls	r6, r2
 80143a2:	1c72      	adds	r2, r6, #1
 80143a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80143a8:	1212      	asrs	r2, r2, #8
 80143aa:	fa1f f982 	uxth.w	r9, r2
 80143ae:	43d2      	mvns	r2, r2
 80143b0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80143b4:	fb16 f609 	smulbb	r6, r6, r9
 80143b8:	b2ed      	uxtb	r5, r5
 80143ba:	ea4f 2728 	mov.w	r7, r8, asr #8
 80143be:	fb15 f509 	smulbb	r5, r5, r9
 80143c2:	b2d2      	uxtb	r2, r2
 80143c4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80143c8:	fb07 6702 	mla	r7, r7, r2, r6
 80143cc:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80143d0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80143d4:	fb1a fa09 	smulbb	sl, sl, r9
 80143d8:	fa5f f888 	uxtb.w	r8, r8
 80143dc:	fb08 5502 	mla	r5, r8, r2, r5
 80143e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80143e4:	fb06 a602 	mla	r6, r6, r2, sl
 80143e8:	b2bf      	uxth	r7, r7
 80143ea:	b2ad      	uxth	r5, r5
 80143ec:	1c7a      	adds	r2, r7, #1
 80143ee:	f105 0a01 	add.w	sl, r5, #1
 80143f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80143f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80143fa:	b2b6      	uxth	r6, r6
 80143fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014400:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014404:	ea4a 0707 	orr.w	r7, sl, r7
 8014408:	f106 0a01 	add.w	sl, r6, #1
 801440c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014410:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014414:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014418:	9a03      	ldr	r2, [sp, #12]
 801441a:	ea47 070a 	orr.w	r7, r7, sl
 801441e:	52a7      	strh	r7, [r4, r2]
 8014420:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014422:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014426:	4410      	add	r0, r2
 8014428:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801442a:	4411      	add	r1, r2
 801442c:	e755      	b.n	80142da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801442e:	f04f 0800 	mov.w	r8, #0
 8014432:	eba3 0208 	sub.w	r2, r3, r8
 8014436:	2a00      	cmp	r2, #0
 8014438:	f77f af53 	ble.w	80142e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801443c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014440:	9f01      	ldr	r7, [sp, #4]
 8014442:	140a      	asrs	r2, r1, #16
 8014444:	fb06 7202 	mla	r2, r6, r2, r7
 8014448:	1405      	asrs	r5, r0, #16
 801444a:	5d52      	ldrb	r2, [r2, r5]
 801444c:	9d02      	ldr	r5, [sp, #8]
 801444e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014452:	0e2e      	lsrs	r6, r5, #24
 8014454:	d044      	beq.n	80144e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014456:	9a05      	ldr	r2, [sp, #20]
 8014458:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801445c:	4356      	muls	r6, r2
 801445e:	1c72      	adds	r2, r6, #1
 8014460:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014464:	1212      	asrs	r2, r2, #8
 8014466:	fa1f f982 	uxth.w	r9, r2
 801446a:	43d2      	mvns	r2, r2
 801446c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014470:	fb16 f609 	smulbb	r6, r6, r9
 8014474:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014478:	b2ed      	uxtb	r5, r5
 801447a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801447e:	fb15 f509 	smulbb	r5, r5, r9
 8014482:	b2d2      	uxtb	r2, r2
 8014484:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014488:	fb07 6702 	mla	r7, r7, r2, r6
 801448c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014490:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014494:	fb1a fa09 	smulbb	sl, sl, r9
 8014498:	fa5f fe8e 	uxtb.w	lr, lr
 801449c:	fb0e 5502 	mla	r5, lr, r2, r5
 80144a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80144a4:	fb06 a602 	mla	r6, r6, r2, sl
 80144a8:	b2bf      	uxth	r7, r7
 80144aa:	b2ad      	uxth	r5, r5
 80144ac:	1c7a      	adds	r2, r7, #1
 80144ae:	f105 0a01 	add.w	sl, r5, #1
 80144b2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80144b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80144ba:	b2b6      	uxth	r6, r6
 80144bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80144c0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80144c4:	ea4a 0707 	orr.w	r7, sl, r7
 80144c8:	f106 0a01 	add.w	sl, r6, #1
 80144cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80144d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80144d4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80144d8:	ea47 070a 	orr.w	r7, r7, sl
 80144dc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80144e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80144e2:	f108 0801 	add.w	r8, r8, #1
 80144e6:	4410      	add	r0, r2
 80144e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80144ea:	4411      	add	r1, r2
 80144ec:	e7a1      	b.n	8014432 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80144ee:	b007      	add	sp, #28
 80144f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80144f4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80144f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144fc:	b085      	sub	sp, #20
 80144fe:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014500:	468b      	mov	fp, r1
 8014502:	6841      	ldr	r1, [r0, #4]
 8014504:	9203      	str	r2, [sp, #12]
 8014506:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801450a:	fb01 2404 	mla	r4, r1, r4, r2
 801450e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014512:	6802      	ldr	r2, [r0, #0]
 8014514:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014518:	f8de 2000 	ldr.w	r2, [lr]
 801451c:	9200      	str	r2, [sp, #0]
 801451e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014522:	3204      	adds	r2, #4
 8014524:	9201      	str	r2, [sp, #4]
 8014526:	f1bb 0f00 	cmp.w	fp, #0
 801452a:	dc03      	bgt.n	8014534 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801452c:	9a03      	ldr	r2, [sp, #12]
 801452e:	2a00      	cmp	r2, #0
 8014530:	f340 8153 	ble.w	80147da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014534:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014536:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801453a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801453e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014540:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014544:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014548:	2b00      	cmp	r3, #0
 801454a:	dd0e      	ble.n	801456a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801454c:	1408      	asrs	r0, r1, #16
 801454e:	d405      	bmi.n	801455c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014550:	42b8      	cmp	r0, r7
 8014552:	da03      	bge.n	801455c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014554:	1410      	asrs	r0, r2, #16
 8014556:	d401      	bmi.n	801455c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014558:	42b0      	cmp	r0, r6
 801455a:	db07      	blt.n	801456c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801455c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801455e:	3b01      	subs	r3, #1
 8014560:	4401      	add	r1, r0
 8014562:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014564:	3402      	adds	r4, #2
 8014566:	4402      	add	r2, r0
 8014568:	e7ee      	b.n	8014548 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801456a:	d017      	beq.n	801459c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801456c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801456e:	1e58      	subs	r0, r3, #1
 8014570:	fb05 1500 	mla	r5, r5, r0, r1
 8014574:	142d      	asrs	r5, r5, #16
 8014576:	d409      	bmi.n	801458c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014578:	42bd      	cmp	r5, r7
 801457a:	da07      	bge.n	801458c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801457c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801457e:	fb05 2000 	mla	r0, r5, r0, r2
 8014582:	1400      	asrs	r0, r0, #16
 8014584:	d402      	bmi.n	801458c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014586:	42b0      	cmp	r0, r6
 8014588:	f2c0 80bc 	blt.w	8014704 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801458c:	2600      	movs	r6, #0
 801458e:	1998      	adds	r0, r3, r6
 8014590:	2800      	cmp	r0, #0
 8014592:	dc3e      	bgt.n	8014612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014594:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014598:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801459c:	f1bb 0f00 	cmp.w	fp, #0
 80145a0:	f340 811b 	ble.w	80147da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80145a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145b4:	eeb0 6a62 	vmov.f32	s12, s5
 80145b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80145d0:	eeb0 6a43 	vmov.f32	s12, s6
 80145d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145d8:	ee12 2a90 	vmov	r2, s5
 80145dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80145ea:	ee13 2a10 	vmov	r2, s6
 80145ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80145f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80145f2:	f1bb 0b01 	subs.w	fp, fp, #1
 80145f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80145fa:	9a03      	ldr	r2, [sp, #12]
 80145fc:	9312      	str	r3, [sp, #72]	@ 0x48
 80145fe:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014602:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014604:	eeb0 3a67 	vmov.f32	s6, s15
 8014608:	bf08      	it	eq
 801460a:	4613      	moveq	r3, r2
 801460c:	eef0 2a47 	vmov.f32	s5, s14
 8014610:	e789      	b.n	8014526 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014612:	140f      	asrs	r7, r1, #16
 8014614:	d426      	bmi.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014616:	f8de 5008 	ldr.w	r5, [lr, #8]
 801461a:	42bd      	cmp	r5, r7
 801461c:	dd22      	ble.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801461e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014622:	d41f      	bmi.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014624:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014628:	4560      	cmp	r0, ip
 801462a:	dd1b      	ble.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801462c:	9800      	ldr	r0, [sp, #0]
 801462e:	b22d      	sxth	r5, r5
 8014630:	fb0c 0505 	mla	r5, ip, r5, r0
 8014634:	5de8      	ldrb	r0, [r5, r7]
 8014636:	9d01      	ldr	r5, [sp, #4]
 8014638:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801463c:	0e07      	lsrs	r7, r0, #24
 801463e:	2fff      	cmp	r7, #255	@ 0xff
 8014640:	d116      	bne.n	8014670 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014642:	f06f 0501 	mvn.w	r5, #1
 8014646:	fb05 f706 	mul.w	r7, r5, r6
 801464a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801464e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014652:	0945      	lsrs	r5, r0, #5
 8014654:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014658:	ea4c 0505 	orr.w	r5, ip, r5
 801465c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014660:	4305      	orrs	r5, r0
 8014662:	53e5      	strh	r5, [r4, r7]
 8014664:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014666:	3e01      	subs	r6, #1
 8014668:	4401      	add	r1, r0
 801466a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801466c:	4402      	add	r2, r0
 801466e:	e78e      	b.n	801458e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014670:	b2fd      	uxtb	r5, r7
 8014672:	2f00      	cmp	r7, #0
 8014674:	d0f6      	beq.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014676:	f06f 0701 	mvn.w	r7, #1
 801467a:	fa1f f985 	uxth.w	r9, r5
 801467e:	43ed      	mvns	r5, r5
 8014680:	4377      	muls	r7, r6
 8014682:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014686:	9702      	str	r7, [sp, #8]
 8014688:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801468c:	fb17 f709 	smulbb	r7, r7, r9
 8014690:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014694:	b2c0      	uxtb	r0, r0
 8014696:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801469a:	fb10 f009 	smulbb	r0, r0, r9
 801469e:	b2ed      	uxtb	r5, r5
 80146a0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80146a4:	fb0c 7c05 	mla	ip, ip, r5, r7
 80146a8:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80146ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80146b0:	fb1a fa09 	smulbb	sl, sl, r9
 80146b4:	fa5f f888 	uxtb.w	r8, r8
 80146b8:	fb08 0005 	mla	r0, r8, r5, r0
 80146bc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80146c0:	fb07 a705 	mla	r7, r7, r5, sl
 80146c4:	b280      	uxth	r0, r0
 80146c6:	fa1f fc8c 	uxth.w	ip, ip
 80146ca:	f100 0a01 	add.w	sl, r0, #1
 80146ce:	f10c 0501 	add.w	r5, ip, #1
 80146d2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80146d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80146da:	b2bf      	uxth	r7, r7
 80146dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80146e0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80146e4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80146e8:	f107 0a01 	add.w	sl, r7, #1
 80146ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80146f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80146f4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80146f8:	9802      	ldr	r0, [sp, #8]
 80146fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80146fe:	f824 c000 	strh.w	ip, [r4, r0]
 8014702:	e7af      	b.n	8014664 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014704:	f04f 0800 	mov.w	r8, #0
 8014708:	eba3 0008 	sub.w	r0, r3, r8
 801470c:	2800      	cmp	r0, #0
 801470e:	f77f af41 	ble.w	8014594 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014712:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014716:	9f00      	ldr	r7, [sp, #0]
 8014718:	1410      	asrs	r0, r2, #16
 801471a:	fb06 7000 	mla	r0, r6, r0, r7
 801471e:	140d      	asrs	r5, r1, #16
 8014720:	5d40      	ldrb	r0, [r0, r5]
 8014722:	9d01      	ldr	r5, [sp, #4]
 8014724:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014728:	0e2e      	lsrs	r6, r5, #24
 801472a:	2eff      	cmp	r6, #255	@ 0xff
 801472c:	d112      	bne.n	8014754 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801472e:	482c      	ldr	r0, [pc, #176]	@ (80147e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014730:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014734:	0968      	lsrs	r0, r5, #5
 8014736:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801473a:	4330      	orrs	r0, r6
 801473c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014740:	4328      	orrs	r0, r5
 8014742:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014746:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014748:	f108 0801 	add.w	r8, r8, #1
 801474c:	4401      	add	r1, r0
 801474e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014750:	4402      	add	r2, r0
 8014752:	e7d9      	b.n	8014708 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014754:	b2f0      	uxtb	r0, r6
 8014756:	2e00      	cmp	r6, #0
 8014758:	d0f5      	beq.n	8014746 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801475a:	fa1f f980 	uxth.w	r9, r0
 801475e:	43c0      	mvns	r0, r0
 8014760:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014764:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014768:	fb16 f609 	smulbb	r6, r6, r9
 801476c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014770:	b2ed      	uxtb	r5, r5
 8014772:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014776:	fb15 f509 	smulbb	r5, r5, r9
 801477a:	b2c0      	uxtb	r0, r0
 801477c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014780:	fb07 6700 	mla	r7, r7, r0, r6
 8014784:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014788:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801478c:	fb1a fa09 	smulbb	sl, sl, r9
 8014790:	fa5f fc8c 	uxtb.w	ip, ip
 8014794:	fb0c 5500 	mla	r5, ip, r0, r5
 8014798:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801479c:	fb06 a600 	mla	r6, r6, r0, sl
 80147a0:	b2bf      	uxth	r7, r7
 80147a2:	b2ad      	uxth	r5, r5
 80147a4:	1c78      	adds	r0, r7, #1
 80147a6:	f105 0a01 	add.w	sl, r5, #1
 80147aa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80147ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80147b2:	b2b6      	uxth	r6, r6
 80147b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80147b8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80147bc:	ea4a 0707 	orr.w	r7, sl, r7
 80147c0:	f106 0a01 	add.w	sl, r6, #1
 80147c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80147c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80147cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80147d0:	ea47 070a 	orr.w	r7, r7, sl
 80147d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80147d8:	e7b5      	b.n	8014746 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80147da:	b005      	add	sp, #20
 80147dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147e0:	fffff800 	.word	0xfffff800

080147e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80147e4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80147e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80147ec:	b087      	sub	sp, #28
 80147ee:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80147f0:	468b      	mov	fp, r1
 80147f2:	9204      	str	r2, [sp, #16]
 80147f4:	6861      	ldr	r1, [r4, #4]
 80147f6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80147fa:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80147fe:	9205      	str	r2, [sp, #20]
 8014800:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014804:	fb01 2000 	mla	r0, r1, r0, r2
 8014808:	6822      	ldr	r2, [r4, #0]
 801480a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801480e:	f8de 2000 	ldr.w	r2, [lr]
 8014812:	9201      	str	r2, [sp, #4]
 8014814:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014818:	9202      	str	r2, [sp, #8]
 801481a:	f1bb 0f00 	cmp.w	fp, #0
 801481e:	dc03      	bgt.n	8014828 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014820:	9a04      	ldr	r2, [sp, #16]
 8014822:	2a00      	cmp	r2, #0
 8014824:	f340 8142 	ble.w	8014aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014828:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801482a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801482e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014832:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014834:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014838:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801483c:	2b00      	cmp	r3, #0
 801483e:	dd0e      	ble.n	801485e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014840:	140c      	asrs	r4, r1, #16
 8014842:	d405      	bmi.n	8014850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014844:	42bc      	cmp	r4, r7
 8014846:	da03      	bge.n	8014850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014848:	1414      	asrs	r4, r2, #16
 801484a:	d401      	bmi.n	8014850 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801484c:	42b4      	cmp	r4, r6
 801484e:	db07      	blt.n	8014860 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014850:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014852:	3b01      	subs	r3, #1
 8014854:	4421      	add	r1, r4
 8014856:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014858:	3002      	adds	r0, #2
 801485a:	4422      	add	r2, r4
 801485c:	e7ee      	b.n	801483c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801485e:	d019      	beq.n	8014894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014860:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014862:	1e5c      	subs	r4, r3, #1
 8014864:	fb05 1504 	mla	r5, r5, r4, r1
 8014868:	142d      	asrs	r5, r5, #16
 801486a:	d409      	bmi.n	8014880 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801486c:	42bd      	cmp	r5, r7
 801486e:	da07      	bge.n	8014880 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014870:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014872:	fb05 2404 	mla	r4, r5, r4, r2
 8014876:	1424      	asrs	r4, r4, #16
 8014878:	d402      	bmi.n	8014880 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801487a:	42b4      	cmp	r4, r6
 801487c:	f2c0 80b1 	blt.w	80149e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8014880:	f04f 0800 	mov.w	r8, #0
 8014884:	eb03 0408 	add.w	r4, r3, r8
 8014888:	2c00      	cmp	r4, #0
 801488a:	dc3e      	bgt.n	801490a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801488c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014890:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014894:	f1bb 0f00 	cmp.w	fp, #0
 8014898:	f340 8108 	ble.w	8014aac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801489c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80148a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148ac:	eeb0 6a62 	vmov.f32	s12, s5
 80148b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148c4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80148c8:	eeb0 6a43 	vmov.f32	s12, s6
 80148cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80148d0:	ee12 2a90 	vmov	r2, s5
 80148d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148de:	fb92 f3f3 	sdiv	r3, r2, r3
 80148e2:	ee13 2a10 	vmov	r2, s6
 80148e6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80148e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148ea:	f1bb 0b01 	subs.w	fp, fp, #1
 80148ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80148f2:	9a04      	ldr	r2, [sp, #16]
 80148f4:	9314      	str	r3, [sp, #80]	@ 0x50
 80148f6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80148fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80148fc:	eeb0 3a67 	vmov.f32	s6, s15
 8014900:	bf08      	it	eq
 8014902:	4613      	moveq	r3, r2
 8014904:	eef0 2a47 	vmov.f32	s5, s14
 8014908:	e787      	b.n	801481a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801490a:	140e      	asrs	r6, r1, #16
 801490c:	d462      	bmi.n	80149d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801490e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014912:	42b5      	cmp	r5, r6
 8014914:	dd5e      	ble.n	80149d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014916:	1417      	asrs	r7, r2, #16
 8014918:	d45c      	bmi.n	80149d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801491a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801491e:	42bc      	cmp	r4, r7
 8014920:	dd58      	ble.n	80149d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014922:	b22d      	sxth	r5, r5
 8014924:	fb07 6505 	mla	r5, r7, r5, r6
 8014928:	9c02      	ldr	r4, [sp, #8]
 801492a:	5d66      	ldrb	r6, [r4, r5]
 801492c:	2e00      	cmp	r6, #0
 801492e:	d051      	beq.n	80149d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8014930:	9c01      	ldr	r4, [sp, #4]
 8014932:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8014936:	f06f 0401 	mvn.w	r4, #1
 801493a:	fb04 f408 	mul.w	r4, r4, r8
 801493e:	5b05      	ldrh	r5, [r0, r4]
 8014940:	9403      	str	r4, [sp, #12]
 8014942:	9c05      	ldr	r4, [sp, #20]
 8014944:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014948:	4366      	muls	r6, r4
 801494a:	1c74      	adds	r4, r6, #1
 801494c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014950:	1224      	asrs	r4, r4, #8
 8014952:	b2a7      	uxth	r7, r4
 8014954:	43e4      	mvns	r4, r4
 8014956:	122e      	asrs	r6, r5, #8
 8014958:	b2e4      	uxtb	r4, r4
 801495a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801495e:	fb16 f604 	smulbb	r6, r6, r4
 8014962:	00ed      	lsls	r5, r5, #3
 8014964:	b2ed      	uxtb	r5, r5
 8014966:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801496a:	fb15 f504 	smulbb	r5, r5, r4
 801496e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014972:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014976:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801497a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801497e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014982:	fb1a fa04 	smulbb	sl, sl, r4
 8014986:	fa5f f989 	uxtb.w	r9, r9
 801498a:	fb09 5507 	mla	r5, r9, r7, r5
 801498e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014992:	fb06 a607 	mla	r6, r6, r7, sl
 8014996:	fa1f fc8c 	uxth.w	ip, ip
 801499a:	b2ad      	uxth	r5, r5
 801499c:	f10c 0401 	add.w	r4, ip, #1
 80149a0:	f105 0a01 	add.w	sl, r5, #1
 80149a4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80149a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80149ac:	b2b6      	uxth	r6, r6
 80149ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80149b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80149b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80149ba:	f106 0a01 	add.w	sl, r6, #1
 80149be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80149c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80149c6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80149ca:	9c03      	ldr	r4, [sp, #12]
 80149cc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80149d0:	f820 c004 	strh.w	ip, [r0, r4]
 80149d4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80149d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80149da:	4421      	add	r1, r4
 80149dc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80149de:	4422      	add	r2, r4
 80149e0:	e750      	b.n	8014884 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80149e2:	f04f 0900 	mov.w	r9, #0
 80149e6:	eba3 0409 	sub.w	r4, r3, r9
 80149ea:	2c00      	cmp	r4, #0
 80149ec:	f77f af4e 	ble.w	801488c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80149f0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80149f4:	140d      	asrs	r5, r1, #16
 80149f6:	1414      	asrs	r4, r2, #16
 80149f8:	fb06 5404 	mla	r4, r6, r4, r5
 80149fc:	9d02      	ldr	r5, [sp, #8]
 80149fe:	5d2e      	ldrb	r6, [r5, r4]
 8014a00:	2e00      	cmp	r6, #0
 8014a02:	d04c      	beq.n	8014a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8014a04:	9d01      	ldr	r5, [sp, #4]
 8014a06:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8014a0a:	9c05      	ldr	r4, [sp, #20]
 8014a0c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014a10:	4366      	muls	r6, r4
 8014a12:	1c74      	adds	r4, r6, #1
 8014a14:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8014a18:	1224      	asrs	r4, r4, #8
 8014a1a:	b2a7      	uxth	r7, r4
 8014a1c:	43e4      	mvns	r4, r4
 8014a1e:	122e      	asrs	r6, r5, #8
 8014a20:	b2e4      	uxtb	r4, r4
 8014a22:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014a26:	fb16 f604 	smulbb	r6, r6, r4
 8014a2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014a2e:	00ed      	lsls	r5, r5, #3
 8014a30:	b2ed      	uxtb	r5, r5
 8014a32:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014a36:	fb15 f504 	smulbb	r5, r5, r4
 8014a3a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014a3e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014a42:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014a46:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014a4a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014a4e:	fb1a fa04 	smulbb	sl, sl, r4
 8014a52:	fa5f f888 	uxtb.w	r8, r8
 8014a56:	fb08 5507 	mla	r5, r8, r7, r5
 8014a5a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014a5e:	fb06 a607 	mla	r6, r6, r7, sl
 8014a62:	fa1f fc8c 	uxth.w	ip, ip
 8014a66:	b2ad      	uxth	r5, r5
 8014a68:	f10c 0401 	add.w	r4, ip, #1
 8014a6c:	f105 0a01 	add.w	sl, r5, #1
 8014a70:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014a74:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014a78:	b2b6      	uxth	r6, r6
 8014a7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014a7e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014a82:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014a86:	f106 0a01 	add.w	sl, r6, #1
 8014a8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014a8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014a92:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014a96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014a9a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014a9e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014aa0:	f109 0901 	add.w	r9, r9, #1
 8014aa4:	4421      	add	r1, r4
 8014aa6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014aa8:	4422      	add	r2, r4
 8014aaa:	e79c      	b.n	80149e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014aac:	b007      	add	sp, #28
 8014aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ab2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014ab6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014aba:	b085      	sub	sp, #20
 8014abc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8014abe:	468b      	mov	fp, r1
 8014ac0:	6861      	ldr	r1, [r4, #4]
 8014ac2:	9203      	str	r2, [sp, #12]
 8014ac4:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8014ac8:	fb01 2000 	mla	r0, r1, r0, r2
 8014acc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014ad0:	6822      	ldr	r2, [r4, #0]
 8014ad2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014ad6:	f8d8 2000 	ldr.w	r2, [r8]
 8014ada:	9200      	str	r2, [sp, #0]
 8014adc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014ae0:	9201      	str	r2, [sp, #4]
 8014ae2:	f1bb 0f00 	cmp.w	fp, #0
 8014ae6:	dc03      	bgt.n	8014af0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014ae8:	9a03      	ldr	r2, [sp, #12]
 8014aea:	2a00      	cmp	r2, #0
 8014aec:	f340 8146 	ble.w	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014af0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014af2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014af6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014afa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014afc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014b00:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014b04:	2b00      	cmp	r3, #0
 8014b06:	dd0e      	ble.n	8014b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014b08:	140c      	asrs	r4, r1, #16
 8014b0a:	d405      	bmi.n	8014b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014b0c:	42bc      	cmp	r4, r7
 8014b0e:	da03      	bge.n	8014b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014b10:	1414      	asrs	r4, r2, #16
 8014b12:	d401      	bmi.n	8014b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014b14:	42b4      	cmp	r4, r6
 8014b16:	db07      	blt.n	8014b28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014b18:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014b1a:	3b01      	subs	r3, #1
 8014b1c:	4421      	add	r1, r4
 8014b1e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014b20:	3002      	adds	r0, #2
 8014b22:	4422      	add	r2, r4
 8014b24:	e7ee      	b.n	8014b04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014b26:	d017      	beq.n	8014b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014b28:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014b2a:	1e5c      	subs	r4, r3, #1
 8014b2c:	fb05 1504 	mla	r5, r5, r4, r1
 8014b30:	142d      	asrs	r5, r5, #16
 8014b32:	d409      	bmi.n	8014b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b34:	42bd      	cmp	r5, r7
 8014b36:	da07      	bge.n	8014b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014b3a:	fb05 2404 	mla	r4, r5, r4, r2
 8014b3e:	1424      	asrs	r4, r4, #16
 8014b40:	d402      	bmi.n	8014b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014b42:	42b4      	cmp	r4, r6
 8014b44:	f2c0 80b3 	blt.w	8014cae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8014b48:	2600      	movs	r6, #0
 8014b4a:	199c      	adds	r4, r3, r6
 8014b4c:	2c00      	cmp	r4, #0
 8014b4e:	dc3e      	bgt.n	8014bce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014b50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014b54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014b58:	f1bb 0f00 	cmp.w	fp, #0
 8014b5c:	f340 810e 	ble.w	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014b60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014b64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014b68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014b6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014b70:	eeb0 6a62 	vmov.f32	s12, s5
 8014b74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014b78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014b80:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014b84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b88:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014b8c:	eeb0 6a43 	vmov.f32	s12, s6
 8014b90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b94:	ee12 2a90 	vmov	r2, s5
 8014b98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014b9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ba6:	ee13 2a10 	vmov	r2, s6
 8014baa:	9311      	str	r3, [sp, #68]	@ 0x44
 8014bac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014bae:	f1bb 0b01 	subs.w	fp, fp, #1
 8014bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8014bb6:	9a03      	ldr	r2, [sp, #12]
 8014bb8:	9312      	str	r3, [sp, #72]	@ 0x48
 8014bba:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014bbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014bc0:	eeb0 3a67 	vmov.f32	s6, s15
 8014bc4:	bf08      	it	eq
 8014bc6:	4613      	moveq	r3, r2
 8014bc8:	eef0 2a47 	vmov.f32	s5, s14
 8014bcc:	e789      	b.n	8014ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014bce:	140f      	asrs	r7, r1, #16
 8014bd0:	d418      	bmi.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014bd2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014bd6:	42bd      	cmp	r5, r7
 8014bd8:	dd14      	ble.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014bda:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014bde:	d411      	bmi.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014be0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014be4:	4564      	cmp	r4, ip
 8014be6:	dd0d      	ble.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014be8:	b22d      	sxth	r5, r5
 8014bea:	fb0c 7505 	mla	r5, ip, r5, r7
 8014bee:	9c01      	ldr	r4, [sp, #4]
 8014bf0:	5d64      	ldrb	r4, [r4, r5]
 8014bf2:	2cff      	cmp	r4, #255	@ 0xff
 8014bf4:	d10c      	bne.n	8014c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014bf6:	9c00      	ldr	r4, [sp, #0]
 8014bf8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014bfc:	f06f 0401 	mvn.w	r4, #1
 8014c00:	4374      	muls	r4, r6
 8014c02:	5305      	strh	r5, [r0, r4]
 8014c04:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014c06:	3e01      	subs	r6, #1
 8014c08:	4421      	add	r1, r4
 8014c0a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014c0c:	4422      	add	r2, r4
 8014c0e:	e79c      	b.n	8014b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014c10:	2c00      	cmp	r4, #0
 8014c12:	d0f7      	beq.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014c14:	9f00      	ldr	r7, [sp, #0]
 8014c16:	fa1f fc84 	uxth.w	ip, r4
 8014c1a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8014c1e:	f06f 0501 	mvn.w	r5, #1
 8014c22:	43e4      	mvns	r4, r4
 8014c24:	4375      	muls	r5, r6
 8014c26:	9502      	str	r5, [sp, #8]
 8014c28:	5b45      	ldrh	r5, [r0, r5]
 8014c2a:	b2e4      	uxtb	r4, r4
 8014c2c:	122f      	asrs	r7, r5, #8
 8014c2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014c32:	fb17 f704 	smulbb	r7, r7, r4
 8014c36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014c3a:	00ed      	lsls	r5, r5, #3
 8014c3c:	b2ed      	uxtb	r5, r5
 8014c3e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8014c42:	fb15 f504 	smulbb	r5, r5, r4
 8014c46:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014c4a:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8014c4e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014c52:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8014c56:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014c5a:	fb1a fa04 	smulbb	sl, sl, r4
 8014c5e:	fa5f f989 	uxtb.w	r9, r9
 8014c62:	fb09 550c 	mla	r5, r9, ip, r5
 8014c66:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014c6a:	fb07 a70c 	mla	r7, r7, ip, sl
 8014c6e:	fa1f fe8e 	uxth.w	lr, lr
 8014c72:	b2ad      	uxth	r5, r5
 8014c74:	f10e 0401 	add.w	r4, lr, #1
 8014c78:	f105 0a01 	add.w	sl, r5, #1
 8014c7c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8014c80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c84:	b2bf      	uxth	r7, r7
 8014c86:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c8a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014c8e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8014c92:	f107 0a01 	add.w	sl, r7, #1
 8014c96:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014c9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c9e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014ca2:	9c02      	ldr	r4, [sp, #8]
 8014ca4:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014ca8:	f820 e004 	strh.w	lr, [r0, r4]
 8014cac:	e7aa      	b.n	8014c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014cae:	f04f 0900 	mov.w	r9, #0
 8014cb2:	eba3 0409 	sub.w	r4, r3, r9
 8014cb6:	2c00      	cmp	r4, #0
 8014cb8:	f77f af4a 	ble.w	8014b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014cbc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014cc0:	1414      	asrs	r4, r2, #16
 8014cc2:	140d      	asrs	r5, r1, #16
 8014cc4:	fb06 5504 	mla	r5, r6, r4, r5
 8014cc8:	9c01      	ldr	r4, [sp, #4]
 8014cca:	5d64      	ldrb	r4, [r4, r5]
 8014ccc:	2cff      	cmp	r4, #255	@ 0xff
 8014cce:	d10b      	bne.n	8014ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014cd0:	9c00      	ldr	r4, [sp, #0]
 8014cd2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014cd6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014cda:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8014cdc:	f109 0901 	add.w	r9, r9, #1
 8014ce0:	4421      	add	r1, r4
 8014ce2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8014ce4:	4422      	add	r2, r4
 8014ce6:	e7e4      	b.n	8014cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014ce8:	2c00      	cmp	r4, #0
 8014cea:	d0f6      	beq.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014cec:	b2a7      	uxth	r7, r4
 8014cee:	43e4      	mvns	r4, r4
 8014cf0:	9e00      	ldr	r6, [sp, #0]
 8014cf2:	b2e4      	uxtb	r4, r4
 8014cf4:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8014cf8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014cfc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014d00:	122e      	asrs	r6, r5, #8
 8014d02:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014d06:	fb16 f604 	smulbb	r6, r6, r4
 8014d0a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014d0e:	00ed      	lsls	r5, r5, #3
 8014d10:	b2ed      	uxtb	r5, r5
 8014d12:	fb15 f504 	smulbb	r5, r5, r4
 8014d16:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014d1a:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014d1e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8014d22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014d26:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014d2a:	fb1a fa04 	smulbb	sl, sl, r4
 8014d2e:	fa5f fe8e 	uxtb.w	lr, lr
 8014d32:	fb0e 5507 	mla	r5, lr, r7, r5
 8014d36:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014d3a:	fb06 a607 	mla	r6, r6, r7, sl
 8014d3e:	fa1f fc8c 	uxth.w	ip, ip
 8014d42:	b2ad      	uxth	r5, r5
 8014d44:	f10c 0401 	add.w	r4, ip, #1
 8014d48:	f105 0a01 	add.w	sl, r5, #1
 8014d4c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014d50:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014d54:	b2b6      	uxth	r6, r6
 8014d56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014d5a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014d5e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014d62:	f106 0a01 	add.w	sl, r6, #1
 8014d66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d6e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014d72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014d76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014d7a:	e7ae      	b.n	8014cda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014d7c:	b005      	add	sp, #20
 8014d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d86:	b085      	sub	sp, #20
 8014d88:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014d8a:	9100      	str	r1, [sp, #0]
 8014d8c:	9203      	str	r2, [sp, #12]
 8014d8e:	6841      	ldr	r1, [r0, #4]
 8014d90:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8014d94:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014d98:	9201      	str	r2, [sp, #4]
 8014d9a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014d9e:	fb01 2404 	mla	r4, r1, r4, r2
 8014da2:	6802      	ldr	r2, [r0, #0]
 8014da4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014da8:	f8de 2000 	ldr.w	r2, [lr]
 8014dac:	9202      	str	r2, [sp, #8]
 8014dae:	9a01      	ldr	r2, [sp, #4]
 8014db0:	43d6      	mvns	r6, r2
 8014db2:	b2f6      	uxtb	r6, r6
 8014db4:	9a00      	ldr	r2, [sp, #0]
 8014db6:	2a00      	cmp	r2, #0
 8014db8:	dc03      	bgt.n	8014dc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014dba:	9a03      	ldr	r2, [sp, #12]
 8014dbc:	2a00      	cmp	r2, #0
 8014dbe:	f340 8124 	ble.w	801500a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014dc2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014dc4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014dc8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014dcc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014dce:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014dd2:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014dd6:	2b00      	cmp	r3, #0
 8014dd8:	dd0e      	ble.n	8014df8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014dda:	1408      	asrs	r0, r1, #16
 8014ddc:	d405      	bmi.n	8014dea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014dde:	4560      	cmp	r0, ip
 8014de0:	da03      	bge.n	8014dea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014de2:	1410      	asrs	r0, r2, #16
 8014de4:	d401      	bmi.n	8014dea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014de6:	42b8      	cmp	r0, r7
 8014de8:	db07      	blt.n	8014dfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014dea:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014dec:	3b01      	subs	r3, #1
 8014dee:	4401      	add	r1, r0
 8014df0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014df2:	3402      	adds	r4, #2
 8014df4:	4402      	add	r2, r0
 8014df6:	e7ee      	b.n	8014dd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014df8:	d06e      	beq.n	8014ed8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014dfa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014dfc:	1e58      	subs	r0, r3, #1
 8014dfe:	fb05 1500 	mla	r5, r5, r0, r1
 8014e02:	142d      	asrs	r5, r5, #16
 8014e04:	d45c      	bmi.n	8014ec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014e06:	4565      	cmp	r5, ip
 8014e08:	da5a      	bge.n	8014ec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014e0a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014e0c:	fb05 2000 	mla	r0, r5, r0, r2
 8014e10:	1400      	asrs	r0, r0, #16
 8014e12:	d455      	bmi.n	8014ec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014e14:	42b8      	cmp	r0, r7
 8014e16:	da53      	bge.n	8014ec0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014e18:	4699      	mov	r9, r3
 8014e1a:	46a2      	mov	sl, r4
 8014e1c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014e20:	f1b9 0f00 	cmp.w	r9, #0
 8014e24:	dd54      	ble.n	8014ed0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014e2a:	140d      	asrs	r5, r1, #16
 8014e2c:	1410      	asrs	r0, r2, #16
 8014e2e:	fb07 5000 	mla	r0, r7, r0, r5
 8014e32:	9d02      	ldr	r5, [sp, #8]
 8014e34:	f109 39ff 	add.w	r9, r9, #4294967295
 8014e38:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014e3c:	f8ba 5000 	ldrh.w	r5, [sl]
 8014e40:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014e44:	122f      	asrs	r7, r5, #8
 8014e46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e4a:	fb17 f706 	smulbb	r7, r7, r6
 8014e4e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014e52:	00ed      	lsls	r5, r5, #3
 8014e54:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014e58:	b2ed      	uxtb	r5, r5
 8014e5a:	fb18 f806 	smulbb	r8, r8, r6
 8014e5e:	fb15 f506 	smulbb	r5, r5, r6
 8014e62:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014e66:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014e6a:	10c7      	asrs	r7, r0, #3
 8014e6c:	00c0      	lsls	r0, r0, #3
 8014e6e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014e72:	b2c0      	uxtb	r0, r0
 8014e74:	fb07 870b 	mla	r7, r7, fp, r8
 8014e78:	fb00 500b 	mla	r0, r0, fp, r5
 8014e7c:	fa1f fc8c 	uxth.w	ip, ip
 8014e80:	b280      	uxth	r0, r0
 8014e82:	b2bf      	uxth	r7, r7
 8014e84:	f10c 0501 	add.w	r5, ip, #1
 8014e88:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e8c:	f107 0801 	add.w	r8, r7, #1
 8014e90:	1c45      	adds	r5, r0, #1
 8014e92:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014e96:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014e9a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014e9c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014ea0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014ea4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014ea8:	ea45 0c0c 	orr.w	ip, r5, ip
 8014eac:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8014eb0:	4401      	add	r1, r0
 8014eb2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014eb4:	ea4c 0c08 	orr.w	ip, ip, r8
 8014eb8:	f82a cb02 	strh.w	ip, [sl], #2
 8014ebc:	4402      	add	r2, r0
 8014ebe:	e7af      	b.n	8014e20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014ec0:	f04f 0800 	mov.w	r8, #0
 8014ec4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014ec8:	eb03 0008 	add.w	r0, r3, r8
 8014ecc:	2800      	cmp	r0, #0
 8014ece:	dc41      	bgt.n	8014f54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014ed0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ed4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ed8:	9b00      	ldr	r3, [sp, #0]
 8014eda:	2b00      	cmp	r3, #0
 8014edc:	f340 8095 	ble.w	801500a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8014ee0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014ee4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ee8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014eec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014ef0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ef4:	eef0 6a62 	vmov.f32	s13, s5
 8014ef8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014efc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f0c:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8014f10:	eef0 6a43 	vmov.f32	s13, s6
 8014f14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f18:	ee12 2a90 	vmov	r2, s5
 8014f1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f26:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f2a:	ee13 2a10 	vmov	r2, s6
 8014f2e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014f30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f32:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f3a:	9312      	str	r3, [sp, #72]	@ 0x48
 8014f3c:	9b00      	ldr	r3, [sp, #0]
 8014f3e:	9a03      	ldr	r2, [sp, #12]
 8014f40:	3b01      	subs	r3, #1
 8014f42:	9300      	str	r3, [sp, #0]
 8014f44:	eeb0 3a67 	vmov.f32	s6, s15
 8014f48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f4a:	eef0 2a47 	vmov.f32	s5, s14
 8014f4e:	bf08      	it	eq
 8014f50:	4613      	moveq	r3, r2
 8014f52:	e72f      	b.n	8014db4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014f54:	140f      	asrs	r7, r1, #16
 8014f56:	d451      	bmi.n	8014ffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014f58:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014f5c:	42bd      	cmp	r5, r7
 8014f5e:	dd4d      	ble.n	8014ffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014f60:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014f64:	d44a      	bmi.n	8014ffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014f66:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014f6a:	4560      	cmp	r0, ip
 8014f6c:	dd46      	ble.n	8014ffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014f6e:	b22d      	sxth	r5, r5
 8014f70:	fb0c 7505 	mla	r5, ip, r5, r7
 8014f74:	9802      	ldr	r0, [sp, #8]
 8014f76:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014f7a:	f06f 0501 	mvn.w	r5, #1
 8014f7e:	fb05 fb08 	mul.w	fp, r5, r8
 8014f82:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014f86:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014f8a:	122f      	asrs	r7, r5, #8
 8014f8c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014f90:	fb17 f706 	smulbb	r7, r7, r6
 8014f94:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014f98:	00ed      	lsls	r5, r5, #3
 8014f9a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014f9e:	b2ed      	uxtb	r5, r5
 8014fa0:	fb19 f906 	smulbb	r9, r9, r6
 8014fa4:	fb15 f506 	smulbb	r5, r5, r6
 8014fa8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014fac:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014fb0:	10c7      	asrs	r7, r0, #3
 8014fb2:	00c0      	lsls	r0, r0, #3
 8014fb4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014fb8:	b2c0      	uxtb	r0, r0
 8014fba:	fb07 970a 	mla	r7, r7, sl, r9
 8014fbe:	fb00 500a 	mla	r0, r0, sl, r5
 8014fc2:	fa1f fc8c 	uxth.w	ip, ip
 8014fc6:	b2bf      	uxth	r7, r7
 8014fc8:	b280      	uxth	r0, r0
 8014fca:	f10c 0501 	add.w	r5, ip, #1
 8014fce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014fd2:	f107 0901 	add.w	r9, r7, #1
 8014fd6:	1c45      	adds	r5, r0, #1
 8014fd8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014fdc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014fe0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014fe4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014fe8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014fec:	ea45 0c0c 	orr.w	ip, r5, ip
 8014ff0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8014ff4:	ea4c 0c09 	orr.w	ip, ip, r9
 8014ff8:	f824 c00b 	strh.w	ip, [r4, fp]
 8014ffc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014ffe:	f108 38ff 	add.w	r8, r8, #4294967295
 8015002:	4401      	add	r1, r0
 8015004:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015006:	4402      	add	r2, r0
 8015008:	e75e      	b.n	8014ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801500a:	b005      	add	sp, #20
 801500c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015010 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015010:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015018:	b085      	sub	sp, #20
 801501a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801501c:	4693      	mov	fp, r2
 801501e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015022:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8015026:	6870      	ldr	r0, [r6, #4]
 8015028:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801502a:	fb00 2404 	mla	r4, r0, r4, r2
 801502e:	6832      	ldr	r2, [r6, #0]
 8015030:	9101      	str	r1, [sp, #4]
 8015032:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015036:	682a      	ldr	r2, [r5, #0]
 8015038:	9202      	str	r2, [sp, #8]
 801503a:	9a01      	ldr	r2, [sp, #4]
 801503c:	2a00      	cmp	r2, #0
 801503e:	dc03      	bgt.n	8015048 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015040:	f1bb 0f00 	cmp.w	fp, #0
 8015044:	f340 809a 	ble.w	801517c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015048:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801504a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801504e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015052:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015054:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015058:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801505c:	2b00      	cmp	r3, #0
 801505e:	dd0c      	ble.n	801507a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015060:	1406      	asrs	r6, r0, #16
 8015062:	d405      	bmi.n	8015070 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015064:	454e      	cmp	r6, r9
 8015066:	da03      	bge.n	8015070 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015068:	1416      	asrs	r6, r2, #16
 801506a:	d401      	bmi.n	8015070 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801506c:	4546      	cmp	r6, r8
 801506e:	db05      	blt.n	801507c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015070:	4470      	add	r0, lr
 8015072:	4462      	add	r2, ip
 8015074:	3b01      	subs	r3, #1
 8015076:	3402      	adds	r4, #2
 8015078:	e7f0      	b.n	801505c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801507a:	d00f      	beq.n	801509c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801507c:	1e5e      	subs	r6, r3, #1
 801507e:	fb0e 0706 	mla	r7, lr, r6, r0
 8015082:	143f      	asrs	r7, r7, #16
 8015084:	d541      	bpl.n	801510a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8015086:	4698      	mov	r8, r3
 8015088:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801508c:	9603      	str	r6, [sp, #12]
 801508e:	f1b8 0f00 	cmp.w	r8, #0
 8015092:	dc56      	bgt.n	8015142 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8015094:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015098:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801509c:	9b01      	ldr	r3, [sp, #4]
 801509e:	2b00      	cmp	r3, #0
 80150a0:	dd6c      	ble.n	801517c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80150a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150ae:	eeb0 6a62 	vmov.f32	s12, s5
 80150b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80150ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80150ce:	eeb0 6a43 	vmov.f32	s12, s6
 80150d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80150d6:	ee12 2a90 	vmov	r2, s5
 80150da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80150de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80150e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150e4:	fb92 fef3 	sdiv	lr, r2, r3
 80150e8:	ee13 2a10 	vmov	r2, s6
 80150ec:	fb92 fcf3 	sdiv	ip, r2, r3
 80150f0:	9b01      	ldr	r3, [sp, #4]
 80150f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80150f6:	3b01      	subs	r3, #1
 80150f8:	9301      	str	r3, [sp, #4]
 80150fa:	eeb0 3a67 	vmov.f32	s6, s15
 80150fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015100:	eef0 2a47 	vmov.f32	s5, s14
 8015104:	bf08      	it	eq
 8015106:	465b      	moveq	r3, fp
 8015108:	e797      	b.n	801503a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801510a:	454f      	cmp	r7, r9
 801510c:	dabb      	bge.n	8015086 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801510e:	fb0c 2606 	mla	r6, ip, r6, r2
 8015112:	1436      	asrs	r6, r6, #16
 8015114:	d4b7      	bmi.n	8015086 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015116:	4546      	cmp	r6, r8
 8015118:	dab5      	bge.n	8015086 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801511a:	461e      	mov	r6, r3
 801511c:	46a0      	mov	r8, r4
 801511e:	2e00      	cmp	r6, #0
 8015120:	ddb8      	ble.n	8015094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015122:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015126:	1417      	asrs	r7, r2, #16
 8015128:	ea4f 4920 	mov.w	r9, r0, asr #16
 801512c:	fb0a 9707 	mla	r7, sl, r7, r9
 8015130:	9902      	ldr	r1, [sp, #8]
 8015132:	4470      	add	r0, lr
 8015134:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015138:	4462      	add	r2, ip
 801513a:	f828 7b02 	strh.w	r7, [r8], #2
 801513e:	3e01      	subs	r6, #1
 8015140:	e7ed      	b.n	801511e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015142:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015146:	d414      	bmi.n	8015172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015148:	68ae      	ldr	r6, [r5, #8]
 801514a:	454e      	cmp	r6, r9
 801514c:	dd11      	ble.n	8015172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801514e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015152:	d40e      	bmi.n	8015172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015154:	68ef      	ldr	r7, [r5, #12]
 8015156:	4557      	cmp	r7, sl
 8015158:	dd0b      	ble.n	8015172 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801515a:	f06f 0101 	mvn.w	r1, #1
 801515e:	b236      	sxth	r6, r6
 8015160:	fb0a 9606 	mla	r6, sl, r6, r9
 8015164:	9f02      	ldr	r7, [sp, #8]
 8015166:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801516a:	fb01 f608 	mul.w	r6, r1, r8
 801516e:	9903      	ldr	r1, [sp, #12]
 8015170:	538f      	strh	r7, [r1, r6]
 8015172:	4470      	add	r0, lr
 8015174:	4462      	add	r2, ip
 8015176:	f108 38ff 	add.w	r8, r8, #4294967295
 801517a:	e788      	b.n	801508e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801517c:	b005      	add	sp, #20
 801517e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015182 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015182:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015186:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801518a:	b087      	sub	sp, #28
 801518c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801518e:	468b      	mov	fp, r1
 8015190:	9203      	str	r2, [sp, #12]
 8015192:	6841      	ldr	r1, [r0, #4]
 8015194:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015198:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801519c:	9204      	str	r2, [sp, #16]
 801519e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80151a2:	fb01 2505 	mla	r5, r1, r5, r2
 80151a6:	6802      	ldr	r2, [r0, #0]
 80151a8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80151ac:	f8d9 2000 	ldr.w	r2, [r9]
 80151b0:	9201      	str	r2, [sp, #4]
 80151b2:	f1bb 0f00 	cmp.w	fp, #0
 80151b6:	dc03      	bgt.n	80151c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80151b8:	9a03      	ldr	r2, [sp, #12]
 80151ba:	2a00      	cmp	r2, #0
 80151bc:	f340 8159 	ble.w	8015472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80151c0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80151c2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80151c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80151ca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80151cc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80151d0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80151d4:	2b00      	cmp	r3, #0
 80151d6:	dd0e      	ble.n	80151f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80151d8:	1402      	asrs	r2, r0, #16
 80151da:	d405      	bmi.n	80151e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80151dc:	42ba      	cmp	r2, r7
 80151de:	da03      	bge.n	80151e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80151e0:	140a      	asrs	r2, r1, #16
 80151e2:	d401      	bmi.n	80151e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80151e4:	42b2      	cmp	r2, r6
 80151e6:	db07      	blt.n	80151f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80151e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80151ea:	3b01      	subs	r3, #1
 80151ec:	4410      	add	r0, r2
 80151ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80151f0:	3502      	adds	r5, #2
 80151f2:	4411      	add	r1, r2
 80151f4:	e7ee      	b.n	80151d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80151f6:	d017      	beq.n	8015228 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80151f8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80151fa:	1e5a      	subs	r2, r3, #1
 80151fc:	fb04 0402 	mla	r4, r4, r2, r0
 8015200:	1424      	asrs	r4, r4, #16
 8015202:	d409      	bmi.n	8015218 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015204:	42bc      	cmp	r4, r7
 8015206:	da07      	bge.n	8015218 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015208:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801520a:	fb04 1202 	mla	r2, r4, r2, r1
 801520e:	1412      	asrs	r2, r2, #16
 8015210:	d402      	bmi.n	8015218 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015212:	42b2      	cmp	r2, r6
 8015214:	f2c0 80bf 	blt.w	8015396 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015218:	2700      	movs	r7, #0
 801521a:	19da      	adds	r2, r3, r7
 801521c:	2a00      	cmp	r2, #0
 801521e:	dc3e      	bgt.n	801529e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015220:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015224:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015228:	f1bb 0f00 	cmp.w	fp, #0
 801522c:	f340 8121 	ble.w	8015472 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015230:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015234:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015238:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801523c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015240:	eeb0 6a62 	vmov.f32	s12, s5
 8015244:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015248:	ee77 2a62 	vsub.f32	s5, s14, s5
 801524c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015250:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015254:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015258:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801525c:	eeb0 6a43 	vmov.f32	s12, s6
 8015260:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015264:	ee12 2a90 	vmov	r2, s5
 8015268:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801526c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801526e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015272:	fb92 f3f3 	sdiv	r3, r2, r3
 8015276:	ee13 2a10 	vmov	r2, s6
 801527a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801527c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801527e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015282:	fb92 f3f3 	sdiv	r3, r2, r3
 8015286:	9a03      	ldr	r2, [sp, #12]
 8015288:	9314      	str	r3, [sp, #80]	@ 0x50
 801528a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801528e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015290:	eeb0 3a67 	vmov.f32	s6, s15
 8015294:	bf08      	it	eq
 8015296:	4613      	moveq	r3, r2
 8015298:	eef0 2a47 	vmov.f32	s5, s14
 801529c:	e789      	b.n	80151b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801529e:	1406      	asrs	r6, r0, #16
 80152a0:	d42d      	bmi.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152a2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80152a6:	42b4      	cmp	r4, r6
 80152a8:	dd29      	ble.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152aa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80152ae:	d426      	bmi.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152b0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80152b4:	4562      	cmp	r2, ip
 80152b6:	dd22      	ble.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152b8:	b224      	sxth	r4, r4
 80152ba:	fb0c 6404 	mla	r4, ip, r4, r6
 80152be:	9a01      	ldr	r2, [sp, #4]
 80152c0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80152c4:	0e22      	lsrs	r2, r4, #24
 80152c6:	d01a      	beq.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80152c8:	9e04      	ldr	r6, [sp, #16]
 80152ca:	4372      	muls	r2, r6
 80152cc:	1c56      	adds	r6, r2, #1
 80152ce:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80152d2:	1212      	asrs	r2, r2, #8
 80152d4:	0a26      	lsrs	r6, r4, #8
 80152d6:	2aff      	cmp	r2, #255	@ 0xff
 80152d8:	9605      	str	r6, [sp, #20]
 80152da:	d116      	bne.n	801530a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80152dc:	f06f 0201 	mvn.w	r2, #1
 80152e0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80152e4:	fb02 fc07 	mul.w	ip, r2, r7
 80152e8:	0962      	lsrs	r2, r4, #5
 80152ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80152ee:	f026 0607 	bic.w	r6, r6, #7
 80152f2:	4316      	orrs	r6, r2
 80152f4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80152f8:	4326      	orrs	r6, r4
 80152fa:	f825 600c 	strh.w	r6, [r5, ip]
 80152fe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015300:	3f01      	subs	r7, #1
 8015302:	4410      	add	r0, r2
 8015304:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015306:	4411      	add	r1, r2
 8015308:	e787      	b.n	801521a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801530a:	f06f 0601 	mvn.w	r6, #1
 801530e:	fa1f fa82 	uxth.w	sl, r2
 8015312:	43d2      	mvns	r2, r2
 8015314:	437e      	muls	r6, r7
 8015316:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801531a:	f835 8006 	ldrh.w	r8, [r5, r6]
 801531e:	fb1c fc0a 	smulbb	ip, ip, sl
 8015322:	b2e4      	uxtb	r4, r4
 8015324:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015328:	fb14 f40a 	smulbb	r4, r4, sl
 801532c:	b2d2      	uxtb	r2, r2
 801532e:	9602      	str	r6, [sp, #8]
 8015330:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015334:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015338:	fb0e ce02 	mla	lr, lr, r2, ip
 801533c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015340:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015344:	fb16 f60a 	smulbb	r6, r6, sl
 8015348:	fa5f f888 	uxtb.w	r8, r8
 801534c:	fb08 4402 	mla	r4, r8, r2, r4
 8015350:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015354:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015358:	fa1f fe8e 	uxth.w	lr, lr
 801535c:	b2a4      	uxth	r4, r4
 801535e:	f10e 0201 	add.w	r2, lr, #1
 8015362:	1c66      	adds	r6, r4, #1
 8015364:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015368:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801536c:	fa1f fc8c 	uxth.w	ip, ip
 8015370:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015374:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015378:	ea46 0e0e 	orr.w	lr, r6, lr
 801537c:	f10c 0601 	add.w	r6, ip, #1
 8015380:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015384:	0976      	lsrs	r6, r6, #5
 8015386:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801538a:	9a02      	ldr	r2, [sp, #8]
 801538c:	ea4e 0e06 	orr.w	lr, lr, r6
 8015390:	f825 e002 	strh.w	lr, [r5, r2]
 8015394:	e7b3      	b.n	80152fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015396:	f04f 0800 	mov.w	r8, #0
 801539a:	eba3 0208 	sub.w	r2, r3, r8
 801539e:	2a00      	cmp	r2, #0
 80153a0:	f77f af3e 	ble.w	8015220 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153a4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80153a8:	1404      	asrs	r4, r0, #16
 80153aa:	140a      	asrs	r2, r1, #16
 80153ac:	fb06 4202 	mla	r2, r6, r2, r4
 80153b0:	9c01      	ldr	r4, [sp, #4]
 80153b2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80153b6:	0e22      	lsrs	r2, r4, #24
 80153b8:	d016      	beq.n	80153e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80153ba:	9e04      	ldr	r6, [sp, #16]
 80153bc:	4372      	muls	r2, r6
 80153be:	1c56      	adds	r6, r2, #1
 80153c0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80153c4:	1212      	asrs	r2, r2, #8
 80153c6:	2aff      	cmp	r2, #255	@ 0xff
 80153c8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80153cc:	d113      	bne.n	80153f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80153ce:	0962      	lsrs	r2, r4, #5
 80153d0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80153d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80153d8:	f026 0607 	bic.w	r6, r6, #7
 80153dc:	4316      	orrs	r6, r2
 80153de:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80153e2:	4326      	orrs	r6, r4
 80153e4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80153e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80153ea:	f108 0801 	add.w	r8, r8, #1
 80153ee:	4410      	add	r0, r2
 80153f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80153f2:	4411      	add	r1, r2
 80153f4:	e7d1      	b.n	801539a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80153f6:	fa1f fa82 	uxth.w	sl, r2
 80153fa:	43d2      	mvns	r2, r2
 80153fc:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015400:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015404:	fb17 f70a 	smulbb	r7, r7, sl
 8015408:	b2e4      	uxtb	r4, r4
 801540a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801540e:	fb14 f40a 	smulbb	r4, r4, sl
 8015412:	b2d2      	uxtb	r2, r2
 8015414:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015418:	fb0c 7c02 	mla	ip, ip, r2, r7
 801541c:	b2f6      	uxtb	r6, r6
 801541e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015422:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015426:	fb16 f60a 	smulbb	r6, r6, sl
 801542a:	fa5f fe8e 	uxtb.w	lr, lr
 801542e:	fb0e 4402 	mla	r4, lr, r2, r4
 8015432:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015436:	fb07 6702 	mla	r7, r7, r2, r6
 801543a:	fa1f fc8c 	uxth.w	ip, ip
 801543e:	b2a4      	uxth	r4, r4
 8015440:	f10c 0201 	add.w	r2, ip, #1
 8015444:	1c66      	adds	r6, r4, #1
 8015446:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801544a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801544e:	b2bf      	uxth	r7, r7
 8015450:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015454:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015458:	ea46 0c0c 	orr.w	ip, r6, ip
 801545c:	1c7e      	adds	r6, r7, #1
 801545e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015462:	0976      	lsrs	r6, r6, #5
 8015464:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015468:	ea4c 0c06 	orr.w	ip, ip, r6
 801546c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015470:	e7ba      	b.n	80153e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015472:	b007      	add	sp, #28
 8015474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015478 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015478:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801547c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015480:	b085      	sub	sp, #20
 8015482:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015484:	468b      	mov	fp, r1
 8015486:	6841      	ldr	r1, [r0, #4]
 8015488:	9203      	str	r2, [sp, #12]
 801548a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801548e:	fb01 2404 	mla	r4, r1, r4, r2
 8015492:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015496:	6802      	ldr	r2, [r0, #0]
 8015498:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801549c:	f8d8 2000 	ldr.w	r2, [r8]
 80154a0:	9201      	str	r2, [sp, #4]
 80154a2:	f1bb 0f00 	cmp.w	fp, #0
 80154a6:	dc03      	bgt.n	80154b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80154a8:	9a03      	ldr	r2, [sp, #12]
 80154aa:	2a00      	cmp	r2, #0
 80154ac:	f340 814f 	ble.w	801574e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80154b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80154b2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80154b6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80154ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80154bc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80154c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80154c4:	2b00      	cmp	r3, #0
 80154c6:	dd0e      	ble.n	80154e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80154c8:	1408      	asrs	r0, r1, #16
 80154ca:	d405      	bmi.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80154cc:	42b8      	cmp	r0, r7
 80154ce:	da03      	bge.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80154d0:	1410      	asrs	r0, r2, #16
 80154d2:	d401      	bmi.n	80154d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80154d4:	42b0      	cmp	r0, r6
 80154d6:	db07      	blt.n	80154e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80154da:	3b01      	subs	r3, #1
 80154dc:	4401      	add	r1, r0
 80154de:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80154e0:	3402      	adds	r4, #2
 80154e2:	4402      	add	r2, r0
 80154e4:	e7ee      	b.n	80154c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80154e6:	d017      	beq.n	8015518 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80154e8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80154ea:	1e58      	subs	r0, r3, #1
 80154ec:	fb05 1500 	mla	r5, r5, r0, r1
 80154f0:	142d      	asrs	r5, r5, #16
 80154f2:	d409      	bmi.n	8015508 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80154f4:	42bd      	cmp	r5, r7
 80154f6:	da07      	bge.n	8015508 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80154f8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80154fa:	fb05 2000 	mla	r0, r5, r0, r2
 80154fe:	1400      	asrs	r0, r0, #16
 8015500:	d402      	bmi.n	8015508 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015502:	42b0      	cmp	r0, r6
 8015504:	f2c0 80ba 	blt.w	801567c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015508:	2600      	movs	r6, #0
 801550a:	1998      	adds	r0, r3, r6
 801550c:	2800      	cmp	r0, #0
 801550e:	dc3e      	bgt.n	801558e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015510:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015514:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015518:	f1bb 0f00 	cmp.w	fp, #0
 801551c:	f340 8117 	ble.w	801574e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015520:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015524:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015528:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801552c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015530:	eeb0 6a62 	vmov.f32	s12, s5
 8015534:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015538:	ee77 2a62 	vsub.f32	s5, s14, s5
 801553c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015540:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015544:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015548:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801554c:	eeb0 6a43 	vmov.f32	s12, s6
 8015550:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015554:	ee12 2a90 	vmov	r2, s5
 8015558:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801555c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801555e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015562:	fb92 f3f3 	sdiv	r3, r2, r3
 8015566:	ee13 2a10 	vmov	r2, s6
 801556a:	9311      	str	r3, [sp, #68]	@ 0x44
 801556c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801556e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015572:	fb92 f3f3 	sdiv	r3, r2, r3
 8015576:	9a03      	ldr	r2, [sp, #12]
 8015578:	9312      	str	r3, [sp, #72]	@ 0x48
 801557a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801557e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015580:	eeb0 3a67 	vmov.f32	s6, s15
 8015584:	bf08      	it	eq
 8015586:	4613      	moveq	r3, r2
 8015588:	eef0 2a47 	vmov.f32	s5, s14
 801558c:	e789      	b.n	80154a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801558e:	140f      	asrs	r7, r1, #16
 8015590:	d424      	bmi.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015592:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015596:	42bd      	cmp	r5, r7
 8015598:	dd20      	ble.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801559a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801559e:	d41d      	bmi.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80155a0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80155a4:	4560      	cmp	r0, ip
 80155a6:	dd19      	ble.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80155a8:	b22d      	sxth	r5, r5
 80155aa:	fb0c 7505 	mla	r5, ip, r5, r7
 80155ae:	9801      	ldr	r0, [sp, #4]
 80155b0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80155b4:	0e07      	lsrs	r7, r0, #24
 80155b6:	2fff      	cmp	r7, #255	@ 0xff
 80155b8:	d116      	bne.n	80155e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80155ba:	f06f 0501 	mvn.w	r5, #1
 80155be:	fb05 f706 	mul.w	r7, r5, r6
 80155c2:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80155c6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80155ca:	0945      	lsrs	r5, r0, #5
 80155cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80155d0:	ea4c 0505 	orr.w	r5, ip, r5
 80155d4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80155d8:	4305      	orrs	r5, r0
 80155da:	53e5      	strh	r5, [r4, r7]
 80155dc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80155de:	3e01      	subs	r6, #1
 80155e0:	4401      	add	r1, r0
 80155e2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80155e4:	4402      	add	r2, r0
 80155e6:	e790      	b.n	801550a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80155e8:	b2fd      	uxtb	r5, r7
 80155ea:	2f00      	cmp	r7, #0
 80155ec:	d0f6      	beq.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80155ee:	f06f 0701 	mvn.w	r7, #1
 80155f2:	fa1f f985 	uxth.w	r9, r5
 80155f6:	43ed      	mvns	r5, r5
 80155f8:	4377      	muls	r7, r6
 80155fa:	f834 e007 	ldrh.w	lr, [r4, r7]
 80155fe:	9702      	str	r7, [sp, #8]
 8015600:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015604:	fb17 f709 	smulbb	r7, r7, r9
 8015608:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801560c:	b2c0      	uxtb	r0, r0
 801560e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015612:	fb10 f009 	smulbb	r0, r0, r9
 8015616:	b2ed      	uxtb	r5, r5
 8015618:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801561c:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015620:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015624:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015628:	fb1a fa09 	smulbb	sl, sl, r9
 801562c:	fa5f fe8e 	uxtb.w	lr, lr
 8015630:	fb0e 0005 	mla	r0, lr, r5, r0
 8015634:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015638:	fb07 a705 	mla	r7, r7, r5, sl
 801563c:	b280      	uxth	r0, r0
 801563e:	fa1f fc8c 	uxth.w	ip, ip
 8015642:	f100 0a01 	add.w	sl, r0, #1
 8015646:	f10c 0501 	add.w	r5, ip, #1
 801564a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801564e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015652:	b2bf      	uxth	r7, r7
 8015654:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015658:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801565c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015660:	f107 0a01 	add.w	sl, r7, #1
 8015664:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015668:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801566c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015670:	9802      	ldr	r0, [sp, #8]
 8015672:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015676:	f824 c000 	strh.w	ip, [r4, r0]
 801567a:	e7af      	b.n	80155dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801567c:	f04f 0e00 	mov.w	lr, #0
 8015680:	eba3 000e 	sub.w	r0, r3, lr
 8015684:	2800      	cmp	r0, #0
 8015686:	f77f af43 	ble.w	8015510 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801568a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801568e:	140d      	asrs	r5, r1, #16
 8015690:	1410      	asrs	r0, r2, #16
 8015692:	fb06 5000 	mla	r0, r6, r0, r5
 8015696:	9d01      	ldr	r5, [sp, #4]
 8015698:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801569c:	0e2e      	lsrs	r6, r5, #24
 801569e:	2eff      	cmp	r6, #255	@ 0xff
 80156a0:	d112      	bne.n	80156c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80156a2:	482c      	ldr	r0, [pc, #176]	@ (8015754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80156a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80156a8:	0968      	lsrs	r0, r5, #5
 80156aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80156ae:	4330      	orrs	r0, r6
 80156b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80156b4:	4328      	orrs	r0, r5
 80156b6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80156ba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80156bc:	f10e 0e01 	add.w	lr, lr, #1
 80156c0:	4401      	add	r1, r0
 80156c2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80156c4:	4402      	add	r2, r0
 80156c6:	e7db      	b.n	8015680 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80156c8:	b2f0      	uxtb	r0, r6
 80156ca:	2e00      	cmp	r6, #0
 80156cc:	d0f5      	beq.n	80156ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80156ce:	fa1f f980 	uxth.w	r9, r0
 80156d2:	43c0      	mvns	r0, r0
 80156d4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80156d8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80156dc:	fb16 f609 	smulbb	r6, r6, r9
 80156e0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80156e4:	b2ed      	uxtb	r5, r5
 80156e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80156ea:	fb15 f509 	smulbb	r5, r5, r9
 80156ee:	b2c0      	uxtb	r0, r0
 80156f0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80156f4:	fb07 6700 	mla	r7, r7, r0, r6
 80156f8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80156fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015700:	fb1a fa09 	smulbb	sl, sl, r9
 8015704:	fa5f fc8c 	uxtb.w	ip, ip
 8015708:	fb0c 5500 	mla	r5, ip, r0, r5
 801570c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015710:	fb06 a600 	mla	r6, r6, r0, sl
 8015714:	b2bf      	uxth	r7, r7
 8015716:	b2ad      	uxth	r5, r5
 8015718:	1c78      	adds	r0, r7, #1
 801571a:	f105 0a01 	add.w	sl, r5, #1
 801571e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015722:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015726:	b2b6      	uxth	r6, r6
 8015728:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801572c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015730:	ea4a 0707 	orr.w	r7, sl, r7
 8015734:	f106 0a01 	add.w	sl, r6, #1
 8015738:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801573c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015740:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015744:	ea47 070a 	orr.w	r7, r7, sl
 8015748:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801574c:	e7b5      	b.n	80156ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801574e:	b005      	add	sp, #20
 8015750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015754:	fffff800 	.word	0xfffff800

08015758 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015758:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801575c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015760:	b087      	sub	sp, #28
 8015762:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015764:	468b      	mov	fp, r1
 8015766:	9203      	str	r2, [sp, #12]
 8015768:	6841      	ldr	r1, [r0, #4]
 801576a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801576e:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015772:	9204      	str	r2, [sp, #16]
 8015774:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015778:	fb01 2404 	mla	r4, r1, r4, r2
 801577c:	6802      	ldr	r2, [r0, #0]
 801577e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015782:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015786:	3201      	adds	r2, #1
 8015788:	f022 0201 	bic.w	r2, r2, #1
 801578c:	9200      	str	r2, [sp, #0]
 801578e:	f8d9 2000 	ldr.w	r2, [r9]
 8015792:	9201      	str	r2, [sp, #4]
 8015794:	f1bb 0f00 	cmp.w	fp, #0
 8015798:	dc03      	bgt.n	80157a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801579a:	9a03      	ldr	r2, [sp, #12]
 801579c:	2a00      	cmp	r2, #0
 801579e:	f340 816a 	ble.w	8015a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80157a2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80157a4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80157a8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80157ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80157ae:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80157b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80157b6:	2b00      	cmp	r3, #0
 80157b8:	dd0e      	ble.n	80157d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80157ba:	1402      	asrs	r2, r0, #16
 80157bc:	d405      	bmi.n	80157ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80157be:	42ba      	cmp	r2, r7
 80157c0:	da03      	bge.n	80157ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80157c2:	140a      	asrs	r2, r1, #16
 80157c4:	d401      	bmi.n	80157ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80157c6:	42b2      	cmp	r2, r6
 80157c8:	db07      	blt.n	80157da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80157ca:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80157cc:	3b01      	subs	r3, #1
 80157ce:	4410      	add	r0, r2
 80157d0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80157d2:	3402      	adds	r4, #2
 80157d4:	4411      	add	r1, r2
 80157d6:	e7ee      	b.n	80157b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80157d8:	d017      	beq.n	801580a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80157da:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80157dc:	1e5a      	subs	r2, r3, #1
 80157de:	fb05 0502 	mla	r5, r5, r2, r0
 80157e2:	142d      	asrs	r5, r5, #16
 80157e4:	d409      	bmi.n	80157fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80157e6:	42bd      	cmp	r5, r7
 80157e8:	da07      	bge.n	80157fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80157ea:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80157ec:	fb05 1202 	mla	r2, r5, r2, r1
 80157f0:	1412      	asrs	r2, r2, #16
 80157f2:	d402      	bmi.n	80157fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80157f4:	42b2      	cmp	r2, r6
 80157f6:	f2c0 80c8 	blt.w	801598a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80157fa:	2700      	movs	r7, #0
 80157fc:	19da      	adds	r2, r3, r7
 80157fe:	2a00      	cmp	r2, #0
 8015800:	dc3e      	bgt.n	8015880 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015802:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015806:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801580a:	f1bb 0f00 	cmp.w	fp, #0
 801580e:	f340 8132 	ble.w	8015a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8015812:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015816:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801581a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801581e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015822:	eeb0 6a62 	vmov.f32	s12, s5
 8015826:	ee31 1a05 	vadd.f32	s2, s2, s10
 801582a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801582e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015836:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801583a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801583e:	eeb0 6a43 	vmov.f32	s12, s6
 8015842:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015846:	ee12 2a90 	vmov	r2, s5
 801584a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801584e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015850:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015854:	fb92 f3f3 	sdiv	r3, r2, r3
 8015858:	ee13 2a10 	vmov	r2, s6
 801585c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801585e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015860:	f1bb 0b01 	subs.w	fp, fp, #1
 8015864:	fb92 f3f3 	sdiv	r3, r2, r3
 8015868:	9a03      	ldr	r2, [sp, #12]
 801586a:	9314      	str	r3, [sp, #80]	@ 0x50
 801586c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015870:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015872:	eeb0 3a67 	vmov.f32	s6, s15
 8015876:	bf08      	it	eq
 8015878:	4613      	moveq	r3, r2
 801587a:	eef0 2a47 	vmov.f32	s5, s14
 801587e:	e789      	b.n	8015794 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015880:	1405      	asrs	r5, r0, #16
 8015882:	d436      	bmi.n	80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015884:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015888:	42aa      	cmp	r2, r5
 801588a:	dd32      	ble.n	80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801588c:	140e      	asrs	r6, r1, #16
 801588e:	d430      	bmi.n	80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015890:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015894:	42b2      	cmp	r2, r6
 8015896:	dd2c      	ble.n	80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8015898:	9a00      	ldr	r2, [sp, #0]
 801589a:	fb06 5502 	mla	r5, r6, r2, r5
 801589e:	9e01      	ldr	r6, [sp, #4]
 80158a0:	086a      	lsrs	r2, r5, #1
 80158a2:	5cb2      	ldrb	r2, [r6, r2]
 80158a4:	07ee      	lsls	r6, r5, #31
 80158a6:	bf54      	ite	pl
 80158a8:	f002 020f 	andpl.w	r2, r2, #15
 80158ac:	1112      	asrmi	r2, r2, #4
 80158ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80158b2:	b2d2      	uxtb	r2, r2
 80158b4:	b1ea      	cbz	r2, 80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80158b6:	9d04      	ldr	r5, [sp, #16]
 80158b8:	436a      	muls	r2, r5
 80158ba:	1c55      	adds	r5, r2, #1
 80158bc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80158c0:	4d6e      	ldr	r5, [pc, #440]	@ (8015a7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80158c2:	1212      	asrs	r2, r2, #8
 80158c4:	682d      	ldr	r5, [r5, #0]
 80158c6:	2aff      	cmp	r2, #255	@ 0xff
 80158c8:	ea4f 2615 	mov.w	r6, r5, lsr #8
 80158cc:	9605      	str	r6, [sp, #20]
 80158ce:	d116      	bne.n	80158fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 80158d0:	f06f 0201 	mvn.w	r2, #1
 80158d4:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80158d8:	fb02 fc07 	mul.w	ip, r2, r7
 80158dc:	096a      	lsrs	r2, r5, #5
 80158de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80158e2:	f026 0607 	bic.w	r6, r6, #7
 80158e6:	4316      	orrs	r6, r2
 80158e8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80158ec:	432e      	orrs	r6, r5
 80158ee:	f824 600c 	strh.w	r6, [r4, ip]
 80158f2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80158f4:	3f01      	subs	r7, #1
 80158f6:	4410      	add	r0, r2
 80158f8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80158fa:	4411      	add	r1, r2
 80158fc:	e77e      	b.n	80157fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80158fe:	f06f 0601 	mvn.w	r6, #1
 8015902:	fa1f fa82 	uxth.w	sl, r2
 8015906:	43d2      	mvns	r2, r2
 8015908:	437e      	muls	r6, r7
 801590a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801590e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8015912:	fb1c fc0a 	smulbb	ip, ip, sl
 8015916:	b2ed      	uxtb	r5, r5
 8015918:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801591c:	fb15 f50a 	smulbb	r5, r5, sl
 8015920:	b2d2      	uxtb	r2, r2
 8015922:	9602      	str	r6, [sp, #8]
 8015924:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015928:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801592c:	fb0e ce02 	mla	lr, lr, r2, ip
 8015930:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015934:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015938:	fb16 f60a 	smulbb	r6, r6, sl
 801593c:	fa5f f888 	uxtb.w	r8, r8
 8015940:	fb08 5502 	mla	r5, r8, r2, r5
 8015944:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015948:	fb0c 6c02 	mla	ip, ip, r2, r6
 801594c:	fa1f fe8e 	uxth.w	lr, lr
 8015950:	b2ad      	uxth	r5, r5
 8015952:	f10e 0201 	add.w	r2, lr, #1
 8015956:	1c6e      	adds	r6, r5, #1
 8015958:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801595c:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8015960:	fa1f fc8c 	uxth.w	ip, ip
 8015964:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015968:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801596c:	ea46 0e0e 	orr.w	lr, r6, lr
 8015970:	f10c 0601 	add.w	r6, ip, #1
 8015974:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015978:	0976      	lsrs	r6, r6, #5
 801597a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801597e:	9a02      	ldr	r2, [sp, #8]
 8015980:	ea4e 0e06 	orr.w	lr, lr, r6
 8015984:	f824 e002 	strh.w	lr, [r4, r2]
 8015988:	e7b3      	b.n	80158f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801598a:	f04f 0800 	mov.w	r8, #0
 801598e:	eba3 0208 	sub.w	r2, r3, r8
 8015992:	2a00      	cmp	r2, #0
 8015994:	f77f af35 	ble.w	8015802 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015998:	9e00      	ldr	r6, [sp, #0]
 801599a:	1402      	asrs	r2, r0, #16
 801599c:	140d      	asrs	r5, r1, #16
 801599e:	fb06 2505 	mla	r5, r6, r5, r2
 80159a2:	9e01      	ldr	r6, [sp, #4]
 80159a4:	086a      	lsrs	r2, r5, #1
 80159a6:	5cb2      	ldrb	r2, [r6, r2]
 80159a8:	07ed      	lsls	r5, r5, #31
 80159aa:	bf54      	ite	pl
 80159ac:	f002 020f 	andpl.w	r2, r2, #15
 80159b0:	1112      	asrmi	r2, r2, #4
 80159b2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80159b6:	b2d2      	uxtb	r2, r2
 80159b8:	b1c2      	cbz	r2, 80159ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80159ba:	9d04      	ldr	r5, [sp, #16]
 80159bc:	436a      	muls	r2, r5
 80159be:	1c55      	adds	r5, r2, #1
 80159c0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80159c4:	4d2d      	ldr	r5, [pc, #180]	@ (8015a7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80159c6:	1212      	asrs	r2, r2, #8
 80159c8:	682e      	ldr	r6, [r5, #0]
 80159ca:	2aff      	cmp	r2, #255	@ 0xff
 80159cc:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80159d0:	d113      	bne.n	80159fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80159d2:	0972      	lsrs	r2, r6, #5
 80159d4:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80159d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80159dc:	f025 0507 	bic.w	r5, r5, #7
 80159e0:	4315      	orrs	r5, r2
 80159e2:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80159e6:	4335      	orrs	r5, r6
 80159e8:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80159ec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80159ee:	f108 0801 	add.w	r8, r8, #1
 80159f2:	4410      	add	r0, r2
 80159f4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80159f6:	4411      	add	r1, r2
 80159f8:	e7c9      	b.n	801598e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80159fa:	fa1f fa82 	uxth.w	sl, r2
 80159fe:	43d2      	mvns	r2, r2
 8015a00:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8015a04:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015a08:	fb17 f70a 	smulbb	r7, r7, sl
 8015a0c:	b2f6      	uxtb	r6, r6
 8015a0e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015a12:	fb16 f60a 	smulbb	r6, r6, sl
 8015a16:	b2d2      	uxtb	r2, r2
 8015a18:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015a1c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015a20:	b2ed      	uxtb	r5, r5
 8015a22:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015a26:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a2a:	fb15 f50a 	smulbb	r5, r5, sl
 8015a2e:	fa5f fe8e 	uxtb.w	lr, lr
 8015a32:	fb0e 6602 	mla	r6, lr, r2, r6
 8015a36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015a3a:	fb07 5702 	mla	r7, r7, r2, r5
 8015a3e:	fa1f fc8c 	uxth.w	ip, ip
 8015a42:	b2b6      	uxth	r6, r6
 8015a44:	f10c 0201 	add.w	r2, ip, #1
 8015a48:	1c75      	adds	r5, r6, #1
 8015a4a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015a4e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8015a52:	b2bf      	uxth	r7, r7
 8015a54:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015a58:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015a5c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015a60:	1c7d      	adds	r5, r7, #1
 8015a62:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015a66:	096d      	lsrs	r5, r5, #5
 8015a68:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015a6c:	ea4c 0c05 	orr.w	ip, ip, r5
 8015a70:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8015a74:	e7ba      	b.n	80159ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a76:	b007      	add	sp, #28
 8015a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a7c:	20002238 	.word	0x20002238

08015a80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a80:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a88:	b087      	sub	sp, #28
 8015a8a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015a8c:	9101      	str	r1, [sp, #4]
 8015a8e:	6841      	ldr	r1, [r0, #4]
 8015a90:	9205      	str	r2, [sp, #20]
 8015a92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015a96:	fb01 2404 	mla	r4, r1, r4, r2
 8015a9a:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8015a9e:	6802      	ldr	r2, [r0, #0]
 8015aa0:	f8df 82f0 	ldr.w	r8, [pc, #752]	@ 8015d94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015aa4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015aa8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015aac:	3201      	adds	r2, #1
 8015aae:	f022 0201 	bic.w	r2, r2, #1
 8015ab2:	9202      	str	r2, [sp, #8]
 8015ab4:	f8db 2000 	ldr.w	r2, [fp]
 8015ab8:	9203      	str	r2, [sp, #12]
 8015aba:	9a01      	ldr	r2, [sp, #4]
 8015abc:	2a00      	cmp	r2, #0
 8015abe:	dc03      	bgt.n	8015ac8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015ac0:	9a05      	ldr	r2, [sp, #20]
 8015ac2:	2a00      	cmp	r2, #0
 8015ac4:	f340 8162 	ble.w	8015d8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015ac8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015aca:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8015ace:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015ad2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015ad4:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8015ad8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015adc:	2b00      	cmp	r3, #0
 8015ade:	dd0e      	ble.n	8015afe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015ae0:	1402      	asrs	r2, r0, #16
 8015ae2:	d405      	bmi.n	8015af0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015ae4:	42ba      	cmp	r2, r7
 8015ae6:	da03      	bge.n	8015af0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015ae8:	140a      	asrs	r2, r1, #16
 8015aea:	d401      	bmi.n	8015af0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015aec:	42b2      	cmp	r2, r6
 8015aee:	db07      	blt.n	8015b00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015af0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015af2:	3b01      	subs	r3, #1
 8015af4:	4410      	add	r0, r2
 8015af6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015af8:	3402      	adds	r4, #2
 8015afa:	4411      	add	r1, r2
 8015afc:	e7ee      	b.n	8015adc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015afe:	d017      	beq.n	8015b30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015b00:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015b02:	1e5a      	subs	r2, r3, #1
 8015b04:	fb05 0502 	mla	r5, r5, r2, r0
 8015b08:	142d      	asrs	r5, r5, #16
 8015b0a:	d409      	bmi.n	8015b20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015b0c:	42bd      	cmp	r5, r7
 8015b0e:	da07      	bge.n	8015b20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015b10:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015b12:	fb05 1202 	mla	r2, r5, r2, r1
 8015b16:	1412      	asrs	r2, r2, #16
 8015b18:	d402      	bmi.n	8015b20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015b1a:	42b2      	cmp	r2, r6
 8015b1c:	f2c0 80c3 	blt.w	8015ca6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8015b20:	2500      	movs	r5, #0
 8015b22:	195a      	adds	r2, r3, r5
 8015b24:	2a00      	cmp	r2, #0
 8015b26:	dc3f      	bgt.n	8015ba8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015b28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b30:	9b01      	ldr	r3, [sp, #4]
 8015b32:	2b00      	cmp	r3, #0
 8015b34:	f340 812a 	ble.w	8015d8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015b38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b48:	eeb0 6a62 	vmov.f32	s12, s5
 8015b4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b50:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b60:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015b64:	eeb0 6a43 	vmov.f32	s12, s6
 8015b68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b6c:	ee12 2a90 	vmov	r2, s5
 8015b70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015b76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b7e:	ee13 2a10 	vmov	r2, s6
 8015b82:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015b84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015b86:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015b8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b8e:	9314      	str	r3, [sp, #80]	@ 0x50
 8015b90:	9b01      	ldr	r3, [sp, #4]
 8015b92:	9a05      	ldr	r2, [sp, #20]
 8015b94:	3b01      	subs	r3, #1
 8015b96:	9301      	str	r3, [sp, #4]
 8015b98:	eeb0 3a67 	vmov.f32	s6, s15
 8015b9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015b9e:	eef0 2a47 	vmov.f32	s5, s14
 8015ba2:	bf08      	it	eq
 8015ba4:	4613      	moveq	r3, r2
 8015ba6:	e788      	b.n	8015aba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015ba8:	1406      	asrs	r6, r0, #16
 8015baa:	d42c      	bmi.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015bac:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015bb0:	42b2      	cmp	r2, r6
 8015bb2:	dd28      	ble.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015bb4:	140f      	asrs	r7, r1, #16
 8015bb6:	d426      	bmi.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015bb8:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015bbc:	42ba      	cmp	r2, r7
 8015bbe:	dd22      	ble.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015bc0:	9a02      	ldr	r2, [sp, #8]
 8015bc2:	fb07 6602 	mla	r6, r7, r2, r6
 8015bc6:	9f03      	ldr	r7, [sp, #12]
 8015bc8:	0872      	lsrs	r2, r6, #1
 8015bca:	5cba      	ldrb	r2, [r7, r2]
 8015bcc:	07f6      	lsls	r6, r6, #31
 8015bce:	bf54      	ite	pl
 8015bd0:	f002 020f 	andpl.w	r2, r2, #15
 8015bd4:	1112      	asrmi	r2, r2, #4
 8015bd6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015bda:	b2d2      	uxtb	r2, r2
 8015bdc:	2aff      	cmp	r2, #255	@ 0xff
 8015bde:	d118      	bne.n	8015c12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8015be0:	f06f 0601 	mvn.w	r6, #1
 8015be4:	f8d8 2000 	ldr.w	r2, [r8]
 8015be8:	fb06 f705 	mul.w	r7, r6, r5
 8015bec:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8015bf0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015bf4:	0956      	lsrs	r6, r2, #5
 8015bf6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015bfa:	ea4c 0606 	orr.w	r6, ip, r6
 8015bfe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015c02:	4316      	orrs	r6, r2
 8015c04:	53e6      	strh	r6, [r4, r7]
 8015c06:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015c08:	3d01      	subs	r5, #1
 8015c0a:	4410      	add	r0, r2
 8015c0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015c0e:	4411      	add	r1, r2
 8015c10:	e787      	b.n	8015b22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015c12:	2a00      	cmp	r2, #0
 8015c14:	d0f7      	beq.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015c16:	f06f 0601 	mvn.w	r6, #1
 8015c1a:	fa1f f982 	uxth.w	r9, r2
 8015c1e:	43d2      	mvns	r2, r2
 8015c20:	436e      	muls	r6, r5
 8015c22:	f8d8 c000 	ldr.w	ip, [r8]
 8015c26:	f834 e006 	ldrh.w	lr, [r4, r6]
 8015c2a:	9604      	str	r6, [sp, #16]
 8015c2c:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8015c30:	fb16 f609 	smulbb	r6, r6, r9
 8015c34:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8015c38:	fa5f fc8c 	uxtb.w	ip, ip
 8015c3c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015c40:	fb1c fc09 	smulbb	ip, ip, r9
 8015c44:	b2d2      	uxtb	r2, r2
 8015c46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015c4a:	fb07 6702 	mla	r7, r7, r2, r6
 8015c4e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015c52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015c56:	fb1a fa09 	smulbb	sl, sl, r9
 8015c5a:	fa5f fe8e 	uxtb.w	lr, lr
 8015c5e:	fb0e cc02 	mla	ip, lr, r2, ip
 8015c62:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015c66:	fb06 a602 	mla	r6, r6, r2, sl
 8015c6a:	b2bf      	uxth	r7, r7
 8015c6c:	fa1f fc8c 	uxth.w	ip, ip
 8015c70:	1c7a      	adds	r2, r7, #1
 8015c72:	f10c 0a01 	add.w	sl, ip, #1
 8015c76:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015c7a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8015c7e:	b2b6      	uxth	r6, r6
 8015c80:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c84:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015c88:	ea4a 0707 	orr.w	r7, sl, r7
 8015c8c:	f106 0a01 	add.w	sl, r6, #1
 8015c90:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015c94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c98:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015c9c:	9a04      	ldr	r2, [sp, #16]
 8015c9e:	ea47 070a 	orr.w	r7, r7, sl
 8015ca2:	52a7      	strh	r7, [r4, r2]
 8015ca4:	e7af      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015ca6:	f04f 0e00 	mov.w	lr, #0
 8015caa:	eba3 020e 	sub.w	r2, r3, lr
 8015cae:	2a00      	cmp	r2, #0
 8015cb0:	f77f af3a 	ble.w	8015b28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015cb4:	9e02      	ldr	r6, [sp, #8]
 8015cb6:	1402      	asrs	r2, r0, #16
 8015cb8:	140d      	asrs	r5, r1, #16
 8015cba:	fb06 2505 	mla	r5, r6, r5, r2
 8015cbe:	9e03      	ldr	r6, [sp, #12]
 8015cc0:	086a      	lsrs	r2, r5, #1
 8015cc2:	5cb2      	ldrb	r2, [r6, r2]
 8015cc4:	07ed      	lsls	r5, r5, #31
 8015cc6:	bf54      	ite	pl
 8015cc8:	f002 020f 	andpl.w	r2, r2, #15
 8015ccc:	1112      	asrmi	r2, r2, #4
 8015cce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015cd2:	b2d2      	uxtb	r2, r2
 8015cd4:	2aff      	cmp	r2, #255	@ 0xff
 8015cd6:	d115      	bne.n	8015d04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015cd8:	f8d8 5000 	ldr.w	r5, [r8]
 8015cdc:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8015ce0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015ce4:	096a      	lsrs	r2, r5, #5
 8015ce6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015cea:	4332      	orrs	r2, r6
 8015cec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015cf0:	432a      	orrs	r2, r5
 8015cf2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015cf6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015cf8:	f10e 0e01 	add.w	lr, lr, #1
 8015cfc:	4410      	add	r0, r2
 8015cfe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015d00:	4411      	add	r1, r2
 8015d02:	e7d2      	b.n	8015caa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015d04:	2a00      	cmp	r2, #0
 8015d06:	d0f6      	beq.n	8015cf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015d08:	fa1f f982 	uxth.w	r9, r2
 8015d0c:	43d2      	mvns	r2, r2
 8015d0e:	f8d8 7000 	ldr.w	r7, [r8]
 8015d12:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015d16:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8015d1a:	fb15 f509 	smulbb	r5, r5, r9
 8015d1e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8015d22:	b2ff      	uxtb	r7, r7
 8015d24:	ea4f 262c 	mov.w	r6, ip, asr #8
 8015d28:	fb17 f709 	smulbb	r7, r7, r9
 8015d2c:	b2d2      	uxtb	r2, r2
 8015d2e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015d32:	fb06 5602 	mla	r6, r6, r2, r5
 8015d36:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015d3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015d3e:	fb1a fa09 	smulbb	sl, sl, r9
 8015d42:	fa5f fc8c 	uxtb.w	ip, ip
 8015d46:	fb0c 7702 	mla	r7, ip, r2, r7
 8015d4a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015d4e:	fb05 a502 	mla	r5, r5, r2, sl
 8015d52:	b2b6      	uxth	r6, r6
 8015d54:	b2bf      	uxth	r7, r7
 8015d56:	1c72      	adds	r2, r6, #1
 8015d58:	f107 0a01 	add.w	sl, r7, #1
 8015d5c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8015d60:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015d64:	b2ad      	uxth	r5, r5
 8015d66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d6a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015d6e:	ea4a 0606 	orr.w	r6, sl, r6
 8015d72:	f105 0a01 	add.w	sl, r5, #1
 8015d76:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d7e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015d82:	ea46 060a 	orr.w	r6, r6, sl
 8015d86:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015d8a:	e7b4      	b.n	8015cf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015d8c:	b007      	add	sp, #28
 8015d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d92:	bf00      	nop
 8015d94:	20002238 	.word	0x20002238

08015d98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8015d98:	4770      	bx	lr

08015d9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015d9a:	4770      	bx	lr

08015d9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015d9c:	4770      	bx	lr

08015d9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8015d9e:	4770      	bx	lr

08015da0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8015da0:	4770      	bx	lr

08015da2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8015da2:	4770      	bx	lr

08015da4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015da4:	4770      	bx	lr

08015da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015da6:	4770      	bx	lr

08015da8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015da8:	4770      	bx	lr

08015daa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015daa:	4770      	bx	lr

08015dac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015dac:	4770      	bx	lr

08015dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015dae:	4770      	bx	lr

08015db0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015db0:	4770      	bx	lr

08015db2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015db2:	4770      	bx	lr

08015db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015db4:	4770      	bx	lr

08015db6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015db6:	4770      	bx	lr

08015db8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015db8:	4770      	bx	lr

08015dba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015dba:	4770      	bx	lr

08015dbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015dbc:	4770      	bx	lr

08015dbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015dbe:	4770      	bx	lr

08015dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015dc0:	4770      	bx	lr

08015dc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015dc2:	4770      	bx	lr

08015dc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015dc4:	4770      	bx	lr

08015dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015dc6:	4770      	bx	lr

08015dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015dc8:	4770      	bx	lr

08015dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015dca:	4770      	bx	lr

08015dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015dcc:	4770      	bx	lr

08015dce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8015dce:	4770      	bx	lr

08015dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015dd0:	4770      	bx	lr

08015dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8015dd2:	4770      	bx	lr

08015dd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015dd4:	4770      	bx	lr

08015dd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015dd6:	4770      	bx	lr

08015dd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015dd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015ddc:	b088      	sub	sp, #32
 8015dde:	ac08      	add	r4, sp, #32
 8015de0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015de4:	4606      	mov	r6, r0
 8015de6:	4620      	mov	r0, r4
 8015de8:	4688      	mov	r8, r1
 8015dea:	4691      	mov	r9, r2
 8015dec:	f7fd fc32 	bl	8013654 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015df0:	6833      	ldr	r3, [r6, #0]
 8015df2:	4605      	mov	r5, r0
 8015df4:	4620      	mov	r0, r4
 8015df6:	699f      	ldr	r7, [r3, #24]
 8015df8:	f7fd fb3a 	bl	8013470 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015dfc:	4682      	mov	sl, r0
 8015dfe:	4620      	mov	r0, r4
 8015e00:	f7fd fb6a 	bl	80134d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e04:	9500      	str	r5, [sp, #0]
 8015e06:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015e0a:	464b      	mov	r3, r9
 8015e0c:	a806      	add	r0, sp, #24
 8015e0e:	4642      	mov	r2, r8
 8015e10:	4631      	mov	r1, r6
 8015e12:	47b8      	blx	r7
 8015e14:	4628      	mov	r0, r5
 8015e16:	b008      	add	sp, #32
 8015e18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015e1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015e1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015e20:	2300      	movs	r3, #0
 8015e22:	9300      	str	r3, [sp, #0]
 8015e24:	4b3d      	ldr	r3, [pc, #244]	@ (8015f1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8015e26:	781b      	ldrb	r3, [r3, #0]
 8015e28:	2b00      	cmp	r3, #0
 8015e2a:	d137      	bne.n	8015e9c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015e2c:	4a3c      	ldr	r2, [pc, #240]	@ (8015f20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015e2e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015e32:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015e36:	2b00      	cmp	r3, #0
 8015e38:	d132      	bne.n	8015ea0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015e3a:	4b3a      	ldr	r3, [pc, #232]	@ (8015f24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015e3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015e40:	6808      	ldr	r0, [r1, #0]
 8015e42:	6849      	ldr	r1, [r1, #4]
 8015e44:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015e48:	ac02      	add	r4, sp, #8
 8015e4a:	ab02      	add	r3, sp, #8
 8015e4c:	c303      	stmia	r3!, {r0, r1}
 8015e4e:	4669      	mov	r1, sp
 8015e50:	4620      	mov	r0, r4
 8015e52:	f7f9 ffef 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015e56:	4668      	mov	r0, sp
 8015e58:	f7f9 ffc4 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015e5c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015e60:	f8bd 2000 	ldrh.w	r2, [sp]
 8015e64:	4d30      	ldr	r5, [pc, #192]	@ (8015f28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015e66:	4413      	add	r3, r2
 8015e68:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015e6c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015e70:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015e74:	6828      	ldr	r0, [r5, #0]
 8015e76:	4413      	add	r3, r2
 8015e78:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015e7c:	6803      	ldr	r3, [r0, #0]
 8015e7e:	462f      	mov	r7, r5
 8015e80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015e82:	4798      	blx	r3
 8015e84:	f010 0f01 	tst.w	r0, #1
 8015e88:	d00c      	beq.n	8015ea4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015e8a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8015e8e:	6828      	ldr	r0, [r5, #0]
 8015e90:	6803      	ldr	r3, [r0, #0]
 8015e92:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8015e94:	4798      	blx	r3
 8015e96:	b004      	add	sp, #16
 8015e98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015e9c:	4a21      	ldr	r2, [pc, #132]	@ (8015f24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015e9e:	e7c6      	b.n	8015e2e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015ea0:	4b1f      	ldr	r3, [pc, #124]	@ (8015f20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015ea2:	e7cb      	b.n	8015e3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015ea4:	6838      	ldr	r0, [r7, #0]
 8015ea6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015eaa:	6803      	ldr	r3, [r0, #0]
 8015eac:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8015eb0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8015eb2:	4798      	blx	r3
 8015eb4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015eb8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015ebc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8015ec0:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8015ec4:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015ec8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015ecc:	6838      	ldr	r0, [r7, #0]
 8015ece:	6803      	ldr	r3, [r0, #0]
 8015ed0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ed2:	4798      	blx	r3
 8015ed4:	4a12      	ldr	r2, [pc, #72]	@ (8015f20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015ed6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015eda:	4691      	mov	r9, r2
 8015edc:	8813      	ldrh	r3, [r2, #0]
 8015ede:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015ee2:	435d      	muls	r5, r3
 8015ee4:	fb03 1404 	mla	r4, r3, r4, r1
 8015ee8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015eec:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015ef0:	6838      	ldr	r0, [r7, #0]
 8015ef2:	42ac      	cmp	r4, r5
 8015ef4:	6803      	ldr	r3, [r0, #0]
 8015ef6:	d20e      	bcs.n	8015f16 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015ef8:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8015efc:	4632      	mov	r2, r6
 8015efe:	4643      	mov	r3, r8
 8015f00:	4621      	mov	r1, r4
 8015f02:	47d0      	blx	sl
 8015f04:	f8b9 3000 	ldrh.w	r3, [r9]
 8015f08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015f0c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015f10:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015f14:	e7ec      	b.n	8015ef0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8015f16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015f18:	4798      	blx	r3
 8015f1a:	e7bc      	b.n	8015e96 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015f1c:	20002228 	.word	0x20002228
 8015f20:	2000222a 	.word	0x2000222a
 8015f24:	2000222c 	.word	0x2000222c
 8015f28:	20002230 	.word	0x20002230

08015f2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f30:	b08b      	sub	sp, #44	@ 0x2c
 8015f32:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015f36:	460f      	mov	r7, r1
 8015f38:	4616      	mov	r6, r2
 8015f3a:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015f3e:	f1bb 0f00 	cmp.w	fp, #0
 8015f42:	d04a      	beq.n	8015fda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8015f44:	6810      	ldr	r0, [r2, #0]
 8015f46:	6851      	ldr	r1, [r2, #4]
 8015f48:	ad06      	add	r5, sp, #24
 8015f4a:	c503      	stmia	r5!, {r0, r1}
 8015f4c:	6818      	ldr	r0, [r3, #0]
 8015f4e:	6859      	ldr	r1, [r3, #4]
 8015f50:	ad08      	add	r5, sp, #32
 8015f52:	c503      	stmia	r5!, {r0, r1}
 8015f54:	a806      	add	r0, sp, #24
 8015f56:	f7f9 ff45 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015f5a:	4631      	mov	r1, r6
 8015f5c:	a808      	add	r0, sp, #32
 8015f5e:	f7f9 ff69 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015f62:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015f66:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015f6a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015f6e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8015f72:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015f76:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015f7a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8015f7e:	4f60      	ldr	r7, [pc, #384]	@ (8016100 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015f80:	440a      	add	r2, r1
 8015f82:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015f86:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015f8a:	6838      	ldr	r0, [r7, #0]
 8015f8c:	4413      	add	r3, r2
 8015f8e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015f92:	6803      	ldr	r3, [r0, #0]
 8015f94:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015f98:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015f9a:	4798      	blx	r3
 8015f9c:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8015fa0:	46b9      	mov	r9, r7
 8015fa2:	d11d      	bne.n	8015fe0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015fa4:	b9fc      	cbnz	r4, 8015fe6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015fa6:	f010 0f01 	tst.w	r0, #1
 8015faa:	d01c      	beq.n	8015fe6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015fac:	2700      	movs	r7, #0
 8015fae:	f8d9 0000 	ldr.w	r0, [r9]
 8015fb2:	b2ad      	uxth	r5, r5
 8015fb4:	6801      	ldr	r1, [r0, #0]
 8015fb6:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8015fba:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015fbe:	f8cd b00c 	str.w	fp, [sp, #12]
 8015fc2:	9402      	str	r4, [sp, #8]
 8015fc4:	fa1f f488 	uxth.w	r4, r8
 8015fc8:	9501      	str	r5, [sp, #4]
 8015fca:	9400      	str	r4, [sp, #0]
 8015fcc:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8015fce:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8015fd2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015fd6:	4631      	mov	r1, r6
 8015fd8:	47a0      	blx	r4
 8015fda:	b00b      	add	sp, #44	@ 0x2c
 8015fdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fe0:	f010 0f04 	tst.w	r0, #4
 8015fe4:	e7e1      	b.n	8015faa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015fe6:	f8d9 0000 	ldr.w	r0, [r9]
 8015fea:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8015fee:	6803      	ldr	r3, [r0, #0]
 8015ff0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ff2:	4798      	blx	r3
 8015ff4:	4b43      	ldr	r3, [pc, #268]	@ (8016104 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8015ff6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8015ffa:	881a      	ldrh	r2, [r3, #0]
 8015ffc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016000:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8016004:	fb02 1404 	mla	r4, r2, r4, r1
 8016008:	469a      	mov	sl, r3
 801600a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801600e:	fb05 f502 	mul.w	r5, r5, r2
 8016012:	d059      	beq.n	80160c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016014:	469e      	mov	lr, r3
 8016016:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801601a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801601e:	fa1f f28b 	uxth.w	r2, fp
 8016022:	fa1f f989 	uxth.w	r9, r9
 8016026:	42ac      	cmp	r4, r5
 8016028:	d264      	bcs.n	80160f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801602a:	eb04 0a07 	add.w	sl, r4, r7
 801602e:	4554      	cmp	r4, sl
 8016030:	d23d      	bcs.n	80160ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016032:	8821      	ldrh	r1, [r4, #0]
 8016034:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016038:	1208      	asrs	r0, r1, #8
 801603a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801603e:	fb10 f009 	smulbb	r0, r0, r9
 8016042:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016046:	00c9      	lsls	r1, r1, #3
 8016048:	b2c9      	uxtb	r1, r1
 801604a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801604e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016052:	fb11 f109 	smulbb	r1, r1, r9
 8016056:	fb1b fb09 	smulbb	fp, fp, r9
 801605a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801605e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016062:	10d8      	asrs	r0, r3, #3
 8016064:	00db      	lsls	r3, r3, #3
 8016066:	b2db      	uxtb	r3, r3
 8016068:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801606c:	fb03 1302 	mla	r3, r3, r2, r1
 8016070:	fb00 b002 	mla	r0, r0, r2, fp
 8016074:	fa1f fc8c 	uxth.w	ip, ip
 8016078:	f10c 0b01 	add.w	fp, ip, #1
 801607c:	b29b      	uxth	r3, r3
 801607e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8016082:	b280      	uxth	r0, r0
 8016084:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8016088:	f103 0c01 	add.w	ip, r3, #1
 801608c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016090:	1c43      	adds	r3, r0, #1
 8016092:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016096:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801609a:	0940      	lsrs	r0, r0, #5
 801609c:	ea4c 0c0b 	orr.w	ip, ip, fp
 80160a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80160a4:	ea4c 0c00 	orr.w	ip, ip, r0
 80160a8:	f824 cb02 	strh.w	ip, [r4], #2
 80160ac:	e7bf      	b.n	801602e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80160ae:	f8be 3000 	ldrh.w	r3, [lr]
 80160b2:	eba3 0308 	sub.w	r3, r3, r8
 80160b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160ba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80160be:	eba3 0308 	sub.w	r3, r3, r8
 80160c2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80160c6:	e7ae      	b.n	8016026 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80160c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80160cc:	f8d9 0000 	ldr.w	r0, [r9]
 80160d0:	42ac      	cmp	r4, r5
 80160d2:	6803      	ldr	r3, [r0, #0]
 80160d4:	d20e      	bcs.n	80160f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80160d6:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 80160da:	4632      	mov	r2, r6
 80160dc:	463b      	mov	r3, r7
 80160de:	4621      	mov	r1, r4
 80160e0:	47c0      	blx	r8
 80160e2:	f8ba 3000 	ldrh.w	r3, [sl]
 80160e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80160ea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80160ee:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80160f2:	e7eb      	b.n	80160cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80160f4:	4b02      	ldr	r3, [pc, #8]	@ (8016100 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80160f6:	6818      	ldr	r0, [r3, #0]
 80160f8:	6803      	ldr	r3, [r0, #0]
 80160fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80160fc:	4798      	blx	r3
 80160fe:	e76c      	b.n	8015fda <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016100:	20002230 	.word	0x20002230
 8016104:	2000222a 	.word	0x2000222a

08016108 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016108:	b510      	push	{r4, lr}
 801610a:	4604      	mov	r4, r0
 801610c:	2104      	movs	r1, #4
 801610e:	f00b fcb8 	bl	8021a82 <_ZdlPvj>
 8016112:	4620      	mov	r0, r4
 8016114:	bd10      	pop	{r4, pc}

08016116 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016116:	b510      	push	{r4, lr}
 8016118:	4604      	mov	r4, r0
 801611a:	2104      	movs	r1, #4
 801611c:	f00b fcb1 	bl	8021a82 <_ZdlPvj>
 8016120:	4620      	mov	r0, r4
 8016122:	bd10      	pop	{r4, pc}

08016124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016124:	b510      	push	{r4, lr}
 8016126:	4604      	mov	r4, r0
 8016128:	f640 0144 	movw	r1, #2116	@ 0x844
 801612c:	f00b fca9 	bl	8021a82 <_ZdlPvj>
 8016130:	4620      	mov	r0, r4
 8016132:	bd10      	pop	{r4, pc}

08016134 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8016134:	b510      	push	{r4, lr}
 8016136:	4604      	mov	r4, r0
 8016138:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801613c:	f00b fca1 	bl	8021a82 <_ZdlPvj>
 8016140:	4620      	mov	r0, r4
 8016142:	bd10      	pop	{r4, pc}

08016144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016144:	b510      	push	{r4, lr}
 8016146:	4604      	mov	r4, r0
 8016148:	2104      	movs	r1, #4
 801614a:	f00b fc9a 	bl	8021a82 <_ZdlPvj>
 801614e:	4620      	mov	r0, r4
 8016150:	bd10      	pop	{r4, pc}

08016152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016152:	b510      	push	{r4, lr}
 8016154:	4604      	mov	r4, r0
 8016156:	2104      	movs	r1, #4
 8016158:	f00b fc93 	bl	8021a82 <_ZdlPvj>
 801615c:	4620      	mov	r0, r4
 801615e:	bd10      	pop	{r4, pc}

08016160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016160:	b510      	push	{r4, lr}
 8016162:	4604      	mov	r4, r0
 8016164:	2104      	movs	r1, #4
 8016166:	f00b fc8c 	bl	8021a82 <_ZdlPvj>
 801616a:	4620      	mov	r0, r4
 801616c:	bd10      	pop	{r4, pc}

0801616e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801616e:	b510      	push	{r4, lr}
 8016170:	4604      	mov	r4, r0
 8016172:	2104      	movs	r1, #4
 8016174:	f00b fc85 	bl	8021a82 <_ZdlPvj>
 8016178:	4620      	mov	r0, r4
 801617a:	bd10      	pop	{r4, pc}

0801617c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801617c:	b510      	push	{r4, lr}
 801617e:	4604      	mov	r4, r0
 8016180:	2104      	movs	r1, #4
 8016182:	f00b fc7e 	bl	8021a82 <_ZdlPvj>
 8016186:	4620      	mov	r0, r4
 8016188:	bd10      	pop	{r4, pc}

0801618a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801618a:	b510      	push	{r4, lr}
 801618c:	4604      	mov	r4, r0
 801618e:	2104      	movs	r1, #4
 8016190:	f00b fc77 	bl	8021a82 <_ZdlPvj>
 8016194:	4620      	mov	r0, r4
 8016196:	bd10      	pop	{r4, pc}

08016198 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016198:	b510      	push	{r4, lr}
 801619a:	4604      	mov	r4, r0
 801619c:	2104      	movs	r1, #4
 801619e:	f00b fc70 	bl	8021a82 <_ZdlPvj>
 80161a2:	4620      	mov	r0, r4
 80161a4:	bd10      	pop	{r4, pc}

080161a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80161a6:	b510      	push	{r4, lr}
 80161a8:	4604      	mov	r4, r0
 80161aa:	2104      	movs	r1, #4
 80161ac:	f00b fc69 	bl	8021a82 <_ZdlPvj>
 80161b0:	4620      	mov	r0, r4
 80161b2:	bd10      	pop	{r4, pc}

080161b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80161b4:	b510      	push	{r4, lr}
 80161b6:	4604      	mov	r4, r0
 80161b8:	2104      	movs	r1, #4
 80161ba:	f00b fc62 	bl	8021a82 <_ZdlPvj>
 80161be:	4620      	mov	r0, r4
 80161c0:	bd10      	pop	{r4, pc}

080161c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80161c2:	b510      	push	{r4, lr}
 80161c4:	4604      	mov	r4, r0
 80161c6:	2104      	movs	r1, #4
 80161c8:	f00b fc5b 	bl	8021a82 <_ZdlPvj>
 80161cc:	4620      	mov	r0, r4
 80161ce:	bd10      	pop	{r4, pc}

080161d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80161d0:	b510      	push	{r4, lr}
 80161d2:	4604      	mov	r4, r0
 80161d4:	2104      	movs	r1, #4
 80161d6:	f00b fc54 	bl	8021a82 <_ZdlPvj>
 80161da:	4620      	mov	r0, r4
 80161dc:	bd10      	pop	{r4, pc}

080161de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80161de:	b510      	push	{r4, lr}
 80161e0:	4604      	mov	r4, r0
 80161e2:	2104      	movs	r1, #4
 80161e4:	f00b fc4d 	bl	8021a82 <_ZdlPvj>
 80161e8:	4620      	mov	r0, r4
 80161ea:	bd10      	pop	{r4, pc}

080161ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80161ec:	b510      	push	{r4, lr}
 80161ee:	4604      	mov	r4, r0
 80161f0:	2104      	movs	r1, #4
 80161f2:	f00b fc46 	bl	8021a82 <_ZdlPvj>
 80161f6:	4620      	mov	r0, r4
 80161f8:	bd10      	pop	{r4, pc}

080161fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80161fa:	b510      	push	{r4, lr}
 80161fc:	4604      	mov	r4, r0
 80161fe:	2104      	movs	r1, #4
 8016200:	f00b fc3f 	bl	8021a82 <_ZdlPvj>
 8016204:	4620      	mov	r0, r4
 8016206:	bd10      	pop	{r4, pc}

08016208 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016208:	b510      	push	{r4, lr}
 801620a:	4604      	mov	r4, r0
 801620c:	2104      	movs	r1, #4
 801620e:	f00b fc38 	bl	8021a82 <_ZdlPvj>
 8016212:	4620      	mov	r0, r4
 8016214:	bd10      	pop	{r4, pc}

08016216 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016216:	b510      	push	{r4, lr}
 8016218:	4604      	mov	r4, r0
 801621a:	2104      	movs	r1, #4
 801621c:	f00b fc31 	bl	8021a82 <_ZdlPvj>
 8016220:	4620      	mov	r0, r4
 8016222:	bd10      	pop	{r4, pc}

08016224 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016224:	b510      	push	{r4, lr}
 8016226:	4604      	mov	r4, r0
 8016228:	2104      	movs	r1, #4
 801622a:	f00b fc2a 	bl	8021a82 <_ZdlPvj>
 801622e:	4620      	mov	r0, r4
 8016230:	bd10      	pop	{r4, pc}

08016232 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016232:	b510      	push	{r4, lr}
 8016234:	4604      	mov	r4, r0
 8016236:	2104      	movs	r1, #4
 8016238:	f00b fc23 	bl	8021a82 <_ZdlPvj>
 801623c:	4620      	mov	r0, r4
 801623e:	bd10      	pop	{r4, pc}

08016240 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016240:	b510      	push	{r4, lr}
 8016242:	4604      	mov	r4, r0
 8016244:	2104      	movs	r1, #4
 8016246:	f00b fc1c 	bl	8021a82 <_ZdlPvj>
 801624a:	4620      	mov	r0, r4
 801624c:	bd10      	pop	{r4, pc}

0801624e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801624e:	b510      	push	{r4, lr}
 8016250:	4604      	mov	r4, r0
 8016252:	2104      	movs	r1, #4
 8016254:	f00b fc15 	bl	8021a82 <_ZdlPvj>
 8016258:	4620      	mov	r0, r4
 801625a:	bd10      	pop	{r4, pc}

0801625c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801625c:	b510      	push	{r4, lr}
 801625e:	4604      	mov	r4, r0
 8016260:	2104      	movs	r1, #4
 8016262:	f00b fc0e 	bl	8021a82 <_ZdlPvj>
 8016266:	4620      	mov	r0, r4
 8016268:	bd10      	pop	{r4, pc}

0801626a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801626a:	b510      	push	{r4, lr}
 801626c:	4604      	mov	r4, r0
 801626e:	2104      	movs	r1, #4
 8016270:	f00b fc07 	bl	8021a82 <_ZdlPvj>
 8016274:	4620      	mov	r0, r4
 8016276:	bd10      	pop	{r4, pc}

08016278 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016278:	b510      	push	{r4, lr}
 801627a:	4604      	mov	r4, r0
 801627c:	2104      	movs	r1, #4
 801627e:	f00b fc00 	bl	8021a82 <_ZdlPvj>
 8016282:	4620      	mov	r0, r4
 8016284:	bd10      	pop	{r4, pc}

08016286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016286:	b510      	push	{r4, lr}
 8016288:	4604      	mov	r4, r0
 801628a:	2104      	movs	r1, #4
 801628c:	f00b fbf9 	bl	8021a82 <_ZdlPvj>
 8016290:	4620      	mov	r0, r4
 8016292:	bd10      	pop	{r4, pc}

08016294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016294:	b510      	push	{r4, lr}
 8016296:	4604      	mov	r4, r0
 8016298:	2104      	movs	r1, #4
 801629a:	f00b fbf2 	bl	8021a82 <_ZdlPvj>
 801629e:	4620      	mov	r0, r4
 80162a0:	bd10      	pop	{r4, pc}

080162a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80162a2:	b510      	push	{r4, lr}
 80162a4:	4604      	mov	r4, r0
 80162a6:	2104      	movs	r1, #4
 80162a8:	f00b fbeb 	bl	8021a82 <_ZdlPvj>
 80162ac:	4620      	mov	r0, r4
 80162ae:	bd10      	pop	{r4, pc}

080162b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80162b0:	b510      	push	{r4, lr}
 80162b2:	4604      	mov	r4, r0
 80162b4:	2104      	movs	r1, #4
 80162b6:	f00b fbe4 	bl	8021a82 <_ZdlPvj>
 80162ba:	4620      	mov	r0, r4
 80162bc:	bd10      	pop	{r4, pc}

080162be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80162be:	b510      	push	{r4, lr}
 80162c0:	4604      	mov	r4, r0
 80162c2:	2104      	movs	r1, #4
 80162c4:	f00b fbdd 	bl	8021a82 <_ZdlPvj>
 80162c8:	4620      	mov	r0, r4
 80162ca:	bd10      	pop	{r4, pc}

080162cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80162cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162d0:	b08f      	sub	sp, #60	@ 0x3c
 80162d2:	4616      	mov	r6, r2
 80162d4:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80162d8:	4682      	mov	sl, r0
 80162da:	460d      	mov	r5, r1
 80162dc:	9205      	str	r2, [sp, #20]
 80162de:	2a00      	cmp	r2, #0
 80162e0:	f000 82b7 	beq.w	8016852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80162e4:	6830      	ldr	r0, [r6, #0]
 80162e6:	6871      	ldr	r1, [r6, #4]
 80162e8:	ac0a      	add	r4, sp, #40	@ 0x28
 80162ea:	c403      	stmia	r4!, {r0, r1}
 80162ec:	6818      	ldr	r0, [r3, #0]
 80162ee:	6859      	ldr	r1, [r3, #4]
 80162f0:	ac0c      	add	r4, sp, #48	@ 0x30
 80162f2:	c403      	stmia	r4!, {r0, r1}
 80162f4:	a80a      	add	r0, sp, #40	@ 0x28
 80162f6:	f7f9 fd75 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80162fa:	4631      	mov	r1, r6
 80162fc:	a80c      	add	r0, sp, #48	@ 0x30
 80162fe:	f7f9 fd99 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016302:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016306:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801630a:	bfdd      	ittte	le
 801630c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016310:	b293      	uxthle	r3, r2
 8016312:	fb91 f3f3 	sdivle	r3, r1, r3
 8016316:	2301      	movgt	r3, #1
 8016318:	9300      	str	r3, [sp, #0]
 801631a:	f105 0308 	add.w	r3, r5, #8
 801631e:	9900      	ldr	r1, [sp, #0]
 8016320:	9306      	str	r3, [sp, #24]
 8016322:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016326:	440b      	add	r3, r1
 8016328:	3b01      	subs	r3, #1
 801632a:	fb93 f3f1 	sdiv	r3, r3, r1
 801632e:	9906      	ldr	r1, [sp, #24]
 8016330:	3b01      	subs	r3, #1
 8016332:	b29b      	uxth	r3, r3
 8016334:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016338:	9307      	str	r3, [sp, #28]
 801633a:	9900      	ldr	r1, [sp, #0]
 801633c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016340:	fb93 f0f1 	sdiv	r0, r3, r1
 8016344:	b284      	uxth	r4, r0
 8016346:	9402      	str	r4, [sp, #8]
 8016348:	9d02      	ldr	r5, [sp, #8]
 801634a:	9c00      	ldr	r4, [sp, #0]
 801634c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8016350:	fb05 3414 	mls	r4, r5, r4, r3
 8016354:	fb14 f402 	smulbb	r4, r4, r2
 8016358:	440c      	add	r4, r1
 801635a:	b2a4      	uxth	r4, r4
 801635c:	2d00      	cmp	r5, #0
 801635e:	d06c      	beq.n	801643a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8016360:	9806      	ldr	r0, [sp, #24]
 8016362:	1e6a      	subs	r2, r5, #1
 8016364:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8016368:	9a07      	ldr	r2, [sp, #28]
 801636a:	ba36      	rev	r6, r6
 801636c:	4416      	add	r6, r2
 801636e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016372:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8016376:	4411      	add	r1, r2
 8016378:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801637c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8016380:	4413      	add	r3, r2
 8016382:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016386:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801638a:	f8df 9320 	ldr.w	r9, [pc, #800]	@ 80166ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801638e:	9301      	str	r3, [sp, #4]
 8016390:	4bc4      	ldr	r3, [pc, #784]	@ (80166a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8016392:	6818      	ldr	r0, [r3, #0]
 8016394:	6803      	ldr	r3, [r0, #0]
 8016396:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016398:	4798      	blx	r3
 801639a:	4bc3      	ldr	r3, [pc, #780]	@ (80166a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801639c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80163a0:	881b      	ldrh	r3, [r3, #0]
 80163a2:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80163a6:	fb03 2808 	mla	r8, r3, r8, r2
 80163aa:	436b      	muls	r3, r5
 80163ac:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80163b0:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80163b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80163b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80163ba:	2500      	movs	r5, #0
 80163bc:	fb94 f3f3 	sdiv	r3, r4, r3
 80163c0:	9304      	str	r3, [sp, #16]
 80163c2:	f10a 0304 	add.w	r3, sl, #4
 80163c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80163ca:	4629      	mov	r1, r5
 80163cc:	4618      	mov	r0, r3
 80163ce:	9308      	str	r3, [sp, #32]
 80163d0:	f00b fd8b 	bl	8021eea <memset>
 80163d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80163d6:	4543      	cmp	r3, r8
 80163d8:	f240 8236 	bls.w	8016848 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80163dc:	2203      	movs	r2, #3
 80163de:	2107      	movs	r1, #7
 80163e0:	200b      	movs	r0, #11
 80163e2:	2c00      	cmp	r4, #0
 80163e4:	f000 8131 	beq.w	801664a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80163e8:	7833      	ldrb	r3, [r6, #0]
 80163ea:	b2db      	uxtb	r3, r3
 80163ec:	2bfe      	cmp	r3, #254	@ 0xfe
 80163ee:	d126      	bne.n	801643e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80163f0:	f896 e001 	ldrb.w	lr, [r6, #1]
 80163f4:	f896 c002 	ldrb.w	ip, [r6, #2]
 80163f8:	fa5f fe8e 	uxtb.w	lr, lr
 80163fc:	f896 b003 	ldrb.w	fp, [r6, #3]
 8016400:	fa5f fc8c 	uxtb.w	ip, ip
 8016404:	f36e 0507 	bfi	r5, lr, #0, #8
 8016408:	f36c 250f 	bfi	r5, ip, #8, #8
 801640c:	fa5f fb8b 	uxtb.w	fp, fp
 8016410:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016414:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8016418:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801641c:	f36b 4517 	bfi	r5, fp, #16, #8
 8016420:	0e2b      	lsrs	r3, r5, #24
 8016422:	fb10 c303 	smlabb	r3, r0, r3, ip
 8016426:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801642a:	3c01      	subs	r4, #1
 801642c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016430:	1d37      	adds	r7, r6, #4
 8016432:	b2a4      	uxth	r4, r4
 8016434:	605d      	str	r5, [r3, #4]
 8016436:	463e      	mov	r6, r7
 8016438:	e7d3      	b.n	80163e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801643a:	9e07      	ldr	r6, [sp, #28]
 801643c:	e797      	b.n	801636e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801643e:	2bff      	cmp	r3, #255	@ 0xff
 8016440:	d127      	bne.n	8016492 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8016442:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016446:	78b3      	ldrb	r3, [r6, #2]
 8016448:	fa5f fc8c 	uxtb.w	ip, ip
 801644c:	f896 e003 	ldrb.w	lr, [r6, #3]
 8016450:	b2db      	uxtb	r3, r3
 8016452:	f36c 0507 	bfi	r5, ip, #0, #8
 8016456:	f363 250f 	bfi	r5, r3, #8, #8
 801645a:	fa5f fe8e 	uxtb.w	lr, lr
 801645e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8016462:	fb12 330e 	smlabb	r3, r2, lr, r3
 8016466:	fb11 330c 	smlabb	r3, r1, ip, r3
 801646a:	f896 b004 	ldrb.w	fp, [r6, #4]
 801646e:	f36e 4517 	bfi	r5, lr, #16, #8
 8016472:	fa5f fb8b 	uxtb.w	fp, fp
 8016476:	f36b 651f 	bfi	r5, fp, #24, #8
 801647a:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801647e:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8016482:	3c01      	subs	r4, #1
 8016484:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8016488:	1d77      	adds	r7, r6, #5
 801648a:	b2a4      	uxth	r4, r4
 801648c:	f8cb 5004 	str.w	r5, [fp, #4]
 8016490:	e7d1      	b.n	8016436 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016492:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8016496:	f106 0701 	add.w	r7, r6, #1
 801649a:	d107      	bne.n	80164ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801649c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80164a0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80164a4:	685d      	ldr	r5, [r3, #4]
 80164a6:	3c01      	subs	r4, #1
 80164a8:	b2a4      	uxth	r4, r4
 80164aa:	e7c4      	b.n	8016436 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80164ac:	f1bc 0f01 	cmp.w	ip, #1
 80164b0:	d12c      	bne.n	801650c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80164b2:	f003 0e03 	and.w	lr, r3, #3
 80164b6:	f1ae 0e02 	sub.w	lr, lr, #2
 80164ba:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80164be:	fa5f fe8e 	uxtb.w	lr, lr
 80164c2:	f003 0c0c 	and.w	ip, r3, #12
 80164c6:	f36e 0507 	bfi	r5, lr, #0, #8
 80164ca:	f1ac 0c08 	sub.w	ip, ip, #8
 80164ce:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80164d2:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80164d6:	f36c 250f 	bfi	r5, ip, #8, #8
 80164da:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80164de:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80164e2:	3b02      	subs	r3, #2
 80164e4:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80164e8:	b2db      	uxtb	r3, r3
 80164ea:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80164ee:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80164f2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80164f6:	f363 4517 	bfi	r5, r3, #16, #8
 80164fa:	0e2e      	lsrs	r6, r5, #24
 80164fc:	fb10 c606 	smlabb	r6, r0, r6, ip
 8016500:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8016504:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016508:	6075      	str	r5, [r6, #4]
 801650a:	e7cc      	b.n	80164a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801650c:	f1bc 0f02 	cmp.w	ip, #2
 8016510:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016514:	d12a      	bne.n	801656c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8016516:	1cb7      	adds	r7, r6, #2
 8016518:	7876      	ldrb	r6, [r6, #1]
 801651a:	3b20      	subs	r3, #32
 801651c:	b2f6      	uxtb	r6, r6
 801651e:	f006 0c0f 	and.w	ip, r6, #15
 8016522:	f1ac 0c08 	sub.w	ip, ip, #8
 8016526:	449c      	add	ip, r3
 8016528:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801652c:	fa5f fc8c 	uxtb.w	ip, ip
 8016530:	f36c 0507 	bfi	r5, ip, #0, #8
 8016534:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8016538:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801653c:	fa5f fe8e 	uxtb.w	lr, lr
 8016540:	1136      	asrs	r6, r6, #4
 8016542:	f36e 250f 	bfi	r5, lr, #8, #8
 8016546:	3e08      	subs	r6, #8
 8016548:	4433      	add	r3, r6
 801654a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801654e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016552:	b2db      	uxtb	r3, r3
 8016554:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8016558:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801655c:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8016560:	f363 4517 	bfi	r5, r3, #16, #8
 8016564:	0e2e      	lsrs	r6, r5, #24
 8016566:	fb10 e606 	smlabb	r6, r0, r6, lr
 801656a:	e7c9      	b.n	8016500 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801656c:	1c5e      	adds	r6, r3, #1
 801656e:	42a6      	cmp	r6, r4
 8016570:	dd4e      	ble.n	8016610 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8016572:	1b36      	subs	r6, r6, r4
 8016574:	2e00      	cmp	r6, #0
 8016576:	dc4e      	bgt.n	8016616 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8016578:	2400      	movs	r4, #0
 801657a:	f8dd b004 	ldr.w	fp, [sp, #4]
 801657e:	f1bb 0f00 	cmp.w	fp, #0
 8016582:	f340 8122 	ble.w	80167ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8016586:	1c7b      	adds	r3, r7, #1
 8016588:	9303      	str	r3, [sp, #12]
 801658a:	783b      	ldrb	r3, [r7, #0]
 801658c:	b2db      	uxtb	r3, r3
 801658e:	2bfe      	cmp	r3, #254	@ 0xfe
 8016590:	d160      	bne.n	8016654 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8016592:	1d3b      	adds	r3, r7, #4
 8016594:	9303      	str	r3, [sp, #12]
 8016596:	2303      	movs	r3, #3
 8016598:	7879      	ldrb	r1, [r7, #1]
 801659a:	78ba      	ldrb	r2, [r7, #2]
 801659c:	b2c9      	uxtb	r1, r1
 801659e:	78f8      	ldrb	r0, [r7, #3]
 80165a0:	f361 0507 	bfi	r5, r1, #0, #8
 80165a4:	b2d2      	uxtb	r2, r2
 80165a6:	f362 250f 	bfi	r5, r2, #8, #8
 80165aa:	b2c0      	uxtb	r0, r0
 80165ac:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80165b0:	fb13 2200 	smlabb	r2, r3, r0, r2
 80165b4:	2307      	movs	r3, #7
 80165b6:	fb13 2101 	smlabb	r1, r3, r1, r2
 80165ba:	230b      	movs	r3, #11
 80165bc:	f360 4517 	bfi	r5, r0, #16, #8
 80165c0:	0e2e      	lsrs	r6, r5, #24
 80165c2:	fb13 1306 	smlabb	r3, r3, r6, r1
 80165c6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80165ca:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80165ce:	605d      	str	r5, [r3, #4]
 80165d0:	2601      	movs	r6, #1
 80165d2:	4637      	mov	r7, r6
 80165d4:	0e2b      	lsrs	r3, r5, #24
 80165d6:	ebab 0b07 	sub.w	fp, fp, r7
 80165da:	eba6 0607 	sub.w	r6, r6, r7
 80165de:	f040 80d3 	bne.w	8016788 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80165e2:	b18c      	cbz	r4, 8016608 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80165e4:	4648      	mov	r0, r9
 80165e6:	00a1      	lsls	r1, r4, #2
 80165e8:	f7f5 fcf5 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 80165ec:	9b05      	ldr	r3, [sp, #20]
 80165ee:	4622      	mov	r2, r4
 80165f0:	4649      	mov	r1, r9
 80165f2:	4640      	mov	r0, r8
 80165f4:	f7f5 fda2 	bl	800c13c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80165f8:	4b2c      	ldr	r3, [pc, #176]	@ (80166ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80165fa:	4a2d      	ldr	r2, [pc, #180]	@ (80166b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80165fc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016600:	4599      	cmp	r9, r3
 8016602:	bf08      	it	eq
 8016604:	4613      	moveq	r3, r2
 8016606:	4699      	mov	r9, r3
 8016608:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801660c:	2400      	movs	r4, #0
 801660e:	e0da      	b.n	80167c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8016610:	1ba6      	subs	r6, r4, r6
 8016612:	b2b4      	uxth	r4, r6
 8016614:	e70f      	b.n	8016436 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016616:	9b01      	ldr	r3, [sp, #4]
 8016618:	9a01      	ldr	r2, [sp, #4]
 801661a:	42b3      	cmp	r3, r6
 801661c:	bfa8      	it	ge
 801661e:	4633      	movge	r3, r6
 8016620:	0e2c      	lsrs	r4, r5, #24
 8016622:	eba2 0b03 	sub.w	fp, r2, r3
 8016626:	eba6 0603 	sub.w	r6, r6, r3
 801662a:	d00b      	beq.n	8016644 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801662c:	461a      	mov	r2, r3
 801662e:	f1a9 0104 	sub.w	r1, r9, #4
 8016632:	2a00      	cmp	r2, #0
 8016634:	dc02      	bgt.n	801663c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8016636:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801663a:	e7a0      	b.n	801657e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801663c:	f841 5f04 	str.w	r5, [r1, #4]!
 8016640:	3a01      	subs	r2, #1
 8016642:	e7f6      	b.n	8016632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8016644:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016648:	e799      	b.n	801657e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801664a:	4637      	mov	r7, r6
 801664c:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016650:	4626      	mov	r6, r4
 8016652:	e794      	b.n	801657e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016654:	2bff      	cmp	r3, #255	@ 0xff
 8016656:	d11d      	bne.n	8016694 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8016658:	1d7b      	adds	r3, r7, #5
 801665a:	7878      	ldrb	r0, [r7, #1]
 801665c:	9303      	str	r3, [sp, #12]
 801665e:	78ba      	ldrb	r2, [r7, #2]
 8016660:	78fe      	ldrb	r6, [r7, #3]
 8016662:	793b      	ldrb	r3, [r7, #4]
 8016664:	b2c0      	uxtb	r0, r0
 8016666:	b2d9      	uxtb	r1, r3
 8016668:	2303      	movs	r3, #3
 801666a:	f360 0507 	bfi	r5, r0, #0, #8
 801666e:	b2d2      	uxtb	r2, r2
 8016670:	f362 250f 	bfi	r5, r2, #8, #8
 8016674:	b2f6      	uxtb	r6, r6
 8016676:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801667a:	fb13 2206 	smlabb	r2, r3, r6, r2
 801667e:	2307      	movs	r3, #7
 8016680:	fb13 2000 	smlabb	r0, r3, r0, r2
 8016684:	230b      	movs	r3, #11
 8016686:	f366 4517 	bfi	r5, r6, #16, #8
 801668a:	f361 651f 	bfi	r5, r1, #24, #8
 801668e:	fb13 0301 	smlabb	r3, r3, r1, r0
 8016692:	e798      	b.n	80165c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8016694:	119e      	asrs	r6, r3, #6
 8016696:	d10d      	bne.n	80166b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8016698:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801669c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80166a0:	685d      	ldr	r5, [r3, #4]
 80166a2:	e795      	b.n	80165d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80166a4:	20002230 	.word	0x20002230
 80166a8:	2000222a 	.word	0x2000222a
 80166ac:	20000100 	.word	0x20000100
 80166b0:	20000200 	.word	0x20000200
 80166b4:	2e01      	cmp	r6, #1
 80166b6:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80166ba:	d12b      	bne.n	8016714 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80166bc:	f003 0003 	and.w	r0, r3, #3
 80166c0:	3802      	subs	r0, #2
 80166c2:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80166c6:	b2c0      	uxtb	r0, r0
 80166c8:	f003 020c 	and.w	r2, r3, #12
 80166cc:	f360 0507 	bfi	r5, r0, #0, #8
 80166d0:	3a08      	subs	r2, #8
 80166d2:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80166d6:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80166da:	f362 250f 	bfi	r5, r2, #8, #8
 80166de:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80166e2:	1e9f      	subs	r7, r3, #2
 80166e4:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80166e8:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80166ec:	2703      	movs	r7, #3
 80166ee:	b2db      	uxtb	r3, r3
 80166f0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80166f4:	fb17 2203 	smlabb	r2, r7, r3, r2
 80166f8:	2707      	movs	r7, #7
 80166fa:	f363 4517 	bfi	r5, r3, #16, #8
 80166fe:	230b      	movs	r3, #11
 8016700:	fb17 2000 	smlabb	r0, r7, r0, r2
 8016704:	fb13 0101 	smlabb	r1, r3, r1, r0
 8016708:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801670c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016710:	604d      	str	r5, [r1, #4]
 8016712:	e75e      	b.n	80165d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8016714:	2e02      	cmp	r6, #2
 8016716:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801671a:	d12f      	bne.n	801677c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801671c:	7878      	ldrb	r0, [r7, #1]
 801671e:	1cba      	adds	r2, r7, #2
 8016720:	b2c0      	uxtb	r0, r0
 8016722:	9203      	str	r2, [sp, #12]
 8016724:	f000 020f 	and.w	r2, r0, #15
 8016728:	3b20      	subs	r3, #32
 801672a:	3a08      	subs	r2, #8
 801672c:	441a      	add	r2, r3
 801672e:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8016732:	b2d2      	uxtb	r2, r2
 8016734:	f362 0507 	bfi	r5, r2, #0, #8
 8016738:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801673c:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8016740:	b2f6      	uxtb	r6, r6
 8016742:	1100      	asrs	r0, r0, #4
 8016744:	f366 250f 	bfi	r5, r6, #8, #8
 8016748:	3808      	subs	r0, #8
 801674a:	4403      	add	r3, r0
 801674c:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8016750:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016754:	2003      	movs	r0, #3
 8016756:	b2db      	uxtb	r3, r3
 8016758:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801675c:	fb10 6603 	smlabb	r6, r0, r3, r6
 8016760:	2007      	movs	r0, #7
 8016762:	f363 4517 	bfi	r5, r3, #16, #8
 8016766:	230b      	movs	r3, #11
 8016768:	fb10 6202 	smlabb	r2, r0, r2, r6
 801676c:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016770:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8016774:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016778:	604d      	str	r5, [r1, #4]
 801677a:	e729      	b.n	80165d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801677c:	1c5e      	adds	r6, r3, #1
 801677e:	45b3      	cmp	fp, r6
 8016780:	465f      	mov	r7, fp
 8016782:	bfa8      	it	ge
 8016784:	4637      	movge	r7, r6
 8016786:	e725      	b.n	80165d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8016788:	193b      	adds	r3, r7, r4
 801678a:	2b40      	cmp	r3, #64	@ 0x40
 801678c:	dd13      	ble.n	80167b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801678e:	4648      	mov	r0, r9
 8016790:	00a1      	lsls	r1, r4, #2
 8016792:	f7f5 fc20 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 8016796:	4622      	mov	r2, r4
 8016798:	4640      	mov	r0, r8
 801679a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801679e:	2400      	movs	r4, #0
 80167a0:	4649      	mov	r1, r9
 80167a2:	9b05      	ldr	r3, [sp, #20]
 80167a4:	f7f5 fcca 	bl	800c13c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80167a8:	4b2b      	ldr	r3, [pc, #172]	@ (8016858 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80167aa:	4599      	cmp	r9, r3
 80167ac:	bf0c      	ite	eq
 80167ae:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 8016864 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80167b2:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 8016858 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80167b6:	463b      	mov	r3, r7
 80167b8:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80167bc:	3b01      	subs	r3, #1
 80167be:	f842 5b04 	str.w	r5, [r2], #4
 80167c2:	d1fb      	bne.n	80167bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80167c4:	443c      	add	r4, r7
 80167c6:	9f03      	ldr	r7, [sp, #12]
 80167c8:	e6d9      	b.n	801657e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80167ca:	b15c      	cbz	r4, 80167e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80167cc:	00a1      	lsls	r1, r4, #2
 80167ce:	4648      	mov	r0, r9
 80167d0:	f7f5 fc01 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 80167d4:	4640      	mov	r0, r8
 80167d6:	9b05      	ldr	r3, [sp, #20]
 80167d8:	4622      	mov	r2, r4
 80167da:	4649      	mov	r1, r9
 80167dc:	f7f5 fcae 	bl	800c13c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80167e0:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80167e4:	4b1d      	ldr	r3, [pc, #116]	@ (801685c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80167e6:	9a01      	ldr	r2, [sp, #4]
 80167e8:	881b      	ldrh	r3, [r3, #0]
 80167ea:	1a9b      	subs	r3, r3, r2
 80167ec:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80167f0:	9b04      	ldr	r3, [sp, #16]
 80167f2:	3301      	adds	r3, #1
 80167f4:	9304      	str	r3, [sp, #16]
 80167f6:	9a04      	ldr	r2, [sp, #16]
 80167f8:	9b00      	ldr	r3, [sp, #0]
 80167fa:	4293      	cmp	r3, r2
 80167fc:	d11d      	bne.n	801683a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 80167fe:	2500      	movs	r5, #0
 8016800:	9b02      	ldr	r3, [sp, #8]
 8016802:	9a02      	ldr	r2, [sp, #8]
 8016804:	f103 0b01 	add.w	fp, r3, #1
 8016808:	9b06      	ldr	r3, [sp, #24]
 801680a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801680e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016812:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8016816:	9b07      	ldr	r3, [sp, #28]
 8016818:	ba3f      	rev	r7, r7
 801681a:	1ba4      	subs	r4, r4, r6
 801681c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016820:	4629      	mov	r1, r5
 8016822:	9808      	ldr	r0, [sp, #32]
 8016824:	441f      	add	r7, r3
 8016826:	b2a4      	uxth	r4, r4
 8016828:	f00b fb5f 	bl	8021eea <memset>
 801682c:	f8cd b008 	str.w	fp, [sp, #8]
 8016830:	9504      	str	r5, [sp, #16]
 8016832:	f7f5 fbc9 	bl	800bfc8 <_ZN8touchgfx5paint8tearDownEv>
 8016836:	463e      	mov	r6, r7
 8016838:	e5cc      	b.n	80163d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801683a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801683e:	9b01      	ldr	r3, [sp, #4]
 8016840:	1ae4      	subs	r4, r4, r3
 8016842:	1ba4      	subs	r4, r4, r6
 8016844:	b2a4      	uxth	r4, r4
 8016846:	e7f4      	b.n	8016832 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8016848:	4b05      	ldr	r3, [pc, #20]	@ (8016860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801684a:	6818      	ldr	r0, [r3, #0]
 801684c:	6803      	ldr	r3, [r0, #0]
 801684e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016850:	4798      	blx	r3
 8016852:	b00f      	add	sp, #60	@ 0x3c
 8016854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016858:	20000100 	.word	0x20000100
 801685c:	2000222a 	.word	0x2000222a
 8016860:	20002230 	.word	0x20002230
 8016864:	20000200 	.word	0x20000200

08016868 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801686c:	b08f      	sub	sp, #60	@ 0x3c
 801686e:	9205      	str	r2, [sp, #20]
 8016870:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016874:	461c      	mov	r4, r3
 8016876:	9100      	str	r1, [sp, #0]
 8016878:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801687a:	9201      	str	r2, [sp, #4]
 801687c:	2a00      	cmp	r2, #0
 801687e:	f000 8116 	beq.w	8016aae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8016882:	6820      	ldr	r0, [r4, #0]
 8016884:	6861      	ldr	r1, [r4, #4]
 8016886:	aa0a      	add	r2, sp, #40	@ 0x28
 8016888:	c203      	stmia	r2!, {r0, r1}
 801688a:	6818      	ldr	r0, [r3, #0]
 801688c:	6859      	ldr	r1, [r3, #4]
 801688e:	aa0c      	add	r2, sp, #48	@ 0x30
 8016890:	c203      	stmia	r2!, {r0, r1}
 8016892:	a80a      	add	r0, sp, #40	@ 0x28
 8016894:	f7f9 faa6 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016898:	4621      	mov	r1, r4
 801689a:	a80c      	add	r0, sp, #48	@ 0x30
 801689c:	f7f9 faca 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80168a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80168a4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80168a8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80168ac:	bfdd      	ittte	le
 80168ae:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80168b2:	b2b3      	uxthle	r3, r6
 80168b4:	fb92 f3f3 	sdivle	r3, r2, r3
 80168b8:	2301      	movgt	r3, #1
 80168ba:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80168be:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80168c2:	fb92 f1f3 	sdiv	r1, r2, r3
 80168c6:	fa1f fc81 	uxth.w	ip, r1
 80168ca:	4661      	mov	r1, ip
 80168cc:	fb0c 2413 	mls	r4, ip, r3, r2
 80168d0:	fb14 f406 	smulbb	r4, r4, r6
 80168d4:	441d      	add	r5, r3
 80168d6:	3d01      	subs	r5, #1
 80168d8:	4404      	add	r4, r0
 80168da:	fb95 f5f3 	sdiv	r5, r5, r3
 80168de:	b2a4      	uxth	r4, r4
 80168e0:	b131      	cbz	r1, 80168f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 80168e2:	9b05      	ldr	r3, [sp, #20]
 80168e4:	9900      	ldr	r1, [sp, #0]
 80168e6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80168ea:	ba1b      	rev	r3, r3
 80168ec:	4419      	add	r1, r3
 80168ee:	9100      	str	r1, [sp, #0]
 80168f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80168f4:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80168f8:	4418      	add	r0, r3
 80168fa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80168fe:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8016902:	441a      	add	r2, r3
 8016904:	4b6b      	ldr	r3, [pc, #428]	@ (8016ab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016906:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801690a:	6818      	ldr	r0, [r3, #0]
 801690c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016910:	6803      	ldr	r3, [r0, #0]
 8016912:	b2ad      	uxth	r5, r5
 8016914:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016916:	4798      	blx	r3
 8016918:	4967      	ldr	r1, [pc, #412]	@ (8016ab8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801691a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801691e:	880b      	ldrh	r3, [r1, #0]
 8016920:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8016924:	00ad      	lsls	r5, r5, #2
 8016926:	fb03 c202 	mla	r2, r3, r2, ip
 801692a:	4373      	muls	r3, r6
 801692c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016930:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016934:	9306      	str	r3, [sp, #24]
 8016936:	1d2b      	adds	r3, r5, #4
 8016938:	9307      	str	r3, [sp, #28]
 801693a:	9b01      	ldr	r3, [sp, #4]
 801693c:	2c00      	cmp	r4, #0
 801693e:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8016942:	bf0c      	ite	eq
 8016944:	46c6      	moveq	lr, r8
 8016946:	f04f 0e00 	movne.w	lr, #0
 801694a:	2300      	movs	r3, #0
 801694c:	9109      	str	r1, [sp, #36]	@ 0x24
 801694e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016952:	b292      	uxth	r2, r2
 8016954:	fa1f fe8e 	uxth.w	lr, lr
 8016958:	9302      	str	r3, [sp, #8]
 801695a:	9103      	str	r1, [sp, #12]
 801695c:	9204      	str	r2, [sp, #16]
 801695e:	9a06      	ldr	r2, [sp, #24]
 8016960:	4282      	cmp	r2, r0
 8016962:	f240 809f 	bls.w	8016aa4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8016966:	b963      	cbnz	r3, 8016982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8016968:	9b00      	ldr	r3, [sp, #0]
 801696a:	781a      	ldrb	r2, [r3, #0]
 801696c:	0993      	lsrs	r3, r2, #6
 801696e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016972:	9202      	str	r2, [sp, #8]
 8016974:	1e5a      	subs	r2, r3, #1
 8016976:	2a02      	cmp	r2, #2
 8016978:	d815      	bhi.n	80169a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801697a:	9a00      	ldr	r2, [sp, #0]
 801697c:	b29b      	uxth	r3, r3
 801697e:	3201      	adds	r2, #1
 8016980:	9200      	str	r2, [sp, #0]
 8016982:	b1b4      	cbz	r4, 80169b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8016984:	429c      	cmp	r4, r3
 8016986:	bf99      	ittee	ls
 8016988:	1b1c      	subls	r4, r3, r4
 801698a:	fa1f fa84 	uxthls.w	sl, r4
 801698e:	4671      	movhi	r1, lr
 8016990:	f04f 0a00 	movhi.w	sl, #0
 8016994:	bf93      	iteet	ls
 8016996:	2400      	movls	r4, #0
 8016998:	1ae4      	subhi	r4, r4, r3
 801699a:	b2a4      	uxthhi	r4, r4
 801699c:	fa1f f188 	uxthls.w	r1, r8
 80169a0:	4653      	mov	r3, sl
 80169a2:	468e      	mov	lr, r1
 80169a4:	e7db      	b.n	801695e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 80169a6:	9a00      	ldr	r2, [sp, #0]
 80169a8:	9b00      	ldr	r3, [sp, #0]
 80169aa:	3202      	adds	r2, #2
 80169ac:	785b      	ldrb	r3, [r3, #1]
 80169ae:	9200      	str	r2, [sp, #0]
 80169b0:	e7e7      	b.n	8016982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 80169b2:	2202      	movs	r2, #2
 80169b4:	4615      	mov	r5, r2
 80169b6:	4573      	cmp	r3, lr
 80169b8:	bf2c      	ite	cs
 80169ba:	46f1      	movcs	r9, lr
 80169bc:	4699      	movcc	r9, r3
 80169be:	9907      	ldr	r1, [sp, #28]
 80169c0:	9a02      	ldr	r2, [sp, #8]
 80169c2:	bf28      	it	cs
 80169c4:	eba3 0a0e 	subcs.w	sl, r3, lr
 80169c8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80169cc:	9905      	ldr	r1, [sp, #20]
 80169ce:	bf28      	it	cs
 80169d0:	fa1f fa8a 	uxthcs.w	sl, sl
 80169d4:	f831 c002 	ldrh.w	ip, [r1, r2]
 80169d8:	9a01      	ldr	r2, [sp, #4]
 80169da:	bf37      	itett	cc
 80169dc:	ebae 0103 	subcc.w	r1, lr, r3
 80169e0:	4621      	movcs	r1, r4
 80169e2:	b289      	uxthcc	r1, r1
 80169e4:	46a2      	movcc	sl, r4
 80169e6:	2aff      	cmp	r2, #255	@ 0xff
 80169e8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80169ec:	d105      	bne.n	80169fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 80169ee:	4481      	add	r9, r0
 80169f0:	4581      	cmp	r9, r0
 80169f2:	d045      	beq.n	8016a80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 80169f4:	f820 cb02 	strh.w	ip, [r0], #2
 80169f8:	e7fa      	b.n	80169f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 80169fa:	9d03      	ldr	r5, [sp, #12]
 80169fc:	ea4f 222c 	mov.w	r2, ip, asr #8
 8016a00:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016a04:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8016a08:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016a0c:	436a      	muls	r2, r5
 8016a0e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016a12:	fa5f fc8c 	uxtb.w	ip, ip
 8016a16:	fb0b fb05 	mul.w	fp, fp, r5
 8016a1a:	fb0c fc05 	mul.w	ip, ip, r5
 8016a1e:	9208      	str	r2, [sp, #32]
 8016a20:	4481      	add	r9, r0
 8016a22:	4581      	cmp	r9, r0
 8016a24:	d02c      	beq.n	8016a80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8016a26:	8802      	ldrh	r2, [r0, #0]
 8016a28:	9d04      	ldr	r5, [sp, #16]
 8016a2a:	1216      	asrs	r6, r2, #8
 8016a2c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016a30:	fb16 f605 	smulbb	r6, r6, r5
 8016a34:	9d08      	ldr	r5, [sp, #32]
 8016a36:	9f04      	ldr	r7, [sp, #16]
 8016a38:	442e      	add	r6, r5
 8016a3a:	10d5      	asrs	r5, r2, #3
 8016a3c:	00d2      	lsls	r2, r2, #3
 8016a3e:	b2d2      	uxtb	r2, r2
 8016a40:	fb12 f207 	smulbb	r2, r2, r7
 8016a44:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016a48:	fb15 f507 	smulbb	r5, r5, r7
 8016a4c:	b2b6      	uxth	r6, r6
 8016a4e:	4462      	add	r2, ip
 8016a50:	b292      	uxth	r2, r2
 8016a52:	1c77      	adds	r7, r6, #1
 8016a54:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016a58:	1c57      	adds	r7, r2, #1
 8016a5a:	445d      	add	r5, fp
 8016a5c:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8016a60:	b2ad      	uxth	r5, r5
 8016a62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016a66:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016a6a:	4316      	orrs	r6, r2
 8016a6c:	1c6a      	adds	r2, r5, #1
 8016a6e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016a72:	096d      	lsrs	r5, r5, #5
 8016a74:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016a78:	432e      	orrs	r6, r5
 8016a7a:	f820 6b02 	strh.w	r6, [r0], #2
 8016a7e:	e7d0      	b.n	8016a22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8016a80:	4573      	cmp	r3, lr
 8016a82:	d38d      	bcc.n	80169a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016a84:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016a88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016a8a:	fa1f f188 	uxth.w	r1, r8
 8016a8e:	1a64      	subs	r4, r4, r1
 8016a90:	881b      	ldrh	r3, [r3, #0]
 8016a92:	b2a4      	uxth	r4, r4
 8016a94:	2c00      	cmp	r4, #0
 8016a96:	eba3 0308 	sub.w	r3, r3, r8
 8016a9a:	bf18      	it	ne
 8016a9c:	2100      	movne	r1, #0
 8016a9e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016aa2:	e77d      	b.n	80169a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8016aa4:	4b03      	ldr	r3, [pc, #12]	@ (8016ab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016aa6:	6818      	ldr	r0, [r3, #0]
 8016aa8:	6803      	ldr	r3, [r0, #0]
 8016aaa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016aac:	4798      	blx	r3
 8016aae:	b00f      	add	sp, #60	@ 0x3c
 8016ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ab4:	20002230 	.word	0x20002230
 8016ab8:	2000222a 	.word	0x2000222a

08016abc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ac0:	b09f      	sub	sp, #124	@ 0x7c
 8016ac2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016ac6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016aca:	461d      	mov	r5, r3
 8016acc:	4604      	mov	r4, r0
 8016ace:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8016ad0:	9209      	str	r2, [sp, #36]	@ 0x24
 8016ad2:	2a00      	cmp	r2, #0
 8016ad4:	f000 81e9 	beq.w	8016eaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ee>
 8016ad8:	6828      	ldr	r0, [r5, #0]
 8016ada:	6869      	ldr	r1, [r5, #4]
 8016adc:	aa1a      	add	r2, sp, #104	@ 0x68
 8016ade:	c203      	stmia	r2!, {r0, r1}
 8016ae0:	6818      	ldr	r0, [r3, #0]
 8016ae2:	6859      	ldr	r1, [r3, #4]
 8016ae4:	aa1c      	add	r2, sp, #112	@ 0x70
 8016ae6:	c203      	stmia	r2!, {r0, r1}
 8016ae8:	a81a      	add	r0, sp, #104	@ 0x68
 8016aea:	f7f9 f97b 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016aee:	4629      	mov	r1, r5
 8016af0:	a81c      	add	r0, sp, #112	@ 0x70
 8016af2:	f7f9 f99f 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016af6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016afa:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8016afe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016b02:	bfdd      	ittte	le
 8016b04:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016b08:	b29a      	uxthle	r2, r3
 8016b0a:	fb91 f2f2 	sdivle	r2, r1, r2
 8016b0e:	2201      	movgt	r2, #1
 8016b10:	9202      	str	r2, [sp, #8]
 8016b12:	9802      	ldr	r0, [sp, #8]
 8016b14:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8016b18:	9902      	ldr	r1, [sp, #8]
 8016b1a:	fb92 f0f0 	sdiv	r0, r2, r0
 8016b1e:	b280      	uxth	r0, r0
 8016b20:	9010      	str	r0, [sp, #64]	@ 0x40
 8016b22:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8016b24:	9802      	ldr	r0, [sp, #8]
 8016b26:	4488      	add	r8, r1
 8016b28:	fb05 2510 	mls	r5, r5, r0, r2
 8016b2c:	fb15 f503 	smulbb	r5, r5, r3
 8016b30:	f108 38ff 	add.w	r8, r8, #4294967295
 8016b34:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8016b38:	fb98 f8f1 	sdiv	r8, r8, r1
 8016b3c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8016b40:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8016b44:	440d      	add	r5, r1
 8016b46:	4419      	add	r1, r3
 8016b48:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8016b4c:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8016b50:	441a      	add	r2, r3
 8016b52:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016b56:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016b5a:	9304      	str	r3, [sp, #16]
 8016b5c:	4b93      	ldr	r3, [pc, #588]	@ (8016dac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f0>)
 8016b5e:	f108 0801 	add.w	r8, r8, #1
 8016b62:	6818      	ldr	r0, [r3, #0]
 8016b64:	fa1f f888 	uxth.w	r8, r8
 8016b68:	6803      	ldr	r3, [r0, #0]
 8016b6a:	b2ad      	uxth	r5, r5
 8016b6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016b6e:	4798      	blx	r3
 8016b70:	4b8f      	ldr	r3, [pc, #572]	@ (8016db0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016b72:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016b76:	881a      	ldrh	r2, [r3, #0]
 8016b78:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8016b7c:	4356      	muls	r6, r2
 8016b7e:	fb02 7101 	mla	r1, r2, r1, r7
 8016b82:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016b86:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016b8a:	920a      	str	r2, [sp, #40]	@ 0x28
 8016b8c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016b8e:	2d00      	cmp	r5, #0
 8016b90:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016b94:	f108 0204 	add.w	r2, r8, #4
 8016b98:	9211      	str	r2, [sp, #68]	@ 0x44
 8016b9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016b9c:	f04f 0100 	mov.w	r1, #0
 8016ba0:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8016ba4:	9215      	str	r2, [sp, #84]	@ 0x54
 8016ba6:	9a04      	ldr	r2, [sp, #16]
 8016ba8:	bf18      	it	ne
 8016baa:	2200      	movne	r2, #0
 8016bac:	9318      	str	r3, [sp, #96]	@ 0x60
 8016bae:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8016bb2:	b292      	uxth	r2, r2
 8016bb4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8016bb6:	4b7f      	ldr	r3, [pc, #508]	@ (8016db4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016bb8:	910d      	str	r1, [sp, #52]	@ 0x34
 8016bba:	1b1b      	subs	r3, r3, r4
 8016bbc:	9319      	str	r3, [sp, #100]	@ 0x64
 8016bbe:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016bc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016bc2:	fa11 f383 	uxtah	r3, r1, r3
 8016bc6:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016bc8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016bcc:	3304      	adds	r3, #4
 8016bce:	9306      	str	r3, [sp, #24]
 8016bd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016bd2:	4283      	cmp	r3, r0
 8016bd4:	f240 8164 	bls.w	8016ea0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e4>
 8016bd8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8016bdc:	f04f 0a01 	mov.w	sl, #1
 8016be0:	fbb5 f3f3 	udiv	r3, r5, r3
 8016be4:	9902      	ldr	r1, [sp, #8]
 8016be6:	9e06      	ldr	r6, [sp, #24]
 8016be8:	1acb      	subs	r3, r1, r3
 8016bea:	b29b      	uxth	r3, r3
 8016bec:	9316      	str	r3, [sp, #88]	@ 0x58
 8016bee:	9b06      	ldr	r3, [sp, #24]
 8016bf0:	7836      	ldrb	r6, [r6, #0]
 8016bf2:	7859      	ldrb	r1, [r3, #1]
 8016bf4:	789b      	ldrb	r3, [r3, #2]
 8016bf6:	9612      	str	r6, [sp, #72]	@ 0x48
 8016bf8:	021b      	lsls	r3, r3, #8
 8016bfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016bfe:	9906      	ldr	r1, [sp, #24]
 8016c00:	3601      	adds	r6, #1
 8016c02:	78c9      	ldrb	r1, [r1, #3]
 8016c04:	9605      	str	r6, [sp, #20]
 8016c06:	430b      	orrs	r3, r1
 8016c08:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8016c0a:	46d3      	mov	fp, sl
 8016c0c:	4419      	add	r1, r3
 8016c0e:	1c4e      	adds	r6, r1, #1
 8016c10:	9603      	str	r6, [sp, #12]
 8016c12:	7849      	ldrb	r1, [r1, #1]
 8016c14:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016c16:	0209      	lsls	r1, r1, #8
 8016c18:	5cf3      	ldrb	r3, [r6, r3]
 8016c1a:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8016c1e:	4319      	orrs	r1, r3
 8016c20:	b28b      	uxth	r3, r1
 8016c22:	930c      	str	r3, [sp, #48]	@ 0x30
 8016c24:	2300      	movs	r3, #0
 8016c26:	4657      	mov	r7, sl
 8016c28:	9307      	str	r3, [sp, #28]
 8016c2a:	469c      	mov	ip, r3
 8016c2c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8016c30:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8016c34:	930e      	str	r3, [sp, #56]	@ 0x38
 8016c36:	2d00      	cmp	r5, #0
 8016c38:	d07e      	beq.n	8016d38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016c3a:	42af      	cmp	r7, r5
 8016c3c:	d26e      	bcs.n	8016d1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016c3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016c40:	1bed      	subs	r5, r5, r7
 8016c42:	4283      	cmp	r3, r0
 8016c44:	b2ad      	uxth	r5, r5
 8016c46:	9201      	str	r2, [sp, #4]
 8016c48:	d802      	bhi.n	8016c50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016c4a:	e073      	b.n	8016d34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016c4c:	2b00      	cmp	r3, #0
 8016c4e:	d15f      	bne.n	8016d10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016c50:	9b03      	ldr	r3, [sp, #12]
 8016c52:	f1cb 0207 	rsb	r2, fp, #7
 8016c56:	785b      	ldrb	r3, [r3, #1]
 8016c58:	4093      	lsls	r3, r2
 8016c5a:	005b      	lsls	r3, r3, #1
 8016c5c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016c60:	9b03      	ldr	r3, [sp, #12]
 8016c62:	781b      	ldrb	r3, [r3, #0]
 8016c64:	fa43 f30b 	asr.w	r3, r3, fp
 8016c68:	b2db      	uxtb	r3, r3
 8016c6a:	4313      	orrs	r3, r2
 8016c6c:	f10b 0201 	add.w	r2, fp, #1
 8016c70:	fa5f fb82 	uxtb.w	fp, r2
 8016c74:	9a03      	ldr	r2, [sp, #12]
 8016c76:	f1bb 0f08 	cmp.w	fp, #8
 8016c7a:	bf15      	itete	ne
 8016c7c:	3201      	addne	r2, #1
 8016c7e:	3202      	addeq	r2, #2
 8016c80:	9203      	strne	r2, [sp, #12]
 8016c82:	9203      	streq	r2, [sp, #12]
 8016c84:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016c86:	b29f      	uxth	r7, r3
 8016c88:	bf08      	it	eq
 8016c8a:	f04f 0b00 	moveq.w	fp, #0
 8016c8e:	42ba      	cmp	r2, r7
 8016c90:	d309      	bcc.n	8016ca6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8016c92:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8016c96:	2301      	movs	r3, #1
 8016c98:	9a05      	ldr	r2, [sp, #20]
 8016c9a:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8016c9e:	d30e      	bcc.n	8016cbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8016ca0:	469a      	mov	sl, r3
 8016ca2:	2600      	movs	r6, #0
 8016ca4:	e035      	b.n	8016d12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8016ca6:	9b05      	ldr	r3, [sp, #20]
 8016ca8:	429f      	cmp	r7, r3
 8016caa:	d318      	bcc.n	8016cde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8016cac:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8016cb0:	eb04 030a 	add.w	r3, r4, sl
 8016cb4:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8016cb8:	f10a 0301 	add.w	r3, sl, #1
 8016cbc:	b29b      	uxth	r3, r3
 8016cbe:	9a05      	ldr	r2, [sp, #20]
 8016cc0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8016cc4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016cc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8016cca:	7116      	strb	r6, [r2, #4]
 8016ccc:	f10a 0601 	add.w	r6, sl, #1
 8016cd0:	80d1      	strh	r1, [r2, #6]
 8016cd2:	7156      	strb	r6, [r2, #5]
 8016cd4:	9a05      	ldr	r2, [sp, #20]
 8016cd6:	3201      	adds	r2, #1
 8016cd8:	b292      	uxth	r2, r2
 8016cda:	9205      	str	r2, [sp, #20]
 8016cdc:	e7e0      	b.n	8016ca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8016cde:	463a      	mov	r2, r7
 8016ce0:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8016ce4:	795b      	ldrb	r3, [r3, #5]
 8016ce6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016cea:	4426      	add	r6, r4
 8016cec:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8016cee:	eb01 0c06 	add.w	ip, r1, r6
 8016cf2:	f1bc 0f00 	cmp.w	ip, #0
 8016cf6:	dd07      	ble.n	8016d08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8016cf8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8016cfc:	f892 c004 	ldrb.w	ip, [r2, #4]
 8016d00:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8016d04:	88d2      	ldrh	r2, [r2, #6]
 8016d06:	e7f1      	b.n	8016cec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8016d08:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8016d0c:	b29b      	uxth	r3, r3
 8016d0e:	e7c3      	b.n	8016c98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8016d10:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016d12:	970c      	str	r7, [sp, #48]	@ 0x30
 8016d14:	9a01      	ldr	r2, [sp, #4]
 8016d16:	46b4      	mov	ip, r6
 8016d18:	461f      	mov	r7, r3
 8016d1a:	e78c      	b.n	8016c36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8016d1c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016d20:	1b7b      	subs	r3, r7, r5
 8016d22:	eb0c 0605 	add.w	r6, ip, r5
 8016d26:	b29b      	uxth	r3, r3
 8016d28:	9201      	str	r2, [sp, #4]
 8016d2a:	b2b6      	uxth	r6, r6
 8016d2c:	2500      	movs	r5, #0
 8016d2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016d30:	4282      	cmp	r2, r0
 8016d32:	d88b      	bhi.n	8016c4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016d34:	9a01      	ldr	r2, [sp, #4]
 8016d36:	e74b      	b.n	8016bd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8016d38:	4297      	cmp	r7, r2
 8016d3a:	d331      	bcc.n	8016da0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e4>
 8016d3c:	1abb      	subs	r3, r7, r2
 8016d3e:	b29b      	uxth	r3, r3
 8016d40:	9208      	str	r2, [sp, #32]
 8016d42:	9501      	str	r5, [sp, #4]
 8016d44:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016d46:	29ff      	cmp	r1, #255	@ 0xff
 8016d48:	9908      	ldr	r1, [sp, #32]
 8016d4a:	eb0c 0601 	add.w	r6, ip, r1
 8016d4e:	d133      	bne.n	8016db8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>
 8016d50:	f1a0 0e02 	sub.w	lr, r0, #2
 8016d54:	b2b6      	uxth	r6, r6
 8016d56:	45b4      	cmp	ip, r6
 8016d58:	f040 808a 	bne.w	8016e70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b4>
 8016d5c:	9908      	ldr	r1, [sp, #32]
 8016d5e:	4297      	cmp	r7, r2
 8016d60:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016d64:	d3e2      	bcc.n	8016d2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8016d66:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8016d68:	9904      	ldr	r1, [sp, #16]
 8016d6a:	8812      	ldrh	r2, [r2, #0]
 8016d6c:	1a52      	subs	r2, r2, r1
 8016d6e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d72:	9a07      	ldr	r2, [sp, #28]
 8016d74:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8016d76:	3201      	adds	r2, #1
 8016d78:	428a      	cmp	r2, r1
 8016d7a:	9207      	str	r2, [sp, #28]
 8016d7c:	f040 8085 	bne.w	8016e8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ce>
 8016d80:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8016d84:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8016d88:	9b04      	ldr	r3, [sp, #16]
 8016d8a:	1bed      	subs	r5, r5, r7
 8016d8c:	b2ad      	uxth	r5, r5
 8016d8e:	2d00      	cmp	r5, #0
 8016d90:	bf0c      	ite	eq
 8016d92:	461a      	moveq	r2, r3
 8016d94:	2200      	movne	r2, #0
 8016d96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016d98:	b292      	uxth	r2, r2
 8016d9a:	3301      	adds	r3, #1
 8016d9c:	930d      	str	r3, [sp, #52]	@ 0x34
 8016d9e:	e70e      	b.n	8016bbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8016da0:	1bd1      	subs	r1, r2, r7
 8016da2:	b28b      	uxth	r3, r1
 8016da4:	9301      	str	r3, [sp, #4]
 8016da6:	9708      	str	r7, [sp, #32]
 8016da8:	462b      	mov	r3, r5
 8016daa:	e7cb      	b.n	8016d44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8016dac:	20002230 	.word	0x20002230
 8016db0:	2000222a 	.word	0x2000222a
 8016db4:	fffff7fb 	.word	0xfffff7fb
 8016db8:	b2b6      	uxth	r6, r6
 8016dba:	900b      	str	r0, [sp, #44]	@ 0x2c
 8016dbc:	45b4      	cmp	ip, r6
 8016dbe:	d0cd      	beq.n	8016d5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8016dc0:	f10c 0101 	add.w	r1, ip, #1
 8016dc4:	44a4      	add	ip, r4
 8016dc6:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016dca:	9117      	str	r1, [sp, #92]	@ 0x5c
 8016dcc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016dce:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016dd2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016dd4:	ea4f 2825 	mov.w	r8, r5, asr #8
 8016dd8:	f8b1 c000 	ldrh.w	ip, [r1]
 8016ddc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016dde:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8016de2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016de6:	fb1e fe01 	smulbb	lr, lr, r1
 8016dea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016dec:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016df0:	fb08 e801 	mla	r8, r8, r1, lr
 8016df4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8016df8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016dfa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8016dfe:	fb19 f901 	smulbb	r9, r9, r1
 8016e02:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016e06:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016e08:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016e0c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8016e10:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016e14:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016e16:	fa5f fc8c 	uxtb.w	ip, ip
 8016e1a:	fb1c fc01 	smulbb	ip, ip, r1
 8016e1e:	00ed      	lsls	r5, r5, #3
 8016e20:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016e22:	b2ed      	uxtb	r5, r5
 8016e24:	fb05 c501 	mla	r5, r5, r1, ip
 8016e28:	fa1f f888 	uxth.w	r8, r8
 8016e2c:	fa1f fe8e 	uxth.w	lr, lr
 8016e30:	b2ad      	uxth	r5, r5
 8016e32:	f108 0c01 	add.w	ip, r8, #1
 8016e36:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016e3a:	f10e 0901 	add.w	r9, lr, #1
 8016e3e:	f105 0c01 	add.w	ip, r5, #1
 8016e42:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016e46:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016e4a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016e4e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016e52:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016e56:	ea4c 0808 	orr.w	r8, ip, r8
 8016e5a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8016e5c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016e60:	ea48 0809 	orr.w	r8, r8, r9
 8016e64:	f821 8b02 	strh.w	r8, [r1], #2
 8016e68:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016e6a:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016e6e:	e7a5      	b.n	8016dbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8016e70:	f10c 0801 	add.w	r8, ip, #1
 8016e74:	44a4      	add	ip, r4
 8016e76:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8016e7a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016e7c:	fa1f fc88 	uxth.w	ip, r8
 8016e80:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016e84:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016e88:	e765      	b.n	8016d56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8016e8a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016e8e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016e92:	1aad      	subs	r5, r5, r2
 8016e94:	b2ad      	uxth	r5, r5
 8016e96:	2d00      	cmp	r5, #0
 8016e98:	bf18      	it	ne
 8016e9a:	2200      	movne	r2, #0
 8016e9c:	9201      	str	r2, [sp, #4]
 8016e9e:	e746      	b.n	8016d2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8016ea0:	4b03      	ldr	r3, [pc, #12]	@ (8016eb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f4>)
 8016ea2:	6818      	ldr	r0, [r3, #0]
 8016ea4:	6803      	ldr	r3, [r0, #0]
 8016ea6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016ea8:	4798      	blx	r3
 8016eaa:	b01f      	add	sp, #124	@ 0x7c
 8016eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016eb0:	20002230 	.word	0x20002230

08016eb4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8016eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016eb8:	b093      	sub	sp, #76	@ 0x4c
 8016eba:	4616      	mov	r6, r2
 8016ebc:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8016ec0:	9003      	str	r0, [sp, #12]
 8016ec2:	460d      	mov	r5, r1
 8016ec4:	9201      	str	r2, [sp, #4]
 8016ec6:	2a00      	cmp	r2, #0
 8016ec8:	f000 8304 	beq.w	80174d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8016ecc:	6830      	ldr	r0, [r6, #0]
 8016ece:	6871      	ldr	r1, [r6, #4]
 8016ed0:	ac0e      	add	r4, sp, #56	@ 0x38
 8016ed2:	c403      	stmia	r4!, {r0, r1}
 8016ed4:	6818      	ldr	r0, [r3, #0]
 8016ed6:	6859      	ldr	r1, [r3, #4]
 8016ed8:	ac10      	add	r4, sp, #64	@ 0x40
 8016eda:	c403      	stmia	r4!, {r0, r1}
 8016edc:	a80e      	add	r0, sp, #56	@ 0x38
 8016ede:	f7f8 ff81 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ee2:	4631      	mov	r1, r6
 8016ee4:	a810      	add	r0, sp, #64	@ 0x40
 8016ee6:	f7f8 ffa5 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016eea:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8016eee:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8016ef2:	bfdd      	ittte	le
 8016ef4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016ef8:	b293      	uxthle	r3, r2
 8016efa:	fb91 f3f3 	sdivle	r3, r1, r3
 8016efe:	2301      	movgt	r3, #1
 8016f00:	9304      	str	r3, [sp, #16]
 8016f02:	f105 0308 	add.w	r3, r5, #8
 8016f06:	9904      	ldr	r1, [sp, #16]
 8016f08:	9308      	str	r3, [sp, #32]
 8016f0a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8016f0e:	440b      	add	r3, r1
 8016f10:	3b01      	subs	r3, #1
 8016f12:	fb93 f3f1 	sdiv	r3, r3, r1
 8016f16:	9908      	ldr	r1, [sp, #32]
 8016f18:	3b01      	subs	r3, #1
 8016f1a:	b29b      	uxth	r3, r3
 8016f1c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016f20:	9309      	str	r3, [sp, #36]	@ 0x24
 8016f22:	9904      	ldr	r1, [sp, #16]
 8016f24:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016f28:	fb93 f0f1 	sdiv	r0, r3, r1
 8016f2c:	b284      	uxth	r4, r0
 8016f2e:	9405      	str	r4, [sp, #20]
 8016f30:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016f34:	fb05 3914 	mls	r9, r5, r4, r3
 8016f38:	fb19 f902 	smulbb	r9, r9, r2
 8016f3c:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016f40:	4489      	add	r9, r1
 8016f42:	fa1f f989 	uxth.w	r9, r9
 8016f46:	2d00      	cmp	r5, #0
 8016f48:	d05d      	beq.n	8017006 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8016f4a:	9808      	ldr	r0, [sp, #32]
 8016f4c:	1e6a      	subs	r2, r5, #1
 8016f4e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016f52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016f54:	fa9a fa8a 	rev.w	sl, sl
 8016f58:	4492      	add	sl, r2
 8016f5a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8016f5e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016f62:	4411      	add	r1, r2
 8016f64:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016f68:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016f6c:	4413      	add	r3, r2
 8016f6e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016f72:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8016f76:	f04f 0600 	mov.w	r6, #0
 8016f7a:	9302      	str	r3, [sp, #8]
 8016f7c:	4bca      	ldr	r3, [pc, #808]	@ (80172a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8016f7e:	6818      	ldr	r0, [r3, #0]
 8016f80:	6803      	ldr	r3, [r0, #0]
 8016f82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f84:	4798      	blx	r3
 8016f86:	4bc9      	ldr	r3, [pc, #804]	@ (80172ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016f88:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016f8c:	881b      	ldrh	r3, [r3, #0]
 8016f8e:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8016f92:	2100      	movs	r1, #0
 8016f94:	fb03 2404 	mla	r4, r3, r4, r2
 8016f98:	436b      	muls	r3, r5
 8016f9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016f9e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016fa2:	930d      	str	r3, [sp, #52]	@ 0x34
 8016fa4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 8016fa8:	2280      	movs	r2, #128	@ 0x80
 8016faa:	fb99 f3f3 	sdiv	r3, r9, r3
 8016fae:	9306      	str	r3, [sp, #24]
 8016fb0:	9b01      	ldr	r3, [sp, #4]
 8016fb2:	43db      	mvns	r3, r3
 8016fb4:	b2db      	uxtb	r3, r3
 8016fb6:	930a      	str	r3, [sp, #40]	@ 0x28
 8016fb8:	9b03      	ldr	r3, [sp, #12]
 8016fba:	3304      	adds	r3, #4
 8016fbc:	4618      	mov	r0, r3
 8016fbe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016fc0:	f00a ff93 	bl	8021eea <memset>
 8016fc4:	4bba      	ldr	r3, [pc, #744]	@ (80172b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 8016fc6:	9300      	str	r3, [sp, #0]
 8016fc8:	2300      	movs	r3, #0
 8016fca:	9307      	str	r3, [sp, #28]
 8016fcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016fce:	42a3      	cmp	r3, r4
 8016fd0:	f240 827b 	bls.w	80174ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8016fd4:	f04f 0e07 	mov.w	lr, #7
 8016fd8:	f1b9 0f00 	cmp.w	r9, #0
 8016fdc:	f000 8159 	beq.w	8017292 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8016fe0:	f89a 5000 	ldrb.w	r5, [sl]
 8016fe4:	f10a 0701 	add.w	r7, sl, #1
 8016fe8:	b2ed      	uxtb	r5, r5
 8016fea:	11aa      	asrs	r2, r5, #6
 8016fec:	d10e      	bne.n	801700c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8016fee:	9b03      	ldr	r3, [sp, #12]
 8016ff0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016ff4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016ff8:	88ae      	ldrh	r6, [r5, #4]
 8016ffa:	f109 39ff 	add.w	r9, r9, #4294967295
 8016ffe:	fa1f f989 	uxth.w	r9, r9
 8017002:	46ba      	mov	sl, r7
 8017004:	e7e8      	b.n	8016fd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8017006:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801700a:	e7a6      	b.n	8016f5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801700c:	2a01      	cmp	r2, #1
 801700e:	d129      	bne.n	8017064 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8017010:	2103      	movs	r1, #3
 8017012:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8017016:	f005 0203 	and.w	r2, r5, #3
 801701a:	3b02      	subs	r3, #2
 801701c:	4413      	add	r3, r2
 801701e:	f003 031f 	and.w	r3, r3, #31
 8017022:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8017026:	f363 0604 	bfi	r6, r3, #0, #5
 801702a:	3a02      	subs	r2, #2
 801702c:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8017030:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017034:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8017038:	f362 164a 	bfi	r6, r2, #5, #6
 801703c:	3d02      	subs	r5, #2
 801703e:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8017042:	f005 051f 	and.w	r5, r5, #31
 8017046:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801704a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801704e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8017052:	9a03      	ldr	r2, [sp, #12]
 8017054:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017058:	f365 26cf 	bfi	r6, r5, #11, #5
 801705c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017060:	809e      	strh	r6, [r3, #4]
 8017062:	e7ca      	b.n	8016ffa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8017064:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8017068:	2a02      	cmp	r2, #2
 801706a:	b2ab      	uxth	r3, r5
 801706c:	d136      	bne.n	80170dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801706e:	2101      	movs	r1, #1
 8017070:	fb12 1205 	smlabb	r2, r2, r5, r1
 8017074:	4492      	add	sl, r2
 8017076:	463a      	mov	r2, r7
 8017078:	4552      	cmp	r2, sl
 801707a:	d01c      	beq.n	80170b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801707c:	4694      	mov	ip, r2
 801707e:	f04f 0b03 	mov.w	fp, #3
 8017082:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8017086:	7852      	ldrb	r2, [r2, #1]
 8017088:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801708c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8017090:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8017094:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017098:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801709c:	f001 021f 	and.w	r2, r1, #31
 80170a0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80170a4:	9a03      	ldr	r2, [sp, #12]
 80170a6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80170aa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80170ae:	460e      	mov	r6, r1
 80170b0:	8081      	strh	r1, [r0, #4]
 80170b2:	4662      	mov	r2, ip
 80170b4:	e7e0      	b.n	8017078 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80170b6:	4599      	cmp	r9, r3
 80170b8:	d20b      	bcs.n	80170d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80170ba:	eba5 0509 	sub.w	r5, r5, r9
 80170be:	2d00      	cmp	r5, #0
 80170c0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80170c4:	f300 8209 	bgt.w	80174da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80170c8:	2301      	movs	r3, #1
 80170ca:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80170ce:	9307      	str	r3, [sp, #28]
 80170d0:	e00c      	b.n	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80170d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80170d6:	eba9 0903 	sub.w	r9, r9, r3
 80170da:	e790      	b.n	8016ffe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80170dc:	4599      	cmp	r9, r3
 80170de:	d2fa      	bcs.n	80170d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80170e0:	eba5 0509 	sub.w	r5, r5, r9
 80170e4:	2d00      	cmp	r5, #0
 80170e6:	dc1d      	bgt.n	8017124 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80170e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80170ec:	f04f 0b00 	mov.w	fp, #0
 80170f0:	f1b8 0f00 	cmp.w	r8, #0
 80170f4:	f340 81a1 	ble.w	801743a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80170f8:	783b      	ldrb	r3, [r7, #0]
 80170fa:	f107 0a01 	add.w	sl, r7, #1
 80170fe:	b2db      	uxtb	r3, r3
 8017100:	119a      	asrs	r2, r3, #6
 8017102:	f040 80d7 	bne.w	80172b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8017106:	9a03      	ldr	r2, [sp, #12]
 8017108:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801710c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017110:	889e      	ldrh	r6, [r3, #4]
 8017112:	9b01      	ldr	r3, [sp, #4]
 8017114:	2bff      	cmp	r3, #255	@ 0xff
 8017116:	f040 81e9 	bne.w	80174ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801711a:	8026      	strh	r6, [r4, #0]
 801711c:	f108 38ff 	add.w	r8, r8, #4294967295
 8017120:	3402      	adds	r4, #2
 8017122:	e0be      	b.n	80172a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017124:	9b02      	ldr	r3, [sp, #8]
 8017126:	9a02      	ldr	r2, [sp, #8]
 8017128:	42ab      	cmp	r3, r5
 801712a:	bfa8      	it	ge
 801712c:	462b      	movge	r3, r5
 801712e:	eba2 0803 	sub.w	r8, r2, r3
 8017132:	9a07      	ldr	r2, [sp, #28]
 8017134:	1aed      	subs	r5, r5, r3
 8017136:	2a00      	cmp	r2, #0
 8017138:	d05a      	beq.n	80171f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801713a:	9a01      	ldr	r2, [sp, #4]
 801713c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017140:	2aff      	cmp	r2, #255	@ 0xff
 8017142:	d049      	beq.n	80171d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017144:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8017148:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801714c:	42a3      	cmp	r3, r4
 801714e:	f240 80a5 	bls.w	801729c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017152:	46bc      	mov	ip, r7
 8017154:	8820      	ldrh	r0, [r4, #0]
 8017156:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801715a:	7879      	ldrb	r1, [r7, #1]
 801715c:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8017160:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8017164:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8017168:	b212      	sxth	r2, r2
 801716a:	fb1a fa09 	smulbb	sl, sl, r9
 801716e:	b291      	uxth	r1, r2
 8017170:	120f      	asrs	r7, r1, #8
 8017172:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017176:	fb07 a70e 	mla	r7, r7, lr, sl
 801717a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801717e:	00c0      	lsls	r0, r0, #3
 8017180:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017184:	b2c0      	uxtb	r0, r0
 8017186:	fb1a fa09 	smulbb	sl, sl, r9
 801718a:	fb10 f009 	smulbb	r0, r0, r9
 801718e:	10c9      	asrs	r1, r1, #3
 8017190:	00d2      	lsls	r2, r2, #3
 8017192:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017196:	b2d2      	uxtb	r2, r2
 8017198:	fb01 a10e 	mla	r1, r1, lr, sl
 801719c:	fb02 020e 	mla	r2, r2, lr, r0
 80171a0:	b2bf      	uxth	r7, r7
 80171a2:	b289      	uxth	r1, r1
 80171a4:	b292      	uxth	r2, r2
 80171a6:	1c78      	adds	r0, r7, #1
 80171a8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80171ac:	f101 0a01 	add.w	sl, r1, #1
 80171b0:	1c50      	adds	r0, r2, #1
 80171b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80171b6:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80171ba:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80171be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80171c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80171c6:	4307      	orrs	r7, r0
 80171c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80171cc:	ea47 070a 	orr.w	r7, r7, sl
 80171d0:	f824 7b02 	strh.w	r7, [r4], #2
 80171d4:	4667      	mov	r7, ip
 80171d6:	e7b9      	b.n	801714c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80171d8:	42a3      	cmp	r3, r4
 80171da:	d95f      	bls.n	801729c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80171dc:	463a      	mov	r2, r7
 80171de:	f812 1b02 	ldrb.w	r1, [r2], #2
 80171e2:	7878      	ldrb	r0, [r7, #1]
 80171e4:	4617      	mov	r7, r2
 80171e6:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80171ea:	f824 1b02 	strh.w	r1, [r4], #2
 80171ee:	e7f3      	b.n	80171d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80171f0:	9901      	ldr	r1, [sp, #4]
 80171f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80171f6:	29ff      	cmp	r1, #255	@ 0xff
 80171f8:	b2b2      	uxth	r2, r6
 80171fa:	d044      	beq.n	8017286 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80171fc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017200:	ea4f 2922 	mov.w	r9, r2, asr #8
 8017204:	4608      	mov	r0, r1
 8017206:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801720a:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801720e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017212:	fb09 f901 	mul.w	r9, r9, r1
 8017216:	fb0e fe01 	mul.w	lr, lr, r1
 801721a:	00d1      	lsls	r1, r2, #3
 801721c:	b2c9      	uxtb	r1, r1
 801721e:	4341      	muls	r1, r0
 8017220:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8017224:	429c      	cmp	r4, r3
 8017226:	f4bf af61 	bcs.w	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801722a:	8822      	ldrh	r2, [r4, #0]
 801722c:	1210      	asrs	r0, r2, #8
 801722e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017232:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8017236:	00d2      	lsls	r2, r2, #3
 8017238:	fb00 900a 	mla	r0, r0, sl, r9
 801723c:	b2d2      	uxtb	r2, r2
 801723e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017242:	fb02 120a 	mla	r2, r2, sl, r1
 8017246:	fb0c ec0a 	mla	ip, ip, sl, lr
 801724a:	b280      	uxth	r0, r0
 801724c:	b292      	uxth	r2, r2
 801724e:	f100 0b01 	add.w	fp, r0, #1
 8017252:	fa1f fc8c 	uxth.w	ip, ip
 8017256:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801725a:	1c50      	adds	r0, r2, #1
 801725c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017260:	f10c 0201 	add.w	r2, ip, #1
 8017264:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017268:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801726c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017270:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017274:	ea40 0b0b 	orr.w	fp, r0, fp
 8017278:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801727c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8017280:	f824 bb02 	strh.w	fp, [r4], #2
 8017284:	e7ce      	b.n	8017224 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8017286:	429c      	cmp	r4, r3
 8017288:	f4bf af30 	bcs.w	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801728c:	f824 2b02 	strh.w	r2, [r4], #2
 8017290:	e7f9      	b.n	8017286 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017292:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017296:	4657      	mov	r7, sl
 8017298:	464d      	mov	r5, r9
 801729a:	e727      	b.n	80170ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801729c:	2300      	movs	r3, #0
 801729e:	e716      	b.n	80170ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80172a0:	44bb      	add	fp, r7
 80172a2:	4657      	mov	r7, sl
 80172a4:	e724      	b.n	80170f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80172a6:	bf00      	nop
 80172a8:	20002230 	.word	0x20002230
 80172ac:	2000222a 	.word	0x2000222a
 80172b0:	20000100 	.word	0x20000100
 80172b4:	2a01      	cmp	r2, #1
 80172b6:	d12a      	bne.n	801730e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80172b8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80172bc:	f003 0203 	and.w	r2, r3, #3
 80172c0:	3902      	subs	r1, #2
 80172c2:	4411      	add	r1, r2
 80172c4:	f001 011f 	and.w	r1, r1, #31
 80172c8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80172cc:	f361 0604 	bfi	r6, r1, #0, #5
 80172d0:	3802      	subs	r0, #2
 80172d2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80172d6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80172da:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80172de:	f360 164a 	bfi	r6, r0, #5, #6
 80172e2:	3b02      	subs	r3, #2
 80172e4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80172e8:	f002 031f 	and.w	r3, r2, #31
 80172ec:	2203      	movs	r2, #3
 80172ee:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80172f2:	f363 26cf 	bfi	r6, r3, #11, #5
 80172f6:	fb12 0303 	smlabb	r3, r2, r3, r0
 80172fa:	2207      	movs	r2, #7
 80172fc:	fb12 3301 	smlabb	r3, r2, r1, r3
 8017300:	9a03      	ldr	r2, [sp, #12]
 8017302:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017306:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801730a:	809e      	strh	r6, [r3, #4]
 801730c:	e701      	b.n	8017112 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801730e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8017312:	45a8      	cmp	r8, r5
 8017314:	4647      	mov	r7, r8
 8017316:	bfa8      	it	ge
 8017318:	462f      	movge	r7, r5
 801731a:	2a02      	cmp	r2, #2
 801731c:	d154      	bne.n	80173c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801731e:	9b01      	ldr	r3, [sp, #4]
 8017320:	2bff      	cmp	r3, #255	@ 0xff
 8017322:	d01a      	beq.n	801735a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017324:	eb0b 0307 	add.w	r3, fp, r7
 8017328:	2b40      	cmp	r3, #64	@ 0x40
 801732a:	dd16      	ble.n	801735a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801732c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8017330:	4649      	mov	r1, r9
 8017332:	9800      	ldr	r0, [sp, #0]
 8017334:	f7f4 fe4f 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 8017338:	465a      	mov	r2, fp
 801733a:	9b01      	ldr	r3, [sp, #4]
 801733c:	4620      	mov	r0, r4
 801733e:	9900      	ldr	r1, [sp, #0]
 8017340:	f7f4 fe54 	bl	800bfec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017344:	9b00      	ldr	r3, [sp, #0]
 8017346:	f04f 0b00 	mov.w	fp, #0
 801734a:	461a      	mov	r2, r3
 801734c:	4b6b      	ldr	r3, [pc, #428]	@ (80174fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801734e:	444c      	add	r4, r9
 8017350:	429a      	cmp	r2, r3
 8017352:	bf0c      	ite	eq
 8017354:	4b6a      	ldreq	r3, [pc, #424]	@ (8017500 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017356:	4b69      	ldrne	r3, [pc, #420]	@ (80174fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017358:	9300      	str	r3, [sp, #0]
 801735a:	4652      	mov	r2, sl
 801735c:	2100      	movs	r1, #0
 801735e:	42a9      	cmp	r1, r5
 8017360:	da2c      	bge.n	80173bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8017362:	4694      	mov	ip, r2
 8017364:	f04f 0903 	mov.w	r9, #3
 8017368:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801736c:	7852      	ldrb	r2, [r2, #1]
 801736e:	42b9      	cmp	r1, r7
 8017370:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8017374:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8017378:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801737c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017380:	fb19 000e 	smlabb	r0, r9, lr, r0
 8017384:	f04f 0e07 	mov.w	lr, #7
 8017388:	f003 021f 	and.w	r2, r3, #31
 801738c:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8017390:	9a03      	ldr	r2, [sp, #12]
 8017392:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017396:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801739a:	461e      	mov	r6, r3
 801739c:	8083      	strh	r3, [r0, #4]
 801739e:	da0a      	bge.n	80173b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80173a0:	9a01      	ldr	r2, [sp, #4]
 80173a2:	2aff      	cmp	r2, #255	@ 0xff
 80173a4:	bf15      	itete	ne
 80173a6:	9a00      	ldrne	r2, [sp, #0]
 80173a8:	8023      	strheq	r3, [r4, #0]
 80173aa:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80173ae:	3402      	addeq	r4, #2
 80173b0:	bf18      	it	ne
 80173b2:	f10b 0b01 	addne.w	fp, fp, #1
 80173b6:	3101      	adds	r1, #1
 80173b8:	4662      	mov	r2, ip
 80173ba:	e7d0      	b.n	801735e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80173bc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80173c0:	eba8 0807 	sub.w	r8, r8, r7
 80173c4:	1bed      	subs	r5, r5, r7
 80173c6:	e76c      	b.n	80172a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80173c8:	9b01      	ldr	r3, [sp, #4]
 80173ca:	eba8 0807 	sub.w	r8, r8, r7
 80173ce:	2bff      	cmp	r3, #255	@ 0xff
 80173d0:	eba5 0507 	sub.w	r5, r5, r7
 80173d4:	fa1f f986 	uxth.w	r9, r6
 80173d8:	d027      	beq.n	801742a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80173da:	eb0b 0307 	add.w	r3, fp, r7
 80173de:	2b40      	cmp	r3, #64	@ 0x40
 80173e0:	dd18      	ble.n	8017414 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80173e2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80173e6:	4619      	mov	r1, r3
 80173e8:	9800      	ldr	r0, [sp, #0]
 80173ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80173ec:	f7f4 fdf3 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 80173f0:	465a      	mov	r2, fp
 80173f2:	9b01      	ldr	r3, [sp, #4]
 80173f4:	4620      	mov	r0, r4
 80173f6:	9900      	ldr	r1, [sp, #0]
 80173f8:	f7f4 fdf8 	bl	800bfec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80173fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80173fe:	f04f 0b00 	mov.w	fp, #0
 8017402:	441c      	add	r4, r3
 8017404:	9b00      	ldr	r3, [sp, #0]
 8017406:	461a      	mov	r2, r3
 8017408:	4b3c      	ldr	r3, [pc, #240]	@ (80174fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801740a:	429a      	cmp	r2, r3
 801740c:	bf0c      	ite	eq
 801740e:	4b3c      	ldreq	r3, [pc, #240]	@ (8017500 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017410:	4b3a      	ldrne	r3, [pc, #232]	@ (80174fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017412:	9300      	str	r3, [sp, #0]
 8017414:	9b00      	ldr	r3, [sp, #0]
 8017416:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801741a:	463b      	mov	r3, r7
 801741c:	2b00      	cmp	r3, #0
 801741e:	f43f af3f 	beq.w	80172a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8017422:	f822 9b02 	strh.w	r9, [r2], #2
 8017426:	3b01      	subs	r3, #1
 8017428:	e7f8      	b.n	801741c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801742a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801742e:	42a7      	cmp	r7, r4
 8017430:	f67f af37 	bls.w	80172a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017434:	f824 9b02 	strh.w	r9, [r4], #2
 8017438:	e7f9      	b.n	801742e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801743a:	f1bb 0f00 	cmp.w	fp, #0
 801743e:	d00c      	beq.n	801745a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8017440:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8017444:	4641      	mov	r1, r8
 8017446:	9800      	ldr	r0, [sp, #0]
 8017448:	f7f4 fdc5 	bl	800bfd6 <_ZN8touchgfx5paint9flushLineEPmi>
 801744c:	4620      	mov	r0, r4
 801744e:	9b01      	ldr	r3, [sp, #4]
 8017450:	465a      	mov	r2, fp
 8017452:	9900      	ldr	r1, [sp, #0]
 8017454:	f7f4 fdca 	bl	800bfec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017458:	4444      	add	r4, r8
 801745a:	4b2a      	ldr	r3, [pc, #168]	@ (8017504 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801745c:	9a02      	ldr	r2, [sp, #8]
 801745e:	881b      	ldrh	r3, [r3, #0]
 8017460:	1a9b      	subs	r3, r3, r2
 8017462:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017466:	9b06      	ldr	r3, [sp, #24]
 8017468:	3301      	adds	r3, #1
 801746a:	9306      	str	r3, [sp, #24]
 801746c:	9a06      	ldr	r2, [sp, #24]
 801746e:	9b04      	ldr	r3, [sp, #16]
 8017470:	4293      	cmp	r3, r2
 8017472:	d120      	bne.n	80174b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8017474:	9b05      	ldr	r3, [sp, #20]
 8017476:	9a05      	ldr	r2, [sp, #20]
 8017478:	f103 0801 	add.w	r8, r3, #1
 801747c:	9b08      	ldr	r3, [sp, #32]
 801747e:	2100      	movs	r1, #0
 8017480:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8017484:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017486:	ba3f      	rev	r7, r7
 8017488:	2280      	movs	r2, #128	@ 0x80
 801748a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801748c:	441f      	add	r7, r3
 801748e:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8017492:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8017496:	f00a fd28 	bl	8021eea <memset>
 801749a:	2300      	movs	r3, #0
 801749c:	f04f 0600 	mov.w	r6, #0
 80174a0:	eba9 0905 	sub.w	r9, r9, r5
 80174a4:	fa1f f989 	uxth.w	r9, r9
 80174a8:	f8cd 8014 	str.w	r8, [sp, #20]
 80174ac:	9306      	str	r3, [sp, #24]
 80174ae:	f7f4 fd8b 	bl	800bfc8 <_ZN8touchgfx5paint8tearDownEv>
 80174b2:	46ba      	mov	sl, r7
 80174b4:	e58a      	b.n	8016fcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80174b6:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80174ba:	9b02      	ldr	r3, [sp, #8]
 80174bc:	eba9 0903 	sub.w	r9, r9, r3
 80174c0:	eba9 0505 	sub.w	r5, r9, r5
 80174c4:	fa1f f985 	uxth.w	r9, r5
 80174c8:	e7f1      	b.n	80174ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80174ca:	4b0f      	ldr	r3, [pc, #60]	@ (8017508 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80174cc:	6818      	ldr	r0, [r3, #0]
 80174ce:	6803      	ldr	r3, [r0, #0]
 80174d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80174d2:	4798      	blx	r3
 80174d4:	b013      	add	sp, #76	@ 0x4c
 80174d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174da:	9b02      	ldr	r3, [sp, #8]
 80174dc:	9a02      	ldr	r2, [sp, #8]
 80174de:	42ab      	cmp	r3, r5
 80174e0:	bfa8      	it	ge
 80174e2:	462b      	movge	r3, r5
 80174e4:	eba2 0803 	sub.w	r8, r2, r3
 80174e8:	1aed      	subs	r5, r5, r3
 80174ea:	e626      	b.n	801713a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80174ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80174f0:	fa1f f986 	uxth.w	r9, r6
 80174f4:	2500      	movs	r5, #0
 80174f6:	2701      	movs	r7, #1
 80174f8:	e76f      	b.n	80173da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80174fa:	bf00      	nop
 80174fc:	20000100 	.word	0x20000100
 8017500:	20000200 	.word	0x20000200
 8017504:	2000222a 	.word	0x2000222a
 8017508:	20002230 	.word	0x20002230

0801750c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801750c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017510:	b08f      	sub	sp, #60	@ 0x3c
 8017512:	9203      	str	r2, [sp, #12]
 8017514:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017518:	461c      	mov	r4, r3
 801751a:	460f      	mov	r7, r1
 801751c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801751e:	9202      	str	r2, [sp, #8]
 8017520:	2a00      	cmp	r2, #0
 8017522:	f000 812a 	beq.w	801777a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017526:	6820      	ldr	r0, [r4, #0]
 8017528:	6861      	ldr	r1, [r4, #4]
 801752a:	aa0a      	add	r2, sp, #40	@ 0x28
 801752c:	c203      	stmia	r2!, {r0, r1}
 801752e:	6818      	ldr	r0, [r3, #0]
 8017530:	6859      	ldr	r1, [r3, #4]
 8017532:	aa0c      	add	r2, sp, #48	@ 0x30
 8017534:	c203      	stmia	r2!, {r0, r1}
 8017536:	a80a      	add	r0, sp, #40	@ 0x28
 8017538:	f7f8 fc54 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801753c:	4621      	mov	r1, r4
 801753e:	a80c      	add	r0, sp, #48	@ 0x30
 8017540:	f7f8 fc78 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017544:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017548:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801754c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017550:	bfdd      	ittte	le
 8017552:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017556:	b2b3      	uxthle	r3, r6
 8017558:	fb92 f3f3 	sdivle	r3, r2, r3
 801755c:	2301      	movgt	r3, #1
 801755e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017562:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017566:	fb92 f1f3 	sdiv	r1, r2, r3
 801756a:	fa1f fc81 	uxth.w	ip, r1
 801756e:	4661      	mov	r1, ip
 8017570:	fb0c 2413 	mls	r4, ip, r3, r2
 8017574:	fb14 f406 	smulbb	r4, r4, r6
 8017578:	441d      	add	r5, r3
 801757a:	3d01      	subs	r5, #1
 801757c:	4404      	add	r4, r0
 801757e:	fb95 f5f3 	sdiv	r5, r5, r3
 8017582:	b2a4      	uxth	r4, r4
 8017584:	b121      	cbz	r1, 8017590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8017586:	9b03      	ldr	r3, [sp, #12]
 8017588:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801758c:	ba1b      	rev	r3, r3
 801758e:	441f      	add	r7, r3
 8017590:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017594:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8017598:	4418      	add	r0, r3
 801759a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801759e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80175a2:	441a      	add	r2, r3
 80175a4:	4b76      	ldr	r3, [pc, #472]	@ (8017780 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80175a6:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80175aa:	6818      	ldr	r0, [r3, #0]
 80175ac:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80175b0:	6803      	ldr	r3, [r0, #0]
 80175b2:	b2ad      	uxth	r5, r5
 80175b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80175b6:	4798      	blx	r3
 80175b8:	4a72      	ldr	r2, [pc, #456]	@ (8017784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x278>)
 80175ba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80175be:	8813      	ldrh	r3, [r2, #0]
 80175c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80175c4:	00ad      	lsls	r5, r5, #2
 80175c6:	fb03 c101 	mla	r1, r3, r1, ip
 80175ca:	4373      	muls	r3, r6
 80175cc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80175d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80175d4:	2c00      	cmp	r4, #0
 80175d6:	9304      	str	r3, [sp, #16]
 80175d8:	f105 0304 	add.w	r3, r5, #4
 80175dc:	9305      	str	r3, [sp, #20]
 80175de:	bf0c      	ite	eq
 80175e0:	46c8      	moveq	r8, r9
 80175e2:	f04f 0800 	movne.w	r8, #0
 80175e6:	2300      	movs	r3, #0
 80175e8:	fa1f f888 	uxth.w	r8, r8
 80175ec:	9301      	str	r3, [sp, #4]
 80175ee:	9209      	str	r2, [sp, #36]	@ 0x24
 80175f0:	9a04      	ldr	r2, [sp, #16]
 80175f2:	4282      	cmp	r2, r0
 80175f4:	f240 80bc 	bls.w	8017770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x264>
 80175f8:	b95b      	cbnz	r3, 8017612 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x106>
 80175fa:	783a      	ldrb	r2, [r7, #0]
 80175fc:	0993      	lsrs	r3, r2, #6
 80175fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017602:	9201      	str	r2, [sp, #4]
 8017604:	1e5a      	subs	r2, r3, #1
 8017606:	2a02      	cmp	r2, #2
 8017608:	bf8d      	iteet	hi
 801760a:	787b      	ldrbhi	r3, [r7, #1]
 801760c:	3701      	addls	r7, #1
 801760e:	b29b      	uxthls	r3, r3
 8017610:	3702      	addhi	r7, #2
 8017612:	b184      	cbz	r4, 8017636 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12a>
 8017614:	429c      	cmp	r4, r3
 8017616:	bf99      	ittee	ls
 8017618:	1b1c      	subls	r4, r3, r4
 801761a:	fa1f fa84 	uxthls.w	sl, r4
 801761e:	46c4      	movhi	ip, r8
 8017620:	f04f 0a00 	movhi.w	sl, #0
 8017624:	bf93      	iteet	ls
 8017626:	2400      	movls	r4, #0
 8017628:	1ae4      	subhi	r4, r4, r3
 801762a:	b2a4      	uxthhi	r4, r4
 801762c:	fa1f fc89 	uxthls.w	ip, r9
 8017630:	4653      	mov	r3, sl
 8017632:	46e0      	mov	r8, ip
 8017634:	e7dc      	b.n	80175f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe4>
 8017636:	2204      	movs	r2, #4
 8017638:	4615      	mov	r5, r2
 801763a:	4543      	cmp	r3, r8
 801763c:	bf2c      	ite	cs
 801763e:	46c6      	movcs	lr, r8
 8017640:	469e      	movcc	lr, r3
 8017642:	9905      	ldr	r1, [sp, #20]
 8017644:	9a01      	ldr	r2, [sp, #4]
 8017646:	bf28      	it	cs
 8017648:	eba3 0a08 	subcs.w	sl, r3, r8
 801764c:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017650:	9903      	ldr	r1, [sp, #12]
 8017652:	bf38      	it	cc
 8017654:	eba8 0c03 	subcc.w	ip, r8, r3
 8017658:	588a      	ldr	r2, [r1, r2]
 801765a:	bf28      	it	cs
 801765c:	fa1f fa8a 	uxthcs.w	sl, sl
 8017660:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8017664:	bf2e      	itee	cs
 8017666:	46a4      	movcs	ip, r4
 8017668:	fa1f fc8c 	uxthcc.w	ip, ip
 801766c:	46a2      	movcc	sl, r4
 801766e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017672:	2900      	cmp	r1, #0
 8017674:	d066      	beq.n	8017744 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8017676:	29ff      	cmp	r1, #255	@ 0xff
 8017678:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801767c:	d114      	bne.n	80176a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x19c>
 801767e:	9d02      	ldr	r5, [sp, #8]
 8017680:	2dff      	cmp	r5, #255	@ 0xff
 8017682:	d111      	bne.n	80176a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x19c>
 8017684:	0951      	lsrs	r1, r2, #5
 8017686:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801768a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801768e:	f026 0607 	bic.w	r6, r6, #7
 8017692:	430e      	orrs	r6, r1
 8017694:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017698:	4316      	orrs	r6, r2
 801769a:	b2b6      	uxth	r6, r6
 801769c:	4486      	add	lr, r0
 801769e:	4586      	cmp	lr, r0
 80176a0:	d051      	beq.n	8017746 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23a>
 80176a2:	f820 6b02 	strh.w	r6, [r0], #2
 80176a6:	e7fa      	b.n	801769e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x192>
 80176a8:	9d02      	ldr	r5, [sp, #8]
 80176aa:	b2f6      	uxtb	r6, r6
 80176ac:	4369      	muls	r1, r5
 80176ae:	1c4d      	adds	r5, r1, #1
 80176b0:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80176b4:	122d      	asrs	r5, r5, #8
 80176b6:	ea6f 0b05 	mvn.w	fp, r5
 80176ba:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80176be:	b2ad      	uxth	r5, r5
 80176c0:	b2d2      	uxtb	r2, r2
 80176c2:	fb11 f105 	smulbb	r1, r1, r5
 80176c6:	fb16 f605 	smulbb	r6, r6, r5
 80176ca:	fb12 f205 	smulbb	r2, r2, r5
 80176ce:	b289      	uxth	r1, r1
 80176d0:	b2b6      	uxth	r6, r6
 80176d2:	b292      	uxth	r2, r2
 80176d4:	9106      	str	r1, [sp, #24]
 80176d6:	9607      	str	r6, [sp, #28]
 80176d8:	9208      	str	r2, [sp, #32]
 80176da:	4486      	add	lr, r0
 80176dc:	fa5f fb8b 	uxtb.w	fp, fp
 80176e0:	4586      	cmp	lr, r0
 80176e2:	d030      	beq.n	8017746 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23a>
 80176e4:	8802      	ldrh	r2, [r0, #0]
 80176e6:	9906      	ldr	r1, [sp, #24]
 80176e8:	1216      	asrs	r6, r2, #8
 80176ea:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80176ee:	10d5      	asrs	r5, r2, #3
 80176f0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80176f4:	fb06 160b 	mla	r6, r6, fp, r1
 80176f8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80176fc:	9907      	ldr	r1, [sp, #28]
 80176fe:	00d2      	lsls	r2, r2, #3
 8017700:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017704:	fb05 150b 	mla	r5, r5, fp, r1
 8017708:	b2d2      	uxtb	r2, r2
 801770a:	9908      	ldr	r1, [sp, #32]
 801770c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017710:	fb02 120b 	mla	r2, r2, fp, r1
 8017714:	b2b6      	uxth	r6, r6
 8017716:	b292      	uxth	r2, r2
 8017718:	1c71      	adds	r1, r6, #1
 801771a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801771e:	1c51      	adds	r1, r2, #1
 8017720:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017724:	b2ad      	uxth	r5, r5
 8017726:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801772a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801772e:	4316      	orrs	r6, r2
 8017730:	1c6a      	adds	r2, r5, #1
 8017732:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017736:	096d      	lsrs	r5, r5, #5
 8017738:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801773c:	432e      	orrs	r6, r5
 801773e:	f820 6b02 	strh.w	r6, [r0], #2
 8017742:	e7cd      	b.n	80176e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d4>
 8017744:	4470      	add	r0, lr
 8017746:	4543      	cmp	r3, r8
 8017748:	f4ff af72 	bcc.w	8017630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x124>
 801774c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017750:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017752:	fa1f fc89 	uxth.w	ip, r9
 8017756:	eba4 040c 	sub.w	r4, r4, ip
 801775a:	881b      	ldrh	r3, [r3, #0]
 801775c:	b2a4      	uxth	r4, r4
 801775e:	2c00      	cmp	r4, #0
 8017760:	eba3 0309 	sub.w	r3, r3, r9
 8017764:	bf18      	it	ne
 8017766:	f04f 0c00 	movne.w	ip, #0
 801776a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801776e:	e75f      	b.n	8017630 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x124>
 8017770:	4b03      	ldr	r3, [pc, #12]	@ (8017780 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8017772:	6818      	ldr	r0, [r3, #0]
 8017774:	6803      	ldr	r3, [r0, #0]
 8017776:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017778:	4798      	blx	r3
 801777a:	b00f      	add	sp, #60	@ 0x3c
 801777c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017780:	20002230 	.word	0x20002230
 8017784:	2000222a 	.word	0x2000222a

08017788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801778c:	b093      	sub	sp, #76	@ 0x4c
 801778e:	9205      	str	r2, [sp, #20]
 8017790:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8017794:	461c      	mov	r4, r3
 8017796:	9101      	str	r1, [sp, #4]
 8017798:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801779a:	9202      	str	r2, [sp, #8]
 801779c:	2a00      	cmp	r2, #0
 801779e:	f000 812d 	beq.w	80179fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 80177a2:	6820      	ldr	r0, [r4, #0]
 80177a4:	6861      	ldr	r1, [r4, #4]
 80177a6:	aa0e      	add	r2, sp, #56	@ 0x38
 80177a8:	c203      	stmia	r2!, {r0, r1}
 80177aa:	6818      	ldr	r0, [r3, #0]
 80177ac:	6859      	ldr	r1, [r3, #4]
 80177ae:	aa10      	add	r2, sp, #64	@ 0x40
 80177b0:	c203      	stmia	r2!, {r0, r1}
 80177b2:	a80e      	add	r0, sp, #56	@ 0x38
 80177b4:	f7f8 fb16 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80177b8:	4621      	mov	r1, r4
 80177ba:	a810      	add	r0, sp, #64	@ 0x40
 80177bc:	f7f8 fb3a 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80177c0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80177c4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80177c8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80177cc:	bfdd      	ittte	le
 80177ce:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80177d2:	b2b3      	uxthle	r3, r6
 80177d4:	fb92 f3f3 	sdivle	r3, r2, r3
 80177d8:	2301      	movgt	r3, #1
 80177da:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80177de:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80177e2:	fb92 f1f3 	sdiv	r1, r2, r3
 80177e6:	fa1f fc81 	uxth.w	ip, r1
 80177ea:	4661      	mov	r1, ip
 80177ec:	fb0c 2413 	mls	r4, ip, r3, r2
 80177f0:	fb14 f406 	smulbb	r4, r4, r6
 80177f4:	441d      	add	r5, r3
 80177f6:	3d01      	subs	r5, #1
 80177f8:	4404      	add	r4, r0
 80177fa:	fb95 f5f3 	sdiv	r5, r5, r3
 80177fe:	b2a4      	uxth	r4, r4
 8017800:	b131      	cbz	r1, 8017810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 8017802:	9b05      	ldr	r3, [sp, #20]
 8017804:	9901      	ldr	r1, [sp, #4]
 8017806:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801780a:	ba1b      	rev	r3, r3
 801780c:	4419      	add	r1, r3
 801780e:	9101      	str	r1, [sp, #4]
 8017810:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017814:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017818:	4418      	add	r0, r3
 801781a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801781e:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8017822:	441a      	add	r2, r3
 8017824:	4b77      	ldr	r3, [pc, #476]	@ (8017a04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8017826:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801782a:	6818      	ldr	r0, [r3, #0]
 801782c:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8017830:	6803      	ldr	r3, [r0, #0]
 8017832:	b2ad      	uxth	r5, r5
 8017834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017836:	4798      	blx	r3
 8017838:	4973      	ldr	r1, [pc, #460]	@ (8017a08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801783a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801783e:	880b      	ldrh	r3, [r1, #0]
 8017840:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017844:	00ad      	lsls	r5, r5, #2
 8017846:	fb03 c202 	mla	r2, r3, r2, ip
 801784a:	4373      	muls	r3, r6
 801784c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017850:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017854:	9308      	str	r3, [sp, #32]
 8017856:	1d2b      	adds	r3, r5, #4
 8017858:	9309      	str	r3, [sp, #36]	@ 0x24
 801785a:	9b02      	ldr	r3, [sp, #8]
 801785c:	2c00      	cmp	r4, #0
 801785e:	ea6f 0203 	mvn.w	r2, r3
 8017862:	bf0c      	ite	eq
 8017864:	46dc      	moveq	ip, fp
 8017866:	f04f 0c00 	movne.w	ip, #0
 801786a:	2300      	movs	r3, #0
 801786c:	910d      	str	r1, [sp, #52]	@ 0x34
 801786e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017872:	b2d2      	uxtb	r2, r2
 8017874:	fa1f fc8c 	uxth.w	ip, ip
 8017878:	9303      	str	r3, [sp, #12]
 801787a:	9106      	str	r1, [sp, #24]
 801787c:	9207      	str	r2, [sp, #28]
 801787e:	9a08      	ldr	r2, [sp, #32]
 8017880:	4282      	cmp	r2, r0
 8017882:	f240 80b6 	bls.w	80179f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26a>
 8017886:	b963      	cbnz	r3, 80178a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8017888:	9b01      	ldr	r3, [sp, #4]
 801788a:	781a      	ldrb	r2, [r3, #0]
 801788c:	0993      	lsrs	r3, r2, #6
 801788e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017892:	9203      	str	r2, [sp, #12]
 8017894:	1e5a      	subs	r2, r3, #1
 8017896:	2a02      	cmp	r2, #2
 8017898:	d815      	bhi.n	80178c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801789a:	9a01      	ldr	r2, [sp, #4]
 801789c:	b29b      	uxth	r3, r3
 801789e:	3201      	adds	r2, #1
 80178a0:	9201      	str	r2, [sp, #4]
 80178a2:	b1b4      	cbz	r4, 80178d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80178a4:	429c      	cmp	r4, r3
 80178a6:	bf99      	ittee	ls
 80178a8:	1b1c      	subls	r4, r3, r4
 80178aa:	fa1f f884 	uxthls.w	r8, r4
 80178ae:	4666      	movhi	r6, ip
 80178b0:	f04f 0800 	movhi.w	r8, #0
 80178b4:	bf93      	iteet	ls
 80178b6:	2400      	movls	r4, #0
 80178b8:	1ae4      	subhi	r4, r4, r3
 80178ba:	b2a4      	uxthhi	r4, r4
 80178bc:	fa1f f68b 	uxthls.w	r6, fp
 80178c0:	4643      	mov	r3, r8
 80178c2:	46b4      	mov	ip, r6
 80178c4:	e7db      	b.n	801787e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80178c6:	9a01      	ldr	r2, [sp, #4]
 80178c8:	9b01      	ldr	r3, [sp, #4]
 80178ca:	3202      	adds	r2, #2
 80178cc:	785b      	ldrb	r3, [r3, #1]
 80178ce:	9201      	str	r2, [sp, #4]
 80178d0:	e7e7      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80178d2:	2203      	movs	r2, #3
 80178d4:	4615      	mov	r5, r2
 80178d6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80178d8:	9a03      	ldr	r2, [sp, #12]
 80178da:	4563      	cmp	r3, ip
 80178dc:	fb15 1202 	smlabb	r2, r5, r2, r1
 80178e0:	9905      	ldr	r1, [sp, #20]
 80178e2:	bf28      	it	cs
 80178e4:	eba3 080c 	subcs.w	r8, r3, ip
 80178e8:	eb01 0502 	add.w	r5, r1, r2
 80178ec:	9902      	ldr	r1, [sp, #8]
 80178ee:	bf31      	iteee	cc
 80178f0:	ebac 0603 	subcc.w	r6, ip, r3
 80178f4:	fa1f f888 	uxthcs.w	r8, r8
 80178f8:	46e1      	movcs	r9, ip
 80178fa:	4626      	movcs	r6, r4
 80178fc:	bf3e      	ittt	cc
 80178fe:	b2b6      	uxthcc	r6, r6
 8017900:	4699      	movcc	r9, r3
 8017902:	46a0      	movcc	r8, r4
 8017904:	29ff      	cmp	r1, #255	@ 0xff
 8017906:	d04a      	beq.n	801799e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x216>
 8017908:	46ca      	mov	sl, r9
 801790a:	9f06      	ldr	r7, [sp, #24]
 801790c:	78a9      	ldrb	r1, [r5, #2]
 801790e:	9004      	str	r0, [sp, #16]
 8017910:	4379      	muls	r1, r7
 8017912:	910a      	str	r1, [sp, #40]	@ 0x28
 8017914:	7869      	ldrb	r1, [r5, #1]
 8017916:	4379      	muls	r1, r7
 8017918:	910b      	str	r1, [sp, #44]	@ 0x2c
 801791a:	9905      	ldr	r1, [sp, #20]
 801791c:	5c8a      	ldrb	r2, [r1, r2]
 801791e:	437a      	muls	r2, r7
 8017920:	920c      	str	r2, [sp, #48]	@ 0x30
 8017922:	f1ba 0f00 	cmp.w	sl, #0
 8017926:	d03d      	beq.n	80179a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8017928:	9f07      	ldr	r7, [sp, #28]
 801792a:	9a04      	ldr	r2, [sp, #16]
 801792c:	46be      	mov	lr, r7
 801792e:	8812      	ldrh	r2, [r2, #0]
 8017930:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8017932:	1215      	asrs	r5, r2, #8
 8017934:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017938:	10d1      	asrs	r1, r2, #3
 801793a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801793e:	fb05 750e 	mla	r5, r5, lr, r7
 8017942:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017946:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8017948:	00d2      	lsls	r2, r2, #3
 801794a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801794e:	fb01 710e 	mla	r1, r1, lr, r7
 8017952:	b2d2      	uxtb	r2, r2
 8017954:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8017956:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801795a:	fb02 720e 	mla	r2, r2, lr, r7
 801795e:	b2ad      	uxth	r5, r5
 8017960:	b292      	uxth	r2, r2
 8017962:	f105 0e01 	add.w	lr, r5, #1
 8017966:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801796a:	f102 0e01 	add.w	lr, r2, #1
 801796e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8017972:	b289      	uxth	r1, r1
 8017974:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017978:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801797c:	4315      	orrs	r5, r2
 801797e:	1c4a      	adds	r2, r1, #1
 8017980:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017984:	0949      	lsrs	r1, r1, #5
 8017986:	9a04      	ldr	r2, [sp, #16]
 8017988:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801798c:	430d      	orrs	r5, r1
 801798e:	f822 5b02 	strh.w	r5, [r2], #2
 8017992:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017996:	9204      	str	r2, [sp, #16]
 8017998:	fa1f fa8a 	uxth.w	sl, sl
 801799c:	e7c1      	b.n	8017922 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801799e:	4649      	mov	r1, r9
 80179a0:	4686      	mov	lr, r0
 80179a2:	b999      	cbnz	r1, 80179cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x244>
 80179a4:	4563      	cmp	r3, ip
 80179a6:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80179aa:	d389      	bcc.n	80178c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80179ac:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 80179b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80179b2:	fa1f f68b 	uxth.w	r6, fp
 80179b6:	1ba4      	subs	r4, r4, r6
 80179b8:	881b      	ldrh	r3, [r3, #0]
 80179ba:	b2a4      	uxth	r4, r4
 80179bc:	2c00      	cmp	r4, #0
 80179be:	eba3 030b 	sub.w	r3, r3, fp
 80179c2:	bf18      	it	ne
 80179c4:	2600      	movne	r6, #0
 80179c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80179ca:	e779      	b.n	80178c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80179cc:	78aa      	ldrb	r2, [r5, #2]
 80179ce:	4f0f      	ldr	r7, [pc, #60]	@ (8017a0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 80179d0:	3901      	subs	r1, #1
 80179d2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80179d6:	786a      	ldrb	r2, [r5, #1]
 80179d8:	b289      	uxth	r1, r1
 80179da:	00d2      	lsls	r2, r2, #3
 80179dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80179e0:	ea4a 0202 	orr.w	r2, sl, r2
 80179e4:	f895 a000 	ldrb.w	sl, [r5]
 80179e8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80179ec:	f82e 2b02 	strh.w	r2, [lr], #2
 80179f0:	e7d7      	b.n	80179a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80179f2:	4b04      	ldr	r3, [pc, #16]	@ (8017a04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80179f4:	6818      	ldr	r0, [r3, #0]
 80179f6:	6803      	ldr	r3, [r0, #0]
 80179f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80179fa:	4798      	blx	r3
 80179fc:	b013      	add	sp, #76	@ 0x4c
 80179fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a02:	bf00      	nop
 8017a04:	20002230 	.word	0x20002230
 8017a08:	2000222a 	.word	0x2000222a
 8017a0c:	fffff800 	.word	0xfffff800

08017a10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a14:	b09d      	sub	sp, #116	@ 0x74
 8017a16:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8017a1a:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8017a1e:	461c      	mov	r4, r3
 8017a20:	4683      	mov	fp, r0
 8017a22:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8017a24:	920e      	str	r2, [sp, #56]	@ 0x38
 8017a26:	2a00      	cmp	r2, #0
 8017a28:	f000 81e1 	beq.w	8017dee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3de>
 8017a2c:	6820      	ldr	r0, [r4, #0]
 8017a2e:	6861      	ldr	r1, [r4, #4]
 8017a30:	aa18      	add	r2, sp, #96	@ 0x60
 8017a32:	c203      	stmia	r2!, {r0, r1}
 8017a34:	6818      	ldr	r0, [r3, #0]
 8017a36:	6859      	ldr	r1, [r3, #4]
 8017a38:	aa1a      	add	r2, sp, #104	@ 0x68
 8017a3a:	c203      	stmia	r2!, {r0, r1}
 8017a3c:	a818      	add	r0, sp, #96	@ 0x60
 8017a3e:	f7f8 f9d1 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a42:	4621      	mov	r1, r4
 8017a44:	a81a      	add	r0, sp, #104	@ 0x68
 8017a46:	f7f8 f9f5 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a4a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8017a4e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8017a52:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017a56:	bfdd      	ittte	le
 8017a58:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017a5c:	b29a      	uxthle	r2, r3
 8017a5e:	fb91 f2f2 	sdivle	r2, r1, r2
 8017a62:	2201      	movgt	r2, #1
 8017a64:	9202      	str	r2, [sp, #8]
 8017a66:	9802      	ldr	r0, [sp, #8]
 8017a68:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8017a6c:	9902      	ldr	r1, [sp, #8]
 8017a6e:	fb92 f0f0 	sdiv	r0, r2, r0
 8017a72:	b280      	uxth	r0, r0
 8017a74:	900f      	str	r0, [sp, #60]	@ 0x3c
 8017a76:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8017a78:	9802      	ldr	r0, [sp, #8]
 8017a7a:	440c      	add	r4, r1
 8017a7c:	fb05 2510 	mls	r5, r5, r0, r2
 8017a80:	fb15 f503 	smulbb	r5, r5, r3
 8017a84:	3c01      	subs	r4, #1
 8017a86:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8017a8a:	fb94 f4f1 	sdiv	r4, r4, r1
 8017a8e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8017a92:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017a96:	440d      	add	r5, r1
 8017a98:	4419      	add	r1, r3
 8017a9a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8017a9e:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8017aa2:	441a      	add	r2, r3
 8017aa4:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017aa8:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8017aac:	9306      	str	r3, [sp, #24]
 8017aae:	4bb3      	ldr	r3, [pc, #716]	@ (8017d7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8017ab0:	3401      	adds	r4, #1
 8017ab2:	6818      	ldr	r0, [r3, #0]
 8017ab4:	b2a4      	uxth	r4, r4
 8017ab6:	6803      	ldr	r3, [r0, #0]
 8017ab8:	00a4      	lsls	r4, r4, #2
 8017aba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017abc:	4798      	blx	r3
 8017abe:	4bb0      	ldr	r3, [pc, #704]	@ (8017d80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8017ac0:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8017ac4:	881a      	ldrh	r2, [r3, #0]
 8017ac6:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8017aca:	4356      	muls	r6, r2
 8017acc:	fb02 7101 	mla	r1, r2, r1, r7
 8017ad0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8017ad4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8017ad8:	920a      	str	r2, [sp, #40]	@ 0x28
 8017ada:	1d22      	adds	r2, r4, #4
 8017adc:	b2ad      	uxth	r5, r5
 8017ade:	9213      	str	r2, [sp, #76]	@ 0x4c
 8017ae0:	9a06      	ldr	r2, [sp, #24]
 8017ae2:	2d00      	cmp	r5, #0
 8017ae4:	bf0c      	ite	eq
 8017ae6:	4611      	moveq	r1, r2
 8017ae8:	2100      	movne	r1, #0
 8017aea:	2200      	movs	r2, #0
 8017aec:	9316      	str	r3, [sp, #88]	@ 0x58
 8017aee:	4ba5      	ldr	r3, [pc, #660]	@ (8017d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8017af0:	b289      	uxth	r1, r1
 8017af2:	eba3 030b 	sub.w	r3, r3, fp
 8017af6:	920d      	str	r2, [sp, #52]	@ 0x34
 8017af8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8017afa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017afc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017afe:	fa12 f383 	uxtah	r3, r2, r3
 8017b02:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017b04:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017b08:	3304      	adds	r3, #4
 8017b0a:	9308      	str	r3, [sp, #32]
 8017b0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017b0e:	4543      	cmp	r3, r8
 8017b10:	f240 8168 	bls.w	8017de4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d4>
 8017b14:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8017b18:	9a02      	ldr	r2, [sp, #8]
 8017b1a:	fbb5 f3f3 	udiv	r3, r5, r3
 8017b1e:	1ad3      	subs	r3, r2, r3
 8017b20:	b29b      	uxth	r3, r3
 8017b22:	9314      	str	r3, [sp, #80]	@ 0x50
 8017b24:	9b08      	ldr	r3, [sp, #32]
 8017b26:	9808      	ldr	r0, [sp, #32]
 8017b28:	785a      	ldrb	r2, [r3, #1]
 8017b2a:	789b      	ldrb	r3, [r3, #2]
 8017b2c:	7800      	ldrb	r0, [r0, #0]
 8017b2e:	021b      	lsls	r3, r3, #8
 8017b30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017b34:	9a08      	ldr	r2, [sp, #32]
 8017b36:	9010      	str	r0, [sp, #64]	@ 0x40
 8017b38:	78d2      	ldrb	r2, [r2, #3]
 8017b3a:	3001      	adds	r0, #1
 8017b3c:	4313      	orrs	r3, r2
 8017b3e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017b40:	9007      	str	r0, [sp, #28]
 8017b42:	441a      	add	r2, r3
 8017b44:	1c50      	adds	r0, r2, #1
 8017b46:	9005      	str	r0, [sp, #20]
 8017b48:	7852      	ldrb	r2, [r2, #1]
 8017b4a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017b4c:	0212      	lsls	r2, r2, #8
 8017b4e:	5cc3      	ldrb	r3, [r0, r3]
 8017b50:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017b54:	431a      	orrs	r2, r3
 8017b56:	b293      	uxth	r3, r2
 8017b58:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017b5a:	2300      	movs	r3, #0
 8017b5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8017b5e:	2301      	movs	r3, #1
 8017b60:	9301      	str	r3, [sp, #4]
 8017b62:	9304      	str	r3, [sp, #16]
 8017b64:	2300      	movs	r3, #0
 8017b66:	f04f 0e01 	mov.w	lr, #1
 8017b6a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8017b6e:	9303      	str	r3, [sp, #12]
 8017b70:	2d00      	cmp	r5, #0
 8017b72:	d07c      	beq.n	8017c6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8017b74:	45ae      	cmp	lr, r5
 8017b76:	d26b      	bcs.n	8017c50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8017b78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017b7a:	eba5 050e 	sub.w	r5, r5, lr
 8017b7e:	4543      	cmp	r3, r8
 8017b80:	b2ad      	uxth	r5, r5
 8017b82:	460c      	mov	r4, r1
 8017b84:	d802      	bhi.n	8017b8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8017b86:	e070      	b.n	8017c6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8017b88:	2b00      	cmp	r3, #0
 8017b8a:	d15c      	bne.n	8017c46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017b8c:	9b05      	ldr	r3, [sp, #20]
 8017b8e:	9a04      	ldr	r2, [sp, #16]
 8017b90:	785b      	ldrb	r3, [r3, #1]
 8017b92:	f1c2 0207 	rsb	r2, r2, #7
 8017b96:	4093      	lsls	r3, r2
 8017b98:	005b      	lsls	r3, r3, #1
 8017b9a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017b9e:	9b05      	ldr	r3, [sp, #20]
 8017ba0:	9904      	ldr	r1, [sp, #16]
 8017ba2:	781b      	ldrb	r3, [r3, #0]
 8017ba4:	410b      	asrs	r3, r1
 8017ba6:	3101      	adds	r1, #1
 8017ba8:	b2c9      	uxtb	r1, r1
 8017baa:	2908      	cmp	r1, #8
 8017bac:	9104      	str	r1, [sp, #16]
 8017bae:	9905      	ldr	r1, [sp, #20]
 8017bb0:	b2db      	uxtb	r3, r3
 8017bb2:	bf03      	ittte	eq
 8017bb4:	3102      	addeq	r1, #2
 8017bb6:	9105      	streq	r1, [sp, #20]
 8017bb8:	2100      	moveq	r1, #0
 8017bba:	3101      	addne	r1, #1
 8017bbc:	bf14      	ite	ne
 8017bbe:	9105      	strne	r1, [sp, #20]
 8017bc0:	9104      	streq	r1, [sp, #16]
 8017bc2:	4313      	orrs	r3, r2
 8017bc4:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017bc6:	b29a      	uxth	r2, r3
 8017bc8:	4291      	cmp	r1, r2
 8017bca:	d30a      	bcc.n	8017be2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8017bcc:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8017bd0:	2301      	movs	r3, #1
 8017bd2:	9907      	ldr	r1, [sp, #28]
 8017bd4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017bd8:	d30f      	bcc.n	8017bfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017bda:	2100      	movs	r1, #0
 8017bdc:	9301      	str	r3, [sp, #4]
 8017bde:	9103      	str	r1, [sp, #12]
 8017be0:	e032      	b.n	8017c48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8017be2:	9b07      	ldr	r3, [sp, #28]
 8017be4:	429a      	cmp	r2, r3
 8017be6:	d318      	bcc.n	8017c1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017be8:	9b01      	ldr	r3, [sp, #4]
 8017bea:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8017bee:	445b      	add	r3, fp
 8017bf0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017bf4:	9b01      	ldr	r3, [sp, #4]
 8017bf6:	3301      	adds	r3, #1
 8017bf8:	b29b      	uxth	r3, r3
 8017bfa:	9907      	ldr	r1, [sp, #28]
 8017bfc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8017c00:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017c04:	7108      	strb	r0, [r1, #4]
 8017c06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017c08:	80c8      	strh	r0, [r1, #6]
 8017c0a:	9801      	ldr	r0, [sp, #4]
 8017c0c:	3001      	adds	r0, #1
 8017c0e:	7148      	strb	r0, [r1, #5]
 8017c10:	9907      	ldr	r1, [sp, #28]
 8017c12:	3101      	adds	r1, #1
 8017c14:	b289      	uxth	r1, r1
 8017c16:	9107      	str	r1, [sp, #28]
 8017c18:	e7df      	b.n	8017bda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8017c1a:	4611      	mov	r1, r2
 8017c1c:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017c20:	795b      	ldrb	r3, [r3, #5]
 8017c22:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8017c26:	4458      	add	r0, fp
 8017c28:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8017c2a:	4406      	add	r6, r0
 8017c2c:	2e00      	cmp	r6, #0
 8017c2e:	dd06      	ble.n	8017c3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017c30:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8017c34:	790e      	ldrb	r6, [r1, #4]
 8017c36:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017c3a:	88c9      	ldrh	r1, [r1, #6]
 8017c3c:	e7f4      	b.n	8017c28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017c3e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8017c42:	b29b      	uxth	r3, r3
 8017c44:	e7c5      	b.n	8017bd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8017c46:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017c48:	4621      	mov	r1, r4
 8017c4a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017c4c:	469e      	mov	lr, r3
 8017c4e:	e78f      	b.n	8017b70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017c50:	9a03      	ldr	r2, [sp, #12]
 8017c52:	ebae 0305 	sub.w	r3, lr, r5
 8017c56:	442a      	add	r2, r5
 8017c58:	b292      	uxth	r2, r2
 8017c5a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017c5e:	b29b      	uxth	r3, r3
 8017c60:	9203      	str	r2, [sp, #12]
 8017c62:	2500      	movs	r5, #0
 8017c64:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017c66:	4542      	cmp	r2, r8
 8017c68:	d88e      	bhi.n	8017b88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017c6a:	4621      	mov	r1, r4
 8017c6c:	e74e      	b.n	8017b0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017c6e:	458e      	cmp	lr, r1
 8017c70:	bf2c      	ite	cs
 8017c72:	462c      	movcs	r4, r5
 8017c74:	462b      	movcc	r3, r5
 8017c76:	f04f 0900 	mov.w	r9, #0
 8017c7a:	bf29      	itett	cs
 8017c7c:	ebae 0301 	subcs.w	r3, lr, r1
 8017c80:	eba1 040e 	subcc.w	r4, r1, lr
 8017c84:	b29b      	uxthcs	r3, r3
 8017c86:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8017c88:	bf3c      	itt	cc
 8017c8a:	b2a4      	uxthcc	r4, r4
 8017c8c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8017c90:	9a03      	ldr	r2, [sp, #12]
 8017c92:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8017c94:	444a      	add	r2, r9
 8017c96:	4548      	cmp	r0, r9
 8017c98:	b292      	uxth	r2, r2
 8017c9a:	d075      	beq.n	8017d88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>
 8017c9c:	2004      	movs	r0, #4
 8017c9e:	4605      	mov	r5, r0
 8017ca0:	445a      	add	r2, fp
 8017ca2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017ca4:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8017ca8:	fb15 0202 	smlabb	r2, r5, r2, r0
 8017cac:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017cae:	5880      	ldr	r0, [r0, r2]
 8017cb0:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8017cb4:	d014      	beq.n	8017ce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d0>
 8017cb6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017cba:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8017cbe:	d112      	bne.n	8017ce6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017cc0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017cc2:	2aff      	cmp	r2, #255	@ 0xff
 8017cc4:	d10f      	bne.n	8017ce6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8017cc6:	0942      	lsrs	r2, r0, #5
 8017cc8:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017ccc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017cd0:	f025 0507 	bic.w	r5, r5, #7
 8017cd4:	4315      	orrs	r5, r2
 8017cd6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017cda:	4305      	orrs	r5, r0
 8017cdc:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017ce0:	f109 0901 	add.w	r9, r9, #1
 8017ce4:	e7d4      	b.n	8017c90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x280>
 8017ce6:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017cea:	b2ed      	uxtb	r5, r5
 8017cec:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017cf0:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8017cf4:	9215      	str	r2, [sp, #84]	@ 0x54
 8017cf6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8017cf8:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017cfc:	fb02 fa0a 	mul.w	sl, r2, sl
 8017d00:	f10a 0201 	add.w	r2, sl, #1
 8017d04:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017d08:	1212      	asrs	r2, r2, #8
 8017d0a:	fa1f fa82 	uxth.w	sl, r2
 8017d0e:	43d2      	mvns	r2, r2
 8017d10:	b2c0      	uxtb	r0, r0
 8017d12:	fb16 f60a 	smulbb	r6, r6, sl
 8017d16:	fb10 f00a 	smulbb	r0, r0, sl
 8017d1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017d1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017d22:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017d26:	fa5f fc8c 	uxtb.w	ip, ip
 8017d2a:	b2d2      	uxtb	r2, r2
 8017d2c:	fb15 f50a 	smulbb	r5, r5, sl
 8017d30:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017d34:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017d38:	fb07 6702 	mla	r7, r7, r2, r6
 8017d3c:	fb0c 0002 	mla	r0, ip, r2, r0
 8017d40:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8017d42:	b2bf      	uxth	r7, r7
 8017d44:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017d48:	fb06 5602 	mla	r6, r6, r2, r5
 8017d4c:	b280      	uxth	r0, r0
 8017d4e:	1c7a      	adds	r2, r7, #1
 8017d50:	1c45      	adds	r5, r0, #1
 8017d52:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017d56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017d5a:	b2b6      	uxth	r6, r6
 8017d5c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017d60:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017d64:	432f      	orrs	r7, r5
 8017d66:	1c75      	adds	r5, r6, #1
 8017d68:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017d6c:	096d      	lsrs	r5, r5, #5
 8017d6e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017d72:	432f      	orrs	r7, r5
 8017d74:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017d78:	e7b2      	b.n	8017ce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d0>
 8017d7a:	bf00      	nop
 8017d7c:	20002230 	.word	0x20002230
 8017d80:	2000222a 	.word	0x2000222a
 8017d84:	fffff7fb 	.word	0xfffff7fb
 8017d88:	9203      	str	r2, [sp, #12]
 8017d8a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017d8c:	458e      	cmp	lr, r1
 8017d8e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017d92:	f4ff af66 	bcc.w	8017c62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017d96:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8017d98:	9906      	ldr	r1, [sp, #24]
 8017d9a:	8812      	ldrh	r2, [r2, #0]
 8017d9c:	1a52      	subs	r2, r2, r1
 8017d9e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017da2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017da4:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017da6:	3201      	adds	r2, #1
 8017da8:	428a      	cmp	r2, r1
 8017daa:	9209      	str	r2, [sp, #36]	@ 0x24
 8017dac:	d110      	bne.n	8017dd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c0>
 8017dae:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8017db2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8017db6:	9b06      	ldr	r3, [sp, #24]
 8017db8:	eba5 0509 	sub.w	r5, r5, r9
 8017dbc:	b2ad      	uxth	r5, r5
 8017dbe:	2d00      	cmp	r5, #0
 8017dc0:	bf0c      	ite	eq
 8017dc2:	4619      	moveq	r1, r3
 8017dc4:	2100      	movne	r1, #0
 8017dc6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017dc8:	b289      	uxth	r1, r1
 8017dca:	3301      	adds	r3, #1
 8017dcc:	930d      	str	r3, [sp, #52]	@ 0x34
 8017dce:	e694      	b.n	8017afa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017dd0:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017dd4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8017dd8:	1b2d      	subs	r5, r5, r4
 8017dda:	b2ad      	uxth	r5, r5
 8017ddc:	2d00      	cmp	r5, #0
 8017dde:	bf18      	it	ne
 8017de0:	2400      	movne	r4, #0
 8017de2:	e73f      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8017de4:	4b03      	ldr	r3, [pc, #12]	@ (8017df4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017de6:	6818      	ldr	r0, [r3, #0]
 8017de8:	6803      	ldr	r3, [r0, #0]
 8017dea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017dec:	4798      	blx	r3
 8017dee:	b01d      	add	sp, #116	@ 0x74
 8017df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017df4:	20002230 	.word	0x20002230

08017df8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dfc:	b09f      	sub	sp, #124	@ 0x7c
 8017dfe:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017e02:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017e06:	461d      	mov	r5, r3
 8017e08:	4604      	mov	r4, r0
 8017e0a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017e0c:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e0e:	2a00      	cmp	r2, #0
 8017e10:	f000 81fc 	beq.w	801820c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x414>
 8017e14:	6828      	ldr	r0, [r5, #0]
 8017e16:	6869      	ldr	r1, [r5, #4]
 8017e18:	aa1a      	add	r2, sp, #104	@ 0x68
 8017e1a:	c203      	stmia	r2!, {r0, r1}
 8017e1c:	6818      	ldr	r0, [r3, #0]
 8017e1e:	6859      	ldr	r1, [r3, #4]
 8017e20:	aa1c      	add	r2, sp, #112	@ 0x70
 8017e22:	c203      	stmia	r2!, {r0, r1}
 8017e24:	a81a      	add	r0, sp, #104	@ 0x68
 8017e26:	f7f7 ffdd 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017e2a:	4629      	mov	r1, r5
 8017e2c:	a81c      	add	r0, sp, #112	@ 0x70
 8017e2e:	f7f8 f801 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017e32:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017e36:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8017e3a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8017e3e:	bfdd      	ittte	le
 8017e40:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8017e44:	b29a      	uxthle	r2, r3
 8017e46:	fb91 f2f2 	sdivle	r2, r1, r2
 8017e4a:	2201      	movgt	r2, #1
 8017e4c:	9201      	str	r2, [sp, #4]
 8017e4e:	9801      	ldr	r0, [sp, #4]
 8017e50:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017e54:	9901      	ldr	r1, [sp, #4]
 8017e56:	fb92 f0f0 	sdiv	r0, r2, r0
 8017e5a:	b280      	uxth	r0, r0
 8017e5c:	9010      	str	r0, [sp, #64]	@ 0x40
 8017e5e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8017e60:	9801      	ldr	r0, [sp, #4]
 8017e62:	440e      	add	r6, r1
 8017e64:	fb05 2510 	mls	r5, r5, r0, r2
 8017e68:	fb15 f503 	smulbb	r5, r5, r3
 8017e6c:	3e01      	subs	r6, #1
 8017e6e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8017e72:	fb96 f6f1 	sdiv	r6, r6, r1
 8017e76:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8017e7a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017e7e:	440d      	add	r5, r1
 8017e80:	4419      	add	r1, r3
 8017e82:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017e86:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017e8a:	441a      	add	r2, r3
 8017e8c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017e90:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017e94:	9304      	str	r3, [sp, #16]
 8017e96:	4b96      	ldr	r3, [pc, #600]	@ (80180f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017e98:	3601      	adds	r6, #1
 8017e9a:	6818      	ldr	r0, [r3, #0]
 8017e9c:	b2b6      	uxth	r6, r6
 8017e9e:	6803      	ldr	r3, [r0, #0]
 8017ea0:	b2ad      	uxth	r5, r5
 8017ea2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017ea4:	4798      	blx	r3
 8017ea6:	4b93      	ldr	r3, [pc, #588]	@ (80180f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017ea8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017eac:	881a      	ldrh	r2, [r3, #0]
 8017eae:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8017eb2:	4357      	muls	r7, r2
 8017eb4:	fb02 c101 	mla	r1, r2, r1, ip
 8017eb8:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017ebc:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017ec0:	920b      	str	r2, [sp, #44]	@ 0x2c
 8017ec2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017ec4:	2d00      	cmp	r5, #0
 8017ec6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017eca:	f106 0204 	add.w	r2, r6, #4
 8017ece:	9206      	str	r2, [sp, #24]
 8017ed0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017ed2:	bf18      	it	ne
 8017ed4:	2100      	movne	r1, #0
 8017ed6:	ea6f 0202 	mvn.w	r2, r2
 8017eda:	b2d2      	uxtb	r2, r2
 8017edc:	9215      	str	r2, [sp, #84]	@ 0x54
 8017ede:	9a04      	ldr	r2, [sp, #16]
 8017ee0:	9318      	str	r3, [sp, #96]	@ 0x60
 8017ee2:	bf08      	it	eq
 8017ee4:	4611      	moveq	r1, r2
 8017ee6:	2200      	movs	r2, #0
 8017ee8:	4b83      	ldr	r3, [pc, #524]	@ (80180f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 8017eea:	b289      	uxth	r1, r1
 8017eec:	1b1b      	subs	r3, r3, r4
 8017eee:	920d      	str	r2, [sp, #52]	@ 0x34
 8017ef0:	9319      	str	r3, [sp, #100]	@ 0x64
 8017ef2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017ef4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017ef6:	fa12 f383 	uxtah	r3, r2, r3
 8017efa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017efc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017f00:	3304      	adds	r3, #4
 8017f02:	9307      	str	r3, [sp, #28]
 8017f04:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017f06:	455b      	cmp	r3, fp
 8017f08:	f240 817b 	bls.w	8018202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40a>
 8017f0c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017f10:	f04f 0801 	mov.w	r8, #1
 8017f14:	fbb5 f3f3 	udiv	r3, r5, r3
 8017f18:	9a01      	ldr	r2, [sp, #4]
 8017f1a:	9807      	ldr	r0, [sp, #28]
 8017f1c:	1ad3      	subs	r3, r2, r3
 8017f1e:	b29b      	uxth	r3, r3
 8017f20:	9316      	str	r3, [sp, #88]	@ 0x58
 8017f22:	9b07      	ldr	r3, [sp, #28]
 8017f24:	7800      	ldrb	r0, [r0, #0]
 8017f26:	785a      	ldrb	r2, [r3, #1]
 8017f28:	789b      	ldrb	r3, [r3, #2]
 8017f2a:	9011      	str	r0, [sp, #68]	@ 0x44
 8017f2c:	021b      	lsls	r3, r3, #8
 8017f2e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017f32:	9a07      	ldr	r2, [sp, #28]
 8017f34:	3001      	adds	r0, #1
 8017f36:	78d2      	ldrb	r2, [r2, #3]
 8017f38:	9005      	str	r0, [sp, #20]
 8017f3a:	4313      	orrs	r3, r2
 8017f3c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017f3e:	46c4      	mov	ip, r8
 8017f40:	441a      	add	r2, r3
 8017f42:	1c50      	adds	r0, r2, #1
 8017f44:	9003      	str	r0, [sp, #12]
 8017f46:	7852      	ldrb	r2, [r2, #1]
 8017f48:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017f4a:	0212      	lsls	r2, r2, #8
 8017f4c:	5cc3      	ldrb	r3, [r0, r3]
 8017f4e:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017f52:	431a      	orrs	r2, r3
 8017f54:	b293      	uxth	r3, r2
 8017f56:	930c      	str	r3, [sp, #48]	@ 0x30
 8017f58:	2300      	movs	r3, #0
 8017f5a:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017f5e:	9308      	str	r3, [sp, #32]
 8017f60:	461a      	mov	r2, r3
 8017f62:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017f66:	f8cd 8008 	str.w	r8, [sp, #8]
 8017f6a:	930e      	str	r3, [sp, #56]	@ 0x38
 8017f6c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017f70:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017f72:	2d00      	cmp	r5, #0
 8017f74:	d07c      	beq.n	8018070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8017f76:	45ac      	cmp	ip, r5
 8017f78:	d26c      	bcs.n	8018054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x25c>
 8017f7a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017f7c:	eba5 050c 	sub.w	r5, r5, ip
 8017f80:	455b      	cmp	r3, fp
 8017f82:	b2ad      	uxth	r5, r5
 8017f84:	4608      	mov	r0, r1
 8017f86:	d802      	bhi.n	8017f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8017f88:	e070      	b.n	801806c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8017f8a:	2b00      	cmp	r3, #0
 8017f8c:	d15c      	bne.n	8018048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8017f8e:	9b03      	ldr	r3, [sp, #12]
 8017f90:	9a02      	ldr	r2, [sp, #8]
 8017f92:	785b      	ldrb	r3, [r3, #1]
 8017f94:	f1c2 0207 	rsb	r2, r2, #7
 8017f98:	4093      	lsls	r3, r2
 8017f9a:	005b      	lsls	r3, r3, #1
 8017f9c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017fa0:	9b03      	ldr	r3, [sp, #12]
 8017fa2:	9902      	ldr	r1, [sp, #8]
 8017fa4:	781b      	ldrb	r3, [r3, #0]
 8017fa6:	410b      	asrs	r3, r1
 8017fa8:	3101      	adds	r1, #1
 8017faa:	b2c9      	uxtb	r1, r1
 8017fac:	2908      	cmp	r1, #8
 8017fae:	9102      	str	r1, [sp, #8]
 8017fb0:	9903      	ldr	r1, [sp, #12]
 8017fb2:	b2db      	uxtb	r3, r3
 8017fb4:	bf03      	ittte	eq
 8017fb6:	3102      	addeq	r1, #2
 8017fb8:	9103      	streq	r1, [sp, #12]
 8017fba:	2100      	moveq	r1, #0
 8017fbc:	3101      	addne	r1, #1
 8017fbe:	bf14      	ite	ne
 8017fc0:	9103      	strne	r1, [sp, #12]
 8017fc2:	9102      	streq	r1, [sp, #8]
 8017fc4:	4313      	orrs	r3, r2
 8017fc6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017fc8:	b29a      	uxth	r2, r3
 8017fca:	4291      	cmp	r1, r2
 8017fcc:	d30a      	bcc.n	8017fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ec>
 8017fce:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8017fd2:	2301      	movs	r3, #1
 8017fd4:	9905      	ldr	r1, [sp, #20]
 8017fd6:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8017fda:	d30f      	bcc.n	8017ffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x204>
 8017fdc:	2100      	movs	r1, #0
 8017fde:	4698      	mov	r8, r3
 8017fe0:	9100      	str	r1, [sp, #0]
 8017fe2:	e032      	b.n	801804a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8017fe4:	9b05      	ldr	r3, [sp, #20]
 8017fe6:	429a      	cmp	r2, r3
 8017fe8:	d318      	bcc.n	801801c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x224>
 8017fea:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 8017fee:	eb04 0308 	add.w	r3, r4, r8
 8017ff2:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8017ff6:	f108 0301 	add.w	r3, r8, #1
 8017ffa:	b29b      	uxth	r3, r3
 8017ffc:	9905      	ldr	r1, [sp, #20]
 8017ffe:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8018002:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8018006:	710e      	strb	r6, [r1, #4]
 8018008:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801800a:	80ce      	strh	r6, [r1, #6]
 801800c:	f108 0601 	add.w	r6, r8, #1
 8018010:	714e      	strb	r6, [r1, #5]
 8018012:	9905      	ldr	r1, [sp, #20]
 8018014:	3101      	adds	r1, #1
 8018016:	b289      	uxth	r1, r1
 8018018:	9105      	str	r1, [sp, #20]
 801801a:	e7df      	b.n	8017fdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e4>
 801801c:	4611      	mov	r1, r2
 801801e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8018022:	795b      	ldrb	r3, [r3, #5]
 8018024:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8018028:	4426      	add	r6, r4
 801802a:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801802c:	4437      	add	r7, r6
 801802e:	2f00      	cmp	r7, #0
 8018030:	dd06      	ble.n	8018040 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 8018032:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8018036:	790f      	ldrb	r7, [r1, #4]
 8018038:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801803c:	88c9      	ldrh	r1, [r1, #6]
 801803e:	e7f4      	b.n	801802a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x232>
 8018040:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8018044:	b29b      	uxth	r3, r3
 8018046:	e7c5      	b.n	8017fd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1dc>
 8018048:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801804a:	920c      	str	r2, [sp, #48]	@ 0x30
 801804c:	4601      	mov	r1, r0
 801804e:	9a00      	ldr	r2, [sp, #0]
 8018050:	469c      	mov	ip, r3
 8018052:	e78e      	b.n	8017f72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17a>
 8018054:	1957      	adds	r7, r2, r5
 8018056:	ebac 0305 	sub.w	r3, ip, r5
 801805a:	b2ba      	uxth	r2, r7
 801805c:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8018060:	b29b      	uxth	r3, r3
 8018062:	9200      	str	r2, [sp, #0]
 8018064:	2500      	movs	r5, #0
 8018066:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018068:	455a      	cmp	r2, fp
 801806a:	d88e      	bhi.n	8017f8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x192>
 801806c:	4601      	mov	r1, r0
 801806e:	e749      	b.n	8017f04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x10c>
 8018070:	458c      	cmp	ip, r1
 8018072:	bf2c      	ite	cs
 8018074:	4628      	movcs	r0, r5
 8018076:	462b      	movcc	r3, r5
 8018078:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801807a:	bf27      	ittee	cs
 801807c:	ebac 0301 	subcs.w	r3, ip, r1
 8018080:	9109      	strcs	r1, [sp, #36]	@ 0x24
 8018082:	eba1 000c 	subcc.w	r0, r1, ip
 8018086:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801808a:	bf2c      	ite	cs
 801808c:	b29b      	uxthcs	r3, r3
 801808e:	b280      	uxthcc	r0, r0
 8018090:	2dff      	cmp	r5, #255	@ 0xff
 8018092:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8018094:	eb02 0705 	add.w	r7, r2, r5
 8018098:	b2bd      	uxth	r5, r7
 801809a:	9500      	str	r5, [sp, #0]
 801809c:	d12e      	bne.n	80180fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>
 801809e:	465e      	mov	r6, fp
 80180a0:	9d00      	ldr	r5, [sp, #0]
 80180a2:	42aa      	cmp	r2, r5
 80180a4:	f040 8083 	bne.w	80181ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b6>
 80180a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80180aa:	458c      	cmp	ip, r1
 80180ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80180b0:	d3d8      	bcc.n	8018064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 80180b2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80180b4:	9904      	ldr	r1, [sp, #16]
 80180b6:	8812      	ldrh	r2, [r2, #0]
 80180b8:	1a52      	subs	r2, r2, r1
 80180ba:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80180be:	9a08      	ldr	r2, [sp, #32]
 80180c0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80180c2:	3201      	adds	r2, #1
 80180c4:	428a      	cmp	r2, r1
 80180c6:	9208      	str	r2, [sp, #32]
 80180c8:	f040 8091 	bne.w	80181ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f6>
 80180cc:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80180d0:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80180d4:	9b04      	ldr	r3, [sp, #16]
 80180d6:	eba5 050c 	sub.w	r5, r5, ip
 80180da:	b2ad      	uxth	r5, r5
 80180dc:	2d00      	cmp	r5, #0
 80180de:	bf0c      	ite	eq
 80180e0:	4619      	moveq	r1, r3
 80180e2:	2100      	movne	r1, #0
 80180e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80180e6:	b289      	uxth	r1, r1
 80180e8:	3301      	adds	r3, #1
 80180ea:	930d      	str	r3, [sp, #52]	@ 0x34
 80180ec:	e701      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfa>
 80180ee:	bf00      	nop
 80180f0:	20002230 	.word	0x20002230
 80180f4:	2000222a 	.word	0x2000222a
 80180f8:	fffff7fb 	.word	0xfffff7fb
 80180fc:	46d9      	mov	r9, fp
 80180fe:	9d00      	ldr	r5, [sp, #0]
 8018100:	42aa      	cmp	r2, r5
 8018102:	d0d1      	beq.n	80180a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b0>
 8018104:	1c55      	adds	r5, r2, #1
 8018106:	4422      	add	r2, r4
 8018108:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801810c:	9a06      	ldr	r2, [sp, #24]
 801810e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018112:	4472      	add	r2, lr
 8018114:	9212      	str	r2, [sp, #72]	@ 0x48
 8018116:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018118:	f8b9 2000 	ldrh.w	r2, [r9]
 801811c:	f897 a002 	ldrb.w	sl, [r7, #2]
 8018120:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018122:	1216      	asrs	r6, r2, #8
 8018124:	fb1a fa07 	smulbb	sl, sl, r7
 8018128:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801812c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801812e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018132:	fb06 a607 	mla	r6, r6, r7, sl
 8018136:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8018138:	9517      	str	r5, [sp, #92]	@ 0x5c
 801813a:	f897 a001 	ldrb.w	sl, [r7, #1]
 801813e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8018140:	10d5      	asrs	r5, r2, #3
 8018142:	fb1a fa07 	smulbb	sl, sl, r7
 8018146:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801814a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801814c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018150:	fb05 a507 	mla	r5, r5, r7, sl
 8018154:	9f06      	ldr	r7, [sp, #24]
 8018156:	00d2      	lsls	r2, r2, #3
 8018158:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801815c:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801815e:	b2d2      	uxtb	r2, r2
 8018160:	fb1e fe07 	smulbb	lr, lr, r7
 8018164:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018166:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801816a:	fb02 e207 	mla	r2, r2, r7, lr
 801816e:	b2b6      	uxth	r6, r6
 8018170:	b292      	uxth	r2, r2
 8018172:	b2ad      	uxth	r5, r5
 8018174:	f106 0a01 	add.w	sl, r6, #1
 8018178:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801817c:	f102 0e01 	add.w	lr, r2, #1
 8018180:	f105 0a01 	add.w	sl, r5, #1
 8018184:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018188:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801818c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018190:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018194:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018198:	ea4e 0606 	orr.w	r6, lr, r6
 801819c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80181a0:	ea46 060a 	orr.w	r6, r6, sl
 80181a4:	f829 6b02 	strh.w	r6, [r9], #2
 80181a8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80181ac:	e7a7      	b.n	80180fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x306>
 80181ae:	f102 0e01 	add.w	lr, r2, #1
 80181b2:	4422      	add	r2, r4
 80181b4:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80181b8:	9a06      	ldr	r2, [sp, #24]
 80181ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80181be:	eb02 0a05 	add.w	sl, r2, r5
 80181c2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80181c6:	4a13      	ldr	r2, [pc, #76]	@ (8018214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80181c8:	9f06      	ldr	r7, [sp, #24]
 80181ca:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80181ce:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80181d2:	00d2      	lsls	r2, r2, #3
 80181d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80181d8:	ea49 0202 	orr.w	r2, r9, r2
 80181dc:	f817 9005 	ldrb.w	r9, [r7, r5]
 80181e0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80181e4:	f826 2b02 	strh.w	r2, [r6], #2
 80181e8:	fa1f f28e 	uxth.w	r2, lr
 80181ec:	e758      	b.n	80180a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>
 80181ee:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80181f2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80181f6:	1a2d      	subs	r5, r5, r0
 80181f8:	b2ad      	uxth	r5, r5
 80181fa:	2d00      	cmp	r5, #0
 80181fc:	bf18      	it	ne
 80181fe:	2000      	movne	r0, #0
 8018200:	e731      	b.n	8018066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8018202:	4b05      	ldr	r3, [pc, #20]	@ (8018218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 8018204:	6818      	ldr	r0, [r3, #0]
 8018206:	6803      	ldr	r3, [r0, #0]
 8018208:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801820a:	4798      	blx	r3
 801820c:	b01f      	add	sp, #124	@ 0x7c
 801820e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018212:	bf00      	nop
 8018214:	fffff800 	.word	0xfffff800
 8018218:	20002230 	.word	0x20002230

0801821c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801821c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018220:	469b      	mov	fp, r3
 8018222:	4616      	mov	r6, r2
 8018224:	b091      	sub	sp, #68	@ 0x44
 8018226:	f9b3 2000 	ldrsh.w	r2, [r3]
 801822a:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801822e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8018232:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8018236:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801823a:	4604      	mov	r4, r0
 801823c:	460d      	mov	r5, r1
 801823e:	4640      	mov	r0, r8
 8018240:	4659      	mov	r1, fp
 8018242:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018246:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801824a:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801824e:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8018252:	f7f4 fe11 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8018256:	4631      	mov	r1, r6
 8018258:	4640      	mov	r0, r8
 801825a:	f7f4 fe0d 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 801825e:	4b74      	ldr	r3, [pc, #464]	@ (8018430 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018260:	8818      	ldrh	r0, [r3, #0]
 8018262:	4b74      	ldr	r3, [pc, #464]	@ (8018434 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8018264:	b202      	sxth	r2, r0
 8018266:	8819      	ldrh	r1, [r3, #0]
 8018268:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801826c:	b20e      	sxth	r6, r1
 801826e:	2b00      	cmp	r3, #0
 8018270:	da07      	bge.n	8018282 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8018272:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8018276:	4463      	add	r3, ip
 8018278:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801827c:	2300      	movs	r3, #0
 801827e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8018282:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018286:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801828a:	1ad2      	subs	r2, r2, r3
 801828c:	4594      	cmp	ip, r2
 801828e:	bfc4      	itt	gt
 8018290:	1ac2      	subgt	r2, r0, r3
 8018292:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8018296:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801829a:	2a00      	cmp	r2, #0
 801829c:	da07      	bge.n	80182ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801829e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80182a2:	4462      	add	r2, ip
 80182a4:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80182a8:	2200      	movs	r2, #0
 80182aa:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80182ae:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80182b2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80182b6:	eba6 060a 	sub.w	r6, r6, sl
 80182ba:	42b2      	cmp	r2, r6
 80182bc:	bfc4      	itt	gt
 80182be:	eba1 020a 	subgt.w	r2, r1, sl
 80182c2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80182c6:	4a5c      	ldr	r2, [pc, #368]	@ (8018438 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80182c8:	7812      	ldrb	r2, [r2, #0]
 80182ca:	b9a2      	cbnz	r2, 80182f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80182cc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80182d0:	4286      	cmp	r6, r0
 80182d2:	4640      	mov	r0, r8
 80182d4:	9303      	str	r3, [sp, #12]
 80182d6:	bf14      	ite	ne
 80182d8:	2600      	movne	r6, #0
 80182da:	2601      	moveq	r6, #1
 80182dc:	f7f4 fe0f 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 80182e0:	9b03      	ldr	r3, [sp, #12]
 80182e2:	b160      	cbz	r0, 80182fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80182e4:	2300      	movs	r3, #0
 80182e6:	8023      	strh	r3, [r4, #0]
 80182e8:	8063      	strh	r3, [r4, #2]
 80182ea:	80a3      	strh	r3, [r4, #4]
 80182ec:	4620      	mov	r0, r4
 80182ee:	80e3      	strh	r3, [r4, #6]
 80182f0:	b011      	add	sp, #68	@ 0x44
 80182f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182f6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80182fa:	428e      	cmp	r6, r1
 80182fc:	e7e9      	b.n	80182d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80182fe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8018302:	a90e      	add	r1, sp, #56	@ 0x38
 8018304:	9205      	str	r2, [sp, #20]
 8018306:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801830a:	900e      	str	r0, [sp, #56]	@ 0x38
 801830c:	9206      	str	r2, [sp, #24]
 801830e:	f8bb 2000 	ldrh.w	r2, [fp]
 8018312:	a80c      	add	r0, sp, #48	@ 0x30
 8018314:	1a9b      	subs	r3, r3, r2
 8018316:	b21b      	sxth	r3, r3
 8018318:	9303      	str	r3, [sp, #12]
 801831a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801831e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8018322:	ebaa 0a03 	sub.w	sl, sl, r3
 8018326:	fa0f f38a 	sxth.w	r3, sl
 801832a:	9304      	str	r3, [sp, #16]
 801832c:	9b03      	ldr	r3, [sp, #12]
 801832e:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8018332:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018336:	9b04      	ldr	r3, [sp, #16]
 8018338:	f8df b104 	ldr.w	fp, [pc, #260]	@ 8018440 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801833c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018340:	9b05      	ldr	r3, [sp, #20]
 8018342:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8018346:	9b06      	ldr	r3, [sp, #24]
 8018348:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801834c:	f7f7 fd72 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018350:	4640      	mov	r0, r8
 8018352:	f7f7 fd47 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018356:	a80e      	add	r0, sp, #56	@ 0x38
 8018358:	f7f7 fd44 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801835c:	4b37      	ldr	r3, [pc, #220]	@ (801843c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801835e:	4628      	mov	r0, r5
 8018360:	881b      	ldrh	r3, [r3, #0]
 8018362:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8018366:	9307      	str	r3, [sp, #28]
 8018368:	682b      	ldr	r3, [r5, #0]
 801836a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801836c:	4798      	blx	r3
 801836e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8018372:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8018376:	4681      	mov	r9, r0
 8018378:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801837c:	f8db 0000 	ldr.w	r0, [fp]
 8018380:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8018382:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018386:	6803      	ldr	r3, [r0, #0]
 8018388:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801838a:	4798      	blx	r3
 801838c:	4607      	mov	r7, r0
 801838e:	f8db 0000 	ldr.w	r0, [fp]
 8018392:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8018396:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801839a:	6803      	ldr	r3, [r0, #0]
 801839c:	9109      	str	r1, [sp, #36]	@ 0x24
 801839e:	9208      	str	r2, [sp, #32]
 80183a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80183a2:	4798      	blx	r3
 80183a4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80183a8:	f010 0f01 	tst.w	r0, #1
 80183ac:	d012      	beq.n	80183d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80183ae:	f8db 0000 	ldr.w	r0, [fp]
 80183b2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80183b6:	6803      	ldr	r3, [r0, #0]
 80183b8:	9200      	str	r2, [sp, #0]
 80183ba:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 80183bc:	e898 0006 	ldmia.w	r8, {r1, r2}
 80183c0:	462b      	mov	r3, r5
 80183c2:	47b0      	blx	r6
 80183c4:	9b03      	ldr	r3, [sp, #12]
 80183c6:	8023      	strh	r3, [r4, #0]
 80183c8:	9b04      	ldr	r3, [sp, #16]
 80183ca:	8063      	strh	r3, [r4, #2]
 80183cc:	9b05      	ldr	r3, [sp, #20]
 80183ce:	80a3      	strh	r3, [r4, #4]
 80183d0:	9b06      	ldr	r3, [sp, #24]
 80183d2:	e78b      	b.n	80182ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80183d4:	fb09 f202 	mul.w	r2, r9, r2
 80183d8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80183dc:	440f      	add	r7, r1
 80183de:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80183e2:	b166      	cbz	r6, 80183fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80183e4:	9a07      	ldr	r2, [sp, #28]
 80183e6:	4592      	cmp	sl, r2
 80183e8:	d109      	bne.n	80183fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80183ea:	f8db 0000 	ldr.w	r0, [fp]
 80183ee:	fb09 f303 	mul.w	r3, r9, r3
 80183f2:	6802      	ldr	r2, [r0, #0]
 80183f4:	4629      	mov	r1, r5
 80183f6:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 80183f8:	463a      	mov	r2, r7
 80183fa:	47b0      	blx	r6
 80183fc:	e7e2      	b.n	80183c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80183fe:	fb0a f303 	mul.w	r3, sl, r3
 8018402:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8018440 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018406:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801840a:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801840e:	4545      	cmp	r5, r8
 8018410:	d2d8      	bcs.n	80183c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018412:	f8db 0000 	ldr.w	r0, [fp]
 8018416:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801841a:	6802      	ldr	r2, [r0, #0]
 801841c:	4629      	mov	r1, r5
 801841e:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 8018422:	005b      	lsls	r3, r3, #1
 8018424:	463a      	mov	r2, r7
 8018426:	47d0      	blx	sl
 8018428:	444f      	add	r7, r9
 801842a:	4435      	add	r5, r6
 801842c:	e7ef      	b.n	801840e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801842e:	bf00      	nop
 8018430:	20002224 	.word	0x20002224
 8018434:	20002226 	.word	0x20002226
 8018438:	20002228 	.word	0x20002228
 801843c:	2000222a 	.word	0x2000222a
 8018440:	20002230 	.word	0x20002230

08018444 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018444:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018446:	4606      	mov	r6, r0
 8018448:	b087      	sub	sp, #28
 801844a:	460c      	mov	r4, r1
 801844c:	4617      	mov	r7, r2
 801844e:	461d      	mov	r5, r3
 8018450:	b333      	cbz	r3, 80184a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018452:	4608      	mov	r0, r1
 8018454:	f7f4 fd53 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8018458:	bb10      	cbnz	r0, 80184a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801845a:	6820      	ldr	r0, [r4, #0]
 801845c:	6861      	ldr	r1, [r4, #4]
 801845e:	ab04      	add	r3, sp, #16
 8018460:	4c1b      	ldr	r4, [pc, #108]	@ (80184d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018462:	c303      	stmia	r3!, {r0, r1}
 8018464:	a804      	add	r0, sp, #16
 8018466:	f7f7 fcbd 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801846a:	6820      	ldr	r0, [r4, #0]
 801846c:	6803      	ldr	r3, [r0, #0]
 801846e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018470:	4798      	blx	r3
 8018472:	2dff      	cmp	r5, #255	@ 0xff
 8018474:	d016      	beq.n	80184a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8018476:	f010 0f08 	tst.w	r0, #8
 801847a:	6820      	ldr	r0, [r4, #0]
 801847c:	d015      	beq.n	80184aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801847e:	2400      	movs	r4, #0
 8018480:	6801      	ldr	r1, [r0, #0]
 8018482:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018486:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801848a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801848e:	9401      	str	r4, [sp, #4]
 8018490:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8018494:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018498:	9400      	str	r4, [sp, #0]
 801849a:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 801849c:	4639      	mov	r1, r7
 801849e:	47a0      	blx	r4
 80184a0:	b007      	add	sp, #28
 80184a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80184a4:	f010 0f02 	tst.w	r0, #2
 80184a8:	e7e7      	b.n	801847a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80184aa:	6803      	ldr	r3, [r0, #0]
 80184ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80184ae:	4798      	blx	r3
 80184b0:	4b08      	ldr	r3, [pc, #32]	@ (80184d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80184b2:	4601      	mov	r1, r0
 80184b4:	881a      	ldrh	r2, [r3, #0]
 80184b6:	e9cd 7500 	strd	r7, r5, [sp]
 80184ba:	6833      	ldr	r3, [r6, #0]
 80184bc:	4630      	mov	r0, r6
 80184be:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80184c0:	ab04      	add	r3, sp, #16
 80184c2:	47a8      	blx	r5
 80184c4:	6820      	ldr	r0, [r4, #0]
 80184c6:	6803      	ldr	r3, [r0, #0]
 80184c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80184ca:	4798      	blx	r3
 80184cc:	e7e8      	b.n	80184a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80184ce:	bf00      	nop
 80184d0:	20002230 	.word	0x20002230
 80184d4:	2000222a 	.word	0x2000222a

080184d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80184d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80184dc:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80184e0:	4688      	mov	r8, r1
 80184e2:	4614      	mov	r4, r2
 80184e4:	461d      	mov	r5, r3
 80184e6:	9e08      	ldr	r6, [sp, #32]
 80184e8:	2f00      	cmp	r7, #0
 80184ea:	f000 80a9 	beq.w	8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80184ee:	4618      	mov	r0, r3
 80184f0:	f7f4 fd05 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 80184f4:	2800      	cmp	r0, #0
 80184f6:	f040 80a3 	bne.w	8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80184fa:	f9b5 1000 	ldrsh.w	r1, [r5]
 80184fe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018502:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8018506:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801850a:	fb04 1303 	mla	r3, r4, r3, r1
 801850e:	4365      	muls	r5, r4
 8018510:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018514:	2fff      	cmp	r7, #255	@ 0xff
 8018516:	eba4 0200 	sub.w	r2, r4, r0
 801851a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801851e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018522:	d04a      	beq.n	80185ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018524:	b2bc      	uxth	r4, r7
 8018526:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801852a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801852e:	fa5f f788 	uxtb.w	r7, r8
 8018532:	b2f3      	uxtb	r3, r6
 8018534:	fb0e fe04 	mul.w	lr, lr, r4
 8018538:	4367      	muls	r7, r4
 801853a:	4363      	muls	r3, r4
 801853c:	0040      	lsls	r0, r0, #1
 801853e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018542:	fa1f fc8c 	uxth.w	ip, ip
 8018546:	42a9      	cmp	r1, r5
 8018548:	d27a      	bcs.n	8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801854a:	eb01 0900 	add.w	r9, r1, r0
 801854e:	4549      	cmp	r1, r9
 8018550:	d231      	bcs.n	80185b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8018552:	880a      	ldrh	r2, [r1, #0]
 8018554:	1214      	asrs	r4, r2, #8
 8018556:	10d6      	asrs	r6, r2, #3
 8018558:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801855c:	00d2      	lsls	r2, r2, #3
 801855e:	b2d2      	uxtb	r2, r2
 8018560:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018564:	fb14 f40c 	smulbb	r4, r4, ip
 8018568:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801856c:	fb12 f20c 	smulbb	r2, r2, ip
 8018570:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018574:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018578:	4474      	add	r4, lr
 801857a:	fb16 f60c 	smulbb	r6, r6, ip
 801857e:	b2a4      	uxth	r4, r4
 8018580:	441a      	add	r2, r3
 8018582:	b292      	uxth	r2, r2
 8018584:	f104 0a01 	add.w	sl, r4, #1
 8018588:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801858c:	f102 0a01 	add.w	sl, r2, #1
 8018590:	443e      	add	r6, r7
 8018592:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8018596:	b2b6      	uxth	r6, r6
 8018598:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801859c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80185a0:	4322      	orrs	r2, r4
 80185a2:	1c74      	adds	r4, r6, #1
 80185a4:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80185a8:	0976      	lsrs	r6, r6, #5
 80185aa:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80185ae:	4332      	orrs	r2, r6
 80185b0:	f821 2b02 	strh.w	r2, [r1], #2
 80185b4:	e7cb      	b.n	801854e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80185b6:	4441      	add	r1, r8
 80185b8:	e7c5      	b.n	8018546 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80185ba:	4f22      	ldr	r7, [pc, #136]	@ (8018644 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80185bc:	0973      	lsrs	r3, r6, #5
 80185be:	ea08 0707 	and.w	r7, r8, r7
 80185c2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80185c6:	433b      	orrs	r3, r7
 80185c8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80185cc:	4333      	orrs	r3, r6
 80185ce:	07e7      	lsls	r7, r4, #31
 80185d0:	b29b      	uxth	r3, r3
 80185d2:	d50b      	bpl.n	80185ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80185d4:	0040      	lsls	r0, r0, #1
 80185d6:	0052      	lsls	r2, r2, #1
 80185d8:	42a9      	cmp	r1, r5
 80185da:	d231      	bcs.n	8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80185dc:	180c      	adds	r4, r1, r0
 80185de:	42a1      	cmp	r1, r4
 80185e0:	d202      	bcs.n	80185e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80185e2:	f821 3b02 	strh.w	r3, [r1], #2
 80185e6:	e7fa      	b.n	80185de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80185e8:	4411      	add	r1, r2
 80185ea:	e7f5      	b.n	80185d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80185ec:	078e      	lsls	r6, r1, #30
 80185ee:	d008      	beq.n	8018602 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80185f0:	460a      	mov	r2, r1
 80185f2:	0066      	lsls	r6, r4, #1
 80185f4:	42aa      	cmp	r2, r5
 80185f6:	d202      	bcs.n	80185fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80185f8:	8013      	strh	r3, [r2, #0]
 80185fa:	4432      	add	r2, r6
 80185fc:	e7fa      	b.n	80185f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80185fe:	3102      	adds	r1, #2
 8018600:	3801      	subs	r0, #1
 8018602:	07c2      	lsls	r2, r0, #31
 8018604:	d50b      	bpl.n	801861e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8018606:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801860a:	3a01      	subs	r2, #1
 801860c:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018610:	0066      	lsls	r6, r4, #1
 8018612:	42aa      	cmp	r2, r5
 8018614:	d202      	bcs.n	801861c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8018616:	8013      	strh	r3, [r2, #0]
 8018618:	4432      	add	r2, r6
 801861a:	e7fa      	b.n	8018612 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801861c:	3801      	subs	r0, #1
 801861e:	b178      	cbz	r0, 8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018620:	1040      	asrs	r0, r0, #1
 8018622:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8018626:	0080      	lsls	r0, r0, #2
 8018628:	0064      	lsls	r4, r4, #1
 801862a:	42a9      	cmp	r1, r5
 801862c:	d208      	bcs.n	8018640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801862e:	460a      	mov	r2, r1
 8018630:	180e      	adds	r6, r1, r0
 8018632:	42b2      	cmp	r2, r6
 8018634:	d202      	bcs.n	801863c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8018636:	f842 3b04 	str.w	r3, [r2], #4
 801863a:	e7fa      	b.n	8018632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801863c:	4421      	add	r1, r4
 801863e:	e7f4      	b.n	801862a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018640:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018644:	00fff800 	.word	0x00fff800

08018648 <_ZN8touchgfx8LCD16bppC1Ev>:
 8018648:	2200      	movs	r2, #0
 801864a:	4912      	ldr	r1, [pc, #72]	@ (8018694 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801864c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8018650:	6001      	str	r1, [r0, #0]
 8018652:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8018656:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801865a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801865e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8018662:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8018666:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801866a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801866e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8018672:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8018676:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801867a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801867e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8018682:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8018686:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801868a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801868e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8018692:	4770      	bx	lr
 8018694:	08024f7c 	.word	0x08024f7c

08018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801869c:	460d      	mov	r5, r1
 801869e:	4604      	mov	r4, r0
 80186a0:	4699      	mov	r9, r3
 80186a2:	b08d      	sub	sp, #52	@ 0x34
 80186a4:	6808      	ldr	r0, [r1, #0]
 80186a6:	6849      	ldr	r1, [r1, #4]
 80186a8:	ab08      	add	r3, sp, #32
 80186aa:	c303      	stmia	r3!, {r0, r1}
 80186ac:	6810      	ldr	r0, [r2, #0]
 80186ae:	6851      	ldr	r1, [r2, #4]
 80186b0:	ab0a      	add	r3, sp, #40	@ 0x28
 80186b2:	c303      	stmia	r3!, {r0, r1}
 80186b4:	a808      	add	r0, sp, #32
 80186b6:	f7f7 fb95 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80186ba:	4629      	mov	r1, r5
 80186bc:	a80a      	add	r0, sp, #40	@ 0x28
 80186be:	f7f7 fbb9 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80186c2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80186c6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80186ca:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80186ce:	4d63      	ldr	r5, [pc, #396]	@ (801885c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80186d0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186d4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80186d8:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80186dc:	6828      	ldr	r0, [r5, #0]
 80186de:	440a      	add	r2, r1
 80186e0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80186e4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80186e8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80186ec:	4413      	add	r3, r2
 80186ee:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80186f2:	6803      	ldr	r3, [r0, #0]
 80186f4:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80186f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80186fa:	4798      	blx	r3
 80186fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018700:	d119      	bne.n	8018736 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8018702:	f010 0f20 	tst.w	r0, #32
 8018706:	6828      	ldr	r0, [r5, #0]
 8018708:	d018      	beq.n	801873c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801870a:	2500      	movs	r5, #0
 801870c:	6801      	ldr	r1, [r0, #0]
 801870e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018712:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8018716:	b2b6      	uxth	r6, r6
 8018718:	9502      	str	r5, [sp, #8]
 801871a:	fa1f f588 	uxth.w	r5, r8
 801871e:	9601      	str	r6, [sp, #4]
 8018720:	9500      	str	r5, [sp, #0]
 8018722:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8018724:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8018728:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801872c:	4621      	mov	r1, r4
 801872e:	47a8      	blx	r5
 8018730:	b00d      	add	sp, #52	@ 0x34
 8018732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018736:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801873a:	e7e4      	b.n	8018706 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801873c:	6803      	ldr	r3, [r0, #0]
 801873e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018740:	4798      	blx	r3
 8018742:	4947      	ldr	r1, [pc, #284]	@ (8018860 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8018744:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018748:	468a      	mov	sl, r1
 801874a:	880b      	ldrh	r3, [r1, #0]
 801874c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8018750:	fb03 5202 	mla	r2, r3, r2, r5
 8018754:	4373      	muls	r3, r6
 8018756:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801875a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801875e:	9307      	str	r3, [sp, #28]
 8018760:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018764:	9306      	str	r3, [sp, #24]
 8018766:	9b07      	ldr	r3, [sp, #28]
 8018768:	4298      	cmp	r0, r3
 801876a:	d270      	bcs.n	801884e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801876c:	4621      	mov	r1, r4
 801876e:	9b06      	ldr	r3, [sp, #24]
 8018770:	eb00 0b03 	add.w	fp, r0, r3
 8018774:	4558      	cmp	r0, fp
 8018776:	d25d      	bcs.n	8018834 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018778:	f851 4b04 	ldr.w	r4, [r1], #4
 801877c:	0e23      	lsrs	r3, r4, #24
 801877e:	d014      	beq.n	80187aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018780:	2bff      	cmp	r3, #255	@ 0xff
 8018782:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8018786:	d112      	bne.n	80187ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018788:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801878c:	d10f      	bne.n	80187ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801878e:	0963      	lsrs	r3, r4, #5
 8018790:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8018794:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018798:	f02c 0c07 	bic.w	ip, ip, #7
 801879c:	ea43 0c0c 	orr.w	ip, r3, ip
 80187a0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80187a4:	ea4c 0404 	orr.w	r4, ip, r4
 80187a8:	8004      	strh	r4, [r0, #0]
 80187aa:	3002      	adds	r0, #2
 80187ac:	e7e2      	b.n	8018774 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80187ae:	fb09 f303 	mul.w	r3, r9, r3
 80187b2:	1c5a      	adds	r2, r3, #1
 80187b4:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80187b8:	1212      	asrs	r2, r2, #8
 80187ba:	b293      	uxth	r3, r2
 80187bc:	43d2      	mvns	r2, r2
 80187be:	8807      	ldrh	r7, [r0, #0]
 80187c0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80187c4:	fb1e fe03 	smulbb	lr, lr, r3
 80187c8:	123e      	asrs	r6, r7, #8
 80187ca:	fa5f fc8c 	uxtb.w	ip, ip
 80187ce:	b2e4      	uxtb	r4, r4
 80187d0:	fb1c fc03 	smulbb	ip, ip, r3
 80187d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80187d8:	fb14 f403 	smulbb	r4, r4, r3
 80187dc:	b2d2      	uxtb	r2, r2
 80187de:	10fd      	asrs	r5, r7, #3
 80187e0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80187e4:	00ff      	lsls	r7, r7, #3
 80187e6:	fb06 e602 	mla	r6, r6, r2, lr
 80187ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80187ee:	b2ff      	uxtb	r7, r7
 80187f0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80187f4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80187f8:	fb05 c502 	mla	r5, r5, r2, ip
 80187fc:	fb07 4702 	mla	r7, r7, r2, r4
 8018800:	b2b6      	uxth	r6, r6
 8018802:	f106 0e01 	add.w	lr, r6, #1
 8018806:	b2ad      	uxth	r5, r5
 8018808:	b2bf      	uxth	r7, r7
 801880a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801880e:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8018812:	f105 0c01 	add.w	ip, r5, #1
 8018816:	1c7e      	adds	r6, r7, #1
 8018818:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801881c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018820:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018824:	096d      	lsrs	r5, r5, #5
 8018826:	ea46 060e 	orr.w	r6, r6, lr
 801882a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801882e:	432e      	orrs	r6, r5
 8018830:	8006      	strh	r6, [r0, #0]
 8018832:	e7ba      	b.n	80187aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018834:	f8ba 3000 	ldrh.w	r3, [sl]
 8018838:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801883c:	eba3 0308 	sub.w	r3, r3, r8
 8018840:	eba4 0408 	sub.w	r4, r4, r8
 8018844:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018848:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801884c:	e78b      	b.n	8018766 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801884e:	4b03      	ldr	r3, [pc, #12]	@ (801885c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018850:	6818      	ldr	r0, [r3, #0]
 8018852:	6803      	ldr	r3, [r0, #0]
 8018854:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018856:	4798      	blx	r3
 8018858:	e76a      	b.n	8018730 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801885a:	bf00      	nop
 801885c:	20002230 	.word	0x20002230
 8018860:	2000222a 	.word	0x2000222a

08018864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8018864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018868:	b085      	sub	sp, #20
 801886a:	466d      	mov	r5, sp
 801886c:	4616      	mov	r6, r2
 801886e:	460c      	mov	r4, r1
 8018870:	6810      	ldr	r0, [r2, #0]
 8018872:	6851      	ldr	r1, [r2, #4]
 8018874:	c503      	stmia	r5!, {r0, r1}
 8018876:	6818      	ldr	r0, [r3, #0]
 8018878:	6859      	ldr	r1, [r3, #4]
 801887a:	c503      	stmia	r5!, {r0, r1}
 801887c:	4668      	mov	r0, sp
 801887e:	f7f7 fab1 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018882:	4631      	mov	r1, r6
 8018884:	a802      	add	r0, sp, #8
 8018886:	f7f7 fad5 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801888a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801888e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8018892:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018896:	4d28      	ldr	r5, [pc, #160]	@ (8018938 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018898:	fb11 2103 	smlabb	r1, r1, r3, r2
 801889c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80188a0:	f8bd 1000 	ldrh.w	r1, [sp]
 80188a4:	6828      	ldr	r0, [r5, #0]
 80188a6:	440a      	add	r2, r1
 80188a8:	f8ad 2008 	strh.w	r2, [sp, #8]
 80188ac:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80188b0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80188b4:	4413      	add	r3, r2
 80188b6:	f8ad 300a 	strh.w	r3, [sp, #10]
 80188ba:	6803      	ldr	r3, [r0, #0]
 80188bc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80188c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80188c2:	4798      	blx	r3
 80188c4:	4e1d      	ldr	r6, [pc, #116]	@ (801893c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80188c6:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80188ca:	8833      	ldrh	r3, [r6, #0]
 80188cc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80188d0:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8018940 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80188d4:	fb03 1202 	mla	r2, r3, r2, r1
 80188d8:	fb08 f303 	mul.w	r3, r8, r3
 80188dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80188e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80188e4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80188e8:	4298      	cmp	r0, r3
 80188ea:	d21d      	bcs.n	8018928 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80188ec:	eb00 080c 	add.w	r8, r0, ip
 80188f0:	4540      	cmp	r0, r8
 80188f2:	d20f      	bcs.n	8018914 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80188f4:	f854 1b04 	ldr.w	r1, [r4], #4
 80188f8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80188fc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018900:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018904:	ea42 0209 	orr.w	r2, r2, r9
 8018908:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801890c:	430a      	orrs	r2, r1
 801890e:	f820 2b02 	strh.w	r2, [r0], #2
 8018912:	e7ed      	b.n	80188f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8018914:	8832      	ldrh	r2, [r6, #0]
 8018916:	1bd2      	subs	r2, r2, r7
 8018918:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801891c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018920:	1bd2      	subs	r2, r2, r7
 8018922:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8018926:	e7df      	b.n	80188e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8018928:	6828      	ldr	r0, [r5, #0]
 801892a:	6803      	ldr	r3, [r0, #0]
 801892c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801892e:	4798      	blx	r3
 8018930:	b005      	add	sp, #20
 8018932:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018936:	bf00      	nop
 8018938:	20002230 	.word	0x20002230
 801893c:	2000222a 	.word	0x2000222a
 8018940:	fffff800 	.word	0xfffff800

08018944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8018944:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018948:	460e      	mov	r6, r1
 801894a:	4604      	mov	r4, r0
 801894c:	461d      	mov	r5, r3
 801894e:	b08e      	sub	sp, #56	@ 0x38
 8018950:	6808      	ldr	r0, [r1, #0]
 8018952:	6849      	ldr	r1, [r1, #4]
 8018954:	ab0a      	add	r3, sp, #40	@ 0x28
 8018956:	c303      	stmia	r3!, {r0, r1}
 8018958:	6810      	ldr	r0, [r2, #0]
 801895a:	6851      	ldr	r1, [r2, #4]
 801895c:	ab0c      	add	r3, sp, #48	@ 0x30
 801895e:	c303      	stmia	r3!, {r0, r1}
 8018960:	a80a      	add	r0, sp, #40	@ 0x28
 8018962:	f7f7 fa3f 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018966:	4631      	mov	r1, r6
 8018968:	a80c      	add	r0, sp, #48	@ 0x30
 801896a:	f7f7 fa63 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801896e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8018972:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8018976:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801897a:	f8df 81b0 	ldr.w	r8, [pc, #432]	@ 8018b2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801897e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018982:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018986:	440c      	add	r4, r1
 8018988:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801898c:	f8d8 0000 	ldr.w	r0, [r8]
 8018990:	440a      	add	r2, r1
 8018992:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8018996:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801899a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801899e:	4413      	add	r3, r2
 80189a0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80189a4:	6803      	ldr	r3, [r0, #0]
 80189a6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80189aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80189ac:	4798      	blx	r3
 80189ae:	2dff      	cmp	r5, #255	@ 0xff
 80189b0:	f8df 917c 	ldr.w	r9, [pc, #380]	@ 8018b30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80189b4:	d124      	bne.n	8018a00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80189b6:	f010 0f01 	tst.w	r0, #1
 80189ba:	f8d8 0000 	ldr.w	r0, [r8]
 80189be:	d022      	beq.n	8018a06 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80189c0:	2100      	movs	r1, #0
 80189c2:	f04f 0e01 	mov.w	lr, #1
 80189c6:	f8d0 c000 	ldr.w	ip, [r0]
 80189ca:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80189ce:	f8cd e018 	str.w	lr, [sp, #24]
 80189d2:	f8b9 e000 	ldrh.w	lr, [r9]
 80189d6:	b2b6      	uxth	r6, r6
 80189d8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80189dc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80189e0:	b2bf      	uxth	r7, r7
 80189e2:	9102      	str	r1, [sp, #8]
 80189e4:	9503      	str	r5, [sp, #12]
 80189e6:	9601      	str	r6, [sp, #4]
 80189e8:	9700      	str	r7, [sp, #0]
 80189ea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80189ee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 80189f2:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 80189f6:	4621      	mov	r1, r4
 80189f8:	47a8      	blx	r5
 80189fa:	b00e      	add	sp, #56	@ 0x38
 80189fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018a00:	f010 0f04 	tst.w	r0, #4
 8018a04:	e7d9      	b.n	80189ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8018a06:	6803      	ldr	r3, [r0, #0]
 8018a08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a0a:	4798      	blx	r3
 8018a0c:	f8b9 3000 	ldrh.w	r3, [r9]
 8018a10:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018a14:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8018a18:	435e      	muls	r6, r3
 8018a1a:	fb03 1202 	mla	r2, r3, r2, r1
 8018a1e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018a22:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018a26:	ebac 0c07 	sub.w	ip, ip, r7
 8018a2a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8018a2e:	2dff      	cmp	r5, #255	@ 0xff
 8018a30:	eba3 0707 	sub.w	r7, r3, r7
 8018a34:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018a38:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018a3c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018a40:	d049      	beq.n	8018ad6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8018a42:	43eb      	mvns	r3, r5
 8018a44:	fa1f f985 	uxth.w	r9, r5
 8018a48:	b2db      	uxtb	r3, r3
 8018a4a:	42b0      	cmp	r0, r6
 8018a4c:	d266      	bcs.n	8018b1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018a4e:	eb00 0a0e 	add.w	sl, r0, lr
 8018a52:	4550      	cmp	r0, sl
 8018a54:	4621      	mov	r1, r4
 8018a56:	f104 0403 	add.w	r4, r4, #3
 8018a5a:	d25b      	bcs.n	8018b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018a5c:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018a60:	8802      	ldrh	r2, [r0, #0]
 8018a62:	fb11 f109 	smulbb	r1, r1, r9
 8018a66:	ea4f 2822 	mov.w	r8, r2, asr #8
 8018a6a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018a6e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8018a72:	fb08 1803 	mla	r8, r8, r3, r1
 8018a76:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8018a7a:	10d5      	asrs	r5, r2, #3
 8018a7c:	fb11 f109 	smulbb	r1, r1, r9
 8018a80:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018a84:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018a88:	fb05 1503 	mla	r5, r5, r3, r1
 8018a8c:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018a90:	00d2      	lsls	r2, r2, #3
 8018a92:	fb11 f109 	smulbb	r1, r1, r9
 8018a96:	b2d2      	uxtb	r2, r2
 8018a98:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018a9c:	fb02 1203 	mla	r2, r2, r3, r1
 8018aa0:	fa1f f888 	uxth.w	r8, r8
 8018aa4:	b292      	uxth	r2, r2
 8018aa6:	f108 0101 	add.w	r1, r8, #1
 8018aaa:	b2ad      	uxth	r5, r5
 8018aac:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8018ab0:	1c51      	adds	r1, r2, #1
 8018ab2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018ab6:	1c69      	adds	r1, r5, #1
 8018ab8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018abc:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8018ac0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018ac4:	096d      	lsrs	r5, r5, #5
 8018ac6:	ea42 0208 	orr.w	r2, r2, r8
 8018aca:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018ace:	432a      	orrs	r2, r5
 8018ad0:	f820 2b02 	strh.w	r2, [r0], #2
 8018ad4:	e7bd      	b.n	8018a52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018ad6:	4a14      	ldr	r2, [pc, #80]	@ (8018b28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018ad8:	42b0      	cmp	r0, r6
 8018ada:	d21f      	bcs.n	8018b1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018adc:	eb00 050e 	add.w	r5, r0, lr
 8018ae0:	42a8      	cmp	r0, r5
 8018ae2:	4621      	mov	r1, r4
 8018ae4:	f104 0403 	add.w	r4, r4, #3
 8018ae8:	d210      	bcs.n	8018b0c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018aea:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018aee:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018af2:	00db      	lsls	r3, r3, #3
 8018af4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018af8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018afc:	430b      	orrs	r3, r1
 8018afe:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018b02:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018b06:	f820 3b02 	strh.w	r3, [r0], #2
 8018b0a:	e7e9      	b.n	8018ae0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018b0c:	4438      	add	r0, r7
 8018b0e:	eb01 040c 	add.w	r4, r1, ip
 8018b12:	e7e1      	b.n	8018ad8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018b14:	4438      	add	r0, r7
 8018b16:	eb01 040c 	add.w	r4, r1, ip
 8018b1a:	e796      	b.n	8018a4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018b1c:	4b03      	ldr	r3, [pc, #12]	@ (8018b2c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8018b1e:	6818      	ldr	r0, [r3, #0]
 8018b20:	6803      	ldr	r3, [r0, #0]
 8018b22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018b24:	4798      	blx	r3
 8018b26:	e768      	b.n	80189fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018b28:	fffff800 	.word	0xfffff800
 8018b2c:	20002230 	.word	0x20002230
 8018b30:	2000222a 	.word	0x2000222a

08018b34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018b34:	b4f0      	push	{r4, r5, r6, r7}
 8018b36:	4616      	mov	r6, r2
 8018b38:	2e01      	cmp	r6, #1
 8018b3a:	461c      	mov	r4, r3
 8018b3c:	460d      	mov	r5, r1
 8018b3e:	9a04      	ldr	r2, [sp, #16]
 8018b40:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018b44:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8018b48:	d012      	beq.n	8018b70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8018b4a:	d303      	bcc.n	8018b54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018b4c:	2e02      	cmp	r6, #2
 8018b4e:	d00a      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018b50:	bcf0      	pop	{r4, r5, r6, r7}
 8018b52:	4770      	bx	lr
 8018b54:	6805      	ldr	r5, [r0, #0]
 8018b56:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8018b5a:	68ed      	ldr	r5, [r5, #12]
 8018b5c:	4613      	mov	r3, r2
 8018b5e:	46ac      	mov	ip, r5
 8018b60:	4622      	mov	r2, r4
 8018b62:	bcf0      	pop	{r4, r5, r6, r7}
 8018b64:	4760      	bx	ip
 8018b66:	4621      	mov	r1, r4
 8018b68:	4628      	mov	r0, r5
 8018b6a:	bcf0      	pop	{r4, r5, r6, r7}
 8018b6c:	f7ff bd94 	b.w	8018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b70:	4621      	mov	r1, r4
 8018b72:	4628      	mov	r0, r5
 8018b74:	bcf0      	pop	{r4, r5, r6, r7}
 8018b76:	f7ff bee5 	b.w	8018944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08018b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8018b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b80:	4616      	mov	r6, r2
 8018b82:	4681      	mov	r9, r0
 8018b84:	b093      	sub	sp, #76	@ 0x4c
 8018b86:	6810      	ldr	r0, [r2, #0]
 8018b88:	4688      	mov	r8, r1
 8018b8a:	6851      	ldr	r1, [r2, #4]
 8018b8c:	ac0e      	add	r4, sp, #56	@ 0x38
 8018b8e:	c403      	stmia	r4!, {r0, r1}
 8018b90:	6818      	ldr	r0, [r3, #0]
 8018b92:	6859      	ldr	r1, [r3, #4]
 8018b94:	ac10      	add	r4, sp, #64	@ 0x40
 8018b96:	c403      	stmia	r4!, {r0, r1}
 8018b98:	a80e      	add	r0, sp, #56	@ 0x38
 8018b9a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8018b9e:	f7f7 f921 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018ba2:	4631      	mov	r1, r6
 8018ba4:	a810      	add	r0, sp, #64	@ 0x40
 8018ba6:	f7f7 f945 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018baa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8018bae:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8018bb2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8018bb6:	4e62      	ldr	r6, [pc, #392]	@ (8018d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018bb8:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018bbc:	4489      	add	r9, r1
 8018bbe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8018bc2:	6830      	ldr	r0, [r6, #0]
 8018bc4:	440a      	add	r2, r1
 8018bc6:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8018bca:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018bce:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8018bd2:	4413      	add	r3, r2
 8018bd4:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8018bd8:	6803      	ldr	r3, [r0, #0]
 8018bda:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8018bde:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018be0:	4798      	blx	r3
 8018be2:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018be6:	4f57      	ldr	r7, [pc, #348]	@ (8018d44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018be8:	6830      	ldr	r0, [r6, #0]
 8018bea:	d01d      	beq.n	8018c28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018bec:	2200      	movs	r2, #0
 8018bee:	6801      	ldr	r1, [r0, #0]
 8018bf0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018bf4:	220b      	movs	r2, #11
 8018bf6:	9207      	str	r2, [sp, #28]
 8018bf8:	883a      	ldrh	r2, [r7, #0]
 8018bfa:	b2a4      	uxth	r4, r4
 8018bfc:	9206      	str	r2, [sp, #24]
 8018bfe:	2201      	movs	r2, #1
 8018c00:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018c04:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8018c08:	b2ad      	uxth	r5, r5
 8018c0a:	9203      	str	r2, [sp, #12]
 8018c0c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8018c10:	9502      	str	r5, [sp, #8]
 8018c12:	9200      	str	r2, [sp, #0]
 8018c14:	9401      	str	r4, [sp, #4]
 8018c16:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8018c18:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8018c1c:	4642      	mov	r2, r8
 8018c1e:	4649      	mov	r1, r9
 8018c20:	47a0      	blx	r4
 8018c22:	b013      	add	sp, #76	@ 0x4c
 8018c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c28:	6803      	ldr	r3, [r0, #0]
 8018c2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c2c:	4798      	blx	r3
 8018c2e:	f04f 0e04 	mov.w	lr, #4
 8018c32:	883b      	ldrh	r3, [r7, #0]
 8018c34:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8018c38:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8018c3c:	435d      	muls	r5, r3
 8018c3e:	fb03 1202 	mla	r2, r3, r2, r1
 8018c42:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018c46:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8018c4a:	920c      	str	r2, [sp, #48]	@ 0x30
 8018c4c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8018c50:	1b12      	subs	r2, r2, r4
 8018c52:	920d      	str	r2, [sp, #52]	@ 0x34
 8018c54:	0062      	lsls	r2, r4, #1
 8018c56:	1b1c      	subs	r4, r3, r4
 8018c58:	0063      	lsls	r3, r4, #1
 8018c5a:	920a      	str	r2, [sp, #40]	@ 0x28
 8018c5c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018c5e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018c60:	4298      	cmp	r0, r3
 8018c62:	d266      	bcs.n	8018d32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018c64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018c66:	eb00 0b03 	add.w	fp, r0, r3
 8018c6a:	4558      	cmp	r0, fp
 8018c6c:	d25c      	bcs.n	8018d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018c6e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018c72:	fb1e e303 	smlabb	r3, lr, r3, lr
 8018c76:	f858 2003 	ldr.w	r2, [r8, r3]
 8018c7a:	0e11      	lsrs	r1, r2, #24
 8018c7c:	d012      	beq.n	8018ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018c7e:	29ff      	cmp	r1, #255	@ 0xff
 8018c80:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8018c84:	d110      	bne.n	8018ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018c86:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018c8a:	d10d      	bne.n	8018ca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8018c8c:	0953      	lsrs	r3, r2, #5
 8018c8e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8018c92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018c96:	f027 0707 	bic.w	r7, r7, #7
 8018c9a:	431f      	orrs	r7, r3
 8018c9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018ca0:	433a      	orrs	r2, r7
 8018ca2:	8002      	strh	r2, [r0, #0]
 8018ca4:	3002      	adds	r0, #2
 8018ca6:	e7e0      	b.n	8018c6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018ca8:	fb0a f101 	mul.w	r1, sl, r1
 8018cac:	1c4b      	adds	r3, r1, #1
 8018cae:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018cb2:	121b      	asrs	r3, r3, #8
 8018cb4:	b299      	uxth	r1, r3
 8018cb6:	43db      	mvns	r3, r3
 8018cb8:	8806      	ldrh	r6, [r0, #0]
 8018cba:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8018cbe:	b2d2      	uxtb	r2, r2
 8018cc0:	fb1c fc01 	smulbb	ip, ip, r1
 8018cc4:	fb12 f201 	smulbb	r2, r2, r1
 8018cc8:	1235      	asrs	r5, r6, #8
 8018cca:	10f4      	asrs	r4, r6, #3
 8018ccc:	00f6      	lsls	r6, r6, #3
 8018cce:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018cd2:	b2f6      	uxtb	r6, r6
 8018cd4:	b2ff      	uxtb	r7, r7
 8018cd6:	b2db      	uxtb	r3, r3
 8018cd8:	fb17 f701 	smulbb	r7, r7, r1
 8018cdc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018ce0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018ce4:	fb05 c503 	mla	r5, r5, r3, ip
 8018ce8:	fb06 2203 	mla	r2, r6, r3, r2
 8018cec:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8018cf0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018cf4:	fb04 7403 	mla	r4, r4, r3, r7
 8018cf8:	b2ad      	uxth	r5, r5
 8018cfa:	b292      	uxth	r2, r2
 8018cfc:	f105 0c01 	add.w	ip, r5, #1
 8018d00:	1c57      	adds	r7, r2, #1
 8018d02:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018d06:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018d0a:	b2a4      	uxth	r4, r4
 8018d0c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018d10:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018d14:	433d      	orrs	r5, r7
 8018d16:	1c67      	adds	r7, r4, #1
 8018d18:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018d1c:	0964      	lsrs	r4, r4, #5
 8018d1e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8018d22:	4325      	orrs	r5, r4
 8018d24:	8005      	strh	r5, [r0, #0]
 8018d26:	e7bd      	b.n	8018ca4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018d28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018d2a:	4418      	add	r0, r3
 8018d2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018d2e:	4499      	add	r9, r3
 8018d30:	e795      	b.n	8018c5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018d32:	4b03      	ldr	r3, [pc, #12]	@ (8018d40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8018d34:	6818      	ldr	r0, [r3, #0]
 8018d36:	6803      	ldr	r3, [r0, #0]
 8018d38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018d3a:	4798      	blx	r3
 8018d3c:	e771      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018d3e:	bf00      	nop
 8018d40:	20002230 	.word	0x20002230
 8018d44:	2000222a 	.word	0x2000222a

08018d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d4c:	b087      	sub	sp, #28
 8018d4e:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8018d52:	4680      	mov	r8, r0
 8018d54:	460d      	mov	r5, r1
 8018d56:	4614      	mov	r4, r2
 8018d58:	2e00      	cmp	r6, #0
 8018d5a:	f000 80b9 	beq.w	8018ed0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018d5e:	6810      	ldr	r0, [r2, #0]
 8018d60:	6851      	ldr	r1, [r2, #4]
 8018d62:	af02      	add	r7, sp, #8
 8018d64:	c703      	stmia	r7!, {r0, r1}
 8018d66:	6818      	ldr	r0, [r3, #0]
 8018d68:	6859      	ldr	r1, [r3, #4]
 8018d6a:	af04      	add	r7, sp, #16
 8018d6c:	c703      	stmia	r7!, {r0, r1}
 8018d6e:	a802      	add	r0, sp, #8
 8018d70:	f7f7 f838 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018d74:	4621      	mov	r1, r4
 8018d76:	a804      	add	r0, sp, #16
 8018d78:	f7f7 f85c 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018d7c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018d80:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018d84:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018d88:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018d8c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018d90:	eb08 0401 	add.w	r4, r8, r1
 8018d94:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018d98:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018d9c:	440a      	add	r2, r1
 8018d9e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018da2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018da6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018daa:	4413      	add	r3, r2
 8018dac:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018db0:	4b49      	ldr	r3, [pc, #292]	@ (8018ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018db2:	6818      	ldr	r0, [r3, #0]
 8018db4:	6803      	ldr	r3, [r0, #0]
 8018db6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018db8:	4798      	blx	r3
 8018dba:	4b48      	ldr	r3, [pc, #288]	@ (8018edc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018dbc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018dc0:	881a      	ldrh	r2, [r3, #0]
 8018dc2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018dc6:	2eff      	cmp	r6, #255	@ 0xff
 8018dc8:	fb02 c101 	mla	r1, r2, r1, ip
 8018dcc:	fb02 f207 	mul.w	r2, r2, r7
 8018dd0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018dd4:	f105 0104 	add.w	r1, r5, #4
 8018dd8:	461d      	mov	r5, r3
 8018dda:	d05a      	beq.n	8018e92 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018ddc:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8018de0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018de4:	b2b6      	uxth	r6, r6
 8018de6:	fa1f fe8e 	uxth.w	lr, lr
 8018dea:	9301      	str	r3, [sp, #4]
 8018dec:	4282      	cmp	r2, r0
 8018dee:	d96a      	bls.n	8018ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018df0:	eb00 0b0a 	add.w	fp, r0, sl
 8018df4:	4583      	cmp	fp, r0
 8018df6:	d940      	bls.n	8018e7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018df8:	8805      	ldrh	r5, [r0, #0]
 8018dfa:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018dfe:	122f      	asrs	r7, r5, #8
 8018e00:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018e04:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018e08:	fb17 f70e 	smulbb	r7, r7, lr
 8018e0c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018e10:	00ed      	lsls	r5, r5, #3
 8018e12:	b2ed      	uxtb	r5, r5
 8018e14:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018e18:	fb15 f50e 	smulbb	r5, r5, lr
 8018e1c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018e20:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018e24:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018e28:	10df      	asrs	r7, r3, #3
 8018e2a:	00db      	lsls	r3, r3, #3
 8018e2c:	fb19 f90e 	smulbb	r9, r9, lr
 8018e30:	b2db      	uxtb	r3, r3
 8018e32:	fb03 5306 	mla	r3, r3, r6, r5
 8018e36:	fa1f fc8c 	uxth.w	ip, ip
 8018e3a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018e3e:	fb07 9706 	mla	r7, r7, r6, r9
 8018e42:	f10c 0901 	add.w	r9, ip, #1
 8018e46:	b29b      	uxth	r3, r3
 8018e48:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018e4c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018e50:	f103 0c01 	add.w	ip, r3, #1
 8018e54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018e58:	b2bf      	uxth	r7, r7
 8018e5a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018e5e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018e62:	f107 0901 	add.w	r9, r7, #1
 8018e66:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018e6a:	097f      	lsrs	r7, r7, #5
 8018e6c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018e70:	ea4c 0c07 	orr.w	ip, ip, r7
 8018e74:	f820 cb02 	strh.w	ip, [r0], #2
 8018e78:	e7bc      	b.n	8018df4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018e7a:	9b01      	ldr	r3, [sp, #4]
 8018e7c:	881b      	ldrh	r3, [r3, #0]
 8018e7e:	eba3 0308 	sub.w	r3, r3, r8
 8018e82:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e86:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018e8a:	eba3 0308 	sub.w	r3, r3, r8
 8018e8e:	441c      	add	r4, r3
 8018e90:	e7ac      	b.n	8018dec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018e92:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018e96:	4282      	cmp	r2, r0
 8018e98:	d915      	bls.n	8018ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018e9a:	eb00 060a 	add.w	r6, r0, sl
 8018e9e:	4286      	cmp	r6, r0
 8018ea0:	d906      	bls.n	8018eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018ea2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018ea6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018eaa:	f820 3b02 	strh.w	r3, [r0], #2
 8018eae:	e7f6      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018eb0:	882b      	ldrh	r3, [r5, #0]
 8018eb2:	eba3 0308 	sub.w	r3, r3, r8
 8018eb6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018eba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018ebe:	eba3 0308 	sub.w	r3, r3, r8
 8018ec2:	441c      	add	r4, r3
 8018ec4:	e7e7      	b.n	8018e96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018ec6:	4b04      	ldr	r3, [pc, #16]	@ (8018ed8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018ec8:	6818      	ldr	r0, [r3, #0]
 8018eca:	6803      	ldr	r3, [r0, #0]
 8018ecc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018ece:	4798      	blx	r3
 8018ed0:	b007      	add	sp, #28
 8018ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ed6:	bf00      	nop
 8018ed8:	20002230 	.word	0x20002230
 8018edc:	2000222a 	.word	0x2000222a

08018ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ee4:	b091      	sub	sp, #68	@ 0x44
 8018ee6:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8018eea:	4680      	mov	r8, r0
 8018eec:	460f      	mov	r7, r1
 8018eee:	4614      	mov	r4, r2
 8018ef0:	2d00      	cmp	r5, #0
 8018ef2:	d051      	beq.n	8018f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018ef4:	6810      	ldr	r0, [r2, #0]
 8018ef6:	6851      	ldr	r1, [r2, #4]
 8018ef8:	ae0c      	add	r6, sp, #48	@ 0x30
 8018efa:	c603      	stmia	r6!, {r0, r1}
 8018efc:	6818      	ldr	r0, [r3, #0]
 8018efe:	6859      	ldr	r1, [r3, #4]
 8018f00:	ae0e      	add	r6, sp, #56	@ 0x38
 8018f02:	c603      	stmia	r6!, {r0, r1}
 8018f04:	a80c      	add	r0, sp, #48	@ 0x30
 8018f06:	f7f6 ff6d 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f0a:	4621      	mov	r1, r4
 8018f0c:	a80e      	add	r0, sp, #56	@ 0x38
 8018f0e:	f7f6 ff91 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f12:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8018f16:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018f1a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8018f1e:	f8df 91dc 	ldr.w	r9, [pc, #476]	@ 80190fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018f22:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018f26:	eb08 0401 	add.w	r4, r8, r1
 8018f2a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018f2e:	f8d9 0000 	ldr.w	r0, [r9]
 8018f32:	440a      	add	r2, r1
 8018f34:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 8018f38:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018f3c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8018f40:	4413      	add	r3, r2
 8018f42:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018f46:	6803      	ldr	r3, [r0, #0]
 8018f48:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 8018f4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8018f4e:	4798      	blx	r3
 8018f50:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018f54:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8019100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018f58:	f8d9 0000 	ldr.w	r0, [r9]
 8018f5c:	d01f      	beq.n	8018f9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018f5e:	2200      	movs	r2, #0
 8018f60:	6801      	ldr	r1, [r0, #0]
 8018f62:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018f66:	220b      	movs	r2, #11
 8018f68:	9207      	str	r2, [sp, #28]
 8018f6a:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f6e:	b2b6      	uxth	r6, r6
 8018f70:	9206      	str	r2, [sp, #24]
 8018f72:	2201      	movs	r2, #1
 8018f74:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018f78:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 8018f7c:	9601      	str	r6, [sp, #4]
 8018f7e:	9203      	str	r2, [sp, #12]
 8018f80:	fa1f f28a 	uxth.w	r2, sl
 8018f84:	9202      	str	r2, [sp, #8]
 8018f86:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018f8a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018f8e:	9200      	str	r2, [sp, #0]
 8018f90:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 8018f92:	463a      	mov	r2, r7
 8018f94:	4621      	mov	r1, r4
 8018f96:	47a8      	blx	r5
 8018f98:	b011      	add	sp, #68	@ 0x44
 8018f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f9e:	6803      	ldr	r3, [r0, #0]
 8018fa0:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018fa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018fa6:	4798      	blx	r3
 8018fa8:	f8b8 2000 	ldrh.w	r2, [r8]
 8018fac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018fb0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8018fb4:	2dff      	cmp	r5, #255	@ 0xff
 8018fb6:	fb02 1303 	mla	r3, r2, r3, r1
 8018fba:	fb0a fa02 	mul.w	sl, sl, r2
 8018fbe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018fc2:	d062      	beq.n	801908a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018fc4:	ea6f 0c05 	mvn.w	ip, r5
 8018fc8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018fcc:	930a      	str	r3, [sp, #40]	@ 0x28
 8018fce:	b2ad      	uxth	r5, r5
 8018fd0:	fa5f fc8c 	uxtb.w	ip, ip
 8018fd4:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8018fd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018fda:	4298      	cmp	r0, r3
 8018fdc:	f080 8085 	bcs.w	80190ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018fe0:	eb00 0b09 	add.w	fp, r0, r9
 8018fe4:	4558      	cmp	r0, fp
 8018fe6:	d246      	bcs.n	8019076 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018fe8:	2303      	movs	r3, #3
 8018fea:	2204      	movs	r2, #4
 8018fec:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018ff0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018ff4:	eb07 0a0e 	add.w	sl, r7, lr
 8018ff8:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018ffc:	8803      	ldrh	r3, [r0, #0]
 8018ffe:	fb18 f805 	smulbb	r8, r8, r5
 8019002:	1219      	asrs	r1, r3, #8
 8019004:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019008:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801900c:	fb01 810c 	mla	r1, r1, ip, r8
 8019010:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019014:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019018:	fb1e fe05 	smulbb	lr, lr, r5
 801901c:	fb18 f805 	smulbb	r8, r8, r5
 8019020:	10da      	asrs	r2, r3, #3
 8019022:	00db      	lsls	r3, r3, #3
 8019024:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8019028:	b2db      	uxtb	r3, r3
 801902a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801902e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8019032:	fb02 820c 	mla	r2, r2, ip, r8
 8019036:	fb03 e30c 	mla	r3, r3, ip, lr
 801903a:	b289      	uxth	r1, r1
 801903c:	b292      	uxth	r2, r2
 801903e:	b29b      	uxth	r3, r3
 8019040:	f101 0801 	add.w	r8, r1, #1
 8019044:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8019048:	f103 0e01 	add.w	lr, r3, #1
 801904c:	f102 0801 	add.w	r8, r2, #1
 8019050:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019054:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019058:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801905c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019060:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019064:	ea4e 0101 	orr.w	r1, lr, r1
 8019068:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801906c:	ea41 0108 	orr.w	r1, r1, r8
 8019070:	f820 1b02 	strh.w	r1, [r0], #2
 8019074:	e7b6      	b.n	8018fe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8019076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019078:	881b      	ldrh	r3, [r3, #0]
 801907a:	1b9b      	subs	r3, r3, r6
 801907c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019080:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8019084:	1b9b      	subs	r3, r3, r6
 8019086:	441c      	add	r4, r3
 8019088:	e7a6      	b.n	8018fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801908a:	2203      	movs	r2, #3
 801908c:	2504      	movs	r5, #4
 801908e:	491a      	ldr	r1, [pc, #104]	@ (80190f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8019090:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8019094:	4550      	cmp	r0, sl
 8019096:	d228      	bcs.n	80190ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8019098:	eb00 0c09 	add.w	ip, r0, r9
 801909c:	4560      	cmp	r0, ip
 801909e:	4623      	mov	r3, r4
 80190a0:	d219      	bcs.n	80190d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80190a2:	f893 e000 	ldrb.w	lr, [r3]
 80190a6:	3401      	adds	r4, #1
 80190a8:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80190ac:	eb07 0b0e 	add.w	fp, r7, lr
 80190b0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80190b4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80190b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80190bc:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80190c0:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80190c4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80190c8:	ea43 030b 	orr.w	r3, r3, fp
 80190cc:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80190d0:	f820 3b02 	strh.w	r3, [r0], #2
 80190d4:	e7e2      	b.n	801909c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80190d6:	f8b8 3000 	ldrh.w	r3, [r8]
 80190da:	1b9b      	subs	r3, r3, r6
 80190dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80190e0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80190e4:	1b9b      	subs	r3, r3, r6
 80190e6:	441c      	add	r4, r3
 80190e8:	e7d4      	b.n	8019094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80190ea:	4b04      	ldr	r3, [pc, #16]	@ (80190fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80190ec:	6818      	ldr	r0, [r3, #0]
 80190ee:	6803      	ldr	r3, [r0, #0]
 80190f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80190f2:	4798      	blx	r3
 80190f4:	e750      	b.n	8018f98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80190f6:	bf00      	nop
 80190f8:	fffff800 	.word	0xfffff800
 80190fc:	20002230 	.word	0x20002230
 8019100:	2000222a 	.word	0x2000222a

08019104 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8019104:	b4f0      	push	{r4, r5, r6, r7}
 8019106:	460c      	mov	r4, r1
 8019108:	4611      	mov	r1, r2
 801910a:	780f      	ldrb	r7, [r1, #0]
 801910c:	461a      	mov	r2, r3
 801910e:	2f01      	cmp	r7, #1
 8019110:	9b04      	ldr	r3, [sp, #16]
 8019112:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8019116:	784e      	ldrb	r6, [r1, #1]
 8019118:	d038      	beq.n	801918c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801911a:	d31f      	bcc.n	801915c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801911c:	2f02      	cmp	r7, #2
 801911e:	d14d      	bne.n	80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019120:	2e03      	cmp	r6, #3
 8019122:	d84b      	bhi.n	80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019124:	e8df f006 	tbb	[pc, r6]
 8019128:	17140702 	.word	0x17140702
 801912c:	9504      	str	r5, [sp, #16]
 801912e:	4620      	mov	r0, r4
 8019130:	bcf0      	pop	{r4, r5, r6, r7}
 8019132:	f7ff be09 	b.w	8018d48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8019136:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019138:	2800      	cmp	r0, #0
 801913a:	d03f      	beq.n	80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801913c:	6806      	ldr	r6, [r0, #0]
 801913e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8019142:	68b5      	ldr	r5, [r6, #8]
 8019144:	4613      	mov	r3, r2
 8019146:	46ac      	mov	ip, r5
 8019148:	460a      	mov	r2, r1
 801914a:	4621      	mov	r1, r4
 801914c:	bcf0      	pop	{r4, r5, r6, r7}
 801914e:	4760      	bx	ip
 8019150:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019154:	e7f0      	b.n	8019138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019156:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801915a:	e7ed      	b.n	8019138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801915c:	2e03      	cmp	r6, #3
 801915e:	d82d      	bhi.n	80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019160:	e8df f006 	tbb	[pc, r6]
 8019164:	110e0702 	.word	0x110e0702
 8019168:	9504      	str	r5, [sp, #16]
 801916a:	4620      	mov	r0, r4
 801916c:	bcf0      	pop	{r4, r5, r6, r7}
 801916e:	f7ff bd05 	b.w	8018b7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8019172:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019174:	b310      	cbz	r0, 80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019176:	6806      	ldr	r6, [r0, #0]
 8019178:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801917c:	68f5      	ldr	r5, [r6, #12]
 801917e:	e7e1      	b.n	8019144 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019180:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019184:	e7f6      	b.n	8019174 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8019186:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801918a:	e7f3      	b.n	8019174 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801918c:	2e03      	cmp	r6, #3
 801918e:	d815      	bhi.n	80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019190:	e8df f006 	tbb	[pc, r6]
 8019194:	110e0702 	.word	0x110e0702
 8019198:	9504      	str	r5, [sp, #16]
 801919a:	4620      	mov	r0, r4
 801919c:	bcf0      	pop	{r4, r5, r6, r7}
 801919e:	f7ff be9f 	b.w	8018ee0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80191a2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80191a4:	b150      	cbz	r0, 80191bc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80191a6:	6806      	ldr	r6, [r0, #0]
 80191a8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80191ac:	6935      	ldr	r5, [r6, #16]
 80191ae:	e7c9      	b.n	8019144 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80191b0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80191b4:	e7f6      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80191b6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80191ba:	e7f3      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80191bc:	bcf0      	pop	{r4, r5, r6, r7}
 80191be:	4770      	bx	lr

080191c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80191c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191c4:	4617      	mov	r7, r2
 80191c6:	4604      	mov	r4, r0
 80191c8:	460e      	mov	r6, r1
 80191ca:	b087      	sub	sp, #28
 80191cc:	6810      	ldr	r0, [r2, #0]
 80191ce:	6851      	ldr	r1, [r2, #4]
 80191d0:	ad02      	add	r5, sp, #8
 80191d2:	c503      	stmia	r5!, {r0, r1}
 80191d4:	6818      	ldr	r0, [r3, #0]
 80191d6:	6859      	ldr	r1, [r3, #4]
 80191d8:	ad04      	add	r5, sp, #16
 80191da:	c503      	stmia	r5!, {r0, r1}
 80191dc:	a802      	add	r0, sp, #8
 80191de:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80191e2:	f7f6 fdff 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80191e6:	4639      	mov	r1, r7
 80191e8:	a804      	add	r0, sp, #16
 80191ea:	f7f6 fe23 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80191ee:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80191f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80191f6:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80191fa:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80191fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019202:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8019206:	440e      	add	r6, r1
 8019208:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801920c:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8019210:	440a      	add	r2, r1
 8019212:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019216:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801921a:	f8df 91ec 	ldr.w	r9, [pc, #492]	@ 8019408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801921e:	4413      	add	r3, r2
 8019220:	f8ad 3012 	strh.w	r3, [sp, #18]
 8019224:	4b77      	ldr	r3, [pc, #476]	@ (8019404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019226:	6818      	ldr	r0, [r3, #0]
 8019228:	6803      	ldr	r3, [r0, #0]
 801922a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801922c:	4798      	blx	r3
 801922e:	f8b9 b000 	ldrh.w	fp, [r9]
 8019232:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019236:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801923a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801923e:	fb0b 2303 	mla	r3, fp, r3, r2
 8019242:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019246:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801924a:	fb05 f50b 	mul.w	r5, r5, fp
 801924e:	9300      	str	r3, [sp, #0]
 8019250:	d069      	beq.n	8019326 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8019252:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8019256:	4558      	cmp	r0, fp
 8019258:	f080 80cc 	bcs.w	80193f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801925c:	4631      	mov	r1, r6
 801925e:	9b00      	ldr	r3, [sp, #0]
 8019260:	18c3      	adds	r3, r0, r3
 8019262:	9301      	str	r3, [sp, #4]
 8019264:	9b01      	ldr	r3, [sp, #4]
 8019266:	4298      	cmp	r0, r3
 8019268:	d24f      	bcs.n	801930a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801926a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801926e:	2a00      	cmp	r2, #0
 8019270:	d048      	beq.n	8019304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019272:	fb0a f202 	mul.w	r2, sl, r2
 8019276:	1c53      	adds	r3, r2, #1
 8019278:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801927c:	121b      	asrs	r3, r3, #8
 801927e:	d041      	beq.n	8019304 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019280:	b29e      	uxth	r6, r3
 8019282:	43db      	mvns	r3, r3
 8019284:	8802      	ldrh	r2, [r0, #0]
 8019286:	b2db      	uxtb	r3, r3
 8019288:	1215      	asrs	r5, r2, #8
 801928a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801928e:	f8b4 c000 	ldrh.w	ip, [r4]
 8019292:	fb15 f503 	smulbb	r5, r5, r3
 8019296:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801929a:	00d2      	lsls	r2, r2, #3
 801929c:	b2d2      	uxtb	r2, r2
 801929e:	ea4f 272c 	mov.w	r7, ip, asr #8
 80192a2:	fb12 f203 	smulbb	r2, r2, r3
 80192a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80192aa:	fb07 5706 	mla	r7, r7, r6, r5
 80192ae:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80192b2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80192b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80192ba:	fb1e fe03 	smulbb	lr, lr, r3
 80192be:	fa5f fc8c 	uxtb.w	ip, ip
 80192c2:	fb0c 2c06 	mla	ip, ip, r6, r2
 80192c6:	b2bf      	uxth	r7, r7
 80192c8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80192cc:	fb05 e506 	mla	r5, r5, r6, lr
 80192d0:	f107 0e01 	add.w	lr, r7, #1
 80192d4:	fa1f fc8c 	uxth.w	ip, ip
 80192d8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80192dc:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80192e0:	f10c 0701 	add.w	r7, ip, #1
 80192e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80192e8:	b2ad      	uxth	r5, r5
 80192ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80192ee:	ea47 070e 	orr.w	r7, r7, lr
 80192f2:	f105 0e01 	add.w	lr, r5, #1
 80192f6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80192fa:	096d      	lsrs	r5, r5, #5
 80192fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019300:	432f      	orrs	r7, r5
 8019302:	8007      	strh	r7, [r0, #0]
 8019304:	3002      	adds	r0, #2
 8019306:	3402      	adds	r4, #2
 8019308:	e7ac      	b.n	8019264 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801930a:	f8b9 3000 	ldrh.w	r3, [r9]
 801930e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019312:	eba3 0308 	sub.w	r3, r3, r8
 8019316:	eba6 0608 	sub.w	r6, r6, r8
 801931a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801931e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019322:	440e      	add	r6, r1
 8019324:	e797      	b.n	8019256 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8019326:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801932a:	42a8      	cmp	r0, r5
 801932c:	d262      	bcs.n	80193f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801932e:	4631      	mov	r1, r6
 8019330:	9b00      	ldr	r3, [sp, #0]
 8019332:	eb00 0b03 	add.w	fp, r0, r3
 8019336:	4558      	cmp	r0, fp
 8019338:	d24e      	bcs.n	80193d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801933a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801933e:	b12b      	cbz	r3, 801934c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019340:	2bff      	cmp	r3, #255	@ 0xff
 8019342:	f8b4 e000 	ldrh.w	lr, [r4]
 8019346:	d104      	bne.n	8019352 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019348:	f8a0 e000 	strh.w	lr, [r0]
 801934c:	3002      	adds	r0, #2
 801934e:	3402      	adds	r4, #2
 8019350:	e7f1      	b.n	8019336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8019352:	b29f      	uxth	r7, r3
 8019354:	43db      	mvns	r3, r3
 8019356:	8802      	ldrh	r2, [r0, #0]
 8019358:	b2db      	uxtb	r3, r3
 801935a:	1216      	asrs	r6, r2, #8
 801935c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019360:	fb16 f603 	smulbb	r6, r6, r3
 8019364:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8019368:	00d2      	lsls	r2, r2, #3
 801936a:	b2d2      	uxtb	r2, r2
 801936c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019370:	fb1a fa03 	smulbb	sl, sl, r3
 8019374:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019378:	fb12 f303 	smulbb	r3, r2, r3
 801937c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019380:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019384:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019388:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801938c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019390:	fa5f fe8e 	uxtb.w	lr, lr
 8019394:	fb06 a607 	mla	r6, r6, r7, sl
 8019398:	fb0e 3307 	mla	r3, lr, r7, r3
 801939c:	fa1f fc8c 	uxth.w	ip, ip
 80193a0:	f10c 0201 	add.w	r2, ip, #1
 80193a4:	b2b6      	uxth	r6, r6
 80193a6:	b29b      	uxth	r3, r3
 80193a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80193ac:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80193b0:	f106 0a01 	add.w	sl, r6, #1
 80193b4:	f103 0c01 	add.w	ip, r3, #1
 80193b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80193bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80193c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80193c4:	0976      	lsrs	r6, r6, #5
 80193c6:	ea4c 0c02 	orr.w	ip, ip, r2
 80193ca:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80193ce:	ea4c 0c06 	orr.w	ip, ip, r6
 80193d2:	f8a0 c000 	strh.w	ip, [r0]
 80193d6:	e7b9      	b.n	801934c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80193d8:	f8b9 3000 	ldrh.w	r3, [r9]
 80193dc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80193e0:	eba3 0308 	sub.w	r3, r3, r8
 80193e4:	eba6 0608 	sub.w	r6, r6, r8
 80193e8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80193ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80193f0:	440e      	add	r6, r1
 80193f2:	e79a      	b.n	801932a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80193f4:	4b03      	ldr	r3, [pc, #12]	@ (8019404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80193f6:	6818      	ldr	r0, [r3, #0]
 80193f8:	6803      	ldr	r3, [r0, #0]
 80193fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80193fc:	4798      	blx	r3
 80193fe:	b007      	add	sp, #28
 8019400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019404:	20002230 	.word	0x20002230
 8019408:	2000222a 	.word	0x2000222a

0801940c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801940c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019410:	b089      	sub	sp, #36	@ 0x24
 8019412:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8019416:	4607      	mov	r7, r0
 8019418:	4688      	mov	r8, r1
 801941a:	4692      	mov	sl, r2
 801941c:	4699      	mov	r9, r3
 801941e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019420:	2e00      	cmp	r6, #0
 8019422:	d048      	beq.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019424:	4608      	mov	r0, r1
 8019426:	f7fa f823 	bl	8013470 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801942a:	4605      	mov	r5, r0
 801942c:	4640      	mov	r0, r8
 801942e:	f7fa f853 	bl	80134d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019432:	f8ad 000e 	strh.w	r0, [sp, #14]
 8019436:	4640      	mov	r0, r8
 8019438:	f8ad a008 	strh.w	sl, [sp, #8]
 801943c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019440:	f8ad 900a 	strh.w	r9, [sp, #10]
 8019444:	f7fa f906 	bl	8013654 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019448:	4605      	mov	r5, r0
 801944a:	4640      	mov	r0, r8
 801944c:	f7fa f932 	bl	80136b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019450:	4682      	mov	sl, r0
 8019452:	4640      	mov	r0, r8
 8019454:	f7fa f982 	bl	801375c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019458:	2810      	cmp	r0, #16
 801945a:	d82c      	bhi.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801945c:	e8df f010 	tbh	[pc, r0, lsl #1]
 8019460:	00ba00ca 	.word	0x00ba00ca
 8019464:	002b0011 	.word	0x002b0011
 8019468:	002b002b 	.word	0x002b002b
 801946c:	002b002b 	.word	0x002b002b
 8019470:	002b002b 	.word	0x002b002b
 8019474:	00c1002b 	.word	0x00c1002b
 8019478:	002b002b 	.word	0x002b002b
 801947c:	002b0180 	.word	0x002b0180
 8019480:	0173      	.short	0x0173
 8019482:	4bbc      	ldr	r3, [pc, #752]	@ (8019774 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8019484:	6818      	ldr	r0, [r3, #0]
 8019486:	6803      	ldr	r3, [r0, #0]
 8019488:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801948a:	4798      	blx	r3
 801948c:	2eff      	cmp	r6, #255	@ 0xff
 801948e:	d101      	bne.n	8019494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019490:	0683      	lsls	r3, r0, #26
 8019492:	d506      	bpl.n	80194a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8019494:	4633      	mov	r3, r6
 8019496:	4622      	mov	r2, r4
 8019498:	a902      	add	r1, sp, #8
 801949a:	4628      	mov	r0, r5
 801949c:	f7ff f8fc 	bl	8018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80194a0:	e009      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80194a2:	4640      	mov	r0, r8
 80194a4:	f7fa f89e 	bl	80135e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80194a8:	b940      	cbnz	r0, 80194bc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80194aa:	4623      	mov	r3, r4
 80194ac:	aa02      	add	r2, sp, #8
 80194ae:	4629      	mov	r1, r5
 80194b0:	4638      	mov	r0, r7
 80194b2:	f7ff f9d7 	bl	8018864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80194b6:	b009      	add	sp, #36	@ 0x24
 80194b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194bc:	f10d 0918 	add.w	r9, sp, #24
 80194c0:	4641      	mov	r1, r8
 80194c2:	4648      	mov	r0, r9
 80194c4:	f10d 0810 	add.w	r8, sp, #16
 80194c8:	f7fa f83a 	bl	8013540 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80194cc:	e899 0003 	ldmia.w	r9, {r0, r1}
 80194d0:	e888 0003 	stmia.w	r8, {r0, r1}
 80194d4:	4640      	mov	r0, r8
 80194d6:	4621      	mov	r1, r4
 80194d8:	f7f3 fcce 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 80194dc:	4640      	mov	r0, r8
 80194de:	f7f3 fd0e 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 80194e2:	2800      	cmp	r0, #0
 80194e4:	d1d6      	bne.n	8019494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80194e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80194ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80194ee:	4293      	cmp	r3, r2
 80194f0:	dd12      	ble.n	8019518 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80194f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80194f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80194fa:	1a9b      	subs	r3, r3, r2
 80194fc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019500:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019504:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019508:	f8ad 301e 	strh.w	r3, [sp, #30]
 801950c:	464a      	mov	r2, r9
 801950e:	4633      	mov	r3, r6
 8019510:	a902      	add	r1, sp, #8
 8019512:	4628      	mov	r0, r5
 8019514:	f7ff f8c0 	bl	8018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019518:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801951c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019520:	4293      	cmp	r3, r2
 8019522:	dd12      	ble.n	801954a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8019524:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019528:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801952c:	1a9b      	subs	r3, r3, r2
 801952e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019532:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019536:	f8ad 301c 	strh.w	r3, [sp, #28]
 801953a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801953e:	23ff      	movs	r3, #255	@ 0xff
 8019540:	464a      	mov	r2, r9
 8019542:	a902      	add	r1, sp, #8
 8019544:	4628      	mov	r0, r5
 8019546:	f7ff f8a7 	bl	8018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801954a:	4643      	mov	r3, r8
 801954c:	aa02      	add	r2, sp, #8
 801954e:	4629      	mov	r1, r5
 8019550:	4638      	mov	r0, r7
 8019552:	f7ff f987 	bl	8018864 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019556:	88a2      	ldrh	r2, [r4, #4]
 8019558:	8823      	ldrh	r3, [r4, #0]
 801955a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801955e:	4413      	add	r3, r2
 8019560:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019564:	b29b      	uxth	r3, r3
 8019566:	440a      	add	r2, r1
 8019568:	b292      	uxth	r2, r2
 801956a:	b211      	sxth	r1, r2
 801956c:	b218      	sxth	r0, r3
 801956e:	4288      	cmp	r0, r1
 8019570:	dd12      	ble.n	8019598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8019572:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019576:	1a9b      	subs	r3, r3, r2
 8019578:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801957c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019580:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019584:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019588:	23ff      	movs	r3, #255	@ 0xff
 801958a:	464a      	mov	r2, r9
 801958c:	a902      	add	r1, sp, #8
 801958e:	4628      	mov	r0, r5
 8019590:	f8ad 601a 	strh.w	r6, [sp, #26]
 8019594:	f7ff f880 	bl	8018698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019598:	88e2      	ldrh	r2, [r4, #6]
 801959a:	8863      	ldrh	r3, [r4, #2]
 801959c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80195a0:	4413      	add	r3, r2
 80195a2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80195a6:	b29b      	uxth	r3, r3
 80195a8:	440a      	add	r2, r1
 80195aa:	b292      	uxth	r2, r2
 80195ac:	b211      	sxth	r1, r2
 80195ae:	b218      	sxth	r0, r3
 80195b0:	4288      	cmp	r0, r1
 80195b2:	dd80      	ble.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80195b4:	f9b4 6000 	ldrsh.w	r6, [r4]
 80195b8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80195bc:	1a9b      	subs	r3, r3, r2
 80195be:	f8ad 301e 	strh.w	r3, [sp, #30]
 80195c2:	f8ad 6018 	strh.w	r6, [sp, #24]
 80195c6:	f8ad 101a 	strh.w	r1, [sp, #26]
 80195ca:	f8ad 001c 	strh.w	r0, [sp, #28]
 80195ce:	23ff      	movs	r3, #255	@ 0xff
 80195d0:	464a      	mov	r2, r9
 80195d2:	e761      	b.n	8019498 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80195d4:	4633      	mov	r3, r6
 80195d6:	4622      	mov	r2, r4
 80195d8:	a902      	add	r1, sp, #8
 80195da:	4628      	mov	r0, r5
 80195dc:	f7ff f9b2 	bl	8018944 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80195e0:	e769      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80195e2:	e9cd 4600 	strd	r4, r6, [sp]
 80195e6:	ab02      	add	r3, sp, #8
 80195e8:	4652      	mov	r2, sl
 80195ea:	4629      	mov	r1, r5
 80195ec:	4638      	mov	r0, r7
 80195ee:	f7ff fd89 	bl	8019104 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80195f2:	e760      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80195f4:	4640      	mov	r0, r8
 80195f6:	f7f9 fff5 	bl	80135e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80195fa:	b948      	cbnz	r0, 8019610 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 80195fc:	683b      	ldr	r3, [r7, #0]
 80195fe:	e9cd 6000 	strd	r6, r0, [sp]
 8019602:	aa02      	add	r2, sp, #8
 8019604:	68de      	ldr	r6, [r3, #12]
 8019606:	4629      	mov	r1, r5
 8019608:	4623      	mov	r3, r4
 801960a:	4638      	mov	r0, r7
 801960c:	47b0      	blx	r6
 801960e:	e752      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019610:	f10d 0918 	add.w	r9, sp, #24
 8019614:	4641      	mov	r1, r8
 8019616:	4648      	mov	r0, r9
 8019618:	f10d 0810 	add.w	r8, sp, #16
 801961c:	f7f9 ff90 	bl	8013540 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019620:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019624:	e888 0003 	stmia.w	r8, {r0, r1}
 8019628:	4640      	mov	r0, r8
 801962a:	4621      	mov	r1, r4
 801962c:	f7f3 fc24 	bl	800ce78 <_ZN8touchgfx4RectaNERKS0_>
 8019630:	4640      	mov	r0, r8
 8019632:	f7f3 fc64 	bl	800cefe <_ZNK8touchgfx4Rect7isEmptyEv>
 8019636:	b138      	cbz	r0, 8019648 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8019638:	4623      	mov	r3, r4
 801963a:	9600      	str	r6, [sp, #0]
 801963c:	aa02      	add	r2, sp, #8
 801963e:	4651      	mov	r1, sl
 8019640:	4628      	mov	r0, r5
 8019642:	f7ff fdbd 	bl	80191c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019646:	e736      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019648:	683b      	ldr	r3, [r7, #0]
 801964a:	e9cd 6000 	strd	r6, r0, [sp]
 801964e:	aa02      	add	r2, sp, #8
 8019650:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8019654:	4629      	mov	r1, r5
 8019656:	4643      	mov	r3, r8
 8019658:	4638      	mov	r0, r7
 801965a:	47d8      	blx	fp
 801965c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019660:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019664:	4293      	cmp	r3, r2
 8019666:	dd13      	ble.n	8019690 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8019668:	f9b4 0000 	ldrsh.w	r0, [r4]
 801966c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019670:	1a9b      	subs	r3, r3, r2
 8019672:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019676:	f8ad 201a 	strh.w	r2, [sp, #26]
 801967a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801967e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019682:	9600      	str	r6, [sp, #0]
 8019684:	464b      	mov	r3, r9
 8019686:	aa02      	add	r2, sp, #8
 8019688:	4651      	mov	r1, sl
 801968a:	4628      	mov	r0, r5
 801968c:	f7ff fd98 	bl	80191c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019690:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019694:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019698:	4293      	cmp	r3, r2
 801969a:	dd13      	ble.n	80196c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801969c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80196a0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80196a4:	1a9b      	subs	r3, r3, r2
 80196a6:	f8ad 2018 	strh.w	r2, [sp, #24]
 80196aa:	f8ad 001a 	strh.w	r0, [sp, #26]
 80196ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 80196b2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80196b6:	9600      	str	r6, [sp, #0]
 80196b8:	464b      	mov	r3, r9
 80196ba:	aa02      	add	r2, sp, #8
 80196bc:	4651      	mov	r1, sl
 80196be:	4628      	mov	r0, r5
 80196c0:	f7ff fd7e 	bl	80191c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80196c4:	88a2      	ldrh	r2, [r4, #4]
 80196c6:	8823      	ldrh	r3, [r4, #0]
 80196c8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80196cc:	4413      	add	r3, r2
 80196ce:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80196d2:	b29b      	uxth	r3, r3
 80196d4:	440a      	add	r2, r1
 80196d6:	b292      	uxth	r2, r2
 80196d8:	b211      	sxth	r1, r2
 80196da:	b218      	sxth	r0, r3
 80196dc:	4288      	cmp	r0, r1
 80196de:	dd13      	ble.n	8019708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 80196e0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80196e4:	1a9b      	subs	r3, r3, r2
 80196e6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80196ea:	f8ad 1018 	strh.w	r1, [sp, #24]
 80196ee:	f8ad 301c 	strh.w	r3, [sp, #28]
 80196f2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80196f6:	9600      	str	r6, [sp, #0]
 80196f8:	464b      	mov	r3, r9
 80196fa:	aa02      	add	r2, sp, #8
 80196fc:	4651      	mov	r1, sl
 80196fe:	4628      	mov	r0, r5
 8019700:	f8ad 701a 	strh.w	r7, [sp, #26]
 8019704:	f7ff fd5c 	bl	80191c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019708:	88e2      	ldrh	r2, [r4, #6]
 801970a:	8863      	ldrh	r3, [r4, #2]
 801970c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019710:	4413      	add	r3, r2
 8019712:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019716:	b29b      	uxth	r3, r3
 8019718:	440a      	add	r2, r1
 801971a:	b292      	uxth	r2, r2
 801971c:	b211      	sxth	r1, r2
 801971e:	b218      	sxth	r0, r3
 8019720:	4288      	cmp	r0, r1
 8019722:	f77f aec8 	ble.w	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019726:	f9b4 7000 	ldrsh.w	r7, [r4]
 801972a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801972e:	1a9b      	subs	r3, r3, r2
 8019730:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019734:	f8ad 7018 	strh.w	r7, [sp, #24]
 8019738:	f8ad 101a 	strh.w	r1, [sp, #26]
 801973c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019740:	9600      	str	r6, [sp, #0]
 8019742:	464b      	mov	r3, r9
 8019744:	e77a      	b.n	801963c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8019746:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801974a:	2800      	cmp	r0, #0
 801974c:	f43f aeb3 	beq.w	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019750:	6803      	ldr	r3, [r0, #0]
 8019752:	9600      	str	r6, [sp, #0]
 8019754:	68de      	ldr	r6, [r3, #12]
 8019756:	4623      	mov	r3, r4
 8019758:	aa02      	add	r2, sp, #8
 801975a:	4629      	mov	r1, r5
 801975c:	47b0      	blx	r6
 801975e:	e6aa      	b.n	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019760:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8019764:	2800      	cmp	r0, #0
 8019766:	f43f aea6 	beq.w	80194b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801976a:	6803      	ldr	r3, [r0, #0]
 801976c:	9600      	str	r6, [sp, #0]
 801976e:	689e      	ldr	r6, [r3, #8]
 8019770:	e7f1      	b.n	8019756 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8019772:	bf00      	nop
 8019774:	20002230 	.word	0x20002230

08019778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019778:	b180      	cbz	r0, 801979c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801977a:	2903      	cmp	r1, #3
 801977c:	d81c      	bhi.n	80197b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801977e:	e8df f001 	tbb	[pc, r1]
 8019782:	1d02      	.short	0x1d02
 8019784:	1f08      	.short	0x1f08
 8019786:	4b10      	ldr	r3, [pc, #64]	@ (80197c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019788:	8818      	ldrh	r0, [r3, #0]
 801978a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801978e:	4240      	negs	r0, r0
 8019790:	4770      	bx	lr
 8019792:	4b0d      	ldr	r3, [pc, #52]	@ (80197c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019794:	8818      	ldrh	r0, [r3, #0]
 8019796:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801979a:	4770      	bx	lr
 801979c:	2903      	cmp	r1, #3
 801979e:	d80b      	bhi.n	80197b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80197a0:	a301      	add	r3, pc, #4	@ (adr r3, 80197a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80197a2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80197a6:	bf00      	nop
 80197a8:	080197bd 	.word	0x080197bd
 80197ac:	08019793 	.word	0x08019793
 80197b0:	080197c1 	.word	0x080197c1
 80197b4:	08019787 	.word	0x08019787
 80197b8:	2000      	movs	r0, #0
 80197ba:	4770      	bx	lr
 80197bc:	2001      	movs	r0, #1
 80197be:	4770      	bx	lr
 80197c0:	f04f 30ff 	mov.w	r0, #4294967295
 80197c4:	4770      	bx	lr
 80197c6:	bf00      	nop
 80197c8:	2000222a 	.word	0x2000222a

080197cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80197cc:	b180      	cbz	r0, 80197f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80197ce:	2903      	cmp	r1, #3
 80197d0:	d81c      	bhi.n	801980c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80197d2:	e8df f001 	tbb	[pc, r1]
 80197d6:	021d      	.short	0x021d
 80197d8:	071f      	.short	0x071f
 80197da:	4b10      	ldr	r3, [pc, #64]	@ (801981c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80197dc:	8818      	ldrh	r0, [r3, #0]
 80197de:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80197e2:	4770      	bx	lr
 80197e4:	4b0d      	ldr	r3, [pc, #52]	@ (801981c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80197e6:	8818      	ldrh	r0, [r3, #0]
 80197e8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80197ec:	4240      	negs	r0, r0
 80197ee:	4770      	bx	lr
 80197f0:	2903      	cmp	r1, #3
 80197f2:	d80b      	bhi.n	801980c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80197f4:	a301      	add	r3, pc, #4	@ (adr r3, 80197fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80197f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80197fa:	bf00      	nop
 80197fc:	080197db 	.word	0x080197db
 8019800:	08019815 	.word	0x08019815
 8019804:	080197e5 	.word	0x080197e5
 8019808:	08019811 	.word	0x08019811
 801980c:	2000      	movs	r0, #0
 801980e:	4770      	bx	lr
 8019810:	2001      	movs	r0, #1
 8019812:	4770      	bx	lr
 8019814:	f04f 30ff 	mov.w	r0, #4294967295
 8019818:	4770      	bx	lr
 801981a:	bf00      	nop
 801981c:	2000222a 	.word	0x2000222a

08019820 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019824:	b099      	sub	sp, #100	@ 0x64
 8019826:	910d      	str	r1, [sp, #52]	@ 0x34
 8019828:	a914      	add	r1, sp, #80	@ 0x50
 801982a:	e881 000c 	stmia.w	r1, {r2, r3}
 801982e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8019832:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8019836:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801983a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801983c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019840:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8019844:	9310      	str	r3, [sp, #64]	@ 0x40
 8019846:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801984a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801984e:	9308      	str	r3, [sp, #32]
 8019850:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8019854:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8019856:	9309      	str	r3, [sp, #36]	@ 0x24
 8019858:	7b4b      	ldrb	r3, [r1, #13]
 801985a:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 801985e:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8019862:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8019866:	f891 8006 	ldrb.w	r8, [r1, #6]
 801986a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801986e:	ea58 0800 	orrs.w	r8, r8, r0
 8019872:	f000 81cc 	beq.w	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019876:	011b      	lsls	r3, r3, #4
 8019878:	79c8      	ldrb	r0, [r1, #7]
 801987a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801987e:	4303      	orrs	r3, r0
 8019880:	930c      	str	r3, [sp, #48]	@ 0x30
 8019882:	f000 81c4 	beq.w	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019886:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801988a:	b29b      	uxth	r3, r3
 801988c:	2d00      	cmp	r5, #0
 801988e:	f000 812a 	beq.w	8019ae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c6>
 8019892:	1aed      	subs	r5, r5, r3
 8019894:	b2ad      	uxth	r5, r5
 8019896:	0429      	lsls	r1, r5, #16
 8019898:	d502      	bpl.n	80198a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 801989a:	1b64      	subs	r4, r4, r5
 801989c:	2500      	movs	r5, #0
 801989e:	b224      	sxth	r4, r4
 80198a0:	f9b2 0000 	ldrsh.w	r0, [r2]
 80198a4:	8891      	ldrh	r1, [r2, #4]
 80198a6:	4284      	cmp	r4, r0
 80198a8:	b283      	uxth	r3, r0
 80198aa:	bfbf      	itttt	lt
 80198ac:	18ed      	addlt	r5, r5, r3
 80198ae:	1b2c      	sublt	r4, r5, r4
 80198b0:	b2a5      	uxthlt	r5, r4
 80198b2:	4604      	movlt	r4, r0
 80198b4:	440b      	add	r3, r1
 80198b6:	b21b      	sxth	r3, r3
 80198b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80198ba:	88d3      	ldrh	r3, [r2, #6]
 80198bc:	8852      	ldrh	r2, [r2, #2]
 80198be:	4621      	mov	r1, r4
 80198c0:	4413      	add	r3, r2
 80198c2:	b21b      	sxth	r3, r3
 80198c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80198c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80198c8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80198ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80198cc:	4bb2      	ldr	r3, [pc, #712]	@ (8019b98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 80198ce:	a814      	add	r0, sp, #80	@ 0x50
 80198d0:	f893 b000 	ldrb.w	fp, [r3]
 80198d4:	4653      	mov	r3, sl
 80198d6:	f7f6 f8fa 	bl	800face <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80198da:	4621      	mov	r1, r4
 80198dc:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 80198e0:	4653      	mov	r3, sl
 80198e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80198e4:	a814      	add	r0, sp, #80	@ 0x50
 80198e6:	f7f6 f90f 	bl	800fb08 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80198ea:	a918      	add	r1, sp, #96	@ 0x60
 80198ec:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80198f0:	a817      	add	r0, sp, #92	@ 0x5c
 80198f2:	f7f6 fa35 	bl	800fd60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80198f6:	f1ba 0f00 	cmp.w	sl, #0
 80198fa:	f040 80f7 	bne.w	8019aec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 80198fe:	f1bb 0f01 	cmp.w	fp, #1
 8019902:	f040 80fb 	bne.w	8019afc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8019906:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019908:	2b00      	cmp	r3, #0
 801990a:	f040 81a8 	bne.w	8019c5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x43e>
 801990e:	fa1f f288 	uxth.w	r2, r8
 8019912:	b905      	cbnz	r5, 8019916 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8019914:	b15e      	cbz	r6, 801992e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8019916:	4631      	mov	r1, r6
 8019918:	fb06 5302 	mla	r3, r6, r2, r5
 801991c:	9808      	ldr	r0, [sp, #32]
 801991e:	4343      	muls	r3, r0
 8019920:	f003 0607 	and.w	r6, r3, #7
 8019924:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8019928:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801992a:	1a5b      	subs	r3, r3, r1
 801992c:	930e      	str	r3, [sp, #56]	@ 0x38
 801992e:	f10b 31ff 	add.w	r1, fp, #4294967295
 8019932:	424b      	negs	r3, r1
 8019934:	414b      	adcs	r3, r1
 8019936:	4618      	mov	r0, r3
 8019938:	4651      	mov	r1, sl
 801993a:	930c      	str	r3, [sp, #48]	@ 0x30
 801993c:	f7ff ff1c 	bl	8019778 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8019940:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019942:	4683      	mov	fp, r0
 8019944:	4618      	mov	r0, r3
 8019946:	f7ff ff41 	bl	80197cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801994a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801994c:	4603      	mov	r3, r0
 801994e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019950:	eba1 0a00 	sub.w	sl, r1, r0
 8019954:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019956:	458a      	cmp	sl, r1
 8019958:	bfa8      	it	ge
 801995a:	468a      	movge	sl, r1
 801995c:	f1ba 0f00 	cmp.w	sl, #0
 8019960:	f340 8155 	ble.w	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019964:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019966:	1b64      	subs	r4, r4, r5
 8019968:	1b0c      	subs	r4, r1, r4
 801996a:	4544      	cmp	r4, r8
 801996c:	bfd4      	ite	le
 801996e:	ebc5 0504 	rsble	r5, r5, r4
 8019972:	ebc5 0508 	rsbgt	r5, r5, r8
 8019976:	2d00      	cmp	r5, #0
 8019978:	f340 8149 	ble.w	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 801997c:	9908      	ldr	r1, [sp, #32]
 801997e:	1b52      	subs	r2, r2, r5
 8019980:	434a      	muls	r2, r1
 8019982:	920e      	str	r2, [sp, #56]	@ 0x38
 8019984:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8019986:	2a00      	cmp	r2, #0
 8019988:	f040 8175 	bne.w	8019c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x456>
 801998c:	4a83      	ldr	r2, [pc, #524]	@ (8019b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801998e:	930a      	str	r3, [sp, #40]	@ 0x28
 8019990:	6810      	ldr	r0, [r2, #0]
 8019992:	6802      	ldr	r2, [r0, #0]
 8019994:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8019996:	4790      	blx	r2
 8019998:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801999a:	2201      	movs	r2, #1
 801999c:	9908      	ldr	r1, [sp, #32]
 801999e:	408a      	lsls	r2, r1
 80199a0:	3a01      	subs	r2, #1
 80199a2:	497f      	ldr	r1, [pc, #508]	@ (8019ba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80199a4:	b2d2      	uxtb	r2, r2
 80199a6:	880c      	ldrh	r4, [r1, #0]
 80199a8:	920c      	str	r2, [sp, #48]	@ 0x30
 80199aa:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 80199ae:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 80199b2:	fb04 1202 	mla	r2, r4, r2, r1
 80199b6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80199ba:	ea4f 2419 	mov.w	r4, r9, lsr #8
 80199be:	920a      	str	r2, [sp, #40]	@ 0x28
 80199c0:	f3c9 4207 	ubfx	r2, r9, #16, #8
 80199c4:	9212      	str	r2, [sp, #72]	@ 0x48
 80199c6:	b2e2      	uxtb	r2, r4
 80199c8:	9211      	str	r2, [sp, #68]	@ 0x44
 80199ca:	fa5f f289 	uxtb.w	r2, r9
 80199ce:	9210      	str	r2, [sp, #64]	@ 0x40
 80199d0:	4a74      	ldr	r2, [pc, #464]	@ (8019ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 80199d2:	ea4f 1159 	mov.w	r1, r9, lsr #5
 80199d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80199da:	4022      	ands	r2, r4
 80199dc:	430a      	orrs	r2, r1
 80199de:	ea4f 014b 	mov.w	r1, fp, lsl #1
 80199e2:	fb05 3b1b 	mls	fp, r5, fp, r3
 80199e6:	460b      	mov	r3, r1
 80199e8:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 80199ec:	ea42 0209 	orr.w	r2, r2, r9
 80199f0:	436b      	muls	r3, r5
 80199f2:	b292      	uxth	r2, r2
 80199f4:	920f      	str	r2, [sp, #60]	@ 0x3c
 80199f6:	783a      	ldrb	r2, [r7, #0]
 80199f8:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 80199fc:	4132      	asrs	r2, r6
 80199fe:	b2d2      	uxtb	r2, r2
 8019a00:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019a02:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019a04:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8019a08:	f0c0 8149 	bcc.w	8019c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47e>
 8019a0c:	46a9      	mov	r9, r5
 8019a0e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8019a12:	f119 39ff 	adds.w	r9, r9, #4294967295
 8019a16:	f0c0 8132 	bcc.w	8019c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8019a1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a1c:	4013      	ands	r3, r2
 8019a1e:	d054      	beq.n	8019aca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8019a20:	20ff      	movs	r0, #255	@ 0xff
 8019a22:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8019a24:	fb90 f1f1 	sdiv	r1, r0, r1
 8019a28:	434b      	muls	r3, r1
 8019a2a:	2bfe      	cmp	r3, #254	@ 0xfe
 8019a2c:	dd03      	ble.n	8019a36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x216>
 8019a2e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019a30:	4281      	cmp	r1, r0
 8019a32:	f000 8122 	beq.w	8019c7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8019a36:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019a38:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019a3a:	fb11 f303 	smulbb	r3, r1, r3
 8019a3e:	b29b      	uxth	r3, r3
 8019a40:	1c59      	adds	r1, r3, #1
 8019a42:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019a46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a4a:	fa1f fe83 	uxth.w	lr, r3
 8019a4e:	43db      	mvns	r3, r3
 8019a50:	f8b8 4000 	ldrh.w	r4, [r8]
 8019a54:	fb10 fb0e 	smulbb	fp, r0, lr
 8019a58:	1221      	asrs	r1, r4, #8
 8019a5a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019a5c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019a60:	b2db      	uxtb	r3, r3
 8019a62:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8019a66:	fb01 b103 	mla	r1, r1, r3, fp
 8019a6a:	fb10 fb0e 	smulbb	fp, r0, lr
 8019a6e:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019a70:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8019a74:	fb10 fe0e 	smulbb	lr, r0, lr
 8019a78:	00e4      	lsls	r4, r4, #3
 8019a7a:	b2e4      	uxtb	r4, r4
 8019a7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019a80:	fb04 e403 	mla	r4, r4, r3, lr
 8019a84:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019a88:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8019a8c:	fb0c bc03 	mla	ip, ip, r3, fp
 8019a90:	b289      	uxth	r1, r1
 8019a92:	b2a4      	uxth	r4, r4
 8019a94:	1c4b      	adds	r3, r1, #1
 8019a96:	f104 0b01 	add.w	fp, r4, #1
 8019a9a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019a9e:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8019aa2:	fa1f fc8c 	uxth.w	ip, ip
 8019aa6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8019aaa:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8019aae:	ea4b 0101 	orr.w	r1, fp, r1
 8019ab2:	f10c 0b01 	add.w	fp, ip, #1
 8019ab6:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8019aba:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019abe:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019ac2:	ea41 010b 	orr.w	r1, r1, fp
 8019ac6:	f8a8 1000 	strh.w	r1, [r8]
 8019aca:	9b08      	ldr	r3, [sp, #32]
 8019acc:	441e      	add	r6, r3
 8019ace:	b2b6      	uxth	r6, r6
 8019ad0:	2e07      	cmp	r6, #7
 8019ad2:	bf98      	it	ls
 8019ad4:	411a      	asrls	r2, r3
 8019ad6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019ad8:	bf89      	itett	hi
 8019ada:	787a      	ldrbhi	r2, [r7, #1]
 8019adc:	b2d2      	uxtbls	r2, r2
 8019ade:	3701      	addhi	r7, #1
 8019ae0:	2600      	movhi	r6, #0
 8019ae2:	4498      	add	r8, r3
 8019ae4:	e795      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f2>
 8019ae6:	441c      	add	r4, r3
 8019ae8:	b224      	sxth	r4, r4
 8019aea:	e6d9      	b.n	80198a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8019aec:	f1ba 0f01 	cmp.w	sl, #1
 8019af0:	f47f af09 	bne.w	8019906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019af4:	f1bb 0f01 	cmp.w	fp, #1
 8019af8:	f47f af05 	bne.w	8019906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019afc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019afe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019b00:	1a99      	subs	r1, r3, r2
 8019b02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019b04:	1b9b      	subs	r3, r3, r6
 8019b06:	4299      	cmp	r1, r3
 8019b08:	bfa8      	it	ge
 8019b0a:	4619      	movge	r1, r3
 8019b0c:	2900      	cmp	r1, #0
 8019b0e:	9112      	str	r1, [sp, #72]	@ 0x48
 8019b10:	dd7d      	ble.n	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019b12:	4a22      	ldr	r2, [pc, #136]	@ (8019b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8019b14:	6810      	ldr	r0, [r2, #0]
 8019b16:	9211      	str	r2, [sp, #68]	@ 0x44
 8019b18:	6803      	ldr	r3, [r0, #0]
 8019b1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019b1c:	4798      	blx	r3
 8019b1e:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8019b22:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019b24:	d006      	beq.n	8019b34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x314>
 8019b26:	9b08      	ldr	r3, [sp, #32]
 8019b28:	2b04      	cmp	r3, #4
 8019b2a:	d133      	bne.n	8019b94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8019b2c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b2e:	3300      	adds	r3, #0
 8019b30:	bf18      	it	ne
 8019b32:	2301      	movne	r3, #1
 8019b34:	0582      	lsls	r2, r0, #22
 8019b36:	fa1f fc88 	uxth.w	ip, r8
 8019b3a:	f140 80b9 	bpl.w	8019cb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x490>
 8019b3e:	9808      	ldr	r0, [sp, #32]
 8019b40:	2808      	cmp	r0, #8
 8019b42:	f040 80b5 	bne.w	8019cb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x490>
 8019b46:	2b00      	cmp	r3, #0
 8019b48:	d064      	beq.n	8019c14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>
 8019b4a:	f10c 0c01 	add.w	ip, ip, #1
 8019b4e:	f02c 0301 	bic.w	r3, ip, #1
 8019b52:	b29b      	uxth	r3, r3
 8019b54:	bb45      	cbnz	r5, 8019ba8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 8019b56:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019b58:	eb08 0004 	add.w	r0, r8, r4
 8019b5c:	4290      	cmp	r0, r2
 8019b5e:	dc23      	bgt.n	8019ba8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>
 8019b60:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019b62:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019b66:	6810      	ldr	r0, [r2, #0]
 8019b68:	b289      	uxth	r1, r1
 8019b6a:	6804      	ldr	r4, [r0, #0]
 8019b6c:	9506      	str	r5, [sp, #24]
 8019b6e:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8019b72:	e9cd 3100 	strd	r3, r1, [sp]
 8019b76:	9302      	str	r3, [sp, #8]
 8019b78:	4673      	mov	r3, lr
 8019b7a:	9505      	str	r5, [sp, #20]
 8019b7c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8019b7e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019b82:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8019b86:	fb06 710c 	mla	r1, r6, ip, r7
 8019b8a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019b8e:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8019b90:	47a0      	blx	r4
 8019b92:	e03c      	b.n	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019b94:	2300      	movs	r3, #0
 8019b96:	e7cd      	b.n	8019b34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x314>
 8019b98:	20002228 	.word	0x20002228
 8019b9c:	20002230 	.word	0x20002230
 8019ba0:	2000222a 	.word	0x2000222a
 8019ba4:	00fff800 	.word	0x00fff800
 8019ba8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019baa:	eba4 0e05 	sub.w	lr, r4, r5
 8019bae:	eba2 0e0e 	sub.w	lr, r2, lr
 8019bb2:	45c6      	cmp	lr, r8
 8019bb4:	bfd4      	ite	le
 8019bb6:	ebc5 0e0e 	rsble	lr, r5, lr
 8019bba:	ebc5 0e08 	rsbgt	lr, r5, r8
 8019bbe:	f1be 0f00 	cmp.w	lr, #0
 8019bc2:	d024      	beq.n	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019bc4:	07e8      	lsls	r0, r5, #31
 8019bc6:	f53f ae9e 	bmi.w	8019906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019bca:	f01e 0001 	ands.w	r0, lr, #1
 8019bce:	f47f ae9a 	bne.w	8019906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019bd2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019bd4:	086d      	lsrs	r5, r5, #1
 8019bd6:	6814      	ldr	r4, [r2, #0]
 8019bd8:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8019bdc:	fb06 560c 	mla	r6, r6, ip, r5
 8019be0:	6825      	ldr	r5, [r4, #0]
 8019be2:	9006      	str	r0, [sp, #24]
 8019be4:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8019be8:	9005      	str	r0, [sp, #20]
 8019bea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8019bec:	9302      	str	r3, [sp, #8]
 8019bee:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8019bf2:	b289      	uxth	r1, r1
 8019bf4:	fa1f f38e 	uxth.w	r3, lr
 8019bf8:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8019bfc:	9101      	str	r1, [sp, #4]
 8019bfe:	9300      	str	r3, [sp, #0]
 8019c00:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019c04:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8019c06:	4643      	mov	r3, r8
 8019c08:	19b9      	adds	r1, r7, r6
 8019c0a:	4620      	mov	r0, r4
 8019c0c:	47a8      	blx	r5
 8019c0e:	b019      	add	sp, #100	@ 0x64
 8019c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c14:	4a28      	ldr	r2, [pc, #160]	@ (8019cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>)
 8019c16:	1b64      	subs	r4, r4, r5
 8019c18:	6810      	ldr	r0, [r2, #0]
 8019c1a:	fb06 5608 	mla	r6, r6, r8, r5
 8019c1e:	f8d0 a000 	ldr.w	sl, [r0]
 8019c22:	9306      	str	r3, [sp, #24]
 8019c24:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8019c28:	9305      	str	r3, [sp, #20]
 8019c2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019c2c:	b289      	uxth	r1, r1
 8019c2e:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8019c32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019c34:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8019c38:	1b1c      	subs	r4, r3, r4
 8019c3a:	4544      	cmp	r4, r8
 8019c3c:	bfd4      	ite	le
 8019c3e:	ebc5 0504 	rsble	r5, r5, r4
 8019c42:	ebc5 0508 	rsbgt	r5, r5, r8
 8019c46:	b2ad      	uxth	r5, r5
 8019c48:	9101      	str	r1, [sp, #4]
 8019c4a:	f8cd c008 	str.w	ip, [sp, #8]
 8019c4e:	9500      	str	r5, [sp, #0]
 8019c50:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8019c54:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8019c58:	4673      	mov	r3, lr
 8019c5a:	19b9      	adds	r1, r7, r6
 8019c5c:	e798      	b.n	8019b90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>
 8019c5e:	2208      	movs	r2, #8
 8019c60:	9b08      	ldr	r3, [sp, #32]
 8019c62:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c66:	1e5a      	subs	r2, r3, #1
 8019c68:	4442      	add	r2, r8
 8019c6a:	fb92 f2f3 	sdiv	r2, r2, r3
 8019c6e:	fb12 f203 	smulbb	r2, r2, r3
 8019c72:	b292      	uxth	r2, r2
 8019c74:	e64d      	b.n	8019912 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8019c76:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019c78:	e68f      	b.n	801999a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 8019c7a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019c7c:	e723      	b.n	8019ac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a6>
 8019c7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019c80:	b143      	cbz	r3, 8019c94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x474>
 8019c82:	441e      	add	r6, r3
 8019c84:	b2b6      	uxth	r6, r6
 8019c86:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8019c8a:	783a      	ldrb	r2, [r7, #0]
 8019c8c:	f006 0607 	and.w	r6, r6, #7
 8019c90:	4132      	asrs	r2, r6
 8019c92:	b2d2      	uxtb	r2, r2
 8019c94:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8019c96:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019c98:	4419      	add	r1, r3
 8019c9a:	910a      	str	r1, [sp, #40]	@ 0x28
 8019c9c:	e6b2      	b.n	8019a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e4>
 8019c9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019ca0:	2b00      	cmp	r3, #0
 8019ca2:	d1b4      	bne.n	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019ca4:	4b04      	ldr	r3, [pc, #16]	@ (8019cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>)
 8019ca6:	6818      	ldr	r0, [r3, #0]
 8019ca8:	6803      	ldr	r3, [r0, #0]
 8019caa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019cac:	4798      	blx	r3
 8019cae:	e7ae      	b.n	8019c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ee>
 8019cb0:	2b00      	cmp	r3, #0
 8019cb2:	f47f af4a 	bne.w	8019b4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32a>
 8019cb6:	e626      	b.n	8019906 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xe6>
 8019cb8:	20002230 	.word	0x20002230

08019cbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8019cbc:	b538      	push	{r3, r4, r5, lr}
 8019cbe:	4605      	mov	r5, r0
 8019cc0:	4c13      	ldr	r4, [pc, #76]	@ (8019d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x54>)
 8019cc2:	e8d4 3f8f 	ldab	r3, [r4]
 8019cc6:	07da      	lsls	r2, r3, #31
 8019cc8:	d40b      	bmi.n	8019ce2 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x26>
 8019cca:	4620      	mov	r0, r4
 8019ccc:	f007 fedb 	bl	8021a86 <__cxa_guard_acquire>
 8019cd0:	b138      	cbz	r0, 8019ce2 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x26>
 8019cd2:	4620      	mov	r0, r4
 8019cd4:	f007 fee3 	bl	8021a9e <__cxa_guard_release>
 8019cd8:	4a0e      	ldr	r2, [pc, #56]	@ (8019d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019cda:	490f      	ldr	r1, [pc, #60]	@ (8019d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019cdc:	480f      	ldr	r0, [pc, #60]	@ (8019d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019cde:	f007 fecb 	bl	8021a78 <__aeabi_atexit>
 8019ce2:	4c0f      	ldr	r4, [pc, #60]	@ (8019d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019ce4:	e8d4 3f8f 	ldab	r3, [r4]
 8019ce8:	07db      	lsls	r3, r3, #31
 8019cea:	d40b      	bmi.n	8019d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x48>
 8019cec:	4620      	mov	r0, r4
 8019cee:	f007 feca 	bl	8021a86 <__cxa_guard_acquire>
 8019cf2:	b138      	cbz	r0, 8019d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x48>
 8019cf4:	4620      	mov	r0, r4
 8019cf6:	f007 fed2 	bl	8021a9e <__cxa_guard_release>
 8019cfa:	4a06      	ldr	r2, [pc, #24]	@ (8019d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8019cfc:	4909      	ldr	r1, [pc, #36]	@ (8019d24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8019cfe:	480a      	ldr	r0, [pc, #40]	@ (8019d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019d00:	f007 feba 	bl	8021a78 <__aeabi_atexit>
 8019d04:	4b05      	ldr	r3, [pc, #20]	@ (8019d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019d06:	616b      	str	r3, [r5, #20]
 8019d08:	4b07      	ldr	r3, [pc, #28]	@ (8019d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019d0a:	61ab      	str	r3, [r5, #24]
 8019d0c:	bd38      	pop	{r3, r4, r5, pc}
 8019d0e:	bf00      	nop
 8019d10:	2000230c 	.word	0x2000230c
 8019d14:	20000000 	.word	0x20000000
 8019d18:	08015dd3 	.word	0x08015dd3
 8019d1c:	20000060 	.word	0x20000060
 8019d20:	20002310 	.word	0x20002310
 8019d24:	08015dd1 	.word	0x08015dd1
 8019d28:	20000064 	.word	0x20000064

08019d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019d2c:	b538      	push	{r3, r4, r5, lr}
 8019d2e:	4605      	mov	r5, r0
 8019d30:	4c13      	ldr	r4, [pc, #76]	@ (8019d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x54>)
 8019d32:	e8d4 3f8f 	ldab	r3, [r4]
 8019d36:	07da      	lsls	r2, r3, #31
 8019d38:	d40b      	bmi.n	8019d52 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x26>
 8019d3a:	4620      	mov	r0, r4
 8019d3c:	f007 fea3 	bl	8021a86 <__cxa_guard_acquire>
 8019d40:	b138      	cbz	r0, 8019d52 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x26>
 8019d42:	4620      	mov	r0, r4
 8019d44:	f007 feab 	bl	8021a9e <__cxa_guard_release>
 8019d48:	4a0e      	ldr	r2, [pc, #56]	@ (8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019d4a:	490f      	ldr	r1, [pc, #60]	@ (8019d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019d4c:	480f      	ldr	r0, [pc, #60]	@ (8019d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019d4e:	f007 fe93 	bl	8021a78 <__aeabi_atexit>
 8019d52:	4c0f      	ldr	r4, [pc, #60]	@ (8019d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019d54:	e8d4 3f8f 	ldab	r3, [r4]
 8019d58:	07db      	lsls	r3, r3, #31
 8019d5a:	d40b      	bmi.n	8019d74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x48>
 8019d5c:	4620      	mov	r0, r4
 8019d5e:	f007 fe92 	bl	8021a86 <__cxa_guard_acquire>
 8019d62:	b138      	cbz	r0, 8019d74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x48>
 8019d64:	4620      	mov	r0, r4
 8019d66:	f007 fe9a 	bl	8021a9e <__cxa_guard_release>
 8019d6a:	4a06      	ldr	r2, [pc, #24]	@ (8019d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019d6c:	4909      	ldr	r1, [pc, #36]	@ (8019d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8019d6e:	480a      	ldr	r0, [pc, #40]	@ (8019d98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019d70:	f007 fe82 	bl	8021a78 <__aeabi_atexit>
 8019d74:	4b05      	ldr	r3, [pc, #20]	@ (8019d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019d76:	60eb      	str	r3, [r5, #12]
 8019d78:	4b07      	ldr	r3, [pc, #28]	@ (8019d98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8019d7a:	612b      	str	r3, [r5, #16]
 8019d7c:	bd38      	pop	{r3, r4, r5, pc}
 8019d7e:	bf00      	nop
 8019d80:	200022e4 	.word	0x200022e4
 8019d84:	20000000 	.word	0x20000000
 8019d88:	08015dd7 	.word	0x08015dd7
 8019d8c:	20000038 	.word	0x20000038
 8019d90:	200022e8 	.word	0x200022e8
 8019d94:	08015dd5 	.word	0x08015dd5
 8019d98:	2000003c 	.word	0x2000003c

08019d9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019d9c:	b510      	push	{r4, lr}
 8019d9e:	4604      	mov	r4, r0
 8019da0:	f7ff ff8c 	bl	8019cbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019da4:	4620      	mov	r0, r4
 8019da6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019daa:	f7ff bfbf 	b.w	8019d2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08019db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8019db0:	b538      	push	{r3, r4, r5, lr}
 8019db2:	4605      	mov	r5, r0
 8019db4:	4c13      	ldr	r4, [pc, #76]	@ (8019e04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x54>)
 8019db6:	e8d4 3f8f 	ldab	r3, [r4]
 8019dba:	07da      	lsls	r2, r3, #31
 8019dbc:	d40b      	bmi.n	8019dd6 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x26>
 8019dbe:	4620      	mov	r0, r4
 8019dc0:	f007 fe61 	bl	8021a86 <__cxa_guard_acquire>
 8019dc4:	b138      	cbz	r0, 8019dd6 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x26>
 8019dc6:	4620      	mov	r0, r4
 8019dc8:	f007 fe69 	bl	8021a9e <__cxa_guard_release>
 8019dcc:	4a0e      	ldr	r2, [pc, #56]	@ (8019e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019dce:	490f      	ldr	r1, [pc, #60]	@ (8019e0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019dd0:	480f      	ldr	r0, [pc, #60]	@ (8019e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019dd2:	f007 fe51 	bl	8021a78 <__aeabi_atexit>
 8019dd6:	4c0f      	ldr	r4, [pc, #60]	@ (8019e14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019dd8:	e8d4 3f8f 	ldab	r3, [r4]
 8019ddc:	07db      	lsls	r3, r3, #31
 8019dde:	d40b      	bmi.n	8019df8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x48>
 8019de0:	4620      	mov	r0, r4
 8019de2:	f007 fe50 	bl	8021a86 <__cxa_guard_acquire>
 8019de6:	b138      	cbz	r0, 8019df8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x48>
 8019de8:	4620      	mov	r0, r4
 8019dea:	f007 fe58 	bl	8021a9e <__cxa_guard_release>
 8019dee:	4a06      	ldr	r2, [pc, #24]	@ (8019e08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8019df0:	4909      	ldr	r1, [pc, #36]	@ (8019e18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019df2:	480a      	ldr	r0, [pc, #40]	@ (8019e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019df4:	f007 fe40 	bl	8021a78 <__aeabi_atexit>
 8019df8:	4b05      	ldr	r3, [pc, #20]	@ (8019e10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019dfa:	626b      	str	r3, [r5, #36]	@ 0x24
 8019dfc:	4b07      	ldr	r3, [pc, #28]	@ (8019e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019dfe:	62ab      	str	r3, [r5, #40]	@ 0x28
 8019e00:	bd38      	pop	{r3, r4, r5, pc}
 8019e02:	bf00      	nop
 8019e04:	20002314 	.word	0x20002314
 8019e08:	20000000 	.word	0x20000000
 8019e0c:	08015dcb 	.word	0x08015dcb
 8019e10:	20000068 	.word	0x20000068
 8019e14:	20002318 	.word	0x20002318
 8019e18:	08015dc9 	.word	0x08015dc9
 8019e1c:	2000006c 	.word	0x2000006c

08019e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019e20:	b538      	push	{r3, r4, r5, lr}
 8019e22:	4605      	mov	r5, r0
 8019e24:	4c13      	ldr	r4, [pc, #76]	@ (8019e74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x54>)
 8019e26:	e8d4 3f8f 	ldab	r3, [r4]
 8019e2a:	07da      	lsls	r2, r3, #31
 8019e2c:	d40b      	bmi.n	8019e46 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x26>
 8019e2e:	4620      	mov	r0, r4
 8019e30:	f007 fe29 	bl	8021a86 <__cxa_guard_acquire>
 8019e34:	b138      	cbz	r0, 8019e46 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x26>
 8019e36:	4620      	mov	r0, r4
 8019e38:	f007 fe31 	bl	8021a9e <__cxa_guard_release>
 8019e3c:	4a0e      	ldr	r2, [pc, #56]	@ (8019e78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019e3e:	490f      	ldr	r1, [pc, #60]	@ (8019e7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019e40:	480f      	ldr	r0, [pc, #60]	@ (8019e80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019e42:	f007 fe19 	bl	8021a78 <__aeabi_atexit>
 8019e46:	4c0f      	ldr	r4, [pc, #60]	@ (8019e84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019e48:	e8d4 3f8f 	ldab	r3, [r4]
 8019e4c:	07db      	lsls	r3, r3, #31
 8019e4e:	d40b      	bmi.n	8019e68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x48>
 8019e50:	4620      	mov	r0, r4
 8019e52:	f007 fe18 	bl	8021a86 <__cxa_guard_acquire>
 8019e56:	b138      	cbz	r0, 8019e68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x48>
 8019e58:	4620      	mov	r0, r4
 8019e5a:	f007 fe20 	bl	8021a9e <__cxa_guard_release>
 8019e5e:	4a06      	ldr	r2, [pc, #24]	@ (8019e78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019e60:	4909      	ldr	r1, [pc, #36]	@ (8019e88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019e62:	480a      	ldr	r0, [pc, #40]	@ (8019e8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019e64:	f007 fe08 	bl	8021a78 <__aeabi_atexit>
 8019e68:	4b05      	ldr	r3, [pc, #20]	@ (8019e80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019e6a:	61eb      	str	r3, [r5, #28]
 8019e6c:	4b07      	ldr	r3, [pc, #28]	@ (8019e8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019e6e:	622b      	str	r3, [r5, #32]
 8019e70:	bd38      	pop	{r3, r4, r5, pc}
 8019e72:	bf00      	nop
 8019e74:	200022ec 	.word	0x200022ec
 8019e78:	20000000 	.word	0x20000000
 8019e7c:	08015dcf 	.word	0x08015dcf
 8019e80:	20000040 	.word	0x20000040
 8019e84:	200022f0 	.word	0x200022f0
 8019e88:	08015dcd 	.word	0x08015dcd
 8019e8c:	20000044 	.word	0x20000044

08019e90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019e90:	b510      	push	{r4, lr}
 8019e92:	4604      	mov	r4, r0
 8019e94:	f7ff ff8c 	bl	8019db0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019e98:	4620      	mov	r0, r4
 8019e9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019e9e:	f7ff bfbf 	b.w	8019e20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019ea4:	b538      	push	{r3, r4, r5, lr}
 8019ea6:	4605      	mov	r5, r0
 8019ea8:	4c13      	ldr	r4, [pc, #76]	@ (8019ef8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x54>)
 8019eaa:	e8d4 3f8f 	ldab	r3, [r4]
 8019eae:	07da      	lsls	r2, r3, #31
 8019eb0:	d40b      	bmi.n	8019eca <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x26>
 8019eb2:	4620      	mov	r0, r4
 8019eb4:	f007 fde7 	bl	8021a86 <__cxa_guard_acquire>
 8019eb8:	b138      	cbz	r0, 8019eca <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x26>
 8019eba:	4620      	mov	r0, r4
 8019ebc:	f007 fdef 	bl	8021a9e <__cxa_guard_release>
 8019ec0:	4a0e      	ldr	r2, [pc, #56]	@ (8019efc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019ec2:	490f      	ldr	r1, [pc, #60]	@ (8019f00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019ec4:	480f      	ldr	r0, [pc, #60]	@ (8019f04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019ec6:	f007 fdd7 	bl	8021a78 <__aeabi_atexit>
 8019eca:	4c0f      	ldr	r4, [pc, #60]	@ (8019f08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019ecc:	e8d4 3f8f 	ldab	r3, [r4]
 8019ed0:	07db      	lsls	r3, r3, #31
 8019ed2:	d40b      	bmi.n	8019eec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x48>
 8019ed4:	4620      	mov	r0, r4
 8019ed6:	f007 fdd6 	bl	8021a86 <__cxa_guard_acquire>
 8019eda:	b138      	cbz	r0, 8019eec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x48>
 8019edc:	4620      	mov	r0, r4
 8019ede:	f007 fdde 	bl	8021a9e <__cxa_guard_release>
 8019ee2:	4a06      	ldr	r2, [pc, #24]	@ (8019efc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019ee4:	4909      	ldr	r1, [pc, #36]	@ (8019f0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019ee6:	480a      	ldr	r0, [pc, #40]	@ (8019f10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019ee8:	f007 fdc6 	bl	8021a78 <__aeabi_atexit>
 8019eec:	4b05      	ldr	r3, [pc, #20]	@ (8019f04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019eee:	636b      	str	r3, [r5, #52]	@ 0x34
 8019ef0:	4b07      	ldr	r3, [pc, #28]	@ (8019f10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019ef2:	63ab      	str	r3, [r5, #56]	@ 0x38
 8019ef4:	bd38      	pop	{r3, r4, r5, pc}
 8019ef6:	bf00      	nop
 8019ef8:	20002324 	.word	0x20002324
 8019efc:	20000000 	.word	0x20000000
 8019f00:	08015dc3 	.word	0x08015dc3
 8019f04:	20000078 	.word	0x20000078
 8019f08:	20002328 	.word	0x20002328
 8019f0c:	08015dc1 	.word	0x08015dc1
 8019f10:	2000007c 	.word	0x2000007c

08019f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019f14:	b538      	push	{r3, r4, r5, lr}
 8019f16:	4605      	mov	r5, r0
 8019f18:	4c13      	ldr	r4, [pc, #76]	@ (8019f68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x54>)
 8019f1a:	e8d4 3f8f 	ldab	r3, [r4]
 8019f1e:	07da      	lsls	r2, r3, #31
 8019f20:	d40b      	bmi.n	8019f3a <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x26>
 8019f22:	4620      	mov	r0, r4
 8019f24:	f007 fdaf 	bl	8021a86 <__cxa_guard_acquire>
 8019f28:	b138      	cbz	r0, 8019f3a <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x26>
 8019f2a:	4620      	mov	r0, r4
 8019f2c:	f007 fdb7 	bl	8021a9e <__cxa_guard_release>
 8019f30:	4a0e      	ldr	r2, [pc, #56]	@ (8019f6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019f32:	490f      	ldr	r1, [pc, #60]	@ (8019f70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019f34:	480f      	ldr	r0, [pc, #60]	@ (8019f74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019f36:	f007 fd9f 	bl	8021a78 <__aeabi_atexit>
 8019f3a:	4c0f      	ldr	r4, [pc, #60]	@ (8019f78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019f3c:	e8d4 3f8f 	ldab	r3, [r4]
 8019f40:	07db      	lsls	r3, r3, #31
 8019f42:	d40b      	bmi.n	8019f5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x48>
 8019f44:	4620      	mov	r0, r4
 8019f46:	f007 fd9e 	bl	8021a86 <__cxa_guard_acquire>
 8019f4a:	b138      	cbz	r0, 8019f5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x48>
 8019f4c:	4620      	mov	r0, r4
 8019f4e:	f007 fda6 	bl	8021a9e <__cxa_guard_release>
 8019f52:	4a06      	ldr	r2, [pc, #24]	@ (8019f6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019f54:	4909      	ldr	r1, [pc, #36]	@ (8019f7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019f56:	480a      	ldr	r0, [pc, #40]	@ (8019f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019f58:	f007 fd8e 	bl	8021a78 <__aeabi_atexit>
 8019f5c:	4b05      	ldr	r3, [pc, #20]	@ (8019f74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019f5e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 8019f60:	4b07      	ldr	r3, [pc, #28]	@ (8019f80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019f62:	632b      	str	r3, [r5, #48]	@ 0x30
 8019f64:	bd38      	pop	{r3, r4, r5, pc}
 8019f66:	bf00      	nop
 8019f68:	200022f4 	.word	0x200022f4
 8019f6c:	20000000 	.word	0x20000000
 8019f70:	08015dc7 	.word	0x08015dc7
 8019f74:	20000048 	.word	0x20000048
 8019f78:	200022f8 	.word	0x200022f8
 8019f7c:	08015dc5 	.word	0x08015dc5
 8019f80:	2000004c 	.word	0x2000004c

08019f84 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019f84:	b510      	push	{r4, lr}
 8019f86:	4604      	mov	r4, r0
 8019f88:	f7ff ff8c 	bl	8019ea4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019f8c:	4620      	mov	r0, r4
 8019f8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019f92:	f7ff bfbf 	b.w	8019f14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019f98:	b538      	push	{r3, r4, r5, lr}
 8019f9a:	4605      	mov	r5, r0
 8019f9c:	4c13      	ldr	r4, [pc, #76]	@ (8019fec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x54>)
 8019f9e:	e8d4 3f8f 	ldab	r3, [r4]
 8019fa2:	07da      	lsls	r2, r3, #31
 8019fa4:	d40b      	bmi.n	8019fbe <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x26>
 8019fa6:	4620      	mov	r0, r4
 8019fa8:	f007 fd6d 	bl	8021a86 <__cxa_guard_acquire>
 8019fac:	b138      	cbz	r0, 8019fbe <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x26>
 8019fae:	4620      	mov	r0, r4
 8019fb0:	f007 fd75 	bl	8021a9e <__cxa_guard_release>
 8019fb4:	4a0e      	ldr	r2, [pc, #56]	@ (8019ff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019fb6:	490f      	ldr	r1, [pc, #60]	@ (8019ff4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019fb8:	480f      	ldr	r0, [pc, #60]	@ (8019ff8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019fba:	f007 fd5d 	bl	8021a78 <__aeabi_atexit>
 8019fbe:	4c0f      	ldr	r4, [pc, #60]	@ (8019ffc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019fc0:	e8d4 3f8f 	ldab	r3, [r4]
 8019fc4:	07db      	lsls	r3, r3, #31
 8019fc6:	d40b      	bmi.n	8019fe0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x48>
 8019fc8:	4620      	mov	r0, r4
 8019fca:	f007 fd5c 	bl	8021a86 <__cxa_guard_acquire>
 8019fce:	b138      	cbz	r0, 8019fe0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x48>
 8019fd0:	4620      	mov	r0, r4
 8019fd2:	f007 fd64 	bl	8021a9e <__cxa_guard_release>
 8019fd6:	4a06      	ldr	r2, [pc, #24]	@ (8019ff0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019fd8:	4909      	ldr	r1, [pc, #36]	@ (801a000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019fda:	480a      	ldr	r0, [pc, #40]	@ (801a004 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019fdc:	f007 fd4c 	bl	8021a78 <__aeabi_atexit>
 8019fe0:	4b05      	ldr	r3, [pc, #20]	@ (8019ff8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019fe2:	656b      	str	r3, [r5, #84]	@ 0x54
 8019fe4:	4b07      	ldr	r3, [pc, #28]	@ (801a004 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019fe6:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019fe8:	bd38      	pop	{r3, r4, r5, pc}
 8019fea:	bf00      	nop
 8019fec:	2000232c 	.word	0x2000232c
 8019ff0:	20000000 	.word	0x20000000
 8019ff4:	08015db3 	.word	0x08015db3
 8019ff8:	20000080 	.word	0x20000080
 8019ffc:	20002330 	.word	0x20002330
 801a000:	08015db1 	.word	0x08015db1
 801a004:	20000084 	.word	0x20000084

0801a008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801a008:	b538      	push	{r3, r4, r5, lr}
 801a00a:	4605      	mov	r5, r0
 801a00c:	4c13      	ldr	r4, [pc, #76]	@ (801a05c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x54>)
 801a00e:	e8d4 3f8f 	ldab	r3, [r4]
 801a012:	07da      	lsls	r2, r3, #31
 801a014:	d40b      	bmi.n	801a02e <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x26>
 801a016:	4620      	mov	r0, r4
 801a018:	f007 fd35 	bl	8021a86 <__cxa_guard_acquire>
 801a01c:	b138      	cbz	r0, 801a02e <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x26>
 801a01e:	4620      	mov	r0, r4
 801a020:	f007 fd3d 	bl	8021a9e <__cxa_guard_release>
 801a024:	4a0e      	ldr	r2, [pc, #56]	@ (801a060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801a026:	490f      	ldr	r1, [pc, #60]	@ (801a064 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a028:	480f      	ldr	r0, [pc, #60]	@ (801a068 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801a02a:	f007 fd25 	bl	8021a78 <__aeabi_atexit>
 801a02e:	4c0f      	ldr	r4, [pc, #60]	@ (801a06c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a030:	e8d4 3f8f 	ldab	r3, [r4]
 801a034:	07db      	lsls	r3, r3, #31
 801a036:	d40b      	bmi.n	801a050 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x48>
 801a038:	4620      	mov	r0, r4
 801a03a:	f007 fd24 	bl	8021a86 <__cxa_guard_acquire>
 801a03e:	b138      	cbz	r0, 801a050 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x48>
 801a040:	4620      	mov	r0, r4
 801a042:	f007 fd2c 	bl	8021a9e <__cxa_guard_release>
 801a046:	4a06      	ldr	r2, [pc, #24]	@ (801a060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801a048:	4909      	ldr	r1, [pc, #36]	@ (801a070 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801a04a:	480a      	ldr	r0, [pc, #40]	@ (801a074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801a04c:	f007 fd14 	bl	8021a78 <__aeabi_atexit>
 801a050:	4b05      	ldr	r3, [pc, #20]	@ (801a068 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801a052:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801a054:	4b07      	ldr	r3, [pc, #28]	@ (801a074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801a056:	652b      	str	r3, [r5, #80]	@ 0x50
 801a058:	bd38      	pop	{r3, r4, r5, pc}
 801a05a:	bf00      	nop
 801a05c:	20002334 	.word	0x20002334
 801a060:	20000000 	.word	0x20000000
 801a064:	08015db7 	.word	0x08015db7
 801a068:	20000088 	.word	0x20000088
 801a06c:	20002338 	.word	0x20002338
 801a070:	08015db5 	.word	0x08015db5
 801a074:	2000008c 	.word	0x2000008c

0801a078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801a078:	b538      	push	{r3, r4, r5, lr}
 801a07a:	4605      	mov	r5, r0
 801a07c:	4c13      	ldr	r4, [pc, #76]	@ (801a0cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x54>)
 801a07e:	e8d4 3f8f 	ldab	r3, [r4]
 801a082:	07da      	lsls	r2, r3, #31
 801a084:	d40b      	bmi.n	801a09e <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x26>
 801a086:	4620      	mov	r0, r4
 801a088:	f007 fcfd 	bl	8021a86 <__cxa_guard_acquire>
 801a08c:	b138      	cbz	r0, 801a09e <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x26>
 801a08e:	4620      	mov	r0, r4
 801a090:	f007 fd05 	bl	8021a9e <__cxa_guard_release>
 801a094:	4a0e      	ldr	r2, [pc, #56]	@ (801a0d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801a096:	490f      	ldr	r1, [pc, #60]	@ (801a0d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a098:	480f      	ldr	r0, [pc, #60]	@ (801a0d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801a09a:	f007 fced 	bl	8021a78 <__aeabi_atexit>
 801a09e:	4c0f      	ldr	r4, [pc, #60]	@ (801a0dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a0a0:	e8d4 3f8f 	ldab	r3, [r4]
 801a0a4:	07db      	lsls	r3, r3, #31
 801a0a6:	d40b      	bmi.n	801a0c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x48>
 801a0a8:	4620      	mov	r0, r4
 801a0aa:	f007 fcec 	bl	8021a86 <__cxa_guard_acquire>
 801a0ae:	b138      	cbz	r0, 801a0c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x48>
 801a0b0:	4620      	mov	r0, r4
 801a0b2:	f007 fcf4 	bl	8021a9e <__cxa_guard_release>
 801a0b6:	4a06      	ldr	r2, [pc, #24]	@ (801a0d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801a0b8:	4909      	ldr	r1, [pc, #36]	@ (801a0e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801a0ba:	480a      	ldr	r0, [pc, #40]	@ (801a0e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801a0bc:	f007 fcdc 	bl	8021a78 <__aeabi_atexit>
 801a0c0:	4b05      	ldr	r3, [pc, #20]	@ (801a0d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801a0c2:	646b      	str	r3, [r5, #68]	@ 0x44
 801a0c4:	4b07      	ldr	r3, [pc, #28]	@ (801a0e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801a0c6:	64ab      	str	r3, [r5, #72]	@ 0x48
 801a0c8:	bd38      	pop	{r3, r4, r5, pc}
 801a0ca:	bf00      	nop
 801a0cc:	200022fc 	.word	0x200022fc
 801a0d0:	20000000 	.word	0x20000000
 801a0d4:	08015dbb 	.word	0x08015dbb
 801a0d8:	20000050 	.word	0x20000050
 801a0dc:	20002300 	.word	0x20002300
 801a0e0:	08015db9 	.word	0x08015db9
 801a0e4:	20000054 	.word	0x20000054

0801a0e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a0e8:	b538      	push	{r3, r4, r5, lr}
 801a0ea:	4605      	mov	r5, r0
 801a0ec:	4c13      	ldr	r4, [pc, #76]	@ (801a13c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x54>)
 801a0ee:	e8d4 3f8f 	ldab	r3, [r4]
 801a0f2:	07da      	lsls	r2, r3, #31
 801a0f4:	d40b      	bmi.n	801a10e <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x26>
 801a0f6:	4620      	mov	r0, r4
 801a0f8:	f007 fcc5 	bl	8021a86 <__cxa_guard_acquire>
 801a0fc:	b138      	cbz	r0, 801a10e <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x26>
 801a0fe:	4620      	mov	r0, r4
 801a100:	f007 fccd 	bl	8021a9e <__cxa_guard_release>
 801a104:	4a0e      	ldr	r2, [pc, #56]	@ (801a140 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a106:	490f      	ldr	r1, [pc, #60]	@ (801a144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a108:	480f      	ldr	r0, [pc, #60]	@ (801a148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a10a:	f007 fcb5 	bl	8021a78 <__aeabi_atexit>
 801a10e:	4c0f      	ldr	r4, [pc, #60]	@ (801a14c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a110:	e8d4 3f8f 	ldab	r3, [r4]
 801a114:	07db      	lsls	r3, r3, #31
 801a116:	d40b      	bmi.n	801a130 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x48>
 801a118:	4620      	mov	r0, r4
 801a11a:	f007 fcb4 	bl	8021a86 <__cxa_guard_acquire>
 801a11e:	b138      	cbz	r0, 801a130 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x48>
 801a120:	4620      	mov	r0, r4
 801a122:	f007 fcbc 	bl	8021a9e <__cxa_guard_release>
 801a126:	4a06      	ldr	r2, [pc, #24]	@ (801a140 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a128:	4909      	ldr	r1, [pc, #36]	@ (801a150 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a12a:	480a      	ldr	r0, [pc, #40]	@ (801a154 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a12c:	f007 fca4 	bl	8021a78 <__aeabi_atexit>
 801a130:	4b05      	ldr	r3, [pc, #20]	@ (801a148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a132:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801a134:	4b07      	ldr	r3, [pc, #28]	@ (801a154 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a136:	642b      	str	r3, [r5, #64]	@ 0x40
 801a138:	bd38      	pop	{r3, r4, r5, pc}
 801a13a:	bf00      	nop
 801a13c:	2000231c 	.word	0x2000231c
 801a140:	20000000 	.word	0x20000000
 801a144:	08015dbf 	.word	0x08015dbf
 801a148:	20000070 	.word	0x20000070
 801a14c:	20002320 	.word	0x20002320
 801a150:	08015dbd 	.word	0x08015dbd
 801a154:	20000074 	.word	0x20000074

0801a158 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a158:	b510      	push	{r4, lr}
 801a15a:	4604      	mov	r4, r0
 801a15c:	f7ff ff1c 	bl	8019f98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a160:	4620      	mov	r0, r4
 801a162:	f7ff ff89 	bl	801a078 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a166:	4620      	mov	r0, r4
 801a168:	f7ff ff4e 	bl	801a008 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a16c:	4620      	mov	r0, r4
 801a16e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a172:	f7ff bfb9 	b.w	801a0e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a178:	b538      	push	{r3, r4, r5, lr}
 801a17a:	4605      	mov	r5, r0
 801a17c:	4c13      	ldr	r4, [pc, #76]	@ (801a1cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x54>)
 801a17e:	e8d4 3f8f 	ldab	r3, [r4]
 801a182:	07da      	lsls	r2, r3, #31
 801a184:	d40b      	bmi.n	801a19e <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x26>
 801a186:	4620      	mov	r0, r4
 801a188:	f007 fc7d 	bl	8021a86 <__cxa_guard_acquire>
 801a18c:	b138      	cbz	r0, 801a19e <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x26>
 801a18e:	4620      	mov	r0, r4
 801a190:	f007 fc85 	bl	8021a9e <__cxa_guard_release>
 801a194:	4a0e      	ldr	r2, [pc, #56]	@ (801a1d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a196:	490f      	ldr	r1, [pc, #60]	@ (801a1d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a198:	480f      	ldr	r0, [pc, #60]	@ (801a1d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a19a:	f007 fc6d 	bl	8021a78 <__aeabi_atexit>
 801a19e:	4c0f      	ldr	r4, [pc, #60]	@ (801a1dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a1a0:	e8d4 3f8f 	ldab	r3, [r4]
 801a1a4:	07db      	lsls	r3, r3, #31
 801a1a6:	d40b      	bmi.n	801a1c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x48>
 801a1a8:	4620      	mov	r0, r4
 801a1aa:	f007 fc6c 	bl	8021a86 <__cxa_guard_acquire>
 801a1ae:	b138      	cbz	r0, 801a1c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x48>
 801a1b0:	4620      	mov	r0, r4
 801a1b2:	f007 fc74 	bl	8021a9e <__cxa_guard_release>
 801a1b6:	4a06      	ldr	r2, [pc, #24]	@ (801a1d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a1b8:	4909      	ldr	r1, [pc, #36]	@ (801a1e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a1ba:	480a      	ldr	r0, [pc, #40]	@ (801a1e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a1bc:	f007 fc5c 	bl	8021a78 <__aeabi_atexit>
 801a1c0:	4b05      	ldr	r3, [pc, #20]	@ (801a1d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a1c2:	666b      	str	r3, [r5, #100]	@ 0x64
 801a1c4:	4b07      	ldr	r3, [pc, #28]	@ (801a1e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a1c6:	66ab      	str	r3, [r5, #104]	@ 0x68
 801a1c8:	bd38      	pop	{r3, r4, r5, pc}
 801a1ca:	bf00      	nop
 801a1cc:	20002304 	.word	0x20002304
 801a1d0:	20000000 	.word	0x20000000
 801a1d4:	08015dab 	.word	0x08015dab
 801a1d8:	20000058 	.word	0x20000058
 801a1dc:	20002308 	.word	0x20002308
 801a1e0:	08015da9 	.word	0x08015da9
 801a1e4:	2000005c 	.word	0x2000005c

0801a1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a1e8:	b538      	push	{r3, r4, r5, lr}
 801a1ea:	4605      	mov	r5, r0
 801a1ec:	4c13      	ldr	r4, [pc, #76]	@ (801a23c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x54>)
 801a1ee:	e8d4 3f8f 	ldab	r3, [r4]
 801a1f2:	07da      	lsls	r2, r3, #31
 801a1f4:	d40b      	bmi.n	801a20e <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x26>
 801a1f6:	4620      	mov	r0, r4
 801a1f8:	f007 fc45 	bl	8021a86 <__cxa_guard_acquire>
 801a1fc:	b138      	cbz	r0, 801a20e <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x26>
 801a1fe:	4620      	mov	r0, r4
 801a200:	f007 fc4d 	bl	8021a9e <__cxa_guard_release>
 801a204:	4a0e      	ldr	r2, [pc, #56]	@ (801a240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a206:	490f      	ldr	r1, [pc, #60]	@ (801a244 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a208:	480f      	ldr	r0, [pc, #60]	@ (801a248 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a20a:	f007 fc35 	bl	8021a78 <__aeabi_atexit>
 801a20e:	4c0f      	ldr	r4, [pc, #60]	@ (801a24c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a210:	e8d4 3f8f 	ldab	r3, [r4]
 801a214:	07db      	lsls	r3, r3, #31
 801a216:	d40b      	bmi.n	801a230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x48>
 801a218:	4620      	mov	r0, r4
 801a21a:	f007 fc34 	bl	8021a86 <__cxa_guard_acquire>
 801a21e:	b138      	cbz	r0, 801a230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x48>
 801a220:	4620      	mov	r0, r4
 801a222:	f007 fc3c 	bl	8021a9e <__cxa_guard_release>
 801a226:	4a06      	ldr	r2, [pc, #24]	@ (801a240 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a228:	4909      	ldr	r1, [pc, #36]	@ (801a250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a22a:	480a      	ldr	r0, [pc, #40]	@ (801a254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a22c:	f007 fc24 	bl	8021a78 <__aeabi_atexit>
 801a230:	4b05      	ldr	r3, [pc, #20]	@ (801a248 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a232:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801a234:	4b07      	ldr	r3, [pc, #28]	@ (801a254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a236:	662b      	str	r3, [r5, #96]	@ 0x60
 801a238:	bd38      	pop	{r3, r4, r5, pc}
 801a23a:	bf00      	nop
 801a23c:	200022dc 	.word	0x200022dc
 801a240:	20000000 	.word	0x20000000
 801a244:	08015daf 	.word	0x08015daf
 801a248:	20000030 	.word	0x20000030
 801a24c:	200022e0 	.word	0x200022e0
 801a250:	08015dad 	.word	0x08015dad
 801a254:	20000034 	.word	0x20000034

0801a258 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a258:	b510      	push	{r4, lr}
 801a25a:	4604      	mov	r4, r0
 801a25c:	f7ff ff8c 	bl	801a178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a260:	4620      	mov	r0, r4
 801a262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a266:	f7ff bfbf 	b.w	801a1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a26c:	b538      	push	{r3, r4, r5, lr}
 801a26e:	4605      	mov	r5, r0
 801a270:	4c13      	ldr	r4, [pc, #76]	@ (801a2c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x54>)
 801a272:	e8d4 3f8f 	ldab	r3, [r4]
 801a276:	07da      	lsls	r2, r3, #31
 801a278:	d40b      	bmi.n	801a292 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x26>
 801a27a:	4620      	mov	r0, r4
 801a27c:	f007 fc03 	bl	8021a86 <__cxa_guard_acquire>
 801a280:	b138      	cbz	r0, 801a292 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x26>
 801a282:	4620      	mov	r0, r4
 801a284:	f007 fc0b 	bl	8021a9e <__cxa_guard_release>
 801a288:	4a0e      	ldr	r2, [pc, #56]	@ (801a2c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a28a:	490f      	ldr	r1, [pc, #60]	@ (801a2c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a28c:	480f      	ldr	r0, [pc, #60]	@ (801a2cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a28e:	f007 fbf3 	bl	8021a78 <__aeabi_atexit>
 801a292:	4c0f      	ldr	r4, [pc, #60]	@ (801a2d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a294:	e8d4 3f8f 	ldab	r3, [r4]
 801a298:	07db      	lsls	r3, r3, #31
 801a29a:	d40b      	bmi.n	801a2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x48>
 801a29c:	4620      	mov	r0, r4
 801a29e:	f007 fbf2 	bl	8021a86 <__cxa_guard_acquire>
 801a2a2:	b138      	cbz	r0, 801a2b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x48>
 801a2a4:	4620      	mov	r0, r4
 801a2a6:	f007 fbfa 	bl	8021a9e <__cxa_guard_release>
 801a2aa:	4a06      	ldr	r2, [pc, #24]	@ (801a2c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a2ac:	4909      	ldr	r1, [pc, #36]	@ (801a2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a2ae:	480a      	ldr	r0, [pc, #40]	@ (801a2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a2b0:	f007 fbe2 	bl	8021a78 <__aeabi_atexit>
 801a2b4:	4b05      	ldr	r3, [pc, #20]	@ (801a2cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a2b6:	676b      	str	r3, [r5, #116]	@ 0x74
 801a2b8:	4b07      	ldr	r3, [pc, #28]	@ (801a2d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a2ba:	67ab      	str	r3, [r5, #120]	@ 0x78
 801a2bc:	bd38      	pop	{r3, r4, r5, pc}
 801a2be:	bf00      	nop
 801a2c0:	200022d4 	.word	0x200022d4
 801a2c4:	20000000 	.word	0x20000000
 801a2c8:	08015da3 	.word	0x08015da3
 801a2cc:	20000028 	.word	0x20000028
 801a2d0:	200022d8 	.word	0x200022d8
 801a2d4:	08015da1 	.word	0x08015da1
 801a2d8:	2000002c 	.word	0x2000002c

0801a2dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801a2dc:	b538      	push	{r3, r4, r5, lr}
 801a2de:	4605      	mov	r5, r0
 801a2e0:	4c13      	ldr	r4, [pc, #76]	@ (801a330 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x54>)
 801a2e2:	e8d4 3f8f 	ldab	r3, [r4]
 801a2e6:	07da      	lsls	r2, r3, #31
 801a2e8:	d40b      	bmi.n	801a302 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x26>
 801a2ea:	4620      	mov	r0, r4
 801a2ec:	f007 fbcb 	bl	8021a86 <__cxa_guard_acquire>
 801a2f0:	b138      	cbz	r0, 801a302 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x26>
 801a2f2:	4620      	mov	r0, r4
 801a2f4:	f007 fbd3 	bl	8021a9e <__cxa_guard_release>
 801a2f8:	4a0e      	ldr	r2, [pc, #56]	@ (801a334 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a2fa:	490f      	ldr	r1, [pc, #60]	@ (801a338 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801a2fc:	480f      	ldr	r0, [pc, #60]	@ (801a33c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a2fe:	f007 fbbb 	bl	8021a78 <__aeabi_atexit>
 801a302:	4c0f      	ldr	r4, [pc, #60]	@ (801a340 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801a304:	e8d4 3f8f 	ldab	r3, [r4]
 801a308:	07db      	lsls	r3, r3, #31
 801a30a:	d40b      	bmi.n	801a324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x48>
 801a30c:	4620      	mov	r0, r4
 801a30e:	f007 fbba 	bl	8021a86 <__cxa_guard_acquire>
 801a312:	b138      	cbz	r0, 801a324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x48>
 801a314:	4620      	mov	r0, r4
 801a316:	f007 fbc2 	bl	8021a9e <__cxa_guard_release>
 801a31a:	4a06      	ldr	r2, [pc, #24]	@ (801a334 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801a31c:	4909      	ldr	r1, [pc, #36]	@ (801a344 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801a31e:	480a      	ldr	r0, [pc, #40]	@ (801a348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a320:	f007 fbaa 	bl	8021a78 <__aeabi_atexit>
 801a324:	4b05      	ldr	r3, [pc, #20]	@ (801a33c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801a326:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801a328:	4b07      	ldr	r3, [pc, #28]	@ (801a348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801a32a:	672b      	str	r3, [r5, #112]	@ 0x70
 801a32c:	bd38      	pop	{r3, r4, r5, pc}
 801a32e:	bf00      	nop
 801a330:	200022cc 	.word	0x200022cc
 801a334:	20000000 	.word	0x20000000
 801a338:	08015da7 	.word	0x08015da7
 801a33c:	20000020 	.word	0x20000020
 801a340:	200022d0 	.word	0x200022d0
 801a344:	08015da5 	.word	0x08015da5
 801a348:	20000024 	.word	0x20000024

0801a34c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801a34c:	b510      	push	{r4, lr}
 801a34e:	4604      	mov	r4, r0
 801a350:	f7ff ff8c 	bl	801a26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801a354:	4620      	mov	r0, r4
 801a356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a35a:	f7ff bfbf 	b.w	801a2dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801a35e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801a35e:	b510      	push	{r4, lr}
 801a360:	4604      	mov	r4, r0
 801a362:	f7ff fff3 	bl	801a34c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801a366:	4620      	mov	r0, r4
 801a368:	f7ff ff76 	bl	801a258 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801a36c:	4620      	mov	r0, r4
 801a36e:	f7ff fe09 	bl	8019f84 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801a372:	4620      	mov	r0, r4
 801a374:	f7ff fd12 	bl	8019d9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801a378:	4620      	mov	r0, r4
 801a37a:	f7ff fd89 	bl	8019e90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801a37e:	4620      	mov	r0, r4
 801a380:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a384:	f7ff bee8 	b.w	801a158 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801a388 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801a388:	b538      	push	{r3, r4, r5, lr}
 801a38a:	4605      	mov	r5, r0
 801a38c:	4c09      	ldr	r4, [pc, #36]	@ (801a3b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x2c>)
 801a38e:	e8d4 3f8f 	ldab	r3, [r4]
 801a392:	07db      	lsls	r3, r3, #31
 801a394:	d40b      	bmi.n	801a3ae <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x26>
 801a396:	4620      	mov	r0, r4
 801a398:	f007 fb75 	bl	8021a86 <__cxa_guard_acquire>
 801a39c:	b138      	cbz	r0, 801a3ae <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x26>
 801a39e:	4620      	mov	r0, r4
 801a3a0:	f007 fb7d 	bl	8021a9e <__cxa_guard_release>
 801a3a4:	4a04      	ldr	r2, [pc, #16]	@ (801a3b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801a3a6:	4905      	ldr	r1, [pc, #20]	@ (801a3bc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801a3a8:	4805      	ldr	r0, [pc, #20]	@ (801a3c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a3aa:	f007 fb65 	bl	8021a78 <__aeabi_atexit>
 801a3ae:	4b04      	ldr	r3, [pc, #16]	@ (801a3c0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a3b0:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801a3b2:	bd38      	pop	{r3, r4, r5, pc}
 801a3b4:	200022c0 	.word	0x200022c0
 801a3b8:	20000000 	.word	0x20000000
 801a3bc:	08015d9f 	.word	0x08015d9f
 801a3c0:	20000018 	.word	0x20000018

0801a3c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801a3c4:	b538      	push	{r3, r4, r5, lr}
 801a3c6:	4605      	mov	r5, r0
 801a3c8:	4c0a      	ldr	r4, [pc, #40]	@ (801a3f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801a3ca:	e8d4 3f8f 	ldab	r3, [r4]
 801a3ce:	07db      	lsls	r3, r3, #31
 801a3d0:	d40b      	bmi.n	801a3ea <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x26>
 801a3d2:	4620      	mov	r0, r4
 801a3d4:	f007 fb57 	bl	8021a86 <__cxa_guard_acquire>
 801a3d8:	b138      	cbz	r0, 801a3ea <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x26>
 801a3da:	4620      	mov	r0, r4
 801a3dc:	f007 fb5f 	bl	8021a9e <__cxa_guard_release>
 801a3e0:	4a05      	ldr	r2, [pc, #20]	@ (801a3f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801a3e2:	4906      	ldr	r1, [pc, #24]	@ (801a3fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801a3e4:	4806      	ldr	r0, [pc, #24]	@ (801a400 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a3e6:	f007 fb47 	bl	8021a78 <__aeabi_atexit>
 801a3ea:	4b05      	ldr	r3, [pc, #20]	@ (801a400 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a3ec:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801a3f0:	bd38      	pop	{r3, r4, r5, pc}
 801a3f2:	bf00      	nop
 801a3f4:	200022c4 	.word	0x200022c4
 801a3f8:	20000000 	.word	0x20000000
 801a3fc:	08015d9d 	.word	0x08015d9d
 801a400:	2000001c 	.word	0x2000001c

0801a404 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801a404:	b570      	push	{r4, r5, r6, lr}
 801a406:	4606      	mov	r6, r0
 801a408:	4d0b      	ldr	r5, [pc, #44]	@ (801a438 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x34>)
 801a40a:	e8d5 3f8f 	ldab	r3, [r5]
 801a40e:	f013 0f01 	tst.w	r3, #1
 801a412:	4c0a      	ldr	r4, [pc, #40]	@ (801a43c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801a414:	d10d      	bne.n	801a432 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x2e>
 801a416:	4628      	mov	r0, r5
 801a418:	f007 fb35 	bl	8021a86 <__cxa_guard_acquire>
 801a41c:	b148      	cbz	r0, 801a432 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x2e>
 801a41e:	4b08      	ldr	r3, [pc, #32]	@ (801a440 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801a420:	4628      	mov	r0, r5
 801a422:	6023      	str	r3, [r4, #0]
 801a424:	f007 fb3b 	bl	8021a9e <__cxa_guard_release>
 801a428:	4a06      	ldr	r2, [pc, #24]	@ (801a444 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801a42a:	4907      	ldr	r1, [pc, #28]	@ (801a448 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801a42c:	4620      	mov	r0, r4
 801a42e:	f007 fb23 	bl	8021a78 <__aeabi_atexit>
 801a432:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801a436:	bd70      	pop	{r4, r5, r6, pc}
 801a438:	200022c8 	.word	0x200022c8
 801a43c:	20002440 	.word	0x20002440
 801a440:	08024d18 	.word	0x08024d18
 801a444:	20000000 	.word	0x20000000
 801a448:	08015d9b 	.word	0x08015d9b

0801a44c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801a44c:	b510      	push	{r4, lr}
 801a44e:	4604      	mov	r4, r0
 801a450:	f7ff ff9a 	bl	801a388 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801a454:	4620      	mov	r0, r4
 801a456:	f7ff ffb5 	bl	801a3c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801a45a:	4620      	mov	r0, r4
 801a45c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a460:	f7ff bfd0 	b.w	801a404 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801a464 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801a464:	b570      	push	{r4, r5, r6, lr}
 801a466:	4606      	mov	r6, r0
 801a468:	4d0b      	ldr	r5, [pc, #44]	@ (801a498 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x34>)
 801a46a:	e8d5 3f8f 	ldab	r3, [r5]
 801a46e:	f013 0f01 	tst.w	r3, #1
 801a472:	4c0a      	ldr	r4, [pc, #40]	@ (801a49c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801a474:	d10d      	bne.n	801a492 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x2e>
 801a476:	4628      	mov	r0, r5
 801a478:	f007 fb05 	bl	8021a86 <__cxa_guard_acquire>
 801a47c:	b148      	cbz	r0, 801a492 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x2e>
 801a47e:	4b08      	ldr	r3, [pc, #32]	@ (801a4a0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801a480:	4628      	mov	r0, r5
 801a482:	6023      	str	r3, [r4, #0]
 801a484:	f007 fb0b 	bl	8021a9e <__cxa_guard_release>
 801a488:	4a06      	ldr	r2, [pc, #24]	@ (801a4a4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801a48a:	4907      	ldr	r1, [pc, #28]	@ (801a4a8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801a48c:	4620      	mov	r0, r4
 801a48e:	f007 faf3 	bl	8021a78 <__aeabi_atexit>
 801a492:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801a496:	bd70      	pop	{r4, r5, r6, pc}
 801a498:	200022bc 	.word	0x200022bc
 801a49c:	2000233c 	.word	0x2000233c
 801a4a0:	08024d34 	.word	0x08024d34
 801a4a4:	20000000 	.word	0x20000000
 801a4a8:	08015d99 	.word	0x08015d99

0801a4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a4ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4b0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801a4b4:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801a4b8:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a4bc:	2d00      	cmp	r5, #0
 801a4be:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801a4c2:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801a4c6:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801a4ca:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801a4ce:	eb02 0a0c 	add.w	sl, r2, ip
 801a4d2:	8808      	ldrh	r0, [r1, #0]
 801a4d4:	f2c0 80b0 	blt.w	801a638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a4d8:	45ab      	cmp	fp, r5
 801a4da:	f340 80ad 	ble.w	801a638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a4de:	2c00      	cmp	r4, #0
 801a4e0:	f2c0 80a8 	blt.w	801a634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a4e4:	45a6      	cmp	lr, r4
 801a4e6:	f340 80a5 	ble.w	801a634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a4ea:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a4ee:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a4f2:	1c62      	adds	r2, r4, #1
 801a4f4:	f100 80a3 	bmi.w	801a63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a4f8:	4596      	cmp	lr, r2
 801a4fa:	f340 80a0 	ble.w	801a63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a4fe:	f1b9 0f00 	cmp.w	r9, #0
 801a502:	f000 809c 	beq.w	801a63e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a506:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a50a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a50e:	3501      	adds	r5, #1
 801a510:	f100 8099 	bmi.w	801a646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a514:	45ab      	cmp	fp, r5
 801a516:	f340 8096 	ble.w	801a646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a51a:	2f00      	cmp	r7, #0
 801a51c:	f000 8093 	beq.w	801a646 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a520:	2c00      	cmp	r4, #0
 801a522:	f2c0 808e 	blt.w	801a642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a526:	45a6      	cmp	lr, r4
 801a528:	f340 808b 	ble.w	801a642 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a52c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a530:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a534:	3401      	adds	r4, #1
 801a536:	f100 8089 	bmi.w	801a64c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a53a:	45a6      	cmp	lr, r4
 801a53c:	f340 8086 	ble.w	801a64c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a540:	f1b9 0f00 	cmp.w	r9, #0
 801a544:	f000 8082 	beq.w	801a64c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a548:	44d6      	add	lr, sl
 801a54a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a54e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a552:	fb19 fe07 	smulbb	lr, r9, r7
 801a556:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a55a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a55e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801a562:	ea44 0808 	orr.w	r8, r4, r8
 801a566:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a56a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a56e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801a572:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a576:	ea44 0c0c 	orr.w	ip, r4, ip
 801a57a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a57e:	fb04 f40c 	mul.w	r4, r4, ip
 801a582:	f1c7 0210 	rsb	r2, r7, #16
 801a586:	eba2 0209 	sub.w	r2, r2, r9
 801a58a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a58e:	fb02 4808 	mla	r8, r2, r8, r4
 801a592:	b2b4      	uxth	r4, r6
 801a594:	43f6      	mvns	r6, r6
 801a596:	041a      	lsls	r2, r3, #16
 801a598:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a59c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a5a0:	4313      	orrs	r3, r2
 801a5a2:	fb0e 8303 	mla	r3, lr, r3, r8
 801a5a6:	042a      	lsls	r2, r5, #16
 801a5a8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801a5ac:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801a5b0:	432a      	orrs	r2, r5
 801a5b2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a5b6:	fb07 3202 	mla	r2, r7, r2, r3
 801a5ba:	0d53      	lsrs	r3, r2, #21
 801a5bc:	0952      	lsrs	r2, r2, #5
 801a5be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a5c2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a5c6:	431a      	orrs	r2, r3
 801a5c8:	b293      	uxth	r3, r2
 801a5ca:	1202      	asrs	r2, r0, #8
 801a5cc:	b2f6      	uxtb	r6, r6
 801a5ce:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a5d2:	fb12 f206 	smulbb	r2, r2, r6
 801a5d6:	10c7      	asrs	r7, r0, #3
 801a5d8:	00c0      	lsls	r0, r0, #3
 801a5da:	b2c0      	uxtb	r0, r0
 801a5dc:	121d      	asrs	r5, r3, #8
 801a5de:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a5e2:	fb10 f006 	smulbb	r0, r0, r6
 801a5e6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a5ea:	fb17 f706 	smulbb	r7, r7, r6
 801a5ee:	fb05 2504 	mla	r5, r5, r4, r2
 801a5f2:	10da      	asrs	r2, r3, #3
 801a5f4:	00db      	lsls	r3, r3, #3
 801a5f6:	b2db      	uxtb	r3, r3
 801a5f8:	fb03 0004 	mla	r0, r3, r4, r0
 801a5fc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a600:	fb02 7204 	mla	r2, r2, r4, r7
 801a604:	b2ad      	uxth	r5, r5
 801a606:	b280      	uxth	r0, r0
 801a608:	1c6b      	adds	r3, r5, #1
 801a60a:	b292      	uxth	r2, r2
 801a60c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a610:	1c43      	adds	r3, r0, #1
 801a612:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a616:	1c50      	adds	r0, r2, #1
 801a618:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a61c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a620:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a624:	0952      	lsrs	r2, r2, #5
 801a626:	432b      	orrs	r3, r5
 801a628:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a62c:	4313      	orrs	r3, r2
 801a62e:	800b      	strh	r3, [r1, #0]
 801a630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a634:	4680      	mov	r8, r0
 801a636:	e75c      	b.n	801a4f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a638:	4684      	mov	ip, r0
 801a63a:	4680      	mov	r8, r0
 801a63c:	e767      	b.n	801a50e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a63e:	4684      	mov	ip, r0
 801a640:	e765      	b.n	801a50e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a642:	4605      	mov	r5, r0
 801a644:	e776      	b.n	801a534 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a646:	4603      	mov	r3, r0
 801a648:	4605      	mov	r5, r0
 801a64a:	e782      	b.n	801a552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a64c:	4603      	mov	r3, r0
 801a64e:	e780      	b.n	801a552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a654:	b099      	sub	sp, #100	@ 0x64
 801a656:	9215      	str	r2, [sp, #84]	@ 0x54
 801a658:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801a65a:	9016      	str	r0, [sp, #88]	@ 0x58
 801a65c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a65e:	6850      	ldr	r0, [r2, #4]
 801a660:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801a664:	910c      	str	r1, [sp, #48]	@ 0x30
 801a666:	930d      	str	r3, [sp, #52]	@ 0x34
 801a668:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801a66c:	fb00 1303 	mla	r3, r0, r3, r1
 801a670:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801a674:	6812      	ldr	r2, [r2, #0]
 801a676:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801a67a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a67c:	681b      	ldr	r3, [r3, #0]
 801a67e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a680:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a682:	685e      	ldr	r6, [r3, #4]
 801a684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a686:	3604      	adds	r6, #4
 801a688:	43db      	mvns	r3, r3
 801a68a:	b2db      	uxtb	r3, r3
 801a68c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a68e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a690:	2b00      	cmp	r3, #0
 801a692:	dc03      	bgt.n	801a69c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a694:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801a696:	2b00      	cmp	r3, #0
 801a698:	f340 8225 	ble.w	801aae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a69c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a69e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a6a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a6a6:	1e48      	subs	r0, r1, #1
 801a6a8:	1e57      	subs	r7, r2, #1
 801a6aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a6ac:	2b00      	cmp	r3, #0
 801a6ae:	f340 80e3 	ble.w	801a878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a6b2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801a6b6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a6ba:	d406      	bmi.n	801a6ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a6bc:	4584      	cmp	ip, r0
 801a6be:	da04      	bge.n	801a6ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a6c0:	2b00      	cmp	r3, #0
 801a6c2:	db02      	blt.n	801a6ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a6c4:	42bb      	cmp	r3, r7
 801a6c6:	f2c0 80d8 	blt.w	801a87a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a6ca:	f11c 0c01 	adds.w	ip, ip, #1
 801a6ce:	f100 80c9 	bmi.w	801a864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a6d2:	4561      	cmp	r1, ip
 801a6d4:	f2c0 80c6 	blt.w	801a864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a6d8:	3301      	adds	r3, #1
 801a6da:	f100 80c3 	bmi.w	801a864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a6de:	429a      	cmp	r2, r3
 801a6e0:	f2c0 80c0 	blt.w	801a864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a6e4:	4647      	mov	r7, r8
 801a6e6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a6ea:	f1bb 0f00 	cmp.w	fp, #0
 801a6ee:	f340 80e3 	ble.w	801a8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a6f2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801a6f4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a6f6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a6fa:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a6fe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a702:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a706:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a70a:	689b      	ldr	r3, [r3, #8]
 801a70c:	f100 8121 	bmi.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a710:	f103 39ff 	add.w	r9, r3, #4294967295
 801a714:	454a      	cmp	r2, r9
 801a716:	f280 811c 	bge.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a71a:	f1bc 0f00 	cmp.w	ip, #0
 801a71e:	f2c0 8118 	blt.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a722:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a726:	45cc      	cmp	ip, r9
 801a728:	f280 8113 	bge.w	801a952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a72c:	b21b      	sxth	r3, r3
 801a72e:	fb0c 2203 	mla	r2, ip, r3, r2
 801a732:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a734:	eb04 0902 	add.w	r9, r4, r2
 801a738:	5ca2      	ldrb	r2, [r4, r2]
 801a73a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a73e:	2800      	cmp	r0, #0
 801a740:	f000 80fe 	beq.w	801a940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a744:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a748:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a74c:	9211      	str	r2, [sp, #68]	@ 0x44
 801a74e:	b151      	cbz	r1, 801a766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a750:	eb09 0203 	add.w	r2, r9, r3
 801a754:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a758:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a75c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a75e:	7853      	ldrb	r3, [r2, #1]
 801a760:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a764:	9312      	str	r3, [sp, #72]	@ 0x48
 801a766:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a768:	fb10 f201 	smulbb	r2, r0, r1
 801a76c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a770:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a774:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a778:	ea4c 0c03 	orr.w	ip, ip, r3
 801a77c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a77e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a780:	041b      	lsls	r3, r3, #16
 801a782:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801a786:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a78a:	10d2      	asrs	r2, r2, #3
 801a78c:	4323      	orrs	r3, r4
 801a78e:	4353      	muls	r3, r2
 801a790:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a794:	fb09 330c 	mla	r3, r9, ip, r3
 801a798:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a79c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a7a0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801a7a4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a7a8:	f1c1 0c10 	rsb	ip, r1, #16
 801a7ac:	ebac 0c00 	sub.w	ip, ip, r0
 801a7b0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a7b4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a7b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a7ba:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a7be:	0418      	lsls	r0, r3, #16
 801a7c0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801a7c4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a7c8:	4318      	orrs	r0, r3
 801a7ca:	fb02 c200 	mla	r2, r2, r0, ip
 801a7ce:	8838      	ldrh	r0, [r7, #0]
 801a7d0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a7d2:	0d53      	lsrs	r3, r2, #21
 801a7d4:	1201      	asrs	r1, r0, #8
 801a7d6:	0952      	lsrs	r2, r2, #5
 801a7d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a7dc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801a7e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a7e4:	431a      	orrs	r2, r3
 801a7e6:	fb11 f104 	smulbb	r1, r1, r4
 801a7ea:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a7ee:	00c0      	lsls	r0, r0, #3
 801a7f0:	b292      	uxth	r2, r2
 801a7f2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801a7f6:	b2c0      	uxtb	r0, r0
 801a7f8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801a7fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a800:	fb1e fe04 	smulbb	lr, lr, r4
 801a804:	fb10 f004 	smulbb	r0, r0, r4
 801a808:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a80c:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a810:	10d1      	asrs	r1, r2, #3
 801a812:	00d2      	lsls	r2, r2, #3
 801a814:	b2d2      	uxtb	r2, r2
 801a816:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a81a:	fb01 e103 	mla	r1, r1, r3, lr
 801a81e:	fb02 0303 	mla	r3, r2, r3, r0
 801a822:	fa1f fc8c 	uxth.w	ip, ip
 801a826:	b29a      	uxth	r2, r3
 801a828:	f10c 0301 	add.w	r3, ip, #1
 801a82c:	b289      	uxth	r1, r1
 801a82e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a832:	1c53      	adds	r3, r2, #1
 801a834:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a838:	1c4a      	adds	r2, r1, #1
 801a83a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a83e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a842:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a846:	0949      	lsrs	r1, r1, #5
 801a848:	ea43 030c 	orr.w	r3, r3, ip
 801a84c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801a850:	430b      	orrs	r3, r1
 801a852:	803b      	strh	r3, [r7, #0]
 801a854:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a856:	3702      	adds	r7, #2
 801a858:	449a      	add	sl, r3
 801a85a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a85c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a860:	441d      	add	r5, r3
 801a862:	e742      	b.n	801a6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a864:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801a866:	f108 0802 	add.w	r8, r8, #2
 801a86a:	449a      	add	sl, r3
 801a86c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a86e:	441d      	add	r5, r3
 801a870:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a872:	3b01      	subs	r3, #1
 801a874:	9309      	str	r3, [sp, #36]	@ 0x24
 801a876:	e718      	b.n	801a6aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a878:	d023      	beq.n	801a8c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a87a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a87c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801a87e:	3b01      	subs	r3, #1
 801a880:	fb00 a003 	mla	r0, r0, r3, sl
 801a884:	1400      	asrs	r0, r0, #16
 801a886:	f53f af2d 	bmi.w	801a6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a88a:	3901      	subs	r1, #1
 801a88c:	4288      	cmp	r0, r1
 801a88e:	f6bf af29 	bge.w	801a6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a892:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801a894:	fb01 5303 	mla	r3, r1, r3, r5
 801a898:	141b      	asrs	r3, r3, #16
 801a89a:	f53f af23 	bmi.w	801a6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a89e:	3a01      	subs	r2, #1
 801a8a0:	4293      	cmp	r3, r2
 801a8a2:	f6bf af1f 	bge.w	801a6e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a8a6:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801a8aa:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801a8ae:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801a8b2:	f1be 0f00 	cmp.w	lr, #0
 801a8b6:	dc6c      	bgt.n	801a992 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a8b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a8ba:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a8be:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a8c2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a8c4:	2b00      	cmp	r3, #0
 801a8c6:	f340 810e 	ble.w	801aae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a8ca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a8ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a8d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a8d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a8da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a8de:	eef0 6a62 	vmov.f32	s13, s5
 801a8e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a8e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a8ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a8ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a8f6:	ee16 aa90 	vmov	sl, s13
 801a8fa:	eef0 6a43 	vmov.f32	s13, s6
 801a8fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a902:	ee12 2a90 	vmov	r2, s5
 801a906:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a90a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a90c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a910:	fb92 f3f3 	sdiv	r3, r2, r3
 801a914:	ee13 2a10 	vmov	r2, s6
 801a918:	9325      	str	r3, [sp, #148]	@ 0x94
 801a91a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a91c:	ee16 5a90 	vmov	r5, s13
 801a920:	fb92 f3f3 	sdiv	r3, r2, r3
 801a924:	9326      	str	r3, [sp, #152]	@ 0x98
 801a926:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a928:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801a92a:	3b01      	subs	r3, #1
 801a92c:	930c      	str	r3, [sp, #48]	@ 0x30
 801a92e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801a930:	bf08      	it	eq
 801a932:	4613      	moveq	r3, r2
 801a934:	eeb0 3a67 	vmov.f32	s6, s15
 801a938:	9309      	str	r3, [sp, #36]	@ 0x24
 801a93a:	eef0 2a47 	vmov.f32	s5, s14
 801a93e:	e6a6      	b.n	801a68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a940:	2900      	cmp	r1, #0
 801a942:	f43f af10 	beq.w	801a766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a946:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a94a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a94e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a950:	e709      	b.n	801a766 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a952:	f112 0901 	adds.w	r9, r2, #1
 801a956:	f53f af7d 	bmi.w	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a95a:	454b      	cmp	r3, r9
 801a95c:	f6ff af7a 	blt.w	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a960:	f11c 0901 	adds.w	r9, ip, #1
 801a964:	f53f af76 	bmi.w	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a968:	45ce      	cmp	lr, r9
 801a96a:	f6ff af73 	blt.w	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a96e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a970:	9202      	str	r2, [sp, #8]
 801a972:	b21b      	sxth	r3, r3
 801a974:	fa0f f28e 	sxth.w	r2, lr
 801a978:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a97c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a980:	9201      	str	r2, [sp, #4]
 801a982:	9300      	str	r3, [sp, #0]
 801a984:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a986:	4633      	mov	r3, r6
 801a988:	4639      	mov	r1, r7
 801a98a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801a98c:	f7ff fd8e 	bl	801a4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a990:	e760      	b.n	801a854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a992:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a994:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a998:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a99c:	1429      	asrs	r1, r5, #16
 801a99e:	fb03 2101 	mla	r1, r3, r1, r2
 801a9a2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a9a4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a9a6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a9aa:	440a      	add	r2, r1
 801a9ac:	5c61      	ldrb	r1, [r4, r1]
 801a9ae:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a9b2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a9b6:	f1bc 0f00 	cmp.w	ip, #0
 801a9ba:	f000 808c 	beq.w	801aad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a9be:	7857      	ldrb	r7, [r2, #1]
 801a9c0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a9c4:	9413      	str	r4, [sp, #76]	@ 0x4c
 801a9c6:	b140      	cbz	r0, 801a9da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a9c8:	18d7      	adds	r7, r2, r3
 801a9ca:	5cd3      	ldrb	r3, [r2, r3]
 801a9cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a9d0:	9310      	str	r3, [sp, #64]	@ 0x40
 801a9d2:	787b      	ldrb	r3, [r7, #1]
 801a9d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a9d8:	9314      	str	r3, [sp, #80]	@ 0x50
 801a9da:	fb1c f200 	smulbb	r2, ip, r0
 801a9de:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a9e0:	10d2      	asrs	r2, r2, #3
 801a9e2:	041f      	lsls	r7, r3, #16
 801a9e4:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801a9e8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a9ec:	431f      	orrs	r7, r3
 801a9ee:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a9f2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801a9f4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801a9f6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a9f8:	041b      	lsls	r3, r3, #16
 801a9fa:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801a9fe:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aa02:	ea43 030b 	orr.w	r3, r3, fp
 801aa06:	4353      	muls	r3, r2
 801aa08:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801aa0a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801aa0e:	fb04 3707 	mla	r7, r4, r7, r3
 801aa12:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801aa16:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801aa1a:	ea43 0b01 	orr.w	fp, r3, r1
 801aa1e:	f1c0 0110 	rsb	r1, r0, #16
 801aa22:	eba1 0c0c 	sub.w	ip, r1, ip
 801aa26:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801aa2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801aa2c:	fb0c 770b 	mla	r7, ip, fp, r7
 801aa30:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801aa34:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801aa38:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801aa3c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801aa40:	ea4c 0c0b 	orr.w	ip, ip, fp
 801aa44:	fb02 770c 	mla	r7, r2, ip, r7
 801aa48:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801aa4a:	0d79      	lsrs	r1, r7, #21
 801aa4c:	8812      	ldrh	r2, [r2, #0]
 801aa4e:	097f      	lsrs	r7, r7, #5
 801aa50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aa54:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801aa58:	430f      	orrs	r7, r1
 801aa5a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801aa5c:	1211      	asrs	r1, r2, #8
 801aa5e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801aa62:	b2bb      	uxth	r3, r7
 801aa64:	fb11 f104 	smulbb	r1, r1, r4
 801aa68:	10d7      	asrs	r7, r2, #3
 801aa6a:	00d2      	lsls	r2, r2, #3
 801aa6c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801aa70:	b2d2      	uxtb	r2, r2
 801aa72:	1218      	asrs	r0, r3, #8
 801aa74:	fb17 f704 	smulbb	r7, r7, r4
 801aa78:	fb12 f204 	smulbb	r2, r2, r4
 801aa7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801aa80:	fb00 1009 	mla	r0, r0, r9, r1
 801aa84:	10d9      	asrs	r1, r3, #3
 801aa86:	00db      	lsls	r3, r3, #3
 801aa88:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801aa8c:	b2db      	uxtb	r3, r3
 801aa8e:	fb01 7109 	mla	r1, r1, r9, r7
 801aa92:	fb03 2309 	mla	r3, r3, r9, r2
 801aa96:	b280      	uxth	r0, r0
 801aa98:	b29b      	uxth	r3, r3
 801aa9a:	b289      	uxth	r1, r1
 801aa9c:	1c42      	adds	r2, r0, #1
 801aa9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801aaa2:	1c4f      	adds	r7, r1, #1
 801aaa4:	1c5a      	adds	r2, r3, #1
 801aaa6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801aaaa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801aaae:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801aab2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aab6:	0949      	lsrs	r1, r1, #5
 801aab8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aaba:	4310      	orrs	r0, r2
 801aabc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801aac0:	4308      	orrs	r0, r1
 801aac2:	f823 0b02 	strh.w	r0, [r3], #2
 801aac6:	930e      	str	r3, [sp, #56]	@ 0x38
 801aac8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801aaca:	f10e 3eff 	add.w	lr, lr, #4294967295
 801aace:	449a      	add	sl, r3
 801aad0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801aad2:	441d      	add	r5, r3
 801aad4:	e6ed      	b.n	801a8b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801aad6:	2800      	cmp	r0, #0
 801aad8:	f43f af7f 	beq.w	801a9da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aadc:	5cd3      	ldrb	r3, [r2, r3]
 801aade:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aae2:	9310      	str	r3, [sp, #64]	@ 0x40
 801aae4:	e779      	b.n	801a9da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aae6:	b019      	add	sp, #100	@ 0x64
 801aae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aaec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801aaec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aaf0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801aaf4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801aaf8:	fb08 470e 	mla	r7, r8, lr, r4
 801aafc:	f1b8 0f00 	cmp.w	r8, #0
 801ab00:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801ab04:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801ab08:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801ab0c:	eb02 0907 	add.w	r9, r2, r7
 801ab10:	8808      	ldrh	r0, [r1, #0]
 801ab12:	db67      	blt.n	801abe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ab14:	45c2      	cmp	sl, r8
 801ab16:	dd65      	ble.n	801abe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ab18:	2c00      	cmp	r4, #0
 801ab1a:	db61      	blt.n	801abe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ab1c:	45a6      	cmp	lr, r4
 801ab1e:	dd5f      	ble.n	801abe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ab20:	5dd2      	ldrb	r2, [r2, r7]
 801ab22:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ab26:	1c62      	adds	r2, r4, #1
 801ab28:	d45f      	bmi.n	801abea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ab2a:	4596      	cmp	lr, r2
 801ab2c:	dd5d      	ble.n	801abea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ab2e:	2d00      	cmp	r5, #0
 801ab30:	d05b      	beq.n	801abea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ab32:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ab36:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ab3a:	f118 0801 	adds.w	r8, r8, #1
 801ab3e:	d458      	bmi.n	801abf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ab40:	45c2      	cmp	sl, r8
 801ab42:	dd56      	ble.n	801abf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ab44:	2e00      	cmp	r6, #0
 801ab46:	d054      	beq.n	801abf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ab48:	2c00      	cmp	r4, #0
 801ab4a:	db50      	blt.n	801abee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ab4c:	45a6      	cmp	lr, r4
 801ab4e:	dd4e      	ble.n	801abee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ab50:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ab54:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801ab58:	3401      	adds	r4, #1
 801ab5a:	d407      	bmi.n	801ab6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ab5c:	45a6      	cmp	lr, r4
 801ab5e:	dd05      	ble.n	801ab6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ab60:	b125      	cbz	r5, 801ab6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ab62:	44ce      	add	lr, r9
 801ab64:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ab68:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ab6c:	fb15 f406 	smulbb	r4, r5, r6
 801ab70:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ab74:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ab78:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ab7c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ab80:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ab84:	ea43 0c0c 	orr.w	ip, r3, ip
 801ab88:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801ab8c:	f1c6 0310 	rsb	r3, r6, #16
 801ab90:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ab94:	1b5b      	subs	r3, r3, r5
 801ab96:	ea4e 0707 	orr.w	r7, lr, r7
 801ab9a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ab9e:	437d      	muls	r5, r7
 801aba0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aba4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801aba8:	0403      	lsls	r3, r0, #16
 801abaa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801abae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801abb2:	4318      	orrs	r0, r3
 801abb4:	fb04 c000 	mla	r0, r4, r0, ip
 801abb8:	0413      	lsls	r3, r2, #16
 801abba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801abbe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801abc2:	4313      	orrs	r3, r2
 801abc4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801abc8:	fb06 0003 	mla	r0, r6, r3, r0
 801abcc:	0d43      	lsrs	r3, r0, #21
 801abce:	0940      	lsrs	r0, r0, #5
 801abd0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801abd4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801abd8:	4318      	orrs	r0, r3
 801abda:	8008      	strh	r0, [r1, #0]
 801abdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801abe0:	4684      	mov	ip, r0
 801abe2:	e7a0      	b.n	801ab26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801abe4:	4607      	mov	r7, r0
 801abe6:	4684      	mov	ip, r0
 801abe8:	e7a7      	b.n	801ab3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801abea:	4607      	mov	r7, r0
 801abec:	e7a5      	b.n	801ab3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801abee:	4602      	mov	r2, r0
 801abf0:	e7b2      	b.n	801ab58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801abf2:	4602      	mov	r2, r0
 801abf4:	e7ba      	b.n	801ab6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801abf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abf6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801abfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abfe:	b093      	sub	sp, #76	@ 0x4c
 801ac00:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ac02:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ac04:	9010      	str	r0, [sp, #64]	@ 0x40
 801ac06:	6850      	ldr	r0, [r2, #4]
 801ac08:	9108      	str	r1, [sp, #32]
 801ac0a:	9306      	str	r3, [sp, #24]
 801ac0c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ac10:	fb00 1303 	mla	r3, r0, r3, r1
 801ac14:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ac18:	6812      	ldr	r2, [r2, #0]
 801ac1a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ac1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac20:	681b      	ldr	r3, [r3, #0]
 801ac22:	9307      	str	r3, [sp, #28]
 801ac24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac26:	685f      	ldr	r7, [r3, #4]
 801ac28:	3704      	adds	r7, #4
 801ac2a:	9b08      	ldr	r3, [sp, #32]
 801ac2c:	2b00      	cmp	r3, #0
 801ac2e:	dc03      	bgt.n	801ac38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ac30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ac32:	2b00      	cmp	r3, #0
 801ac34:	f340 81b2 	ble.w	801af9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ac38:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac42:	1e48      	subs	r0, r1, #1
 801ac44:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac48:	9b06      	ldr	r3, [sp, #24]
 801ac4a:	2b00      	cmp	r3, #0
 801ac4c:	f340 80a9 	ble.w	801ada2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ac50:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ac54:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ac58:	d406      	bmi.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac5a:	4586      	cmp	lr, r0
 801ac5c:	da04      	bge.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac5e:	2b00      	cmp	r3, #0
 801ac60:	db02      	blt.n	801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac62:	4563      	cmp	r3, ip
 801ac64:	f2c0 809e 	blt.w	801ada4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ac68:	f11e 0e01 	adds.w	lr, lr, #1
 801ac6c:	f100 808f 	bmi.w	801ad8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ac70:	4571      	cmp	r1, lr
 801ac72:	f2c0 808c 	blt.w	801ad8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ac76:	3301      	adds	r3, #1
 801ac78:	f100 8089 	bmi.w	801ad8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ac7c:	429a      	cmp	r2, r3
 801ac7e:	f2c0 8086 	blt.w	801ad8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ac82:	46c8      	mov	r8, r9
 801ac84:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ac88:	f1bb 0f00 	cmp.w	fp, #0
 801ac8c:	f340 80a6 	ble.w	801addc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ac90:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801ac92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ac94:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ac98:	1422      	asrs	r2, r4, #16
 801ac9a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ac9e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801aca2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801aca6:	689b      	ldr	r3, [r3, #8]
 801aca8:	f100 80e3 	bmi.w	801ae72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801acac:	f103 3aff 	add.w	sl, r3, #4294967295
 801acb0:	4552      	cmp	r2, sl
 801acb2:	f280 80de 	bge.w	801ae72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801acb6:	f1bc 0f00 	cmp.w	ip, #0
 801acba:	f2c0 80da 	blt.w	801ae72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801acbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 801acc2:	45d4      	cmp	ip, sl
 801acc4:	f280 80d5 	bge.w	801ae72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801acc8:	b21b      	sxth	r3, r3
 801acca:	fb0c 2203 	mla	r2, ip, r3, r2
 801acce:	9d07      	ldr	r5, [sp, #28]
 801acd0:	eb05 0a02 	add.w	sl, r5, r2
 801acd4:	5caa      	ldrb	r2, [r5, r2]
 801acd6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801acda:	2800      	cmp	r0, #0
 801acdc:	f000 80c0 	beq.w	801ae60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ace0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ace4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ace8:	920b      	str	r2, [sp, #44]	@ 0x2c
 801acea:	b151      	cbz	r1, 801ad02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801acec:	eb0a 0203 	add.w	r2, sl, r3
 801acf0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801acf4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801acf8:	9309      	str	r3, [sp, #36]	@ 0x24
 801acfa:	7853      	ldrb	r3, [r2, #1]
 801acfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ad00:	930c      	str	r3, [sp, #48]	@ 0x30
 801ad02:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ad04:	fb10 f201 	smulbb	r2, r0, r1
 801ad08:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ad0c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ad10:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ad14:	ea4c 0c03 	orr.w	ip, ip, r3
 801ad18:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ad1a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ad1c:	041b      	lsls	r3, r3, #16
 801ad1e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ad22:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ad26:	10d2      	asrs	r2, r2, #3
 801ad28:	432b      	orrs	r3, r5
 801ad2a:	4353      	muls	r3, r2
 801ad2c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ad30:	fb0a 330c 	mla	r3, sl, ip, r3
 801ad34:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ad38:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ad3c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ad40:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ad44:	f1c1 0c10 	rsb	ip, r1, #16
 801ad48:	ebac 0c00 	sub.w	ip, ip, r0
 801ad4c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ad50:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ad54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad56:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ad5a:	0418      	lsls	r0, r3, #16
 801ad5c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ad60:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ad64:	4318      	orrs	r0, r3
 801ad66:	fb02 c200 	mla	r2, r2, r0, ip
 801ad6a:	0d53      	lsrs	r3, r2, #21
 801ad6c:	0952      	lsrs	r2, r2, #5
 801ad6e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ad72:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ad76:	431a      	orrs	r2, r3
 801ad78:	f8a8 2000 	strh.w	r2, [r8]
 801ad7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ad7e:	f108 0802 	add.w	r8, r8, #2
 801ad82:	441c      	add	r4, r3
 801ad84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad86:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ad8a:	441e      	add	r6, r3
 801ad8c:	e77c      	b.n	801ac88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad8e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ad90:	f109 0902 	add.w	r9, r9, #2
 801ad94:	441c      	add	r4, r3
 801ad96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ad98:	441e      	add	r6, r3
 801ad9a:	9b06      	ldr	r3, [sp, #24]
 801ad9c:	3b01      	subs	r3, #1
 801ad9e:	9306      	str	r3, [sp, #24]
 801ada0:	e752      	b.n	801ac48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ada2:	d020      	beq.n	801ade6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ada4:	9b06      	ldr	r3, [sp, #24]
 801ada6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ada8:	3b01      	subs	r3, #1
 801adaa:	fb00 4003 	mla	r0, r0, r3, r4
 801adae:	1400      	asrs	r0, r0, #16
 801adb0:	f53f af67 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801adb4:	3901      	subs	r1, #1
 801adb6:	4288      	cmp	r0, r1
 801adb8:	f6bf af63 	bge.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801adbc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801adbe:	fb01 6303 	mla	r3, r1, r3, r6
 801adc2:	141b      	asrs	r3, r3, #16
 801adc4:	f53f af5d 	bmi.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801adc8:	3a01      	subs	r2, #1
 801adca:	4293      	cmp	r3, r2
 801adcc:	f6bf af59 	bge.w	801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801add0:	46ca      	mov	sl, r9
 801add2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801add6:	f1b8 0f00 	cmp.w	r8, #0
 801adda:	dc67      	bgt.n	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801addc:	9b06      	ldr	r3, [sp, #24]
 801adde:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ade2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ade6:	9b08      	ldr	r3, [sp, #32]
 801ade8:	2b00      	cmp	r3, #0
 801adea:	f340 80d7 	ble.w	801af9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801adee:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adf2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801adf6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801adfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801adfe:	eeb0 6a62 	vmov.f32	s12, s5
 801ae02:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae06:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae16:	ee16 4a10 	vmov	r4, s12
 801ae1a:	eeb0 6a43 	vmov.f32	s12, s6
 801ae1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae22:	ee12 2a90 	vmov	r2, s5
 801ae26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae2a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae2c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ae30:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae34:	ee13 2a10 	vmov	r2, s6
 801ae38:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ae3a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae3c:	ee16 6a10 	vmov	r6, s12
 801ae40:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae44:	9320      	str	r3, [sp, #128]	@ 0x80
 801ae46:	9b08      	ldr	r3, [sp, #32]
 801ae48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ae4a:	3b01      	subs	r3, #1
 801ae4c:	9308      	str	r3, [sp, #32]
 801ae4e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ae50:	bf08      	it	eq
 801ae52:	4613      	moveq	r3, r2
 801ae54:	eeb0 3a67 	vmov.f32	s6, s15
 801ae58:	9306      	str	r3, [sp, #24]
 801ae5a:	eef0 2a47 	vmov.f32	s5, s14
 801ae5e:	e6e4      	b.n	801ac2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ae60:	2900      	cmp	r1, #0
 801ae62:	f43f af4e 	beq.w	801ad02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ae66:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ae6a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ae6e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ae70:	e747      	b.n	801ad02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ae72:	f112 0a01 	adds.w	sl, r2, #1
 801ae76:	d481      	bmi.n	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae78:	4553      	cmp	r3, sl
 801ae7a:	f6ff af7f 	blt.w	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae7e:	f11c 0a01 	adds.w	sl, ip, #1
 801ae82:	f53f af7b 	bmi.w	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae86:	45d6      	cmp	lr, sl
 801ae88:	f6ff af78 	blt.w	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae8c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ae90:	b21b      	sxth	r3, r3
 801ae92:	fa0f f28e 	sxth.w	r2, lr
 801ae96:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ae9a:	9201      	str	r2, [sp, #4]
 801ae9c:	9300      	str	r3, [sp, #0]
 801ae9e:	9a07      	ldr	r2, [sp, #28]
 801aea0:	463b      	mov	r3, r7
 801aea2:	4641      	mov	r1, r8
 801aea4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801aea6:	f7ff fe21 	bl	801aaec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801aeaa:	e767      	b.n	801ad7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aeac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801aeae:	1422      	asrs	r2, r4, #16
 801aeb0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801aeb4:	1431      	asrs	r1, r6, #16
 801aeb6:	fb03 2101 	mla	r1, r3, r1, r2
 801aeba:	9d07      	ldr	r5, [sp, #28]
 801aebc:	9a07      	ldr	r2, [sp, #28]
 801aebe:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801aec2:	440a      	add	r2, r1
 801aec4:	5c69      	ldrb	r1, [r5, r1]
 801aec6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aeca:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801aece:	f1be 0f00 	cmp.w	lr, #0
 801aed2:	d05c      	beq.n	801af8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801aed4:	f892 c001 	ldrb.w	ip, [r2, #1]
 801aed8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801aedc:	950d      	str	r5, [sp, #52]	@ 0x34
 801aede:	b150      	cbz	r0, 801aef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801aee0:	eb02 0c03 	add.w	ip, r2, r3
 801aee4:	5cd3      	ldrb	r3, [r2, r3]
 801aee6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801aeea:	930a      	str	r3, [sp, #40]	@ 0x28
 801aeec:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801aef0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801aef4:	930e      	str	r3, [sp, #56]	@ 0x38
 801aef6:	fb1e f200 	smulbb	r2, lr, r0
 801aefa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801aefc:	10d2      	asrs	r2, r2, #3
 801aefe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801af02:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801af06:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801af0a:	ea4c 0c03 	orr.w	ip, ip, r3
 801af0e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801af12:	9311      	str	r3, [sp, #68]	@ 0x44
 801af14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801af16:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801af18:	041b      	lsls	r3, r3, #16
 801af1a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801af1e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801af22:	ea43 030b 	orr.w	r3, r3, fp
 801af26:	4353      	muls	r3, r2
 801af28:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af2a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801af2e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801af32:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801af36:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801af3a:	ea43 0b01 	orr.w	fp, r3, r1
 801af3e:	f1c0 0110 	rsb	r1, r0, #16
 801af42:	eba1 0e0e 	sub.w	lr, r1, lr
 801af46:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801af4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af4c:	fb0e cc0b 	mla	ip, lr, fp, ip
 801af50:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801af54:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801af58:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801af5c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801af60:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801af64:	fb02 cc0e 	mla	ip, r2, lr, ip
 801af68:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801af6c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af70:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801af74:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801af78:	ea43 0c0c 	orr.w	ip, r3, ip
 801af7c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801af7e:	f82a cb02 	strh.w	ip, [sl], #2
 801af82:	441c      	add	r4, r3
 801af84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801af86:	f108 38ff 	add.w	r8, r8, #4294967295
 801af8a:	441e      	add	r6, r3
 801af8c:	e723      	b.n	801add6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801af8e:	2800      	cmp	r0, #0
 801af90:	d0b1      	beq.n	801aef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801af92:	5cd3      	ldrb	r3, [r2, r3]
 801af94:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801af98:	930a      	str	r3, [sp, #40]	@ 0x28
 801af9a:	e7ac      	b.n	801aef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801af9c:	b013      	add	sp, #76	@ 0x4c
 801af9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afa2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801afa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afa6:	880d      	ldrh	r5, [r1, #0]
 801afa8:	b087      	sub	sp, #28
 801afaa:	10ef      	asrs	r7, r5, #3
 801afac:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801afb0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801afb4:	00ed      	lsls	r5, r5, #3
 801afb6:	9701      	str	r7, [sp, #4]
 801afb8:	b2ed      	uxtb	r5, r5
 801afba:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801afbe:	9502      	str	r5, [sp, #8]
 801afc0:	9d01      	ldr	r5, [sp, #4]
 801afc2:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801afc6:	fb06 0709 	mla	r7, r6, r9, r0
 801afca:	9103      	str	r1, [sp, #12]
 801afcc:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801afd0:	022d      	lsls	r5, r5, #8
 801afd2:	9902      	ldr	r1, [sp, #8]
 801afd4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801afd8:	430d      	orrs	r5, r1
 801afda:	2e00      	cmp	r6, #0
 801afdc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801afe0:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801afe4:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801afe8:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801afec:	eb02 0c07 	add.w	ip, r2, r7
 801aff0:	9505      	str	r5, [sp, #20]
 801aff2:	f2c0 80b6 	blt.w	801b162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801aff6:	45b3      	cmp	fp, r6
 801aff8:	f340 80b3 	ble.w	801b162 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801affc:	2800      	cmp	r0, #0
 801affe:	f2c0 80ae 	blt.w	801b15e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b002:	4581      	cmp	r9, r0
 801b004:	f340 80ab 	ble.w	801b15e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b008:	5dd7      	ldrb	r7, [r2, r7]
 801b00a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b00e:	441f      	add	r7, r3
 801b010:	1c42      	adds	r2, r0, #1
 801b012:	f100 80a9 	bmi.w	801b168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b016:	4591      	cmp	r9, r2
 801b018:	f340 80a6 	ble.w	801b168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b01c:	2c00      	cmp	r4, #0
 801b01e:	f000 80a3 	beq.w	801b168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b022:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b026:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b02a:	441d      	add	r5, r3
 801b02c:	3601      	adds	r6, #1
 801b02e:	f100 809f 	bmi.w	801b170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b032:	45b3      	cmp	fp, r6
 801b034:	f340 809c 	ble.w	801b170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b038:	f1be 0f00 	cmp.w	lr, #0
 801b03c:	f000 8098 	beq.w	801b170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b040:	2800      	cmp	r0, #0
 801b042:	f2c0 8093 	blt.w	801b16c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b046:	4581      	cmp	r9, r0
 801b048:	f340 8090 	ble.w	801b16c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b04c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801b050:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b054:	441e      	add	r6, r3
 801b056:	3001      	adds	r0, #1
 801b058:	f100 808d 	bmi.w	801b176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b05c:	4581      	cmp	r9, r0
 801b05e:	f340 808a 	ble.w	801b176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b062:	2c00      	cmp	r4, #0
 801b064:	f000 8087 	beq.w	801b176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b068:	44e1      	add	r9, ip
 801b06a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b06e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b072:	4413      	add	r3, r2
 801b074:	b2a4      	uxth	r4, r4
 801b076:	fa1f fe8e 	uxth.w	lr, lr
 801b07a:	fb04 fb0e 	mul.w	fp, r4, lr
 801b07e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801b082:	fa1f f08e 	uxth.w	r0, lr
 801b086:	fa1f fe88 	uxth.w	lr, r8
 801b08a:	ea6f 0808 	mvn.w	r8, r8
 801b08e:	0124      	lsls	r4, r4, #4
 801b090:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801b094:	eba4 040b 	sub.w	r4, r4, fp
 801b098:	b2a2      	uxth	r2, r4
 801b09a:	78ac      	ldrb	r4, [r5, #2]
 801b09c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801b0a0:	4354      	muls	r4, r2
 801b0a2:	eba9 0900 	sub.w	r9, r9, r0
 801b0a6:	fa1f f989 	uxth.w	r9, r9
 801b0aa:	fb09 440c 	mla	r4, r9, ip, r4
 801b0ae:	f896 c002 	ldrb.w	ip, [r6, #2]
 801b0b2:	fa5f f888 	uxtb.w	r8, r8
 801b0b6:	fb00 440c 	mla	r4, r0, ip, r4
 801b0ba:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b0be:	fb1a fa08 	smulbb	sl, sl, r8
 801b0c2:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b0c6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b0ca:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b0ce:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b0d2:	782d      	ldrb	r5, [r5, #0]
 801b0d4:	fb02 fa0a 	mul.w	sl, r2, sl
 801b0d8:	436a      	muls	r2, r5
 801b0da:	787c      	ldrb	r4, [r7, #1]
 801b0dc:	783f      	ldrb	r7, [r7, #0]
 801b0de:	fb09 aa04 	mla	sl, r9, r4, sl
 801b0e2:	fb09 2207 	mla	r2, r9, r7, r2
 801b0e6:	7874      	ldrb	r4, [r6, #1]
 801b0e8:	7835      	ldrb	r5, [r6, #0]
 801b0ea:	fb00 aa04 	mla	sl, r0, r4, sl
 801b0ee:	fb00 2005 	mla	r0, r0, r5, r2
 801b0f2:	785c      	ldrb	r4, [r3, #1]
 801b0f4:	781b      	ldrb	r3, [r3, #0]
 801b0f6:	fb0b a404 	mla	r4, fp, r4, sl
 801b0fa:	9901      	ldr	r1, [sp, #4]
 801b0fc:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b100:	9b02      	ldr	r3, [sp, #8]
 801b102:	fb11 fa08 	smulbb	sl, r1, r8
 801b106:	fb13 f808 	smulbb	r8, r3, r8
 801b10a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b10e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b112:	fb04 a40e 	mla	r4, r4, lr, sl
 801b116:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b11a:	fa1f fc8c 	uxth.w	ip, ip
 801b11e:	f10c 0301 	add.w	r3, ip, #1
 801b122:	fa1f fe8e 	uxth.w	lr, lr
 801b126:	b2a4      	uxth	r4, r4
 801b128:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b12c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801b130:	f104 0a01 	add.w	sl, r4, #1
 801b134:	f10e 0c01 	add.w	ip, lr, #1
 801b138:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b13c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b140:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b144:	0964      	lsrs	r4, r4, #5
 801b146:	ea4c 0c03 	orr.w	ip, ip, r3
 801b14a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b14e:	9b03      	ldr	r3, [sp, #12]
 801b150:	ea4c 0c04 	orr.w	ip, ip, r4
 801b154:	f8a3 c000 	strh.w	ip, [r3]
 801b158:	b007      	add	sp, #28
 801b15a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b15e:	af05      	add	r7, sp, #20
 801b160:	e756      	b.n	801b010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b162:	ad05      	add	r5, sp, #20
 801b164:	462f      	mov	r7, r5
 801b166:	e761      	b.n	801b02c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b168:	ad05      	add	r5, sp, #20
 801b16a:	e75f      	b.n	801b02c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b16c:	ae05      	add	r6, sp, #20
 801b16e:	e772      	b.n	801b056 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b170:	ab05      	add	r3, sp, #20
 801b172:	461e      	mov	r6, r3
 801b174:	e77e      	b.n	801b074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b176:	ab05      	add	r3, sp, #20
 801b178:	e77c      	b.n	801b074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b17a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b17a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b17e:	b095      	sub	sp, #84	@ 0x54
 801b180:	9212      	str	r2, [sp, #72]	@ 0x48
 801b182:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b184:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b186:	9309      	str	r3, [sp, #36]	@ 0x24
 801b188:	6850      	ldr	r0, [r2, #4]
 801b18a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801b18e:	910e      	str	r1, [sp, #56]	@ 0x38
 801b190:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b192:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801b196:	fb00 1303 	mla	r3, r0, r3, r1
 801b19a:	6812      	ldr	r2, [r2, #0]
 801b19c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b1a0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b1a2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b1a4:	681b      	ldr	r3, [r3, #0]
 801b1a6:	930d      	str	r3, [sp, #52]	@ 0x34
 801b1a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b1aa:	685c      	ldr	r4, [r3, #4]
 801b1ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b1ae:	3404      	adds	r4, #4
 801b1b0:	43db      	mvns	r3, r3
 801b1b2:	b2db      	uxtb	r3, r3
 801b1b4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b1b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b1b8:	2b00      	cmp	r3, #0
 801b1ba:	dc03      	bgt.n	801b1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b1bc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b1be:	2b00      	cmp	r3, #0
 801b1c0:	f340 8255 	ble.w	801b66e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b1c4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b1c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b1ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b1ce:	1e48      	subs	r0, r1, #1
 801b1d0:	1e55      	subs	r5, r2, #1
 801b1d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b1d4:	2b00      	cmp	r3, #0
 801b1d6:	f340 80f9 	ble.w	801b3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b1da:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801b1dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b1de:	1436      	asrs	r6, r6, #16
 801b1e0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b1e4:	d406      	bmi.n	801b1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1e6:	4286      	cmp	r6, r0
 801b1e8:	da04      	bge.n	801b1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1ea:	2b00      	cmp	r3, #0
 801b1ec:	db02      	blt.n	801b1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b1ee:	42ab      	cmp	r3, r5
 801b1f0:	f2c0 80ed 	blt.w	801b3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b1f4:	3601      	adds	r6, #1
 801b1f6:	f100 80da 	bmi.w	801b3ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b1fa:	42b1      	cmp	r1, r6
 801b1fc:	f2c0 80d7 	blt.w	801b3ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b200:	3301      	adds	r3, #1
 801b202:	f100 80d4 	bmi.w	801b3ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b206:	429a      	cmp	r2, r3
 801b208:	f2c0 80d1 	blt.w	801b3ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b20c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b20e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b210:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b212:	930c      	str	r3, [sp, #48]	@ 0x30
 801b214:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b216:	2b00      	cmp	r3, #0
 801b218:	f340 80fa 	ble.w	801b410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b21c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801b21e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b220:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b222:	68c6      	ldr	r6, [r0, #12]
 801b224:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b226:	141d      	asrs	r5, r3, #16
 801b228:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b22c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b22e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b230:	1400      	asrs	r0, r0, #16
 801b232:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b236:	6892      	ldr	r2, [r2, #8]
 801b238:	f100 813e 	bmi.w	801b4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b23c:	1e57      	subs	r7, r2, #1
 801b23e:	42b8      	cmp	r0, r7
 801b240:	f280 813a 	bge.w	801b4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b244:	2d00      	cmp	r5, #0
 801b246:	f2c0 8137 	blt.w	801b4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b24a:	1e77      	subs	r7, r6, #1
 801b24c:	42bd      	cmp	r5, r7
 801b24e:	f280 8133 	bge.w	801b4b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b252:	b212      	sxth	r2, r2
 801b254:	fb05 0002 	mla	r0, r5, r2, r0
 801b258:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b25a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b25e:	182e      	adds	r6, r5, r0
 801b260:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b264:	eb04 050a 	add.w	r5, r4, sl
 801b268:	2b00      	cmp	r3, #0
 801b26a:	f000 8117 	beq.w	801b49c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b26e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b272:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b276:	44a4      	add	ip, r4
 801b278:	2900      	cmp	r1, #0
 801b27a:	f000 8117 	beq.w	801b4ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b27e:	18b0      	adds	r0, r6, r2
 801b280:	7840      	ldrb	r0, [r0, #1]
 801b282:	5cb2      	ldrb	r2, [r6, r2]
 801b284:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b288:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b28c:	4422      	add	r2, r4
 801b28e:	4420      	add	r0, r4
 801b290:	b29b      	uxth	r3, r3
 801b292:	b289      	uxth	r1, r1
 801b294:	fb03 f901 	mul.w	r9, r3, r1
 801b298:	011b      	lsls	r3, r3, #4
 801b29a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b29e:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801b2a2:	eba3 0309 	sub.w	r3, r3, r9
 801b2a6:	b29b      	uxth	r3, r3
 801b2a8:	435f      	muls	r7, r3
 801b2aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b2ae:	b289      	uxth	r1, r1
 801b2b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b2b4:	eba8 0801 	sub.w	r8, r8, r1
 801b2b8:	fa1f f888 	uxth.w	r8, r8
 801b2bc:	fb08 770b 	mla	r7, r8, fp, r7
 801b2c0:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b2c4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b2c6:	fb01 770b 	mla	r7, r1, fp, r7
 801b2ca:	f8b6 e000 	ldrh.w	lr, [r6]
 801b2ce:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b2d2:	9310      	str	r3, [sp, #64]	@ 0x40
 801b2d4:	fb09 770b 	mla	r7, r9, fp, r7
 801b2d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b2da:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801b2de:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b2e2:	fb1b fb03 	smulbb	fp, fp, r3
 801b2e6:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801b2ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b2ee:	fb07 b706 	mla	r7, r7, r6, fp
 801b2f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b2f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b2f8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b2fc:	f89c c000 	ldrb.w	ip, [ip]
 801b300:	435d      	muls	r5, r3
 801b302:	fb08 550b 	mla	r5, r8, fp, r5
 801b306:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b30a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b30c:	fb01 550b 	mla	r5, r1, fp, r5
 801b310:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b314:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b318:	fb09 550b 	mla	r5, r9, fp, r5
 801b31c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801b320:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b324:	fb1b fb03 	smulbb	fp, fp, r3
 801b328:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b32a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b32e:	fb03 f30c 	mul.w	r3, r3, ip
 801b332:	fb08 330a 	mla	r3, r8, sl, r3
 801b336:	f892 c000 	ldrb.w	ip, [r2]
 801b33a:	fa5f fe8e 	uxtb.w	lr, lr
 801b33e:	fb01 330c 	mla	r3, r1, ip, r3
 801b342:	f890 c000 	ldrb.w	ip, [r0]
 801b346:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b34a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b34e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b350:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b354:	fb1e fe03 	smulbb	lr, lr, r3
 801b358:	fb05 b506 	mla	r5, r5, r6, fp
 801b35c:	fb0c e606 	mla	r6, ip, r6, lr
 801b360:	b2bf      	uxth	r7, r7
 801b362:	1c7b      	adds	r3, r7, #1
 801b364:	b2ad      	uxth	r5, r5
 801b366:	b2b6      	uxth	r6, r6
 801b368:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b36c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801b370:	f105 0b01 	add.w	fp, r5, #1
 801b374:	1c77      	adds	r7, r6, #1
 801b376:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801b37a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b37e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b382:	096d      	lsrs	r5, r5, #5
 801b384:	431f      	orrs	r7, r3
 801b386:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b38a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b38c:	433d      	orrs	r5, r7
 801b38e:	801d      	strh	r5, [r3, #0]
 801b390:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b392:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b394:	3302      	adds	r3, #2
 801b396:	930c      	str	r3, [sp, #48]	@ 0x30
 801b398:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b39a:	4413      	add	r3, r2
 801b39c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b39e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b3a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b3a2:	4413      	add	r3, r2
 801b3a4:	9320      	str	r3, [sp, #128]	@ 0x80
 801b3a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b3a8:	3b01      	subs	r3, #1
 801b3aa:	9311      	str	r3, [sp, #68]	@ 0x44
 801b3ac:	e732      	b.n	801b214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b3ae:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b3b0:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801b3b2:	4433      	add	r3, r6
 801b3b4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b3b6:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801b3b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b3ba:	4433      	add	r3, r6
 801b3bc:	9320      	str	r3, [sp, #128]	@ 0x80
 801b3be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3c0:	3b01      	subs	r3, #1
 801b3c2:	9309      	str	r3, [sp, #36]	@ 0x24
 801b3c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b3c6:	3302      	adds	r3, #2
 801b3c8:	930a      	str	r3, [sp, #40]	@ 0x28
 801b3ca:	e702      	b.n	801b1d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b3cc:	d027      	beq.n	801b41e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801b3ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3d0:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801b3d2:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b3d4:	3b01      	subs	r3, #1
 801b3d6:	fb00 5003 	mla	r0, r0, r3, r5
 801b3da:	1400      	asrs	r0, r0, #16
 801b3dc:	f53f af16 	bmi.w	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3e0:	3901      	subs	r1, #1
 801b3e2:	4288      	cmp	r0, r1
 801b3e4:	f6bf af12 	bge.w	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3e8:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801b3ea:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b3ec:	fb01 0303 	mla	r3, r1, r3, r0
 801b3f0:	141b      	asrs	r3, r3, #16
 801b3f2:	f53f af0b 	bmi.w	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3f6:	3a01      	subs	r2, #1
 801b3f8:	4293      	cmp	r3, r2
 801b3fa:	f6bf af07 	bge.w	801b20c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b400:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801b404:	9311      	str	r3, [sp, #68]	@ 0x44
 801b406:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b408:	930c      	str	r3, [sp, #48]	@ 0x30
 801b40a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b40c:	2b00      	cmp	r3, #0
 801b40e:	dc70      	bgt.n	801b4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b410:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b412:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b414:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b418:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b41c:	930a      	str	r3, [sp, #40]	@ 0x28
 801b41e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b420:	2b00      	cmp	r3, #0
 801b422:	f340 8124 	ble.w	801b66e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b426:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b42a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b42e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b432:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b43a:	eef0 6a62 	vmov.f32	s13, s5
 801b43e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b442:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b446:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b44a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b44e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b452:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801b456:	eef0 6a43 	vmov.f32	s13, s6
 801b45a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b45e:	ee12 2a90 	vmov	r2, s5
 801b462:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b466:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b468:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b46c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b470:	ee13 2a10 	vmov	r2, s6
 801b474:	9321      	str	r3, [sp, #132]	@ 0x84
 801b476:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b478:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801b47c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b480:	9322      	str	r3, [sp, #136]	@ 0x88
 801b482:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b484:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b486:	3b01      	subs	r3, #1
 801b488:	930e      	str	r3, [sp, #56]	@ 0x38
 801b48a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801b48c:	bf08      	it	eq
 801b48e:	4613      	moveq	r3, r2
 801b490:	eeb0 3a67 	vmov.f32	s6, s15
 801b494:	9309      	str	r3, [sp, #36]	@ 0x24
 801b496:	eef0 2a47 	vmov.f32	s5, s14
 801b49a:	e68c      	b.n	801b1b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b49c:	b149      	cbz	r1, 801b4b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b49e:	4628      	mov	r0, r5
 801b4a0:	5cb2      	ldrb	r2, [r6, r2]
 801b4a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b4a6:	4422      	add	r2, r4
 801b4a8:	46ac      	mov	ip, r5
 801b4aa:	e6f1      	b.n	801b290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b4ac:	4628      	mov	r0, r5
 801b4ae:	462a      	mov	r2, r5
 801b4b0:	e6ee      	b.n	801b290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b4b2:	4628      	mov	r0, r5
 801b4b4:	462a      	mov	r2, r5
 801b4b6:	e7f7      	b.n	801b4a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b4b8:	1c47      	adds	r7, r0, #1
 801b4ba:	f53f af69 	bmi.w	801b390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b4be:	42ba      	cmp	r2, r7
 801b4c0:	f6ff af66 	blt.w	801b390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b4c4:	1c6f      	adds	r7, r5, #1
 801b4c6:	f53f af63 	bmi.w	801b390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b4ca:	42be      	cmp	r6, r7
 801b4cc:	f6ff af60 	blt.w	801b390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b4d0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801b4d2:	b236      	sxth	r6, r6
 801b4d4:	b212      	sxth	r2, r2
 801b4d6:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b4da:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b4de:	9002      	str	r0, [sp, #8]
 801b4e0:	9200      	str	r2, [sp, #0]
 801b4e2:	9601      	str	r6, [sp, #4]
 801b4e4:	4623      	mov	r3, r4
 801b4e6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801b4ea:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801b4ec:	f7ff fd59 	bl	801afa2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b4f0:	e74e      	b.n	801b390 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b4f2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b4f4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b4f6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b4fa:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b4fc:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801b4fe:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b502:	142d      	asrs	r5, r5, #16
 801b504:	1400      	asrs	r0, r0, #16
 801b506:	fb02 5000 	mla	r0, r2, r0, r5
 801b50a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b50c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b50e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b512:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b516:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b51a:	182e      	adds	r6, r5, r0
 801b51c:	eb04 0509 	add.w	r5, r4, r9
 801b520:	2b00      	cmp	r3, #0
 801b522:	f000 8096 	beq.w	801b652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b526:	7877      	ldrb	r7, [r6, #1]
 801b528:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b52c:	4427      	add	r7, r4
 801b52e:	2900      	cmp	r1, #0
 801b530:	f000 8097 	beq.w	801b662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b534:	18b0      	adds	r0, r6, r2
 801b536:	7840      	ldrb	r0, [r0, #1]
 801b538:	5cb2      	ldrb	r2, [r6, r2]
 801b53a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b53e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b542:	4422      	add	r2, r4
 801b544:	4420      	add	r0, r4
 801b546:	b29b      	uxth	r3, r3
 801b548:	b289      	uxth	r1, r1
 801b54a:	fb03 f801 	mul.w	r8, r3, r1
 801b54e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b550:	011b      	lsls	r3, r3, #4
 801b552:	f8b6 c000 	ldrh.w	ip, [r6]
 801b556:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b55a:	78be      	ldrb	r6, [r7, #2]
 801b55c:	eba3 0308 	sub.w	r3, r3, r8
 801b560:	b29b      	uxth	r3, r3
 801b562:	435e      	muls	r6, r3
 801b564:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b568:	b289      	uxth	r1, r1
 801b56a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b56e:	ebae 0e01 	sub.w	lr, lr, r1
 801b572:	fa1f fe8e 	uxth.w	lr, lr
 801b576:	fb0e 660b 	mla	r6, lr, fp, r6
 801b57a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b57e:	9310      	str	r3, [sp, #64]	@ 0x40
 801b580:	fb01 660b 	mla	r6, r1, fp, r6
 801b584:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b588:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b58a:	fb08 660b 	mla	r6, r8, fp, r6
 801b58e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b592:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801b596:	fb1b fb03 	smulbb	fp, fp, r3
 801b59a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b59e:	fb06 b60a 	mla	r6, r6, sl, fp
 801b5a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b5a4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b5a8:	787d      	ldrb	r5, [r7, #1]
 801b5aa:	783f      	ldrb	r7, [r7, #0]
 801b5ac:	435d      	muls	r5, r3
 801b5ae:	fb0e 550b 	mla	r5, lr, fp, r5
 801b5b2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b5b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b5b8:	fb01 550b 	mla	r5, r1, fp, r5
 801b5bc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b5c0:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b5c4:	fb08 550b 	mla	r5, r8, fp, r5
 801b5c8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b5cc:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801b5d0:	fb1b fb03 	smulbb	fp, fp, r3
 801b5d4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b5d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5da:	437b      	muls	r3, r7
 801b5dc:	fb0e 3309 	mla	r3, lr, r9, r3
 801b5e0:	7817      	ldrb	r7, [r2, #0]
 801b5e2:	fa5f fc8c 	uxtb.w	ip, ip
 801b5e6:	fb01 3307 	mla	r3, r1, r7, r3
 801b5ea:	7807      	ldrb	r7, [r0, #0]
 801b5ec:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b5f0:	fb08 3707 	mla	r7, r8, r7, r3
 801b5f4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b5f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b5fa:	fb1c fc03 	smulbb	ip, ip, r3
 801b5fe:	fb05 b50a 	mla	r5, r5, sl, fp
 801b602:	fb07 c70a 	mla	r7, r7, sl, ip
 801b606:	b2b6      	uxth	r6, r6
 801b608:	b2ad      	uxth	r5, r5
 801b60a:	b2bf      	uxth	r7, r7
 801b60c:	1c73      	adds	r3, r6, #1
 801b60e:	1c7a      	adds	r2, r7, #1
 801b610:	f105 0b01 	add.w	fp, r5, #1
 801b614:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b618:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b61c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b620:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b624:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b628:	096d      	lsrs	r5, r5, #5
 801b62a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b62c:	4316      	orrs	r6, r2
 801b62e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b632:	432e      	orrs	r6, r5
 801b634:	f823 6b02 	strh.w	r6, [r3], #2
 801b638:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b63a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b63c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b63e:	4413      	add	r3, r2
 801b640:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b642:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b644:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b646:	4413      	add	r3, r2
 801b648:	9320      	str	r3, [sp, #128]	@ 0x80
 801b64a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b64c:	3b01      	subs	r3, #1
 801b64e:	9311      	str	r3, [sp, #68]	@ 0x44
 801b650:	e6db      	b.n	801b40a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b652:	b149      	cbz	r1, 801b668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b654:	4628      	mov	r0, r5
 801b656:	5cb2      	ldrb	r2, [r6, r2]
 801b658:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b65c:	4422      	add	r2, r4
 801b65e:	462f      	mov	r7, r5
 801b660:	e771      	b.n	801b546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b662:	4628      	mov	r0, r5
 801b664:	462a      	mov	r2, r5
 801b666:	e76e      	b.n	801b546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b668:	4628      	mov	r0, r5
 801b66a:	462a      	mov	r2, r5
 801b66c:	e7f7      	b.n	801b65e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b66e:	b015      	add	sp, #84	@ 0x54
 801b670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801b674:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b678:	880f      	ldrh	r7, [r1, #0]
 801b67a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801b67e:	023c      	lsls	r4, r7, #8
 801b680:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801b684:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801b688:	fb05 ca0e 	mla	sl, r5, lr, ip
 801b68c:	017c      	lsls	r4, r7, #5
 801b68e:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801b692:	00ff      	lsls	r7, r7, #3
 801b694:	ea4b 0404 	orr.w	r4, fp, r4
 801b698:	b2ff      	uxtb	r7, r7
 801b69a:	4327      	orrs	r7, r4
 801b69c:	2d00      	cmp	r5, #0
 801b69e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b6a2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801b6a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801b6aa:	eb02 080a 	add.w	r8, r2, sl
 801b6ae:	9701      	str	r7, [sp, #4]
 801b6b0:	db7e      	blt.n	801b7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b6b2:	45a9      	cmp	r9, r5
 801b6b4:	dd7c      	ble.n	801b7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b6b6:	f1bc 0f00 	cmp.w	ip, #0
 801b6ba:	db77      	blt.n	801b7ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b6bc:	45e6      	cmp	lr, ip
 801b6be:	dd75      	ble.n	801b7ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b6c0:	f812 700a 	ldrb.w	r7, [r2, sl]
 801b6c4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b6c8:	441f      	add	r7, r3
 801b6ca:	f11c 0201 	adds.w	r2, ip, #1
 801b6ce:	d472      	bmi.n	801b7b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b6d0:	4596      	cmp	lr, r2
 801b6d2:	dd70      	ble.n	801b7b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b6d4:	2800      	cmp	r0, #0
 801b6d6:	d06e      	beq.n	801b7b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b6d8:	f898 4001 	ldrb.w	r4, [r8, #1]
 801b6dc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b6e0:	441c      	add	r4, r3
 801b6e2:	3501      	adds	r5, #1
 801b6e4:	d46b      	bmi.n	801b7be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b6e6:	45a9      	cmp	r9, r5
 801b6e8:	dd69      	ble.n	801b7be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b6ea:	2e00      	cmp	r6, #0
 801b6ec:	d067      	beq.n	801b7be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b6ee:	f1bc 0f00 	cmp.w	ip, #0
 801b6f2:	db62      	blt.n	801b7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b6f4:	45e6      	cmp	lr, ip
 801b6f6:	dd60      	ble.n	801b7ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b6f8:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b6fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b700:	441d      	add	r5, r3
 801b702:	f11c 0201 	adds.w	r2, ip, #1
 801b706:	d45d      	bmi.n	801b7c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b708:	4596      	cmp	lr, r2
 801b70a:	dd5b      	ble.n	801b7c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b70c:	2800      	cmp	r0, #0
 801b70e:	d059      	beq.n	801b7c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b710:	44c6      	add	lr, r8
 801b712:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b716:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b71a:	4413      	add	r3, r2
 801b71c:	b280      	uxth	r0, r0
 801b71e:	b2b2      	uxth	r2, r6
 801b720:	fb00 f602 	mul.w	r6, r0, r2
 801b724:	0100      	lsls	r0, r0, #4
 801b726:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b72a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801b72e:	1b80      	subs	r0, r0, r6
 801b730:	fa1f fc82 	uxth.w	ip, r2
 801b734:	b282      	uxth	r2, r0
 801b736:	78a0      	ldrb	r0, [r4, #2]
 801b738:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b73c:	4350      	muls	r0, r2
 801b73e:	eba8 080c 	sub.w	r8, r8, ip
 801b742:	fa1f f888 	uxth.w	r8, r8
 801b746:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b74a:	78a8      	ldrb	r0, [r5, #2]
 801b74c:	f897 9000 	ldrb.w	r9, [r7]
 801b750:	fb0c e000 	mla	r0, ip, r0, lr
 801b754:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b758:	787f      	ldrb	r7, [r7, #1]
 801b75a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b75e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801b762:	f894 e000 	ldrb.w	lr, [r4]
 801b766:	fb02 fe0e 	mul.w	lr, r2, lr
 801b76a:	fb08 e909 	mla	r9, r8, r9, lr
 801b76e:	f895 e000 	ldrb.w	lr, [r5]
 801b772:	fb0c 990e 	mla	r9, ip, lr, r9
 801b776:	f893 e000 	ldrb.w	lr, [r3]
 801b77a:	785b      	ldrb	r3, [r3, #1]
 801b77c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b780:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b784:	ea4e 0e00 	orr.w	lr, lr, r0
 801b788:	7860      	ldrb	r0, [r4, #1]
 801b78a:	4350      	muls	r0, r2
 801b78c:	fb08 0007 	mla	r0, r8, r7, r0
 801b790:	786a      	ldrb	r2, [r5, #1]
 801b792:	fb0c 0202 	mla	r2, ip, r2, r0
 801b796:	fb06 2303 	mla	r3, r6, r3, r2
 801b79a:	095b      	lsrs	r3, r3, #5
 801b79c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b7a0:	ea4e 0303 	orr.w	r3, lr, r3
 801b7a4:	800b      	strh	r3, [r1, #0]
 801b7a6:	b003      	add	sp, #12
 801b7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7ac:	af01      	add	r7, sp, #4
 801b7ae:	e78c      	b.n	801b6ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b7b0:	ac01      	add	r4, sp, #4
 801b7b2:	4627      	mov	r7, r4
 801b7b4:	e795      	b.n	801b6e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b7b6:	ac01      	add	r4, sp, #4
 801b7b8:	e793      	b.n	801b6e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b7ba:	ad01      	add	r5, sp, #4
 801b7bc:	e7a1      	b.n	801b702 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b7be:	ab01      	add	r3, sp, #4
 801b7c0:	461d      	mov	r5, r3
 801b7c2:	e7ab      	b.n	801b71c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b7c4:	ab01      	add	r3, sp, #4
 801b7c6:	e7a9      	b.n	801b71c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7cc:	b08f      	sub	sp, #60	@ 0x3c
 801b7ce:	920c      	str	r2, [sp, #48]	@ 0x30
 801b7d0:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801b7d2:	900d      	str	r0, [sp, #52]	@ 0x34
 801b7d4:	6850      	ldr	r0, [r2, #4]
 801b7d6:	910a      	str	r1, [sp, #40]	@ 0x28
 801b7d8:	9306      	str	r3, [sp, #24]
 801b7da:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801b7de:	fb00 1303 	mla	r3, r0, r3, r1
 801b7e2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801b7e6:	6812      	ldr	r2, [r2, #0]
 801b7e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b7ec:	9307      	str	r3, [sp, #28]
 801b7ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b7f0:	681b      	ldr	r3, [r3, #0]
 801b7f2:	9308      	str	r3, [sp, #32]
 801b7f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b7f6:	685c      	ldr	r4, [r3, #4]
 801b7f8:	3404      	adds	r4, #4
 801b7fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b7fc:	2b00      	cmp	r3, #0
 801b7fe:	dc03      	bgt.n	801b808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b800:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b802:	2b00      	cmp	r3, #0
 801b804:	f340 81d6 	ble.w	801bbb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b808:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b80a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b80e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b812:	1e48      	subs	r0, r1, #1
 801b814:	1e56      	subs	r6, r2, #1
 801b816:	9b06      	ldr	r3, [sp, #24]
 801b818:	2b00      	cmp	r3, #0
 801b81a:	f340 80b7 	ble.w	801b98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b81e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b822:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b826:	d406      	bmi.n	801b836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b828:	4287      	cmp	r7, r0
 801b82a:	da04      	bge.n	801b836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b82c:	2b00      	cmp	r3, #0
 801b82e:	db02      	blt.n	801b836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b830:	42b3      	cmp	r3, r6
 801b832:	f2c0 80ac 	blt.w	801b98e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b836:	3701      	adds	r7, #1
 801b838:	f100 809d 	bmi.w	801b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b83c:	42b9      	cmp	r1, r7
 801b83e:	f2c0 809a 	blt.w	801b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b842:	3301      	adds	r3, #1
 801b844:	f100 8097 	bmi.w	801b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b848:	429a      	cmp	r2, r3
 801b84a:	f2c0 8094 	blt.w	801b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b84e:	9b06      	ldr	r3, [sp, #24]
 801b850:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b852:	9b07      	ldr	r3, [sp, #28]
 801b854:	9309      	str	r3, [sp, #36]	@ 0x24
 801b856:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b858:	2b00      	cmp	r3, #0
 801b85a:	f340 80b5 	ble.w	801b9c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b85e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801b860:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b862:	68c7      	ldr	r7, [r0, #12]
 801b864:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b868:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b86c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b870:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b874:	6892      	ldr	r2, [r2, #8]
 801b876:	f100 80fb 	bmi.w	801ba70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b87a:	f102 3cff 	add.w	ip, r2, #4294967295
 801b87e:	4560      	cmp	r0, ip
 801b880:	f280 80f6 	bge.w	801ba70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b884:	2e00      	cmp	r6, #0
 801b886:	f2c0 80f3 	blt.w	801ba70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b88a:	f107 3cff 	add.w	ip, r7, #4294967295
 801b88e:	4566      	cmp	r6, ip
 801b890:	f280 80ee 	bge.w	801ba70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b894:	b212      	sxth	r2, r2
 801b896:	fb06 0002 	mla	r0, r6, r2, r0
 801b89a:	9e08      	ldr	r6, [sp, #32]
 801b89c:	1837      	adds	r7, r6, r0
 801b89e:	5c30      	ldrb	r0, [r6, r0]
 801b8a0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b8a4:	eb04 0c08 	add.w	ip, r4, r8
 801b8a8:	2b00      	cmp	r3, #0
 801b8aa:	f000 80d3 	beq.w	801ba54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b8ae:	787e      	ldrb	r6, [r7, #1]
 801b8b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b8b4:	4426      	add	r6, r4
 801b8b6:	2900      	cmp	r1, #0
 801b8b8:	f000 80d4 	beq.w	801ba64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b8bc:	18b8      	adds	r0, r7, r2
 801b8be:	7840      	ldrb	r0, [r0, #1]
 801b8c0:	5cba      	ldrb	r2, [r7, r2]
 801b8c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b8c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b8ca:	4422      	add	r2, r4
 801b8cc:	4420      	add	r0, r4
 801b8ce:	b29b      	uxth	r3, r3
 801b8d0:	b289      	uxth	r1, r1
 801b8d2:	fb03 f901 	mul.w	r9, r3, r1
 801b8d6:	011b      	lsls	r3, r3, #4
 801b8d8:	78b7      	ldrb	r7, [r6, #2]
 801b8da:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801b8de:	eba3 0309 	sub.w	r3, r3, r9
 801b8e2:	b29b      	uxth	r3, r3
 801b8e4:	435f      	muls	r7, r3
 801b8e6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b8ea:	b289      	uxth	r1, r1
 801b8ec:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b8f0:	ebae 0e01 	sub.w	lr, lr, r1
 801b8f4:	fa1f fe8e 	uxth.w	lr, lr
 801b8f8:	fb0e 770a 	mla	r7, lr, sl, r7
 801b8fc:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b900:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b904:	fb01 770a 	mla	r7, r1, sl, r7
 801b908:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b90c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b910:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b914:	f896 8000 	ldrb.w	r8, [r6]
 801b918:	7876      	ldrb	r6, [r6, #1]
 801b91a:	fb03 f808 	mul.w	r8, r3, r8
 801b91e:	fb0e 8807 	mla	r8, lr, r7, r8
 801b922:	7817      	ldrb	r7, [r2, #0]
 801b924:	4373      	muls	r3, r6
 801b926:	fb01 8807 	mla	r8, r1, r7, r8
 801b92a:	7807      	ldrb	r7, [r0, #0]
 801b92c:	fb0e 330c 	mla	r3, lr, ip, r3
 801b930:	fb09 8707 	mla	r7, r9, r7, r8
 801b934:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801b938:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b93c:	ea47 070a 	orr.w	r7, r7, sl
 801b940:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b944:	fb01 310a 	mla	r1, r1, sl, r3
 801b948:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b94c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b94e:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b952:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b956:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b95a:	ea47 070a 	orr.w	r7, r7, sl
 801b95e:	801f      	strh	r7, [r3, #0]
 801b960:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b962:	3302      	adds	r3, #2
 801b964:	9309      	str	r3, [sp, #36]	@ 0x24
 801b966:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b968:	449b      	add	fp, r3
 801b96a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b96c:	441d      	add	r5, r3
 801b96e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b970:	3b01      	subs	r3, #1
 801b972:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b974:	e76f      	b.n	801b856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b976:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b978:	449b      	add	fp, r3
 801b97a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b97c:	441d      	add	r5, r3
 801b97e:	9b06      	ldr	r3, [sp, #24]
 801b980:	3b01      	subs	r3, #1
 801b982:	9306      	str	r3, [sp, #24]
 801b984:	9b07      	ldr	r3, [sp, #28]
 801b986:	3302      	adds	r3, #2
 801b988:	9307      	str	r3, [sp, #28]
 801b98a:	e744      	b.n	801b816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b98c:	d023      	beq.n	801b9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b98e:	9b06      	ldr	r3, [sp, #24]
 801b990:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801b992:	3b01      	subs	r3, #1
 801b994:	fb00 b003 	mla	r0, r0, r3, fp
 801b998:	1400      	asrs	r0, r0, #16
 801b99a:	f53f af58 	bmi.w	801b84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b99e:	3901      	subs	r1, #1
 801b9a0:	4288      	cmp	r0, r1
 801b9a2:	f6bf af54 	bge.w	801b84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b9a6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801b9a8:	fb01 5303 	mla	r3, r1, r3, r5
 801b9ac:	141b      	asrs	r3, r3, #16
 801b9ae:	f53f af4e 	bmi.w	801b84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b9b2:	3a01      	subs	r2, #1
 801b9b4:	4293      	cmp	r3, r2
 801b9b6:	f6bf af4a 	bge.w	801b84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b9ba:	9b06      	ldr	r3, [sp, #24]
 801b9bc:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9be:	9b07      	ldr	r3, [sp, #28]
 801b9c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b9c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9c4:	2b00      	cmp	r3, #0
 801b9c6:	dc70      	bgt.n	801baaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b9c8:	9b06      	ldr	r3, [sp, #24]
 801b9ca:	9a07      	ldr	r2, [sp, #28]
 801b9cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b9d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b9d4:	9307      	str	r3, [sp, #28]
 801b9d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b9d8:	2b00      	cmp	r3, #0
 801b9da:	f340 80eb 	ble.w	801bbb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b9de:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b9e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b9ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b9f2:	eef0 6a62 	vmov.f32	s13, s5
 801b9f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b9fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b9fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba0a:	ee16 ba90 	vmov	fp, s13
 801ba0e:	eef0 6a43 	vmov.f32	s13, s6
 801ba12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba16:	ee12 2a90 	vmov	r2, s5
 801ba1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba28:	ee13 2a10 	vmov	r2, s6
 801ba2c:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ba2e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba30:	ee16 5a90 	vmov	r5, s13
 801ba34:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba38:	931c      	str	r3, [sp, #112]	@ 0x70
 801ba3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba3c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ba3e:	3b01      	subs	r3, #1
 801ba40:	930a      	str	r3, [sp, #40]	@ 0x28
 801ba42:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba44:	bf08      	it	eq
 801ba46:	4613      	moveq	r3, r2
 801ba48:	eeb0 3a67 	vmov.f32	s6, s15
 801ba4c:	9306      	str	r3, [sp, #24]
 801ba4e:	eef0 2a47 	vmov.f32	s5, s14
 801ba52:	e6d2      	b.n	801b7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ba54:	b149      	cbz	r1, 801ba6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ba56:	4660      	mov	r0, ip
 801ba58:	5cba      	ldrb	r2, [r7, r2]
 801ba5a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ba5e:	4422      	add	r2, r4
 801ba60:	4666      	mov	r6, ip
 801ba62:	e734      	b.n	801b8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ba64:	4660      	mov	r0, ip
 801ba66:	4662      	mov	r2, ip
 801ba68:	e731      	b.n	801b8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ba6a:	4660      	mov	r0, ip
 801ba6c:	4662      	mov	r2, ip
 801ba6e:	e7f7      	b.n	801ba60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ba70:	f110 0c01 	adds.w	ip, r0, #1
 801ba74:	f53f af74 	bmi.w	801b960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba78:	4562      	cmp	r2, ip
 801ba7a:	f6ff af71 	blt.w	801b960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba7e:	f116 0c01 	adds.w	ip, r6, #1
 801ba82:	f53f af6d 	bmi.w	801b960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba86:	4567      	cmp	r7, ip
 801ba88:	f6ff af6a 	blt.w	801b960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ba8c:	b23f      	sxth	r7, r7
 801ba8e:	b212      	sxth	r2, r2
 801ba90:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ba94:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ba98:	9200      	str	r2, [sp, #0]
 801ba9a:	9701      	str	r7, [sp, #4]
 801ba9c:	4623      	mov	r3, r4
 801ba9e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801baa2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801baa4:	f7ff fde6 	bl	801b674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801baa8:	e75a      	b.n	801b960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801baaa:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801baac:	ea4f 462b 	mov.w	r6, fp, asr #16
 801bab0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801bab4:	1428      	asrs	r0, r5, #16
 801bab6:	fb02 6000 	mla	r0, r2, r0, r6
 801baba:	9e08      	ldr	r6, [sp, #32]
 801babc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801bac0:	f816 8000 	ldrb.w	r8, [r6, r0]
 801bac4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bac8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801bacc:	1837      	adds	r7, r6, r0
 801bace:	eb04 0c08 	add.w	ip, r4, r8
 801bad2:	2b00      	cmp	r3, #0
 801bad4:	d060      	beq.n	801bb98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801bad6:	787e      	ldrb	r6, [r7, #1]
 801bad8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801badc:	4426      	add	r6, r4
 801bade:	2900      	cmp	r1, #0
 801bae0:	d062      	beq.n	801bba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801bae2:	18b8      	adds	r0, r7, r2
 801bae4:	7840      	ldrb	r0, [r0, #1]
 801bae6:	5cba      	ldrb	r2, [r7, r2]
 801bae8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801baec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801baf0:	4422      	add	r2, r4
 801baf2:	4420      	add	r0, r4
 801baf4:	b29b      	uxth	r3, r3
 801baf6:	b289      	uxth	r1, r1
 801baf8:	fb03 f901 	mul.w	r9, r3, r1
 801bafc:	011b      	lsls	r3, r3, #4
 801bafe:	78b7      	ldrb	r7, [r6, #2]
 801bb00:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801bb04:	eba3 0309 	sub.w	r3, r3, r9
 801bb08:	b29b      	uxth	r3, r3
 801bb0a:	435f      	muls	r7, r3
 801bb0c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bb10:	b289      	uxth	r1, r1
 801bb12:	f89c a002 	ldrb.w	sl, [ip, #2]
 801bb16:	ebae 0e01 	sub.w	lr, lr, r1
 801bb1a:	fa1f fe8e 	uxth.w	lr, lr
 801bb1e:	fb0e 770a 	mla	r7, lr, sl, r7
 801bb22:	f892 a002 	ldrb.w	sl, [r2, #2]
 801bb26:	f89c c001 	ldrb.w	ip, [ip, #1]
 801bb2a:	fb01 770a 	mla	r7, r1, sl, r7
 801bb2e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801bb32:	fb09 7a0a 	mla	sl, r9, sl, r7
 801bb36:	f814 7008 	ldrb.w	r7, [r4, r8]
 801bb3a:	f896 8000 	ldrb.w	r8, [r6]
 801bb3e:	7876      	ldrb	r6, [r6, #1]
 801bb40:	fb03 f808 	mul.w	r8, r3, r8
 801bb44:	fb0e 8807 	mla	r8, lr, r7, r8
 801bb48:	7817      	ldrb	r7, [r2, #0]
 801bb4a:	4373      	muls	r3, r6
 801bb4c:	fb01 8807 	mla	r8, r1, r7, r8
 801bb50:	7807      	ldrb	r7, [r0, #0]
 801bb52:	fb0e 330c 	mla	r3, lr, ip, r3
 801bb56:	fb09 8707 	mla	r7, r9, r7, r8
 801bb5a:	7856      	ldrb	r6, [r2, #1]
 801bb5c:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801bb60:	fb01 3306 	mla	r3, r1, r6, r3
 801bb64:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bb68:	ea47 070a 	orr.w	r7, r7, sl
 801bb6c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801bb70:	fb09 3a0a 	mla	sl, r9, sl, r3
 801bb74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb7a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bb7e:	ea47 070a 	orr.w	r7, r7, sl
 801bb82:	f823 7b02 	strh.w	r7, [r3], #2
 801bb86:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bb88:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801bb8a:	449b      	add	fp, r3
 801bb8c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bb8e:	441d      	add	r5, r3
 801bb90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb92:	3b01      	subs	r3, #1
 801bb94:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb96:	e714      	b.n	801b9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801bb98:	b149      	cbz	r1, 801bbae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bb9a:	4660      	mov	r0, ip
 801bb9c:	5cba      	ldrb	r2, [r7, r2]
 801bb9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bba2:	4422      	add	r2, r4
 801bba4:	4666      	mov	r6, ip
 801bba6:	e7a5      	b.n	801baf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bba8:	4660      	mov	r0, ip
 801bbaa:	4662      	mov	r2, ip
 801bbac:	e7a2      	b.n	801baf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801bbae:	4660      	mov	r0, ip
 801bbb0:	4662      	mov	r2, ip
 801bbb2:	e7f7      	b.n	801bba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801bbb4:	b00f      	add	sp, #60	@ 0x3c
 801bbb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bbba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801bbba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbbe:	b085      	sub	sp, #20
 801bbc0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801bbc4:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801bbc8:	9102      	str	r1, [sp, #8]
 801bbca:	fb04 710c 	mla	r1, r4, ip, r7
 801bbce:	2c00      	cmp	r4, #0
 801bbd0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801bbd4:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801bbd8:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801bbdc:	eb02 0e01 	add.w	lr, r2, r1
 801bbe0:	f2c0 8122 	blt.w	801be28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bbe4:	45a0      	cmp	r8, r4
 801bbe6:	f340 811f 	ble.w	801be28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801bbea:	2f00      	cmp	r7, #0
 801bbec:	f2c0 811a 	blt.w	801be24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bbf0:	45bc      	cmp	ip, r7
 801bbf2:	f340 8117 	ble.w	801be24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801bbf6:	5c52      	ldrb	r2, [r2, r1]
 801bbf8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bbfc:	1c7a      	adds	r2, r7, #1
 801bbfe:	f100 8116 	bmi.w	801be2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bc02:	4594      	cmp	ip, r2
 801bc04:	f340 8113 	ble.w	801be2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801bc08:	2e00      	cmp	r6, #0
 801bc0a:	f000 8112 	beq.w	801be32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801bc0e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bc12:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bc16:	3401      	adds	r4, #1
 801bc18:	f100 810f 	bmi.w	801be3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bc1c:	45a0      	cmp	r8, r4
 801bc1e:	f340 810c 	ble.w	801be3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801bc22:	2800      	cmp	r0, #0
 801bc24:	f000 810c 	beq.w	801be40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801bc28:	2f00      	cmp	r7, #0
 801bc2a:	f2c0 8104 	blt.w	801be36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bc2e:	45bc      	cmp	ip, r7
 801bc30:	f340 8101 	ble.w	801be36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801bc34:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801bc38:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801bc3c:	3701      	adds	r7, #1
 801bc3e:	f100 8102 	bmi.w	801be46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bc42:	45bc      	cmp	ip, r7
 801bc44:	f340 80ff 	ble.w	801be46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801bc48:	2e00      	cmp	r6, #0
 801bc4a:	f000 80fe 	beq.w	801be4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801bc4e:	44f4      	add	ip, lr
 801bc50:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801bc54:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801bc58:	b2b6      	uxth	r6, r6
 801bc5a:	b280      	uxth	r0, r0
 801bc5c:	fb00 fe06 	mul.w	lr, r0, r6
 801bc60:	0136      	lsls	r6, r6, #4
 801bc62:	eba6 070e 	sub.w	r7, r6, lr
 801bc66:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801bc6a:	b2bf      	uxth	r7, r7
 801bc6c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801bc70:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801bc74:	fb0a f607 	mul.w	r6, sl, r7
 801bc78:	b280      	uxth	r0, r0
 801bc7a:	1a1b      	subs	r3, r3, r0
 801bc7c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801bc80:	b29b      	uxth	r3, r3
 801bc82:	fb0b 6603 	mla	r6, fp, r3, r6
 801bc86:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bc8a:	fb00 6609 	mla	r6, r0, r9, r6
 801bc8e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801bc92:	fb0e 6608 	mla	r6, lr, r8, r6
 801bc96:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bc9a:	9600      	str	r6, [sp, #0]
 801bc9c:	2e00      	cmp	r6, #0
 801bc9e:	f000 80be 	beq.w	801be1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801bca2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801bca6:	fb0b fc0c 	mul.w	ip, fp, ip
 801bcaa:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801bcae:	fb0b f505 	mul.w	r5, fp, r5
 801bcb2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801bcb6:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801bcba:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bcbe:	44dc      	add	ip, fp
 801bcc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcc4:	9501      	str	r5, [sp, #4]
 801bcc6:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801bcca:	9503      	str	r5, [sp, #12]
 801bccc:	9d01      	ldr	r5, [sp, #4]
 801bcce:	9e02      	ldr	r6, [sp, #8]
 801bcd0:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801bcd4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bcd8:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801bcdc:	fb0a fc0c 	mul.w	ip, sl, ip
 801bce0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801bce4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801bce8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bcec:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bcf0:	4465      	add	r5, ip
 801bcf2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bcf6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801bcfa:	fb09 fc0c 	mul.w	ip, r9, ip
 801bcfe:	fb09 f904 	mul.w	r9, r9, r4
 801bd02:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801bd06:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801bd0a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801bd0e:	fb08 f404 	mul.w	r4, r8, r4
 801bd12:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801bd16:	fb08 f802 	mul.w	r8, r8, r2
 801bd1a:	0a2d      	lsrs	r5, r5, #8
 801bd1c:	0a22      	lsrs	r2, r4, #8
 801bd1e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801bd22:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801bd26:	437d      	muls	r5, r7
 801bd28:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801bd2c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bd30:	4414      	add	r4, r2
 801bd32:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801bd36:	fb0a fa01 	mul.w	sl, sl, r1
 801bd3a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801bd3e:	9a03      	ldr	r2, [sp, #12]
 801bd40:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801bd44:	fb02 5503 	mla	r5, r2, r3, r5
 801bd48:	0a24      	lsrs	r4, r4, #8
 801bd4a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bd4e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801bd52:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801bd56:	fb04 540e 	mla	r4, r4, lr, r5
 801bd5a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bd5e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801bd62:	4461      	add	r1, ip
 801bd64:	0a09      	lsrs	r1, r1, #8
 801bd66:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801bd6a:	fb01 4100 	mla	r1, r1, r0, r4
 801bd6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd72:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bd76:	fb07 f70a 	mul.w	r7, r7, sl
 801bd7a:	0a09      	lsrs	r1, r1, #8
 801bd7c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801bd80:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801bd84:	fb03 7101 	mla	r1, r3, r1, r7
 801bd88:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bd8c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801bd90:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bd94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bd98:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801bd9c:	fb00 e101 	mla	r1, r0, r1, lr
 801bda0:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801bda4:	9a00      	ldr	r2, [sp, #0]
 801bda6:	b287      	uxth	r7, r0
 801bda8:	437a      	muls	r2, r7
 801bdaa:	1c53      	adds	r3, r2, #1
 801bdac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bdb0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801bdb4:	0a09      	lsrs	r1, r1, #8
 801bdb6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801bdba:	4321      	orrs	r1, r4
 801bdbc:	0c0a      	lsrs	r2, r1, #16
 801bdbe:	8836      	ldrh	r6, [r6, #0]
 801bdc0:	fb12 f207 	smulbb	r2, r2, r7
 801bdc4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801bdc8:	b2c8      	uxtb	r0, r1
 801bdca:	1235      	asrs	r5, r6, #8
 801bdcc:	fb14 f407 	smulbb	r4, r4, r7
 801bdd0:	fb10 f007 	smulbb	r0, r0, r7
 801bdd4:	b2db      	uxtb	r3, r3
 801bdd6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bdda:	fb05 2503 	mla	r5, r5, r3, r2
 801bdde:	10f2      	asrs	r2, r6, #3
 801bde0:	00f6      	lsls	r6, r6, #3
 801bde2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801bde6:	b2f6      	uxtb	r6, r6
 801bde8:	fb02 4203 	mla	r2, r2, r3, r4
 801bdec:	fb06 0303 	mla	r3, r6, r3, r0
 801bdf0:	b2ad      	uxth	r5, r5
 801bdf2:	b299      	uxth	r1, r3
 801bdf4:	b294      	uxth	r4, r2
 801bdf6:	1c6b      	adds	r3, r5, #1
 801bdf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bdfc:	1c62      	adds	r2, r4, #1
 801bdfe:	1c4b      	adds	r3, r1, #1
 801be00:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801be04:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801be08:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801be0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801be10:	0952      	lsrs	r2, r2, #5
 801be12:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801be16:	432b      	orrs	r3, r5
 801be18:	4313      	orrs	r3, r2
 801be1a:	9a02      	ldr	r2, [sp, #8]
 801be1c:	8013      	strh	r3, [r2, #0]
 801be1e:	b005      	add	sp, #20
 801be20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be24:	2500      	movs	r5, #0
 801be26:	e6e9      	b.n	801bbfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801be28:	2100      	movs	r1, #0
 801be2a:	460d      	mov	r5, r1
 801be2c:	e6f3      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801be2e:	2100      	movs	r1, #0
 801be30:	e6f1      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801be32:	4631      	mov	r1, r6
 801be34:	e6ef      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801be36:	2400      	movs	r4, #0
 801be38:	e700      	b.n	801bc3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801be3a:	2200      	movs	r2, #0
 801be3c:	4614      	mov	r4, r2
 801be3e:	e70b      	b.n	801bc58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801be40:	4602      	mov	r2, r0
 801be42:	4604      	mov	r4, r0
 801be44:	e708      	b.n	801bc58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801be46:	2200      	movs	r2, #0
 801be48:	e706      	b.n	801bc58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801be4a:	4632      	mov	r2, r6
 801be4c:	e704      	b.n	801bc58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801be4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be52:	b09f      	sub	sp, #124	@ 0x7c
 801be54:	921b      	str	r2, [sp, #108]	@ 0x6c
 801be56:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801be58:	901d      	str	r0, [sp, #116]	@ 0x74
 801be5a:	9309      	str	r3, [sp, #36]	@ 0x24
 801be5c:	6850      	ldr	r0, [r2, #4]
 801be5e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801be62:	9119      	str	r1, [sp, #100]	@ 0x64
 801be64:	931c      	str	r3, [sp, #112]	@ 0x70
 801be66:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801be6a:	fb00 1303 	mla	r3, r0, r3, r1
 801be6e:	6812      	ldr	r2, [r2, #0]
 801be70:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801be72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801be76:	930c      	str	r3, [sp, #48]	@ 0x30
 801be78:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801be7a:	681b      	ldr	r3, [r3, #0]
 801be7c:	9312      	str	r3, [sp, #72]	@ 0x48
 801be7e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801be80:	685e      	ldr	r6, [r3, #4]
 801be82:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801be86:	3604      	adds	r6, #4
 801be88:	930d      	str	r3, [sp, #52]	@ 0x34
 801be8a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801be8c:	2b00      	cmp	r3, #0
 801be8e:	dc03      	bgt.n	801be98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801be90:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801be92:	2b00      	cmp	r3, #0
 801be94:	f340 8387 	ble.w	801c5a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801be98:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801be9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bea2:	1e48      	subs	r0, r1, #1
 801bea4:	1e57      	subs	r7, r2, #1
 801bea6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bea8:	2b00      	cmp	r3, #0
 801beaa:	f340 8194 	ble.w	801c1d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801beae:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801beb0:	142b      	asrs	r3, r5, #16
 801beb2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801beb6:	d406      	bmi.n	801bec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801beb8:	4584      	cmp	ip, r0
 801beba:	da04      	bge.n	801bec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bebc:	2b00      	cmp	r3, #0
 801bebe:	db02      	blt.n	801bec6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bec0:	42bb      	cmp	r3, r7
 801bec2:	f2c0 8189 	blt.w	801c1d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bec6:	f11c 0c01 	adds.w	ip, ip, #1
 801beca:	f100 8177 	bmi.w	801c1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bece:	4561      	cmp	r1, ip
 801bed0:	f2c0 8174 	blt.w	801c1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bed4:	3301      	adds	r3, #1
 801bed6:	f100 8171 	bmi.w	801c1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801beda:	429a      	cmp	r2, r3
 801bedc:	f2c0 816e 	blt.w	801c1bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801bee0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bee2:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801bee4:	931a      	str	r3, [sp, #104]	@ 0x68
 801bee6:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801bee8:	2b00      	cmp	r3, #0
 801beea:	f340 8193 	ble.w	801c214 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801beee:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801bef0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bef4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bef8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801befa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801befe:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801bf02:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801bf04:	141b      	asrs	r3, r3, #16
 801bf06:	f100 81d6 	bmi.w	801c2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bf0a:	f100 38ff 	add.w	r8, r0, #4294967295
 801bf0e:	4543      	cmp	r3, r8
 801bf10:	f280 81d1 	bge.w	801c2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bf14:	f1bc 0f00 	cmp.w	ip, #0
 801bf18:	f2c0 81cd 	blt.w	801c2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bf1c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bf20:	45c4      	cmp	ip, r8
 801bf22:	f280 81c8 	bge.w	801c2b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801bf26:	b200      	sxth	r0, r0
 801bf28:	fb0c 3300 	mla	r3, ip, r0, r3
 801bf2c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bf2e:	eb04 0803 	add.w	r8, r4, r3
 801bf32:	5ce3      	ldrb	r3, [r4, r3]
 801bf34:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bf38:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801bf3c:	2a00      	cmp	r2, #0
 801bf3e:	f000 81af 	beq.w	801c2a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801bf42:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bf46:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bf4a:	940e      	str	r4, [sp, #56]	@ 0x38
 801bf4c:	0e24      	lsrs	r4, r4, #24
 801bf4e:	9415      	str	r4, [sp, #84]	@ 0x54
 801bf50:	b179      	cbz	r1, 801bf72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801bf52:	eb08 0c00 	add.w	ip, r8, r0
 801bf56:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bf5a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bf5e:	900a      	str	r0, [sp, #40]	@ 0x28
 801bf60:	0e00      	lsrs	r0, r0, #24
 801bf62:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bf64:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801bf68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bf6c:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bf6e:	0e00      	lsrs	r0, r0, #24
 801bf70:	9016      	str	r0, [sp, #88]	@ 0x58
 801bf72:	b292      	uxth	r2, r2
 801bf74:	b289      	uxth	r1, r1
 801bf76:	fb02 f901 	mul.w	r9, r2, r1
 801bf7a:	0112      	lsls	r2, r2, #4
 801bf7c:	eba2 0809 	sub.w	r8, r2, r9
 801bf80:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801bf82:	fa1f f888 	uxth.w	r8, r8
 801bf86:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bf8a:	fb08 f000 	mul.w	r0, r8, r0
 801bf8e:	b289      	uxth	r1, r1
 801bf90:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bf94:	1a52      	subs	r2, r2, r1
 801bf96:	b292      	uxth	r2, r2
 801bf98:	fb02 000e 	mla	r0, r2, lr, r0
 801bf9c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bf9e:	fb01 0004 	mla	r0, r1, r4, r0
 801bfa2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801bfa4:	fb09 0004 	mla	r0, r9, r4, r0
 801bfa8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bfac:	2800      	cmp	r0, #0
 801bfae:	f000 80fa 	beq.w	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bfb2:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bfb6:	d01b      	beq.n	801bff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801bfb8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bfbc:	fb0e fa0a 	mul.w	sl, lr, sl
 801bfc0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bfc4:	fb0e fe03 	mul.w	lr, lr, r3
 801bfc8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bfcc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bfd0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bfd4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bfd8:	4453      	add	r3, sl
 801bfda:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bfde:	0a1b      	lsrs	r3, r3, #8
 801bfe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bfe4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bfe8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bfec:	ea43 030c 	orr.w	r3, r3, ip
 801bff0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bff2:	2cff      	cmp	r4, #255	@ 0xff
 801bff4:	d021      	beq.n	801c03a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801bff6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bff8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bffc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bffe:	fb04 fb0b 	mul.w	fp, r4, fp
 801c002:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c004:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c008:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c00c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c00e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c012:	fb04 fa0a 	mul.w	sl, r4, sl
 801c016:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c01a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c01e:	44de      	add	lr, fp
 801c020:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c024:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c028:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c02c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c030:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c034:	ea4e 040a 	orr.w	r4, lr, sl
 801c038:	940e      	str	r4, [sp, #56]	@ 0x38
 801c03a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c03c:	2cff      	cmp	r4, #255	@ 0xff
 801c03e:	d021      	beq.n	801c084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c040:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c042:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c046:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c048:	fb04 fb0b 	mul.w	fp, r4, fp
 801c04c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c04e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c052:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c056:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c058:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c05c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c060:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c064:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c068:	44de      	add	lr, fp
 801c06a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c06e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c072:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c076:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c07a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c07e:	ea4e 040a 	orr.w	r4, lr, sl
 801c082:	940a      	str	r4, [sp, #40]	@ 0x28
 801c084:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c086:	2cff      	cmp	r4, #255	@ 0xff
 801c088:	d021      	beq.n	801c0ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801c08a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c08c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c090:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c092:	fb04 fb0b 	mul.w	fp, r4, fp
 801c096:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c098:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c09c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c0a0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c0a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c0a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801c0aa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c0ae:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c0b2:	44de      	add	lr, fp
 801c0b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c0b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c0bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c0c0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c0c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c0c8:	ea4e 040a 	orr.w	r4, lr, sl
 801c0cc:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c0ce:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c0d0:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c0d4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c0d8:	fb08 fc0c 	mul.w	ip, r8, ip
 801c0dc:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c0e0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c0e2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c0e6:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c0ea:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c0ee:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c0f0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c0f4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c0f6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c0fa:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c0fe:	fb08 f80e 	mul.w	r8, r8, lr
 801c102:	fb02 8303 	mla	r3, r2, r3, r8
 801c106:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c108:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c10c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c110:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c112:	fb01 330a 	mla	r3, r1, sl, r3
 801c116:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801c11a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c11c:	fb09 3901 	mla	r9, r9, r1, r3
 801c120:	4342      	muls	r2, r0
 801c122:	1c50      	adds	r0, r2, #1
 801c124:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c128:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c12c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c130:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c134:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c138:	ea4c 0c09 	orr.w	ip, ip, r9
 801c13c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c13e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c142:	883b      	ldrh	r3, [r7, #0]
 801c144:	fb12 f204 	smulbb	r2, r2, r4
 801c148:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c14c:	fa5f fc8c 	uxtb.w	ip, ip
 801c150:	1219      	asrs	r1, r3, #8
 801c152:	fb1c fc04 	smulbb	ip, ip, r4
 801c156:	b2c0      	uxtb	r0, r0
 801c158:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c15c:	fb01 2100 	mla	r1, r1, r0, r2
 801c160:	10da      	asrs	r2, r3, #3
 801c162:	00db      	lsls	r3, r3, #3
 801c164:	fb1e fe04 	smulbb	lr, lr, r4
 801c168:	b2db      	uxtb	r3, r3
 801c16a:	fb03 c300 	mla	r3, r3, r0, ip
 801c16e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c172:	b289      	uxth	r1, r1
 801c174:	fb02 e200 	mla	r2, r2, r0, lr
 801c178:	fa1f fc83 	uxth.w	ip, r3
 801c17c:	1c4b      	adds	r3, r1, #1
 801c17e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c182:	f10c 0301 	add.w	r3, ip, #1
 801c186:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c18a:	b292      	uxth	r2, r2
 801c18c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c190:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c194:	430b      	orrs	r3, r1
 801c196:	1c51      	adds	r1, r2, #1
 801c198:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c19c:	0952      	lsrs	r2, r2, #5
 801c19e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c1a2:	4313      	orrs	r3, r2
 801c1a4:	803b      	strh	r3, [r7, #0]
 801c1a6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c1a8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c1aa:	3702      	adds	r7, #2
 801c1ac:	441a      	add	r2, r3
 801c1ae:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c1b0:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c1b2:	441d      	add	r5, r3
 801c1b4:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c1b6:	3b01      	subs	r3, #1
 801c1b8:	931a      	str	r3, [sp, #104]	@ 0x68
 801c1ba:	e694      	b.n	801bee6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c1bc:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c1be:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c1c0:	441c      	add	r4, r3
 801c1c2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c1c4:	9429      	str	r4, [sp, #164]	@ 0xa4
 801c1c6:	441d      	add	r5, r3
 801c1c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c1ca:	3b01      	subs	r3, #1
 801c1cc:	9309      	str	r3, [sp, #36]	@ 0x24
 801c1ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c1d0:	3302      	adds	r3, #2
 801c1d2:	930c      	str	r3, [sp, #48]	@ 0x30
 801c1d4:	e667      	b.n	801bea6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c1d6:	d024      	beq.n	801c222 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801c1d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c1da:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801c1dc:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c1de:	3b01      	subs	r3, #1
 801c1e0:	fb00 4003 	mla	r0, r0, r3, r4
 801c1e4:	1400      	asrs	r0, r0, #16
 801c1e6:	f53f ae7b 	bmi.w	801bee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1ea:	3901      	subs	r1, #1
 801c1ec:	4288      	cmp	r0, r1
 801c1ee:	f6bf ae77 	bge.w	801bee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1f2:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801c1f4:	fb01 5303 	mla	r3, r1, r3, r5
 801c1f8:	141b      	asrs	r3, r3, #16
 801c1fa:	f53f ae71 	bmi.w	801bee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c1fe:	3a01      	subs	r2, #1
 801c200:	4293      	cmp	r3, r2
 801c202:	f6bf ae6d 	bge.w	801bee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c206:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c20a:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c20e:	f1bb 0f00 	cmp.w	fp, #0
 801c212:	dc70      	bgt.n	801c2f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801c214:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c216:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c21a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c21c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c220:	930c      	str	r3, [sp, #48]	@ 0x30
 801c222:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c224:	2b00      	cmp	r3, #0
 801c226:	f340 81be 	ble.w	801c5a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801c22a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c22e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c232:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c236:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c23a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c23e:	eef0 6a62 	vmov.f32	s13, s5
 801c242:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c246:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c24a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c24e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c252:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c256:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801c25a:	eef0 6a43 	vmov.f32	s13, s6
 801c25e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c262:	ee12 2a90 	vmov	r2, s5
 801c266:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c26a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c26c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c270:	fb92 f3f3 	sdiv	r3, r2, r3
 801c274:	ee13 2a10 	vmov	r2, s6
 801c278:	932b      	str	r3, [sp, #172]	@ 0xac
 801c27a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c27c:	ee16 5a90 	vmov	r5, s13
 801c280:	fb92 f3f3 	sdiv	r3, r2, r3
 801c284:	932c      	str	r3, [sp, #176]	@ 0xb0
 801c286:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c288:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c28a:	3b01      	subs	r3, #1
 801c28c:	9319      	str	r3, [sp, #100]	@ 0x64
 801c28e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c290:	bf08      	it	eq
 801c292:	4613      	moveq	r3, r2
 801c294:	eeb0 3a67 	vmov.f32	s6, s15
 801c298:	9309      	str	r3, [sp, #36]	@ 0x24
 801c29a:	eef0 2a47 	vmov.f32	s5, s14
 801c29e:	e5f4      	b.n	801be8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c2a0:	2900      	cmp	r1, #0
 801c2a2:	f43f ae66 	beq.w	801bf72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801c2a6:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c2aa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c2ae:	900a      	str	r0, [sp, #40]	@ 0x28
 801c2b0:	0e00      	lsrs	r0, r0, #24
 801c2b2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c2b4:	e65d      	b.n	801bf72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801c2b6:	f113 0801 	adds.w	r8, r3, #1
 801c2ba:	f53f af74 	bmi.w	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c2be:	4540      	cmp	r0, r8
 801c2c0:	f6ff af71 	blt.w	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c2c4:	f11c 0801 	adds.w	r8, ip, #1
 801c2c8:	f53f af6d 	bmi.w	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c2cc:	45c6      	cmp	lr, r8
 801c2ce:	f6ff af6a 	blt.w	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c2d2:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801c2d4:	9302      	str	r3, [sp, #8]
 801c2d6:	b200      	sxth	r0, r0
 801c2d8:	fa0f f38e 	sxth.w	r3, lr
 801c2dc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801c2e0:	e9cd c203 	strd	ip, r2, [sp, #12]
 801c2e4:	9301      	str	r3, [sp, #4]
 801c2e6:	9000      	str	r0, [sp, #0]
 801c2e8:	4633      	mov	r3, r6
 801c2ea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c2ec:	4639      	mov	r1, r7
 801c2ee:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801c2f0:	f7ff fc63 	bl	801bbba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801c2f4:	e757      	b.n	801c1a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c2f6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c2f8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c2fa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c2fe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c300:	1427      	asrs	r7, r4, #16
 801c302:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c306:	142b      	asrs	r3, r5, #16
 801c308:	fb01 7303 	mla	r3, r1, r3, r7
 801c30c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c30e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c312:	18e7      	adds	r7, r4, r3
 801c314:	5ce3      	ldrb	r3, [r4, r3]
 801c316:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c31a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c31e:	2a00      	cmp	r2, #0
 801c320:	f000 8137 	beq.w	801c592 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801c324:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c328:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c32c:	9410      	str	r4, [sp, #64]	@ 0x40
 801c32e:	0e24      	lsrs	r4, r4, #24
 801c330:	9417      	str	r4, [sp, #92]	@ 0x5c
 801c332:	b170      	cbz	r0, 801c352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c334:	eb07 0e01 	add.w	lr, r7, r1
 801c338:	5c79      	ldrb	r1, [r7, r1]
 801c33a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c33e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c340:	0e09      	lsrs	r1, r1, #24
 801c342:	9114      	str	r1, [sp, #80]	@ 0x50
 801c344:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c348:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c34c:	9111      	str	r1, [sp, #68]	@ 0x44
 801c34e:	0e09      	lsrs	r1, r1, #24
 801c350:	9118      	str	r1, [sp, #96]	@ 0x60
 801c352:	b292      	uxth	r2, r2
 801c354:	b280      	uxth	r0, r0
 801c356:	fb02 f800 	mul.w	r8, r2, r0
 801c35a:	0112      	lsls	r2, r2, #4
 801c35c:	eba2 0e08 	sub.w	lr, r2, r8
 801c360:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c362:	fa1f fe8e 	uxth.w	lr, lr
 801c366:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c36a:	fb0e f101 	mul.w	r1, lr, r1
 801c36e:	b280      	uxth	r0, r0
 801c370:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c374:	1a12      	subs	r2, r2, r0
 801c376:	b292      	uxth	r2, r2
 801c378:	fb02 110c 	mla	r1, r2, ip, r1
 801c37c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c37e:	fb00 1104 	mla	r1, r0, r4, r1
 801c382:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c384:	fb08 1104 	mla	r1, r8, r4, r1
 801c388:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c38c:	2900      	cmp	r1, #0
 801c38e:	f000 80f5 	beq.w	801c57c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801c392:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801c396:	d019      	beq.n	801c3cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801c398:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c39c:	fb0c fa0a 	mul.w	sl, ip, sl
 801c3a0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c3a4:	fb0c fc03 	mul.w	ip, ip, r3
 801c3a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c3ac:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c3b0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c3b4:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801c3b8:	4453      	add	r3, sl
 801c3ba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c3be:	0a1b      	lsrs	r3, r3, #8
 801c3c0:	0a3f      	lsrs	r7, r7, #8
 801c3c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c3c6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c3ca:	433b      	orrs	r3, r7
 801c3cc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c3ce:	2cff      	cmp	r4, #255	@ 0xff
 801c3d0:	d020      	beq.n	801c414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801c3d2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c3d4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c3d8:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c3da:	4367      	muls	r7, r4
 801c3dc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c3de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c3e2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c3e6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801c3e8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c3ec:	fb04 fa0a 	mul.w	sl, r4, sl
 801c3f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c3f4:	44bc      	add	ip, r7
 801c3f6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c3fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c3fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c402:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c406:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c40a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c40e:	ea4c 040a 	orr.w	r4, ip, sl
 801c412:	9410      	str	r4, [sp, #64]	@ 0x40
 801c414:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c416:	2cff      	cmp	r4, #255	@ 0xff
 801c418:	d020      	beq.n	801c45c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801c41a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c41c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c420:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c422:	4367      	muls	r7, r4
 801c424:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c426:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c42a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c42e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801c430:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c434:	fb04 fa0a 	mul.w	sl, r4, sl
 801c438:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c43c:	44bc      	add	ip, r7
 801c43e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c442:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c446:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c44a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c44e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c452:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c456:	ea4c 040a 	orr.w	r4, ip, sl
 801c45a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c45c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c45e:	2cff      	cmp	r4, #255	@ 0xff
 801c460:	d020      	beq.n	801c4a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801c462:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c464:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c468:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c46a:	4367      	muls	r7, r4
 801c46c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c46e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c472:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c476:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801c478:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c47c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c480:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c484:	44bc      	add	ip, r7
 801c486:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801c48a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c48e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c492:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c496:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c49a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c49e:	ea4c 040a 	orr.w	r4, ip, sl
 801c4a2:	9411      	str	r4, [sp, #68]	@ 0x44
 801c4a4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c4a6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c4aa:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c4ae:	fb0e f707 	mul.w	r7, lr, r7
 801c4b2:	fb02 770c 	mla	r7, r2, ip, r7
 801c4b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c4b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c4bc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c4c0:	fb00 770c 	mla	r7, r0, ip, r7
 801c4c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801c4c6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c4ca:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c4cc:	fb08 770c 	mla	r7, r8, ip, r7
 801c4d0:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c4d4:	fb0e fe0c 	mul.w	lr, lr, ip
 801c4d8:	fb02 e303 	mla	r3, r2, r3, lr
 801c4dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c4de:	0a3f      	lsrs	r7, r7, #8
 801c4e0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c4e4:	fb00 330a 	mla	r3, r0, sl, r3
 801c4e8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c4ea:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c4ee:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801c4f2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c4f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c4f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c4fc:	434b      	muls	r3, r1
 801c4fe:	1c59      	adds	r1, r3, #1
 801c500:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c504:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c508:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c50c:	ea47 070c 	orr.w	r7, r7, ip
 801c510:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c512:	0c3b      	lsrs	r3, r7, #16
 801c514:	f8b9 0000 	ldrh.w	r0, [r9]
 801c518:	fb13 f304 	smulbb	r3, r3, r4
 801c51c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c520:	b2ff      	uxtb	r7, r7
 801c522:	1202      	asrs	r2, r0, #8
 801c524:	fb17 f704 	smulbb	r7, r7, r4
 801c528:	b2c9      	uxtb	r1, r1
 801c52a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c52e:	fb02 3201 	mla	r2, r2, r1, r3
 801c532:	10c3      	asrs	r3, r0, #3
 801c534:	00c0      	lsls	r0, r0, #3
 801c536:	fb1c fc04 	smulbb	ip, ip, r4
 801c53a:	b2c0      	uxtb	r0, r0
 801c53c:	fb00 7001 	mla	r0, r0, r1, r7
 801c540:	b292      	uxth	r2, r2
 801c542:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c546:	fb03 c301 	mla	r3, r3, r1, ip
 801c54a:	f102 0c01 	add.w	ip, r2, #1
 801c54e:	b280      	uxth	r0, r0
 801c550:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c554:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801c558:	1c42      	adds	r2, r0, #1
 801c55a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c55e:	b29b      	uxth	r3, r3
 801c560:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c564:	ea42 020c 	orr.w	r2, r2, ip
 801c568:	f103 0c01 	add.w	ip, r3, #1
 801c56c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c570:	095b      	lsrs	r3, r3, #5
 801c572:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c576:	431a      	orrs	r2, r3
 801c578:	f8a9 2000 	strh.w	r2, [r9]
 801c57c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c57e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c580:	f109 0902 	add.w	r9, r9, #2
 801c584:	441a      	add	r2, r3
 801c586:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c588:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c58a:	441d      	add	r5, r3
 801c58c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c590:	e63d      	b.n	801c20e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c592:	2800      	cmp	r0, #0
 801c594:	f43f aedd 	beq.w	801c352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c598:	5c79      	ldrb	r1, [r7, r1]
 801c59a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c59e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c5a0:	0e09      	lsrs	r1, r1, #24
 801c5a2:	9114      	str	r1, [sp, #80]	@ 0x50
 801c5a4:	e6d5      	b.n	801c352 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801c5a6:	b01f      	add	sp, #124	@ 0x7c
 801c5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c5ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5b0:	b089      	sub	sp, #36	@ 0x24
 801c5b2:	9101      	str	r1, [sp, #4]
 801c5b4:	9801      	ldr	r0, [sp, #4]
 801c5b6:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801c5ba:	8800      	ldrh	r0, [r0, #0]
 801c5bc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801c5c0:	1206      	asrs	r6, r0, #8
 801c5c2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c5c6:	9602      	str	r6, [sp, #8]
 801c5c8:	10c6      	asrs	r6, r0, #3
 801c5ca:	00c0      	lsls	r0, r0, #3
 801c5cc:	b2c0      	uxtb	r0, r0
 801c5ce:	9004      	str	r0, [sp, #16]
 801c5d0:	fb07 100c 	mla	r0, r7, ip, r1
 801c5d4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c5d8:	2f00      	cmp	r7, #0
 801c5da:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801c5de:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801c5e2:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801c5e6:	9603      	str	r6, [sp, #12]
 801c5e8:	eb02 0e00 	add.w	lr, r2, r0
 801c5ec:	f2c0 810a 	blt.w	801c804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c5f0:	45b8      	cmp	r8, r7
 801c5f2:	f340 8107 	ble.w	801c804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c5f6:	2900      	cmp	r1, #0
 801c5f8:	f2c0 8102 	blt.w	801c800 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c5fc:	458c      	cmp	ip, r1
 801c5fe:	f340 80ff 	ble.w	801c800 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c602:	5c12      	ldrb	r2, [r2, r0]
 801c604:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c608:	1c4a      	adds	r2, r1, #1
 801c60a:	f100 80fe 	bmi.w	801c80a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c60e:	4594      	cmp	ip, r2
 801c610:	f340 80fb 	ble.w	801c80a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c614:	2d00      	cmp	r5, #0
 801c616:	f000 80fa 	beq.w	801c80e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c61a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c61e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c622:	3701      	adds	r7, #1
 801c624:	f100 80f7 	bmi.w	801c816 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c628:	45b8      	cmp	r8, r7
 801c62a:	f340 80f4 	ble.w	801c816 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c62e:	2c00      	cmp	r4, #0
 801c630:	f000 80f4 	beq.w	801c81c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c634:	2900      	cmp	r1, #0
 801c636:	eb0e 020c 	add.w	r2, lr, ip
 801c63a:	f2c0 80ea 	blt.w	801c812 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c63e:	458c      	cmp	ip, r1
 801c640:	f340 80e7 	ble.w	801c812 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c644:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c648:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c64c:	3101      	adds	r1, #1
 801c64e:	f100 80e8 	bmi.w	801c822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c652:	458c      	cmp	ip, r1
 801c654:	f340 80e5 	ble.w	801c822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c658:	2d00      	cmp	r5, #0
 801c65a:	f000 80e4 	beq.w	801c826 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801c65e:	7852      	ldrb	r2, [r2, #1]
 801c660:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c664:	0e0b      	lsrs	r3, r1, #24
 801c666:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801c66a:	9300      	str	r3, [sp, #0]
 801c66c:	b2a4      	uxth	r4, r4
 801c66e:	b2ab      	uxth	r3, r5
 801c670:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801c674:	fb03 f904 	mul.w	r9, r3, r4
 801c678:	fb0a f505 	mul.w	r5, sl, r5
 801c67c:	011b      	lsls	r3, r3, #4
 801c67e:	eba3 0e09 	sub.w	lr, r3, r9
 801c682:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801c686:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801c68a:	0a28      	lsrs	r0, r5, #8
 801c68c:	fb0a f303 	mul.w	r3, sl, r3
 801c690:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c694:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801c698:	4405      	add	r5, r0
 801c69a:	0a2d      	lsrs	r5, r5, #8
 801c69c:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801c6a0:	9005      	str	r0, [sp, #20]
 801c6a2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801c6a6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c6aa:	0a1b      	lsrs	r3, r3, #8
 801c6ac:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801c6b0:	9306      	str	r3, [sp, #24]
 801c6b2:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801c6b6:	fb0b f303 	mul.w	r3, fp, r3
 801c6ba:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c6be:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801c6c2:	fb0b f606 	mul.w	r6, fp, r6
 801c6c6:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801c6ca:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801c6ce:	fb08 f707 	mul.w	r7, r8, r7
 801c6d2:	0a1d      	lsrs	r5, r3, #8
 801c6d4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c6d8:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801c6dc:	441d      	add	r5, r3
 801c6de:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801c6e2:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c6e6:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801c6ea:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801c6ee:	fb08 fc0c 	mul.w	ip, r8, ip
 801c6f2:	0a1b      	lsrs	r3, r3, #8
 801c6f4:	9307      	str	r3, [sp, #28]
 801c6f6:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801c6fa:	0e0b      	lsrs	r3, r1, #24
 801c6fc:	0a2d      	lsrs	r5, r5, #8
 801c6fe:	fa1f fe8e 	uxth.w	lr, lr
 801c702:	435f      	muls	r7, r3
 801c704:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c708:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c70c:	fb05 f50e 	mul.w	r5, r5, lr
 801c710:	b2a4      	uxth	r4, r4
 801c712:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c716:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c71a:	4359      	muls	r1, r3
 801c71c:	1b12      	subs	r2, r2, r4
 801c71e:	9b05      	ldr	r3, [sp, #20]
 801c720:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c724:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c728:	b292      	uxth	r2, r2
 801c72a:	4460      	add	r0, ip
 801c72c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c730:	fb03 5502 	mla	r5, r3, r2, r5
 801c734:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801c738:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c73c:	44bc      	add	ip, r7
 801c73e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c742:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c746:	0a36      	lsrs	r6, r6, #8
 801c748:	fb0c 5509 	mla	r5, ip, r9, r5
 801c74c:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801c750:	fb0e f606 	mul.w	r6, lr, r6
 801c754:	9b06      	ldr	r3, [sp, #24]
 801c756:	0a00      	lsrs	r0, r0, #8
 801c758:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801c75c:	fb00 5504 	mla	r5, r0, r4, r5
 801c760:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801c764:	fb02 6000 	mla	r0, r2, r0, r6
 801c768:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801c76c:	fb0e fe0b 	mul.w	lr, lr, fp
 801c770:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c774:	0a09      	lsrs	r1, r1, #8
 801c776:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c77a:	fb09 0001 	mla	r0, r9, r1, r0
 801c77e:	fb02 e20a 	mla	r2, r2, sl, lr
 801c782:	9b07      	ldr	r3, [sp, #28]
 801c784:	0a2d      	lsrs	r5, r5, #8
 801c786:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c78a:	fb04 0003 	mla	r0, r4, r3, r0
 801c78e:	fb04 2408 	mla	r4, r4, r8, r2
 801c792:	9b00      	ldr	r3, [sp, #0]
 801c794:	9a04      	ldr	r2, [sp, #16]
 801c796:	fb09 4903 	mla	r9, r9, r3, r4
 801c79a:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c79e:	9b02      	ldr	r3, [sp, #8]
 801c7a0:	fa5f f989 	uxtb.w	r9, r9
 801c7a4:	fb03 f109 	mul.w	r1, r3, r9
 801c7a8:	9b03      	ldr	r3, [sp, #12]
 801c7aa:	0a00      	lsrs	r0, r0, #8
 801c7ac:	fb03 f309 	mul.w	r3, r3, r9
 801c7b0:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801c7b4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c7b8:	4305      	orrs	r5, r0
 801c7ba:	fb02 f909 	mul.w	r9, r2, r9
 801c7be:	1c58      	adds	r0, r3, #1
 801c7c0:	1c4a      	adds	r2, r1, #1
 801c7c2:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c7c6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c7ca:	0a2b      	lsrs	r3, r5, #8
 801c7cc:	0c2a      	lsrs	r2, r5, #16
 801c7ce:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c7d2:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c7d6:	00db      	lsls	r3, r3, #3
 801c7d8:	0212      	lsls	r2, r2, #8
 801c7da:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801c7de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7e2:	4313      	orrs	r3, r2
 801c7e4:	f109 0201 	add.w	r2, r9, #1
 801c7e8:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c7ec:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c7f0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c7f4:	431d      	orrs	r5, r3
 801c7f6:	9b01      	ldr	r3, [sp, #4]
 801c7f8:	801d      	strh	r5, [r3, #0]
 801c7fa:	b009      	add	sp, #36	@ 0x24
 801c7fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c800:	2000      	movs	r0, #0
 801c802:	e701      	b.n	801c608 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c804:	2600      	movs	r6, #0
 801c806:	4630      	mov	r0, r6
 801c808:	e70b      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c80a:	2600      	movs	r6, #0
 801c80c:	e709      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c80e:	462e      	mov	r6, r5
 801c810:	e707      	b.n	801c622 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c812:	2700      	movs	r7, #0
 801c814:	e71a      	b.n	801c64c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c816:	2100      	movs	r1, #0
 801c818:	460f      	mov	r7, r1
 801c81a:	e723      	b.n	801c664 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c81c:	4621      	mov	r1, r4
 801c81e:	4627      	mov	r7, r4
 801c820:	e720      	b.n	801c664 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c822:	2100      	movs	r1, #0
 801c824:	e71e      	b.n	801c664 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c826:	4629      	mov	r1, r5
 801c828:	e71c      	b.n	801c664 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
	...

0801c82c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c82c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c830:	b09b      	sub	sp, #108	@ 0x6c
 801c832:	9218      	str	r2, [sp, #96]	@ 0x60
 801c834:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c836:	9019      	str	r0, [sp, #100]	@ 0x64
 801c838:	6850      	ldr	r0, [r2, #4]
 801c83a:	9116      	str	r1, [sp, #88]	@ 0x58
 801c83c:	9307      	str	r3, [sp, #28]
 801c83e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801c842:	fb00 1303 	mla	r3, r0, r3, r1
 801c846:	6812      	ldr	r2, [r2, #0]
 801c848:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801c84a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c84e:	930a      	str	r3, [sp, #40]	@ 0x28
 801c850:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c852:	681b      	ldr	r3, [r3, #0]
 801c854:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c856:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c858:	685e      	ldr	r6, [r3, #4]
 801c85a:	3604      	adds	r6, #4
 801c85c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c85e:	2b00      	cmp	r3, #0
 801c860:	dc03      	bgt.n	801c86a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c862:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c864:	2b00      	cmp	r3, #0
 801c866:	f340 8373 	ble.w	801cf50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c86a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c86c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c870:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c874:	1e48      	subs	r0, r1, #1
 801c876:	1e57      	subs	r7, r2, #1
 801c878:	9b07      	ldr	r3, [sp, #28]
 801c87a:	2b00      	cmp	r3, #0
 801c87c:	f340 818f 	ble.w	801cb9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801c880:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801c882:	142b      	asrs	r3, r5, #16
 801c884:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c888:	d406      	bmi.n	801c898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c88a:	4584      	cmp	ip, r0
 801c88c:	da04      	bge.n	801c898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c88e:	2b00      	cmp	r3, #0
 801c890:	db02      	blt.n	801c898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c892:	42bb      	cmp	r3, r7
 801c894:	f2c0 8184 	blt.w	801cba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c898:	f11c 0c01 	adds.w	ip, ip, #1
 801c89c:	f100 8172 	bmi.w	801cb84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c8a0:	4561      	cmp	r1, ip
 801c8a2:	f2c0 816f 	blt.w	801cb84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c8a6:	3301      	adds	r3, #1
 801c8a8:	f100 816c 	bmi.w	801cb84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c8ac:	429a      	cmp	r2, r3
 801c8ae:	f2c0 8169 	blt.w	801cb84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801c8b2:	9b07      	ldr	r3, [sp, #28]
 801c8b4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801c8b6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801c8b8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c8ba:	2b00      	cmp	r3, #0
 801c8bc:	f340 818e 	ble.w	801cbdc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801c8c0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c8c2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c8c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c8ca:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c8cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c8d0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c8d4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c8d6:	141b      	asrs	r3, r3, #16
 801c8d8:	f100 81d1 	bmi.w	801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c8dc:	f101 38ff 	add.w	r8, r1, #4294967295
 801c8e0:	4543      	cmp	r3, r8
 801c8e2:	f280 81cc 	bge.w	801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c8e6:	f1bc 0f00 	cmp.w	ip, #0
 801c8ea:	f2c0 81c8 	blt.w	801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c8ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c8f2:	45c4      	cmp	ip, r8
 801c8f4:	f280 81c3 	bge.w	801cc7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c8f8:	b209      	sxth	r1, r1
 801c8fa:	fb0c 3301 	mla	r3, ip, r1, r3
 801c8fe:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c900:	eb04 0803 	add.w	r8, r4, r3
 801c904:	5ce3      	ldrb	r3, [r4, r3]
 801c906:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c90a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c90e:	2a00      	cmp	r2, #0
 801c910:	f000 81aa 	beq.w	801cc68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801c914:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c918:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c91c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c91e:	0e24      	lsrs	r4, r4, #24
 801c920:	9412      	str	r4, [sp, #72]	@ 0x48
 801c922:	b178      	cbz	r0, 801c944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801c924:	eb08 0c01 	add.w	ip, r8, r1
 801c928:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c92c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c930:	9108      	str	r1, [sp, #32]
 801c932:	0e09      	lsrs	r1, r1, #24
 801c934:	9110      	str	r1, [sp, #64]	@ 0x40
 801c936:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c93a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c93e:	910c      	str	r1, [sp, #48]	@ 0x30
 801c940:	0e09      	lsrs	r1, r1, #24
 801c942:	9113      	str	r1, [sp, #76]	@ 0x4c
 801c944:	b292      	uxth	r2, r2
 801c946:	b280      	uxth	r0, r0
 801c948:	fb02 f900 	mul.w	r9, r2, r0
 801c94c:	0112      	lsls	r2, r2, #4
 801c94e:	eba2 0809 	sub.w	r8, r2, r9
 801c952:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c954:	fa1f f888 	uxth.w	r8, r8
 801c958:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c95c:	fb08 f101 	mul.w	r1, r8, r1
 801c960:	b280      	uxth	r0, r0
 801c962:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c966:	1a12      	subs	r2, r2, r0
 801c968:	b292      	uxth	r2, r2
 801c96a:	fb02 110e 	mla	r1, r2, lr, r1
 801c96e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801c970:	fb00 1104 	mla	r1, r0, r4, r1
 801c974:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c976:	fb09 1104 	mla	r1, r9, r4, r1
 801c97a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c97e:	2900      	cmp	r1, #0
 801c980:	f000 80f5 	beq.w	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c984:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c988:	d01b      	beq.n	801c9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c98a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c98e:	fb0e fa0a 	mul.w	sl, lr, sl
 801c992:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c996:	fb0e fe03 	mul.w	lr, lr, r3
 801c99a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c99e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c9a2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c9a6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c9aa:	4453      	add	r3, sl
 801c9ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c9b0:	0a1b      	lsrs	r3, r3, #8
 801c9b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9b6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c9ba:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c9be:	ea43 030c 	orr.w	r3, r3, ip
 801c9c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c9c4:	2cff      	cmp	r4, #255	@ 0xff
 801c9c6:	d021      	beq.n	801ca0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c9c8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c9ca:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c9ce:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c9d0:	fb04 fb0b 	mul.w	fp, r4, fp
 801c9d4:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c9d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c9da:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c9de:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c9e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c9e4:	fb04 fa0a 	mul.w	sl, r4, sl
 801c9e8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c9ec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c9f0:	44de      	add	lr, fp
 801c9f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c9f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c9fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ca02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ca06:	ea4e 040a 	orr.w	r4, lr, sl
 801ca0a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ca0c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ca0e:	2cff      	cmp	r4, #255	@ 0xff
 801ca10:	d021      	beq.n	801ca56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ca12:	9c08      	ldr	r4, [sp, #32]
 801ca14:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ca18:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ca1a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ca1e:	9c08      	ldr	r4, [sp, #32]
 801ca20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ca24:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ca28:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ca2a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ca2e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ca32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ca36:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ca3a:	44de      	add	lr, fp
 801ca3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ca40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ca44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ca48:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ca4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ca50:	ea4e 040a 	orr.w	r4, lr, sl
 801ca54:	9408      	str	r4, [sp, #32]
 801ca56:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ca58:	2cff      	cmp	r4, #255	@ 0xff
 801ca5a:	d021      	beq.n	801caa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801ca5c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ca5e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ca62:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ca64:	fb04 fb0b 	mul.w	fp, r4, fp
 801ca68:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ca6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ca6e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ca72:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ca74:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ca78:	fb04 fa0a 	mul.w	sl, r4, sl
 801ca7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ca80:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ca84:	44de      	add	lr, fp
 801ca86:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ca8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ca8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ca92:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ca96:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ca9a:	ea4e 040a 	orr.w	r4, lr, sl
 801ca9e:	940c      	str	r4, [sp, #48]	@ 0x30
 801caa0:	43c9      	mvns	r1, r1
 801caa2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801caa4:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801caa8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801caac:	fb08 fc0c 	mul.w	ip, r8, ip
 801cab0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801cab4:	9c08      	ldr	r4, [sp, #32]
 801cab6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801caba:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801cabe:	fb00 cc0e 	mla	ip, r0, lr, ip
 801cac2:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801cac4:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801cac8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801caca:	fb09 cc0e 	mla	ip, r9, lr, ip
 801cace:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801cad2:	fb08 f80e 	mul.w	r8, r8, lr
 801cad6:	fb02 8303 	mla	r3, r2, r3, r8
 801cada:	9a08      	ldr	r2, [sp, #32]
 801cadc:	f8b7 8000 	ldrh.w	r8, [r7]
 801cae0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801cae4:	fb00 330a 	mla	r3, r0, sl, r3
 801cae8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801caea:	fa5f fe81 	uxtb.w	lr, r1
 801caee:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801caf2:	fb09 3900 	mla	r9, r9, r0, r3
 801caf6:	ea4f 2228 	mov.w	r2, r8, asr #8
 801cafa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801cafe:	fb02 f20e 	mul.w	r2, r2, lr
 801cb02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cb06:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cb0a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801cb0e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cb12:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801cb16:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cb1a:	ea4c 0c09 	orr.w	ip, ip, r9
 801cb1e:	fb00 f00e 	mul.w	r0, r0, lr
 801cb22:	1c53      	adds	r3, r2, #1
 801cb24:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801cb28:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801cb2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cb30:	4a62      	ldr	r2, [pc, #392]	@ (801ccbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801cb32:	b2db      	uxtb	r3, r3
 801cb34:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801cb38:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801cb3c:	b2c9      	uxtb	r1, r1
 801cb3e:	1c43      	adds	r3, r0, #1
 801cb40:	fb01 f10e 	mul.w	r1, r1, lr
 801cb44:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cb48:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801cb4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801cb50:	00db      	lsls	r3, r3, #3
 801cb52:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cb56:	4313      	orrs	r3, r2
 801cb58:	1c4a      	adds	r2, r1, #1
 801cb5a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb5e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801cb62:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801cb66:	ea4c 0c03 	orr.w	ip, ip, r3
 801cb6a:	f8a7 c000 	strh.w	ip, [r7]
 801cb6e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cb70:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801cb72:	3702      	adds	r7, #2
 801cb74:	441a      	add	r2, r3
 801cb76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb78:	9225      	str	r2, [sp, #148]	@ 0x94
 801cb7a:	441d      	add	r5, r3
 801cb7c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801cb7e:	3b01      	subs	r3, #1
 801cb80:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cb82:	e699      	b.n	801c8b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cb84:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cb86:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cb88:	441c      	add	r4, r3
 801cb8a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cb8c:	9425      	str	r4, [sp, #148]	@ 0x94
 801cb8e:	441d      	add	r5, r3
 801cb90:	9b07      	ldr	r3, [sp, #28]
 801cb92:	3b01      	subs	r3, #1
 801cb94:	9307      	str	r3, [sp, #28]
 801cb96:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cb98:	3302      	adds	r3, #2
 801cb9a:	930a      	str	r3, [sp, #40]	@ 0x28
 801cb9c:	e66c      	b.n	801c878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801cb9e:	d024      	beq.n	801cbea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801cba0:	9b07      	ldr	r3, [sp, #28]
 801cba2:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801cba4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cba6:	3b01      	subs	r3, #1
 801cba8:	fb00 4003 	mla	r0, r0, r3, r4
 801cbac:	1400      	asrs	r0, r0, #16
 801cbae:	f53f ae80 	bmi.w	801c8b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbb2:	3901      	subs	r1, #1
 801cbb4:	4288      	cmp	r0, r1
 801cbb6:	f6bf ae7c 	bge.w	801c8b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbba:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801cbbc:	fb01 5303 	mla	r3, r1, r3, r5
 801cbc0:	141b      	asrs	r3, r3, #16
 801cbc2:	f53f ae76 	bmi.w	801c8b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbc6:	3a01      	subs	r2, #1
 801cbc8:	4293      	cmp	r3, r2
 801cbca:	f6bf ae72 	bge.w	801c8b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cbce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801cbd2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801cbd6:	f1bb 0f00 	cmp.w	fp, #0
 801cbda:	dc71      	bgt.n	801ccc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cbdc:	9b07      	ldr	r3, [sp, #28]
 801cbde:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cbe2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cbe4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cbe8:	930a      	str	r3, [sp, #40]	@ 0x28
 801cbea:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cbec:	2b00      	cmp	r3, #0
 801cbee:	f340 81af 	ble.w	801cf50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cbf2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cbf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cbfe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc06:	eef0 6a62 	vmov.f32	s13, s5
 801cc0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cc12:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cc16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cc1e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801cc22:	eef0 6a43 	vmov.f32	s13, s6
 801cc26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cc2a:	ee12 2a90 	vmov	r2, s5
 801cc2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cc32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cc34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cc38:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc3c:	ee13 2a10 	vmov	r2, s6
 801cc40:	9327      	str	r3, [sp, #156]	@ 0x9c
 801cc42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cc44:	ee16 5a90 	vmov	r5, s13
 801cc48:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc4c:	9328      	str	r3, [sp, #160]	@ 0xa0
 801cc4e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cc50:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801cc52:	3b01      	subs	r3, #1
 801cc54:	9316      	str	r3, [sp, #88]	@ 0x58
 801cc56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cc58:	bf08      	it	eq
 801cc5a:	4613      	moveq	r3, r2
 801cc5c:	eeb0 3a67 	vmov.f32	s6, s15
 801cc60:	9307      	str	r3, [sp, #28]
 801cc62:	eef0 2a47 	vmov.f32	s5, s14
 801cc66:	e5f9      	b.n	801c85c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cc68:	2800      	cmp	r0, #0
 801cc6a:	f43f ae6b 	beq.w	801c944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801cc6e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801cc72:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cc76:	9108      	str	r1, [sp, #32]
 801cc78:	0e09      	lsrs	r1, r1, #24
 801cc7a:	9110      	str	r1, [sp, #64]	@ 0x40
 801cc7c:	e662      	b.n	801c944 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801cc7e:	f113 0801 	adds.w	r8, r3, #1
 801cc82:	f53f af74 	bmi.w	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cc86:	4541      	cmp	r1, r8
 801cc88:	f6ff af71 	blt.w	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cc8c:	f11c 0801 	adds.w	r8, ip, #1
 801cc90:	f53f af6d 	bmi.w	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cc94:	45c6      	cmp	lr, r8
 801cc96:	f6ff af6a 	blt.w	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801cc9a:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801cc9e:	b209      	sxth	r1, r1
 801cca0:	fa0f f38e 	sxth.w	r3, lr
 801cca4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801cca8:	9301      	str	r3, [sp, #4]
 801ccaa:	9100      	str	r1, [sp, #0]
 801ccac:	4633      	mov	r3, r6
 801ccae:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ccb0:	4639      	mov	r1, r7
 801ccb2:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ccb4:	f7ff fc7a 	bl	801c5ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ccb8:	e759      	b.n	801cb6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ccba:	bf00      	nop
 801ccbc:	fffff800 	.word	0xfffff800
 801ccc0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ccc2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ccc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ccc8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ccca:	1427      	asrs	r7, r4, #16
 801cccc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ccd0:	142b      	asrs	r3, r5, #16
 801ccd2:	fb01 7303 	mla	r3, r1, r3, r7
 801ccd6:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ccd8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ccdc:	18e7      	adds	r7, r4, r3
 801ccde:	5ce3      	ldrb	r3, [r4, r3]
 801cce0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801cce4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801cce8:	2a00      	cmp	r2, #0
 801ccea:	f000 8127 	beq.w	801cf3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ccee:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ccf2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ccf6:	940d      	str	r4, [sp, #52]	@ 0x34
 801ccf8:	0e24      	lsrs	r4, r4, #24
 801ccfa:	9414      	str	r4, [sp, #80]	@ 0x50
 801ccfc:	b170      	cbz	r0, 801cd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ccfe:	eb07 0e01 	add.w	lr, r7, r1
 801cd02:	5c79      	ldrb	r1, [r7, r1]
 801cd04:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cd08:	9109      	str	r1, [sp, #36]	@ 0x24
 801cd0a:	0e09      	lsrs	r1, r1, #24
 801cd0c:	9111      	str	r1, [sp, #68]	@ 0x44
 801cd0e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801cd12:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cd16:	910e      	str	r1, [sp, #56]	@ 0x38
 801cd18:	0e09      	lsrs	r1, r1, #24
 801cd1a:	9115      	str	r1, [sp, #84]	@ 0x54
 801cd1c:	b292      	uxth	r2, r2
 801cd1e:	b280      	uxth	r0, r0
 801cd20:	fb02 f800 	mul.w	r8, r2, r0
 801cd24:	0112      	lsls	r2, r2, #4
 801cd26:	eba2 0e08 	sub.w	lr, r2, r8
 801cd2a:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801cd2e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801cd30:	fa1f fe8e 	uxth.w	lr, lr
 801cd34:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801cd38:	fb0e f202 	mul.w	r2, lr, r2
 801cd3c:	b280      	uxth	r0, r0
 801cd3e:	1a09      	subs	r1, r1, r0
 801cd40:	b289      	uxth	r1, r1
 801cd42:	fb01 220c 	mla	r2, r1, ip, r2
 801cd46:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cd48:	fb00 2204 	mla	r2, r0, r4, r2
 801cd4c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801cd4e:	fb08 2204 	mla	r2, r8, r4, r2
 801cd52:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801cd56:	2a00      	cmp	r2, #0
 801cd58:	f000 80e5 	beq.w	801cf26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801cd5c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cd60:	d019      	beq.n	801cd96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801cd62:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801cd66:	fb0c fa0a 	mul.w	sl, ip, sl
 801cd6a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cd6e:	fb0c fc03 	mul.w	ip, ip, r3
 801cd72:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cd76:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cd7a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cd7e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cd82:	4453      	add	r3, sl
 801cd84:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cd88:	0a1b      	lsrs	r3, r3, #8
 801cd8a:	0a3f      	lsrs	r7, r7, #8
 801cd8c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cd90:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cd94:	433b      	orrs	r3, r7
 801cd96:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cd98:	2cff      	cmp	r4, #255	@ 0xff
 801cd9a:	d020      	beq.n	801cdde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801cd9c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cd9e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cda2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cda4:	4367      	muls	r7, r4
 801cda6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cda8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cdac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cdb0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cdb2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cdb6:	fb04 fa0a 	mul.w	sl, r4, sl
 801cdba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cdbe:	44bc      	add	ip, r7
 801cdc0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cdc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cdc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cdcc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cdd0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cdd4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cdd8:	ea4c 040a 	orr.w	r4, ip, sl
 801cddc:	940d      	str	r4, [sp, #52]	@ 0x34
 801cdde:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cde0:	2cff      	cmp	r4, #255	@ 0xff
 801cde2:	d020      	beq.n	801ce26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801cde4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cde6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cdea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cdec:	4367      	muls	r7, r4
 801cdee:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801cdf0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cdf4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cdf8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cdfa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cdfe:	fb04 fa0a 	mul.w	sl, r4, sl
 801ce02:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce06:	44bc      	add	ip, r7
 801ce08:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ce0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ce10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ce18:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce1c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ce20:	ea4c 040a 	orr.w	r4, ip, sl
 801ce24:	9409      	str	r4, [sp, #36]	@ 0x24
 801ce26:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ce28:	2cff      	cmp	r4, #255	@ 0xff
 801ce2a:	d020      	beq.n	801ce6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ce2c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ce2e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ce32:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ce34:	4367      	muls	r7, r4
 801ce36:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ce38:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ce3c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ce40:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ce42:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ce46:	fb04 fa0a 	mul.w	sl, r4, sl
 801ce4a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce4e:	44bc      	add	ip, r7
 801ce50:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ce54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ce58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ce60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce64:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ce68:	ea4c 040a 	orr.w	r4, ip, sl
 801ce6c:	940e      	str	r4, [sp, #56]	@ 0x38
 801ce6e:	43d2      	mvns	r2, r2
 801ce70:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ce72:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ce76:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ce7a:	fb0e f707 	mul.w	r7, lr, r7
 801ce7e:	fb01 770c 	mla	r7, r1, ip, r7
 801ce82:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ce84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ce88:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ce8c:	fb00 770c 	mla	r7, r0, ip, r7
 801ce90:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ce92:	b2d2      	uxtb	r2, r2
 801ce94:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ce98:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ce9a:	fb08 770c 	mla	r7, r8, ip, r7
 801ce9e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801cea2:	fb0e fe0c 	mul.w	lr, lr, ip
 801cea6:	fb01 e303 	mla	r3, r1, r3, lr
 801ceaa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ceac:	0a3f      	lsrs	r7, r7, #8
 801ceae:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ceb2:	fb00 330a 	mla	r3, r0, sl, r3
 801ceb6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ceb8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801cebc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801cec0:	fb08 3c0c 	mla	ip, r8, ip, r3
 801cec4:	f8b9 3000 	ldrh.w	r3, [r9]
 801cec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cecc:	1218      	asrs	r0, r3, #8
 801cece:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ced2:	4350      	muls	r0, r2
 801ced4:	10d9      	asrs	r1, r3, #3
 801ced6:	00db      	lsls	r3, r3, #3
 801ced8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801cedc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cee0:	b2db      	uxtb	r3, r3
 801cee2:	ea47 070c 	orr.w	r7, r7, ip
 801cee6:	4351      	muls	r1, r2
 801cee8:	4353      	muls	r3, r2
 801ceea:	1c42      	adds	r2, r0, #1
 801ceec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cef0:	0c3a      	lsrs	r2, r7, #16
 801cef2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cef6:	4a18      	ldr	r2, [pc, #96]	@ (801cf58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801cef8:	b2c0      	uxtb	r0, r0
 801cefa:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801cefe:	1c4a      	adds	r2, r1, #1
 801cf00:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf04:	0a3a      	lsrs	r2, r7, #8
 801cf06:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf0a:	00c9      	lsls	r1, r1, #3
 801cf0c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cf10:	4301      	orrs	r1, r0
 801cf12:	1c58      	adds	r0, r3, #1
 801cf14:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cf18:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cf1c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801cf20:	4308      	orrs	r0, r1
 801cf22:	f8a9 0000 	strh.w	r0, [r9]
 801cf26:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801cf28:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801cf2a:	f109 0902 	add.w	r9, r9, #2
 801cf2e:	441a      	add	r2, r3
 801cf30:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cf32:	9225      	str	r2, [sp, #148]	@ 0x94
 801cf34:	441d      	add	r5, r3
 801cf36:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cf3a:	e64c      	b.n	801cbd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801cf3c:	2800      	cmp	r0, #0
 801cf3e:	f43f aeed 	beq.w	801cd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cf42:	5c79      	ldrb	r1, [r7, r1]
 801cf44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cf48:	9109      	str	r1, [sp, #36]	@ 0x24
 801cf4a:	0e09      	lsrs	r1, r1, #24
 801cf4c:	9111      	str	r1, [sp, #68]	@ 0x44
 801cf4e:	e6e5      	b.n	801cd1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cf50:	b01b      	add	sp, #108	@ 0x6c
 801cf52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf56:	bf00      	nop
 801cf58:	fffff800 	.word	0xfffff800

0801cf5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801cf5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf60:	b085      	sub	sp, #20
 801cf62:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801cf66:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cf6a:	fb00 7406 	mla	r4, r0, r6, r7
 801cf6e:	2800      	cmp	r0, #0
 801cf70:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801cf74:	9103      	str	r1, [sp, #12]
 801cf76:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801cf7a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cf7e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cf82:	9501      	str	r5, [sp, #4]
 801cf84:	eb03 0904 	add.w	r9, r3, r4
 801cf88:	f2c0 8150 	blt.w	801d22c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cf8c:	4583      	cmp	fp, r0
 801cf8e:	f340 814d 	ble.w	801d22c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cf92:	2f00      	cmp	r7, #0
 801cf94:	f2c0 8146 	blt.w	801d224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cf98:	42be      	cmp	r6, r7
 801cf9a:	f340 8143 	ble.w	801d224 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cf9e:	f813 c004 	ldrb.w	ip, [r3, r4]
 801cfa2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801cfa6:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cfaa:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cfae:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cfb2:	4355      	muls	r5, r2
 801cfb4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfb8:	fb0c f203 	mul.w	r2, ip, r3
 801cfbc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cfc0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cfc4:	441d      	add	r5, r3
 801cfc6:	f102 0320 	add.w	r3, r2, #32
 801cfca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cfce:	0a1b      	lsrs	r3, r3, #8
 801cfd0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cfd4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cfd8:	431c      	orrs	r4, r3
 801cfda:	1c7b      	adds	r3, r7, #1
 801cfdc:	f100 812b 	bmi.w	801d236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cfe0:	429e      	cmp	r6, r3
 801cfe2:	f340 8128 	ble.w	801d236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cfe6:	2900      	cmp	r1, #0
 801cfe8:	f000 8128 	beq.w	801d23c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801cfec:	9a01      	ldr	r2, [sp, #4]
 801cfee:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cff2:	8855      	ldrh	r5, [r2, #2]
 801cff4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cff8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801cffc:	fb08 f802 	mul.w	r8, r8, r2
 801d000:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d004:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d008:	435d      	muls	r5, r3
 801d00a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d00e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d012:	44d0      	add	r8, sl
 801d014:	f105 0a20 	add.w	sl, r5, #32
 801d018:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d01c:	0a2d      	lsrs	r5, r5, #8
 801d01e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d022:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d026:	432a      	orrs	r2, r5
 801d028:	3001      	adds	r0, #1
 801d02a:	f100 810d 	bmi.w	801d248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d02e:	4583      	cmp	fp, r0
 801d030:	f340 810a 	ble.w	801d248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d034:	f1be 0f00 	cmp.w	lr, #0
 801d038:	f000 810b 	beq.w	801d252 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801d03c:	2f00      	cmp	r7, #0
 801d03e:	f2c0 8100 	blt.w	801d242 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d042:	42be      	cmp	r6, r7
 801d044:	f340 80fd 	ble.w	801d242 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d048:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d04c:	9801      	ldr	r0, [sp, #4]
 801d04e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d052:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d056:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d05a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d05e:	fb0a fa00 	mul.w	sl, sl, r0
 801d062:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d066:	fb05 f808 	mul.w	r8, r5, r8
 801d06a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d06e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d072:	4482      	add	sl, r0
 801d074:	f108 0020 	add.w	r0, r8, #32
 801d078:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d07c:	0a00      	lsrs	r0, r0, #8
 801d07e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d082:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d086:	ea4b 0b00 	orr.w	fp, fp, r0
 801d08a:	3701      	adds	r7, #1
 801d08c:	f100 80e6 	bmi.w	801d25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d090:	42be      	cmp	r6, r7
 801d092:	f340 80e3 	ble.w	801d25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d096:	2900      	cmp	r1, #0
 801d098:	f000 80e3 	beq.w	801d262 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801d09c:	9801      	ldr	r0, [sp, #4]
 801d09e:	3601      	adds	r6, #1
 801d0a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d0a4:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d0a8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d0ac:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0b0:	fb07 f800 	mul.w	r8, r7, r0
 801d0b4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d0b8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d0bc:	fb09 f906 	mul.w	r9, r9, r6
 801d0c0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d0c4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d0c8:	44d1      	add	r9, sl
 801d0ca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d0ce:	f108 0020 	add.w	r0, r8, #32
 801d0d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d0d6:	0a00      	lsrs	r0, r0, #8
 801d0d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0dc:	4330      	orrs	r0, r6
 801d0de:	b28e      	uxth	r6, r1
 801d0e0:	fa1f f98e 	uxth.w	r9, lr
 801d0e4:	fb06 f809 	mul.w	r8, r6, r9
 801d0e8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d0ec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d0f0:	0136      	lsls	r6, r6, #4
 801d0f2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d0f6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d0fa:	9601      	str	r6, [sp, #4]
 801d0fc:	ea4a 0404 	orr.w	r4, sl, r4
 801d100:	fa1f f689 	uxth.w	r6, r9
 801d104:	9602      	str	r6, [sp, #8]
 801d106:	4626      	mov	r6, r4
 801d108:	fb11 f90e 	smulbb	r9, r1, lr
 801d10c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d110:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d114:	f1ce 0410 	rsb	r4, lr, #16
 801d118:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d11c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d120:	1a64      	subs	r4, r4, r1
 801d122:	ea4a 0202 	orr.w	r2, sl, r2
 801d126:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d12a:	434a      	muls	r2, r1
 801d12c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d130:	fb04 2406 	mla	r4, r4, r6, r2
 801d134:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d138:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d13c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d140:	ea4a 0000 	orr.w	r0, sl, r0
 801d144:	fb09 4200 	mla	r2, r9, r0, r4
 801d148:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d14c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d150:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d154:	ea44 0b0b 	orr.w	fp, r4, fp
 801d158:	9c01      	ldr	r4, [sp, #4]
 801d15a:	9e02      	ldr	r6, [sp, #8]
 801d15c:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801d160:	1ba4      	subs	r4, r4, r6
 801d162:	9e01      	ldr	r6, [sp, #4]
 801d164:	b2a4      	uxth	r4, r4
 801d166:	eba6 0608 	sub.w	r6, r6, r8
 801d16a:	b2b6      	uxth	r6, r6
 801d16c:	4373      	muls	r3, r6
 801d16e:	fb0c 3304 	mla	r3, ip, r4, r3
 801d172:	9c02      	ldr	r4, [sp, #8]
 801d174:	9903      	ldr	r1, [sp, #12]
 801d176:	fb04 3505 	mla	r5, r4, r5, r3
 801d17a:	fb08 5707 	mla	r7, r8, r7, r5
 801d17e:	8808      	ldrh	r0, [r1, #0]
 801d180:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801d184:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d188:	b289      	uxth	r1, r1
 801d18a:	434f      	muls	r7, r1
 801d18c:	1c7b      	adds	r3, r7, #1
 801d18e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d192:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d196:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d19a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d19e:	1203      	asrs	r3, r0, #8
 801d1a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d1a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d1a8:	b2ff      	uxtb	r7, r7
 801d1aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d1ae:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d1b2:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d1b6:	fb13 f307 	smulbb	r3, r3, r7
 801d1ba:	ea42 0e0e 	orr.w	lr, r2, lr
 801d1be:	fa1f f28e 	uxth.w	r2, lr
 801d1c2:	1215      	asrs	r5, r2, #8
 801d1c4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d1c8:	fb05 3501 	mla	r5, r5, r1, r3
 801d1cc:	10c3      	asrs	r3, r0, #3
 801d1ce:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d1d2:	fb13 f307 	smulbb	r3, r3, r7
 801d1d6:	10d4      	asrs	r4, r2, #3
 801d1d8:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d1dc:	fb04 3401 	mla	r4, r4, r1, r3
 801d1e0:	00c3      	lsls	r3, r0, #3
 801d1e2:	b2db      	uxtb	r3, r3
 801d1e4:	fb13 f307 	smulbb	r3, r3, r7
 801d1e8:	00d2      	lsls	r2, r2, #3
 801d1ea:	b2d2      	uxtb	r2, r2
 801d1ec:	fb02 3101 	mla	r1, r2, r1, r3
 801d1f0:	b2ad      	uxth	r5, r5
 801d1f2:	b289      	uxth	r1, r1
 801d1f4:	b2a4      	uxth	r4, r4
 801d1f6:	1c6b      	adds	r3, r5, #1
 801d1f8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d1fc:	1c62      	adds	r2, r4, #1
 801d1fe:	1c4b      	adds	r3, r1, #1
 801d200:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d204:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d208:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d20c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d210:	0964      	lsrs	r4, r4, #5
 801d212:	432b      	orrs	r3, r5
 801d214:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d218:	9a03      	ldr	r2, [sp, #12]
 801d21a:	4323      	orrs	r3, r4
 801d21c:	8013      	strh	r3, [r2, #0]
 801d21e:	b005      	add	sp, #20
 801d220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d224:	f04f 0c00 	mov.w	ip, #0
 801d228:	4664      	mov	r4, ip
 801d22a:	e6d6      	b.n	801cfda <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d22c:	2300      	movs	r3, #0
 801d22e:	469c      	mov	ip, r3
 801d230:	461a      	mov	r2, r3
 801d232:	461c      	mov	r4, r3
 801d234:	e6f8      	b.n	801d028 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d236:	2300      	movs	r3, #0
 801d238:	461a      	mov	r2, r3
 801d23a:	e6f5      	b.n	801d028 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d23c:	460b      	mov	r3, r1
 801d23e:	460a      	mov	r2, r1
 801d240:	e6f2      	b.n	801d028 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d242:	2500      	movs	r5, #0
 801d244:	46ab      	mov	fp, r5
 801d246:	e720      	b.n	801d08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d248:	2700      	movs	r7, #0
 801d24a:	463d      	mov	r5, r7
 801d24c:	4638      	mov	r0, r7
 801d24e:	46bb      	mov	fp, r7
 801d250:	e745      	b.n	801d0de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d252:	4677      	mov	r7, lr
 801d254:	4675      	mov	r5, lr
 801d256:	4670      	mov	r0, lr
 801d258:	46f3      	mov	fp, lr
 801d25a:	e740      	b.n	801d0de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d25c:	2700      	movs	r7, #0
 801d25e:	4638      	mov	r0, r7
 801d260:	e73d      	b.n	801d0de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d262:	460f      	mov	r7, r1
 801d264:	4608      	mov	r0, r1
 801d266:	e73a      	b.n	801d0de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d268 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d26c:	b097      	sub	sp, #92	@ 0x5c
 801d26e:	9214      	str	r2, [sp, #80]	@ 0x50
 801d270:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d272:	9015      	str	r0, [sp, #84]	@ 0x54
 801d274:	9308      	str	r3, [sp, #32]
 801d276:	6850      	ldr	r0, [r2, #4]
 801d278:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d27c:	9111      	str	r1, [sp, #68]	@ 0x44
 801d27e:	9312      	str	r3, [sp, #72]	@ 0x48
 801d280:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d284:	fb00 1303 	mla	r3, r0, r3, r1
 801d288:	6812      	ldr	r2, [r2, #0]
 801d28a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d28e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d290:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d292:	681b      	ldr	r3, [r3, #0]
 801d294:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d296:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d298:	685b      	ldr	r3, [r3, #4]
 801d29a:	930c      	str	r3, [sp, #48]	@ 0x30
 801d29c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801d2a0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2a2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d2a4:	2b00      	cmp	r3, #0
 801d2a6:	dc03      	bgt.n	801d2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d2a8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d2aa:	2b00      	cmp	r3, #0
 801d2ac:	f340 83cb 	ble.w	801da46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d2b0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d2b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2ba:	1e48      	subs	r0, r1, #1
 801d2bc:	1e55      	subs	r5, r2, #1
 801d2be:	9b08      	ldr	r3, [sp, #32]
 801d2c0:	2b00      	cmp	r3, #0
 801d2c2:	f340 81a3 	ble.w	801d60c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801d2c6:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d2c8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d2ca:	1436      	asrs	r6, r6, #16
 801d2cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d2d0:	d406      	bmi.n	801d2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2d2:	4286      	cmp	r6, r0
 801d2d4:	da04      	bge.n	801d2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2d6:	2b00      	cmp	r3, #0
 801d2d8:	db02      	blt.n	801d2e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2da:	42ab      	cmp	r3, r5
 801d2dc:	f2c0 8197 	blt.w	801d60e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801d2e0:	3601      	adds	r6, #1
 801d2e2:	f100 8184 	bmi.w	801d5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d2e6:	42b1      	cmp	r1, r6
 801d2e8:	f2c0 8181 	blt.w	801d5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d2ec:	3301      	adds	r3, #1
 801d2ee:	f100 817e 	bmi.w	801d5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d2f2:	429a      	cmp	r2, r3
 801d2f4:	f2c0 817b 	blt.w	801d5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801d2f8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d2fc:	9b08      	ldr	r3, [sp, #32]
 801d2fe:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801d300:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d302:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d304:	2b00      	cmp	r3, #0
 801d306:	f340 81a4 	ble.w	801d652 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d30a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d30c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d30e:	1418      	asrs	r0, r3, #16
 801d310:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d312:	142d      	asrs	r5, r5, #16
 801d314:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d318:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d31a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d31e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d320:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d324:	f100 81f8 	bmi.w	801d718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d328:	f102 3eff 	add.w	lr, r2, #4294967295
 801d32c:	4575      	cmp	r5, lr
 801d32e:	f280 81f3 	bge.w	801d718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d332:	2800      	cmp	r0, #0
 801d334:	f2c0 81f0 	blt.w	801d718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d338:	f103 3eff 	add.w	lr, r3, #4294967295
 801d33c:	4570      	cmp	r0, lr
 801d33e:	f280 81eb 	bge.w	801d718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d342:	b212      	sxth	r2, r2
 801d344:	fb00 5002 	mla	r0, r0, r2, r5
 801d348:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d34a:	fa1f fe81 	uxth.w	lr, r1
 801d34e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d352:	eb03 0a00 	add.w	sl, r3, r0
 801d356:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d35a:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801d35e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d362:	b29b      	uxth	r3, r3
 801d364:	f1bc 0f00 	cmp.w	ip, #0
 801d368:	f000 81b9 	beq.w	801d6de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801d36c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d370:	eb0a 0b02 	add.w	fp, sl, r2
 801d374:	fa1f fa8c 	uxth.w	sl, ip
 801d378:	fb0a fe0e 	mul.w	lr, sl, lr
 801d37c:	eba5 050e 	sub.w	r5, r5, lr
 801d380:	b2ad      	uxth	r5, r5
 801d382:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d386:	fb08 f505 	mul.w	r5, r8, r5
 801d38a:	fa1f fa8a 	uxth.w	sl, sl
 801d38e:	eba3 030a 	sub.w	r3, r3, sl
 801d392:	b29b      	uxth	r3, r3
 801d394:	940d      	str	r4, [sp, #52]	@ 0x34
 801d396:	fb09 5303 	mla	r3, r9, r3, r5
 801d39a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d39e:	940e      	str	r4, [sp, #56]	@ 0x38
 801d3a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d3a2:	fb0a 3304 	mla	r3, sl, r4, r3
 801d3a6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d3a8:	fb0e 3304 	mla	r3, lr, r4, r3
 801d3ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d3b0:	2b00      	cmp	r3, #0
 801d3b2:	f000 810f 	beq.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d3b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d3b8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d3bc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d3c0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d3c4:	f000 8190 	beq.w	801d6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801d3c8:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d3cc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d3d0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d3d4:	fb09 f000 	mul.w	r0, r9, r0
 801d3d8:	fb0a fe0e 	mul.w	lr, sl, lr
 801d3dc:	f100 0b20 	add.w	fp, r0, #32
 801d3e0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d3e4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d3e8:	44ce      	add	lr, r9
 801d3ea:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d3ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d3f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d3f6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d3fa:	ea4e 0909 	orr.w	r9, lr, r9
 801d3fe:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d402:	8868      	ldrh	r0, [r5, #2]
 801d404:	d019      	beq.n	801d43a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d406:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d40a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d40e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d412:	fb08 f800 	mul.w	r8, r8, r0
 801d416:	fb0a fe0e 	mul.w	lr, sl, lr
 801d41a:	f108 0b20 	add.w	fp, r8, #32
 801d41e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d422:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d426:	4486      	add	lr, r0
 801d428:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d42c:	0a00      	lsrs	r0, r0, #8
 801d42e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d432:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d436:	ea4e 0000 	orr.w	r0, lr, r0
 801d43a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d43e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d442:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d446:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d44a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d44e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d452:	ea4e 0909 	orr.w	r9, lr, r9
 801d456:	ea4a 0000 	orr.w	r0, sl, r0
 801d45a:	f1bc 0f00 	cmp.w	ip, #0
 801d45e:	f000 8145 	beq.w	801d6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d462:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d466:	3a01      	subs	r2, #1
 801d468:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d46a:	0052      	lsls	r2, r2, #1
 801d46c:	3202      	adds	r2, #2
 801d46e:	2cff      	cmp	r4, #255	@ 0xff
 801d470:	eb05 0e02 	add.w	lr, r5, r2
 801d474:	5aaa      	ldrh	r2, [r5, r2]
 801d476:	d018      	beq.n	801d4aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d478:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d47c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d480:	fb04 fa02 	mul.w	sl, r4, r2
 801d484:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d488:	fb08 f805 	mul.w	r8, r8, r5
 801d48c:	f10a 0520 	add.w	r5, sl, #32
 801d490:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d494:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d498:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d49c:	4442      	add	r2, r8
 801d49e:	0a2d      	lsrs	r5, r5, #8
 801d4a0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d4a4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4a8:	432a      	orrs	r2, r5
 801d4aa:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d4ac:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d4b0:	2cff      	cmp	r4, #255	@ 0xff
 801d4b2:	d01a      	beq.n	801d4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d4b4:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d4b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d4bc:	fb04 fa05 	mul.w	sl, r4, r5
 801d4c0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d4c4:	fb08 f80e 	mul.w	r8, r8, lr
 801d4c8:	f10a 0e20 	add.w	lr, sl, #32
 801d4cc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d4d0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d4d4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d4d8:	4445      	add	r5, r8
 801d4da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d4de:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d4e2:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d4e6:	ea45 050e 	orr.w	r5, r5, lr
 801d4ea:	fb1c fe01 	smulbb	lr, ip, r1
 801d4ee:	f1cc 0810 	rsb	r8, ip, #16
 801d4f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d4f6:	eba8 0801 	sub.w	r8, r8, r1
 801d4fa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d4fe:	4341      	muls	r1, r0
 801d500:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d504:	fb09 1108 	mla	r1, r9, r8, r1
 801d508:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d50c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d510:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d514:	ea4a 0202 	orr.w	r2, sl, r2
 801d518:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d51c:	fb0c 1102 	mla	r1, ip, r2, r1
 801d520:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d524:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d528:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d52c:	ea4b 0505 	orr.w	r5, fp, r5
 801d530:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d534:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d538:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d53c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d540:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d544:	ea42 0e0e 	orr.w	lr, r2, lr
 801d548:	fa1f f28e 	uxth.w	r2, lr
 801d54c:	2bff      	cmp	r3, #255	@ 0xff
 801d54e:	d103      	bne.n	801d558 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d550:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d552:	29ff      	cmp	r1, #255	@ 0xff
 801d554:	f000 80de 	beq.w	801d714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801d558:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d55a:	8838      	ldrh	r0, [r7, #0]
 801d55c:	434b      	muls	r3, r1
 801d55e:	f103 0c01 	add.w	ip, r3, #1
 801d562:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d566:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d56a:	fa5f fc83 	uxtb.w	ip, r3
 801d56e:	1203      	asrs	r3, r0, #8
 801d570:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d574:	fb13 f30c 	smulbb	r3, r3, ip
 801d578:	1215      	asrs	r5, r2, #8
 801d57a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d57e:	fb05 3501 	mla	r5, r5, r1, r3
 801d582:	10c3      	asrs	r3, r0, #3
 801d584:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d588:	fb13 f30c 	smulbb	r3, r3, ip
 801d58c:	10d1      	asrs	r1, r2, #3
 801d58e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d590:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d594:	fb01 3104 	mla	r1, r1, r4, r3
 801d598:	00c3      	lsls	r3, r0, #3
 801d59a:	b2db      	uxtb	r3, r3
 801d59c:	fb13 f30c 	smulbb	r3, r3, ip
 801d5a0:	00d2      	lsls	r2, r2, #3
 801d5a2:	b2d2      	uxtb	r2, r2
 801d5a4:	fb02 3304 	mla	r3, r2, r4, r3
 801d5a8:	b2ad      	uxth	r5, r5
 801d5aa:	b29a      	uxth	r2, r3
 801d5ac:	1c6b      	adds	r3, r5, #1
 801d5ae:	b289      	uxth	r1, r1
 801d5b0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d5b4:	1c53      	adds	r3, r2, #1
 801d5b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d5ba:	1c4a      	adds	r2, r1, #1
 801d5bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d5c0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d5c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d5c8:	0949      	lsrs	r1, r1, #5
 801d5ca:	432b      	orrs	r3, r5
 801d5cc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d5d0:	430b      	orrs	r3, r1
 801d5d2:	803b      	strh	r3, [r7, #0]
 801d5d4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d5d6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d5d8:	3702      	adds	r7, #2
 801d5da:	4413      	add	r3, r2
 801d5dc:	9321      	str	r3, [sp, #132]	@ 0x84
 801d5de:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d5e0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5e2:	441a      	add	r2, r3
 801d5e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d5e6:	9222      	str	r2, [sp, #136]	@ 0x88
 801d5e8:	3b01      	subs	r3, #1
 801d5ea:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d5ec:	e689      	b.n	801d302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d5ee:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d5f0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801d5f2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801d5f4:	4433      	add	r3, r6
 801d5f6:	9321      	str	r3, [sp, #132]	@ 0x84
 801d5f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d5fa:	441c      	add	r4, r3
 801d5fc:	9b08      	ldr	r3, [sp, #32]
 801d5fe:	9422      	str	r4, [sp, #136]	@ 0x88
 801d600:	3b01      	subs	r3, #1
 801d602:	9308      	str	r3, [sp, #32]
 801d604:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d606:	3302      	adds	r3, #2
 801d608:	9309      	str	r3, [sp, #36]	@ 0x24
 801d60a:	e658      	b.n	801d2be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d60c:	d028      	beq.n	801d660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d60e:	9b08      	ldr	r3, [sp, #32]
 801d610:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801d612:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801d614:	3b01      	subs	r3, #1
 801d616:	fb00 5003 	mla	r0, r0, r3, r5
 801d61a:	1400      	asrs	r0, r0, #16
 801d61c:	f53f ae6c 	bmi.w	801d2f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d620:	3901      	subs	r1, #1
 801d622:	4288      	cmp	r0, r1
 801d624:	f6bf ae68 	bge.w	801d2f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d628:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801d62a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801d62c:	fb01 0303 	mla	r3, r1, r3, r0
 801d630:	141b      	asrs	r3, r3, #16
 801d632:	f53f ae61 	bmi.w	801d2f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d636:	3a01      	subs	r2, #1
 801d638:	4293      	cmp	r3, r2
 801d63a:	f6bf ae5d 	bge.w	801d2f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d63e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d642:	9b08      	ldr	r3, [sp, #32]
 801d644:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801d648:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d64a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d64c:	2b00      	cmp	r3, #0
 801d64e:	f300 8082 	bgt.w	801d756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d652:	9b08      	ldr	r3, [sp, #32]
 801d654:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d658:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d65a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d65e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d660:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d662:	2b00      	cmp	r3, #0
 801d664:	f340 81ef 	ble.w	801da46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d668:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d66c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d670:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d674:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d678:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d67c:	eef0 6a62 	vmov.f32	s13, s5
 801d680:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d684:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d688:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d68c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d690:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d694:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801d698:	eef0 6a43 	vmov.f32	s13, s6
 801d69c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d6a0:	ee12 2a90 	vmov	r2, s5
 801d6a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d6a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d6aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6b2:	ee13 2a10 	vmov	r2, s6
 801d6b6:	9323      	str	r3, [sp, #140]	@ 0x8c
 801d6b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d6ba:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801d6be:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6c2:	9324      	str	r3, [sp, #144]	@ 0x90
 801d6c4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d6c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d6c8:	3b01      	subs	r3, #1
 801d6ca:	9311      	str	r3, [sp, #68]	@ 0x44
 801d6cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d6ce:	bf08      	it	eq
 801d6d0:	4613      	moveq	r3, r2
 801d6d2:	eeb0 3a67 	vmov.f32	s6, s15
 801d6d6:	9308      	str	r3, [sp, #32]
 801d6d8:	eef0 2a47 	vmov.f32	s5, s14
 801d6dc:	e5e1      	b.n	801d2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d6de:	fb08 f505 	mul.w	r5, r8, r5
 801d6e2:	fb09 5303 	mla	r3, r9, r3, r5
 801d6e6:	e661      	b.n	801d3ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801d6e8:	4681      	mov	r9, r0
 801d6ea:	e688      	b.n	801d3fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d6ec:	f1c1 0210 	rsb	r2, r1, #16
 801d6f0:	4341      	muls	r1, r0
 801d6f2:	fb09 1902 	mla	r9, r9, r2, r1
 801d6f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d6fa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d6fe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d702:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d706:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d70a:	ea42 0909 	orr.w	r9, r2, r9
 801d70e:	fa1f f289 	uxth.w	r2, r9
 801d712:	e71b      	b.n	801d54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d714:	803a      	strh	r2, [r7, #0]
 801d716:	e75d      	b.n	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d718:	f115 0e01 	adds.w	lr, r5, #1
 801d71c:	f53f af5a 	bmi.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d720:	4572      	cmp	r2, lr
 801d722:	f6ff af57 	blt.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d726:	f110 0e01 	adds.w	lr, r0, #1
 801d72a:	f53f af53 	bmi.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d72e:	4573      	cmp	r3, lr
 801d730:	f6ff af50 	blt.w	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d734:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d736:	b21b      	sxth	r3, r3
 801d738:	b212      	sxth	r2, r2
 801d73a:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d73e:	9301      	str	r3, [sp, #4]
 801d740:	9200      	str	r2, [sp, #0]
 801d742:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d746:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801d74a:	9502      	str	r5, [sp, #8]
 801d74c:	4639      	mov	r1, r7
 801d74e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801d750:	f7ff fc04 	bl	801cf5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d754:	e73e      	b.n	801d5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d756:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d758:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d75c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d75e:	fa1f fc82 	uxth.w	ip, r2
 801d762:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d766:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d768:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d76c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d770:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801d772:	141f      	asrs	r7, r3, #16
 801d774:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d776:	141b      	asrs	r3, r3, #16
 801d778:	fb01 3707 	mla	r7, r1, r7, r3
 801d77c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d77e:	eb03 0a07 	add.w	sl, r3, r7
 801d782:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d786:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d78a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d78e:	b29b      	uxth	r3, r3
 801d790:	2d00      	cmp	r5, #0
 801d792:	f000 813d 	beq.w	801da10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d796:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d79a:	eb0a 0b01 	add.w	fp, sl, r1
 801d79e:	fa1f fa85 	uxth.w	sl, r5
 801d7a2:	fb0a fc0c 	mul.w	ip, sl, ip
 801d7a6:	eba0 000c 	sub.w	r0, r0, ip
 801d7aa:	b280      	uxth	r0, r0
 801d7ac:	fb08 f000 	mul.w	r0, r8, r0
 801d7b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d7b4:	fa1f fa8a 	uxth.w	sl, sl
 801d7b8:	eba3 030a 	sub.w	r3, r3, sl
 801d7bc:	b29b      	uxth	r3, r3
 801d7be:	fb09 0303 	mla	r3, r9, r3, r0
 801d7c2:	940f      	str	r4, [sp, #60]	@ 0x3c
 801d7c4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d7c6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d7ca:	fb0a 3300 	mla	r3, sl, r0, r3
 801d7ce:	fb0c 3304 	mla	r3, ip, r4, r3
 801d7d2:	9410      	str	r4, [sp, #64]	@ 0x40
 801d7d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d7d8:	2b00      	cmp	r3, #0
 801d7da:	f000 810b 	beq.w	801d9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d7de:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d7e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d7e2:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d7e6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d7ea:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d7ee:	f000 8114 	beq.w	801da1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801d7f2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d7f6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d7fa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d7fe:	fb09 f707 	mul.w	r7, r9, r7
 801d802:	fb0a fc0c 	mul.w	ip, sl, ip
 801d806:	f107 0b20 	add.w	fp, r7, #32
 801d80a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d80e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d812:	44cc      	add	ip, r9
 801d814:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d818:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d81c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d820:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d824:	ea4c 0909 	orr.w	r9, ip, r9
 801d828:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d82c:	8847      	ldrh	r7, [r0, #2]
 801d82e:	d019      	beq.n	801d864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d830:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d834:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d838:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d83c:	fb08 f807 	mul.w	r8, r8, r7
 801d840:	fb0a fc0c 	mul.w	ip, sl, ip
 801d844:	f108 0b20 	add.w	fp, r8, #32
 801d848:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d84c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d850:	44bc      	add	ip, r7
 801d852:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d856:	0a3f      	lsrs	r7, r7, #8
 801d858:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d85c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d860:	ea4c 0707 	orr.w	r7, ip, r7
 801d864:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d868:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d86c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d870:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d874:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d878:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d87c:	ea4c 0909 	orr.w	r9, ip, r9
 801d880:	ea4a 0707 	orr.w	r7, sl, r7
 801d884:	2d00      	cmp	r5, #0
 801d886:	f000 80ca 	beq.w	801da1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d88a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d88e:	3901      	subs	r1, #1
 801d890:	0049      	lsls	r1, r1, #1
 801d892:	3102      	adds	r1, #2
 801d894:	eb00 0c01 	add.w	ip, r0, r1
 801d898:	5a41      	ldrh	r1, [r0, r1]
 801d89a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d89c:	28ff      	cmp	r0, #255	@ 0xff
 801d89e:	d019      	beq.n	801d8d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d8a0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d8a2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d8a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d8aa:	fb04 fa01 	mul.w	sl, r4, r1
 801d8ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8b2:	fb08 f800 	mul.w	r8, r8, r0
 801d8b6:	f10a 0020 	add.w	r0, sl, #32
 801d8ba:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d8be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d8c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d8c6:	4441      	add	r1, r8
 801d8c8:	0a00      	lsrs	r0, r0, #8
 801d8ca:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d8ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d8d2:	4301      	orrs	r1, r0
 801d8d4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d8d6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d8da:	2cff      	cmp	r4, #255	@ 0xff
 801d8dc:	d01a      	beq.n	801d914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d8de:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d8e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d8e6:	fb04 fa00 	mul.w	sl, r4, r0
 801d8ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d8ee:	fb08 f80c 	mul.w	r8, r8, ip
 801d8f2:	f10a 0c20 	add.w	ip, sl, #32
 801d8f6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d8fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d8fe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d902:	4440      	add	r0, r8
 801d904:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d908:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d90c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d910:	ea40 000c 	orr.w	r0, r0, ip
 801d914:	fb15 fc02 	smulbb	ip, r5, r2
 801d918:	f1c5 0810 	rsb	r8, r5, #16
 801d91c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d920:	eba8 0802 	sub.w	r8, r8, r2
 801d924:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d928:	437a      	muls	r2, r7
 801d92a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d92e:	fb09 2208 	mla	r2, r9, r8, r2
 801d932:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d936:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d93a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d93e:	ea4a 0101 	orr.w	r1, sl, r1
 801d942:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d946:	fb05 2201 	mla	r2, r5, r1, r2
 801d94a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d94e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d952:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d956:	ea4b 0000 	orr.w	r0, fp, r0
 801d95a:	fb0c 2200 	mla	r2, ip, r0, r2
 801d95e:	0d57      	lsrs	r7, r2, #21
 801d960:	0952      	lsrs	r2, r2, #5
 801d962:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d966:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d96a:	433a      	orrs	r2, r7
 801d96c:	2bff      	cmp	r3, #255	@ 0xff
 801d96e:	b292      	uxth	r2, r2
 801d970:	d102      	bne.n	801d978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d972:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d974:	29ff      	cmp	r1, #255	@ 0xff
 801d976:	d063      	beq.n	801da40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d978:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801d97a:	f8be 1000 	ldrh.w	r1, [lr]
 801d97e:	4343      	muls	r3, r0
 801d980:	1c58      	adds	r0, r3, #1
 801d982:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d986:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d98a:	1208      	asrs	r0, r1, #8
 801d98c:	b2db      	uxtb	r3, r3
 801d98e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d992:	fb10 f003 	smulbb	r0, r0, r3
 801d996:	10cf      	asrs	r7, r1, #3
 801d998:	00c9      	lsls	r1, r1, #3
 801d99a:	b2c9      	uxtb	r1, r1
 801d99c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d99e:	1215      	asrs	r5, r2, #8
 801d9a0:	fb11 f103 	smulbb	r1, r1, r3
 801d9a4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d9a8:	fb05 0504 	mla	r5, r5, r4, r0
 801d9ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d9b0:	10d0      	asrs	r0, r2, #3
 801d9b2:	00d2      	lsls	r2, r2, #3
 801d9b4:	fb17 f703 	smulbb	r7, r7, r3
 801d9b8:	b2d2      	uxtb	r2, r2
 801d9ba:	fb02 1204 	mla	r2, r2, r4, r1
 801d9be:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d9c2:	fb00 7004 	mla	r0, r0, r4, r7
 801d9c6:	b2ad      	uxth	r5, r5
 801d9c8:	b292      	uxth	r2, r2
 801d9ca:	1c6b      	adds	r3, r5, #1
 801d9cc:	1c57      	adds	r7, r2, #1
 801d9ce:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d9d2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d9d6:	b280      	uxth	r0, r0
 801d9d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d9dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d9e0:	433d      	orrs	r5, r7
 801d9e2:	1c47      	adds	r7, r0, #1
 801d9e4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d9e8:	097f      	lsrs	r7, r7, #5
 801d9ea:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d9ee:	433d      	orrs	r5, r7
 801d9f0:	f8ae 5000 	strh.w	r5, [lr]
 801d9f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d9f6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d9f8:	f10e 0e02 	add.w	lr, lr, #2
 801d9fc:	4413      	add	r3, r2
 801d9fe:	9321      	str	r3, [sp, #132]	@ 0x84
 801da00:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801da02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801da04:	441a      	add	r2, r3
 801da06:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801da08:	9222      	str	r2, [sp, #136]	@ 0x88
 801da0a:	3b01      	subs	r3, #1
 801da0c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801da0e:	e61c      	b.n	801d64a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801da10:	fb08 f000 	mul.w	r0, r8, r0
 801da14:	fb09 0303 	mla	r3, r9, r3, r0
 801da18:	e6dc      	b.n	801d7d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801da1a:	46b9      	mov	r9, r7
 801da1c:	e704      	b.n	801d828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801da1e:	f1c2 0110 	rsb	r1, r2, #16
 801da22:	437a      	muls	r2, r7
 801da24:	fb09 2901 	mla	r9, r9, r1, r2
 801da28:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801da2c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801da30:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801da34:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801da38:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801da3c:	4302      	orrs	r2, r0
 801da3e:	e795      	b.n	801d96c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801da40:	f8ae 2000 	strh.w	r2, [lr]
 801da44:	e7d6      	b.n	801d9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801da46:	b017      	add	sp, #92	@ 0x5c
 801da48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801da4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801da4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da50:	b085      	sub	sp, #20
 801da52:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801da56:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801da5a:	fb00 7406 	mla	r4, r0, r6, r7
 801da5e:	2800      	cmp	r0, #0
 801da60:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801da64:	9103      	str	r1, [sp, #12]
 801da66:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801da6a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801da6e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801da72:	9501      	str	r5, [sp, #4]
 801da74:	eb02 0904 	add.w	r9, r2, r4
 801da78:	f2c0 8141 	blt.w	801dcfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801da7c:	4583      	cmp	fp, r0
 801da7e:	f340 813e 	ble.w	801dcfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801da82:	2f00      	cmp	r7, #0
 801da84:	f2c0 8137 	blt.w	801dcf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801da88:	42be      	cmp	r6, r7
 801da8a:	f340 8134 	ble.w	801dcf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801da8e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801da92:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801da96:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801da9a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801da9e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801daa2:	4355      	muls	r5, r2
 801daa4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801daa8:	fb0c f203 	mul.w	r2, ip, r3
 801daac:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801dab0:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801dab4:	441d      	add	r5, r3
 801dab6:	f102 0320 	add.w	r3, r2, #32
 801daba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dabe:	0a1b      	lsrs	r3, r3, #8
 801dac0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801dac4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dac8:	431c      	orrs	r4, r3
 801daca:	1c7b      	adds	r3, r7, #1
 801dacc:	f100 811c 	bmi.w	801dd08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801dad0:	429e      	cmp	r6, r3
 801dad2:	f340 8119 	ble.w	801dd08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801dad6:	2900      	cmp	r1, #0
 801dad8:	f000 8119 	beq.w	801dd0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801dadc:	9a01      	ldr	r2, [sp, #4]
 801dade:	f899 3001 	ldrb.w	r3, [r9, #1]
 801dae2:	8855      	ldrh	r5, [r2, #2]
 801dae4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801dae8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801daec:	fb08 f802 	mul.w	r8, r8, r2
 801daf0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801daf4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801daf8:	435d      	muls	r5, r3
 801dafa:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801dafe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801db02:	44d0      	add	r8, sl
 801db04:	f105 0a20 	add.w	sl, r5, #32
 801db08:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801db0c:	0a2d      	lsrs	r5, r5, #8
 801db0e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801db12:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801db16:	432a      	orrs	r2, r5
 801db18:	3001      	adds	r0, #1
 801db1a:	f100 80fe 	bmi.w	801dd1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801db1e:	4583      	cmp	fp, r0
 801db20:	f340 80fb 	ble.w	801dd1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801db24:	f1be 0f00 	cmp.w	lr, #0
 801db28:	f000 80fc 	beq.w	801dd24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801db2c:	2f00      	cmp	r7, #0
 801db2e:	f2c0 80f1 	blt.w	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801db32:	42be      	cmp	r6, r7
 801db34:	f340 80ee 	ble.w	801dd14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801db38:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801db3c:	9801      	ldr	r0, [sp, #4]
 801db3e:	f819 5006 	ldrb.w	r5, [r9, r6]
 801db42:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801db46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801db4a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801db4e:	fb0a fa00 	mul.w	sl, sl, r0
 801db52:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801db56:	fb05 f808 	mul.w	r8, r5, r8
 801db5a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801db5e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801db62:	4482      	add	sl, r0
 801db64:	f108 0020 	add.w	r0, r8, #32
 801db68:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801db6c:	0a00      	lsrs	r0, r0, #8
 801db6e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801db72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db76:	ea4b 0b00 	orr.w	fp, fp, r0
 801db7a:	3701      	adds	r7, #1
 801db7c:	f100 80d7 	bmi.w	801dd2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801db80:	42be      	cmp	r6, r7
 801db82:	f340 80d4 	ble.w	801dd2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801db86:	2900      	cmp	r1, #0
 801db88:	f000 80d4 	beq.w	801dd34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801db8c:	9801      	ldr	r0, [sp, #4]
 801db8e:	3601      	adds	r6, #1
 801db90:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801db94:	f819 7006 	ldrb.w	r7, [r9, r6]
 801db98:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801db9c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dba0:	fb07 f800 	mul.w	r8, r7, r0
 801dba4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801dba8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801dbac:	fb09 f906 	mul.w	r9, r9, r6
 801dbb0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801dbb4:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801dbb8:	44d1      	add	r9, sl
 801dbba:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801dbbe:	f108 0020 	add.w	r0, r8, #32
 801dbc2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801dbc6:	0a00      	lsrs	r0, r0, #8
 801dbc8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801dbcc:	4330      	orrs	r0, r6
 801dbce:	b28e      	uxth	r6, r1
 801dbd0:	fa1f f98e 	uxth.w	r9, lr
 801dbd4:	fb06 f809 	mul.w	r8, r6, r9
 801dbd8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801dbdc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801dbe0:	0136      	lsls	r6, r6, #4
 801dbe2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dbe6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801dbea:	9601      	str	r6, [sp, #4]
 801dbec:	ea4a 0404 	orr.w	r4, sl, r4
 801dbf0:	fa1f f689 	uxth.w	r6, r9
 801dbf4:	9602      	str	r6, [sp, #8]
 801dbf6:	4626      	mov	r6, r4
 801dbf8:	fb11 f90e 	smulbb	r9, r1, lr
 801dbfc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dc00:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801dc04:	f1ce 0410 	rsb	r4, lr, #16
 801dc08:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dc0c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc10:	1a64      	subs	r4, r4, r1
 801dc12:	ea4a 0202 	orr.w	r2, sl, r2
 801dc16:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801dc1a:	434a      	muls	r2, r1
 801dc1c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801dc20:	fb04 2406 	mla	r4, r4, r6, r2
 801dc24:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801dc28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dc2c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dc30:	ea4a 0000 	orr.w	r0, sl, r0
 801dc34:	fb09 4200 	mla	r2, r9, r0, r4
 801dc38:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801dc3c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801dc40:	9801      	ldr	r0, [sp, #4]
 801dc42:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801dc46:	ea44 0b0b 	orr.w	fp, r4, fp
 801dc4a:	9c02      	ldr	r4, [sp, #8]
 801dc4c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801dc50:	1b00      	subs	r0, r0, r4
 801dc52:	9c01      	ldr	r4, [sp, #4]
 801dc54:	b280      	uxth	r0, r0
 801dc56:	eba4 0608 	sub.w	r6, r4, r8
 801dc5a:	b2b6      	uxth	r6, r6
 801dc5c:	4373      	muls	r3, r6
 801dc5e:	fb0c 3300 	mla	r3, ip, r0, r3
 801dc62:	9802      	ldr	r0, [sp, #8]
 801dc64:	9903      	ldr	r1, [sp, #12]
 801dc66:	fb00 3505 	mla	r5, r0, r5, r3
 801dc6a:	fb08 5707 	mla	r7, r8, r7, r5
 801dc6e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801dc72:	8809      	ldrh	r1, [r1, #0]
 801dc74:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801dc78:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801dc7c:	120b      	asrs	r3, r1, #8
 801dc7e:	b2ff      	uxtb	r7, r7
 801dc80:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dc84:	437b      	muls	r3, r7
 801dc86:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801dc8a:	10c8      	asrs	r0, r1, #3
 801dc8c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801dc90:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dc94:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dc98:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801dc9c:	00c9      	lsls	r1, r1, #3
 801dc9e:	4378      	muls	r0, r7
 801dca0:	ea42 0e0e 	orr.w	lr, r2, lr
 801dca4:	b2c9      	uxtb	r1, r1
 801dca6:	fa1f f28e 	uxth.w	r2, lr
 801dcaa:	434f      	muls	r7, r1
 801dcac:	1c59      	adds	r1, r3, #1
 801dcae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801dcb2:	1213      	asrs	r3, r2, #8
 801dcb4:	f023 0307 	bic.w	r3, r3, #7
 801dcb8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dcbc:	1c41      	adds	r1, r0, #1
 801dcbe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801dcc2:	10d1      	asrs	r1, r2, #3
 801dcc4:	f021 0103 	bic.w	r1, r1, #3
 801dcc8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801dccc:	021b      	lsls	r3, r3, #8
 801dcce:	00c9      	lsls	r1, r1, #3
 801dcd0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dcd4:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801dcd8:	430b      	orrs	r3, r1
 801dcda:	1c79      	adds	r1, r7, #1
 801dcdc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801dce0:	00d2      	lsls	r2, r2, #3
 801dce2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801dce6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dcea:	431a      	orrs	r2, r3
 801dcec:	9b03      	ldr	r3, [sp, #12]
 801dcee:	801a      	strh	r2, [r3, #0]
 801dcf0:	b005      	add	sp, #20
 801dcf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcf6:	f04f 0c00 	mov.w	ip, #0
 801dcfa:	4664      	mov	r4, ip
 801dcfc:	e6e5      	b.n	801daca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801dcfe:	2300      	movs	r3, #0
 801dd00:	469c      	mov	ip, r3
 801dd02:	461a      	mov	r2, r3
 801dd04:	461c      	mov	r4, r3
 801dd06:	e707      	b.n	801db18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dd08:	2300      	movs	r3, #0
 801dd0a:	461a      	mov	r2, r3
 801dd0c:	e704      	b.n	801db18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dd0e:	460b      	mov	r3, r1
 801dd10:	460a      	mov	r2, r1
 801dd12:	e701      	b.n	801db18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801dd14:	2500      	movs	r5, #0
 801dd16:	46ab      	mov	fp, r5
 801dd18:	e72f      	b.n	801db7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801dd1a:	2700      	movs	r7, #0
 801dd1c:	463d      	mov	r5, r7
 801dd1e:	4638      	mov	r0, r7
 801dd20:	46bb      	mov	fp, r7
 801dd22:	e754      	b.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dd24:	4677      	mov	r7, lr
 801dd26:	4675      	mov	r5, lr
 801dd28:	4670      	mov	r0, lr
 801dd2a:	46f3      	mov	fp, lr
 801dd2c:	e74f      	b.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dd2e:	2700      	movs	r7, #0
 801dd30:	4638      	mov	r0, r7
 801dd32:	e74c      	b.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801dd34:	460f      	mov	r7, r1
 801dd36:	4608      	mov	r0, r1
 801dd38:	e749      	b.n	801dbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801dd3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd40:	b093      	sub	sp, #76	@ 0x4c
 801dd42:	9210      	str	r2, [sp, #64]	@ 0x40
 801dd44:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801dd46:	9011      	str	r0, [sp, #68]	@ 0x44
 801dd48:	6850      	ldr	r0, [r2, #4]
 801dd4a:	910e      	str	r1, [sp, #56]	@ 0x38
 801dd4c:	9306      	str	r3, [sp, #24]
 801dd4e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801dd52:	fb00 1303 	mla	r3, r0, r3, r1
 801dd56:	6812      	ldr	r2, [r2, #0]
 801dd58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dd5c:	9307      	str	r3, [sp, #28]
 801dd5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd60:	681b      	ldr	r3, [r3, #0]
 801dd62:	9308      	str	r3, [sp, #32]
 801dd64:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd66:	685b      	ldr	r3, [r3, #4]
 801dd68:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dd6c:	2b00      	cmp	r3, #0
 801dd6e:	dc03      	bgt.n	801dd78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801dd70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dd72:	2b00      	cmp	r3, #0
 801dd74:	f340 83b4 	ble.w	801e4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801dd78:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dd7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dd82:	1e48      	subs	r0, r1, #1
 801dd84:	1e55      	subs	r5, r2, #1
 801dd86:	9b06      	ldr	r3, [sp, #24]
 801dd88:	2b00      	cmp	r3, #0
 801dd8a:	f340 8163 	ble.w	801e054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801dd8e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801dd90:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dd92:	1436      	asrs	r6, r6, #16
 801dd94:	ea4f 4323 	mov.w	r3, r3, asr #16
 801dd98:	d406      	bmi.n	801dda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dd9a:	4286      	cmp	r6, r0
 801dd9c:	da04      	bge.n	801dda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dd9e:	2b00      	cmp	r3, #0
 801dda0:	db02      	blt.n	801dda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dda2:	42ab      	cmp	r3, r5
 801dda4:	f2c0 8157 	blt.w	801e056 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801dda8:	3601      	adds	r6, #1
 801ddaa:	f100 8144 	bmi.w	801e036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ddae:	42b1      	cmp	r1, r6
 801ddb0:	f2c0 8141 	blt.w	801e036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ddb4:	3301      	adds	r3, #1
 801ddb6:	f100 813e 	bmi.w	801e036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ddba:	429a      	cmp	r2, r3
 801ddbc:	f2c0 813b 	blt.w	801e036 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ddc0:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ddc4:	9b06      	ldr	r3, [sp, #24]
 801ddc6:	9f07      	ldr	r7, [sp, #28]
 801ddc8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ddca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ddcc:	2b00      	cmp	r3, #0
 801ddce:	f340 8164 	ble.w	801e09a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ddd2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ddd4:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ddd6:	1418      	asrs	r0, r3, #16
 801ddd8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ddda:	142d      	asrs	r5, r5, #16
 801dddc:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801dde0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801dde2:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801dde6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dde8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ddec:	f100 81ee 	bmi.w	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ddf0:	f102 3eff 	add.w	lr, r2, #4294967295
 801ddf4:	4575      	cmp	r5, lr
 801ddf6:	f280 81e9 	bge.w	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ddfa:	2800      	cmp	r0, #0
 801ddfc:	f2c0 81e6 	blt.w	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801de00:	f103 3eff 	add.w	lr, r3, #4294967295
 801de04:	4570      	cmp	r0, lr
 801de06:	f280 81e1 	bge.w	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801de0a:	b212      	sxth	r2, r2
 801de0c:	fb00 5002 	mla	r0, r0, r2, r5
 801de10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801de12:	fa1f fe81 	uxth.w	lr, r1
 801de16:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801de1a:	eb03 0a00 	add.w	sl, r3, r0
 801de1e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801de22:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801de26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801de2a:	b29b      	uxth	r3, r3
 801de2c:	f1bc 0f00 	cmp.w	ip, #0
 801de30:	f000 8179 	beq.w	801e126 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801de34:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801de38:	eb0a 0b02 	add.w	fp, sl, r2
 801de3c:	fa1f fa8c 	uxth.w	sl, ip
 801de40:	fb0a fe0e 	mul.w	lr, sl, lr
 801de44:	eba5 050e 	sub.w	r5, r5, lr
 801de48:	b2ad      	uxth	r5, r5
 801de4a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801de4e:	fb08 f505 	mul.w	r5, r8, r5
 801de52:	fa1f fa8a 	uxth.w	sl, sl
 801de56:	eba3 030a 	sub.w	r3, r3, sl
 801de5a:	b29b      	uxth	r3, r3
 801de5c:	940a      	str	r4, [sp, #40]	@ 0x28
 801de5e:	fb09 5303 	mla	r3, r9, r3, r5
 801de62:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801de66:	940b      	str	r4, [sp, #44]	@ 0x2c
 801de68:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801de6a:	fb0a 3304 	mla	r3, sl, r4, r3
 801de6e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801de70:	fb0e 3304 	mla	r3, lr, r4, r3
 801de74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801de78:	2b00      	cmp	r3, #0
 801de7a:	f000 80cf 	beq.w	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de7e:	9c08      	ldr	r4, [sp, #32]
 801de80:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801de84:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801de88:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801de8c:	f000 8150 	beq.w	801e130 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801de90:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801de94:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801de98:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801de9c:	fb09 f000 	mul.w	r0, r9, r0
 801dea0:	fb0a fe0e 	mul.w	lr, sl, lr
 801dea4:	f100 0b20 	add.w	fp, r0, #32
 801dea8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801deac:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801deb0:	44ce      	add	lr, r9
 801deb2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801deb6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801deba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801debe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dec2:	ea4e 0909 	orr.w	r9, lr, r9
 801dec6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801deca:	8868      	ldrh	r0, [r5, #2]
 801decc:	d019      	beq.n	801df02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801dece:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801ded2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ded6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801deda:	fb08 f800 	mul.w	r8, r8, r0
 801dede:	fb0a fe0e 	mul.w	lr, sl, lr
 801dee2:	f108 0b20 	add.w	fp, r8, #32
 801dee6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801deea:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801deee:	4486      	add	lr, r0
 801def0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801def4:	0a00      	lsrs	r0, r0, #8
 801def6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801defa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801defe:	ea4e 0000 	orr.w	r0, lr, r0
 801df02:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801df06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801df0a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801df0e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801df12:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801df16:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801df1a:	ea4e 0909 	orr.w	r9, lr, r9
 801df1e:	ea4a 0000 	orr.w	r0, sl, r0
 801df22:	f1bc 0f00 	cmp.w	ip, #0
 801df26:	f000 8105 	beq.w	801e134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801df2a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801df2e:	3a01      	subs	r2, #1
 801df30:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801df32:	0052      	lsls	r2, r2, #1
 801df34:	3202      	adds	r2, #2
 801df36:	2cff      	cmp	r4, #255	@ 0xff
 801df38:	eb05 0e02 	add.w	lr, r5, r2
 801df3c:	5aaa      	ldrh	r2, [r5, r2]
 801df3e:	d018      	beq.n	801df72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801df40:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801df44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801df48:	fb04 fa02 	mul.w	sl, r4, r2
 801df4c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801df50:	fb08 f805 	mul.w	r8, r8, r5
 801df54:	f10a 0520 	add.w	r5, sl, #32
 801df58:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801df5c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801df60:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801df64:	4442      	add	r2, r8
 801df66:	0a2d      	lsrs	r5, r5, #8
 801df68:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801df6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801df70:	432a      	orrs	r2, r5
 801df72:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801df74:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801df78:	2cff      	cmp	r4, #255	@ 0xff
 801df7a:	d01a      	beq.n	801dfb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801df7c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801df80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801df84:	fb04 fa05 	mul.w	sl, r4, r5
 801df88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801df8c:	fb08 f80e 	mul.w	r8, r8, lr
 801df90:	f10a 0e20 	add.w	lr, sl, #32
 801df94:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801df98:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801df9c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dfa0:	4445      	add	r5, r8
 801dfa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dfa6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801dfaa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801dfae:	ea45 050e 	orr.w	r5, r5, lr
 801dfb2:	fb1c fe01 	smulbb	lr, ip, r1
 801dfb6:	f1cc 0810 	rsb	r8, ip, #16
 801dfba:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801dfbe:	eba8 0801 	sub.w	r8, r8, r1
 801dfc2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801dfc6:	4341      	muls	r1, r0
 801dfc8:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801dfcc:	fb09 1108 	mla	r1, r9, r8, r1
 801dfd0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dfd4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dfd8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dfdc:	ea4a 0202 	orr.w	r2, sl, r2
 801dfe0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801dfe4:	fb0c 1102 	mla	r1, ip, r2, r1
 801dfe8:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801dfec:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dff0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801dff4:	ea4b 0505 	orr.w	r5, fp, r5
 801dff8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801dffc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e000:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e004:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e008:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e00c:	ea42 0e0e 	orr.w	lr, r2, lr
 801e010:	fa1f f28e 	uxth.w	r2, lr
 801e014:	2bff      	cmp	r3, #255	@ 0xff
 801e016:	f040 80a1 	bne.w	801e15c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801e01a:	803a      	strh	r2, [r7, #0]
 801e01c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e01e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e020:	3702      	adds	r7, #2
 801e022:	4413      	add	r3, r2
 801e024:	931d      	str	r3, [sp, #116]	@ 0x74
 801e026:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e028:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e02a:	441a      	add	r2, r3
 801e02c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e02e:	921e      	str	r2, [sp, #120]	@ 0x78
 801e030:	3b01      	subs	r3, #1
 801e032:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e034:	e6c9      	b.n	801ddca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e036:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e038:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801e03a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801e03c:	4433      	add	r3, r6
 801e03e:	931d      	str	r3, [sp, #116]	@ 0x74
 801e040:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e042:	441c      	add	r4, r3
 801e044:	9b06      	ldr	r3, [sp, #24]
 801e046:	941e      	str	r4, [sp, #120]	@ 0x78
 801e048:	3b01      	subs	r3, #1
 801e04a:	9306      	str	r3, [sp, #24]
 801e04c:	9b07      	ldr	r3, [sp, #28]
 801e04e:	3302      	adds	r3, #2
 801e050:	9307      	str	r3, [sp, #28]
 801e052:	e698      	b.n	801dd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e054:	d028      	beq.n	801e0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e056:	9b06      	ldr	r3, [sp, #24]
 801e058:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e05a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801e05c:	3b01      	subs	r3, #1
 801e05e:	fb00 5003 	mla	r0, r0, r3, r5
 801e062:	1400      	asrs	r0, r0, #16
 801e064:	f53f aeac 	bmi.w	801ddc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e068:	3901      	subs	r1, #1
 801e06a:	4288      	cmp	r0, r1
 801e06c:	f6bf aea8 	bge.w	801ddc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e070:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e072:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801e074:	fb01 0303 	mla	r3, r1, r3, r0
 801e078:	141b      	asrs	r3, r3, #16
 801e07a:	f53f aea1 	bmi.w	801ddc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e07e:	3a01      	subs	r2, #1
 801e080:	4293      	cmp	r3, r2
 801e082:	f6bf ae9d 	bge.w	801ddc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e086:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e08a:	9b06      	ldr	r3, [sp, #24]
 801e08c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801e090:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e092:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e094:	2b00      	cmp	r3, #0
 801e096:	f300 80b6 	bgt.w	801e206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801e09a:	9b06      	ldr	r3, [sp, #24]
 801e09c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e0a0:	9b07      	ldr	r3, [sp, #28]
 801e0a2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e0a6:	9307      	str	r3, [sp, #28]
 801e0a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e0aa:	2b00      	cmp	r3, #0
 801e0ac:	f340 8218 	ble.w	801e4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e0b0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e0b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e0b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e0bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e0c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e0c4:	eef0 6a62 	vmov.f32	s13, s5
 801e0c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e0cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e0d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e0d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e0dc:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801e0e0:	eef0 6a43 	vmov.f32	s13, s6
 801e0e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e0e8:	ee12 2a90 	vmov	r2, s5
 801e0ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0f0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e0f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e0f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0fa:	ee13 2a10 	vmov	r2, s6
 801e0fe:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e100:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e102:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801e106:	fb92 f3f3 	sdiv	r3, r2, r3
 801e10a:	9320      	str	r3, [sp, #128]	@ 0x80
 801e10c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e10e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e110:	3b01      	subs	r3, #1
 801e112:	930e      	str	r3, [sp, #56]	@ 0x38
 801e114:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e116:	bf08      	it	eq
 801e118:	4613      	moveq	r3, r2
 801e11a:	eeb0 3a67 	vmov.f32	s6, s15
 801e11e:	9306      	str	r3, [sp, #24]
 801e120:	eef0 2a47 	vmov.f32	s5, s14
 801e124:	e621      	b.n	801dd6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e126:	fb08 f505 	mul.w	r5, r8, r5
 801e12a:	fb09 5303 	mla	r3, r9, r3, r5
 801e12e:	e6a1      	b.n	801de74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e130:	4681      	mov	r9, r0
 801e132:	e6c8      	b.n	801dec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e134:	f1c1 0210 	rsb	r2, r1, #16
 801e138:	4341      	muls	r1, r0
 801e13a:	fb09 1902 	mla	r9, r9, r2, r1
 801e13e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e142:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e146:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e14a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e14e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e152:	ea42 0909 	orr.w	r9, r2, r9
 801e156:	fa1f f289 	uxth.w	r2, r9
 801e15a:	e75b      	b.n	801e014 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e15c:	43db      	mvns	r3, r3
 801e15e:	f8b7 c000 	ldrh.w	ip, [r7]
 801e162:	fa5f fe83 	uxtb.w	lr, r3
 801e166:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e16a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e16e:	fb00 f00e 	mul.w	r0, r0, lr
 801e172:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e176:	1c41      	adds	r1, r0, #1
 801e178:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e17c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e180:	fb05 f50e 	mul.w	r5, r5, lr
 801e184:	1211      	asrs	r1, r2, #8
 801e186:	f021 0107 	bic.w	r1, r1, #7
 801e18a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e18e:	48d6      	ldr	r0, [pc, #856]	@ (801e4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e190:	b2c9      	uxtb	r1, r1
 801e192:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e196:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e19a:	1c69      	adds	r1, r5, #1
 801e19c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e1a0:	b2db      	uxtb	r3, r3
 801e1a2:	10d1      	asrs	r1, r2, #3
 801e1a4:	fb03 f30e 	mul.w	r3, r3, lr
 801e1a8:	f021 0103 	bic.w	r1, r1, #3
 801e1ac:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e1b0:	00c9      	lsls	r1, r1, #3
 801e1b2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e1b6:	4301      	orrs	r1, r0
 801e1b8:	1c58      	adds	r0, r3, #1
 801e1ba:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e1be:	00d2      	lsls	r2, r2, #3
 801e1c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e1c4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e1c8:	430a      	orrs	r2, r1
 801e1ca:	e726      	b.n	801e01a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801e1cc:	f115 0e01 	adds.w	lr, r5, #1
 801e1d0:	f53f af24 	bmi.w	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e1d4:	4572      	cmp	r2, lr
 801e1d6:	f6ff af21 	blt.w	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e1da:	f110 0e01 	adds.w	lr, r0, #1
 801e1de:	f53f af1d 	bmi.w	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e1e2:	4573      	cmp	r3, lr
 801e1e4:	f6ff af1a 	blt.w	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e1e8:	b21b      	sxth	r3, r3
 801e1ea:	b212      	sxth	r2, r2
 801e1ec:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e1f0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e1f4:	9301      	str	r3, [sp, #4]
 801e1f6:	9200      	str	r2, [sp, #0]
 801e1f8:	4639      	mov	r1, r7
 801e1fa:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e1fe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e200:	f7ff fc24 	bl	801da4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e204:	e70a      	b.n	801e01c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e206:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e208:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e20c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e20e:	fa1f fc82 	uxth.w	ip, r2
 801e212:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e216:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e218:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e21c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e220:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e222:	141f      	asrs	r7, r3, #16
 801e224:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e226:	141b      	asrs	r3, r3, #16
 801e228:	fb01 3707 	mla	r7, r1, r7, r3
 801e22c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e22e:	eb03 0a07 	add.w	sl, r3, r7
 801e232:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e236:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e23a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e23e:	b29b      	uxth	r3, r3
 801e240:	2d00      	cmp	r5, #0
 801e242:	f000 80fe 	beq.w	801e442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801e246:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e24a:	eb0a 0b01 	add.w	fp, sl, r1
 801e24e:	fa1f fa85 	uxth.w	sl, r5
 801e252:	fb0a fc0c 	mul.w	ip, sl, ip
 801e256:	eba0 000c 	sub.w	r0, r0, ip
 801e25a:	b280      	uxth	r0, r0
 801e25c:	fb08 f000 	mul.w	r0, r8, r0
 801e260:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e264:	fa1f fa8a 	uxth.w	sl, sl
 801e268:	eba3 030a 	sub.w	r3, r3, sl
 801e26c:	b29b      	uxth	r3, r3
 801e26e:	fb09 0303 	mla	r3, r9, r3, r0
 801e272:	940c      	str	r4, [sp, #48]	@ 0x30
 801e274:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e276:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e27a:	fb0a 3300 	mla	r3, sl, r0, r3
 801e27e:	fb0c 3304 	mla	r3, ip, r4, r3
 801e282:	940d      	str	r4, [sp, #52]	@ 0x34
 801e284:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e288:	2b00      	cmp	r3, #0
 801e28a:	f000 80cc 	beq.w	801e426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e28e:	9808      	ldr	r0, [sp, #32]
 801e290:	9c08      	ldr	r4, [sp, #32]
 801e292:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e296:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e29a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e29e:	f000 80d5 	beq.w	801e44c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e2a2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e2a6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e2aa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e2ae:	fb09 f707 	mul.w	r7, r9, r7
 801e2b2:	fb0a fc0c 	mul.w	ip, sl, ip
 801e2b6:	f107 0b20 	add.w	fp, r7, #32
 801e2ba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801e2be:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e2c2:	44cc      	add	ip, r9
 801e2c4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801e2c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e2cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e2d0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e2d4:	ea4c 0909 	orr.w	r9, ip, r9
 801e2d8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e2dc:	8847      	ldrh	r7, [r0, #2]
 801e2de:	d019      	beq.n	801e314 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801e2e0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e2e4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e2e8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e2ec:	fb08 f807 	mul.w	r8, r8, r7
 801e2f0:	fb0a fc0c 	mul.w	ip, sl, ip
 801e2f4:	f108 0b20 	add.w	fp, r8, #32
 801e2f8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801e2fc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801e300:	44bc      	add	ip, r7
 801e302:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801e306:	0a3f      	lsrs	r7, r7, #8
 801e308:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801e30c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e310:	ea4c 0707 	orr.w	r7, ip, r7
 801e314:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801e318:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801e31c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e320:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e324:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e328:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e32c:	ea4c 0909 	orr.w	r9, ip, r9
 801e330:	ea4a 0707 	orr.w	r7, sl, r7
 801e334:	2d00      	cmp	r5, #0
 801e336:	f000 808b 	beq.w	801e450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801e33a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e33e:	3901      	subs	r1, #1
 801e340:	0049      	lsls	r1, r1, #1
 801e342:	3102      	adds	r1, #2
 801e344:	eb00 0c01 	add.w	ip, r0, r1
 801e348:	5a41      	ldrh	r1, [r0, r1]
 801e34a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e34c:	28ff      	cmp	r0, #255	@ 0xff
 801e34e:	d019      	beq.n	801e384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801e350:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801e352:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801e356:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e35a:	fb04 fa01 	mul.w	sl, r4, r1
 801e35e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e362:	fb08 f800 	mul.w	r8, r8, r0
 801e366:	f10a 0020 	add.w	r0, sl, #32
 801e36a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e36e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e372:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e376:	4441      	add	r1, r8
 801e378:	0a00      	lsrs	r0, r0, #8
 801e37a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e37e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e382:	4301      	orrs	r1, r0
 801e384:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e386:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e38a:	2cff      	cmp	r4, #255	@ 0xff
 801e38c:	d01a      	beq.n	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801e38e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801e392:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e396:	fb04 fa00 	mul.w	sl, r4, r0
 801e39a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e39e:	fb08 f80c 	mul.w	r8, r8, ip
 801e3a2:	f10a 0c20 	add.w	ip, sl, #32
 801e3a6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e3aa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e3ae:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e3b2:	4440      	add	r0, r8
 801e3b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3b8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e3bc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e3c0:	ea40 000c 	orr.w	r0, r0, ip
 801e3c4:	fb15 fc02 	smulbb	ip, r5, r2
 801e3c8:	f1c5 0810 	rsb	r8, r5, #16
 801e3cc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e3d0:	eba8 0802 	sub.w	r8, r8, r2
 801e3d4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e3d8:	437a      	muls	r2, r7
 801e3da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e3de:	fb09 2208 	mla	r2, r9, r8, r2
 801e3e2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e3e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e3ea:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e3ee:	ea4a 0101 	orr.w	r1, sl, r1
 801e3f2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e3f6:	fb05 2201 	mla	r2, r5, r1, r2
 801e3fa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e3fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e402:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e406:	ea4b 0000 	orr.w	r0, fp, r0
 801e40a:	fb0c 2200 	mla	r2, ip, r0, r2
 801e40e:	0d57      	lsrs	r7, r2, #21
 801e410:	0952      	lsrs	r2, r2, #5
 801e412:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e416:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e41a:	433a      	orrs	r2, r7
 801e41c:	2bff      	cmp	r3, #255	@ 0xff
 801e41e:	b292      	uxth	r2, r2
 801e420:	d127      	bne.n	801e472 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801e422:	f8ae 2000 	strh.w	r2, [lr]
 801e426:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e428:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e42a:	f10e 0e02 	add.w	lr, lr, #2
 801e42e:	4413      	add	r3, r2
 801e430:	931d      	str	r3, [sp, #116]	@ 0x74
 801e432:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e434:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e436:	441a      	add	r2, r3
 801e438:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e43a:	921e      	str	r2, [sp, #120]	@ 0x78
 801e43c:	3b01      	subs	r3, #1
 801e43e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e440:	e627      	b.n	801e092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e442:	fb08 f000 	mul.w	r0, r8, r0
 801e446:	fb09 0303 	mla	r3, r9, r3, r0
 801e44a:	e71b      	b.n	801e284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801e44c:	46b9      	mov	r9, r7
 801e44e:	e743      	b.n	801e2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801e450:	f1c2 0110 	rsb	r1, r2, #16
 801e454:	437a      	muls	r2, r7
 801e456:	fb09 2901 	mla	r9, r9, r1, r2
 801e45a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e45e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e462:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e466:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e46a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e46e:	4302      	orrs	r2, r0
 801e470:	e7d4      	b.n	801e41c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801e472:	43db      	mvns	r3, r3
 801e474:	f8be 7000 	ldrh.w	r7, [lr]
 801e478:	fa5f fc83 	uxtb.w	ip, r3
 801e47c:	1238      	asrs	r0, r7, #8
 801e47e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e482:	fb00 f00c 	mul.w	r0, r0, ip
 801e486:	10fd      	asrs	r5, r7, #3
 801e488:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e48c:	fb05 f10c 	mul.w	r1, r5, ip
 801e490:	1c45      	adds	r5, r0, #1
 801e492:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e496:	1215      	asrs	r5, r2, #8
 801e498:	f025 0507 	bic.w	r5, r5, #7
 801e49c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e4a0:	00fb      	lsls	r3, r7, #3
 801e4a2:	1c4d      	adds	r5, r1, #1
 801e4a4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e4a8:	b2db      	uxtb	r3, r3
 801e4aa:	10d1      	asrs	r1, r2, #3
 801e4ac:	fb03 f30c 	mul.w	r3, r3, ip
 801e4b0:	f021 0103 	bic.w	r1, r1, #3
 801e4b4:	4c0c      	ldr	r4, [pc, #48]	@ (801e4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e4b6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e4ba:	b2c0      	uxtb	r0, r0
 801e4bc:	00c9      	lsls	r1, r1, #3
 801e4be:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e4c2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e4c6:	4308      	orrs	r0, r1
 801e4c8:	1c59      	adds	r1, r3, #1
 801e4ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e4ce:	00d2      	lsls	r2, r2, #3
 801e4d0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e4d4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e4d8:	4318      	orrs	r0, r3
 801e4da:	f8ae 0000 	strh.w	r0, [lr]
 801e4de:	e7a2      	b.n	801e426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e4e0:	b013      	add	sp, #76	@ 0x4c
 801e4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4e6:	bf00      	nop
 801e4e8:	fffff800 	.word	0xfffff800

0801e4ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e4ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e4f0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801e4f4:	fb05 4c03 	mla	ip, r5, r3, r4
 801e4f8:	2d00      	cmp	r5, #0
 801e4fa:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e4fe:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801e502:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801e506:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801e50a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e50e:	8808      	ldrh	r0, [r1, #0]
 801e510:	f2c0 80a7 	blt.w	801e662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e514:	45aa      	cmp	sl, r5
 801e516:	f340 80a4 	ble.w	801e662 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e51a:	2c00      	cmp	r4, #0
 801e51c:	f2c0 809f 	blt.w	801e65e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e520:	42a3      	cmp	r3, r4
 801e522:	f340 809c 	ble.w	801e65e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e526:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e52a:	1c62      	adds	r2, r4, #1
 801e52c:	f100 809c 	bmi.w	801e668 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e530:	4293      	cmp	r3, r2
 801e532:	f340 8099 	ble.w	801e668 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e536:	f1b9 0f00 	cmp.w	r9, #0
 801e53a:	f000 8095 	beq.w	801e668 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e53e:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e542:	3501      	adds	r5, #1
 801e544:	f100 8094 	bmi.w	801e670 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e548:	45aa      	cmp	sl, r5
 801e54a:	f340 8091 	ble.w	801e670 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e54e:	2f00      	cmp	r7, #0
 801e550:	f000 808e 	beq.w	801e670 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e554:	2c00      	cmp	r4, #0
 801e556:	f2c0 8089 	blt.w	801e66c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e55a:	42a3      	cmp	r3, r4
 801e55c:	f340 8086 	ble.w	801e66c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e560:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e564:	3401      	adds	r4, #1
 801e566:	f100 8086 	bmi.w	801e676 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e56a:	42a3      	cmp	r3, r4
 801e56c:	f340 8083 	ble.w	801e676 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e570:	f1b9 0f00 	cmp.w	r9, #0
 801e574:	d07f      	beq.n	801e676 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e576:	3301      	adds	r3, #1
 801e578:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e57c:	fb19 fe07 	smulbb	lr, r9, r7
 801e580:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e584:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e588:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e58c:	ea44 0808 	orr.w	r8, r4, r8
 801e590:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e594:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e598:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e59c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e5a0:	ea44 0c0c 	orr.w	ip, r4, ip
 801e5a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e5a8:	fb04 f40c 	mul.w	r4, r4, ip
 801e5ac:	f1c7 0210 	rsb	r2, r7, #16
 801e5b0:	eba2 0209 	sub.w	r2, r2, r9
 801e5b4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e5b8:	fb02 4808 	mla	r8, r2, r8, r4
 801e5bc:	b2b4      	uxth	r4, r6
 801e5be:	43f6      	mvns	r6, r6
 801e5c0:	041a      	lsls	r2, r3, #16
 801e5c2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e5c6:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e5ca:	4313      	orrs	r3, r2
 801e5cc:	fb0e 8303 	mla	r3, lr, r3, r8
 801e5d0:	042a      	lsls	r2, r5, #16
 801e5d2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e5d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e5da:	432a      	orrs	r2, r5
 801e5dc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e5e0:	fb07 3202 	mla	r2, r7, r2, r3
 801e5e4:	0d53      	lsrs	r3, r2, #21
 801e5e6:	0952      	lsrs	r2, r2, #5
 801e5e8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e5ec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e5f0:	431a      	orrs	r2, r3
 801e5f2:	b293      	uxth	r3, r2
 801e5f4:	1202      	asrs	r2, r0, #8
 801e5f6:	b2f6      	uxtb	r6, r6
 801e5f8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e5fc:	fb12 f206 	smulbb	r2, r2, r6
 801e600:	10c7      	asrs	r7, r0, #3
 801e602:	00c0      	lsls	r0, r0, #3
 801e604:	b2c0      	uxtb	r0, r0
 801e606:	121d      	asrs	r5, r3, #8
 801e608:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e60c:	fb10 f006 	smulbb	r0, r0, r6
 801e610:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e614:	fb17 f706 	smulbb	r7, r7, r6
 801e618:	fb05 2504 	mla	r5, r5, r4, r2
 801e61c:	10da      	asrs	r2, r3, #3
 801e61e:	00db      	lsls	r3, r3, #3
 801e620:	b2db      	uxtb	r3, r3
 801e622:	fb03 0004 	mla	r0, r3, r4, r0
 801e626:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e62a:	fb02 7204 	mla	r2, r2, r4, r7
 801e62e:	b2ad      	uxth	r5, r5
 801e630:	b280      	uxth	r0, r0
 801e632:	1c6b      	adds	r3, r5, #1
 801e634:	b292      	uxth	r2, r2
 801e636:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e63a:	1c43      	adds	r3, r0, #1
 801e63c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e640:	1c50      	adds	r0, r2, #1
 801e642:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e646:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e64a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e64e:	0952      	lsrs	r2, r2, #5
 801e650:	432b      	orrs	r3, r5
 801e652:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e656:	4313      	orrs	r3, r2
 801e658:	800b      	strh	r3, [r1, #0]
 801e65a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e65e:	4680      	mov	r8, r0
 801e660:	e763      	b.n	801e52a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801e662:	4684      	mov	ip, r0
 801e664:	4680      	mov	r8, r0
 801e666:	e76c      	b.n	801e542 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e668:	4684      	mov	ip, r0
 801e66a:	e76a      	b.n	801e542 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e66c:	4605      	mov	r5, r0
 801e66e:	e779      	b.n	801e564 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801e670:	4603      	mov	r3, r0
 801e672:	4605      	mov	r5, r0
 801e674:	e782      	b.n	801e57c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801e676:	4603      	mov	r3, r0
 801e678:	e780      	b.n	801e57c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801e67a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e67a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e67e:	b093      	sub	sp, #76	@ 0x4c
 801e680:	461d      	mov	r5, r3
 801e682:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801e686:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e688:	910a      	str	r1, [sp, #40]	@ 0x28
 801e68a:	9210      	str	r2, [sp, #64]	@ 0x40
 801e68c:	6859      	ldr	r1, [r3, #4]
 801e68e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801e692:	681b      	ldr	r3, [r3, #0]
 801e694:	920b      	str	r2, [sp, #44]	@ 0x2c
 801e696:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801e69a:	fb01 2707 	mla	r7, r1, r7, r2
 801e69e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801e6a2:	9307      	str	r3, [sp, #28]
 801e6a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e6a6:	9011      	str	r0, [sp, #68]	@ 0x44
 801e6a8:	681b      	ldr	r3, [r3, #0]
 801e6aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801e6ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e6ae:	43db      	mvns	r3, r3
 801e6b0:	b2db      	uxtb	r3, r3
 801e6b2:	9308      	str	r3, [sp, #32]
 801e6b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6b6:	2b00      	cmp	r3, #0
 801e6b8:	dc03      	bgt.n	801e6c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e6ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e6bc:	2b00      	cmp	r3, #0
 801e6be:	f340 8203 	ble.w	801eac8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e6c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e6c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e6c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e6cc:	1e48      	subs	r0, r1, #1
 801e6ce:	f102 3cff 	add.w	ip, r2, #4294967295
 801e6d2:	2d00      	cmp	r5, #0
 801e6d4:	f340 80da 	ble.w	801e88c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801e6d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e6dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e6e0:	d406      	bmi.n	801e6f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e6e2:	4586      	cmp	lr, r0
 801e6e4:	da04      	bge.n	801e6f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e6e6:	2b00      	cmp	r3, #0
 801e6e8:	db02      	blt.n	801e6f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e6ea:	4563      	cmp	r3, ip
 801e6ec:	f2c0 80cf 	blt.w	801e88e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e6f0:	f11e 0e01 	adds.w	lr, lr, #1
 801e6f4:	f100 80c1 	bmi.w	801e87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e6f8:	4571      	cmp	r1, lr
 801e6fa:	f2c0 80be 	blt.w	801e87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e6fe:	3301      	adds	r3, #1
 801e700:	f100 80bb 	bmi.w	801e87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e704:	429a      	cmp	r2, r3
 801e706:	f2c0 80b8 	blt.w	801e87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e70a:	46a9      	mov	r9, r5
 801e70c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e710:	f1b9 0f00 	cmp.w	r9, #0
 801e714:	f340 80d8 	ble.w	801e8c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e718:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e71a:	1421      	asrs	r1, r4, #16
 801e71c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e720:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e724:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e728:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e72c:	f100 8111 	bmi.w	801e952 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e730:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e734:	4551      	cmp	r1, sl
 801e736:	f280 810c 	bge.w	801e952 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e73a:	2800      	cmp	r0, #0
 801e73c:	f2c0 8109 	blt.w	801e952 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e740:	f103 3aff 	add.w	sl, r3, #4294967295
 801e744:	4550      	cmp	r0, sl
 801e746:	f280 8104 	bge.w	801e952 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e74a:	fa0f f38e 	sxth.w	r3, lr
 801e74e:	fb00 1103 	mla	r1, r0, r3, r1
 801e752:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801e754:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e758:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e75c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e760:	f1bc 0f00 	cmp.w	ip, #0
 801e764:	d007      	beq.n	801e776 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e766:	005b      	lsls	r3, r3, #1
 801e768:	eb0a 0003 	add.w	r0, sl, r3
 801e76c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e770:	930c      	str	r3, [sp, #48]	@ 0x30
 801e772:	8843      	ldrh	r3, [r0, #2]
 801e774:	930d      	str	r3, [sp, #52]	@ 0x34
 801e776:	fb12 f30c 	smulbb	r3, r2, ip
 801e77a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e77e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e782:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e786:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e78a:	10db      	asrs	r3, r3, #3
 801e78c:	ea40 000e 	orr.w	r0, r0, lr
 801e790:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e794:	f1cc 0e10 	rsb	lr, ip, #16
 801e798:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e79c:	ebae 0e02 	sub.w	lr, lr, r2
 801e7a0:	ea4a 0101 	orr.w	r1, sl, r1
 801e7a4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e7a8:	4351      	muls	r1, r2
 801e7aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e7ae:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e7b0:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e7b4:	0410      	lsls	r0, r2, #16
 801e7b6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e7ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e7be:	4310      	orrs	r0, r2
 801e7c0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801e7c2:	fb03 e000 	mla	r0, r3, r0, lr
 801e7c6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e7c8:	0412      	lsls	r2, r2, #16
 801e7ca:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801e7ce:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e7d2:	ea42 020e 	orr.w	r2, r2, lr
 801e7d6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e7da:	fb03 0302 	mla	r3, r3, r2, r0
 801e7de:	f8b8 0000 	ldrh.w	r0, [r8]
 801e7e2:	9f08      	ldr	r7, [sp, #32]
 801e7e4:	0d5a      	lsrs	r2, r3, #21
 801e7e6:	1201      	asrs	r1, r0, #8
 801e7e8:	095b      	lsrs	r3, r3, #5
 801e7ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e7ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e7f2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e7f6:	4313      	orrs	r3, r2
 801e7f8:	fb11 f107 	smulbb	r1, r1, r7
 801e7fc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e800:	00c0      	lsls	r0, r0, #3
 801e802:	b29b      	uxth	r3, r3
 801e804:	b2c0      	uxtb	r0, r0
 801e806:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801e80a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e80e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e812:	fb10 f007 	smulbb	r0, r0, r7
 801e816:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e81a:	fb1e fe07 	smulbb	lr, lr, r7
 801e81e:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e822:	10d9      	asrs	r1, r3, #3
 801e824:	00db      	lsls	r3, r3, #3
 801e826:	b2db      	uxtb	r3, r3
 801e828:	fb03 0302 	mla	r3, r3, r2, r0
 801e82c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e830:	fb01 e102 	mla	r1, r1, r2, lr
 801e834:	fa1f fc8c 	uxth.w	ip, ip
 801e838:	b29a      	uxth	r2, r3
 801e83a:	f10c 0301 	add.w	r3, ip, #1
 801e83e:	b289      	uxth	r1, r1
 801e840:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e844:	1c53      	adds	r3, r2, #1
 801e846:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e84a:	1c4a      	adds	r2, r1, #1
 801e84c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e850:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e854:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e858:	0949      	lsrs	r1, r1, #5
 801e85a:	ea43 030c 	orr.w	r3, r3, ip
 801e85e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e862:	430b      	orrs	r3, r1
 801e864:	f8a8 3000 	strh.w	r3, [r8]
 801e868:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e86a:	f108 0802 	add.w	r8, r8, #2
 801e86e:	441c      	add	r4, r3
 801e870:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e872:	f109 39ff 	add.w	r9, r9, #4294967295
 801e876:	441e      	add	r6, r3
 801e878:	e74a      	b.n	801e710 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e87a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801e87c:	3d01      	subs	r5, #1
 801e87e:	441c      	add	r4, r3
 801e880:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e882:	441e      	add	r6, r3
 801e884:	9b07      	ldr	r3, [sp, #28]
 801e886:	3302      	adds	r3, #2
 801e888:	9307      	str	r3, [sp, #28]
 801e88a:	e722      	b.n	801e6d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e88c:	d022      	beq.n	801e8d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e88e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e890:	1e6b      	subs	r3, r5, #1
 801e892:	fb00 4003 	mla	r0, r0, r3, r4
 801e896:	1400      	asrs	r0, r0, #16
 801e898:	f53f af37 	bmi.w	801e70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e89c:	3901      	subs	r1, #1
 801e89e:	4288      	cmp	r0, r1
 801e8a0:	f6bf af33 	bge.w	801e70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8a4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e8a6:	fb01 6303 	mla	r3, r1, r3, r6
 801e8aa:	141b      	asrs	r3, r3, #16
 801e8ac:	f53f af2d 	bmi.w	801e70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8b0:	3a01      	subs	r2, #1
 801e8b2:	4293      	cmp	r3, r2
 801e8b4:	f6bf af29 	bge.w	801e70a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e8b8:	46a8      	mov	r8, r5
 801e8ba:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e8be:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801e8c2:	f1b8 0f00 	cmp.w	r8, #0
 801e8c6:	dc5e      	bgt.n	801e986 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e8c8:	9b07      	ldr	r3, [sp, #28]
 801e8ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e8ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e8d2:	9307      	str	r3, [sp, #28]
 801e8d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e8d6:	2b00      	cmp	r3, #0
 801e8d8:	f340 80f6 	ble.w	801eac8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e8dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e8e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e8ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e8f0:	eef0 6a62 	vmov.f32	s13, s5
 801e8f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e8f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e900:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e904:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e908:	ee16 4a90 	vmov	r4, s13
 801e90c:	eef0 6a43 	vmov.f32	s13, s6
 801e910:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e914:	ee12 2a90 	vmov	r2, s5
 801e918:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e91c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e91e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e922:	fb92 f3f3 	sdiv	r3, r2, r3
 801e926:	ee13 2a10 	vmov	r2, s6
 801e92a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e92c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e92e:	ee16 6a90 	vmov	r6, s13
 801e932:	fb92 f3f3 	sdiv	r3, r2, r3
 801e936:	9320      	str	r3, [sp, #128]	@ 0x80
 801e938:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e93a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e93c:	3b01      	subs	r3, #1
 801e93e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e940:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e942:	bf0c      	ite	eq
 801e944:	4615      	moveq	r5, r2
 801e946:	461d      	movne	r5, r3
 801e948:	eeb0 3a67 	vmov.f32	s6, s15
 801e94c:	eef0 2a47 	vmov.f32	s5, s14
 801e950:	e6b0      	b.n	801e6b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e952:	f111 0a01 	adds.w	sl, r1, #1
 801e956:	d487      	bmi.n	801e868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e958:	45d6      	cmp	lr, sl
 801e95a:	db85      	blt.n	801e868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e95c:	f110 0a01 	adds.w	sl, r0, #1
 801e960:	d482      	bmi.n	801e868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e962:	4553      	cmp	r3, sl
 801e964:	db80      	blt.n	801e868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e966:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801e968:	b21b      	sxth	r3, r3
 801e96a:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e96e:	9101      	str	r1, [sp, #4]
 801e970:	9300      	str	r3, [sp, #0]
 801e972:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e976:	fa0f f38e 	sxth.w	r3, lr
 801e97a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e97c:	4641      	mov	r1, r8
 801e97e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e980:	f7ff fdb4 	bl	801e4ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e984:	e770      	b.n	801e868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e986:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e988:	1430      	asrs	r0, r6, #16
 801e98a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e98e:	1423      	asrs	r3, r4, #16
 801e990:	fb01 3000 	mla	r0, r1, r0, r3
 801e994:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e996:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801e998:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e99c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e9a0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e9a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e9a8:	8858      	ldrh	r0, [r3, #2]
 801e9aa:	f1be 0f00 	cmp.w	lr, #0
 801e9ae:	d00b      	beq.n	801e9c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e9b0:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801e9b4:	3901      	subs	r1, #1
 801e9b6:	0049      	lsls	r1, r1, #1
 801e9b8:	3102      	adds	r1, #2
 801e9ba:	eb03 0b01 	add.w	fp, r3, r1
 801e9be:	5a5b      	ldrh	r3, [r3, r1]
 801e9c0:	930e      	str	r3, [sp, #56]	@ 0x38
 801e9c2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e9c6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e9c8:	fb12 f30e 	smulbb	r3, r2, lr
 801e9cc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e9d0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e9d4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e9d8:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801e9dc:	10db      	asrs	r3, r3, #3
 801e9de:	ea41 010c 	orr.w	r1, r1, ip
 801e9e2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e9e6:	f1ce 0c10 	rsb	ip, lr, #16
 801e9ea:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e9ee:	ebac 0c02 	sub.w	ip, ip, r2
 801e9f2:	ea4b 0000 	orr.w	r0, fp, r0
 801e9f6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e9fa:	4350      	muls	r0, r2
 801e9fc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ea00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ea02:	fb0c 0c01 	mla	ip, ip, r1, r0
 801ea06:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ea0a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ea0e:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801ea12:	ea4b 0101 	orr.w	r1, fp, r1
 801ea16:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ea18:	fb03 c101 	mla	r1, r3, r1, ip
 801ea1c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801ea1e:	0412      	lsls	r2, r2, #16
 801ea20:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ea24:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ea28:	4302      	orrs	r2, r0
 801ea2a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801ea2e:	fb03 1202 	mla	r2, r3, r2, r1
 801ea32:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801ea36:	0952      	lsrs	r2, r2, #5
 801ea38:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801ea3c:	f8b9 2000 	ldrh.w	r2, [r9]
 801ea40:	9f08      	ldr	r7, [sp, #32]
 801ea42:	1211      	asrs	r1, r2, #8
 801ea44:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801ea48:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea4c:	fb11 f107 	smulbb	r1, r1, r7
 801ea50:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ea54:	ea4b 0303 	orr.w	r3, fp, r3
 801ea58:	00d2      	lsls	r2, r2, #3
 801ea5a:	b29b      	uxth	r3, r3
 801ea5c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ea60:	b2d2      	uxtb	r2, r2
 801ea62:	1218      	asrs	r0, r3, #8
 801ea64:	fb1c fc07 	smulbb	ip, ip, r7
 801ea68:	fb12 f207 	smulbb	r2, r2, r7
 801ea6c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea70:	fb00 100a 	mla	r0, r0, sl, r1
 801ea74:	10d9      	asrs	r1, r3, #3
 801ea76:	00db      	lsls	r3, r3, #3
 801ea78:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ea7c:	b2db      	uxtb	r3, r3
 801ea7e:	fb01 c10a 	mla	r1, r1, sl, ip
 801ea82:	fb03 230a 	mla	r3, r3, sl, r2
 801ea86:	b280      	uxth	r0, r0
 801ea88:	b29b      	uxth	r3, r3
 801ea8a:	b289      	uxth	r1, r1
 801ea8c:	1c42      	adds	r2, r0, #1
 801ea8e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ea92:	f101 0c01 	add.w	ip, r1, #1
 801ea96:	1c5a      	adds	r2, r3, #1
 801ea98:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ea9c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801eaa0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801eaa2:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801eaa6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eaaa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801eaae:	4310      	orrs	r0, r2
 801eab0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801eab4:	441c      	add	r4, r3
 801eab6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eab8:	ea40 000c 	orr.w	r0, r0, ip
 801eabc:	f829 0b02 	strh.w	r0, [r9], #2
 801eac0:	441e      	add	r6, r3
 801eac2:	f108 38ff 	add.w	r8, r8, #4294967295
 801eac6:	e6fc      	b.n	801e8c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801eac8:	b013      	add	sp, #76	@ 0x4c
 801eaca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801eace:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ead2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ead6:	fb0e 4703 	mla	r7, lr, r3, r4
 801eada:	f1be 0f00 	cmp.w	lr, #0
 801eade:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801eae2:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801eae6:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801eaea:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801eaee:	8808      	ldrh	r0, [r1, #0]
 801eaf0:	db60      	blt.n	801ebb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801eaf2:	45f1      	cmp	r9, lr
 801eaf4:	dd5e      	ble.n	801ebb4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801eaf6:	2c00      	cmp	r4, #0
 801eaf8:	db5a      	blt.n	801ebb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801eafa:	42a3      	cmp	r3, r4
 801eafc:	dd58      	ble.n	801ebb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801eafe:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801eb02:	1c62      	adds	r2, r4, #1
 801eb04:	d459      	bmi.n	801ebba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eb06:	4293      	cmp	r3, r2
 801eb08:	dd57      	ble.n	801ebba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eb0a:	2d00      	cmp	r5, #0
 801eb0c:	d055      	beq.n	801ebba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801eb0e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801eb12:	f11e 0e01 	adds.w	lr, lr, #1
 801eb16:	d454      	bmi.n	801ebc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eb18:	45f1      	cmp	r9, lr
 801eb1a:	dd52      	ble.n	801ebc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eb1c:	2e00      	cmp	r6, #0
 801eb1e:	d050      	beq.n	801ebc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801eb20:	2c00      	cmp	r4, #0
 801eb22:	db4c      	blt.n	801ebbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801eb24:	42a3      	cmp	r3, r4
 801eb26:	dd4a      	ble.n	801ebbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801eb28:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801eb2c:	3401      	adds	r4, #1
 801eb2e:	d405      	bmi.n	801eb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eb30:	42a3      	cmp	r3, r4
 801eb32:	dd03      	ble.n	801eb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eb34:	b115      	cbz	r5, 801eb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801eb36:	3301      	adds	r3, #1
 801eb38:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801eb3c:	fb15 f406 	smulbb	r4, r5, r6
 801eb40:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801eb44:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb48:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801eb4c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eb50:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eb54:	ea43 0c0c 	orr.w	ip, r3, ip
 801eb58:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801eb5c:	f1c6 0310 	rsb	r3, r6, #16
 801eb60:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801eb64:	1b5b      	subs	r3, r3, r5
 801eb66:	ea4e 0707 	orr.w	r7, lr, r7
 801eb6a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801eb6e:	437d      	muls	r5, r7
 801eb70:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801eb74:	fb03 5c0c 	mla	ip, r3, ip, r5
 801eb78:	0403      	lsls	r3, r0, #16
 801eb7a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb7e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb82:	4318      	orrs	r0, r3
 801eb84:	fb04 c000 	mla	r0, r4, r0, ip
 801eb88:	0413      	lsls	r3, r2, #16
 801eb8a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb8e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eb92:	4313      	orrs	r3, r2
 801eb94:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801eb98:	fb06 0003 	mla	r0, r6, r3, r0
 801eb9c:	0d43      	lsrs	r3, r0, #21
 801eb9e:	0940      	lsrs	r0, r0, #5
 801eba0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eba4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eba8:	4318      	orrs	r0, r3
 801ebaa:	8008      	strh	r0, [r1, #0]
 801ebac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ebb0:	4684      	mov	ip, r0
 801ebb2:	e7a6      	b.n	801eb02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801ebb4:	4607      	mov	r7, r0
 801ebb6:	4684      	mov	ip, r0
 801ebb8:	e7ab      	b.n	801eb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ebba:	4607      	mov	r7, r0
 801ebbc:	e7a9      	b.n	801eb12 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ebbe:	4602      	mov	r2, r0
 801ebc0:	e7b4      	b.n	801eb2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801ebc2:	4602      	mov	r2, r0
 801ebc4:	e7ba      	b.n	801eb3c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801ebc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ebc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebca:	b08f      	sub	sp, #60	@ 0x3c
 801ebcc:	461d      	mov	r5, r3
 801ebce:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801ebd2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ebd4:	9107      	str	r1, [sp, #28]
 801ebd6:	6859      	ldr	r1, [r3, #4]
 801ebd8:	920c      	str	r2, [sp, #48]	@ 0x30
 801ebda:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801ebde:	fb01 2707 	mla	r7, r1, r7, r2
 801ebe2:	681b      	ldr	r3, [r3, #0]
 801ebe4:	900d      	str	r0, [sp, #52]	@ 0x34
 801ebe6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801ebea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ebec:	f8d3 8000 	ldr.w	r8, [r3]
 801ebf0:	9b07      	ldr	r3, [sp, #28]
 801ebf2:	2b00      	cmp	r3, #0
 801ebf4:	dc03      	bgt.n	801ebfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ebf6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ebf8:	2b00      	cmp	r3, #0
 801ebfa:	f340 8181 	ble.w	801ef00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ebfe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ec00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ec04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ec08:	1e48      	subs	r0, r1, #1
 801ec0a:	f102 3cff 	add.w	ip, r2, #4294967295
 801ec0e:	2d00      	cmp	r5, #0
 801ec10:	f340 809b 	ble.w	801ed4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801ec14:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ec18:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ec1c:	d406      	bmi.n	801ec2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ec1e:	4586      	cmp	lr, r0
 801ec20:	da04      	bge.n	801ec2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ec22:	2b00      	cmp	r3, #0
 801ec24:	db02      	blt.n	801ec2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ec26:	4563      	cmp	r3, ip
 801ec28:	f2c0 8090 	blt.w	801ed4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ec2c:	f11e 0e01 	adds.w	lr, lr, #1
 801ec30:	f100 8084 	bmi.w	801ed3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ec34:	4571      	cmp	r1, lr
 801ec36:	f2c0 8081 	blt.w	801ed3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ec3a:	3301      	adds	r3, #1
 801ec3c:	d47e      	bmi.n	801ed3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ec3e:	429a      	cmp	r2, r3
 801ec40:	db7c      	blt.n	801ed3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ec42:	46aa      	mov	sl, r5
 801ec44:	46b9      	mov	r9, r7
 801ec46:	f1ba 0f00 	cmp.w	sl, #0
 801ec4a:	f340 8099 	ble.w	801ed80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801ec4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ec50:	1421      	asrs	r1, r4, #16
 801ec52:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ec56:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ec5a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ec5e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ec62:	f100 80d0 	bmi.w	801ee06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ec66:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ec6a:	4559      	cmp	r1, fp
 801ec6c:	f280 80cb 	bge.w	801ee06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ec70:	2800      	cmp	r0, #0
 801ec72:	f2c0 80c8 	blt.w	801ee06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ec76:	f103 3bff 	add.w	fp, r3, #4294967295
 801ec7a:	4558      	cmp	r0, fp
 801ec7c:	f280 80c3 	bge.w	801ee06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ec80:	fa0f fe8e 	sxth.w	lr, lr
 801ec84:	fb00 110e 	mla	r1, r0, lr, r1
 801ec88:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ec8c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801ec90:	8841      	ldrh	r1, [r0, #2]
 801ec92:	f1bc 0f00 	cmp.w	ip, #0
 801ec96:	d00b      	beq.n	801ecb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801ec98:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801ec9c:	3b01      	subs	r3, #1
 801ec9e:	005b      	lsls	r3, r3, #1
 801eca0:	3302      	adds	r3, #2
 801eca2:	eb00 0e03 	add.w	lr, r0, r3
 801eca6:	5ac3      	ldrh	r3, [r0, r3]
 801eca8:	9308      	str	r3, [sp, #32]
 801ecaa:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801ecae:	9309      	str	r3, [sp, #36]	@ 0x24
 801ecb0:	fb12 f30c 	smulbb	r3, r2, ip
 801ecb4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ecb8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ecbc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801ecc0:	ea40 000b 	orr.w	r0, r0, fp
 801ecc4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ecc8:	10db      	asrs	r3, r3, #3
 801ecca:	f1cc 0e10 	rsb	lr, ip, #16
 801ecce:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ecd2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ecd6:	ebae 0e02 	sub.w	lr, lr, r2
 801ecda:	ea4b 0101 	orr.w	r1, fp, r1
 801ecde:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ece2:	4351      	muls	r1, r2
 801ece4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ece8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ecea:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ecee:	0410      	lsls	r0, r2, #16
 801ecf0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ecf4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ecf8:	4310      	orrs	r0, r2
 801ecfa:	9a08      	ldr	r2, [sp, #32]
 801ecfc:	fb03 e000 	mla	r0, r3, r0, lr
 801ed00:	9908      	ldr	r1, [sp, #32]
 801ed02:	0412      	lsls	r2, r2, #16
 801ed04:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ed08:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ed0c:	ea42 020e 	orr.w	r2, r2, lr
 801ed10:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ed14:	fb03 0302 	mla	r3, r3, r2, r0
 801ed18:	0d5a      	lsrs	r2, r3, #21
 801ed1a:	095b      	lsrs	r3, r3, #5
 801ed1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ed20:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ed24:	4313      	orrs	r3, r2
 801ed26:	f8a9 3000 	strh.w	r3, [r9]
 801ed2a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ed2c:	f109 0902 	add.w	r9, r9, #2
 801ed30:	441c      	add	r4, r3
 801ed32:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ed34:	f10a 3aff 	add.w	sl, sl, #4294967295
 801ed38:	441e      	add	r6, r3
 801ed3a:	e784      	b.n	801ec46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ed3c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ed3e:	3d01      	subs	r5, #1
 801ed40:	441c      	add	r4, r3
 801ed42:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ed44:	3702      	adds	r7, #2
 801ed46:	441e      	add	r6, r3
 801ed48:	e761      	b.n	801ec0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed4a:	d01d      	beq.n	801ed88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ed4c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ed4e:	1e6b      	subs	r3, r5, #1
 801ed50:	fb00 4003 	mla	r0, r0, r3, r4
 801ed54:	1400      	asrs	r0, r0, #16
 801ed56:	f53f af74 	bmi.w	801ec42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ed5a:	3901      	subs	r1, #1
 801ed5c:	4288      	cmp	r0, r1
 801ed5e:	f6bf af70 	bge.w	801ec42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ed62:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ed64:	fb01 6303 	mla	r3, r1, r3, r6
 801ed68:	141b      	asrs	r3, r3, #16
 801ed6a:	f53f af6a 	bmi.w	801ec42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ed6e:	3a01      	subs	r2, #1
 801ed70:	4293      	cmp	r3, r2
 801ed72:	f6bf af66 	bge.w	801ec42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ed76:	46a9      	mov	r9, r5
 801ed78:	46ba      	mov	sl, r7
 801ed7a:	f1b9 0f00 	cmp.w	r9, #0
 801ed7e:	dc5a      	bgt.n	801ee36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ed80:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ed84:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ed88:	9b07      	ldr	r3, [sp, #28]
 801ed8a:	2b00      	cmp	r3, #0
 801ed8c:	f340 80b8 	ble.w	801ef00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ed90:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ed94:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eda0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eda4:	eef0 6a62 	vmov.f32	s13, s5
 801eda8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edbc:	ee16 4a90 	vmov	r4, s13
 801edc0:	eef0 6a43 	vmov.f32	s13, s6
 801edc4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edc8:	ee12 2a90 	vmov	r2, s5
 801edcc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edd0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801edd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801edda:	ee13 2a10 	vmov	r2, s6
 801edde:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ede0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ede2:	ee16 6a90 	vmov	r6, s13
 801ede6:	fb92 f3f3 	sdiv	r3, r2, r3
 801edea:	931c      	str	r3, [sp, #112]	@ 0x70
 801edec:	9b07      	ldr	r3, [sp, #28]
 801edee:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801edf0:	3b01      	subs	r3, #1
 801edf2:	9307      	str	r3, [sp, #28]
 801edf4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801edf6:	bf0c      	ite	eq
 801edf8:	4615      	moveq	r5, r2
 801edfa:	461d      	movne	r5, r3
 801edfc:	eeb0 3a67 	vmov.f32	s6, s15
 801ee00:	eef0 2a47 	vmov.f32	s5, s14
 801ee04:	e6f4      	b.n	801ebf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ee06:	f111 0b01 	adds.w	fp, r1, #1
 801ee0a:	d48e      	bmi.n	801ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ee0c:	45de      	cmp	lr, fp
 801ee0e:	db8c      	blt.n	801ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ee10:	f110 0b01 	adds.w	fp, r0, #1
 801ee14:	d489      	bmi.n	801ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ee16:	455b      	cmp	r3, fp
 801ee18:	db87      	blt.n	801ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ee1a:	b21b      	sxth	r3, r3
 801ee1c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ee20:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ee24:	9300      	str	r3, [sp, #0]
 801ee26:	4642      	mov	r2, r8
 801ee28:	fa0f f38e 	sxth.w	r3, lr
 801ee2c:	4649      	mov	r1, r9
 801ee2e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ee30:	f7ff fe4d 	bl	801eace <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ee34:	e779      	b.n	801ed2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ee36:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ee38:	1420      	asrs	r0, r4, #16
 801ee3a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ee3e:	1431      	asrs	r1, r6, #16
 801ee40:	fb03 0101 	mla	r1, r3, r1, r0
 801ee44:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ee48:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ee4c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ee50:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee54:	8841      	ldrh	r1, [r0, #2]
 801ee56:	f1be 0f00 	cmp.w	lr, #0
 801ee5a:	d00b      	beq.n	801ee74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ee5c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801ee60:	3b01      	subs	r3, #1
 801ee62:	005b      	lsls	r3, r3, #1
 801ee64:	3302      	adds	r3, #2
 801ee66:	eb00 0b03 	add.w	fp, r0, r3
 801ee6a:	5ac3      	ldrh	r3, [r0, r3]
 801ee6c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ee6e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ee72:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ee74:	fb12 f30e 	smulbb	r3, r2, lr
 801ee78:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801ee7c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ee80:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ee84:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ee88:	10db      	asrs	r3, r3, #3
 801ee8a:	ea40 000c 	orr.w	r0, r0, ip
 801ee8e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ee92:	f1ce 0c10 	rsb	ip, lr, #16
 801ee96:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ee9a:	ebac 0c02 	sub.w	ip, ip, r2
 801ee9e:	ea4b 0101 	orr.w	r1, fp, r1
 801eea2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801eea6:	4351      	muls	r1, r2
 801eea8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801eeac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801eeae:	fb0c 1c00 	mla	ip, ip, r0, r1
 801eeb2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801eeb6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801eeba:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801eebe:	ea4b 0000 	orr.w	r0, fp, r0
 801eec2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801eec4:	fb03 c000 	mla	r0, r3, r0, ip
 801eec8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801eeca:	0412      	lsls	r2, r2, #16
 801eecc:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801eed0:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801eed4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801eed8:	ea42 0b0b 	orr.w	fp, r2, fp
 801eedc:	fb03 000b 	mla	r0, r3, fp, r0
 801eee0:	0d43      	lsrs	r3, r0, #21
 801eee2:	0940      	lsrs	r0, r0, #5
 801eee4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eee8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eeec:	4318      	orrs	r0, r3
 801eeee:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801eef0:	f82a 0b02 	strh.w	r0, [sl], #2
 801eef4:	441c      	add	r4, r3
 801eef6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eef8:	f109 39ff 	add.w	r9, r9, #4294967295
 801eefc:	441e      	add	r6, r3
 801eefe:	e73c      	b.n	801ed7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801ef00:	b00f      	add	sp, #60	@ 0x3c
 801ef02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ef06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801ef06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef0a:	b085      	sub	sp, #20
 801ef0c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ef10:	9102      	str	r1, [sp, #8]
 801ef12:	fb04 7103 	mla	r1, r4, r3, r7
 801ef16:	2c00      	cmp	r4, #0
 801ef18:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ef1c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ef20:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ef24:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ef28:	f2c0 811b 	blt.w	801f162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ef2c:	45a6      	cmp	lr, r4
 801ef2e:	f340 8118 	ble.w	801f162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801ef32:	2f00      	cmp	r7, #0
 801ef34:	f2c0 8113 	blt.w	801f15e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ef38:	42bb      	cmp	r3, r7
 801ef3a:	f340 8110 	ble.w	801f15e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801ef3e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ef42:	1c7a      	adds	r2, r7, #1
 801ef44:	f100 8110 	bmi.w	801f168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ef48:	4293      	cmp	r3, r2
 801ef4a:	f340 810d 	ble.w	801f168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801ef4e:	2e00      	cmp	r6, #0
 801ef50:	f000 810c 	beq.w	801f16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801ef54:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ef58:	3401      	adds	r4, #1
 801ef5a:	f100 810b 	bmi.w	801f174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ef5e:	45a6      	cmp	lr, r4
 801ef60:	f340 8108 	ble.w	801f174 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801ef64:	2800      	cmp	r0, #0
 801ef66:	f000 8108 	beq.w	801f17a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801ef6a:	2f00      	cmp	r7, #0
 801ef6c:	f2c0 8100 	blt.w	801f170 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ef70:	42bb      	cmp	r3, r7
 801ef72:	f340 80fd 	ble.w	801f170 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801ef76:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ef7a:	3701      	adds	r7, #1
 801ef7c:	f100 8100 	bmi.w	801f180 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ef80:	42bb      	cmp	r3, r7
 801ef82:	f340 80fd 	ble.w	801f180 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ef86:	2e00      	cmp	r6, #0
 801ef88:	f000 80fc 	beq.w	801f184 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ef8c:	3301      	adds	r3, #1
 801ef8e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ef92:	b2b6      	uxth	r6, r6
 801ef94:	b280      	uxth	r0, r0
 801ef96:	fb00 fe06 	mul.w	lr, r0, r6
 801ef9a:	0136      	lsls	r6, r6, #4
 801ef9c:	eba6 070e 	sub.w	r7, r6, lr
 801efa0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801efa4:	b2bf      	uxth	r7, r7
 801efa6:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801efaa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801efae:	fb0a f607 	mul.w	r6, sl, r7
 801efb2:	b280      	uxth	r0, r0
 801efb4:	1a1b      	subs	r3, r3, r0
 801efb6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801efba:	b29b      	uxth	r3, r3
 801efbc:	fb0b 6603 	mla	r6, fp, r3, r6
 801efc0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801efc4:	fb00 6609 	mla	r6, r0, r9, r6
 801efc8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801efcc:	fb0e 6608 	mla	r6, lr, r8, r6
 801efd0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801efd4:	9600      	str	r6, [sp, #0]
 801efd6:	2e00      	cmp	r6, #0
 801efd8:	f000 80be 	beq.w	801f158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801efdc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801efe0:	fb0b fc0c 	mul.w	ip, fp, ip
 801efe4:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801efe8:	fb0b f505 	mul.w	r5, fp, r5
 801efec:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eff0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801eff4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eff8:	44dc      	add	ip, fp
 801effa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801effe:	9501      	str	r5, [sp, #4]
 801f000:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f004:	9503      	str	r5, [sp, #12]
 801f006:	9d01      	ldr	r5, [sp, #4]
 801f008:	9e02      	ldr	r6, [sp, #8]
 801f00a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f00e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f012:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f016:	fb0a fc0c 	mul.w	ip, sl, ip
 801f01a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f01e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f022:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f026:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f02a:	4465      	add	r5, ip
 801f02c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f030:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f034:	fb09 fc0c 	mul.w	ip, r9, ip
 801f038:	fb09 f904 	mul.w	r9, r9, r4
 801f03c:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f040:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f044:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f048:	fb08 f404 	mul.w	r4, r8, r4
 801f04c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f050:	fb08 f802 	mul.w	r8, r8, r2
 801f054:	0a2d      	lsrs	r5, r5, #8
 801f056:	0a22      	lsrs	r2, r4, #8
 801f058:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f05c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f060:	437d      	muls	r5, r7
 801f062:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f066:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f06a:	4414      	add	r4, r2
 801f06c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f070:	fb0a fa01 	mul.w	sl, sl, r1
 801f074:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f078:	9a03      	ldr	r2, [sp, #12]
 801f07a:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f07e:	fb02 5503 	mla	r5, r2, r3, r5
 801f082:	0a24      	lsrs	r4, r4, #8
 801f084:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f088:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f08c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f090:	fb04 540e 	mla	r4, r4, lr, r5
 801f094:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f098:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f09c:	4461      	add	r1, ip
 801f09e:	0a09      	lsrs	r1, r1, #8
 801f0a0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f0a4:	fb01 4100 	mla	r1, r1, r0, r4
 801f0a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f0b0:	fb07 f70a 	mul.w	r7, r7, sl
 801f0b4:	0a09      	lsrs	r1, r1, #8
 801f0b6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f0ba:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f0be:	fb03 7101 	mla	r1, r3, r1, r7
 801f0c2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f0c6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f0ca:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f0ce:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f0d2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f0d6:	fb00 e101 	mla	r1, r0, r1, lr
 801f0da:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f0de:	9a00      	ldr	r2, [sp, #0]
 801f0e0:	b287      	uxth	r7, r0
 801f0e2:	437a      	muls	r2, r7
 801f0e4:	1c53      	adds	r3, r2, #1
 801f0e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f0ea:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f0ee:	0a09      	lsrs	r1, r1, #8
 801f0f0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f0f4:	4321      	orrs	r1, r4
 801f0f6:	0c0a      	lsrs	r2, r1, #16
 801f0f8:	8836      	ldrh	r6, [r6, #0]
 801f0fa:	fb12 f207 	smulbb	r2, r2, r7
 801f0fe:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f102:	b2c8      	uxtb	r0, r1
 801f104:	1235      	asrs	r5, r6, #8
 801f106:	fb14 f407 	smulbb	r4, r4, r7
 801f10a:	fb10 f007 	smulbb	r0, r0, r7
 801f10e:	b2db      	uxtb	r3, r3
 801f110:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f114:	fb05 2503 	mla	r5, r5, r3, r2
 801f118:	10f2      	asrs	r2, r6, #3
 801f11a:	00f6      	lsls	r6, r6, #3
 801f11c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f120:	b2f6      	uxtb	r6, r6
 801f122:	fb02 4203 	mla	r2, r2, r3, r4
 801f126:	fb06 0303 	mla	r3, r6, r3, r0
 801f12a:	b2ad      	uxth	r5, r5
 801f12c:	b299      	uxth	r1, r3
 801f12e:	b294      	uxth	r4, r2
 801f130:	1c6b      	adds	r3, r5, #1
 801f132:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f136:	1c62      	adds	r2, r4, #1
 801f138:	1c4b      	adds	r3, r1, #1
 801f13a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f13e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f142:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f146:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f14a:	0952      	lsrs	r2, r2, #5
 801f14c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f150:	432b      	orrs	r3, r5
 801f152:	4313      	orrs	r3, r2
 801f154:	9a02      	ldr	r2, [sp, #8]
 801f156:	8013      	strh	r3, [r2, #0]
 801f158:	b005      	add	sp, #20
 801f15a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f15e:	2500      	movs	r5, #0
 801f160:	e6ef      	b.n	801ef42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f162:	2100      	movs	r1, #0
 801f164:	460d      	mov	r5, r1
 801f166:	e6f7      	b.n	801ef58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f168:	2100      	movs	r1, #0
 801f16a:	e6f5      	b.n	801ef58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f16c:	4631      	mov	r1, r6
 801f16e:	e6f3      	b.n	801ef58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f170:	2400      	movs	r4, #0
 801f172:	e702      	b.n	801ef7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f174:	2200      	movs	r2, #0
 801f176:	4614      	mov	r4, r2
 801f178:	e70b      	b.n	801ef92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f17a:	4602      	mov	r2, r0
 801f17c:	4604      	mov	r4, r0
 801f17e:	e708      	b.n	801ef92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f180:	2200      	movs	r2, #0
 801f182:	e706      	b.n	801ef92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f184:	4632      	mov	r2, r6
 801f186:	e704      	b.n	801ef92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f188 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f18c:	b09d      	sub	sp, #116	@ 0x74
 801f18e:	9219      	str	r2, [sp, #100]	@ 0x64
 801f190:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801f192:	901b      	str	r0, [sp, #108]	@ 0x6c
 801f194:	9307      	str	r3, [sp, #28]
 801f196:	6850      	ldr	r0, [r2, #4]
 801f198:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801f19c:	9117      	str	r1, [sp, #92]	@ 0x5c
 801f19e:	931a      	str	r3, [sp, #104]	@ 0x68
 801f1a0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801f1a4:	fb00 1303 	mla	r3, r0, r3, r1
 801f1a8:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801f1ac:	6812      	ldr	r2, [r2, #0]
 801f1ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f1b2:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1b4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f1b6:	681b      	ldr	r3, [r3, #0]
 801f1b8:	9310      	str	r3, [sp, #64]	@ 0x40
 801f1ba:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801f1be:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f1c0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f1c2:	2b00      	cmp	r3, #0
 801f1c4:	dc03      	bgt.n	801f1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f1c6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801f1c8:	2b00      	cmp	r3, #0
 801f1ca:	f340 8375 	ble.w	801f8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f1ce:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f1d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f1d4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f1d8:	1e48      	subs	r0, r1, #1
 801f1da:	1e57      	subs	r7, r2, #1
 801f1dc:	9b07      	ldr	r3, [sp, #28]
 801f1de:	2b00      	cmp	r3, #0
 801f1e0:	f340 818e 	ble.w	801f500 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f1e4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f1e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f1ec:	d406      	bmi.n	801f1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f1ee:	4584      	cmp	ip, r0
 801f1f0:	da04      	bge.n	801f1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f1f2:	2b00      	cmp	r3, #0
 801f1f4:	db02      	blt.n	801f1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f1f6:	42bb      	cmp	r3, r7
 801f1f8:	f2c0 8183 	blt.w	801f502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f1fc:	f11c 0c01 	adds.w	ip, ip, #1
 801f200:	f100 8173 	bmi.w	801f4ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f204:	4561      	cmp	r1, ip
 801f206:	f2c0 8170 	blt.w	801f4ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f20a:	3301      	adds	r3, #1
 801f20c:	f100 816d 	bmi.w	801f4ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f210:	429a      	cmp	r2, r3
 801f212:	f2c0 816a 	blt.w	801f4ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f216:	9b07      	ldr	r3, [sp, #28]
 801f218:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f21a:	9318      	str	r3, [sp, #96]	@ 0x60
 801f21c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f21e:	2b00      	cmp	r3, #0
 801f220:	f340 818c 	ble.w	801f53c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f224:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801f226:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f228:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f22c:	1422      	asrs	r2, r4, #16
 801f22e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f232:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f236:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f23a:	689b      	ldr	r3, [r3, #8]
 801f23c:	f100 81cd 	bmi.w	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f240:	f103 38ff 	add.w	r8, r3, #4294967295
 801f244:	4542      	cmp	r2, r8
 801f246:	f280 81c8 	bge.w	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f24a:	f1bc 0f00 	cmp.w	ip, #0
 801f24e:	f2c0 81c4 	blt.w	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f252:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f256:	45c4      	cmp	ip, r8
 801f258:	f280 81bf 	bge.w	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f25c:	b21b      	sxth	r3, r3
 801f25e:	fb0c 2203 	mla	r2, ip, r3, r2
 801f262:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f264:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f268:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f26c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f270:	2800      	cmp	r0, #0
 801f272:	f000 81a9 	beq.w	801f5c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f276:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f27a:	950c      	str	r5, [sp, #48]	@ 0x30
 801f27c:	0e2d      	lsrs	r5, r5, #24
 801f27e:	9513      	str	r5, [sp, #76]	@ 0x4c
 801f280:	b181      	cbz	r1, 801f2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f282:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f286:	3b01      	subs	r3, #1
 801f288:	009b      	lsls	r3, r3, #2
 801f28a:	3304      	adds	r3, #4
 801f28c:	eb08 0c03 	add.w	ip, r8, r3
 801f290:	f858 3003 	ldr.w	r3, [r8, r3]
 801f294:	9308      	str	r3, [sp, #32]
 801f296:	0e1b      	lsrs	r3, r3, #24
 801f298:	9311      	str	r3, [sp, #68]	@ 0x44
 801f29a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f29e:	930d      	str	r3, [sp, #52]	@ 0x34
 801f2a0:	0e1b      	lsrs	r3, r3, #24
 801f2a2:	9314      	str	r3, [sp, #80]	@ 0x50
 801f2a4:	b280      	uxth	r0, r0
 801f2a6:	b289      	uxth	r1, r1
 801f2a8:	fb00 f901 	mul.w	r9, r0, r1
 801f2ac:	0100      	lsls	r0, r0, #4
 801f2ae:	eba0 0809 	sub.w	r8, r0, r9
 801f2b2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f2b6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f2b8:	fa1f f888 	uxth.w	r8, r8
 801f2bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f2c0:	fb08 f000 	mul.w	r0, r8, r0
 801f2c4:	b289      	uxth	r1, r1
 801f2c6:	1a5b      	subs	r3, r3, r1
 801f2c8:	b29b      	uxth	r3, r3
 801f2ca:	fb03 000e 	mla	r0, r3, lr, r0
 801f2ce:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f2d0:	fb01 0005 	mla	r0, r1, r5, r0
 801f2d4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f2d6:	fb09 0005 	mla	r0, r9, r5, r0
 801f2da:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f2de:	2800      	cmp	r0, #0
 801f2e0:	f000 80fa 	beq.w	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f2e4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801f2e8:	d01b      	beq.n	801f322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801f2ea:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801f2ee:	fb0e fa0a 	mul.w	sl, lr, sl
 801f2f2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f2f6:	fb0e fe02 	mul.w	lr, lr, r2
 801f2fa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f2fe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f302:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f306:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801f30a:	4452      	add	r2, sl
 801f30c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f310:	0a12      	lsrs	r2, r2, #8
 801f312:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f316:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f31a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f31e:	ea42 020c 	orr.w	r2, r2, ip
 801f322:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f324:	2dff      	cmp	r5, #255	@ 0xff
 801f326:	d021      	beq.n	801f36c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801f328:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f32a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f32e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f330:	fb05 fb0b 	mul.w	fp, r5, fp
 801f334:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f336:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f33a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f33e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801f340:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f344:	fb05 fa0a 	mul.w	sl, r5, sl
 801f348:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f34c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f350:	44de      	add	lr, fp
 801f352:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f356:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f35a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f35e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f362:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f366:	ea4e 050a 	orr.w	r5, lr, sl
 801f36a:	950c      	str	r5, [sp, #48]	@ 0x30
 801f36c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f36e:	2dff      	cmp	r5, #255	@ 0xff
 801f370:	d021      	beq.n	801f3b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801f372:	9d08      	ldr	r5, [sp, #32]
 801f374:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f378:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f37a:	fb05 fb0b 	mul.w	fp, r5, fp
 801f37e:	9d08      	ldr	r5, [sp, #32]
 801f380:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f384:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f388:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f38a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f38e:	fb05 fa0a 	mul.w	sl, r5, sl
 801f392:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f396:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f39a:	44de      	add	lr, fp
 801f39c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f3a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f3a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3a8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f3ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f3b0:	ea4e 050a 	orr.w	r5, lr, sl
 801f3b4:	9508      	str	r5, [sp, #32]
 801f3b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f3b8:	2dff      	cmp	r5, #255	@ 0xff
 801f3ba:	d021      	beq.n	801f400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801f3bc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f3be:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801f3c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f3c4:	fb05 fb0b 	mul.w	fp, r5, fp
 801f3c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f3ca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f3ce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f3d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f3d4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f3d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801f3dc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801f3e0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801f3e4:	44de      	add	lr, fp
 801f3e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f3ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f3ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801f3f6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f3fa:	ea4e 050a 	orr.w	r5, lr, sl
 801f3fe:	950d      	str	r5, [sp, #52]	@ 0x34
 801f400:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f402:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801f406:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f40a:	fb08 fc0c 	mul.w	ip, r8, ip
 801f40e:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f412:	9d08      	ldr	r5, [sp, #32]
 801f414:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f418:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f41c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f420:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f422:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801f426:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801f428:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f42c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801f430:	fb08 f80e 	mul.w	r8, r8, lr
 801f434:	fb03 8202 	mla	r2, r3, r2, r8
 801f438:	9b08      	ldr	r3, [sp, #32]
 801f43a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f43e:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801f442:	fb01 220a 	mla	r2, r1, sl, r2
 801f446:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f448:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f44c:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801f450:	fb09 2901 	mla	r9, r9, r1, r2
 801f454:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f456:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f45a:	4342      	muls	r2, r0
 801f45c:	1c50      	adds	r0, r2, #1
 801f45e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f462:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f466:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801f46a:	ea4c 0c09 	orr.w	ip, ip, r9
 801f46e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f470:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f474:	883b      	ldrh	r3, [r7, #0]
 801f476:	fb12 f205 	smulbb	r2, r2, r5
 801f47a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f47e:	fa5f fc8c 	uxtb.w	ip, ip
 801f482:	1219      	asrs	r1, r3, #8
 801f484:	fb1c fc05 	smulbb	ip, ip, r5
 801f488:	b2c0      	uxtb	r0, r0
 801f48a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f48e:	fb01 2100 	mla	r1, r1, r0, r2
 801f492:	10da      	asrs	r2, r3, #3
 801f494:	00db      	lsls	r3, r3, #3
 801f496:	fb1e fe05 	smulbb	lr, lr, r5
 801f49a:	b2db      	uxtb	r3, r3
 801f49c:	fb03 c300 	mla	r3, r3, r0, ip
 801f4a0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f4a4:	b289      	uxth	r1, r1
 801f4a6:	fb02 e200 	mla	r2, r2, r0, lr
 801f4aa:	fa1f fc83 	uxth.w	ip, r3
 801f4ae:	1c4b      	adds	r3, r1, #1
 801f4b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f4b4:	f10c 0301 	add.w	r3, ip, #1
 801f4b8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f4bc:	b292      	uxth	r2, r2
 801f4be:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f4c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f4c6:	430b      	orrs	r3, r1
 801f4c8:	1c51      	adds	r1, r2, #1
 801f4ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f4ce:	0952      	lsrs	r2, r2, #5
 801f4d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f4d4:	4313      	orrs	r3, r2
 801f4d6:	803b      	strh	r3, [r7, #0]
 801f4d8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f4da:	3702      	adds	r7, #2
 801f4dc:	441c      	add	r4, r3
 801f4de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f4e0:	441e      	add	r6, r3
 801f4e2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f4e4:	3b01      	subs	r3, #1
 801f4e6:	9318      	str	r3, [sp, #96]	@ 0x60
 801f4e8:	e698      	b.n	801f21c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f4ea:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f4ec:	441c      	add	r4, r3
 801f4ee:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f4f0:	441e      	add	r6, r3
 801f4f2:	9b07      	ldr	r3, [sp, #28]
 801f4f4:	3b01      	subs	r3, #1
 801f4f6:	9307      	str	r3, [sp, #28]
 801f4f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f4fa:	3302      	adds	r3, #2
 801f4fc:	930a      	str	r3, [sp, #40]	@ 0x28
 801f4fe:	e66d      	b.n	801f1dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f500:	d023      	beq.n	801f54a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f502:	9b07      	ldr	r3, [sp, #28]
 801f504:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801f506:	3b01      	subs	r3, #1
 801f508:	fb00 4003 	mla	r0, r0, r3, r4
 801f50c:	1400      	asrs	r0, r0, #16
 801f50e:	f53f ae82 	bmi.w	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f512:	3901      	subs	r1, #1
 801f514:	4288      	cmp	r0, r1
 801f516:	f6bf ae7e 	bge.w	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f51a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801f51c:	fb01 6303 	mla	r3, r1, r3, r6
 801f520:	141b      	asrs	r3, r3, #16
 801f522:	f53f ae78 	bmi.w	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f526:	3a01      	subs	r2, #1
 801f528:	4293      	cmp	r3, r2
 801f52a:	f6bf ae74 	bge.w	801f216 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f52e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f532:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801f536:	f1bb 0f00 	cmp.w	fp, #0
 801f53a:	dc6c      	bgt.n	801f616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f53c:	9b07      	ldr	r3, [sp, #28]
 801f53e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f542:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f544:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f548:	930a      	str	r3, [sp, #40]	@ 0x28
 801f54a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f54c:	2b00      	cmp	r3, #0
 801f54e:	f340 81b3 	ble.w	801f8b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f552:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f556:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f55a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f55e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f562:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f566:	eef0 6a62 	vmov.f32	s13, s5
 801f56a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f56e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f572:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f576:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f57a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f57e:	ee16 4a90 	vmov	r4, s13
 801f582:	eef0 6a43 	vmov.f32	s13, s6
 801f586:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f58a:	ee12 2a90 	vmov	r2, s5
 801f58e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f592:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f594:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f598:	fb92 f3f3 	sdiv	r3, r2, r3
 801f59c:	ee13 2a10 	vmov	r2, s6
 801f5a0:	9329      	str	r3, [sp, #164]	@ 0xa4
 801f5a2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f5a4:	ee16 6a90 	vmov	r6, s13
 801f5a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ac:	932a      	str	r3, [sp, #168]	@ 0xa8
 801f5ae:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f5b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801f5b2:	3b01      	subs	r3, #1
 801f5b4:	9317      	str	r3, [sp, #92]	@ 0x5c
 801f5b6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f5b8:	bf08      	it	eq
 801f5ba:	4613      	moveq	r3, r2
 801f5bc:	eeb0 3a67 	vmov.f32	s6, s15
 801f5c0:	9307      	str	r3, [sp, #28]
 801f5c2:	eef0 2a47 	vmov.f32	s5, s14
 801f5c6:	e5fb      	b.n	801f1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f5c8:	2900      	cmp	r1, #0
 801f5ca:	f43f ae6b 	beq.w	801f2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f5ce:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f5d2:	9308      	str	r3, [sp, #32]
 801f5d4:	0e1b      	lsrs	r3, r3, #24
 801f5d6:	9311      	str	r3, [sp, #68]	@ 0x44
 801f5d8:	e664      	b.n	801f2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f5da:	f112 0801 	adds.w	r8, r2, #1
 801f5de:	f53f af7b 	bmi.w	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f5e2:	4543      	cmp	r3, r8
 801f5e4:	f6ff af78 	blt.w	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f5e8:	f11c 0801 	adds.w	r8, ip, #1
 801f5ec:	f53f af74 	bmi.w	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f5f0:	45c6      	cmp	lr, r8
 801f5f2:	f6ff af71 	blt.w	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f5f6:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801f5f8:	9201      	str	r2, [sp, #4]
 801f5fa:	fa0f f28e 	sxth.w	r2, lr
 801f5fe:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f602:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f606:	9200      	str	r2, [sp, #0]
 801f608:	b21b      	sxth	r3, r3
 801f60a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f60c:	4639      	mov	r1, r7
 801f60e:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f610:	f7ff fc79 	bl	801ef06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f614:	e760      	b.n	801f4d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f616:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f618:	1427      	asrs	r7, r4, #16
 801f61a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f61e:	1433      	asrs	r3, r6, #16
 801f620:	fb01 7303 	mla	r3, r1, r3, r7
 801f624:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f626:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f62a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f62e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f632:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f636:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f63a:	2a00      	cmp	r2, #0
 801f63c:	f000 8133 	beq.w	801f8a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f640:	687d      	ldr	r5, [r7, #4]
 801f642:	950e      	str	r5, [sp, #56]	@ 0x38
 801f644:	0e2d      	lsrs	r5, r5, #24
 801f646:	9515      	str	r5, [sp, #84]	@ 0x54
 801f648:	b178      	cbz	r0, 801f66a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f64a:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801f64e:	3901      	subs	r1, #1
 801f650:	0089      	lsls	r1, r1, #2
 801f652:	3104      	adds	r1, #4
 801f654:	eb07 0e01 	add.w	lr, r7, r1
 801f658:	5879      	ldr	r1, [r7, r1]
 801f65a:	9109      	str	r1, [sp, #36]	@ 0x24
 801f65c:	0e09      	lsrs	r1, r1, #24
 801f65e:	9112      	str	r1, [sp, #72]	@ 0x48
 801f660:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f664:	910f      	str	r1, [sp, #60]	@ 0x3c
 801f666:	0e09      	lsrs	r1, r1, #24
 801f668:	9116      	str	r1, [sp, #88]	@ 0x58
 801f66a:	b292      	uxth	r2, r2
 801f66c:	b280      	uxth	r0, r0
 801f66e:	fb02 f800 	mul.w	r8, r2, r0
 801f672:	0112      	lsls	r2, r2, #4
 801f674:	eba2 0e08 	sub.w	lr, r2, r8
 801f678:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801f67a:	fa1f fe8e 	uxth.w	lr, lr
 801f67e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f682:	fb0e f101 	mul.w	r1, lr, r1
 801f686:	b280      	uxth	r0, r0
 801f688:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801f68c:	1a12      	subs	r2, r2, r0
 801f68e:	b292      	uxth	r2, r2
 801f690:	fb02 110c 	mla	r1, r2, ip, r1
 801f694:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f696:	fb00 1105 	mla	r1, r0, r5, r1
 801f69a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f69c:	fb08 1105 	mla	r1, r8, r5, r1
 801f6a0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f6a4:	2900      	cmp	r1, #0
 801f6a6:	f000 80f5 	beq.w	801f894 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801f6aa:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f6ae:	d019      	beq.n	801f6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801f6b0:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f6b4:	fb0c fa0a 	mul.w	sl, ip, sl
 801f6b8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f6bc:	fb0c fc03 	mul.w	ip, ip, r3
 801f6c0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f6c4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f6c8:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f6cc:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f6d0:	4453      	add	r3, sl
 801f6d2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f6d6:	0a1b      	lsrs	r3, r3, #8
 801f6d8:	0a3f      	lsrs	r7, r7, #8
 801f6da:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f6de:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f6e2:	433b      	orrs	r3, r7
 801f6e4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6e6:	2dff      	cmp	r5, #255	@ 0xff
 801f6e8:	d020      	beq.n	801f72c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f6ea:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6ec:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f6f0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f6f2:	436f      	muls	r7, r5
 801f6f4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f6f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f6fa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f6fe:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f700:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f704:	fb05 fa0a 	mul.w	sl, r5, sl
 801f708:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f70c:	44bc      	add	ip, r7
 801f70e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f712:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f716:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f71a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f71e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f722:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f726:	ea4c 050a 	orr.w	r5, ip, sl
 801f72a:	950e      	str	r5, [sp, #56]	@ 0x38
 801f72c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f72e:	2dff      	cmp	r5, #255	@ 0xff
 801f730:	d020      	beq.n	801f774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f732:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f734:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f738:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f73a:	436f      	muls	r7, r5
 801f73c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f73e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f742:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f746:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801f748:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f74c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f750:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f754:	44bc      	add	ip, r7
 801f756:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f75a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f75e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f762:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f766:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f76a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f76e:	ea4c 050a 	orr.w	r5, ip, sl
 801f772:	9509      	str	r5, [sp, #36]	@ 0x24
 801f774:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f776:	2dff      	cmp	r5, #255	@ 0xff
 801f778:	d020      	beq.n	801f7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f77a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f77c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f780:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f782:	436f      	muls	r7, r5
 801f784:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f786:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f78a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f78e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801f790:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f794:	fb05 fa0a 	mul.w	sl, r5, sl
 801f798:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f79c:	44bc      	add	ip, r7
 801f79e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f7a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f7a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f7aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f7ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f7b2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f7b6:	ea4c 050a 	orr.w	r5, ip, sl
 801f7ba:	950f      	str	r5, [sp, #60]	@ 0x3c
 801f7bc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f7be:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f7c2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f7c6:	fb0e f707 	mul.w	r7, lr, r7
 801f7ca:	fb02 770c 	mla	r7, r2, ip, r7
 801f7ce:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f7d0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f7d4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f7d8:	fb00 770c 	mla	r7, r0, ip, r7
 801f7dc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f7de:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f7e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f7e4:	fb08 770c 	mla	r7, r8, ip, r7
 801f7e8:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f7ec:	fb0e fe0c 	mul.w	lr, lr, ip
 801f7f0:	fb02 e303 	mla	r3, r2, r3, lr
 801f7f4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f7f6:	0a3f      	lsrs	r7, r7, #8
 801f7f8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801f7fc:	fb00 330a 	mla	r3, r0, sl, r3
 801f800:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f802:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f806:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801f80a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f80e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f814:	4359      	muls	r1, r3
 801f816:	1c4b      	adds	r3, r1, #1
 801f818:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f81c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f820:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f824:	ea47 070c 	orr.w	r7, r7, ip
 801f828:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801f82a:	0c3b      	lsrs	r3, r7, #16
 801f82c:	f8b9 0000 	ldrh.w	r0, [r9]
 801f830:	fb13 f305 	smulbb	r3, r3, r5
 801f834:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f838:	b2ff      	uxtb	r7, r7
 801f83a:	1202      	asrs	r2, r0, #8
 801f83c:	fb17 f705 	smulbb	r7, r7, r5
 801f840:	b2c9      	uxtb	r1, r1
 801f842:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801f846:	fb02 3201 	mla	r2, r2, r1, r3
 801f84a:	10c3      	asrs	r3, r0, #3
 801f84c:	00c0      	lsls	r0, r0, #3
 801f84e:	fb1c fc05 	smulbb	ip, ip, r5
 801f852:	b2c0      	uxtb	r0, r0
 801f854:	fb00 7001 	mla	r0, r0, r1, r7
 801f858:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f85c:	fb03 c301 	mla	r3, r3, r1, ip
 801f860:	b292      	uxth	r2, r2
 801f862:	b280      	uxth	r0, r0
 801f864:	1c51      	adds	r1, r2, #1
 801f866:	f100 0c01 	add.w	ip, r0, #1
 801f86a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f86e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f872:	b29b      	uxth	r3, r3
 801f874:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f878:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801f87c:	ea4c 0202 	orr.w	r2, ip, r2
 801f880:	f103 0c01 	add.w	ip, r3, #1
 801f884:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f888:	095b      	lsrs	r3, r3, #5
 801f88a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f88e:	431a      	orrs	r2, r3
 801f890:	f8a9 2000 	strh.w	r2, [r9]
 801f894:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801f896:	f109 0902 	add.w	r9, r9, #2
 801f89a:	441c      	add	r4, r3
 801f89c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f89e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f8a2:	441e      	add	r6, r3
 801f8a4:	e647      	b.n	801f536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f8a6:	2800      	cmp	r0, #0
 801f8a8:	f43f aedf 	beq.w	801f66a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f8ac:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f8b0:	9109      	str	r1, [sp, #36]	@ 0x24
 801f8b2:	0e09      	lsrs	r1, r1, #24
 801f8b4:	9112      	str	r1, [sp, #72]	@ 0x48
 801f8b6:	e6d8      	b.n	801f66a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f8b8:	b01d      	add	sp, #116	@ 0x74
 801f8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f8be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8c2:	b085      	sub	sp, #20
 801f8c4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f8c8:	9102      	str	r1, [sp, #8]
 801f8ca:	fb04 7103 	mla	r1, r4, r3, r7
 801f8ce:	2c00      	cmp	r4, #0
 801f8d0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f8d4:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f8d8:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f8dc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f8e0:	f2c0 810c 	blt.w	801fafc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f8e4:	45a6      	cmp	lr, r4
 801f8e6:	f340 8109 	ble.w	801fafc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f8ea:	2f00      	cmp	r7, #0
 801f8ec:	f2c0 8104 	blt.w	801faf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f8f0:	42bb      	cmp	r3, r7
 801f8f2:	f340 8101 	ble.w	801faf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f8f6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f8fa:	1c7a      	adds	r2, r7, #1
 801f8fc:	f100 8101 	bmi.w	801fb02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f900:	4293      	cmp	r3, r2
 801f902:	f340 80fe 	ble.w	801fb02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f906:	2e00      	cmp	r6, #0
 801f908:	f000 80fd 	beq.w	801fb06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f90c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f910:	3401      	adds	r4, #1
 801f912:	f100 80fc 	bmi.w	801fb0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f916:	45a6      	cmp	lr, r4
 801f918:	f340 80f9 	ble.w	801fb0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f91c:	2800      	cmp	r0, #0
 801f91e:	f000 80f9 	beq.w	801fb14 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f922:	2f00      	cmp	r7, #0
 801f924:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f928:	f2c0 80ef 	blt.w	801fb0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f92c:	42bb      	cmp	r3, r7
 801f92e:	f340 80ec 	ble.w	801fb0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f932:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f936:	3701      	adds	r7, #1
 801f938:	f100 80ef 	bmi.w	801fb1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f93c:	42bb      	cmp	r3, r7
 801f93e:	f340 80ec 	ble.w	801fb1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f942:	2e00      	cmp	r6, #0
 801f944:	f000 80eb 	beq.w	801fb1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f948:	6852      	ldr	r2, [r2, #4]
 801f94a:	b2b6      	uxth	r6, r6
 801f94c:	b280      	uxth	r0, r0
 801f94e:	fb00 fe06 	mul.w	lr, r0, r6
 801f952:	0136      	lsls	r6, r6, #4
 801f954:	eba6 070e 	sub.w	r7, r6, lr
 801f958:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f95c:	b2bf      	uxth	r7, r7
 801f95e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f962:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f966:	fb07 f60a 	mul.w	r6, r7, sl
 801f96a:	b280      	uxth	r0, r0
 801f96c:	1a1b      	subs	r3, r3, r0
 801f96e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f972:	b29b      	uxth	r3, r3
 801f974:	fb0b 6603 	mla	r6, fp, r3, r6
 801f978:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f97c:	fb00 6609 	mla	r6, r0, r9, r6
 801f980:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f984:	fb0e 6608 	mla	r6, lr, r8, r6
 801f988:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f98c:	9600      	str	r6, [sp, #0]
 801f98e:	2e00      	cmp	r6, #0
 801f990:	f000 80af 	beq.w	801faf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f994:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f998:	fb0b fc0c 	mul.w	ip, fp, ip
 801f99c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f9a0:	fb0b f505 	mul.w	r5, fp, r5
 801f9a4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f9a8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f9ac:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f9b0:	44dc      	add	ip, fp
 801f9b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9b6:	9501      	str	r5, [sp, #4]
 801f9b8:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f9bc:	9503      	str	r5, [sp, #12]
 801f9be:	9d01      	ldr	r5, [sp, #4]
 801f9c0:	9e02      	ldr	r6, [sp, #8]
 801f9c2:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f9c6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f9ca:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f9ce:	fb0a fc0c 	mul.w	ip, sl, ip
 801f9d2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f9d6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f9da:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f9de:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f9e2:	4465      	add	r5, ip
 801f9e4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f9e8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f9ec:	fb09 fc0c 	mul.w	ip, r9, ip
 801f9f0:	fb09 f904 	mul.w	r9, r9, r4
 801f9f4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f9f8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f9fc:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801fa00:	fb08 f404 	mul.w	r4, r8, r4
 801fa04:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fa08:	fb08 f802 	mul.w	r8, r8, r2
 801fa0c:	0a2d      	lsrs	r5, r5, #8
 801fa0e:	0a22      	lsrs	r2, r4, #8
 801fa10:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fa14:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fa18:	437d      	muls	r5, r7
 801fa1a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801fa1e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fa22:	4414      	add	r4, r2
 801fa24:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801fa28:	fb0a fa01 	mul.w	sl, sl, r1
 801fa2c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fa30:	9a03      	ldr	r2, [sp, #12]
 801fa32:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801fa36:	fb02 5503 	mla	r5, r2, r3, r5
 801fa3a:	0a24      	lsrs	r4, r4, #8
 801fa3c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fa40:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801fa44:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fa48:	fb04 540e 	mla	r4, r4, lr, r5
 801fa4c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fa50:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fa54:	4461      	add	r1, ip
 801fa56:	0a09      	lsrs	r1, r1, #8
 801fa58:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fa5c:	fb01 4100 	mla	r1, r1, r0, r4
 801fa60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa64:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fa68:	fb07 f70a 	mul.w	r7, r7, sl
 801fa6c:	0a09      	lsrs	r1, r1, #8
 801fa6e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801fa72:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801fa76:	fb03 7101 	mla	r1, r3, r1, r7
 801fa7a:	9b00      	ldr	r3, [sp, #0]
 801fa7c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fa80:	43da      	mvns	r2, r3
 801fa82:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801fa86:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fa8a:	8836      	ldrh	r6, [r6, #0]
 801fa8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fa90:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801fa94:	fb00 e101 	mla	r1, r0, r1, lr
 801fa98:	1233      	asrs	r3, r6, #8
 801fa9a:	b2d2      	uxtb	r2, r2
 801fa9c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801faa0:	4353      	muls	r3, r2
 801faa2:	10f0      	asrs	r0, r6, #3
 801faa4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801faa8:	4350      	muls	r0, r2
 801faaa:	0a09      	lsrs	r1, r1, #8
 801faac:	00f6      	lsls	r6, r6, #3
 801faae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fab2:	b2f6      	uxtb	r6, r6
 801fab4:	4321      	orrs	r1, r4
 801fab6:	4356      	muls	r6, r2
 801fab8:	1c5a      	adds	r2, r3, #1
 801faba:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fabe:	0c0b      	lsrs	r3, r1, #16
 801fac0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fac4:	1c42      	adds	r2, r0, #1
 801fac6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801faca:	0a0a      	lsrs	r2, r1, #8
 801facc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fad0:	021b      	lsls	r3, r3, #8
 801fad2:	00d2      	lsls	r2, r2, #3
 801fad4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fad8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fadc:	4313      	orrs	r3, r2
 801fade:	1c72      	adds	r2, r6, #1
 801fae0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801fae4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801fae8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801faec:	4319      	orrs	r1, r3
 801faee:	9b02      	ldr	r3, [sp, #8]
 801faf0:	8019      	strh	r1, [r3, #0]
 801faf2:	b005      	add	sp, #20
 801faf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801faf8:	2500      	movs	r5, #0
 801fafa:	e6fe      	b.n	801f8fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801fafc:	2100      	movs	r1, #0
 801fafe:	460d      	mov	r5, r1
 801fb00:	e706      	b.n	801f910 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fb02:	2100      	movs	r1, #0
 801fb04:	e704      	b.n	801f910 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fb06:	4631      	mov	r1, r6
 801fb08:	e702      	b.n	801f910 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801fb0a:	2400      	movs	r4, #0
 801fb0c:	e713      	b.n	801f936 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801fb0e:	2200      	movs	r2, #0
 801fb10:	4614      	mov	r4, r2
 801fb12:	e71a      	b.n	801f94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fb14:	4602      	mov	r2, r0
 801fb16:	4604      	mov	r4, r0
 801fb18:	e717      	b.n	801f94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fb1a:	2200      	movs	r2, #0
 801fb1c:	e715      	b.n	801f94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801fb1e:	4632      	mov	r2, r6
 801fb20:	e713      	b.n	801f94a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801fb24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb28:	b09b      	sub	sp, #108	@ 0x6c
 801fb2a:	9218      	str	r2, [sp, #96]	@ 0x60
 801fb2c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801fb2e:	9019      	str	r0, [sp, #100]	@ 0x64
 801fb30:	6850      	ldr	r0, [r2, #4]
 801fb32:	9116      	str	r1, [sp, #88]	@ 0x58
 801fb34:	9307      	str	r3, [sp, #28]
 801fb36:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801fb3a:	fb00 1303 	mla	r3, r0, r3, r1
 801fb3e:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801fb42:	6812      	ldr	r2, [r2, #0]
 801fb44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fb48:	930a      	str	r3, [sp, #40]	@ 0x28
 801fb4a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fb4c:	681b      	ldr	r3, [r3, #0]
 801fb4e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fb50:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fb52:	2b00      	cmp	r3, #0
 801fb54:	dc03      	bgt.n	801fb5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fb56:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fb58:	2b00      	cmp	r3, #0
 801fb5a:	f340 8387 	ble.w	802026c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801fb5e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fb60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fb68:	1e48      	subs	r0, r1, #1
 801fb6a:	1e57      	subs	r7, r2, #1
 801fb6c:	9b07      	ldr	r3, [sp, #28]
 801fb6e:	2b00      	cmp	r3, #0
 801fb70:	f340 8166 	ble.w	801fe40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801fb74:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fb78:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fb7c:	d406      	bmi.n	801fb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fb7e:	4584      	cmp	ip, r0
 801fb80:	da04      	bge.n	801fb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fb82:	2b00      	cmp	r3, #0
 801fb84:	db02      	blt.n	801fb8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fb86:	42bb      	cmp	r3, r7
 801fb88:	f2c0 815b 	blt.w	801fe42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801fb8c:	f11c 0c01 	adds.w	ip, ip, #1
 801fb90:	f100 814b 	bmi.w	801fe2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fb94:	4561      	cmp	r1, ip
 801fb96:	f2c0 8148 	blt.w	801fe2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fb9a:	3301      	adds	r3, #1
 801fb9c:	f100 8145 	bmi.w	801fe2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fba0:	429a      	cmp	r2, r3
 801fba2:	f2c0 8142 	blt.w	801fe2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801fba6:	9b07      	ldr	r3, [sp, #28]
 801fba8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801fbaa:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fbac:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fbae:	2b00      	cmp	r3, #0
 801fbb0:	f340 8165 	ble.w	801fe7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fbb4:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801fbb6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fbb8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fbbc:	1422      	asrs	r2, r4, #16
 801fbbe:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fbc2:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fbc6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fbca:	689b      	ldr	r3, [r3, #8]
 801fbcc:	f100 81d5 	bmi.w	801ff7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fbd0:	f103 38ff 	add.w	r8, r3, #4294967295
 801fbd4:	4542      	cmp	r2, r8
 801fbd6:	f280 81d0 	bge.w	801ff7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fbda:	f1bc 0f00 	cmp.w	ip, #0
 801fbde:	f2c0 81cc 	blt.w	801ff7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fbe2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fbe6:	45c4      	cmp	ip, r8
 801fbe8:	f280 81c7 	bge.w	801ff7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801fbec:	b21b      	sxth	r3, r3
 801fbee:	fb0c 2203 	mla	r2, ip, r3, r2
 801fbf2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fbf4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801fbf8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801fbfc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801fc00:	2900      	cmp	r1, #0
 801fc02:	f000 8182 	beq.w	801ff0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fc06:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801fc0a:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fc0c:	0e2d      	lsrs	r5, r5, #24
 801fc0e:	9512      	str	r5, [sp, #72]	@ 0x48
 801fc10:	b180      	cbz	r0, 801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fc12:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801fc16:	3b01      	subs	r3, #1
 801fc18:	009b      	lsls	r3, r3, #2
 801fc1a:	3304      	adds	r3, #4
 801fc1c:	eb08 0c03 	add.w	ip, r8, r3
 801fc20:	f858 3003 	ldr.w	r3, [r8, r3]
 801fc24:	9308      	str	r3, [sp, #32]
 801fc26:	0e1b      	lsrs	r3, r3, #24
 801fc28:	9310      	str	r3, [sp, #64]	@ 0x40
 801fc2a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801fc2e:	930c      	str	r3, [sp, #48]	@ 0x30
 801fc30:	0e1b      	lsrs	r3, r3, #24
 801fc32:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fc34:	b289      	uxth	r1, r1
 801fc36:	b280      	uxth	r0, r0
 801fc38:	fb01 f900 	mul.w	r9, r1, r0
 801fc3c:	0109      	lsls	r1, r1, #4
 801fc3e:	eba1 0809 	sub.w	r8, r1, r9
 801fc42:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fc44:	fa1f f888 	uxth.w	r8, r8
 801fc48:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801fc4c:	fb08 f303 	mul.w	r3, r8, r3
 801fc50:	b280      	uxth	r0, r0
 801fc52:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801fc56:	1a09      	subs	r1, r1, r0
 801fc58:	b289      	uxth	r1, r1
 801fc5a:	fb01 330e 	mla	r3, r1, lr, r3
 801fc5e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fc60:	fb00 3305 	mla	r3, r0, r5, r3
 801fc64:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fc66:	fb09 3305 	mla	r3, r9, r5, r3
 801fc6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc6e:	2b00      	cmp	r3, #0
 801fc70:	f000 80d2 	beq.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fc74:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fc78:	d01b      	beq.n	801fcb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801fc7a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801fc7e:	fb0e fa0a 	mul.w	sl, lr, sl
 801fc82:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fc86:	fb0e fe02 	mul.w	lr, lr, r2
 801fc8a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fc8e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fc92:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fc96:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fc9a:	4452      	add	r2, sl
 801fc9c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fca0:	0a12      	lsrs	r2, r2, #8
 801fca2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fca6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fcaa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fcae:	ea42 020c 	orr.w	r2, r2, ip
 801fcb2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fcb4:	2dff      	cmp	r5, #255	@ 0xff
 801fcb6:	d021      	beq.n	801fcfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801fcb8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fcba:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fcbe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fcc0:	fb05 fb0b 	mul.w	fp, r5, fp
 801fcc4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fcc6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fcca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fcce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fcd0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fcd4:	fb05 fa0a 	mul.w	sl, r5, sl
 801fcd8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fcdc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fce0:	44de      	add	lr, fp
 801fce2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fce6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fcea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fcee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fcf2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fcf6:	ea4e 050a 	orr.w	r5, lr, sl
 801fcfa:	950b      	str	r5, [sp, #44]	@ 0x2c
 801fcfc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fcfe:	2dff      	cmp	r5, #255	@ 0xff
 801fd00:	d021      	beq.n	801fd46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fd02:	9d08      	ldr	r5, [sp, #32]
 801fd04:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fd08:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fd0a:	fb05 fb0b 	mul.w	fp, r5, fp
 801fd0e:	9d08      	ldr	r5, [sp, #32]
 801fd10:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fd14:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fd16:	fb05 fa0e 	mul.w	sl, r5, lr
 801fd1a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd1e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd22:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fd26:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fd2a:	44de      	add	lr, fp
 801fd2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd38:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd3c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fd40:	ea4e 050a 	orr.w	r5, lr, sl
 801fd44:	9508      	str	r5, [sp, #32]
 801fd46:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fd48:	2dff      	cmp	r5, #255	@ 0xff
 801fd4a:	d021      	beq.n	801fd90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801fd4c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fd4e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fd52:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fd54:	fb05 fb0b 	mul.w	fp, r5, fp
 801fd58:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fd5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd5e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fd62:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fd64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd68:	fb05 fa0a 	mul.w	sl, r5, sl
 801fd6c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fd70:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fd74:	44de      	add	lr, fp
 801fd76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd82:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd86:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fd8a:	ea4e 050a 	orr.w	r5, lr, sl
 801fd8e:	950c      	str	r5, [sp, #48]	@ 0x30
 801fd90:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fd92:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801fd96:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fd9a:	fb08 fc0c 	mul.w	ip, r8, ip
 801fd9e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fda2:	9d08      	ldr	r5, [sp, #32]
 801fda4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fda8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fdac:	fb00 cc0e 	mla	ip, r0, lr, ip
 801fdb0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fdb2:	2bff      	cmp	r3, #255	@ 0xff
 801fdb4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fdb8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fdba:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fdbe:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fdc2:	fb08 f80e 	mul.w	r8, r8, lr
 801fdc6:	fb01 8202 	mla	r2, r1, r2, r8
 801fdca:	9908      	ldr	r1, [sp, #32]
 801fdcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdd0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801fdd4:	fb00 220a 	mla	r2, r0, sl, r2
 801fdd8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fdda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fdde:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801fde2:	fb09 2900 	mla	r9, r9, r0, r2
 801fde6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fdea:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fdee:	ea4c 0c09 	orr.w	ip, ip, r9
 801fdf2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801fdf6:	f040 8091 	bne.w	801ff1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fdfa:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801fdfe:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801fe02:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fe06:	f022 0207 	bic.w	r2, r2, #7
 801fe0a:	431a      	orrs	r2, r3
 801fe0c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fe10:	ea4c 0c02 	orr.w	ip, ip, r2
 801fe14:	f8a7 c000 	strh.w	ip, [r7]
 801fe18:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fe1a:	3702      	adds	r7, #2
 801fe1c:	441c      	add	r4, r3
 801fe1e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fe20:	441e      	add	r6, r3
 801fe22:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fe24:	3b01      	subs	r3, #1
 801fe26:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fe28:	e6c0      	b.n	801fbac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fe2a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801fe2c:	441c      	add	r4, r3
 801fe2e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801fe30:	441e      	add	r6, r3
 801fe32:	9b07      	ldr	r3, [sp, #28]
 801fe34:	3b01      	subs	r3, #1
 801fe36:	9307      	str	r3, [sp, #28]
 801fe38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fe3a:	3302      	adds	r3, #2
 801fe3c:	930a      	str	r3, [sp, #40]	@ 0x28
 801fe3e:	e695      	b.n	801fb6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fe40:	d024      	beq.n	801fe8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fe42:	9b07      	ldr	r3, [sp, #28]
 801fe44:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801fe46:	3b01      	subs	r3, #1
 801fe48:	fb00 4003 	mla	r0, r0, r3, r4
 801fe4c:	1400      	asrs	r0, r0, #16
 801fe4e:	f53f aeaa 	bmi.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fe52:	3901      	subs	r1, #1
 801fe54:	4288      	cmp	r0, r1
 801fe56:	f6bf aea6 	bge.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fe5a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801fe5c:	fb01 6303 	mla	r3, r1, r3, r6
 801fe60:	141b      	asrs	r3, r3, #16
 801fe62:	f53f aea0 	bmi.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fe66:	3a01      	subs	r2, #1
 801fe68:	4293      	cmp	r3, r2
 801fe6a:	f6bf ae9c 	bge.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fe6e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fe72:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801fe76:	f1bb 0f00 	cmp.w	fp, #0
 801fe7a:	f300 809a 	bgt.w	801ffb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fe7e:	9b07      	ldr	r3, [sp, #28]
 801fe80:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fe84:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fe86:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fe8a:	930a      	str	r3, [sp, #40]	@ 0x28
 801fe8c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fe8e:	2b00      	cmp	r3, #0
 801fe90:	f340 81ec 	ble.w	802026c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801fe94:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fe98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fe9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fea0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fea4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fea8:	eef0 6a62 	vmov.f32	s13, s5
 801feac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801feb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801feb4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801feb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801febc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fec0:	ee16 4a90 	vmov	r4, s13
 801fec4:	eef0 6a43 	vmov.f32	s13, s6
 801fec8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fecc:	ee12 2a90 	vmov	r2, s5
 801fed0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fed4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fed6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801feda:	fb92 f3f3 	sdiv	r3, r2, r3
 801fede:	ee13 2a10 	vmov	r2, s6
 801fee2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801fee4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fee6:	ee16 6a90 	vmov	r6, s13
 801feea:	fb92 f3f3 	sdiv	r3, r2, r3
 801feee:	9328      	str	r3, [sp, #160]	@ 0xa0
 801fef0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fef2:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801fef4:	3b01      	subs	r3, #1
 801fef6:	9316      	str	r3, [sp, #88]	@ 0x58
 801fef8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fefa:	bf08      	it	eq
 801fefc:	4613      	moveq	r3, r2
 801fefe:	eeb0 3a67 	vmov.f32	s6, s15
 801ff02:	9307      	str	r3, [sp, #28]
 801ff04:	eef0 2a47 	vmov.f32	s5, s14
 801ff08:	e622      	b.n	801fb50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ff0a:	2800      	cmp	r0, #0
 801ff0c:	f43f ae92 	beq.w	801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ff10:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ff14:	9308      	str	r3, [sp, #32]
 801ff16:	0e1b      	lsrs	r3, r3, #24
 801ff18:	9310      	str	r3, [sp, #64]	@ 0x40
 801ff1a:	e68b      	b.n	801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ff1c:	43db      	mvns	r3, r3
 801ff1e:	8839      	ldrh	r1, [r7, #0]
 801ff20:	fa5f f883 	uxtb.w	r8, r3
 801ff24:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ff28:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ff2c:	fb0e fe08 	mul.w	lr, lr, r8
 801ff30:	10c8      	asrs	r0, r1, #3
 801ff32:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ff36:	fb00 f008 	mul.w	r0, r0, r8
 801ff3a:	00cb      	lsls	r3, r1, #3
 801ff3c:	f10e 0101 	add.w	r1, lr, #1
 801ff40:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ff44:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ff48:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ff4c:	b2db      	uxtb	r3, r3
 801ff4e:	f100 0e01 	add.w	lr, r0, #1
 801ff52:	fb03 f308 	mul.w	r3, r3, r8
 801ff56:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ff5a:	4dc6      	ldr	r5, [pc, #792]	@ (8020274 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801ff5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ff60:	b2c9      	uxtb	r1, r1
 801ff62:	00d2      	lsls	r2, r2, #3
 801ff64:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ff68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ff6c:	430a      	orrs	r2, r1
 801ff6e:	1c59      	adds	r1, r3, #1
 801ff70:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ff74:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ff78:	e748      	b.n	801fe0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ff7a:	f112 0801 	adds.w	r8, r2, #1
 801ff7e:	f53f af4b 	bmi.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff82:	4543      	cmp	r3, r8
 801ff84:	f6ff af48 	blt.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff88:	f11c 0801 	adds.w	r8, ip, #1
 801ff8c:	f53f af44 	bmi.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff90:	45c6      	cmp	lr, r8
 801ff92:	f6ff af41 	blt.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ff96:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ff9a:	fa0f f28e 	sxth.w	r2, lr
 801ff9e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ffa2:	9200      	str	r2, [sp, #0]
 801ffa4:	b21b      	sxth	r3, r3
 801ffa6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ffa8:	4639      	mov	r1, r7
 801ffaa:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ffac:	f7ff fc87 	bl	801f8be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801ffb0:	e732      	b.n	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ffb2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ffb4:	1421      	asrs	r1, r4, #16
 801ffb6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801ffba:	1433      	asrs	r3, r6, #16
 801ffbc:	fb07 1303 	mla	r3, r7, r3, r1
 801ffc0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ffc2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ffc4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ffc8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801ffcc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ffd0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ffd4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ffd8:	2a00      	cmp	r2, #0
 801ffda:	f000 8108 	beq.w	80201ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801ffde:	684d      	ldr	r5, [r1, #4]
 801ffe0:	950d      	str	r5, [sp, #52]	@ 0x34
 801ffe2:	0e2d      	lsrs	r5, r5, #24
 801ffe4:	9514      	str	r5, [sp, #80]	@ 0x50
 801ffe6:	b178      	cbz	r0, 8020008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ffe8:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801ffec:	3f01      	subs	r7, #1
 801ffee:	00bf      	lsls	r7, r7, #2
 801fff0:	3704      	adds	r7, #4
 801fff2:	eb01 0e07 	add.w	lr, r1, r7
 801fff6:	59c9      	ldr	r1, [r1, r7]
 801fff8:	9109      	str	r1, [sp, #36]	@ 0x24
 801fffa:	0e09      	lsrs	r1, r1, #24
 801fffc:	9111      	str	r1, [sp, #68]	@ 0x44
 801fffe:	f8de 1004 	ldr.w	r1, [lr, #4]
 8020002:	910e      	str	r1, [sp, #56]	@ 0x38
 8020004:	0e09      	lsrs	r1, r1, #24
 8020006:	9115      	str	r1, [sp, #84]	@ 0x54
 8020008:	b292      	uxth	r2, r2
 802000a:	b280      	uxth	r0, r0
 802000c:	fb02 f900 	mul.w	r9, r2, r0
 8020010:	0112      	lsls	r2, r2, #4
 8020012:	eba2 0e09 	sub.w	lr, r2, r9
 8020016:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802001a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802001c:	fa1f fe8e 	uxth.w	lr, lr
 8020020:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020024:	fb0e f202 	mul.w	r2, lr, r2
 8020028:	b280      	uxth	r0, r0
 802002a:	1a09      	subs	r1, r1, r0
 802002c:	b289      	uxth	r1, r1
 802002e:	fb01 220c 	mla	r2, r1, ip, r2
 8020032:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020034:	fb00 2205 	mla	r2, r0, r5, r2
 8020038:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802003a:	fb09 2205 	mla	r2, r9, r5, r2
 802003e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020042:	2a00      	cmp	r2, #0
 8020044:	f000 80ca 	beq.w	80201dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8020048:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802004c:	d019      	beq.n	8020082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802004e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020052:	fb0c fa0a 	mul.w	sl, ip, sl
 8020056:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802005a:	fb0c fc03 	mul.w	ip, ip, r3
 802005e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020062:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020066:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802006a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802006e:	4453      	add	r3, sl
 8020070:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020074:	0a1b      	lsrs	r3, r3, #8
 8020076:	0a3f      	lsrs	r7, r7, #8
 8020078:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802007c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020080:	433b      	orrs	r3, r7
 8020082:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020084:	2dff      	cmp	r5, #255	@ 0xff
 8020086:	d020      	beq.n	80200ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8020088:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802008a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802008e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8020090:	436f      	muls	r7, r5
 8020092:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020094:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020098:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802009c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802009e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80200a2:	fb05 fa0a 	mul.w	sl, r5, sl
 80200a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200aa:	44bc      	add	ip, r7
 80200ac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80200b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80200b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80200bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80200c4:	ea4c 050a 	orr.w	r5, ip, sl
 80200c8:	950d      	str	r5, [sp, #52]	@ 0x34
 80200ca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80200cc:	2dff      	cmp	r5, #255	@ 0xff
 80200ce:	d020      	beq.n	8020112 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80200d0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80200d2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80200d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80200d8:	436f      	muls	r7, r5
 80200da:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80200dc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80200e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80200e2:	fb05 fa0c 	mul.w	sl, r5, ip
 80200e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80200ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80200f2:	44bc      	add	ip, r7
 80200f4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80200f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80200fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020100:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020104:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020108:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802010c:	ea4c 050a 	orr.w	r5, ip, sl
 8020110:	9509      	str	r5, [sp, #36]	@ 0x24
 8020112:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020114:	2dff      	cmp	r5, #255	@ 0xff
 8020116:	d020      	beq.n	802015a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8020118:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802011a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802011e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020120:	436f      	muls	r7, r5
 8020122:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020124:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020128:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802012c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802012e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020132:	fb05 fa0a 	mul.w	sl, r5, sl
 8020136:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802013a:	44bc      	add	ip, r7
 802013c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020140:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020144:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020148:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802014c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020150:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020154:	ea4c 050a 	orr.w	r5, ip, sl
 8020158:	950e      	str	r5, [sp, #56]	@ 0x38
 802015a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802015c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020160:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020164:	fb0e f707 	mul.w	r7, lr, r7
 8020168:	fb01 770c 	mla	r7, r1, ip, r7
 802016c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802016e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020172:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020176:	fb00 770c 	mla	r7, r0, ip, r7
 802017a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802017c:	2aff      	cmp	r2, #255	@ 0xff
 802017e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8020182:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020184:	fb09 770c 	mla	r7, r9, ip, r7
 8020188:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802018c:	fb0e fe0c 	mul.w	lr, lr, ip
 8020190:	fb01 e303 	mla	r3, r1, r3, lr
 8020194:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020196:	ea4f 2717 	mov.w	r7, r7, lsr #8
 802019a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802019e:	fb00 330a 	mla	r3, r0, sl, r3
 80201a2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80201a4:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80201a8:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80201ac:	fb09 3c0c 	mla	ip, r9, ip, r3
 80201b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201b4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80201b8:	ea47 070c 	orr.w	r7, r7, ip
 80201bc:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80201c0:	d11e      	bne.n	8020200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 80201c2:	097a      	lsrs	r2, r7, #5
 80201c4:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 80201c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80201cc:	f023 0307 	bic.w	r3, r3, #7
 80201d0:	4313      	orrs	r3, r2
 80201d2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80201d6:	431f      	orrs	r7, r3
 80201d8:	f8a8 7000 	strh.w	r7, [r8]
 80201dc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80201de:	f108 0802 	add.w	r8, r8, #2
 80201e2:	441c      	add	r4, r3
 80201e4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80201e6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80201ea:	441e      	add	r6, r3
 80201ec:	e643      	b.n	801fe76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80201ee:	2800      	cmp	r0, #0
 80201f0:	f43f af0a 	beq.w	8020008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80201f4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80201f8:	9109      	str	r1, [sp, #36]	@ 0x24
 80201fa:	0e09      	lsrs	r1, r1, #24
 80201fc:	9111      	str	r1, [sp, #68]	@ 0x44
 80201fe:	e703      	b.n	8020008 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020200:	43d2      	mvns	r2, r2
 8020202:	f8b8 1000 	ldrh.w	r1, [r8]
 8020206:	fa5f fe82 	uxtb.w	lr, r2
 802020a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802020e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020212:	fb0c fc0e 	mul.w	ip, ip, lr
 8020216:	10c8      	asrs	r0, r1, #3
 8020218:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802021c:	fb00 f00e 	mul.w	r0, r0, lr
 8020220:	00ca      	lsls	r2, r1, #3
 8020222:	f10c 0101 	add.w	r1, ip, #1
 8020226:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802022a:	b2d2      	uxtb	r2, r2
 802022c:	0c39      	lsrs	r1, r7, #16
 802022e:	fb02 f20e 	mul.w	r2, r2, lr
 8020232:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020236:	490f      	ldr	r1, [pc, #60]	@ (8020274 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8020238:	fa5f fc8c 	uxtb.w	ip, ip
 802023c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020240:	1c41      	adds	r1, r0, #1
 8020242:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020246:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802024a:	1c51      	adds	r1, r2, #1
 802024c:	00c0      	lsls	r0, r0, #3
 802024e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020252:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020256:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802025a:	ea4c 0c00 	orr.w	ip, ip, r0
 802025e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020262:	ea47 0c0c 	orr.w	ip, r7, ip
 8020266:	f8a8 c000 	strh.w	ip, [r8]
 802026a:	e7b7      	b.n	80201dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 802026c:	b01b      	add	sp, #108	@ 0x6c
 802026e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020272:	bf00      	nop
 8020274:	fffff800 	.word	0xfffff800

08020278 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8020278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802027c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8020280:	2d00      	cmp	r5, #0
 8020282:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8020286:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 802028a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802028e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8020292:	fb05 0e03 	mla	lr, r5, r3, r0
 8020296:	f2c0 808c 	blt.w	80203b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802029a:	45a9      	cmp	r9, r5
 802029c:	f340 8089 	ble.w	80203b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80202a0:	2800      	cmp	r0, #0
 80202a2:	f2c0 8084 	blt.w	80203ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80202a6:	4580      	cmp	r8, r0
 80202a8:	f340 8081 	ble.w	80203ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80202ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80202b0:	5d16      	ldrb	r6, [r2, r4]
 80202b2:	f01e 0f01 	tst.w	lr, #1
 80202b6:	bf0c      	ite	eq
 80202b8:	f006 060f 	andeq.w	r6, r6, #15
 80202bc:	1136      	asrne	r6, r6, #4
 80202be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80202c2:	b2f6      	uxtb	r6, r6
 80202c4:	1c44      	adds	r4, r0, #1
 80202c6:	d477      	bmi.n	80203b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80202c8:	45a0      	cmp	r8, r4
 80202ca:	dd75      	ble.n	80203b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80202cc:	2f00      	cmp	r7, #0
 80202ce:	d075      	beq.n	80203bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80202d0:	f10e 0a01 	add.w	sl, lr, #1
 80202d4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80202d8:	5d14      	ldrb	r4, [r2, r4]
 80202da:	f01a 0f01 	tst.w	sl, #1
 80202de:	bf0c      	ite	eq
 80202e0:	f004 040f 	andeq.w	r4, r4, #15
 80202e4:	1124      	asrne	r4, r4, #4
 80202e6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80202ea:	b2e4      	uxtb	r4, r4
 80202ec:	3501      	adds	r5, #1
 80202ee:	d469      	bmi.n	80203c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80202f0:	45a9      	cmp	r9, r5
 80202f2:	dd67      	ble.n	80203c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80202f4:	f1bc 0f00 	cmp.w	ip, #0
 80202f8:	d067      	beq.n	80203ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80202fa:	2800      	cmp	r0, #0
 80202fc:	db60      	blt.n	80203c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80202fe:	4580      	cmp	r8, r0
 8020300:	dd5e      	ble.n	80203c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8020302:	eb03 090e 	add.w	r9, r3, lr
 8020306:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802030a:	5d55      	ldrb	r5, [r2, r5]
 802030c:	f019 0f01 	tst.w	r9, #1
 8020310:	bf0c      	ite	eq
 8020312:	f005 050f 	andeq.w	r5, r5, #15
 8020316:	112d      	asrne	r5, r5, #4
 8020318:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802031c:	b2ed      	uxtb	r5, r5
 802031e:	3001      	adds	r0, #1
 8020320:	d456      	bmi.n	80203d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020322:	4580      	cmp	r8, r0
 8020324:	dd54      	ble.n	80203d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020326:	2f00      	cmp	r7, #0
 8020328:	d054      	beq.n	80203d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802032a:	3301      	adds	r3, #1
 802032c:	449e      	add	lr, r3
 802032e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020332:	5cd0      	ldrb	r0, [r2, r3]
 8020334:	f01e 0f01 	tst.w	lr, #1
 8020338:	bf0c      	ite	eq
 802033a:	f000 000f 	andeq.w	r0, r0, #15
 802033e:	1100      	asrne	r0, r0, #4
 8020340:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020344:	b2c3      	uxtb	r3, r0
 8020346:	b2ba      	uxth	r2, r7
 8020348:	fa1f fc8c 	uxth.w	ip, ip
 802034c:	fb02 f00c 	mul.w	r0, r2, ip
 8020350:	0112      	lsls	r2, r2, #4
 8020352:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020356:	1a12      	subs	r2, r2, r0
 8020358:	b292      	uxth	r2, r2
 802035a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802035e:	4362      	muls	r2, r4
 8020360:	fa1f fc8c 	uxth.w	ip, ip
 8020364:	eba7 070c 	sub.w	r7, r7, ip
 8020368:	b2bf      	uxth	r7, r7
 802036a:	fb06 2207 	mla	r2, r6, r7, r2
 802036e:	fb0c 2505 	mla	r5, ip, r5, r2
 8020372:	fb00 5303 	mla	r3, r0, r3, r5
 8020376:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802037a:	b1b3      	cbz	r3, 80203aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802037c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8020380:	435a      	muls	r2, r3
 8020382:	1c53      	adds	r3, r2, #1
 8020384:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020388:	4a2d      	ldr	r2, [pc, #180]	@ (8020440 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802038a:	121b      	asrs	r3, r3, #8
 802038c:	6812      	ldr	r2, [r2, #0]
 802038e:	2bff      	cmp	r3, #255	@ 0xff
 8020390:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8020394:	d120      	bne.n	80203d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8020396:	4b2b      	ldr	r3, [pc, #172]	@ (8020444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8020398:	0950      	lsrs	r0, r2, #5
 802039a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802039e:	4033      	ands	r3, r6
 80203a0:	4318      	orrs	r0, r3
 80203a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80203a6:	4302      	orrs	r2, r0
 80203a8:	800a      	strh	r2, [r1, #0]
 80203aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80203ae:	2600      	movs	r6, #0
 80203b0:	e788      	b.n	80202c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80203b2:	2400      	movs	r4, #0
 80203b4:	4626      	mov	r6, r4
 80203b6:	e799      	b.n	80202ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80203b8:	2400      	movs	r4, #0
 80203ba:	e797      	b.n	80202ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80203bc:	463c      	mov	r4, r7
 80203be:	e795      	b.n	80202ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80203c0:	2500      	movs	r5, #0
 80203c2:	e7ac      	b.n	802031e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80203c4:	2300      	movs	r3, #0
 80203c6:	461d      	mov	r5, r3
 80203c8:	e7bd      	b.n	8020346 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80203ca:	4663      	mov	r3, ip
 80203cc:	4665      	mov	r5, ip
 80203ce:	e7ba      	b.n	8020346 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80203d0:	2300      	movs	r3, #0
 80203d2:	e7b8      	b.n	8020346 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80203d4:	463b      	mov	r3, r7
 80203d6:	e7b6      	b.n	8020346 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80203d8:	b29f      	uxth	r7, r3
 80203da:	43db      	mvns	r3, r3
 80203dc:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80203e0:	880d      	ldrh	r5, [r1, #0]
 80203e2:	fb10 f007 	smulbb	r0, r0, r7
 80203e6:	b2f6      	uxtb	r6, r6
 80203e8:	b2d2      	uxtb	r2, r2
 80203ea:	122c      	asrs	r4, r5, #8
 80203ec:	fb12 f207 	smulbb	r2, r2, r7
 80203f0:	fb16 f607 	smulbb	r6, r6, r7
 80203f4:	b2db      	uxtb	r3, r3
 80203f6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80203fa:	fb04 0403 	mla	r4, r4, r3, r0
 80203fe:	10e8      	asrs	r0, r5, #3
 8020400:	00ed      	lsls	r5, r5, #3
 8020402:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020406:	b2ed      	uxtb	r5, r5
 8020408:	fb00 6603 	mla	r6, r0, r3, r6
 802040c:	fb05 2303 	mla	r3, r5, r3, r2
 8020410:	b2a4      	uxth	r4, r4
 8020412:	b29a      	uxth	r2, r3
 8020414:	1c63      	adds	r3, r4, #1
 8020416:	b2b0      	uxth	r0, r6
 8020418:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802041c:	1c53      	adds	r3, r2, #1
 802041e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020422:	1c42      	adds	r2, r0, #1
 8020424:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020428:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802042c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020430:	0940      	lsrs	r0, r0, #5
 8020432:	4323      	orrs	r3, r4
 8020434:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020438:	4303      	orrs	r3, r0
 802043a:	800b      	strh	r3, [r1, #0]
 802043c:	e7b5      	b.n	80203aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802043e:	bf00      	nop
 8020440:	20002238 	.word	0x20002238
 8020444:	00fff800 	.word	0x00fff800

08020448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802044c:	b097      	sub	sp, #92	@ 0x5c
 802044e:	9214      	str	r2, [sp, #80]	@ 0x50
 8020450:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020452:	9015      	str	r0, [sp, #84]	@ 0x54
 8020454:	9309      	str	r3, [sp, #36]	@ 0x24
 8020456:	6850      	ldr	r0, [r2, #4]
 8020458:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802045c:	910d      	str	r1, [sp, #52]	@ 0x34
 802045e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020460:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8020464:	fb00 1303 	mla	r3, r0, r3, r1
 8020468:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 802046c:	6812      	ldr	r2, [r2, #0]
 802046e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020472:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020474:	689b      	ldr	r3, [r3, #8]
 8020476:	3301      	adds	r3, #1
 8020478:	f023 0301 	bic.w	r3, r3, #1
 802047c:	930a      	str	r3, [sp, #40]	@ 0x28
 802047e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020480:	681f      	ldr	r7, [r3, #0]
 8020482:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020484:	2b00      	cmp	r3, #0
 8020486:	dc03      	bgt.n	8020490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020488:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802048a:	2b00      	cmp	r3, #0
 802048c:	f340 8287 	ble.w	802099e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020490:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020492:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020496:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802049a:	1e48      	subs	r0, r1, #1
 802049c:	f102 3cff 	add.w	ip, r2, #4294967295
 80204a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80204a2:	2b00      	cmp	r3, #0
 80204a4:	f340 80c3 	ble.w	802062e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80204a8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80204ac:	ea4f 4326 	mov.w	r3, r6, asr #16
 80204b0:	d406      	bmi.n	80204c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80204b2:	4586      	cmp	lr, r0
 80204b4:	da04      	bge.n	80204c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80204b6:	2b00      	cmp	r3, #0
 80204b8:	db02      	blt.n	80204c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80204ba:	4563      	cmp	r3, ip
 80204bc:	f2c0 80b8 	blt.w	8020630 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80204c0:	f11e 0e01 	adds.w	lr, lr, #1
 80204c4:	f100 80a9 	bmi.w	802061a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80204c8:	4571      	cmp	r1, lr
 80204ca:	f2c0 80a6 	blt.w	802061a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80204ce:	3301      	adds	r3, #1
 80204d0:	f100 80a3 	bmi.w	802061a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80204d4:	429a      	cmp	r2, r3
 80204d6:	f2c0 80a0 	blt.w	802061a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80204da:	46c8      	mov	r8, r9
 80204dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80204de:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 80204e2:	930e      	str	r3, [sp, #56]	@ 0x38
 80204e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80204e6:	2b00      	cmp	r3, #0
 80204e8:	f340 80c2 	ble.w	8020670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80204ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80204ee:	1430      	asrs	r0, r6, #16
 80204f0:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80204f4:	1423      	asrs	r3, r4, #16
 80204f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80204fa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80204fe:	f100 814d 	bmi.w	802079c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8020502:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020506:	455b      	cmp	r3, fp
 8020508:	f280 8148 	bge.w	802079c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 802050c:	2800      	cmp	r0, #0
 802050e:	f2c0 8145 	blt.w	802079c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8020512:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020516:	4558      	cmp	r0, fp
 8020518:	f280 8140 	bge.w	802079c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 802051c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802051e:	fb00 3305 	mla	r3, r0, r5, r3
 8020522:	0858      	lsrs	r0, r3, #1
 8020524:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020528:	07dd      	lsls	r5, r3, #31
 802052a:	bf54      	ite	pl
 802052c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020530:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020534:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020538:	fa5f fc8c 	uxtb.w	ip, ip
 802053c:	2a00      	cmp	r2, #0
 802053e:	f000 80db 	beq.w	80206f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8020542:	1c58      	adds	r0, r3, #1
 8020544:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020548:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802054c:	07c0      	lsls	r0, r0, #31
 802054e:	bf54      	ite	pl
 8020550:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020554:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020558:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802055c:	fa5f f08e 	uxtb.w	r0, lr
 8020560:	9010      	str	r0, [sp, #64]	@ 0x40
 8020562:	b1c9      	cbz	r1, 8020598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 8020564:	4453      	add	r3, sl
 8020566:	0858      	lsrs	r0, r3, #1
 8020568:	5c38      	ldrb	r0, [r7, r0]
 802056a:	07dd      	lsls	r5, r3, #31
 802056c:	bf54      	ite	pl
 802056e:	f000 000f 	andpl.w	r0, r0, #15
 8020572:	1100      	asrmi	r0, r0, #4
 8020574:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020578:	3301      	adds	r3, #1
 802057a:	b2c0      	uxtb	r0, r0
 802057c:	900b      	str	r0, [sp, #44]	@ 0x2c
 802057e:	0858      	lsrs	r0, r3, #1
 8020580:	f817 e000 	ldrb.w	lr, [r7, r0]
 8020584:	07dd      	lsls	r5, r3, #31
 8020586:	bf54      	ite	pl
 8020588:	f00e 030f 	andpl.w	r3, lr, #15
 802058c:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8020590:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020594:	b2db      	uxtb	r3, r3
 8020596:	9311      	str	r3, [sp, #68]	@ 0x44
 8020598:	b292      	uxth	r2, r2
 802059a:	b289      	uxth	r1, r1
 802059c:	fb02 f301 	mul.w	r3, r2, r1
 80205a0:	0112      	lsls	r2, r2, #4
 80205a2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80205a6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80205a8:	1ad2      	subs	r2, r2, r3
 80205aa:	b292      	uxth	r2, r2
 80205ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80205b0:	436a      	muls	r2, r5
 80205b2:	b289      	uxth	r1, r1
 80205b4:	1a40      	subs	r0, r0, r1
 80205b6:	b280      	uxth	r0, r0
 80205b8:	fb0c 2c00 	mla	ip, ip, r0, r2
 80205bc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80205be:	fb01 c102 	mla	r1, r1, r2, ip
 80205c2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80205c4:	fb03 1302 	mla	r3, r3, r2, r1
 80205c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80205cc:	b1db      	cbz	r3, 8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80205ce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80205d0:	4353      	muls	r3, r2
 80205d2:	1c5a      	adds	r2, r3, #1
 80205d4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80205d8:	4ac6      	ldr	r2, [pc, #792]	@ (80208f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80205da:	121b      	asrs	r3, r3, #8
 80205dc:	6812      	ldr	r2, [r2, #0]
 80205de:	2bff      	cmp	r3, #255	@ 0xff
 80205e0:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80205e4:	f040 8099 	bne.w	802071a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80205e8:	0953      	lsrs	r3, r2, #5
 80205ea:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80205ee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80205f2:	f02c 0c07 	bic.w	ip, ip, #7
 80205f6:	ea43 0c0c 	orr.w	ip, r3, ip
 80205fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80205fe:	ea4c 0202 	orr.w	r2, ip, r2
 8020602:	f8a8 2000 	strh.w	r2, [r8]
 8020606:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020608:	f108 0802 	add.w	r8, r8, #2
 802060c:	441c      	add	r4, r3
 802060e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020610:	441e      	add	r6, r3
 8020612:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020614:	3b01      	subs	r3, #1
 8020616:	930e      	str	r3, [sp, #56]	@ 0x38
 8020618:	e764      	b.n	80204e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802061a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802061c:	f109 0902 	add.w	r9, r9, #2
 8020620:	441c      	add	r4, r3
 8020622:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020624:	441e      	add	r6, r3
 8020626:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020628:	3b01      	subs	r3, #1
 802062a:	9309      	str	r3, [sp, #36]	@ 0x24
 802062c:	e738      	b.n	80204a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802062e:	d024      	beq.n	802067a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8020630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020632:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8020634:	3b01      	subs	r3, #1
 8020636:	fb00 4003 	mla	r0, r0, r3, r4
 802063a:	1400      	asrs	r0, r0, #16
 802063c:	f53f af4d 	bmi.w	80204da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020640:	3901      	subs	r1, #1
 8020642:	4288      	cmp	r0, r1
 8020644:	f6bf af49 	bge.w	80204da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020648:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802064a:	fb01 6303 	mla	r3, r1, r3, r6
 802064e:	141b      	asrs	r3, r3, #16
 8020650:	f53f af43 	bmi.w	80204da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020654:	3a01      	subs	r2, #1
 8020656:	4293      	cmp	r3, r2
 8020658:	f6bf af3f 	bge.w	80204da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802065c:	46c8      	mov	r8, r9
 802065e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8020662:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020666:	930e      	str	r3, [sp, #56]	@ 0x38
 8020668:	f1bb 0f00 	cmp.w	fp, #0
 802066c:	f300 80b7 	bgt.w	80207de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x396>
 8020670:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020672:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020676:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802067a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802067c:	2b00      	cmp	r3, #0
 802067e:	f340 818e 	ble.w	802099e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020682:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020686:	ee30 0a04 	vadd.f32	s0, s0, s8
 802068a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802068e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020692:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020696:	eef0 6a62 	vmov.f32	s13, s5
 802069a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802069e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80206a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80206a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80206ae:	ee16 4a90 	vmov	r4, s13
 80206b2:	eef0 6a43 	vmov.f32	s13, s6
 80206b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80206ba:	ee12 2a90 	vmov	r2, s5
 80206be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80206c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80206c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80206cc:	ee13 2a10 	vmov	r2, s6
 80206d0:	9323      	str	r3, [sp, #140]	@ 0x8c
 80206d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80206d4:	ee16 6a90 	vmov	r6, s13
 80206d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80206dc:	9324      	str	r3, [sp, #144]	@ 0x90
 80206de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80206e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80206e2:	3b01      	subs	r3, #1
 80206e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80206e6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80206e8:	bf08      	it	eq
 80206ea:	4613      	moveq	r3, r2
 80206ec:	eeb0 3a67 	vmov.f32	s6, s15
 80206f0:	9309      	str	r3, [sp, #36]	@ 0x24
 80206f2:	eef0 2a47 	vmov.f32	s5, s14
 80206f6:	e6c4      	b.n	8020482 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80206f8:	2900      	cmp	r1, #0
 80206fa:	f43f af4d 	beq.w	8020598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 80206fe:	eb0a 0003 	add.w	r0, sl, r3
 8020702:	0843      	lsrs	r3, r0, #1
 8020704:	5cfb      	ldrb	r3, [r7, r3]
 8020706:	07c0      	lsls	r0, r0, #31
 8020708:	bf54      	ite	pl
 802070a:	f003 030f 	andpl.w	r3, r3, #15
 802070e:	111b      	asrmi	r3, r3, #4
 8020710:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020714:	b2db      	uxtb	r3, r3
 8020716:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020718:	e73e      	b.n	8020598 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x150>
 802071a:	fa1f fb83 	uxth.w	fp, r3
 802071e:	43db      	mvns	r3, r3
 8020720:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020724:	f8b8 e000 	ldrh.w	lr, [r8]
 8020728:	fb11 f10b 	smulbb	r1, r1, fp
 802072c:	fa5f fc8c 	uxtb.w	ip, ip
 8020730:	b2d2      	uxtb	r2, r2
 8020732:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020736:	fb1c fc0b 	smulbb	ip, ip, fp
 802073a:	fb12 fb0b 	smulbb	fp, r2, fp
 802073e:	b2db      	uxtb	r3, r3
 8020740:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020744:	fb00 1003 	mla	r0, r0, r3, r1
 8020748:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802074c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020750:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020754:	fa5f fe8e 	uxtb.w	lr, lr
 8020758:	fb01 cc03 	mla	ip, r1, r3, ip
 802075c:	fb0e bb03 	mla	fp, lr, r3, fp
 8020760:	b280      	uxth	r0, r0
 8020762:	1c43      	adds	r3, r0, #1
 8020764:	fa1f fc8c 	uxth.w	ip, ip
 8020768:	fa1f fb8b 	uxth.w	fp, fp
 802076c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020770:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8020774:	f10c 0101 	add.w	r1, ip, #1
 8020778:	f10b 0001 	add.w	r0, fp, #1
 802077c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020780:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020784:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020788:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802078c:	4318      	orrs	r0, r3
 802078e:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020792:	ea40 000c 	orr.w	r0, r0, ip
 8020796:	f8a8 0000 	strh.w	r0, [r8]
 802079a:	e734      	b.n	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802079c:	f113 0b01 	adds.w	fp, r3, #1
 80207a0:	f53f af31 	bmi.w	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80207a4:	45dc      	cmp	ip, fp
 80207a6:	f6ff af2e 	blt.w	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80207aa:	f110 0b01 	adds.w	fp, r0, #1
 80207ae:	f53f af2a 	bmi.w	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80207b2:	45de      	cmp	lr, fp
 80207b4:	f6ff af27 	blt.w	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80207b8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80207ba:	9302      	str	r3, [sp, #8]
 80207bc:	fa0f f38e 	sxth.w	r3, lr
 80207c0:	9301      	str	r3, [sp, #4]
 80207c2:	fa0f f38c 	sxth.w	r3, ip
 80207c6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80207ca:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80207ce:	9300      	str	r3, [sp, #0]
 80207d0:	463a      	mov	r2, r7
 80207d2:	4653      	mov	r3, sl
 80207d4:	4641      	mov	r1, r8
 80207d6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80207d8:	f7ff fd4e 	bl	8020278 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80207dc:	e713      	b.n	8020606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80207de:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80207e0:	1422      	asrs	r2, r4, #16
 80207e2:	1433      	asrs	r3, r6, #16
 80207e4:	fb05 2303 	mla	r3, r5, r3, r2
 80207e8:	085a      	lsrs	r2, r3, #1
 80207ea:	5cba      	ldrb	r2, [r7, r2]
 80207ec:	07dd      	lsls	r5, r3, #31
 80207ee:	bf54      	ite	pl
 80207f0:	f002 020f 	andpl.w	r2, r2, #15
 80207f4:	1112      	asrmi	r2, r2, #4
 80207f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80207fa:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80207fe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020802:	b2d2      	uxtb	r2, r2
 8020804:	2900      	cmp	r1, #0
 8020806:	d077      	beq.n	80208f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020808:	f103 0e01 	add.w	lr, r3, #1
 802080c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8020810:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020814:	f01e 0f01 	tst.w	lr, #1
 8020818:	bf0c      	ite	eq
 802081a:	f00c 0c0f 	andeq.w	ip, ip, #15
 802081e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020822:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020826:	fa5f f58c 	uxtb.w	r5, ip
 802082a:	9512      	str	r5, [sp, #72]	@ 0x48
 802082c:	b300      	cbz	r0, 8020870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 802082e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020830:	442b      	add	r3, r5
 8020832:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020836:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802083a:	07dd      	lsls	r5, r3, #31
 802083c:	bf54      	ite	pl
 802083e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020842:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020846:	3301      	adds	r3, #1
 8020848:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802084c:	fa5f f58c 	uxtb.w	r5, ip
 8020850:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020854:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020858:	950c      	str	r5, [sp, #48]	@ 0x30
 802085a:	07dd      	lsls	r5, r3, #31
 802085c:	bf54      	ite	pl
 802085e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020862:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020866:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802086a:	fa5f f38c 	uxtb.w	r3, ip
 802086e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020870:	b289      	uxth	r1, r1
 8020872:	b280      	uxth	r0, r0
 8020874:	fb01 f300 	mul.w	r3, r1, r0
 8020878:	0109      	lsls	r1, r1, #4
 802087a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802087e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020880:	1ac9      	subs	r1, r1, r3
 8020882:	b289      	uxth	r1, r1
 8020884:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020888:	4369      	muls	r1, r5
 802088a:	b280      	uxth	r0, r0
 802088c:	ebac 0c00 	sub.w	ip, ip, r0
 8020890:	fa1f fc8c 	uxth.w	ip, ip
 8020894:	fb02 120c 	mla	r2, r2, ip, r1
 8020898:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802089a:	fb00 2001 	mla	r0, r0, r1, r2
 802089e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80208a0:	fb03 0302 	mla	r3, r3, r2, r0
 80208a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80208a8:	b1d3      	cbz	r3, 80208e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 80208aa:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80208ac:	4353      	muls	r3, r2
 80208ae:	1c5a      	adds	r2, r3, #1
 80208b0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80208b4:	4a0f      	ldr	r2, [pc, #60]	@ (80208f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80208b6:	121b      	asrs	r3, r3, #8
 80208b8:	6812      	ldr	r2, [r2, #0]
 80208ba:	2bff      	cmp	r3, #255	@ 0xff
 80208bc:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80208c0:	d12e      	bne.n	8020920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80208c2:	0953      	lsrs	r3, r2, #5
 80208c4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80208c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80208cc:	f02c 0c07 	bic.w	ip, ip, #7
 80208d0:	ea43 0c0c 	orr.w	ip, r3, ip
 80208d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80208d8:	ea4c 0202 	orr.w	r2, ip, r2
 80208dc:	f8a8 2000 	strh.w	r2, [r8]
 80208e0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80208e2:	f108 0802 	add.w	r8, r8, #2
 80208e6:	441c      	add	r4, r3
 80208e8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80208ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80208ee:	441e      	add	r6, r3
 80208f0:	e6ba      	b.n	8020668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 80208f2:	bf00      	nop
 80208f4:	20002238 	.word	0x20002238
 80208f8:	2800      	cmp	r0, #0
 80208fa:	d0b9      	beq.n	8020870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 80208fc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80208fe:	442b      	add	r3, r5
 8020900:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020904:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020908:	07db      	lsls	r3, r3, #31
 802090a:	bf54      	ite	pl
 802090c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020910:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020914:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020918:	fa5f f38c 	uxtb.w	r3, ip
 802091c:	930c      	str	r3, [sp, #48]	@ 0x30
 802091e:	e7a7      	b.n	8020870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x428>
 8020920:	fa1f fa83 	uxth.w	sl, r3
 8020924:	43db      	mvns	r3, r3
 8020926:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802092a:	f8b8 e000 	ldrh.w	lr, [r8]
 802092e:	fb11 f10a 	smulbb	r1, r1, sl
 8020932:	b2d2      	uxtb	r2, r2
 8020934:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020938:	fb12 f20a 	smulbb	r2, r2, sl
 802093c:	b2db      	uxtb	r3, r3
 802093e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020942:	fb00 1003 	mla	r0, r0, r3, r1
 8020946:	fa5f fc8c 	uxtb.w	ip, ip
 802094a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802094e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020952:	fb1c fc0a 	smulbb	ip, ip, sl
 8020956:	fa5f fe8e 	uxtb.w	lr, lr
 802095a:	fb0e 2203 	mla	r2, lr, r3, r2
 802095e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020962:	fb01 cc03 	mla	ip, r1, r3, ip
 8020966:	b280      	uxth	r0, r0
 8020968:	b292      	uxth	r2, r2
 802096a:	1c43      	adds	r3, r0, #1
 802096c:	1c51      	adds	r1, r2, #1
 802096e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020972:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8020976:	fa1f fc8c 	uxth.w	ip, ip
 802097a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802097e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8020982:	4308      	orrs	r0, r1
 8020984:	f10c 0101 	add.w	r1, ip, #1
 8020988:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802098c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020990:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020994:	ea40 000c 	orr.w	r0, r0, ip
 8020998:	f8a8 0000 	strh.w	r0, [r8]
 802099c:	e7a0      	b.n	80208e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 802099e:	b017      	add	sp, #92	@ 0x5c
 80209a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080209a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80209a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80209a8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80209ac:	2d00      	cmp	r5, #0
 80209ae:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80209b2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80209b6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80209ba:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80209be:	fb05 0e03 	mla	lr, r5, r3, r0
 80209c2:	f2c0 80b0 	blt.w	8020b26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80209c6:	45a9      	cmp	r9, r5
 80209c8:	f340 80ad 	ble.w	8020b26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80209cc:	2800      	cmp	r0, #0
 80209ce:	f2c0 80a8 	blt.w	8020b22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80209d2:	4580      	cmp	r8, r0
 80209d4:	f340 80a5 	ble.w	8020b22 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80209d8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80209dc:	5d16      	ldrb	r6, [r2, r4]
 80209de:	f01e 0f01 	tst.w	lr, #1
 80209e2:	bf0c      	ite	eq
 80209e4:	f006 060f 	andeq.w	r6, r6, #15
 80209e8:	1136      	asrne	r6, r6, #4
 80209ea:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80209ee:	b2f6      	uxtb	r6, r6
 80209f0:	1c44      	adds	r4, r0, #1
 80209f2:	f100 809b 	bmi.w	8020b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80209f6:	45a0      	cmp	r8, r4
 80209f8:	f340 8098 	ble.w	8020b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80209fc:	2f00      	cmp	r7, #0
 80209fe:	f000 8097 	beq.w	8020b30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8020a02:	f10e 0a01 	add.w	sl, lr, #1
 8020a06:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020a0a:	5d14      	ldrb	r4, [r2, r4]
 8020a0c:	f01a 0f01 	tst.w	sl, #1
 8020a10:	bf0c      	ite	eq
 8020a12:	f004 040f 	andeq.w	r4, r4, #15
 8020a16:	1124      	asrne	r4, r4, #4
 8020a18:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020a1c:	b2e4      	uxtb	r4, r4
 8020a1e:	3501      	adds	r5, #1
 8020a20:	f100 808a 	bmi.w	8020b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020a24:	45a9      	cmp	r9, r5
 8020a26:	f340 8087 	ble.w	8020b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020a2a:	f1bc 0f00 	cmp.w	ip, #0
 8020a2e:	f000 8086 	beq.w	8020b3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8020a32:	2800      	cmp	r0, #0
 8020a34:	db7e      	blt.n	8020b34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020a36:	4580      	cmp	r8, r0
 8020a38:	dd7c      	ble.n	8020b34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020a3a:	eb03 090e 	add.w	r9, r3, lr
 8020a3e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020a42:	5d55      	ldrb	r5, [r2, r5]
 8020a44:	f019 0f01 	tst.w	r9, #1
 8020a48:	bf0c      	ite	eq
 8020a4a:	f005 050f 	andeq.w	r5, r5, #15
 8020a4e:	112d      	asrne	r5, r5, #4
 8020a50:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020a54:	b2ed      	uxtb	r5, r5
 8020a56:	3001      	adds	r0, #1
 8020a58:	d474      	bmi.n	8020b44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020a5a:	4580      	cmp	r8, r0
 8020a5c:	dd72      	ble.n	8020b44 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020a5e:	2f00      	cmp	r7, #0
 8020a60:	d072      	beq.n	8020b48 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8020a62:	3301      	adds	r3, #1
 8020a64:	449e      	add	lr, r3
 8020a66:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020a6a:	5cd0      	ldrb	r0, [r2, r3]
 8020a6c:	f01e 0f01 	tst.w	lr, #1
 8020a70:	bf0c      	ite	eq
 8020a72:	f000 000f 	andeq.w	r0, r0, #15
 8020a76:	1100      	asrne	r0, r0, #4
 8020a78:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020a7c:	b2c3      	uxtb	r3, r0
 8020a7e:	b2ba      	uxth	r2, r7
 8020a80:	fa1f fc8c 	uxth.w	ip, ip
 8020a84:	fb02 f00c 	mul.w	r0, r2, ip
 8020a88:	0112      	lsls	r2, r2, #4
 8020a8a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020a8e:	1a12      	subs	r2, r2, r0
 8020a90:	b292      	uxth	r2, r2
 8020a92:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020a96:	4362      	muls	r2, r4
 8020a98:	fa1f fc8c 	uxth.w	ip, ip
 8020a9c:	eba7 070c 	sub.w	r7, r7, ip
 8020aa0:	b2bf      	uxth	r7, r7
 8020aa2:	fb06 2207 	mla	r2, r6, r7, r2
 8020aa6:	fb0c 2505 	mla	r5, ip, r5, r2
 8020aaa:	fb00 5303 	mla	r3, r0, r3, r5
 8020aae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ab2:	b3a3      	cbz	r3, 8020b1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8020ab4:	4a25      	ldr	r2, [pc, #148]	@ (8020b4c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8020ab6:	880e      	ldrh	r6, [r1, #0]
 8020ab8:	6815      	ldr	r5, [r2, #0]
 8020aba:	b29a      	uxth	r2, r3
 8020abc:	43db      	mvns	r3, r3
 8020abe:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8020ac2:	fb10 f002 	smulbb	r0, r0, r2
 8020ac6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8020aca:	b2ed      	uxtb	r5, r5
 8020acc:	1234      	asrs	r4, r6, #8
 8020ace:	fb17 f702 	smulbb	r7, r7, r2
 8020ad2:	fb15 f202 	smulbb	r2, r5, r2
 8020ad6:	b2db      	uxtb	r3, r3
 8020ad8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020adc:	fb04 0403 	mla	r4, r4, r3, r0
 8020ae0:	10f0      	asrs	r0, r6, #3
 8020ae2:	00f6      	lsls	r6, r6, #3
 8020ae4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020ae8:	b2f6      	uxtb	r6, r6
 8020aea:	fb00 7003 	mla	r0, r0, r3, r7
 8020aee:	fb06 2303 	mla	r3, r6, r3, r2
 8020af2:	b2a4      	uxth	r4, r4
 8020af4:	b29a      	uxth	r2, r3
 8020af6:	1c63      	adds	r3, r4, #1
 8020af8:	b280      	uxth	r0, r0
 8020afa:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020afe:	1c53      	adds	r3, r2, #1
 8020b00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b04:	1c42      	adds	r2, r0, #1
 8020b06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020b0a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020b0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020b12:	0940      	lsrs	r0, r0, #5
 8020b14:	4323      	orrs	r3, r4
 8020b16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020b1a:	4303      	orrs	r3, r0
 8020b1c:	800b      	strh	r3, [r1, #0]
 8020b1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b22:	2600      	movs	r6, #0
 8020b24:	e764      	b.n	80209f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8020b26:	2400      	movs	r4, #0
 8020b28:	4626      	mov	r6, r4
 8020b2a:	e778      	b.n	8020a1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020b2c:	2400      	movs	r4, #0
 8020b2e:	e776      	b.n	8020a1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020b30:	463c      	mov	r4, r7
 8020b32:	e774      	b.n	8020a1e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020b34:	2500      	movs	r5, #0
 8020b36:	e78e      	b.n	8020a56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020b38:	2300      	movs	r3, #0
 8020b3a:	461d      	mov	r5, r3
 8020b3c:	e79f      	b.n	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020b3e:	4663      	mov	r3, ip
 8020b40:	4665      	mov	r5, ip
 8020b42:	e79c      	b.n	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020b44:	2300      	movs	r3, #0
 8020b46:	e79a      	b.n	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020b48:	463b      	mov	r3, r7
 8020b4a:	e798      	b.n	8020a7e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020b4c:	20002238 	.word	0x20002238

08020b50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b54:	b093      	sub	sp, #76	@ 0x4c
 8020b56:	920c      	str	r2, [sp, #48]	@ 0x30
 8020b58:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020b5a:	9011      	str	r0, [sp, #68]	@ 0x44
 8020b5c:	6850      	ldr	r0, [r2, #4]
 8020b5e:	9107      	str	r1, [sp, #28]
 8020b60:	461d      	mov	r5, r3
 8020b62:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8020b66:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020b6a:	fb00 1303 	mla	r3, r0, r3, r1
 8020b6e:	6812      	ldr	r2, [r2, #0]
 8020b70:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020b74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b76:	689b      	ldr	r3, [r3, #8]
 8020b78:	3301      	adds	r3, #1
 8020b7a:	f023 0301 	bic.w	r3, r3, #1
 8020b7e:	9306      	str	r3, [sp, #24]
 8020b80:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b82:	681f      	ldr	r7, [r3, #0]
 8020b84:	9b07      	ldr	r3, [sp, #28]
 8020b86:	2b00      	cmp	r3, #0
 8020b88:	dc03      	bgt.n	8020b92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020b8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020b8c:	2b00      	cmp	r3, #0
 8020b8e:	f340 8265 	ble.w	802105c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8020b92:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b9c:	1e48      	subs	r0, r1, #1
 8020b9e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020ba2:	2d00      	cmp	r5, #0
 8020ba4:	f340 80b7 	ble.w	8020d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020ba8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020bac:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020bb0:	d406      	bmi.n	8020bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020bb2:	4586      	cmp	lr, r0
 8020bb4:	da04      	bge.n	8020bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020bb6:	2b00      	cmp	r3, #0
 8020bb8:	db02      	blt.n	8020bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8020bba:	4563      	cmp	r3, ip
 8020bbc:	f2c0 80ac 	blt.w	8020d18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8020bc0:	f11e 0e01 	adds.w	lr, lr, #1
 8020bc4:	f100 809f 	bmi.w	8020d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020bc8:	4571      	cmp	r1, lr
 8020bca:	f2c0 809c 	blt.w	8020d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020bce:	3301      	adds	r3, #1
 8020bd0:	f100 8099 	bmi.w	8020d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020bd4:	429a      	cmp	r2, r3
 8020bd6:	f2c0 8096 	blt.w	8020d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8020bda:	46c8      	mov	r8, r9
 8020bdc:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020be0:	9509      	str	r5, [sp, #36]	@ 0x24
 8020be2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020be4:	2b00      	cmp	r3, #0
 8020be6:	f340 80b5 	ble.w	8020d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020bea:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020bee:	9308      	str	r3, [sp, #32]
 8020bf0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020bf2:	1430      	asrs	r0, r6, #16
 8020bf4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020bf8:	1423      	asrs	r3, r4, #16
 8020bfa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020bfe:	f100 813e 	bmi.w	8020e7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020c02:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020c06:	455b      	cmp	r3, fp
 8020c08:	f280 8139 	bge.w	8020e7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020c0c:	2800      	cmp	r0, #0
 8020c0e:	f2c0 8136 	blt.w	8020e7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020c12:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020c16:	4558      	cmp	r0, fp
 8020c18:	f280 8131 	bge.w	8020e7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020c1c:	9a06      	ldr	r2, [sp, #24]
 8020c1e:	fb00 3302 	mla	r3, r0, r2, r3
 8020c22:	0858      	lsrs	r0, r3, #1
 8020c24:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020c28:	07da      	lsls	r2, r3, #31
 8020c2a:	bf54      	ite	pl
 8020c2c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020c30:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020c34:	9a08      	ldr	r2, [sp, #32]
 8020c36:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020c3a:	fa5f fc8c 	uxtb.w	ip, ip
 8020c3e:	2a00      	cmp	r2, #0
 8020c40:	f000 80cb 	beq.w	8020dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8020c44:	1c58      	adds	r0, r3, #1
 8020c46:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020c4a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020c4e:	07c0      	lsls	r0, r0, #31
 8020c50:	bf54      	ite	pl
 8020c52:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020c56:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020c5a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020c5e:	fa5f fe8e 	uxtb.w	lr, lr
 8020c62:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8020c66:	b1b9      	cbz	r1, 8020c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020c68:	4453      	add	r3, sl
 8020c6a:	0858      	lsrs	r0, r3, #1
 8020c6c:	5c38      	ldrb	r0, [r7, r0]
 8020c6e:	07da      	lsls	r2, r3, #31
 8020c70:	bf54      	ite	pl
 8020c72:	f000 000f 	andpl.w	r0, r0, #15
 8020c76:	1100      	asrmi	r0, r0, #4
 8020c78:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020c7c:	b2c0      	uxtb	r0, r0
 8020c7e:	900a      	str	r0, [sp, #40]	@ 0x28
 8020c80:	1c58      	adds	r0, r3, #1
 8020c82:	0843      	lsrs	r3, r0, #1
 8020c84:	5cfb      	ldrb	r3, [r7, r3]
 8020c86:	07c2      	lsls	r2, r0, #31
 8020c88:	bf54      	ite	pl
 8020c8a:	f003 030f 	andpl.w	r3, r3, #15
 8020c8e:	111b      	asrmi	r3, r3, #4
 8020c90:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020c94:	b2db      	uxtb	r3, r3
 8020c96:	930e      	str	r3, [sp, #56]	@ 0x38
 8020c98:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020c9c:	b289      	uxth	r1, r1
 8020c9e:	fb02 f301 	mul.w	r3, r2, r1
 8020ca2:	0112      	lsls	r2, r2, #4
 8020ca4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020ca8:	b289      	uxth	r1, r1
 8020caa:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020cae:	1a40      	subs	r0, r0, r1
 8020cb0:	fa1f fe80 	uxth.w	lr, r0
 8020cb4:	1ad2      	subs	r2, r2, r3
 8020cb6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020cb8:	b292      	uxth	r2, r2
 8020cba:	4342      	muls	r2, r0
 8020cbc:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8020cc0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020cc2:	fb01 c102 	mla	r1, r1, r2, ip
 8020cc6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020cc8:	fb03 1302 	mla	r3, r3, r2, r1
 8020ccc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020cd0:	2bff      	cmp	r3, #255	@ 0xff
 8020cd2:	f040 8093 	bne.w	8020dfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 8020cd6:	4bbe      	ldr	r3, [pc, #760]	@ (8020fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 8020cd8:	681a      	ldr	r2, [r3, #0]
 8020cda:	4bbe      	ldr	r3, [pc, #760]	@ (8020fd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020cdc:	0951      	lsrs	r1, r2, #5
 8020cde:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020ce2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020ce6:	430b      	orrs	r3, r1
 8020ce8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020cec:	4313      	orrs	r3, r2
 8020cee:	f8a8 3000 	strh.w	r3, [r8]
 8020cf2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020cf4:	f108 0802 	add.w	r8, r8, #2
 8020cf8:	441c      	add	r4, r3
 8020cfa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020cfc:	441e      	add	r6, r3
 8020cfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d00:	3b01      	subs	r3, #1
 8020d02:	9309      	str	r3, [sp, #36]	@ 0x24
 8020d04:	e76d      	b.n	8020be2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020d06:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020d08:	3d01      	subs	r5, #1
 8020d0a:	441c      	add	r4, r3
 8020d0c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020d0e:	f109 0902 	add.w	r9, r9, #2
 8020d12:	441e      	add	r6, r3
 8020d14:	e745      	b.n	8020ba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020d16:	d021      	beq.n	8020d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8020d18:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020d1a:	1e6b      	subs	r3, r5, #1
 8020d1c:	fb00 4003 	mla	r0, r0, r3, r4
 8020d20:	1400      	asrs	r0, r0, #16
 8020d22:	f53f af5a 	bmi.w	8020bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020d26:	3901      	subs	r1, #1
 8020d28:	4288      	cmp	r0, r1
 8020d2a:	f6bf af56 	bge.w	8020bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020d2e:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020d30:	fb01 6303 	mla	r3, r1, r3, r6
 8020d34:	141b      	asrs	r3, r3, #16
 8020d36:	f53f af50 	bmi.w	8020bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020d3a:	3a01      	subs	r2, #1
 8020d3c:	4293      	cmp	r3, r2
 8020d3e:	f6bf af4c 	bge.w	8020bda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020d42:	46a8      	mov	r8, r5
 8020d44:	46ce      	mov	lr, r9
 8020d46:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020d4a:	9308      	str	r3, [sp, #32]
 8020d4c:	f1b8 0f00 	cmp.w	r8, #0
 8020d50:	f300 80b5 	bgt.w	8020ebe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8020d54:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020d58:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020d5c:	9b07      	ldr	r3, [sp, #28]
 8020d5e:	2b00      	cmp	r3, #0
 8020d60:	f340 817c 	ble.w	802105c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8020d64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020d68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020d6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020d70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020d74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d78:	eef0 6a62 	vmov.f32	s13, s5
 8020d7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020d80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020d8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d90:	ee16 4a90 	vmov	r4, s13
 8020d94:	eef0 6a43 	vmov.f32	s13, s6
 8020d98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d9c:	ee12 2a90 	vmov	r2, s5
 8020da0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020da4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020da6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020daa:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dae:	ee13 2a10 	vmov	r2, s6
 8020db2:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020db4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020db6:	ee16 6a90 	vmov	r6, s13
 8020dba:	fb92 f3f3 	sdiv	r3, r2, r3
 8020dbe:	9320      	str	r3, [sp, #128]	@ 0x80
 8020dc0:	9b07      	ldr	r3, [sp, #28]
 8020dc2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020dc4:	3b01      	subs	r3, #1
 8020dc6:	9307      	str	r3, [sp, #28]
 8020dc8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020dca:	bf0c      	ite	eq
 8020dcc:	4615      	moveq	r5, r2
 8020dce:	461d      	movne	r5, r3
 8020dd0:	eeb0 3a67 	vmov.f32	s6, s15
 8020dd4:	eef0 2a47 	vmov.f32	s5, s14
 8020dd8:	e6d4      	b.n	8020b84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020dda:	2900      	cmp	r1, #0
 8020ddc:	f43f af5c 	beq.w	8020c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020de0:	eb0a 0003 	add.w	r0, sl, r3
 8020de4:	0843      	lsrs	r3, r0, #1
 8020de6:	5cfb      	ldrb	r3, [r7, r3]
 8020de8:	07c0      	lsls	r0, r0, #31
 8020dea:	bf54      	ite	pl
 8020dec:	f003 030f 	andpl.w	r3, r3, #15
 8020df0:	111b      	asrmi	r3, r3, #4
 8020df2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020df6:	b2db      	uxtb	r3, r3
 8020df8:	930a      	str	r3, [sp, #40]	@ 0x28
 8020dfa:	e74d      	b.n	8020c98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8020dfc:	2b00      	cmp	r3, #0
 8020dfe:	f43f af78 	beq.w	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e02:	fa1f fe83 	uxth.w	lr, r3
 8020e06:	43db      	mvns	r3, r3
 8020e08:	4a71      	ldr	r2, [pc, #452]	@ (8020fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 8020e0a:	f8b8 c000 	ldrh.w	ip, [r8]
 8020e0e:	6810      	ldr	r0, [r2, #0]
 8020e10:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020e14:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020e18:	fb12 f20e 	smulbb	r2, r2, lr
 8020e1c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020e20:	b2c0      	uxtb	r0, r0
 8020e22:	fb1b fb0e 	smulbb	fp, fp, lr
 8020e26:	fb10 fe0e 	smulbb	lr, r0, lr
 8020e2a:	b2db      	uxtb	r3, r3
 8020e2c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020e30:	fb01 2103 	mla	r1, r1, r3, r2
 8020e34:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020e38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020e3c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020e40:	fa5f fc8c 	uxtb.w	ip, ip
 8020e44:	fb02 b203 	mla	r2, r2, r3, fp
 8020e48:	fb0c e303 	mla	r3, ip, r3, lr
 8020e4c:	b289      	uxth	r1, r1
 8020e4e:	1c48      	adds	r0, r1, #1
 8020e50:	b292      	uxth	r2, r2
 8020e52:	b29b      	uxth	r3, r3
 8020e54:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020e58:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020e5c:	f102 0b01 	add.w	fp, r2, #1
 8020e60:	1c59      	adds	r1, r3, #1
 8020e62:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020e66:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020e6a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020e6e:	0952      	lsrs	r2, r2, #5
 8020e70:	4301      	orrs	r1, r0
 8020e72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020e76:	4311      	orrs	r1, r2
 8020e78:	f8a8 1000 	strh.w	r1, [r8]
 8020e7c:	e739      	b.n	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e7e:	f113 0b01 	adds.w	fp, r3, #1
 8020e82:	f53f af36 	bmi.w	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e86:	45dc      	cmp	ip, fp
 8020e88:	f6ff af33 	blt.w	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e8c:	f110 0b01 	adds.w	fp, r0, #1
 8020e90:	f53f af2f 	bmi.w	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e94:	45de      	cmp	lr, fp
 8020e96:	f6ff af2c 	blt.w	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020e9a:	9a08      	ldr	r2, [sp, #32]
 8020e9c:	9302      	str	r3, [sp, #8]
 8020e9e:	fa0f f38e 	sxth.w	r3, lr
 8020ea2:	9301      	str	r3, [sp, #4]
 8020ea4:	fa0f f38c 	sxth.w	r3, ip
 8020ea8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020eac:	9105      	str	r1, [sp, #20]
 8020eae:	9300      	str	r3, [sp, #0]
 8020eb0:	463a      	mov	r2, r7
 8020eb2:	4653      	mov	r3, sl
 8020eb4:	4641      	mov	r1, r8
 8020eb6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020eb8:	f7ff fd74 	bl	80209a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020ebc:	e719      	b.n	8020cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020ebe:	9906      	ldr	r1, [sp, #24]
 8020ec0:	1422      	asrs	r2, r4, #16
 8020ec2:	1433      	asrs	r3, r6, #16
 8020ec4:	fb01 2303 	mla	r3, r1, r3, r2
 8020ec8:	085a      	lsrs	r2, r3, #1
 8020eca:	5cba      	ldrb	r2, [r7, r2]
 8020ecc:	07d9      	lsls	r1, r3, #31
 8020ece:	bf54      	ite	pl
 8020ed0:	f002 020f 	andpl.w	r2, r2, #15
 8020ed4:	1112      	asrmi	r2, r2, #4
 8020ed6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020eda:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020ede:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020ee2:	b2d2      	uxtb	r2, r2
 8020ee4:	2800      	cmp	r0, #0
 8020ee6:	d062      	beq.n	8020fae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x45e>
 8020ee8:	f103 0a01 	add.w	sl, r3, #1
 8020eec:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020ef0:	5c79      	ldrb	r1, [r7, r1]
 8020ef2:	f01a 0f01 	tst.w	sl, #1
 8020ef6:	bf0c      	ite	eq
 8020ef8:	f001 010f 	andeq.w	r1, r1, #15
 8020efc:	1109      	asrne	r1, r1, #4
 8020efe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020f02:	b2c9      	uxtb	r1, r1
 8020f04:	910f      	str	r1, [sp, #60]	@ 0x3c
 8020f06:	f1bc 0f00 	cmp.w	ip, #0
 8020f0a:	d019      	beq.n	8020f40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8020f0c:	9908      	ldr	r1, [sp, #32]
 8020f0e:	440b      	add	r3, r1
 8020f10:	0859      	lsrs	r1, r3, #1
 8020f12:	5c79      	ldrb	r1, [r7, r1]
 8020f14:	f013 0f01 	tst.w	r3, #1
 8020f18:	bf0c      	ite	eq
 8020f1a:	f001 010f 	andeq.w	r1, r1, #15
 8020f1e:	1109      	asrne	r1, r1, #4
 8020f20:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020f24:	b2c9      	uxtb	r1, r1
 8020f26:	3301      	adds	r3, #1
 8020f28:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020f2a:	0859      	lsrs	r1, r3, #1
 8020f2c:	5c79      	ldrb	r1, [r7, r1]
 8020f2e:	07db      	lsls	r3, r3, #31
 8020f30:	bf54      	ite	pl
 8020f32:	f001 010f 	andpl.w	r1, r1, #15
 8020f36:	1109      	asrmi	r1, r1, #4
 8020f38:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020f3c:	b2c9      	uxtb	r1, r1
 8020f3e:	9110      	str	r1, [sp, #64]	@ 0x40
 8020f40:	b280      	uxth	r0, r0
 8020f42:	fa1f fc8c 	uxth.w	ip, ip
 8020f46:	fb00 f30c 	mul.w	r3, r0, ip
 8020f4a:	0100      	lsls	r0, r0, #4
 8020f4c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020f50:	fa1f fc8c 	uxth.w	ip, ip
 8020f54:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020f58:	eba1 010c 	sub.w	r1, r1, ip
 8020f5c:	fa1f fa81 	uxth.w	sl, r1
 8020f60:	1ac0      	subs	r0, r0, r3
 8020f62:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020f64:	b280      	uxth	r0, r0
 8020f66:	4348      	muls	r0, r1
 8020f68:	fb02 020a 	mla	r2, r2, sl, r0
 8020f6c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8020f6e:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020f72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020f74:	fb03 c302 	mla	r3, r3, r2, ip
 8020f78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020f7c:	2bff      	cmp	r3, #255	@ 0xff
 8020f7e:	d12b      	bne.n	8020fd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8020f80:	4b13      	ldr	r3, [pc, #76]	@ (8020fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>)
 8020f82:	681a      	ldr	r2, [r3, #0]
 8020f84:	4b13      	ldr	r3, [pc, #76]	@ (8020fd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020f86:	0951      	lsrs	r1, r2, #5
 8020f88:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020f8c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020f90:	430b      	orrs	r3, r1
 8020f92:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020f96:	4313      	orrs	r3, r2
 8020f98:	f8ae 3000 	strh.w	r3, [lr]
 8020f9c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020f9e:	f10e 0e02 	add.w	lr, lr, #2
 8020fa2:	441c      	add	r4, r3
 8020fa4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020fa6:	f108 38ff 	add.w	r8, r8, #4294967295
 8020faa:	441e      	add	r6, r3
 8020fac:	e6ce      	b.n	8020d4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8020fae:	f1bc 0f00 	cmp.w	ip, #0
 8020fb2:	d0c5      	beq.n	8020f40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8020fb4:	9908      	ldr	r1, [sp, #32]
 8020fb6:	440b      	add	r3, r1
 8020fb8:	0859      	lsrs	r1, r3, #1
 8020fba:	5c79      	ldrb	r1, [r7, r1]
 8020fbc:	07db      	lsls	r3, r3, #31
 8020fbe:	bf54      	ite	pl
 8020fc0:	f001 010f 	andpl.w	r1, r1, #15
 8020fc4:	1109      	asrmi	r1, r1, #4
 8020fc6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020fca:	b2c9      	uxtb	r1, r1
 8020fcc:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020fce:	e7b7      	b.n	8020f40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8020fd0:	20002238 	.word	0x20002238
 8020fd4:	fffff800 	.word	0xfffff800
 8020fd8:	2b00      	cmp	r3, #0
 8020fda:	d0df      	beq.n	8020f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 8020fdc:	fa1f fa83 	uxth.w	sl, r3
 8020fe0:	43db      	mvns	r3, r3
 8020fe2:	4a20      	ldr	r2, [pc, #128]	@ (8021064 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>)
 8020fe4:	f8be c000 	ldrh.w	ip, [lr]
 8020fe8:	6810      	ldr	r0, [r2, #0]
 8020fea:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020fee:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020ff2:	fb12 f20a 	smulbb	r2, r2, sl
 8020ff6:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020ffa:	b2c0      	uxtb	r0, r0
 8020ffc:	fb10 f00a 	smulbb	r0, r0, sl
 8021000:	b2db      	uxtb	r3, r3
 8021002:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021006:	fb01 2103 	mla	r1, r1, r3, r2
 802100a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802100e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021012:	fb1b fb0a 	smulbb	fp, fp, sl
 8021016:	fa5f fc8c 	uxtb.w	ip, ip
 802101a:	fb0c 0003 	mla	r0, ip, r3, r0
 802101e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021022:	fb02 b203 	mla	r2, r2, r3, fp
 8021026:	b289      	uxth	r1, r1
 8021028:	b280      	uxth	r0, r0
 802102a:	1c4b      	adds	r3, r1, #1
 802102c:	f100 0b01 	add.w	fp, r0, #1
 8021030:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021034:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8021038:	b292      	uxth	r2, r2
 802103a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802103e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8021042:	ea4b 0101 	orr.w	r1, fp, r1
 8021046:	f102 0b01 	add.w	fp, r2, #1
 802104a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802104e:	0952      	lsrs	r2, r2, #5
 8021050:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021054:	4311      	orrs	r1, r2
 8021056:	f8ae 1000 	strh.w	r1, [lr]
 802105a:	e79f      	b.n	8020f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44c>
 802105c:	b013      	add	sp, #76	@ 0x4c
 802105e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021062:	bf00      	nop
 8021064:	20002238 	.word	0x20002238

08021068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8021068:	b570      	push	{r4, r5, r6, lr}
 802106a:	1208      	asrs	r0, r1, #8
 802106c:	b29e      	uxth	r6, r3
 802106e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8021072:	1213      	asrs	r3, r2, #8
 8021074:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021078:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802107c:	fb13 f305 	smulbb	r3, r3, r5
 8021080:	fb10 f006 	smulbb	r0, r0, r6
 8021084:	10cc      	asrs	r4, r1, #3
 8021086:	4418      	add	r0, r3
 8021088:	10d3      	asrs	r3, r2, #3
 802108a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802108e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021092:	fb13 f305 	smulbb	r3, r3, r5
 8021096:	fb14 f406 	smulbb	r4, r4, r6
 802109a:	00c9      	lsls	r1, r1, #3
 802109c:	00d2      	lsls	r2, r2, #3
 802109e:	441c      	add	r4, r3
 80210a0:	b2d2      	uxtb	r2, r2
 80210a2:	b2cb      	uxtb	r3, r1
 80210a4:	fb12 f205 	smulbb	r2, r2, r5
 80210a8:	fb13 f306 	smulbb	r3, r3, r6
 80210ac:	b280      	uxth	r0, r0
 80210ae:	4413      	add	r3, r2
 80210b0:	1c42      	adds	r2, r0, #1
 80210b2:	b29b      	uxth	r3, r3
 80210b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80210b8:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 80210bc:	1c58      	adds	r0, r3, #1
 80210be:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80210c2:	b2a4      	uxth	r4, r4
 80210c4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80210c8:	4310      	orrs	r0, r2
 80210ca:	1c62      	adds	r2, r4, #1
 80210cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80210d0:	0964      	lsrs	r4, r4, #5
 80210d2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80210d6:	4320      	orrs	r0, r4
 80210d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080210dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80210dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80210e0:	b08f      	sub	sp, #60	@ 0x3c
 80210e2:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80210e6:	461c      	mov	r4, r3
 80210e8:	9004      	str	r0, [sp, #16]
 80210ea:	460d      	mov	r5, r1
 80210ec:	4616      	mov	r6, r2
 80210ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80210f0:	2f00      	cmp	r7, #0
 80210f2:	f000 80f5 	beq.w	80212e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x204>
 80210f6:	f04f 0802 	mov.w	r8, #2
 80210fa:	6820      	ldr	r0, [r4, #0]
 80210fc:	6861      	ldr	r1, [r4, #4]
 80210fe:	aa0a      	add	r2, sp, #40	@ 0x28
 8021100:	c203      	stmia	r2!, {r0, r1}
 8021102:	6818      	ldr	r0, [r3, #0]
 8021104:	6859      	ldr	r1, [r3, #4]
 8021106:	aa0c      	add	r2, sp, #48	@ 0x30
 8021108:	c203      	stmia	r2!, {r0, r1}
 802110a:	a80a      	add	r0, sp, #40	@ 0x28
 802110c:	f7ee fe6a 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021110:	4621      	mov	r1, r4
 8021112:	a80c      	add	r0, sp, #48	@ 0x30
 8021114:	f7ee fe8e 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021118:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802111c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021120:	f002 0301 	and.w	r3, r2, #1
 8021124:	9306      	str	r3, [sp, #24]
 8021126:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802112a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802112e:	f003 0101 	and.w	r1, r3, #1
 8021132:	9105      	str	r1, [sp, #20]
 8021134:	9805      	ldr	r0, [sp, #20]
 8021136:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 802113a:	4403      	add	r3, r0
 802113c:	fb01 2303 	mla	r3, r1, r3, r2
 8021140:	fb93 f3f8 	sdiv	r3, r3, r8
 8021144:	441d      	add	r5, r3
 8021146:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802114a:	3604      	adds	r6, #4
 802114c:	441a      	add	r2, r3
 802114e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021152:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021156:	4419      	add	r1, r3
 8021158:	4b63      	ldr	r3, [pc, #396]	@ (80212e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802115a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802115e:	6818      	ldr	r0, [r3, #0]
 8021160:	6803      	ldr	r3, [r0, #0]
 8021162:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021164:	4798      	blx	r3
 8021166:	4a61      	ldr	r2, [pc, #388]	@ (80212ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8021168:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802116c:	8813      	ldrh	r3, [r2, #0]
 802116e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8021172:	2fff      	cmp	r7, #255	@ 0xff
 8021174:	fb03 a404 	mla	r4, r3, r4, sl
 8021178:	4611      	mov	r1, r2
 802117a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802117e:	fb03 fb0b 	mul.w	fp, r3, fp
 8021182:	d06b      	beq.n	802125c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8021184:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8021188:	9303      	str	r3, [sp, #12]
 802118a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802118e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021192:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8021196:	9b07      	ldr	r3, [sp, #28]
 8021198:	42a3      	cmp	r3, r4
 802119a:	f240 809c 	bls.w	80212d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fa>
 802119e:	9b06      	ldr	r3, [sp, #24]
 80211a0:	2b00      	cmp	r3, #0
 80211a2:	d039      	beq.n	8021218 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 80211a4:	782b      	ldrb	r3, [r5, #0]
 80211a6:	8822      	ldrh	r2, [r4, #0]
 80211a8:	f003 030f 	and.w	r3, r3, #15
 80211ac:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80211b0:	9b03      	ldr	r3, [sp, #12]
 80211b2:	9804      	ldr	r0, [sp, #16]
 80211b4:	9300      	str	r3, [sp, #0]
 80211b6:	463b      	mov	r3, r7
 80211b8:	f7ff ff56 	bl	8021068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80211bc:	f105 0801 	add.w	r8, r5, #1
 80211c0:	f824 0b02 	strh.w	r0, [r4], #2
 80211c4:	f109 3bff 	add.w	fp, r9, #4294967295
 80211c8:	f1bb 0f01 	cmp.w	fp, #1
 80211cc:	46a2      	mov	sl, r4
 80211ce:	f104 0404 	add.w	r4, r4, #4
 80211d2:	dd24      	ble.n	802121e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 80211d4:	f898 3000 	ldrb.w	r3, [r8]
 80211d8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80211dc:	091b      	lsrs	r3, r3, #4
 80211de:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80211e2:	9b03      	ldr	r3, [sp, #12]
 80211e4:	9804      	ldr	r0, [sp, #16]
 80211e6:	9300      	str	r3, [sp, #0]
 80211e8:	463b      	mov	r3, r7
 80211ea:	f7ff ff3d 	bl	8021068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80211ee:	f824 0c04 	strh.w	r0, [r4, #-4]
 80211f2:	f818 3b01 	ldrb.w	r3, [r8], #1
 80211f6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80211fa:	f003 030f 	and.w	r3, r3, #15
 80211fe:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021202:	9b03      	ldr	r3, [sp, #12]
 8021204:	9804      	ldr	r0, [sp, #16]
 8021206:	9300      	str	r3, [sp, #0]
 8021208:	463b      	mov	r3, r7
 802120a:	f7ff ff2d 	bl	8021068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802120e:	f1ab 0b02 	sub.w	fp, fp, #2
 8021212:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021216:	e7d7      	b.n	80211c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8021218:	46a8      	mov	r8, r5
 802121a:	46cb      	mov	fp, r9
 802121c:	e7d4      	b.n	80211c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 802121e:	d10e      	bne.n	802123e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8021220:	f898 3000 	ldrb.w	r3, [r8]
 8021224:	f8ba 2000 	ldrh.w	r2, [sl]
 8021228:	091b      	lsrs	r3, r3, #4
 802122a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802122e:	9b03      	ldr	r3, [sp, #12]
 8021230:	9804      	ldr	r0, [sp, #16]
 8021232:	9300      	str	r3, [sp, #0]
 8021234:	463b      	mov	r3, r7
 8021236:	f7ff ff17 	bl	8021068 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802123a:	f82a 0b02 	strh.w	r0, [sl], #2
 802123e:	9b08      	ldr	r3, [sp, #32]
 8021240:	9a05      	ldr	r2, [sp, #20]
 8021242:	881c      	ldrh	r4, [r3, #0]
 8021244:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021248:	eba4 0409 	sub.w	r4, r4, r9
 802124c:	4413      	add	r3, r2
 802124e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021250:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8021254:	fb93 f3f2 	sdiv	r3, r3, r2
 8021258:	441d      	add	r5, r3
 802125a:	e79c      	b.n	8021196 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 802125c:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8021260:	45a3      	cmp	fp, r4
 8021262:	d938      	bls.n	80212d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fa>
 8021264:	9b06      	ldr	r3, [sp, #24]
 8021266:	b1f3      	cbz	r3, 80212a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ca>
 8021268:	782b      	ldrb	r3, [r5, #0]
 802126a:	1c6a      	adds	r2, r5, #1
 802126c:	f003 030f 	and.w	r3, r3, #15
 8021270:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021274:	f109 30ff 	add.w	r0, r9, #4294967295
 8021278:	8023      	strh	r3, [r4, #0]
 802127a:	3402      	adds	r4, #2
 802127c:	2801      	cmp	r0, #1
 802127e:	4623      	mov	r3, r4
 8021280:	f104 0404 	add.w	r4, r4, #4
 8021284:	dd12      	ble.n	80212ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d0>
 8021286:	7813      	ldrb	r3, [r2, #0]
 8021288:	3802      	subs	r0, #2
 802128a:	091b      	lsrs	r3, r3, #4
 802128c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8021290:	f824 3c04 	strh.w	r3, [r4, #-4]
 8021294:	f812 3b01 	ldrb.w	r3, [r2], #1
 8021298:	f003 030f 	and.w	r3, r3, #15
 802129c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80212a0:	f824 3c02 	strh.w	r3, [r4, #-2]
 80212a4:	e7ea      	b.n	802127c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a0>
 80212a6:	462a      	mov	r2, r5
 80212a8:	4648      	mov	r0, r9
 80212aa:	e7e7      	b.n	802127c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a0>
 80212ac:	d106      	bne.n	80212bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 80212ae:	7812      	ldrb	r2, [r2, #0]
 80212b0:	3302      	adds	r3, #2
 80212b2:	0912      	lsrs	r2, r2, #4
 80212b4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80212b8:	f823 2c02 	strh.w	r2, [r3, #-2]
 80212bc:	880c      	ldrh	r4, [r1, #0]
 80212be:	9a05      	ldr	r2, [sp, #20]
 80212c0:	eba4 0409 	sub.w	r4, r4, r9
 80212c4:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80212c8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80212cc:	4413      	add	r3, r2
 80212ce:	fb93 f3f8 	sdiv	r3, r3, r8
 80212d2:	441d      	add	r5, r3
 80212d4:	e7c4      	b.n	8021260 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 80212d6:	4b04      	ldr	r3, [pc, #16]	@ (80212e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80212d8:	6818      	ldr	r0, [r3, #0]
 80212da:	6803      	ldr	r3, [r0, #0]
 80212dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80212de:	4798      	blx	r3
 80212e0:	b00f      	add	sp, #60	@ 0x3c
 80212e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212e6:	bf00      	nop
 80212e8:	20002230 	.word	0x20002230
 80212ec:	2000222a 	.word	0x2000222a

080212f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80212f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80212f2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80212f6:	0a0f      	lsrs	r7, r1, #8
 80212f8:	2dff      	cmp	r5, #255	@ 0xff
 80212fa:	d10c      	bne.n	8021316 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80212fc:	2bff      	cmp	r3, #255	@ 0xff
 80212fe:	d10a      	bne.n	8021316 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8021300:	4b25      	ldr	r3, [pc, #148]	@ (8021398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021302:	0948      	lsrs	r0, r1, #5
 8021304:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021308:	403b      	ands	r3, r7
 802130a:	4318      	orrs	r0, r3
 802130c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021310:	4308      	orrs	r0, r1
 8021312:	b280      	uxth	r0, r0
 8021314:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021316:	fb15 f503 	smulbb	r5, r5, r3
 802131a:	b2ab      	uxth	r3, r5
 802131c:	1c5d      	adds	r5, r3, #1
 802131e:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021322:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021326:	fa1f fc85 	uxth.w	ip, r5
 802132a:	43ed      	mvns	r5, r5
 802132c:	1214      	asrs	r4, r2, #8
 802132e:	10d6      	asrs	r6, r2, #3
 8021330:	00d0      	lsls	r0, r2, #3
 8021332:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8021336:	fb12 f20c 	smulbb	r2, r2, ip
 802133a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802133e:	b2eb      	uxtb	r3, r5
 8021340:	b2c0      	uxtb	r0, r0
 8021342:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021346:	fb04 2403 	mla	r4, r4, r3, r2
 802134a:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802134e:	b2c8      	uxtb	r0, r1
 8021350:	b2fd      	uxtb	r5, r7
 8021352:	fb10 f00c 	smulbb	r0, r0, ip
 8021356:	fb15 f50c 	smulbb	r5, r5, ip
 802135a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 802135e:	fb02 0003 	mla	r0, r2, r3, r0
 8021362:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8021366:	fb06 5503 	mla	r5, r6, r3, r5
 802136a:	b2a4      	uxth	r4, r4
 802136c:	b283      	uxth	r3, r0
 802136e:	1c60      	adds	r0, r4, #1
 8021370:	b2ad      	uxth	r5, r5
 8021372:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8021376:	1c58      	adds	r0, r3, #1
 8021378:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802137c:	1c6b      	adds	r3, r5, #1
 802137e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021382:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021386:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802138a:	096d      	lsrs	r5, r5, #5
 802138c:	4320      	orrs	r0, r4
 802138e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021392:	4328      	orrs	r0, r5
 8021394:	e7be      	b.n	8021314 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8021396:	bf00      	nop
 8021398:	00fff800 	.word	0x00fff800

0802139c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802139c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213a0:	461c      	mov	r4, r3
 80213a2:	f04f 0a02 	mov.w	sl, #2
 80213a6:	b08d      	sub	sp, #52	@ 0x34
 80213a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80213aa:	460d      	mov	r5, r1
 80213ac:	4680      	mov	r8, r0
 80213ae:	6861      	ldr	r1, [r4, #4]
 80213b0:	6820      	ldr	r0, [r4, #0]
 80213b2:	4616      	mov	r6, r2
 80213b4:	aa08      	add	r2, sp, #32
 80213b6:	c203      	stmia	r2!, {r0, r1}
 80213b8:	6818      	ldr	r0, [r3, #0]
 80213ba:	6859      	ldr	r1, [r3, #4]
 80213bc:	aa0a      	add	r2, sp, #40	@ 0x28
 80213be:	c203      	stmia	r2!, {r0, r1}
 80213c0:	a808      	add	r0, sp, #32
 80213c2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 80213c6:	f7ee fd0d 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80213ca:	4621      	mov	r1, r4
 80213cc:	a80a      	add	r0, sp, #40	@ 0x28
 80213ce:	f7ee fd31 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80213d2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80213d6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 80213da:	f002 0301 	and.w	r3, r2, #1
 80213de:	9303      	str	r3, [sp, #12]
 80213e0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80213e4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 80213e8:	f003 0101 	and.w	r1, r3, #1
 80213ec:	9102      	str	r1, [sp, #8]
 80213ee:	9802      	ldr	r0, [sp, #8]
 80213f0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80213f4:	4403      	add	r3, r0
 80213f6:	fb01 2303 	mla	r3, r1, r3, r2
 80213fa:	fb93 f3fa 	sdiv	r3, r3, sl
 80213fe:	441d      	add	r5, r3
 8021400:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021404:	3604      	adds	r6, #4
 8021406:	441a      	add	r2, r3
 8021408:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802140c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8021410:	4a3e      	ldr	r2, [pc, #248]	@ (802150c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021412:	4419      	add	r1, r3
 8021414:	6810      	ldr	r0, [r2, #0]
 8021416:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802141a:	6803      	ldr	r3, [r0, #0]
 802141c:	9205      	str	r2, [sp, #20]
 802141e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021420:	4798      	blx	r3
 8021422:	4b3b      	ldr	r3, [pc, #236]	@ (8021510 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021424:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8021428:	8819      	ldrh	r1, [r3, #0]
 802142a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802142e:	434f      	muls	r7, r1
 8021430:	fb01 c404 	mla	r4, r1, r4, ip
 8021434:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8021438:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802143c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8021440:	9204      	str	r2, [sp, #16]
 8021442:	9b04      	ldr	r3, [sp, #16]
 8021444:	429c      	cmp	r4, r3
 8021446:	d258      	bcs.n	80214fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021448:	9b03      	ldr	r3, [sp, #12]
 802144a:	2b00      	cmp	r3, #0
 802144c:	d034      	beq.n	80214b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802144e:	782b      	ldrb	r3, [r5, #0]
 8021450:	1c6f      	adds	r7, r5, #1
 8021452:	f003 030f 	and.w	r3, r3, #15
 8021456:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802145a:	0e0b      	lsrs	r3, r1, #24
 802145c:	d006      	beq.n	802146c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802145e:	8822      	ldrh	r2, [r4, #0]
 8021460:	4640      	mov	r0, r8
 8021462:	9300      	str	r3, [sp, #0]
 8021464:	464b      	mov	r3, r9
 8021466:	f7ff ff43 	bl	80212f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802146a:	8020      	strh	r0, [r4, #0]
 802146c:	3402      	adds	r4, #2
 802146e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8021472:	f1ba 0f01 	cmp.w	sl, #1
 8021476:	dd22      	ble.n	80214be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8021478:	783b      	ldrb	r3, [r7, #0]
 802147a:	091b      	lsrs	r3, r3, #4
 802147c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021480:	0e0b      	lsrs	r3, r1, #24
 8021482:	d006      	beq.n	8021492 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8021484:	8822      	ldrh	r2, [r4, #0]
 8021486:	4640      	mov	r0, r8
 8021488:	9300      	str	r3, [sp, #0]
 802148a:	464b      	mov	r3, r9
 802148c:	f7ff ff30 	bl	80212f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021490:	8020      	strh	r0, [r4, #0]
 8021492:	f817 3b01 	ldrb.w	r3, [r7], #1
 8021496:	f003 030f 	and.w	r3, r3, #15
 802149a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802149e:	0e0b      	lsrs	r3, r1, #24
 80214a0:	d006      	beq.n	80214b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80214a2:	8862      	ldrh	r2, [r4, #2]
 80214a4:	4640      	mov	r0, r8
 80214a6:	9300      	str	r3, [sp, #0]
 80214a8:	464b      	mov	r3, r9
 80214aa:	f7ff ff21 	bl	80212f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80214ae:	8060      	strh	r0, [r4, #2]
 80214b0:	3404      	adds	r4, #4
 80214b2:	f1aa 0a02 	sub.w	sl, sl, #2
 80214b6:	e7dc      	b.n	8021472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80214b8:	462f      	mov	r7, r5
 80214ba:	46da      	mov	sl, fp
 80214bc:	e7d9      	b.n	8021472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80214be:	d10d      	bne.n	80214dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80214c0:	783b      	ldrb	r3, [r7, #0]
 80214c2:	091b      	lsrs	r3, r3, #4
 80214c4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80214c8:	0e0b      	lsrs	r3, r1, #24
 80214ca:	d006      	beq.n	80214da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80214cc:	8822      	ldrh	r2, [r4, #0]
 80214ce:	4640      	mov	r0, r8
 80214d0:	9300      	str	r3, [sp, #0]
 80214d2:	464b      	mov	r3, r9
 80214d4:	f7ff ff0c 	bl	80212f0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80214d8:	8020      	strh	r0, [r4, #0]
 80214da:	3402      	adds	r4, #2
 80214dc:	9b06      	ldr	r3, [sp, #24]
 80214de:	9a02      	ldr	r2, [sp, #8]
 80214e0:	881b      	ldrh	r3, [r3, #0]
 80214e2:	eba3 030b 	sub.w	r3, r3, fp
 80214e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80214ea:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80214ee:	4413      	add	r3, r2
 80214f0:	9a07      	ldr	r2, [sp, #28]
 80214f2:	fb93 f3f2 	sdiv	r3, r3, r2
 80214f6:	441d      	add	r5, r3
 80214f8:	e7a3      	b.n	8021442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80214fa:	9b05      	ldr	r3, [sp, #20]
 80214fc:	6818      	ldr	r0, [r3, #0]
 80214fe:	6803      	ldr	r3, [r0, #0]
 8021500:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8021502:	4798      	blx	r3
 8021504:	b00d      	add	sp, #52	@ 0x34
 8021506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802150a:	bf00      	nop
 802150c:	20002230 	.word	0x20002230
 8021510:	2000222a 	.word	0x2000222a

08021514 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021514:	b570      	push	{r4, r5, r6, lr}
 8021516:	788d      	ldrb	r5, [r1, #2]
 8021518:	1214      	asrs	r4, r2, #8
 802151a:	fb15 f503 	smulbb	r5, r5, r3
 802151e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8021522:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021526:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802152a:	fb04 5506 	mla	r5, r4, r6, r5
 802152e:	784c      	ldrb	r4, [r1, #1]
 8021530:	7809      	ldrb	r1, [r1, #0]
 8021532:	fb14 f403 	smulbb	r4, r4, r3
 8021536:	fb11 f303 	smulbb	r3, r1, r3
 802153a:	10d0      	asrs	r0, r2, #3
 802153c:	00d2      	lsls	r2, r2, #3
 802153e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021542:	b2d2      	uxtb	r2, r2
 8021544:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8021548:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802154c:	fb00 4406 	mla	r4, r0, r6, r4
 8021550:	fb02 3306 	mla	r3, r2, r6, r3
 8021554:	b2ad      	uxth	r5, r5
 8021556:	b29b      	uxth	r3, r3
 8021558:	b2a4      	uxth	r4, r4
 802155a:	1c68      	adds	r0, r5, #1
 802155c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8021560:	1c62      	adds	r2, r4, #1
 8021562:	1c58      	adds	r0, r3, #1
 8021564:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021568:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802156c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021570:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021574:	0964      	lsrs	r4, r4, #5
 8021576:	4328      	orrs	r0, r5
 8021578:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802157c:	4320      	orrs	r0, r4
 802157e:	bd70      	pop	{r4, r5, r6, pc}

08021580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8021580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021584:	b08f      	sub	sp, #60	@ 0x3c
 8021586:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802158a:	461c      	mov	r4, r3
 802158c:	4682      	mov	sl, r0
 802158e:	460e      	mov	r6, r1
 8021590:	4615      	mov	r5, r2
 8021592:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021594:	2f00      	cmp	r7, #0
 8021596:	f000 8141 	beq.w	802181c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 802159a:	f04f 0802 	mov.w	r8, #2
 802159e:	6820      	ldr	r0, [r4, #0]
 80215a0:	6861      	ldr	r1, [r4, #4]
 80215a2:	aa0a      	add	r2, sp, #40	@ 0x28
 80215a4:	c203      	stmia	r2!, {r0, r1}
 80215a6:	6818      	ldr	r0, [r3, #0]
 80215a8:	6859      	ldr	r1, [r3, #4]
 80215aa:	aa0c      	add	r2, sp, #48	@ 0x30
 80215ac:	c203      	stmia	r2!, {r0, r1}
 80215ae:	a80a      	add	r0, sp, #40	@ 0x28
 80215b0:	f7ee fc18 	bl	800fde4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80215b4:	4621      	mov	r1, r4
 80215b6:	a80c      	add	r0, sp, #48	@ 0x30
 80215b8:	f7ee fc3c 	bl	800fe34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80215bc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80215c0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80215c4:	f002 0301 	and.w	r3, r2, #1
 80215c8:	9306      	str	r3, [sp, #24]
 80215ca:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80215ce:	3504      	adds	r5, #4
 80215d0:	f003 0101 	and.w	r1, r3, #1
 80215d4:	9105      	str	r1, [sp, #20]
 80215d6:	9805      	ldr	r0, [sp, #20]
 80215d8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80215dc:	4403      	add	r3, r0
 80215de:	fb01 2303 	mla	r3, r1, r3, r2
 80215e2:	fb93 f3f8 	sdiv	r3, r3, r8
 80215e6:	441e      	add	r6, r3
 80215e8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80215ec:	441a      	add	r2, r3
 80215ee:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80215f2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80215f6:	4419      	add	r1, r3
 80215f8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80215fc:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021600:	9303      	str	r3, [sp, #12]
 8021602:	4b88      	ldr	r3, [pc, #544]	@ (8021824 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021604:	6818      	ldr	r0, [r3, #0]
 8021606:	6803      	ldr	r3, [r0, #0]
 8021608:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802160a:	4798      	blx	r3
 802160c:	4a86      	ldr	r2, [pc, #536]	@ (8021828 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802160e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021612:	8813      	ldrh	r3, [r2, #0]
 8021614:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8021618:	2fff      	cmp	r7, #255	@ 0xff
 802161a:	fb03 9404 	mla	r4, r3, r4, r9
 802161e:	4694      	mov	ip, r2
 8021620:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021624:	fb03 f30b 	mul.w	r3, r3, fp
 8021628:	d071      	beq.n	802170e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 802162a:	43f9      	mvns	r1, r7
 802162c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021630:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021634:	b2c9      	uxtb	r1, r1
 8021636:	9104      	str	r1, [sp, #16]
 8021638:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 802163c:	9b07      	ldr	r3, [sp, #28]
 802163e:	42a3      	cmp	r3, r4
 8021640:	f240 80e7 	bls.w	8021812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8021644:	9b06      	ldr	r3, [sp, #24]
 8021646:	2b00      	cmp	r3, #0
 8021648:	d03d      	beq.n	80216c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 802164a:	7831      	ldrb	r1, [r6, #0]
 802164c:	9b04      	ldr	r3, [sp, #16]
 802164e:	f001 010f 	and.w	r1, r1, #15
 8021652:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021656:	8822      	ldrh	r2, [r4, #0]
 8021658:	4429      	add	r1, r5
 802165a:	9300      	str	r3, [sp, #0]
 802165c:	4650      	mov	r0, sl
 802165e:	463b      	mov	r3, r7
 8021660:	f7ff ff58 	bl	8021514 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021664:	9b03      	ldr	r3, [sp, #12]
 8021666:	f106 0801 	add.w	r8, r6, #1
 802166a:	f824 0b02 	strh.w	r0, [r4], #2
 802166e:	f103 3bff 	add.w	fp, r3, #4294967295
 8021672:	f1bb 0f01 	cmp.w	fp, #1
 8021676:	46a1      	mov	r9, r4
 8021678:	f104 0404 	add.w	r4, r4, #4
 802167c:	dd27      	ble.n	80216ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802167e:	f898 1000 	ldrb.w	r1, [r8]
 8021682:	9b04      	ldr	r3, [sp, #16]
 8021684:	0909      	lsrs	r1, r1, #4
 8021686:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802168a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802168e:	4429      	add	r1, r5
 8021690:	9300      	str	r3, [sp, #0]
 8021692:	4650      	mov	r0, sl
 8021694:	463b      	mov	r3, r7
 8021696:	f7ff ff3d 	bl	8021514 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802169a:	f824 0c04 	strh.w	r0, [r4, #-4]
 802169e:	f818 1b01 	ldrb.w	r1, [r8], #1
 80216a2:	9b04      	ldr	r3, [sp, #16]
 80216a4:	f001 010f 	and.w	r1, r1, #15
 80216a8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80216ac:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80216b0:	4429      	add	r1, r5
 80216b2:	9300      	str	r3, [sp, #0]
 80216b4:	4650      	mov	r0, sl
 80216b6:	463b      	mov	r3, r7
 80216b8:	f7ff ff2c 	bl	8021514 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80216bc:	f1ab 0b02 	sub.w	fp, fp, #2
 80216c0:	f824 0c02 	strh.w	r0, [r4, #-2]
 80216c4:	e7d5      	b.n	8021672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80216c6:	46b0      	mov	r8, r6
 80216c8:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80216cc:	e7d1      	b.n	8021672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80216ce:	d10f      	bne.n	80216f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80216d0:	f898 1000 	ldrb.w	r1, [r8]
 80216d4:	9b04      	ldr	r3, [sp, #16]
 80216d6:	0909      	lsrs	r1, r1, #4
 80216d8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80216dc:	f8b9 2000 	ldrh.w	r2, [r9]
 80216e0:	4429      	add	r1, r5
 80216e2:	9300      	str	r3, [sp, #0]
 80216e4:	4650      	mov	r0, sl
 80216e6:	463b      	mov	r3, r7
 80216e8:	f7ff ff14 	bl	8021514 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80216ec:	f829 0b02 	strh.w	r0, [r9], #2
 80216f0:	9b08      	ldr	r3, [sp, #32]
 80216f2:	9a05      	ldr	r2, [sp, #20]
 80216f4:	881c      	ldrh	r4, [r3, #0]
 80216f6:	9b03      	ldr	r3, [sp, #12]
 80216f8:	1ae4      	subs	r4, r4, r3
 80216fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80216fe:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021702:	4413      	add	r3, r2
 8021704:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021706:	fb93 f3f2 	sdiv	r3, r3, r2
 802170a:	441e      	add	r6, r3
 802170c:	e796      	b.n	802163c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802170e:	4f47      	ldr	r7, [pc, #284]	@ (802182c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021710:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021714:	42a3      	cmp	r3, r4
 8021716:	d97c      	bls.n	8021812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8021718:	9a06      	ldr	r2, [sp, #24]
 802171a:	2a00      	cmp	r2, #0
 802171c:	d054      	beq.n	80217c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802171e:	7830      	ldrb	r0, [r6, #0]
 8021720:	1c71      	adds	r1, r6, #1
 8021722:	f000 000f 	and.w	r0, r0, #15
 8021726:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802172a:	eb05 0e00 	add.w	lr, r5, r0
 802172e:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021732:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021736:	5c28      	ldrb	r0, [r5, r0]
 8021738:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802173c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021740:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021744:	ea42 020e 	orr.w	r2, r2, lr
 8021748:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802174c:	f824 2b02 	strh.w	r2, [r4], #2
 8021750:	9a03      	ldr	r2, [sp, #12]
 8021752:	f102 3eff 	add.w	lr, r2, #4294967295
 8021756:	f1be 0f01 	cmp.w	lr, #1
 802175a:	4620      	mov	r0, r4
 802175c:	f104 0404 	add.w	r4, r4, #4
 8021760:	dd36      	ble.n	80217d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8021762:	7808      	ldrb	r0, [r1, #0]
 8021764:	f1ae 0e02 	sub.w	lr, lr, #2
 8021768:	0900      	lsrs	r0, r0, #4
 802176a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802176e:	eb05 0a00 	add.w	sl, r5, r0
 8021772:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021776:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802177a:	00d2      	lsls	r2, r2, #3
 802177c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021780:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021784:	ea49 0202 	orr.w	r2, r9, r2
 8021788:	f815 9000 	ldrb.w	r9, [r5, r0]
 802178c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021790:	f824 2c04 	strh.w	r2, [r4, #-4]
 8021794:	f811 0b01 	ldrb.w	r0, [r1], #1
 8021798:	f000 000f 	and.w	r0, r0, #15
 802179c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80217a0:	eb05 0a00 	add.w	sl, r5, r0
 80217a4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80217a8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80217ac:	00d2      	lsls	r2, r2, #3
 80217ae:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80217b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80217b6:	ea49 0202 	orr.w	r2, r9, r2
 80217ba:	f815 9000 	ldrb.w	r9, [r5, r0]
 80217be:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80217c2:	f824 2c02 	strh.w	r2, [r4, #-2]
 80217c6:	e7c6      	b.n	8021756 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80217c8:	4631      	mov	r1, r6
 80217ca:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80217ce:	e7c2      	b.n	8021756 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80217d0:	d111      	bne.n	80217f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80217d2:	7809      	ldrb	r1, [r1, #0]
 80217d4:	0909      	lsrs	r1, r1, #4
 80217d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80217da:	186c      	adds	r4, r5, r1
 80217dc:	78a2      	ldrb	r2, [r4, #2]
 80217de:	7864      	ldrb	r4, [r4, #1]
 80217e0:	5c69      	ldrb	r1, [r5, r1]
 80217e2:	00e4      	lsls	r4, r4, #3
 80217e4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80217e8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80217ec:	4322      	orrs	r2, r4
 80217ee:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80217f2:	f820 2b02 	strh.w	r2, [r0], #2
 80217f6:	9a03      	ldr	r2, [sp, #12]
 80217f8:	f8bc 4000 	ldrh.w	r4, [ip]
 80217fc:	9905      	ldr	r1, [sp, #20]
 80217fe:	1aa4      	subs	r4, r4, r2
 8021800:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021804:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021808:	440a      	add	r2, r1
 802180a:	fb92 f2f8 	sdiv	r2, r2, r8
 802180e:	4416      	add	r6, r2
 8021810:	e780      	b.n	8021714 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 8021812:	4b04      	ldr	r3, [pc, #16]	@ (8021824 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021814:	6818      	ldr	r0, [r3, #0]
 8021816:	6803      	ldr	r3, [r0, #0]
 8021818:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 802181a:	4798      	blx	r3
 802181c:	b00f      	add	sp, #60	@ 0x3c
 802181e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021822:	bf00      	nop
 8021824:	20002230 	.word	0x20002230
 8021828:	2000222a 	.word	0x2000222a
 802182c:	fffff800 	.word	0xfffff800

08021830 <CRC_Lock>:
 8021830:	b530      	push	{r4, r5, lr}
 8021832:	4a2d      	ldr	r2, [pc, #180]	@ (80218e8 <CRC_Lock+0xb8>)
 8021834:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8021838:	6813      	ldr	r3, [r2, #0]
 802183a:	f023 0301 	bic.w	r3, r3, #1
 802183e:	6013      	str	r3, [r2, #0]
 8021840:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8021844:	4b29      	ldr	r3, [pc, #164]	@ (80218ec <CRC_Lock+0xbc>)
 8021846:	681c      	ldr	r4, [r3, #0]
 8021848:	4014      	ands	r4, r2
 802184a:	42ac      	cmp	r4, r5
 802184c:	d005      	beq.n	802185a <CRC_Lock+0x2a>
 802184e:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8021852:	681c      	ldr	r4, [r3, #0]
 8021854:	4014      	ands	r4, r2
 8021856:	42ac      	cmp	r4, r5
 8021858:	d125      	bne.n	80218a6 <CRC_Lock+0x76>
 802185a:	4b25      	ldr	r3, [pc, #148]	@ (80218f0 <CRC_Lock+0xc0>)
 802185c:	681b      	ldr	r3, [r3, #0]
 802185e:	2b00      	cmp	r3, #0
 8021860:	d139      	bne.n	80218d6 <CRC_Lock+0xa6>
 8021862:	4b24      	ldr	r3, [pc, #144]	@ (80218f4 <CRC_Lock+0xc4>)
 8021864:	681a      	ldr	r2, [r3, #0]
 8021866:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802186a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802186e:	d00d      	beq.n	802188c <CRC_Lock+0x5c>
 8021870:	f240 4483 	movw	r4, #1155	@ 0x483
 8021874:	681a      	ldr	r2, [r3, #0]
 8021876:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802187a:	42a2      	cmp	r2, r4
 802187c:	d006      	beq.n	802188c <CRC_Lock+0x5c>
 802187e:	f240 4285 	movw	r2, #1157	@ 0x485
 8021882:	681b      	ldr	r3, [r3, #0]
 8021884:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021888:	4293      	cmp	r3, r2
 802188a:	d124      	bne.n	80218d6 <CRC_Lock+0xa6>
 802188c:	2201      	movs	r2, #1
 802188e:	4b1a      	ldr	r3, [pc, #104]	@ (80218f8 <CRC_Lock+0xc8>)
 8021890:	601a      	str	r2, [r3, #0]
 8021892:	681a      	ldr	r2, [r3, #0]
 8021894:	2a00      	cmp	r2, #0
 8021896:	d1fc      	bne.n	8021892 <CRC_Lock+0x62>
 8021898:	4b18      	ldr	r3, [pc, #96]	@ (80218fc <CRC_Lock+0xcc>)
 802189a:	6018      	str	r0, [r3, #0]
 802189c:	6818      	ldr	r0, [r3, #0]
 802189e:	1a43      	subs	r3, r0, r1
 80218a0:	4258      	negs	r0, r3
 80218a2:	4158      	adcs	r0, r3
 80218a4:	e00e      	b.n	80218c4 <CRC_Lock+0x94>
 80218a6:	681b      	ldr	r3, [r3, #0]
 80218a8:	4013      	ands	r3, r2
 80218aa:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80218ae:	4293      	cmp	r3, r2
 80218b0:	d111      	bne.n	80218d6 <CRC_Lock+0xa6>
 80218b2:	f240 4286 	movw	r2, #1158	@ 0x486
 80218b6:	4b12      	ldr	r3, [pc, #72]	@ (8021900 <CRC_Lock+0xd0>)
 80218b8:	681b      	ldr	r3, [r3, #0]
 80218ba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80218be:	4293      	cmp	r3, r2
 80218c0:	d001      	beq.n	80218c6 <CRC_Lock+0x96>
 80218c2:	2000      	movs	r0, #0
 80218c4:	bd30      	pop	{r4, r5, pc}
 80218c6:	2201      	movs	r2, #1
 80218c8:	4b0e      	ldr	r3, [pc, #56]	@ (8021904 <CRC_Lock+0xd4>)
 80218ca:	601a      	str	r2, [r3, #0]
 80218cc:	681a      	ldr	r2, [r3, #0]
 80218ce:	2a00      	cmp	r2, #0
 80218d0:	d1fc      	bne.n	80218cc <CRC_Lock+0x9c>
 80218d2:	4b0d      	ldr	r3, [pc, #52]	@ (8021908 <CRC_Lock+0xd8>)
 80218d4:	e7e1      	b.n	802189a <CRC_Lock+0x6a>
 80218d6:	2201      	movs	r2, #1
 80218d8:	4b0c      	ldr	r3, [pc, #48]	@ (802190c <CRC_Lock+0xdc>)
 80218da:	601a      	str	r2, [r3, #0]
 80218dc:	681a      	ldr	r2, [r3, #0]
 80218de:	2a00      	cmp	r2, #0
 80218e0:	d1fc      	bne.n	80218dc <CRC_Lock+0xac>
 80218e2:	4b0b      	ldr	r3, [pc, #44]	@ (8021910 <CRC_Lock+0xe0>)
 80218e4:	e7d9      	b.n	802189a <CRC_Lock+0x6a>
 80218e6:	bf00      	nop
 80218e8:	e0002000 	.word	0xe0002000
 80218ec:	e000ed00 	.word	0xe000ed00
 80218f0:	e0042000 	.word	0xe0042000
 80218f4:	5c001000 	.word	0x5c001000
 80218f8:	58024c08 	.word	0x58024c08
 80218fc:	58024c00 	.word	0x58024c00
 8021900:	46008ff0 	.word	0x46008ff0
 8021904:	46024c08 	.word	0x46024c08
 8021908:	46024c00 	.word	0x46024c00
 802190c:	40023008 	.word	0x40023008
 8021910:	40023000 	.word	0x40023000

08021914 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021914:	6101      	str	r1, [r0, #16]
 8021916:	4770      	bx	lr

08021918 <_ZN8touchgfx8Gestures4tickEv>:
 8021918:	7b83      	ldrb	r3, [r0, #14]
 802191a:	b14b      	cbz	r3, 8021930 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802191c:	8903      	ldrh	r3, [r0, #8]
 802191e:	3301      	adds	r3, #1
 8021920:	b29b      	uxth	r3, r3
 8021922:	2b07      	cmp	r3, #7
 8021924:	8103      	strh	r3, [r0, #8]
 8021926:	bf81      	itttt	hi
 8021928:	2300      	movhi	r3, #0
 802192a:	8143      	strhhi	r3, [r0, #10]
 802192c:	8183      	strhhi	r3, [r0, #12]
 802192e:	7383      	strbhi	r3, [r0, #14]
 8021930:	4770      	bx	lr
	...

08021934 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021934:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021938:	4698      	mov	r8, r3
 802193a:	4604      	mov	r4, r0
 802193c:	8883      	ldrh	r3, [r0, #4]
 802193e:	460e      	mov	r6, r1
 8021940:	88c1      	ldrh	r1, [r0, #6]
 8021942:	2000      	movs	r0, #0
 8021944:	f8ad 3006 	strh.w	r3, [sp, #6]
 8021948:	eba8 0303 	sub.w	r3, r8, r3
 802194c:	b21b      	sxth	r3, r3
 802194e:	4617      	mov	r7, r2
 8021950:	4a17      	ldr	r2, [pc, #92]	@ (80219b0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8021952:	2b00      	cmp	r3, #0
 8021954:	bfb8      	it	lt
 8021956:	425b      	neglt	r3, r3
 8021958:	9200      	str	r2, [sp, #0]
 802195a:	8aa2      	ldrh	r2, [r4, #20]
 802195c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8021960:	b21b      	sxth	r3, r3
 8021962:	4293      	cmp	r3, r2
 8021964:	f88d 0004 	strb.w	r0, [sp, #4]
 8021968:	f8ad 1008 	strh.w	r1, [sp, #8]
 802196c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021970:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021974:	dc07      	bgt.n	8021986 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8021976:	1a69      	subs	r1, r5, r1
 8021978:	b209      	sxth	r1, r1
 802197a:	2900      	cmp	r1, #0
 802197c:	bfb8      	it	lt
 802197e:	4249      	neglt	r1, r1
 8021980:	b209      	sxth	r1, r1
 8021982:	428a      	cmp	r2, r1
 8021984:	da10      	bge.n	80219a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8021986:	6920      	ldr	r0, [r4, #16]
 8021988:	4669      	mov	r1, sp
 802198a:	6803      	ldr	r3, [r0, #0]
 802198c:	eba8 0606 	sub.w	r6, r8, r6
 8021990:	685b      	ldr	r3, [r3, #4]
 8021992:	4798      	blx	r3
 8021994:	2300      	movs	r3, #0
 8021996:	2001      	movs	r0, #1
 8021998:	1bef      	subs	r7, r5, r7
 802199a:	8123      	strh	r3, [r4, #8]
 802199c:	8166      	strh	r6, [r4, #10]
 802199e:	81a7      	strh	r7, [r4, #12]
 80219a0:	f8a4 8004 	strh.w	r8, [r4, #4]
 80219a4:	80e5      	strh	r5, [r4, #6]
 80219a6:	73a0      	strb	r0, [r4, #14]
 80219a8:	b004      	add	sp, #16
 80219aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80219ae:	bf00      	nop
 80219b0:	08024c84 	.word	0x08024c84

080219b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80219b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80219b6:	461e      	mov	r6, r3
 80219b8:	1e4b      	subs	r3, r1, #1
 80219ba:	2b01      	cmp	r3, #1
 80219bc:	b085      	sub	sp, #20
 80219be:	4604      	mov	r4, r0
 80219c0:	460d      	mov	r5, r1
 80219c2:	4617      	mov	r7, r2
 80219c4:	d84b      	bhi.n	8021a5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80219c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80219ca:	1cd3      	adds	r3, r2, #3
 80219cc:	b29b      	uxth	r3, r3
 80219ce:	2b06      	cmp	r3, #6
 80219d0:	d916      	bls.n	8021a00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80219d2:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8021a74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80219d6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80219da:	f8cd c004 	str.w	ip, [sp, #4]
 80219de:	f04f 0c00 	mov.w	ip, #0
 80219e2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80219e6:	6900      	ldr	r0, [r0, #16]
 80219e8:	f8ad 100c 	strh.w	r1, [sp, #12]
 80219ec:	f88d c008 	strb.w	ip, [sp, #8]
 80219f0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80219f4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80219f8:	6803      	ldr	r3, [r0, #0]
 80219fa:	a901      	add	r1, sp, #4
 80219fc:	689b      	ldr	r3, [r3, #8]
 80219fe:	4798      	blx	r3
 8021a00:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021a04:	1cd3      	adds	r3, r2, #3
 8021a06:	b29b      	uxth	r3, r3
 8021a08:	2b06      	cmp	r3, #6
 8021a0a:	d916      	bls.n	8021a3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021a0c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8021a74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8021a10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021a14:	f8cd c004 	str.w	ip, [sp, #4]
 8021a18:	f04f 0c01 	mov.w	ip, #1
 8021a1c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021a20:	6920      	ldr	r0, [r4, #16]
 8021a22:	f8ad 100c 	strh.w	r1, [sp, #12]
 8021a26:	f88d c008 	strb.w	ip, [sp, #8]
 8021a2a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8021a2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021a32:	6803      	ldr	r3, [r0, #0]
 8021a34:	a901      	add	r1, sp, #4
 8021a36:	689b      	ldr	r3, [r3, #8]
 8021a38:	4798      	blx	r3
 8021a3a:	4b0d      	ldr	r3, [pc, #52]	@ (8021a70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8021a3c:	6920      	ldr	r0, [r4, #16]
 8021a3e:	9301      	str	r3, [sp, #4]
 8021a40:	2300      	movs	r3, #0
 8021a42:	f88d 5008 	strb.w	r5, [sp, #8]
 8021a46:	f8ad 700a 	strh.w	r7, [sp, #10]
 8021a4a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8021a4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021a52:	6803      	ldr	r3, [r0, #0]
 8021a54:	a901      	add	r1, sp, #4
 8021a56:	681b      	ldr	r3, [r3, #0]
 8021a58:	4798      	blx	r3
 8021a5a:	b005      	add	sp, #20
 8021a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021a5e:	2900      	cmp	r1, #0
 8021a60:	d1eb      	bne.n	8021a3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021a62:	80a2      	strh	r2, [r4, #4]
 8021a64:	80c6      	strh	r6, [r0, #6]
 8021a66:	60a1      	str	r1, [r4, #8]
 8021a68:	81a1      	strh	r1, [r4, #12]
 8021a6a:	73a1      	strb	r1, [r4, #14]
 8021a6c:	e7e5      	b.n	8021a3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8021a6e:	bf00      	nop
 8021a70:	08024c70 	.word	0x08024c70
 8021a74:	08024c98 	.word	0x08024c98

08021a78 <__aeabi_atexit>:
 8021a78:	460b      	mov	r3, r1
 8021a7a:	4601      	mov	r1, r0
 8021a7c:	4618      	mov	r0, r3
 8021a7e:	f000 b90f 	b.w	8021ca0 <__cxa_atexit>

08021a82 <_ZdlPvj>:
 8021a82:	f000 b812 	b.w	8021aaa <_ZdlPv>

08021a86 <__cxa_guard_acquire>:
 8021a86:	6802      	ldr	r2, [r0, #0]
 8021a88:	4603      	mov	r3, r0
 8021a8a:	07d2      	lsls	r2, r2, #31
 8021a8c:	d405      	bmi.n	8021a9a <__cxa_guard_acquire+0x14>
 8021a8e:	7842      	ldrb	r2, [r0, #1]
 8021a90:	b102      	cbz	r2, 8021a94 <__cxa_guard_acquire+0xe>
 8021a92:	deff      	udf	#255	@ 0xff
 8021a94:	2001      	movs	r0, #1
 8021a96:	7058      	strb	r0, [r3, #1]
 8021a98:	4770      	bx	lr
 8021a9a:	2000      	movs	r0, #0
 8021a9c:	4770      	bx	lr

08021a9e <__cxa_guard_release>:
 8021a9e:	2301      	movs	r3, #1
 8021aa0:	6003      	str	r3, [r0, #0]
 8021aa2:	4770      	bx	lr

08021aa4 <__cxa_pure_virtual>:
 8021aa4:	b508      	push	{r3, lr}
 8021aa6:	f000 f80d 	bl	8021ac4 <_ZSt9terminatev>

08021aaa <_ZdlPv>:
 8021aaa:	f000 b843 	b.w	8021b34 <free>

08021aae <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021aae:	b508      	push	{r3, lr}
 8021ab0:	4780      	blx	r0
 8021ab2:	f000 f80c 	bl	8021ace <abort>
	...

08021ab8 <_ZSt13get_terminatev>:
 8021ab8:	4b01      	ldr	r3, [pc, #4]	@ (8021ac0 <_ZSt13get_terminatev+0x8>)
 8021aba:	e8d3 0faf 	lda	r0, [r3]
 8021abe:	4770      	bx	lr
 8021ac0:	20000090 	.word	0x20000090

08021ac4 <_ZSt9terminatev>:
 8021ac4:	b508      	push	{r3, lr}
 8021ac6:	f7ff fff7 	bl	8021ab8 <_ZSt13get_terminatev>
 8021aca:	f7ff fff0 	bl	8021aae <_ZN10__cxxabiv111__terminateEPFvvE>

08021ace <abort>:
 8021ace:	2006      	movs	r0, #6
 8021ad0:	b508      	push	{r3, lr}
 8021ad2:	f000 fa3b 	bl	8021f4c <raise>
 8021ad6:	2001      	movs	r0, #1
 8021ad8:	f7df faac 	bl	8001034 <_exit>

08021adc <__assert_func>:
 8021adc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8021ade:	4614      	mov	r4, r2
 8021ae0:	461a      	mov	r2, r3
 8021ae2:	4b09      	ldr	r3, [pc, #36]	@ (8021b08 <__assert_func+0x2c>)
 8021ae4:	4605      	mov	r5, r0
 8021ae6:	681b      	ldr	r3, [r3, #0]
 8021ae8:	68d8      	ldr	r0, [r3, #12]
 8021aea:	b954      	cbnz	r4, 8021b02 <__assert_func+0x26>
 8021aec:	4b07      	ldr	r3, [pc, #28]	@ (8021b0c <__assert_func+0x30>)
 8021aee:	461c      	mov	r4, r3
 8021af0:	9100      	str	r1, [sp, #0]
 8021af2:	4907      	ldr	r1, [pc, #28]	@ (8021b10 <__assert_func+0x34>)
 8021af4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8021af8:	462b      	mov	r3, r5
 8021afa:	f000 f983 	bl	8021e04 <fiprintf>
 8021afe:	f7ff ffe6 	bl	8021ace <abort>
 8021b02:	4b04      	ldr	r3, [pc, #16]	@ (8021b14 <__assert_func+0x38>)
 8021b04:	e7f4      	b.n	8021af0 <__assert_func+0x14>
 8021b06:	bf00      	nop
 8021b08:	200000a0 	.word	0x200000a0
 8021b0c:	08025007 	.word	0x08025007
 8021b10:	08024fd9 	.word	0x08024fd9
 8021b14:	08024fcc 	.word	0x08024fcc

08021b18 <atexit>:
 8021b18:	2300      	movs	r3, #0
 8021b1a:	4601      	mov	r1, r0
 8021b1c:	461a      	mov	r2, r3
 8021b1e:	4618      	mov	r0, r3
 8021b20:	f000 bac0 	b.w	80220a4 <__register_exitproc>

08021b24 <malloc>:
 8021b24:	4b02      	ldr	r3, [pc, #8]	@ (8021b30 <malloc+0xc>)
 8021b26:	4601      	mov	r1, r0
 8021b28:	6818      	ldr	r0, [r3, #0]
 8021b2a:	f000 b82d 	b.w	8021b88 <_malloc_r>
 8021b2e:	bf00      	nop
 8021b30:	200000a0 	.word	0x200000a0

08021b34 <free>:
 8021b34:	4b02      	ldr	r3, [pc, #8]	@ (8021b40 <free+0xc>)
 8021b36:	4601      	mov	r1, r0
 8021b38:	6818      	ldr	r0, [r3, #0]
 8021b3a:	f000 bb11 	b.w	8022160 <_free_r>
 8021b3e:	bf00      	nop
 8021b40:	200000a0 	.word	0x200000a0

08021b44 <sbrk_aligned>:
 8021b44:	b570      	push	{r4, r5, r6, lr}
 8021b46:	4e0f      	ldr	r6, [pc, #60]	@ (8021b84 <sbrk_aligned+0x40>)
 8021b48:	460c      	mov	r4, r1
 8021b4a:	4605      	mov	r5, r0
 8021b4c:	6831      	ldr	r1, [r6, #0]
 8021b4e:	b911      	cbnz	r1, 8021b56 <sbrk_aligned+0x12>
 8021b50:	f000 fa4c 	bl	8021fec <_sbrk_r>
 8021b54:	6030      	str	r0, [r6, #0]
 8021b56:	4621      	mov	r1, r4
 8021b58:	4628      	mov	r0, r5
 8021b5a:	f000 fa47 	bl	8021fec <_sbrk_r>
 8021b5e:	1c43      	adds	r3, r0, #1
 8021b60:	d103      	bne.n	8021b6a <sbrk_aligned+0x26>
 8021b62:	f04f 34ff 	mov.w	r4, #4294967295
 8021b66:	4620      	mov	r0, r4
 8021b68:	bd70      	pop	{r4, r5, r6, pc}
 8021b6a:	1cc4      	adds	r4, r0, #3
 8021b6c:	f024 0403 	bic.w	r4, r4, #3
 8021b70:	42a0      	cmp	r0, r4
 8021b72:	d0f8      	beq.n	8021b66 <sbrk_aligned+0x22>
 8021b74:	1a21      	subs	r1, r4, r0
 8021b76:	4628      	mov	r0, r5
 8021b78:	f000 fa38 	bl	8021fec <_sbrk_r>
 8021b7c:	3001      	adds	r0, #1
 8021b7e:	d1f2      	bne.n	8021b66 <sbrk_aligned+0x22>
 8021b80:	e7ef      	b.n	8021b62 <sbrk_aligned+0x1e>
 8021b82:	bf00      	nop
 8021b84:	20002c84 	.word	0x20002c84

08021b88 <_malloc_r>:
 8021b88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021b8c:	1ccd      	adds	r5, r1, #3
 8021b8e:	4606      	mov	r6, r0
 8021b90:	f025 0503 	bic.w	r5, r5, #3
 8021b94:	3508      	adds	r5, #8
 8021b96:	2d0c      	cmp	r5, #12
 8021b98:	bf38      	it	cc
 8021b9a:	250c      	movcc	r5, #12
 8021b9c:	2d00      	cmp	r5, #0
 8021b9e:	db01      	blt.n	8021ba4 <_malloc_r+0x1c>
 8021ba0:	42a9      	cmp	r1, r5
 8021ba2:	d904      	bls.n	8021bae <_malloc_r+0x26>
 8021ba4:	230c      	movs	r3, #12
 8021ba6:	6033      	str	r3, [r6, #0]
 8021ba8:	2000      	movs	r0, #0
 8021baa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021bae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8021c84 <_malloc_r+0xfc>
 8021bb2:	f000 f869 	bl	8021c88 <__malloc_lock>
 8021bb6:	f8d8 3000 	ldr.w	r3, [r8]
 8021bba:	461c      	mov	r4, r3
 8021bbc:	bb44      	cbnz	r4, 8021c10 <_malloc_r+0x88>
 8021bbe:	4629      	mov	r1, r5
 8021bc0:	4630      	mov	r0, r6
 8021bc2:	f7ff ffbf 	bl	8021b44 <sbrk_aligned>
 8021bc6:	1c43      	adds	r3, r0, #1
 8021bc8:	4604      	mov	r4, r0
 8021bca:	d158      	bne.n	8021c7e <_malloc_r+0xf6>
 8021bcc:	f8d8 4000 	ldr.w	r4, [r8]
 8021bd0:	4627      	mov	r7, r4
 8021bd2:	2f00      	cmp	r7, #0
 8021bd4:	d143      	bne.n	8021c5e <_malloc_r+0xd6>
 8021bd6:	2c00      	cmp	r4, #0
 8021bd8:	d04b      	beq.n	8021c72 <_malloc_r+0xea>
 8021bda:	6823      	ldr	r3, [r4, #0]
 8021bdc:	4639      	mov	r1, r7
 8021bde:	4630      	mov	r0, r6
 8021be0:	eb04 0903 	add.w	r9, r4, r3
 8021be4:	f000 fa02 	bl	8021fec <_sbrk_r>
 8021be8:	4581      	cmp	r9, r0
 8021bea:	d142      	bne.n	8021c72 <_malloc_r+0xea>
 8021bec:	6821      	ldr	r1, [r4, #0]
 8021bee:	4630      	mov	r0, r6
 8021bf0:	1a6d      	subs	r5, r5, r1
 8021bf2:	4629      	mov	r1, r5
 8021bf4:	f7ff ffa6 	bl	8021b44 <sbrk_aligned>
 8021bf8:	3001      	adds	r0, #1
 8021bfa:	d03a      	beq.n	8021c72 <_malloc_r+0xea>
 8021bfc:	6823      	ldr	r3, [r4, #0]
 8021bfe:	442b      	add	r3, r5
 8021c00:	6023      	str	r3, [r4, #0]
 8021c02:	f8d8 3000 	ldr.w	r3, [r8]
 8021c06:	685a      	ldr	r2, [r3, #4]
 8021c08:	bb62      	cbnz	r2, 8021c64 <_malloc_r+0xdc>
 8021c0a:	f8c8 7000 	str.w	r7, [r8]
 8021c0e:	e00f      	b.n	8021c30 <_malloc_r+0xa8>
 8021c10:	6822      	ldr	r2, [r4, #0]
 8021c12:	1b52      	subs	r2, r2, r5
 8021c14:	d420      	bmi.n	8021c58 <_malloc_r+0xd0>
 8021c16:	2a0b      	cmp	r2, #11
 8021c18:	d917      	bls.n	8021c4a <_malloc_r+0xc2>
 8021c1a:	1961      	adds	r1, r4, r5
 8021c1c:	42a3      	cmp	r3, r4
 8021c1e:	6025      	str	r5, [r4, #0]
 8021c20:	bf18      	it	ne
 8021c22:	6059      	strne	r1, [r3, #4]
 8021c24:	6863      	ldr	r3, [r4, #4]
 8021c26:	bf08      	it	eq
 8021c28:	f8c8 1000 	streq.w	r1, [r8]
 8021c2c:	5162      	str	r2, [r4, r5]
 8021c2e:	604b      	str	r3, [r1, #4]
 8021c30:	4630      	mov	r0, r6
 8021c32:	f000 f82f 	bl	8021c94 <__malloc_unlock>
 8021c36:	f104 000b 	add.w	r0, r4, #11
 8021c3a:	1d23      	adds	r3, r4, #4
 8021c3c:	f020 0007 	bic.w	r0, r0, #7
 8021c40:	1ac2      	subs	r2, r0, r3
 8021c42:	bf1c      	itt	ne
 8021c44:	1a1b      	subne	r3, r3, r0
 8021c46:	50a3      	strne	r3, [r4, r2]
 8021c48:	e7af      	b.n	8021baa <_malloc_r+0x22>
 8021c4a:	6862      	ldr	r2, [r4, #4]
 8021c4c:	42a3      	cmp	r3, r4
 8021c4e:	bf0c      	ite	eq
 8021c50:	f8c8 2000 	streq.w	r2, [r8]
 8021c54:	605a      	strne	r2, [r3, #4]
 8021c56:	e7eb      	b.n	8021c30 <_malloc_r+0xa8>
 8021c58:	4623      	mov	r3, r4
 8021c5a:	6864      	ldr	r4, [r4, #4]
 8021c5c:	e7ae      	b.n	8021bbc <_malloc_r+0x34>
 8021c5e:	463c      	mov	r4, r7
 8021c60:	687f      	ldr	r7, [r7, #4]
 8021c62:	e7b6      	b.n	8021bd2 <_malloc_r+0x4a>
 8021c64:	461a      	mov	r2, r3
 8021c66:	685b      	ldr	r3, [r3, #4]
 8021c68:	42a3      	cmp	r3, r4
 8021c6a:	d1fb      	bne.n	8021c64 <_malloc_r+0xdc>
 8021c6c:	2300      	movs	r3, #0
 8021c6e:	6053      	str	r3, [r2, #4]
 8021c70:	e7de      	b.n	8021c30 <_malloc_r+0xa8>
 8021c72:	230c      	movs	r3, #12
 8021c74:	4630      	mov	r0, r6
 8021c76:	6033      	str	r3, [r6, #0]
 8021c78:	f000 f80c 	bl	8021c94 <__malloc_unlock>
 8021c7c:	e794      	b.n	8021ba8 <_malloc_r+0x20>
 8021c7e:	6005      	str	r5, [r0, #0]
 8021c80:	e7d6      	b.n	8021c30 <_malloc_r+0xa8>
 8021c82:	bf00      	nop
 8021c84:	20002c88 	.word	0x20002c88

08021c88 <__malloc_lock>:
 8021c88:	4801      	ldr	r0, [pc, #4]	@ (8021c90 <__malloc_lock+0x8>)
 8021c8a:	f000 b9fc 	b.w	8022086 <__retarget_lock_acquire_recursive>
 8021c8e:	bf00      	nop
 8021c90:	20002dcc 	.word	0x20002dcc

08021c94 <__malloc_unlock>:
 8021c94:	4801      	ldr	r0, [pc, #4]	@ (8021c9c <__malloc_unlock+0x8>)
 8021c96:	f000 b9f7 	b.w	8022088 <__retarget_lock_release_recursive>
 8021c9a:	bf00      	nop
 8021c9c:	20002dcc 	.word	0x20002dcc

08021ca0 <__cxa_atexit>:
 8021ca0:	b510      	push	{r4, lr}
 8021ca2:	4604      	mov	r4, r0
 8021ca4:	4804      	ldr	r0, [pc, #16]	@ (8021cb8 <__cxa_atexit+0x18>)
 8021ca6:	4613      	mov	r3, r2
 8021ca8:	b120      	cbz	r0, 8021cb4 <__cxa_atexit+0x14>
 8021caa:	460a      	mov	r2, r1
 8021cac:	2002      	movs	r0, #2
 8021cae:	4621      	mov	r1, r4
 8021cb0:	f000 f9f8 	bl	80220a4 <__register_exitproc>
 8021cb4:	bd10      	pop	{r4, pc}
 8021cb6:	bf00      	nop
 8021cb8:	080220a5 	.word	0x080220a5

08021cbc <std>:
 8021cbc:	2300      	movs	r3, #0
 8021cbe:	b510      	push	{r4, lr}
 8021cc0:	4604      	mov	r4, r0
 8021cc2:	6083      	str	r3, [r0, #8]
 8021cc4:	8181      	strh	r1, [r0, #12]
 8021cc6:	4619      	mov	r1, r3
 8021cc8:	6643      	str	r3, [r0, #100]	@ 0x64
 8021cca:	81c2      	strh	r2, [r0, #14]
 8021ccc:	2208      	movs	r2, #8
 8021cce:	6183      	str	r3, [r0, #24]
 8021cd0:	e9c0 3300 	strd	r3, r3, [r0]
 8021cd4:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021cd8:	305c      	adds	r0, #92	@ 0x5c
 8021cda:	f000 f906 	bl	8021eea <memset>
 8021cde:	4b0d      	ldr	r3, [pc, #52]	@ (8021d14 <std+0x58>)
 8021ce0:	6224      	str	r4, [r4, #32]
 8021ce2:	6263      	str	r3, [r4, #36]	@ 0x24
 8021ce4:	4b0c      	ldr	r3, [pc, #48]	@ (8021d18 <std+0x5c>)
 8021ce6:	62a3      	str	r3, [r4, #40]	@ 0x28
 8021ce8:	4b0c      	ldr	r3, [pc, #48]	@ (8021d1c <std+0x60>)
 8021cea:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8021cec:	4b0c      	ldr	r3, [pc, #48]	@ (8021d20 <std+0x64>)
 8021cee:	6323      	str	r3, [r4, #48]	@ 0x30
 8021cf0:	4b0c      	ldr	r3, [pc, #48]	@ (8021d24 <std+0x68>)
 8021cf2:	429c      	cmp	r4, r3
 8021cf4:	d006      	beq.n	8021d04 <std+0x48>
 8021cf6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8021cfa:	4294      	cmp	r4, r2
 8021cfc:	d002      	beq.n	8021d04 <std+0x48>
 8021cfe:	33d0      	adds	r3, #208	@ 0xd0
 8021d00:	429c      	cmp	r4, r3
 8021d02:	d105      	bne.n	8021d10 <std+0x54>
 8021d04:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8021d08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021d0c:	f000 b9ba 	b.w	8022084 <__retarget_lock_init_recursive>
 8021d10:	bd10      	pop	{r4, pc}
 8021d12:	bf00      	nop
 8021d14:	08021e65 	.word	0x08021e65
 8021d18:	08021e87 	.word	0x08021e87
 8021d1c:	08021ebf 	.word	0x08021ebf
 8021d20:	08021ee3 	.word	0x08021ee3
 8021d24:	20002c8c 	.word	0x20002c8c

08021d28 <stdio_exit_handler>:
 8021d28:	4a02      	ldr	r2, [pc, #8]	@ (8021d34 <stdio_exit_handler+0xc>)
 8021d2a:	4903      	ldr	r1, [pc, #12]	@ (8021d38 <stdio_exit_handler+0x10>)
 8021d2c:	4803      	ldr	r0, [pc, #12]	@ (8021d3c <stdio_exit_handler+0x14>)
 8021d2e:	f000 b87b 	b.w	8021e28 <_fwalk_sglue>
 8021d32:	bf00      	nop
 8021d34:	20000094 	.word	0x20000094
 8021d38:	080228a5 	.word	0x080228a5
 8021d3c:	200000a4 	.word	0x200000a4

08021d40 <cleanup_stdio>:
 8021d40:	6841      	ldr	r1, [r0, #4]
 8021d42:	4b0c      	ldr	r3, [pc, #48]	@ (8021d74 <cleanup_stdio+0x34>)
 8021d44:	4299      	cmp	r1, r3
 8021d46:	b510      	push	{r4, lr}
 8021d48:	4604      	mov	r4, r0
 8021d4a:	d001      	beq.n	8021d50 <cleanup_stdio+0x10>
 8021d4c:	f000 fdaa 	bl	80228a4 <_fflush_r>
 8021d50:	68a1      	ldr	r1, [r4, #8]
 8021d52:	4b09      	ldr	r3, [pc, #36]	@ (8021d78 <cleanup_stdio+0x38>)
 8021d54:	4299      	cmp	r1, r3
 8021d56:	d002      	beq.n	8021d5e <cleanup_stdio+0x1e>
 8021d58:	4620      	mov	r0, r4
 8021d5a:	f000 fda3 	bl	80228a4 <_fflush_r>
 8021d5e:	68e1      	ldr	r1, [r4, #12]
 8021d60:	4b06      	ldr	r3, [pc, #24]	@ (8021d7c <cleanup_stdio+0x3c>)
 8021d62:	4299      	cmp	r1, r3
 8021d64:	d004      	beq.n	8021d70 <cleanup_stdio+0x30>
 8021d66:	4620      	mov	r0, r4
 8021d68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021d6c:	f000 bd9a 	b.w	80228a4 <_fflush_r>
 8021d70:	bd10      	pop	{r4, pc}
 8021d72:	bf00      	nop
 8021d74:	20002c8c 	.word	0x20002c8c
 8021d78:	20002cf4 	.word	0x20002cf4
 8021d7c:	20002d5c 	.word	0x20002d5c

08021d80 <global_stdio_init.part.0>:
 8021d80:	b510      	push	{r4, lr}
 8021d82:	4b0b      	ldr	r3, [pc, #44]	@ (8021db0 <global_stdio_init.part.0+0x30>)
 8021d84:	2104      	movs	r1, #4
 8021d86:	4c0b      	ldr	r4, [pc, #44]	@ (8021db4 <global_stdio_init.part.0+0x34>)
 8021d88:	4a0b      	ldr	r2, [pc, #44]	@ (8021db8 <global_stdio_init.part.0+0x38>)
 8021d8a:	4620      	mov	r0, r4
 8021d8c:	601a      	str	r2, [r3, #0]
 8021d8e:	2200      	movs	r2, #0
 8021d90:	f7ff ff94 	bl	8021cbc <std>
 8021d94:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8021d98:	2201      	movs	r2, #1
 8021d9a:	2109      	movs	r1, #9
 8021d9c:	f7ff ff8e 	bl	8021cbc <std>
 8021da0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8021da4:	2202      	movs	r2, #2
 8021da6:	2112      	movs	r1, #18
 8021da8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021dac:	f7ff bf86 	b.w	8021cbc <std>
 8021db0:	20002dc4 	.word	0x20002dc4
 8021db4:	20002c8c 	.word	0x20002c8c
 8021db8:	08021d29 	.word	0x08021d29

08021dbc <__sfp_lock_acquire>:
 8021dbc:	4801      	ldr	r0, [pc, #4]	@ (8021dc4 <__sfp_lock_acquire+0x8>)
 8021dbe:	f000 b962 	b.w	8022086 <__retarget_lock_acquire_recursive>
 8021dc2:	bf00      	nop
 8021dc4:	20002dce 	.word	0x20002dce

08021dc8 <__sfp_lock_release>:
 8021dc8:	4801      	ldr	r0, [pc, #4]	@ (8021dd0 <__sfp_lock_release+0x8>)
 8021dca:	f000 b95d 	b.w	8022088 <__retarget_lock_release_recursive>
 8021dce:	bf00      	nop
 8021dd0:	20002dce 	.word	0x20002dce

08021dd4 <__sinit>:
 8021dd4:	b510      	push	{r4, lr}
 8021dd6:	4604      	mov	r4, r0
 8021dd8:	f7ff fff0 	bl	8021dbc <__sfp_lock_acquire>
 8021ddc:	6a23      	ldr	r3, [r4, #32]
 8021dde:	b11b      	cbz	r3, 8021de8 <__sinit+0x14>
 8021de0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021de4:	f7ff bff0 	b.w	8021dc8 <__sfp_lock_release>
 8021de8:	4b04      	ldr	r3, [pc, #16]	@ (8021dfc <__sinit+0x28>)
 8021dea:	6223      	str	r3, [r4, #32]
 8021dec:	4b04      	ldr	r3, [pc, #16]	@ (8021e00 <__sinit+0x2c>)
 8021dee:	681b      	ldr	r3, [r3, #0]
 8021df0:	2b00      	cmp	r3, #0
 8021df2:	d1f5      	bne.n	8021de0 <__sinit+0xc>
 8021df4:	f7ff ffc4 	bl	8021d80 <global_stdio_init.part.0>
 8021df8:	e7f2      	b.n	8021de0 <__sinit+0xc>
 8021dfa:	bf00      	nop
 8021dfc:	08021d41 	.word	0x08021d41
 8021e00:	20002dc4 	.word	0x20002dc4

08021e04 <fiprintf>:
 8021e04:	b40e      	push	{r1, r2, r3}
 8021e06:	b503      	push	{r0, r1, lr}
 8021e08:	ab03      	add	r3, sp, #12
 8021e0a:	4601      	mov	r1, r0
 8021e0c:	4805      	ldr	r0, [pc, #20]	@ (8021e24 <fiprintf+0x20>)
 8021e0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8021e12:	6800      	ldr	r0, [r0, #0]
 8021e14:	9301      	str	r3, [sp, #4]
 8021e16:	f000 fa17 	bl	8022248 <_vfiprintf_r>
 8021e1a:	b002      	add	sp, #8
 8021e1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8021e20:	b003      	add	sp, #12
 8021e22:	4770      	bx	lr
 8021e24:	200000a0 	.word	0x200000a0

08021e28 <_fwalk_sglue>:
 8021e28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021e2c:	4607      	mov	r7, r0
 8021e2e:	4688      	mov	r8, r1
 8021e30:	4614      	mov	r4, r2
 8021e32:	2600      	movs	r6, #0
 8021e34:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021e38:	f1b9 0901 	subs.w	r9, r9, #1
 8021e3c:	d505      	bpl.n	8021e4a <_fwalk_sglue+0x22>
 8021e3e:	6824      	ldr	r4, [r4, #0]
 8021e40:	2c00      	cmp	r4, #0
 8021e42:	d1f7      	bne.n	8021e34 <_fwalk_sglue+0xc>
 8021e44:	4630      	mov	r0, r6
 8021e46:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021e4a:	89ab      	ldrh	r3, [r5, #12]
 8021e4c:	2b01      	cmp	r3, #1
 8021e4e:	d907      	bls.n	8021e60 <_fwalk_sglue+0x38>
 8021e50:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021e54:	3301      	adds	r3, #1
 8021e56:	d003      	beq.n	8021e60 <_fwalk_sglue+0x38>
 8021e58:	4629      	mov	r1, r5
 8021e5a:	4638      	mov	r0, r7
 8021e5c:	47c0      	blx	r8
 8021e5e:	4306      	orrs	r6, r0
 8021e60:	3568      	adds	r5, #104	@ 0x68
 8021e62:	e7e9      	b.n	8021e38 <_fwalk_sglue+0x10>

08021e64 <__sread>:
 8021e64:	b510      	push	{r4, lr}
 8021e66:	460c      	mov	r4, r1
 8021e68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021e6c:	f000 f898 	bl	8021fa0 <_read_r>
 8021e70:	2800      	cmp	r0, #0
 8021e72:	bfab      	itete	ge
 8021e74:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8021e76:	89a3      	ldrhlt	r3, [r4, #12]
 8021e78:	181b      	addge	r3, r3, r0
 8021e7a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8021e7e:	bfac      	ite	ge
 8021e80:	6563      	strge	r3, [r4, #84]	@ 0x54
 8021e82:	81a3      	strhlt	r3, [r4, #12]
 8021e84:	bd10      	pop	{r4, pc}

08021e86 <__swrite>:
 8021e86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021e8a:	461f      	mov	r7, r3
 8021e8c:	898b      	ldrh	r3, [r1, #12]
 8021e8e:	4605      	mov	r5, r0
 8021e90:	460c      	mov	r4, r1
 8021e92:	05db      	lsls	r3, r3, #23
 8021e94:	4616      	mov	r6, r2
 8021e96:	d505      	bpl.n	8021ea4 <__swrite+0x1e>
 8021e98:	2302      	movs	r3, #2
 8021e9a:	2200      	movs	r2, #0
 8021e9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021ea0:	f000 f86c 	bl	8021f7c <_lseek_r>
 8021ea4:	89a3      	ldrh	r3, [r4, #12]
 8021ea6:	4632      	mov	r2, r6
 8021ea8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021eac:	4628      	mov	r0, r5
 8021eae:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8021eb2:	81a3      	strh	r3, [r4, #12]
 8021eb4:	463b      	mov	r3, r7
 8021eb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021eba:	f000 b8a7 	b.w	802200c <_write_r>

08021ebe <__sseek>:
 8021ebe:	b510      	push	{r4, lr}
 8021ec0:	460c      	mov	r4, r1
 8021ec2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021ec6:	f000 f859 	bl	8021f7c <_lseek_r>
 8021eca:	1c43      	adds	r3, r0, #1
 8021ecc:	89a3      	ldrh	r3, [r4, #12]
 8021ece:	bf15      	itete	ne
 8021ed0:	6560      	strne	r0, [r4, #84]	@ 0x54
 8021ed2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8021ed6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8021eda:	81a3      	strheq	r3, [r4, #12]
 8021edc:	bf18      	it	ne
 8021ede:	81a3      	strhne	r3, [r4, #12]
 8021ee0:	bd10      	pop	{r4, pc}

08021ee2 <__sclose>:
 8021ee2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021ee6:	f000 b839 	b.w	8021f5c <_close_r>

08021eea <memset>:
 8021eea:	4402      	add	r2, r0
 8021eec:	4603      	mov	r3, r0
 8021eee:	4293      	cmp	r3, r2
 8021ef0:	d100      	bne.n	8021ef4 <memset+0xa>
 8021ef2:	4770      	bx	lr
 8021ef4:	f803 1b01 	strb.w	r1, [r3], #1
 8021ef8:	e7f9      	b.n	8021eee <memset+0x4>

08021efa <_raise_r>:
 8021efa:	291f      	cmp	r1, #31
 8021efc:	b538      	push	{r3, r4, r5, lr}
 8021efe:	4605      	mov	r5, r0
 8021f00:	460c      	mov	r4, r1
 8021f02:	d904      	bls.n	8021f0e <_raise_r+0x14>
 8021f04:	2316      	movs	r3, #22
 8021f06:	6003      	str	r3, [r0, #0]
 8021f08:	f04f 30ff 	mov.w	r0, #4294967295
 8021f0c:	bd38      	pop	{r3, r4, r5, pc}
 8021f0e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8021f10:	b112      	cbz	r2, 8021f18 <_raise_r+0x1e>
 8021f12:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021f16:	b94b      	cbnz	r3, 8021f2c <_raise_r+0x32>
 8021f18:	4628      	mov	r0, r5
 8021f1a:	f000 f865 	bl	8021fe8 <_getpid_r>
 8021f1e:	4622      	mov	r2, r4
 8021f20:	4601      	mov	r1, r0
 8021f22:	4628      	mov	r0, r5
 8021f24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021f28:	f000 b84c 	b.w	8021fc4 <_kill_r>
 8021f2c:	2b01      	cmp	r3, #1
 8021f2e:	d00a      	beq.n	8021f46 <_raise_r+0x4c>
 8021f30:	1c59      	adds	r1, r3, #1
 8021f32:	d103      	bne.n	8021f3c <_raise_r+0x42>
 8021f34:	2316      	movs	r3, #22
 8021f36:	6003      	str	r3, [r0, #0]
 8021f38:	2001      	movs	r0, #1
 8021f3a:	e7e7      	b.n	8021f0c <_raise_r+0x12>
 8021f3c:	2100      	movs	r1, #0
 8021f3e:	4620      	mov	r0, r4
 8021f40:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8021f44:	4798      	blx	r3
 8021f46:	2000      	movs	r0, #0
 8021f48:	e7e0      	b.n	8021f0c <_raise_r+0x12>
	...

08021f4c <raise>:
 8021f4c:	4b02      	ldr	r3, [pc, #8]	@ (8021f58 <raise+0xc>)
 8021f4e:	4601      	mov	r1, r0
 8021f50:	6818      	ldr	r0, [r3, #0]
 8021f52:	f7ff bfd2 	b.w	8021efa <_raise_r>
 8021f56:	bf00      	nop
 8021f58:	200000a0 	.word	0x200000a0

08021f5c <_close_r>:
 8021f5c:	b538      	push	{r3, r4, r5, lr}
 8021f5e:	2300      	movs	r3, #0
 8021f60:	4d05      	ldr	r5, [pc, #20]	@ (8021f78 <_close_r+0x1c>)
 8021f62:	4604      	mov	r4, r0
 8021f64:	4608      	mov	r0, r1
 8021f66:	602b      	str	r3, [r5, #0]
 8021f68:	f7df f8a8 	bl	80010bc <_close>
 8021f6c:	1c43      	adds	r3, r0, #1
 8021f6e:	d102      	bne.n	8021f76 <_close_r+0x1a>
 8021f70:	682b      	ldr	r3, [r5, #0]
 8021f72:	b103      	cbz	r3, 8021f76 <_close_r+0x1a>
 8021f74:	6023      	str	r3, [r4, #0]
 8021f76:	bd38      	pop	{r3, r4, r5, pc}
 8021f78:	20002dc8 	.word	0x20002dc8

08021f7c <_lseek_r>:
 8021f7c:	b538      	push	{r3, r4, r5, lr}
 8021f7e:	4604      	mov	r4, r0
 8021f80:	4d06      	ldr	r5, [pc, #24]	@ (8021f9c <_lseek_r+0x20>)
 8021f82:	4608      	mov	r0, r1
 8021f84:	4611      	mov	r1, r2
 8021f86:	2200      	movs	r2, #0
 8021f88:	602a      	str	r2, [r5, #0]
 8021f8a:	461a      	mov	r2, r3
 8021f8c:	f7df f8bd 	bl	800110a <_lseek>
 8021f90:	1c43      	adds	r3, r0, #1
 8021f92:	d102      	bne.n	8021f9a <_lseek_r+0x1e>
 8021f94:	682b      	ldr	r3, [r5, #0]
 8021f96:	b103      	cbz	r3, 8021f9a <_lseek_r+0x1e>
 8021f98:	6023      	str	r3, [r4, #0]
 8021f9a:	bd38      	pop	{r3, r4, r5, pc}
 8021f9c:	20002dc8 	.word	0x20002dc8

08021fa0 <_read_r>:
 8021fa0:	b538      	push	{r3, r4, r5, lr}
 8021fa2:	4604      	mov	r4, r0
 8021fa4:	4d06      	ldr	r5, [pc, #24]	@ (8021fc0 <_read_r+0x20>)
 8021fa6:	4608      	mov	r0, r1
 8021fa8:	4611      	mov	r1, r2
 8021faa:	2200      	movs	r2, #0
 8021fac:	602a      	str	r2, [r5, #0]
 8021fae:	461a      	mov	r2, r3
 8021fb0:	f7df f84b 	bl	800104a <_read>
 8021fb4:	1c43      	adds	r3, r0, #1
 8021fb6:	d102      	bne.n	8021fbe <_read_r+0x1e>
 8021fb8:	682b      	ldr	r3, [r5, #0]
 8021fba:	b103      	cbz	r3, 8021fbe <_read_r+0x1e>
 8021fbc:	6023      	str	r3, [r4, #0]
 8021fbe:	bd38      	pop	{r3, r4, r5, pc}
 8021fc0:	20002dc8 	.word	0x20002dc8

08021fc4 <_kill_r>:
 8021fc4:	b538      	push	{r3, r4, r5, lr}
 8021fc6:	2300      	movs	r3, #0
 8021fc8:	4d06      	ldr	r5, [pc, #24]	@ (8021fe4 <_kill_r+0x20>)
 8021fca:	4604      	mov	r4, r0
 8021fcc:	4608      	mov	r0, r1
 8021fce:	4611      	mov	r1, r2
 8021fd0:	602b      	str	r3, [r5, #0]
 8021fd2:	f7df f81f 	bl	8001014 <_kill>
 8021fd6:	1c43      	adds	r3, r0, #1
 8021fd8:	d102      	bne.n	8021fe0 <_kill_r+0x1c>
 8021fda:	682b      	ldr	r3, [r5, #0]
 8021fdc:	b103      	cbz	r3, 8021fe0 <_kill_r+0x1c>
 8021fde:	6023      	str	r3, [r4, #0]
 8021fe0:	bd38      	pop	{r3, r4, r5, pc}
 8021fe2:	bf00      	nop
 8021fe4:	20002dc8 	.word	0x20002dc8

08021fe8 <_getpid_r>:
 8021fe8:	f7df b80c 	b.w	8001004 <_getpid>

08021fec <_sbrk_r>:
 8021fec:	b538      	push	{r3, r4, r5, lr}
 8021fee:	2300      	movs	r3, #0
 8021ff0:	4d05      	ldr	r5, [pc, #20]	@ (8022008 <_sbrk_r+0x1c>)
 8021ff2:	4604      	mov	r4, r0
 8021ff4:	4608      	mov	r0, r1
 8021ff6:	602b      	str	r3, [r5, #0]
 8021ff8:	f7df f894 	bl	8001124 <_sbrk>
 8021ffc:	1c43      	adds	r3, r0, #1
 8021ffe:	d102      	bne.n	8022006 <_sbrk_r+0x1a>
 8022000:	682b      	ldr	r3, [r5, #0]
 8022002:	b103      	cbz	r3, 8022006 <_sbrk_r+0x1a>
 8022004:	6023      	str	r3, [r4, #0]
 8022006:	bd38      	pop	{r3, r4, r5, pc}
 8022008:	20002dc8 	.word	0x20002dc8

0802200c <_write_r>:
 802200c:	b538      	push	{r3, r4, r5, lr}
 802200e:	4604      	mov	r4, r0
 8022010:	4d06      	ldr	r5, [pc, #24]	@ (802202c <_write_r+0x20>)
 8022012:	4608      	mov	r0, r1
 8022014:	4611      	mov	r1, r2
 8022016:	2200      	movs	r2, #0
 8022018:	602a      	str	r2, [r5, #0]
 802201a:	461a      	mov	r2, r3
 802201c:	f7df f832 	bl	8001084 <_write>
 8022020:	1c43      	adds	r3, r0, #1
 8022022:	d102      	bne.n	802202a <_write_r+0x1e>
 8022024:	682b      	ldr	r3, [r5, #0]
 8022026:	b103      	cbz	r3, 802202a <_write_r+0x1e>
 8022028:	6023      	str	r3, [r4, #0]
 802202a:	bd38      	pop	{r3, r4, r5, pc}
 802202c:	20002dc8 	.word	0x20002dc8

08022030 <__errno>:
 8022030:	4b01      	ldr	r3, [pc, #4]	@ (8022038 <__errno+0x8>)
 8022032:	6818      	ldr	r0, [r3, #0]
 8022034:	4770      	bx	lr
 8022036:	bf00      	nop
 8022038:	200000a0 	.word	0x200000a0

0802203c <__libc_init_array>:
 802203c:	b570      	push	{r4, r5, r6, lr}
 802203e:	4d0d      	ldr	r5, [pc, #52]	@ (8022074 <__libc_init_array+0x38>)
 8022040:	2600      	movs	r6, #0
 8022042:	4c0d      	ldr	r4, [pc, #52]	@ (8022078 <__libc_init_array+0x3c>)
 8022044:	1b64      	subs	r4, r4, r5
 8022046:	10a4      	asrs	r4, r4, #2
 8022048:	42a6      	cmp	r6, r4
 802204a:	d109      	bne.n	8022060 <__libc_init_array+0x24>
 802204c:	4d0b      	ldr	r5, [pc, #44]	@ (802207c <__libc_init_array+0x40>)
 802204e:	2600      	movs	r6, #0
 8022050:	4c0b      	ldr	r4, [pc, #44]	@ (8022080 <__libc_init_array+0x44>)
 8022052:	f000 fd75 	bl	8022b40 <_init>
 8022056:	1b64      	subs	r4, r4, r5
 8022058:	10a4      	asrs	r4, r4, #2
 802205a:	42a6      	cmp	r6, r4
 802205c:	d105      	bne.n	802206a <__libc_init_array+0x2e>
 802205e:	bd70      	pop	{r4, r5, r6, pc}
 8022060:	f855 3b04 	ldr.w	r3, [r5], #4
 8022064:	3601      	adds	r6, #1
 8022066:	4798      	blx	r3
 8022068:	e7ee      	b.n	8022048 <__libc_init_array+0xc>
 802206a:	f855 3b04 	ldr.w	r3, [r5], #4
 802206e:	3601      	adds	r6, #1
 8022070:	4798      	blx	r3
 8022072:	e7f2      	b.n	802205a <__libc_init_array+0x1e>
 8022074:	08028958 	.word	0x08028958
 8022078:	08028958 	.word	0x08028958
 802207c:	08028958 	.word	0x08028958
 8022080:	08028970 	.word	0x08028970

08022084 <__retarget_lock_init_recursive>:
 8022084:	4770      	bx	lr

08022086 <__retarget_lock_acquire_recursive>:
 8022086:	4770      	bx	lr

08022088 <__retarget_lock_release_recursive>:
 8022088:	4770      	bx	lr

0802208a <memcpy>:
 802208a:	440a      	add	r2, r1
 802208c:	1e43      	subs	r3, r0, #1
 802208e:	4291      	cmp	r1, r2
 8022090:	d100      	bne.n	8022094 <memcpy+0xa>
 8022092:	4770      	bx	lr
 8022094:	b510      	push	{r4, lr}
 8022096:	f811 4b01 	ldrb.w	r4, [r1], #1
 802209a:	4291      	cmp	r1, r2
 802209c:	f803 4f01 	strb.w	r4, [r3, #1]!
 80220a0:	d1f9      	bne.n	8022096 <memcpy+0xc>
 80220a2:	bd10      	pop	{r4, pc}

080220a4 <__register_exitproc>:
 80220a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80220a8:	4d28      	ldr	r5, [pc, #160]	@ (802214c <__register_exitproc+0xa8>)
 80220aa:	4607      	mov	r7, r0
 80220ac:	4691      	mov	r9, r2
 80220ae:	460e      	mov	r6, r1
 80220b0:	6828      	ldr	r0, [r5, #0]
 80220b2:	4698      	mov	r8, r3
 80220b4:	f7ff ffe7 	bl	8022086 <__retarget_lock_acquire_recursive>
 80220b8:	4a25      	ldr	r2, [pc, #148]	@ (8022150 <__register_exitproc+0xac>)
 80220ba:	6814      	ldr	r4, [r2, #0]
 80220bc:	b93c      	cbnz	r4, 80220ce <__register_exitproc+0x2a>
 80220be:	4b25      	ldr	r3, [pc, #148]	@ (8022154 <__register_exitproc+0xb0>)
 80220c0:	6013      	str	r3, [r2, #0]
 80220c2:	4a25      	ldr	r2, [pc, #148]	@ (8022158 <__register_exitproc+0xb4>)
 80220c4:	b112      	cbz	r2, 80220cc <__register_exitproc+0x28>
 80220c6:	6812      	ldr	r2, [r2, #0]
 80220c8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80220cc:	4c21      	ldr	r4, [pc, #132]	@ (8022154 <__register_exitproc+0xb0>)
 80220ce:	6863      	ldr	r3, [r4, #4]
 80220d0:	2b1f      	cmp	r3, #31
 80220d2:	dd06      	ble.n	80220e2 <__register_exitproc+0x3e>
 80220d4:	6828      	ldr	r0, [r5, #0]
 80220d6:	f7ff ffd7 	bl	8022088 <__retarget_lock_release_recursive>
 80220da:	f04f 30ff 	mov.w	r0, #4294967295
 80220de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80220e2:	b33f      	cbz	r7, 8022134 <__register_exitproc+0x90>
 80220e4:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80220e8:	b968      	cbnz	r0, 8022106 <__register_exitproc+0x62>
 80220ea:	4b1c      	ldr	r3, [pc, #112]	@ (802215c <__register_exitproc+0xb8>)
 80220ec:	2b00      	cmp	r3, #0
 80220ee:	d0f1      	beq.n	80220d4 <__register_exitproc+0x30>
 80220f0:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80220f4:	f7ff fd16 	bl	8021b24 <malloc>
 80220f8:	2800      	cmp	r0, #0
 80220fa:	d0eb      	beq.n	80220d4 <__register_exitproc+0x30>
 80220fc:	2300      	movs	r3, #0
 80220fe:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022102:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022106:	6863      	ldr	r3, [r4, #4]
 8022108:	2201      	movs	r2, #1
 802210a:	2f02      	cmp	r7, #2
 802210c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022110:	fa02 f203 	lsl.w	r2, r2, r3
 8022114:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022118:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 802211c:	ea43 0302 	orr.w	r3, r3, r2
 8022120:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8022124:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022128:	bf02      	ittt	eq
 802212a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802212e:	4313      	orreq	r3, r2
 8022130:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8022134:	6863      	ldr	r3, [r4, #4]
 8022136:	6828      	ldr	r0, [r5, #0]
 8022138:	1c5a      	adds	r2, r3, #1
 802213a:	3302      	adds	r3, #2
 802213c:	6062      	str	r2, [r4, #4]
 802213e:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8022142:	f7ff ffa1 	bl	8022088 <__retarget_lock_release_recursive>
 8022146:	2000      	movs	r0, #0
 8022148:	e7c9      	b.n	80220de <__register_exitproc+0x3a>
 802214a:	bf00      	nop
 802214c:	200000f0 	.word	0x200000f0
 8022150:	20002e5c 	.word	0x20002e5c
 8022154:	20002dd0 	.word	0x20002dd0
 8022158:	08025008 	.word	0x08025008
 802215c:	08021b25 	.word	0x08021b25

08022160 <_free_r>:
 8022160:	b538      	push	{r3, r4, r5, lr}
 8022162:	4605      	mov	r5, r0
 8022164:	2900      	cmp	r1, #0
 8022166:	d041      	beq.n	80221ec <_free_r+0x8c>
 8022168:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802216c:	1f0c      	subs	r4, r1, #4
 802216e:	2b00      	cmp	r3, #0
 8022170:	bfb8      	it	lt
 8022172:	18e4      	addlt	r4, r4, r3
 8022174:	f7ff fd88 	bl	8021c88 <__malloc_lock>
 8022178:	4a1d      	ldr	r2, [pc, #116]	@ (80221f0 <_free_r+0x90>)
 802217a:	6813      	ldr	r3, [r2, #0]
 802217c:	b933      	cbnz	r3, 802218c <_free_r+0x2c>
 802217e:	6063      	str	r3, [r4, #4]
 8022180:	6014      	str	r4, [r2, #0]
 8022182:	4628      	mov	r0, r5
 8022184:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022188:	f7ff bd84 	b.w	8021c94 <__malloc_unlock>
 802218c:	42a3      	cmp	r3, r4
 802218e:	d908      	bls.n	80221a2 <_free_r+0x42>
 8022190:	6820      	ldr	r0, [r4, #0]
 8022192:	1821      	adds	r1, r4, r0
 8022194:	428b      	cmp	r3, r1
 8022196:	bf01      	itttt	eq
 8022198:	6819      	ldreq	r1, [r3, #0]
 802219a:	685b      	ldreq	r3, [r3, #4]
 802219c:	1809      	addeq	r1, r1, r0
 802219e:	6021      	streq	r1, [r4, #0]
 80221a0:	e7ed      	b.n	802217e <_free_r+0x1e>
 80221a2:	461a      	mov	r2, r3
 80221a4:	685b      	ldr	r3, [r3, #4]
 80221a6:	b10b      	cbz	r3, 80221ac <_free_r+0x4c>
 80221a8:	42a3      	cmp	r3, r4
 80221aa:	d9fa      	bls.n	80221a2 <_free_r+0x42>
 80221ac:	6811      	ldr	r1, [r2, #0]
 80221ae:	1850      	adds	r0, r2, r1
 80221b0:	42a0      	cmp	r0, r4
 80221b2:	d10b      	bne.n	80221cc <_free_r+0x6c>
 80221b4:	6820      	ldr	r0, [r4, #0]
 80221b6:	4401      	add	r1, r0
 80221b8:	1850      	adds	r0, r2, r1
 80221ba:	6011      	str	r1, [r2, #0]
 80221bc:	4283      	cmp	r3, r0
 80221be:	d1e0      	bne.n	8022182 <_free_r+0x22>
 80221c0:	6818      	ldr	r0, [r3, #0]
 80221c2:	685b      	ldr	r3, [r3, #4]
 80221c4:	4408      	add	r0, r1
 80221c6:	6053      	str	r3, [r2, #4]
 80221c8:	6010      	str	r0, [r2, #0]
 80221ca:	e7da      	b.n	8022182 <_free_r+0x22>
 80221cc:	d902      	bls.n	80221d4 <_free_r+0x74>
 80221ce:	230c      	movs	r3, #12
 80221d0:	602b      	str	r3, [r5, #0]
 80221d2:	e7d6      	b.n	8022182 <_free_r+0x22>
 80221d4:	6820      	ldr	r0, [r4, #0]
 80221d6:	1821      	adds	r1, r4, r0
 80221d8:	428b      	cmp	r3, r1
 80221da:	bf02      	ittt	eq
 80221dc:	6819      	ldreq	r1, [r3, #0]
 80221de:	685b      	ldreq	r3, [r3, #4]
 80221e0:	1809      	addeq	r1, r1, r0
 80221e2:	6063      	str	r3, [r4, #4]
 80221e4:	bf08      	it	eq
 80221e6:	6021      	streq	r1, [r4, #0]
 80221e8:	6054      	str	r4, [r2, #4]
 80221ea:	e7ca      	b.n	8022182 <_free_r+0x22>
 80221ec:	bd38      	pop	{r3, r4, r5, pc}
 80221ee:	bf00      	nop
 80221f0:	20002c88 	.word	0x20002c88

080221f4 <__sfputc_r>:
 80221f4:	6893      	ldr	r3, [r2, #8]
 80221f6:	3b01      	subs	r3, #1
 80221f8:	2b00      	cmp	r3, #0
 80221fa:	6093      	str	r3, [r2, #8]
 80221fc:	b410      	push	{r4}
 80221fe:	da08      	bge.n	8022212 <__sfputc_r+0x1e>
 8022200:	6994      	ldr	r4, [r2, #24]
 8022202:	42a3      	cmp	r3, r4
 8022204:	db01      	blt.n	802220a <__sfputc_r+0x16>
 8022206:	290a      	cmp	r1, #10
 8022208:	d103      	bne.n	8022212 <__sfputc_r+0x1e>
 802220a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802220e:	f000 bb71 	b.w	80228f4 <__swbuf_r>
 8022212:	6813      	ldr	r3, [r2, #0]
 8022214:	1c58      	adds	r0, r3, #1
 8022216:	6010      	str	r0, [r2, #0]
 8022218:	4608      	mov	r0, r1
 802221a:	7019      	strb	r1, [r3, #0]
 802221c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022220:	4770      	bx	lr

08022222 <__sfputs_r>:
 8022222:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022224:	4606      	mov	r6, r0
 8022226:	460f      	mov	r7, r1
 8022228:	4614      	mov	r4, r2
 802222a:	18d5      	adds	r5, r2, r3
 802222c:	42ac      	cmp	r4, r5
 802222e:	d101      	bne.n	8022234 <__sfputs_r+0x12>
 8022230:	2000      	movs	r0, #0
 8022232:	e007      	b.n	8022244 <__sfputs_r+0x22>
 8022234:	463a      	mov	r2, r7
 8022236:	f814 1b01 	ldrb.w	r1, [r4], #1
 802223a:	4630      	mov	r0, r6
 802223c:	f7ff ffda 	bl	80221f4 <__sfputc_r>
 8022240:	1c43      	adds	r3, r0, #1
 8022242:	d1f3      	bne.n	802222c <__sfputs_r+0xa>
 8022244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08022248 <_vfiprintf_r>:
 8022248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802224c:	460d      	mov	r5, r1
 802224e:	b09d      	sub	sp, #116	@ 0x74
 8022250:	4614      	mov	r4, r2
 8022252:	4698      	mov	r8, r3
 8022254:	4606      	mov	r6, r0
 8022256:	b118      	cbz	r0, 8022260 <_vfiprintf_r+0x18>
 8022258:	6a03      	ldr	r3, [r0, #32]
 802225a:	b90b      	cbnz	r3, 8022260 <_vfiprintf_r+0x18>
 802225c:	f7ff fdba 	bl	8021dd4 <__sinit>
 8022260:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022262:	07d9      	lsls	r1, r3, #31
 8022264:	d405      	bmi.n	8022272 <_vfiprintf_r+0x2a>
 8022266:	89ab      	ldrh	r3, [r5, #12]
 8022268:	059a      	lsls	r2, r3, #22
 802226a:	d402      	bmi.n	8022272 <_vfiprintf_r+0x2a>
 802226c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802226e:	f7ff ff0a 	bl	8022086 <__retarget_lock_acquire_recursive>
 8022272:	89ab      	ldrh	r3, [r5, #12]
 8022274:	071b      	lsls	r3, r3, #28
 8022276:	d501      	bpl.n	802227c <_vfiprintf_r+0x34>
 8022278:	692b      	ldr	r3, [r5, #16]
 802227a:	b99b      	cbnz	r3, 80222a4 <_vfiprintf_r+0x5c>
 802227c:	4629      	mov	r1, r5
 802227e:	4630      	mov	r0, r6
 8022280:	f000 fb76 	bl	8022970 <__swsetup_r>
 8022284:	b170      	cbz	r0, 80222a4 <_vfiprintf_r+0x5c>
 8022286:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022288:	07dc      	lsls	r4, r3, #31
 802228a:	d504      	bpl.n	8022296 <_vfiprintf_r+0x4e>
 802228c:	f04f 30ff 	mov.w	r0, #4294967295
 8022290:	b01d      	add	sp, #116	@ 0x74
 8022292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022296:	89ab      	ldrh	r3, [r5, #12]
 8022298:	0598      	lsls	r0, r3, #22
 802229a:	d4f7      	bmi.n	802228c <_vfiprintf_r+0x44>
 802229c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802229e:	f7ff fef3 	bl	8022088 <__retarget_lock_release_recursive>
 80222a2:	e7f3      	b.n	802228c <_vfiprintf_r+0x44>
 80222a4:	2300      	movs	r3, #0
 80222a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80222aa:	f04f 0901 	mov.w	r9, #1
 80222ae:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 8022464 <_vfiprintf_r+0x21c>
 80222b2:	9309      	str	r3, [sp, #36]	@ 0x24
 80222b4:	2320      	movs	r3, #32
 80222b6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80222ba:	2330      	movs	r3, #48	@ 0x30
 80222bc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80222c0:	4623      	mov	r3, r4
 80222c2:	469a      	mov	sl, r3
 80222c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80222c8:	b10a      	cbz	r2, 80222ce <_vfiprintf_r+0x86>
 80222ca:	2a25      	cmp	r2, #37	@ 0x25
 80222cc:	d1f9      	bne.n	80222c2 <_vfiprintf_r+0x7a>
 80222ce:	ebba 0b04 	subs.w	fp, sl, r4
 80222d2:	d00b      	beq.n	80222ec <_vfiprintf_r+0xa4>
 80222d4:	465b      	mov	r3, fp
 80222d6:	4622      	mov	r2, r4
 80222d8:	4629      	mov	r1, r5
 80222da:	4630      	mov	r0, r6
 80222dc:	f7ff ffa1 	bl	8022222 <__sfputs_r>
 80222e0:	3001      	adds	r0, #1
 80222e2:	f000 80a7 	beq.w	8022434 <_vfiprintf_r+0x1ec>
 80222e6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80222e8:	445a      	add	r2, fp
 80222ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80222ec:	f89a 3000 	ldrb.w	r3, [sl]
 80222f0:	2b00      	cmp	r3, #0
 80222f2:	f000 809f 	beq.w	8022434 <_vfiprintf_r+0x1ec>
 80222f6:	2300      	movs	r3, #0
 80222f8:	f04f 32ff 	mov.w	r2, #4294967295
 80222fc:	f10a 0a01 	add.w	sl, sl, #1
 8022300:	9304      	str	r3, [sp, #16]
 8022302:	9307      	str	r3, [sp, #28]
 8022304:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8022308:	931a      	str	r3, [sp, #104]	@ 0x68
 802230a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802230e:	4654      	mov	r4, sl
 8022310:	2205      	movs	r2, #5
 8022312:	4854      	ldr	r0, [pc, #336]	@ (8022464 <_vfiprintf_r+0x21c>)
 8022314:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022318:	f000 fb80 	bl	8022a1c <memchr>
 802231c:	9a04      	ldr	r2, [sp, #16]
 802231e:	b9d8      	cbnz	r0, 8022358 <_vfiprintf_r+0x110>
 8022320:	06d1      	lsls	r1, r2, #27
 8022322:	bf44      	itt	mi
 8022324:	2320      	movmi	r3, #32
 8022326:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802232a:	0713      	lsls	r3, r2, #28
 802232c:	bf44      	itt	mi
 802232e:	232b      	movmi	r3, #43	@ 0x2b
 8022330:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022334:	f89a 3000 	ldrb.w	r3, [sl]
 8022338:	2b2a      	cmp	r3, #42	@ 0x2a
 802233a:	d015      	beq.n	8022368 <_vfiprintf_r+0x120>
 802233c:	9a07      	ldr	r2, [sp, #28]
 802233e:	4654      	mov	r4, sl
 8022340:	2000      	movs	r0, #0
 8022342:	f04f 0c0a 	mov.w	ip, #10
 8022346:	4621      	mov	r1, r4
 8022348:	f811 3b01 	ldrb.w	r3, [r1], #1
 802234c:	3b30      	subs	r3, #48	@ 0x30
 802234e:	2b09      	cmp	r3, #9
 8022350:	d94b      	bls.n	80223ea <_vfiprintf_r+0x1a2>
 8022352:	b1b0      	cbz	r0, 8022382 <_vfiprintf_r+0x13a>
 8022354:	9207      	str	r2, [sp, #28]
 8022356:	e014      	b.n	8022382 <_vfiprintf_r+0x13a>
 8022358:	eba0 0308 	sub.w	r3, r0, r8
 802235c:	46a2      	mov	sl, r4
 802235e:	fa09 f303 	lsl.w	r3, r9, r3
 8022362:	4313      	orrs	r3, r2
 8022364:	9304      	str	r3, [sp, #16]
 8022366:	e7d2      	b.n	802230e <_vfiprintf_r+0xc6>
 8022368:	9b03      	ldr	r3, [sp, #12]
 802236a:	1d19      	adds	r1, r3, #4
 802236c:	681b      	ldr	r3, [r3, #0]
 802236e:	2b00      	cmp	r3, #0
 8022370:	9103      	str	r1, [sp, #12]
 8022372:	bfbb      	ittet	lt
 8022374:	425b      	neglt	r3, r3
 8022376:	f042 0202 	orrlt.w	r2, r2, #2
 802237a:	9307      	strge	r3, [sp, #28]
 802237c:	9307      	strlt	r3, [sp, #28]
 802237e:	bfb8      	it	lt
 8022380:	9204      	strlt	r2, [sp, #16]
 8022382:	7823      	ldrb	r3, [r4, #0]
 8022384:	2b2e      	cmp	r3, #46	@ 0x2e
 8022386:	d10a      	bne.n	802239e <_vfiprintf_r+0x156>
 8022388:	7863      	ldrb	r3, [r4, #1]
 802238a:	2b2a      	cmp	r3, #42	@ 0x2a
 802238c:	d132      	bne.n	80223f4 <_vfiprintf_r+0x1ac>
 802238e:	9b03      	ldr	r3, [sp, #12]
 8022390:	3402      	adds	r4, #2
 8022392:	1d1a      	adds	r2, r3, #4
 8022394:	681b      	ldr	r3, [r3, #0]
 8022396:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802239a:	9203      	str	r2, [sp, #12]
 802239c:	9305      	str	r3, [sp, #20]
 802239e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8022474 <_vfiprintf_r+0x22c>
 80223a2:	2203      	movs	r2, #3
 80223a4:	7821      	ldrb	r1, [r4, #0]
 80223a6:	4650      	mov	r0, sl
 80223a8:	f000 fb38 	bl	8022a1c <memchr>
 80223ac:	b138      	cbz	r0, 80223be <_vfiprintf_r+0x176>
 80223ae:	eba0 000a 	sub.w	r0, r0, sl
 80223b2:	2240      	movs	r2, #64	@ 0x40
 80223b4:	9b04      	ldr	r3, [sp, #16]
 80223b6:	3401      	adds	r4, #1
 80223b8:	4082      	lsls	r2, r0
 80223ba:	4313      	orrs	r3, r2
 80223bc:	9304      	str	r3, [sp, #16]
 80223be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80223c2:	2206      	movs	r2, #6
 80223c4:	4828      	ldr	r0, [pc, #160]	@ (8022468 <_vfiprintf_r+0x220>)
 80223c6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80223ca:	f000 fb27 	bl	8022a1c <memchr>
 80223ce:	2800      	cmp	r0, #0
 80223d0:	d03f      	beq.n	8022452 <_vfiprintf_r+0x20a>
 80223d2:	4b26      	ldr	r3, [pc, #152]	@ (802246c <_vfiprintf_r+0x224>)
 80223d4:	bb1b      	cbnz	r3, 802241e <_vfiprintf_r+0x1d6>
 80223d6:	9b03      	ldr	r3, [sp, #12]
 80223d8:	3307      	adds	r3, #7
 80223da:	f023 0307 	bic.w	r3, r3, #7
 80223de:	3308      	adds	r3, #8
 80223e0:	9303      	str	r3, [sp, #12]
 80223e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80223e4:	443b      	add	r3, r7
 80223e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80223e8:	e76a      	b.n	80222c0 <_vfiprintf_r+0x78>
 80223ea:	fb0c 3202 	mla	r2, ip, r2, r3
 80223ee:	460c      	mov	r4, r1
 80223f0:	2001      	movs	r0, #1
 80223f2:	e7a8      	b.n	8022346 <_vfiprintf_r+0xfe>
 80223f4:	2300      	movs	r3, #0
 80223f6:	3401      	adds	r4, #1
 80223f8:	f04f 0c0a 	mov.w	ip, #10
 80223fc:	4619      	mov	r1, r3
 80223fe:	9305      	str	r3, [sp, #20]
 8022400:	4620      	mov	r0, r4
 8022402:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022406:	3a30      	subs	r2, #48	@ 0x30
 8022408:	2a09      	cmp	r2, #9
 802240a:	d903      	bls.n	8022414 <_vfiprintf_r+0x1cc>
 802240c:	2b00      	cmp	r3, #0
 802240e:	d0c6      	beq.n	802239e <_vfiprintf_r+0x156>
 8022410:	9105      	str	r1, [sp, #20]
 8022412:	e7c4      	b.n	802239e <_vfiprintf_r+0x156>
 8022414:	fb0c 2101 	mla	r1, ip, r1, r2
 8022418:	4604      	mov	r4, r0
 802241a:	2301      	movs	r3, #1
 802241c:	e7f0      	b.n	8022400 <_vfiprintf_r+0x1b8>
 802241e:	ab03      	add	r3, sp, #12
 8022420:	462a      	mov	r2, r5
 8022422:	a904      	add	r1, sp, #16
 8022424:	4630      	mov	r0, r6
 8022426:	9300      	str	r3, [sp, #0]
 8022428:	4b11      	ldr	r3, [pc, #68]	@ (8022470 <_vfiprintf_r+0x228>)
 802242a:	f3af 8000 	nop.w
 802242e:	4607      	mov	r7, r0
 8022430:	1c78      	adds	r0, r7, #1
 8022432:	d1d6      	bne.n	80223e2 <_vfiprintf_r+0x19a>
 8022434:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022436:	07d9      	lsls	r1, r3, #31
 8022438:	d405      	bmi.n	8022446 <_vfiprintf_r+0x1fe>
 802243a:	89ab      	ldrh	r3, [r5, #12]
 802243c:	059a      	lsls	r2, r3, #22
 802243e:	d402      	bmi.n	8022446 <_vfiprintf_r+0x1fe>
 8022440:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022442:	f7ff fe21 	bl	8022088 <__retarget_lock_release_recursive>
 8022446:	89ab      	ldrh	r3, [r5, #12]
 8022448:	065b      	lsls	r3, r3, #25
 802244a:	f53f af1f 	bmi.w	802228c <_vfiprintf_r+0x44>
 802244e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022450:	e71e      	b.n	8022290 <_vfiprintf_r+0x48>
 8022452:	ab03      	add	r3, sp, #12
 8022454:	462a      	mov	r2, r5
 8022456:	a904      	add	r1, sp, #16
 8022458:	4630      	mov	r0, r6
 802245a:	9300      	str	r3, [sp, #0]
 802245c:	4b04      	ldr	r3, [pc, #16]	@ (8022470 <_vfiprintf_r+0x228>)
 802245e:	f000 f87d 	bl	802255c <_printf_i>
 8022462:	e7e4      	b.n	802242e <_vfiprintf_r+0x1e6>
 8022464:	0802500c 	.word	0x0802500c
 8022468:	08025016 	.word	0x08025016
 802246c:	00000000 	.word	0x00000000
 8022470:	08022223 	.word	0x08022223
 8022474:	08025012 	.word	0x08025012

08022478 <_printf_common>:
 8022478:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802247c:	4616      	mov	r6, r2
 802247e:	4698      	mov	r8, r3
 8022480:	688a      	ldr	r2, [r1, #8]
 8022482:	4607      	mov	r7, r0
 8022484:	690b      	ldr	r3, [r1, #16]
 8022486:	460c      	mov	r4, r1
 8022488:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802248c:	4293      	cmp	r3, r2
 802248e:	bfb8      	it	lt
 8022490:	4613      	movlt	r3, r2
 8022492:	6033      	str	r3, [r6, #0]
 8022494:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022498:	b10a      	cbz	r2, 802249e <_printf_common+0x26>
 802249a:	3301      	adds	r3, #1
 802249c:	6033      	str	r3, [r6, #0]
 802249e:	6823      	ldr	r3, [r4, #0]
 80224a0:	0699      	lsls	r1, r3, #26
 80224a2:	bf42      	ittt	mi
 80224a4:	6833      	ldrmi	r3, [r6, #0]
 80224a6:	3302      	addmi	r3, #2
 80224a8:	6033      	strmi	r3, [r6, #0]
 80224aa:	6825      	ldr	r5, [r4, #0]
 80224ac:	f015 0506 	ands.w	r5, r5, #6
 80224b0:	d106      	bne.n	80224c0 <_printf_common+0x48>
 80224b2:	f104 0a19 	add.w	sl, r4, #25
 80224b6:	68e3      	ldr	r3, [r4, #12]
 80224b8:	6832      	ldr	r2, [r6, #0]
 80224ba:	1a9b      	subs	r3, r3, r2
 80224bc:	42ab      	cmp	r3, r5
 80224be:	dc2b      	bgt.n	8022518 <_printf_common+0xa0>
 80224c0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80224c4:	6822      	ldr	r2, [r4, #0]
 80224c6:	3b00      	subs	r3, #0
 80224c8:	bf18      	it	ne
 80224ca:	2301      	movne	r3, #1
 80224cc:	0692      	lsls	r2, r2, #26
 80224ce:	d430      	bmi.n	8022532 <_printf_common+0xba>
 80224d0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80224d4:	4641      	mov	r1, r8
 80224d6:	4638      	mov	r0, r7
 80224d8:	47c8      	blx	r9
 80224da:	3001      	adds	r0, #1
 80224dc:	d023      	beq.n	8022526 <_printf_common+0xae>
 80224de:	6823      	ldr	r3, [r4, #0]
 80224e0:	341a      	adds	r4, #26
 80224e2:	f854 2c0a 	ldr.w	r2, [r4, #-10]
 80224e6:	f003 0306 	and.w	r3, r3, #6
 80224ea:	2b04      	cmp	r3, #4
 80224ec:	bf0a      	itet	eq
 80224ee:	f854 5c0e 	ldreq.w	r5, [r4, #-14]
 80224f2:	2500      	movne	r5, #0
 80224f4:	6833      	ldreq	r3, [r6, #0]
 80224f6:	f04f 0600 	mov.w	r6, #0
 80224fa:	bf08      	it	eq
 80224fc:	1aed      	subeq	r5, r5, r3
 80224fe:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8022502:	bf08      	it	eq
 8022504:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022508:	4293      	cmp	r3, r2
 802250a:	bfc4      	itt	gt
 802250c:	1a9b      	subgt	r3, r3, r2
 802250e:	18ed      	addgt	r5, r5, r3
 8022510:	42b5      	cmp	r5, r6
 8022512:	d11a      	bne.n	802254a <_printf_common+0xd2>
 8022514:	2000      	movs	r0, #0
 8022516:	e008      	b.n	802252a <_printf_common+0xb2>
 8022518:	2301      	movs	r3, #1
 802251a:	4652      	mov	r2, sl
 802251c:	4641      	mov	r1, r8
 802251e:	4638      	mov	r0, r7
 8022520:	47c8      	blx	r9
 8022522:	3001      	adds	r0, #1
 8022524:	d103      	bne.n	802252e <_printf_common+0xb6>
 8022526:	f04f 30ff 	mov.w	r0, #4294967295
 802252a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802252e:	3501      	adds	r5, #1
 8022530:	e7c1      	b.n	80224b6 <_printf_common+0x3e>
 8022532:	18e1      	adds	r1, r4, r3
 8022534:	1c5a      	adds	r2, r3, #1
 8022536:	2030      	movs	r0, #48	@ 0x30
 8022538:	3302      	adds	r3, #2
 802253a:	4422      	add	r2, r4
 802253c:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8022540:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8022544:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8022548:	e7c2      	b.n	80224d0 <_printf_common+0x58>
 802254a:	2301      	movs	r3, #1
 802254c:	4622      	mov	r2, r4
 802254e:	4641      	mov	r1, r8
 8022550:	4638      	mov	r0, r7
 8022552:	47c8      	blx	r9
 8022554:	3001      	adds	r0, #1
 8022556:	d0e6      	beq.n	8022526 <_printf_common+0xae>
 8022558:	3601      	adds	r6, #1
 802255a:	e7d9      	b.n	8022510 <_printf_common+0x98>

0802255c <_printf_i>:
 802255c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022560:	7e0f      	ldrb	r7, [r1, #24]
 8022562:	4691      	mov	r9, r2
 8022564:	4680      	mov	r8, r0
 8022566:	460c      	mov	r4, r1
 8022568:	2f78      	cmp	r7, #120	@ 0x78
 802256a:	469a      	mov	sl, r3
 802256c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 802256e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8022572:	d807      	bhi.n	8022584 <_printf_i+0x28>
 8022574:	2f62      	cmp	r7, #98	@ 0x62
 8022576:	d80a      	bhi.n	802258e <_printf_i+0x32>
 8022578:	2f00      	cmp	r7, #0
 802257a:	f000 80d2 	beq.w	8022722 <_printf_i+0x1c6>
 802257e:	2f58      	cmp	r7, #88	@ 0x58
 8022580:	f000 80b9 	beq.w	80226f6 <_printf_i+0x19a>
 8022584:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022588:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802258c:	e03a      	b.n	8022604 <_printf_i+0xa8>
 802258e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8022592:	2b15      	cmp	r3, #21
 8022594:	d8f6      	bhi.n	8022584 <_printf_i+0x28>
 8022596:	a101      	add	r1, pc, #4	@ (adr r1, 802259c <_printf_i+0x40>)
 8022598:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802259c:	080225f5 	.word	0x080225f5
 80225a0:	08022609 	.word	0x08022609
 80225a4:	08022585 	.word	0x08022585
 80225a8:	08022585 	.word	0x08022585
 80225ac:	08022585 	.word	0x08022585
 80225b0:	08022585 	.word	0x08022585
 80225b4:	08022609 	.word	0x08022609
 80225b8:	08022585 	.word	0x08022585
 80225bc:	08022585 	.word	0x08022585
 80225c0:	08022585 	.word	0x08022585
 80225c4:	08022585 	.word	0x08022585
 80225c8:	08022709 	.word	0x08022709
 80225cc:	08022633 	.word	0x08022633
 80225d0:	080226c3 	.word	0x080226c3
 80225d4:	08022585 	.word	0x08022585
 80225d8:	08022585 	.word	0x08022585
 80225dc:	0802272b 	.word	0x0802272b
 80225e0:	08022585 	.word	0x08022585
 80225e4:	08022633 	.word	0x08022633
 80225e8:	08022585 	.word	0x08022585
 80225ec:	08022585 	.word	0x08022585
 80225f0:	080226cb 	.word	0x080226cb
 80225f4:	6833      	ldr	r3, [r6, #0]
 80225f6:	1d1a      	adds	r2, r3, #4
 80225f8:	681b      	ldr	r3, [r3, #0]
 80225fa:	6032      	str	r2, [r6, #0]
 80225fc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022600:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8022604:	2301      	movs	r3, #1
 8022606:	e09d      	b.n	8022744 <_printf_i+0x1e8>
 8022608:	6833      	ldr	r3, [r6, #0]
 802260a:	6820      	ldr	r0, [r4, #0]
 802260c:	1d19      	adds	r1, r3, #4
 802260e:	6031      	str	r1, [r6, #0]
 8022610:	0606      	lsls	r6, r0, #24
 8022612:	d501      	bpl.n	8022618 <_printf_i+0xbc>
 8022614:	681d      	ldr	r5, [r3, #0]
 8022616:	e003      	b.n	8022620 <_printf_i+0xc4>
 8022618:	0645      	lsls	r5, r0, #25
 802261a:	d5fb      	bpl.n	8022614 <_printf_i+0xb8>
 802261c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8022620:	2d00      	cmp	r5, #0
 8022622:	da03      	bge.n	802262c <_printf_i+0xd0>
 8022624:	232d      	movs	r3, #45	@ 0x2d
 8022626:	426d      	negs	r5, r5
 8022628:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802262c:	4859      	ldr	r0, [pc, #356]	@ (8022794 <_printf_i+0x238>)
 802262e:	230a      	movs	r3, #10
 8022630:	e011      	b.n	8022656 <_printf_i+0xfa>
 8022632:	6821      	ldr	r1, [r4, #0]
 8022634:	6833      	ldr	r3, [r6, #0]
 8022636:	0608      	lsls	r0, r1, #24
 8022638:	f853 5b04 	ldr.w	r5, [r3], #4
 802263c:	d402      	bmi.n	8022644 <_printf_i+0xe8>
 802263e:	0649      	lsls	r1, r1, #25
 8022640:	bf48      	it	mi
 8022642:	b2ad      	uxthmi	r5, r5
 8022644:	2f6f      	cmp	r7, #111	@ 0x6f
 8022646:	6033      	str	r3, [r6, #0]
 8022648:	4852      	ldr	r0, [pc, #328]	@ (8022794 <_printf_i+0x238>)
 802264a:	bf14      	ite	ne
 802264c:	230a      	movne	r3, #10
 802264e:	2308      	moveq	r3, #8
 8022650:	2100      	movs	r1, #0
 8022652:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8022656:	6866      	ldr	r6, [r4, #4]
 8022658:	2e00      	cmp	r6, #0
 802265a:	60a6      	str	r6, [r4, #8]
 802265c:	bfa2      	ittt	ge
 802265e:	6821      	ldrge	r1, [r4, #0]
 8022660:	f021 0104 	bicge.w	r1, r1, #4
 8022664:	6021      	strge	r1, [r4, #0]
 8022666:	b90d      	cbnz	r5, 802266c <_printf_i+0x110>
 8022668:	2e00      	cmp	r6, #0
 802266a:	d04b      	beq.n	8022704 <_printf_i+0x1a8>
 802266c:	4616      	mov	r6, r2
 802266e:	fbb5 f1f3 	udiv	r1, r5, r3
 8022672:	fb03 5711 	mls	r7, r3, r1, r5
 8022676:	5dc7      	ldrb	r7, [r0, r7]
 8022678:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802267c:	462f      	mov	r7, r5
 802267e:	460d      	mov	r5, r1
 8022680:	42bb      	cmp	r3, r7
 8022682:	d9f4      	bls.n	802266e <_printf_i+0x112>
 8022684:	2b08      	cmp	r3, #8
 8022686:	d10b      	bne.n	80226a0 <_printf_i+0x144>
 8022688:	6823      	ldr	r3, [r4, #0]
 802268a:	07df      	lsls	r7, r3, #31
 802268c:	d508      	bpl.n	80226a0 <_printf_i+0x144>
 802268e:	6923      	ldr	r3, [r4, #16]
 8022690:	6861      	ldr	r1, [r4, #4]
 8022692:	4299      	cmp	r1, r3
 8022694:	bfde      	ittt	le
 8022696:	2330      	movle	r3, #48	@ 0x30
 8022698:	f806 3c01 	strble.w	r3, [r6, #-1]
 802269c:	f106 36ff 	addle.w	r6, r6, #4294967295
 80226a0:	1b92      	subs	r2, r2, r6
 80226a2:	6122      	str	r2, [r4, #16]
 80226a4:	464b      	mov	r3, r9
 80226a6:	aa03      	add	r2, sp, #12
 80226a8:	4621      	mov	r1, r4
 80226aa:	4640      	mov	r0, r8
 80226ac:	f8cd a000 	str.w	sl, [sp]
 80226b0:	f7ff fee2 	bl	8022478 <_printf_common>
 80226b4:	3001      	adds	r0, #1
 80226b6:	d14a      	bne.n	802274e <_printf_i+0x1f2>
 80226b8:	f04f 30ff 	mov.w	r0, #4294967295
 80226bc:	b004      	add	sp, #16
 80226be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80226c2:	6823      	ldr	r3, [r4, #0]
 80226c4:	f043 0320 	orr.w	r3, r3, #32
 80226c8:	6023      	str	r3, [r4, #0]
 80226ca:	2778      	movs	r7, #120	@ 0x78
 80226cc:	4832      	ldr	r0, [pc, #200]	@ (8022798 <_printf_i+0x23c>)
 80226ce:	6823      	ldr	r3, [r4, #0]
 80226d0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80226d4:	061f      	lsls	r7, r3, #24
 80226d6:	6831      	ldr	r1, [r6, #0]
 80226d8:	f851 5b04 	ldr.w	r5, [r1], #4
 80226dc:	d402      	bmi.n	80226e4 <_printf_i+0x188>
 80226de:	065f      	lsls	r7, r3, #25
 80226e0:	bf48      	it	mi
 80226e2:	b2ad      	uxthmi	r5, r5
 80226e4:	6031      	str	r1, [r6, #0]
 80226e6:	07d9      	lsls	r1, r3, #31
 80226e8:	bf44      	itt	mi
 80226ea:	f043 0320 	orrmi.w	r3, r3, #32
 80226ee:	6023      	strmi	r3, [r4, #0]
 80226f0:	b11d      	cbz	r5, 80226fa <_printf_i+0x19e>
 80226f2:	2310      	movs	r3, #16
 80226f4:	e7ac      	b.n	8022650 <_printf_i+0xf4>
 80226f6:	4827      	ldr	r0, [pc, #156]	@ (8022794 <_printf_i+0x238>)
 80226f8:	e7e9      	b.n	80226ce <_printf_i+0x172>
 80226fa:	6823      	ldr	r3, [r4, #0]
 80226fc:	f023 0320 	bic.w	r3, r3, #32
 8022700:	6023      	str	r3, [r4, #0]
 8022702:	e7f6      	b.n	80226f2 <_printf_i+0x196>
 8022704:	4616      	mov	r6, r2
 8022706:	e7bd      	b.n	8022684 <_printf_i+0x128>
 8022708:	6833      	ldr	r3, [r6, #0]
 802270a:	6825      	ldr	r5, [r4, #0]
 802270c:	1d18      	adds	r0, r3, #4
 802270e:	6961      	ldr	r1, [r4, #20]
 8022710:	6030      	str	r0, [r6, #0]
 8022712:	062e      	lsls	r6, r5, #24
 8022714:	681b      	ldr	r3, [r3, #0]
 8022716:	d501      	bpl.n	802271c <_printf_i+0x1c0>
 8022718:	6019      	str	r1, [r3, #0]
 802271a:	e002      	b.n	8022722 <_printf_i+0x1c6>
 802271c:	0668      	lsls	r0, r5, #25
 802271e:	d5fb      	bpl.n	8022718 <_printf_i+0x1bc>
 8022720:	8019      	strh	r1, [r3, #0]
 8022722:	2300      	movs	r3, #0
 8022724:	4616      	mov	r6, r2
 8022726:	6123      	str	r3, [r4, #16]
 8022728:	e7bc      	b.n	80226a4 <_printf_i+0x148>
 802272a:	6833      	ldr	r3, [r6, #0]
 802272c:	2100      	movs	r1, #0
 802272e:	1d1a      	adds	r2, r3, #4
 8022730:	6032      	str	r2, [r6, #0]
 8022732:	681e      	ldr	r6, [r3, #0]
 8022734:	6862      	ldr	r2, [r4, #4]
 8022736:	4630      	mov	r0, r6
 8022738:	f000 f970 	bl	8022a1c <memchr>
 802273c:	b108      	cbz	r0, 8022742 <_printf_i+0x1e6>
 802273e:	1b80      	subs	r0, r0, r6
 8022740:	6060      	str	r0, [r4, #4]
 8022742:	6863      	ldr	r3, [r4, #4]
 8022744:	6123      	str	r3, [r4, #16]
 8022746:	2300      	movs	r3, #0
 8022748:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802274c:	e7aa      	b.n	80226a4 <_printf_i+0x148>
 802274e:	6923      	ldr	r3, [r4, #16]
 8022750:	4632      	mov	r2, r6
 8022752:	4649      	mov	r1, r9
 8022754:	4640      	mov	r0, r8
 8022756:	47d0      	blx	sl
 8022758:	3001      	adds	r0, #1
 802275a:	d0ad      	beq.n	80226b8 <_printf_i+0x15c>
 802275c:	6823      	ldr	r3, [r4, #0]
 802275e:	079b      	lsls	r3, r3, #30
 8022760:	d413      	bmi.n	802278a <_printf_i+0x22e>
 8022762:	68e0      	ldr	r0, [r4, #12]
 8022764:	9b03      	ldr	r3, [sp, #12]
 8022766:	4298      	cmp	r0, r3
 8022768:	bfb8      	it	lt
 802276a:	4618      	movlt	r0, r3
 802276c:	e7a6      	b.n	80226bc <_printf_i+0x160>
 802276e:	2301      	movs	r3, #1
 8022770:	4632      	mov	r2, r6
 8022772:	4649      	mov	r1, r9
 8022774:	4640      	mov	r0, r8
 8022776:	47d0      	blx	sl
 8022778:	3001      	adds	r0, #1
 802277a:	d09d      	beq.n	80226b8 <_printf_i+0x15c>
 802277c:	3501      	adds	r5, #1
 802277e:	68e3      	ldr	r3, [r4, #12]
 8022780:	9903      	ldr	r1, [sp, #12]
 8022782:	1a5b      	subs	r3, r3, r1
 8022784:	42ab      	cmp	r3, r5
 8022786:	dcf2      	bgt.n	802276e <_printf_i+0x212>
 8022788:	e7eb      	b.n	8022762 <_printf_i+0x206>
 802278a:	2500      	movs	r5, #0
 802278c:	f104 0619 	add.w	r6, r4, #25
 8022790:	e7f5      	b.n	802277e <_printf_i+0x222>
 8022792:	bf00      	nop
 8022794:	0802501d 	.word	0x0802501d
 8022798:	0802502e 	.word	0x0802502e

0802279c <__sflush_r>:
 802279c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80227a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80227a4:	0716      	lsls	r6, r2, #28
 80227a6:	4605      	mov	r5, r0
 80227a8:	460c      	mov	r4, r1
 80227aa:	d454      	bmi.n	8022856 <__sflush_r+0xba>
 80227ac:	684b      	ldr	r3, [r1, #4]
 80227ae:	2b00      	cmp	r3, #0
 80227b0:	dc02      	bgt.n	80227b8 <__sflush_r+0x1c>
 80227b2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80227b4:	2b00      	cmp	r3, #0
 80227b6:	dd48      	ble.n	802284a <__sflush_r+0xae>
 80227b8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80227ba:	2e00      	cmp	r6, #0
 80227bc:	d045      	beq.n	802284a <__sflush_r+0xae>
 80227be:	2300      	movs	r3, #0
 80227c0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80227c4:	682f      	ldr	r7, [r5, #0]
 80227c6:	6a21      	ldr	r1, [r4, #32]
 80227c8:	602b      	str	r3, [r5, #0]
 80227ca:	d030      	beq.n	802282e <__sflush_r+0x92>
 80227cc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80227ce:	89a3      	ldrh	r3, [r4, #12]
 80227d0:	0759      	lsls	r1, r3, #29
 80227d2:	d505      	bpl.n	80227e0 <__sflush_r+0x44>
 80227d4:	6863      	ldr	r3, [r4, #4]
 80227d6:	1ad2      	subs	r2, r2, r3
 80227d8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80227da:	b10b      	cbz	r3, 80227e0 <__sflush_r+0x44>
 80227dc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80227de:	1ad2      	subs	r2, r2, r3
 80227e0:	2300      	movs	r3, #0
 80227e2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80227e4:	6a21      	ldr	r1, [r4, #32]
 80227e6:	4628      	mov	r0, r5
 80227e8:	47b0      	blx	r6
 80227ea:	1c43      	adds	r3, r0, #1
 80227ec:	89a3      	ldrh	r3, [r4, #12]
 80227ee:	d106      	bne.n	80227fe <__sflush_r+0x62>
 80227f0:	6829      	ldr	r1, [r5, #0]
 80227f2:	291d      	cmp	r1, #29
 80227f4:	d82b      	bhi.n	802284e <__sflush_r+0xb2>
 80227f6:	4a2a      	ldr	r2, [pc, #168]	@ (80228a0 <__sflush_r+0x104>)
 80227f8:	410a      	asrs	r2, r1
 80227fa:	07d6      	lsls	r6, r2, #31
 80227fc:	d427      	bmi.n	802284e <__sflush_r+0xb2>
 80227fe:	2200      	movs	r2, #0
 8022800:	04d9      	lsls	r1, r3, #19
 8022802:	6062      	str	r2, [r4, #4]
 8022804:	6922      	ldr	r2, [r4, #16]
 8022806:	6022      	str	r2, [r4, #0]
 8022808:	d504      	bpl.n	8022814 <__sflush_r+0x78>
 802280a:	1c42      	adds	r2, r0, #1
 802280c:	d101      	bne.n	8022812 <__sflush_r+0x76>
 802280e:	682b      	ldr	r3, [r5, #0]
 8022810:	b903      	cbnz	r3, 8022814 <__sflush_r+0x78>
 8022812:	6560      	str	r0, [r4, #84]	@ 0x54
 8022814:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8022816:	602f      	str	r7, [r5, #0]
 8022818:	b1b9      	cbz	r1, 802284a <__sflush_r+0xae>
 802281a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802281e:	4299      	cmp	r1, r3
 8022820:	d002      	beq.n	8022828 <__sflush_r+0x8c>
 8022822:	4628      	mov	r0, r5
 8022824:	f7ff fc9c 	bl	8022160 <_free_r>
 8022828:	2300      	movs	r3, #0
 802282a:	6363      	str	r3, [r4, #52]	@ 0x34
 802282c:	e00d      	b.n	802284a <__sflush_r+0xae>
 802282e:	2301      	movs	r3, #1
 8022830:	4628      	mov	r0, r5
 8022832:	47b0      	blx	r6
 8022834:	4602      	mov	r2, r0
 8022836:	1c50      	adds	r0, r2, #1
 8022838:	d1c9      	bne.n	80227ce <__sflush_r+0x32>
 802283a:	682b      	ldr	r3, [r5, #0]
 802283c:	2b00      	cmp	r3, #0
 802283e:	d0c6      	beq.n	80227ce <__sflush_r+0x32>
 8022840:	2b1d      	cmp	r3, #29
 8022842:	d001      	beq.n	8022848 <__sflush_r+0xac>
 8022844:	2b16      	cmp	r3, #22
 8022846:	d11d      	bne.n	8022884 <__sflush_r+0xe8>
 8022848:	602f      	str	r7, [r5, #0]
 802284a:	2000      	movs	r0, #0
 802284c:	e021      	b.n	8022892 <__sflush_r+0xf6>
 802284e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8022852:	b21b      	sxth	r3, r3
 8022854:	e01a      	b.n	802288c <__sflush_r+0xf0>
 8022856:	690f      	ldr	r7, [r1, #16]
 8022858:	2f00      	cmp	r7, #0
 802285a:	d0f6      	beq.n	802284a <__sflush_r+0xae>
 802285c:	0793      	lsls	r3, r2, #30
 802285e:	680e      	ldr	r6, [r1, #0]
 8022860:	600f      	str	r7, [r1, #0]
 8022862:	bf0c      	ite	eq
 8022864:	694b      	ldreq	r3, [r1, #20]
 8022866:	2300      	movne	r3, #0
 8022868:	eba6 0807 	sub.w	r8, r6, r7
 802286c:	608b      	str	r3, [r1, #8]
 802286e:	f1b8 0f00 	cmp.w	r8, #0
 8022872:	ddea      	ble.n	802284a <__sflush_r+0xae>
 8022874:	4643      	mov	r3, r8
 8022876:	463a      	mov	r2, r7
 8022878:	6a21      	ldr	r1, [r4, #32]
 802287a:	4628      	mov	r0, r5
 802287c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802287e:	47b0      	blx	r6
 8022880:	2800      	cmp	r0, #0
 8022882:	dc08      	bgt.n	8022896 <__sflush_r+0xfa>
 8022884:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022888:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802288c:	f04f 30ff 	mov.w	r0, #4294967295
 8022890:	81a3      	strh	r3, [r4, #12]
 8022892:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022896:	4407      	add	r7, r0
 8022898:	eba8 0800 	sub.w	r8, r8, r0
 802289c:	e7e7      	b.n	802286e <__sflush_r+0xd2>
 802289e:	bf00      	nop
 80228a0:	dfbffffe 	.word	0xdfbffffe

080228a4 <_fflush_r>:
 80228a4:	b538      	push	{r3, r4, r5, lr}
 80228a6:	690b      	ldr	r3, [r1, #16]
 80228a8:	4605      	mov	r5, r0
 80228aa:	460c      	mov	r4, r1
 80228ac:	b913      	cbnz	r3, 80228b4 <_fflush_r+0x10>
 80228ae:	2500      	movs	r5, #0
 80228b0:	4628      	mov	r0, r5
 80228b2:	bd38      	pop	{r3, r4, r5, pc}
 80228b4:	b118      	cbz	r0, 80228be <_fflush_r+0x1a>
 80228b6:	6a03      	ldr	r3, [r0, #32]
 80228b8:	b90b      	cbnz	r3, 80228be <_fflush_r+0x1a>
 80228ba:	f7ff fa8b 	bl	8021dd4 <__sinit>
 80228be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80228c2:	2b00      	cmp	r3, #0
 80228c4:	d0f3      	beq.n	80228ae <_fflush_r+0xa>
 80228c6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80228c8:	07d0      	lsls	r0, r2, #31
 80228ca:	d404      	bmi.n	80228d6 <_fflush_r+0x32>
 80228cc:	0599      	lsls	r1, r3, #22
 80228ce:	d402      	bmi.n	80228d6 <_fflush_r+0x32>
 80228d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80228d2:	f7ff fbd8 	bl	8022086 <__retarget_lock_acquire_recursive>
 80228d6:	4628      	mov	r0, r5
 80228d8:	4621      	mov	r1, r4
 80228da:	f7ff ff5f 	bl	802279c <__sflush_r>
 80228de:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80228e0:	4605      	mov	r5, r0
 80228e2:	07da      	lsls	r2, r3, #31
 80228e4:	d4e4      	bmi.n	80228b0 <_fflush_r+0xc>
 80228e6:	89a3      	ldrh	r3, [r4, #12]
 80228e8:	059b      	lsls	r3, r3, #22
 80228ea:	d4e1      	bmi.n	80228b0 <_fflush_r+0xc>
 80228ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80228ee:	f7ff fbcb 	bl	8022088 <__retarget_lock_release_recursive>
 80228f2:	e7dd      	b.n	80228b0 <_fflush_r+0xc>

080228f4 <__swbuf_r>:
 80228f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80228f6:	460e      	mov	r6, r1
 80228f8:	4614      	mov	r4, r2
 80228fa:	4605      	mov	r5, r0
 80228fc:	b118      	cbz	r0, 8022906 <__swbuf_r+0x12>
 80228fe:	6a03      	ldr	r3, [r0, #32]
 8022900:	b90b      	cbnz	r3, 8022906 <__swbuf_r+0x12>
 8022902:	f7ff fa67 	bl	8021dd4 <__sinit>
 8022906:	69a3      	ldr	r3, [r4, #24]
 8022908:	60a3      	str	r3, [r4, #8]
 802290a:	89a3      	ldrh	r3, [r4, #12]
 802290c:	071a      	lsls	r2, r3, #28
 802290e:	d501      	bpl.n	8022914 <__swbuf_r+0x20>
 8022910:	6923      	ldr	r3, [r4, #16]
 8022912:	b943      	cbnz	r3, 8022926 <__swbuf_r+0x32>
 8022914:	4621      	mov	r1, r4
 8022916:	4628      	mov	r0, r5
 8022918:	f000 f82a 	bl	8022970 <__swsetup_r>
 802291c:	b118      	cbz	r0, 8022926 <__swbuf_r+0x32>
 802291e:	f04f 37ff 	mov.w	r7, #4294967295
 8022922:	4638      	mov	r0, r7
 8022924:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022926:	6823      	ldr	r3, [r4, #0]
 8022928:	b2f6      	uxtb	r6, r6
 802292a:	6922      	ldr	r2, [r4, #16]
 802292c:	4637      	mov	r7, r6
 802292e:	1a98      	subs	r0, r3, r2
 8022930:	6963      	ldr	r3, [r4, #20]
 8022932:	4283      	cmp	r3, r0
 8022934:	dc05      	bgt.n	8022942 <__swbuf_r+0x4e>
 8022936:	4621      	mov	r1, r4
 8022938:	4628      	mov	r0, r5
 802293a:	f7ff ffb3 	bl	80228a4 <_fflush_r>
 802293e:	2800      	cmp	r0, #0
 8022940:	d1ed      	bne.n	802291e <__swbuf_r+0x2a>
 8022942:	68a3      	ldr	r3, [r4, #8]
 8022944:	3b01      	subs	r3, #1
 8022946:	60a3      	str	r3, [r4, #8]
 8022948:	6823      	ldr	r3, [r4, #0]
 802294a:	1c5a      	adds	r2, r3, #1
 802294c:	6022      	str	r2, [r4, #0]
 802294e:	701e      	strb	r6, [r3, #0]
 8022950:	1c43      	adds	r3, r0, #1
 8022952:	6962      	ldr	r2, [r4, #20]
 8022954:	429a      	cmp	r2, r3
 8022956:	d004      	beq.n	8022962 <__swbuf_r+0x6e>
 8022958:	89a3      	ldrh	r3, [r4, #12]
 802295a:	07db      	lsls	r3, r3, #31
 802295c:	d5e1      	bpl.n	8022922 <__swbuf_r+0x2e>
 802295e:	2e0a      	cmp	r6, #10
 8022960:	d1df      	bne.n	8022922 <__swbuf_r+0x2e>
 8022962:	4621      	mov	r1, r4
 8022964:	4628      	mov	r0, r5
 8022966:	f7ff ff9d 	bl	80228a4 <_fflush_r>
 802296a:	2800      	cmp	r0, #0
 802296c:	d0d9      	beq.n	8022922 <__swbuf_r+0x2e>
 802296e:	e7d6      	b.n	802291e <__swbuf_r+0x2a>

08022970 <__swsetup_r>:
 8022970:	b538      	push	{r3, r4, r5, lr}
 8022972:	4b29      	ldr	r3, [pc, #164]	@ (8022a18 <__swsetup_r+0xa8>)
 8022974:	4605      	mov	r5, r0
 8022976:	460c      	mov	r4, r1
 8022978:	6818      	ldr	r0, [r3, #0]
 802297a:	b118      	cbz	r0, 8022984 <__swsetup_r+0x14>
 802297c:	6a03      	ldr	r3, [r0, #32]
 802297e:	b90b      	cbnz	r3, 8022984 <__swsetup_r+0x14>
 8022980:	f7ff fa28 	bl	8021dd4 <__sinit>
 8022984:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022988:	0719      	lsls	r1, r3, #28
 802298a:	d422      	bmi.n	80229d2 <__swsetup_r+0x62>
 802298c:	06da      	lsls	r2, r3, #27
 802298e:	d407      	bmi.n	80229a0 <__swsetup_r+0x30>
 8022990:	2209      	movs	r2, #9
 8022992:	602a      	str	r2, [r5, #0]
 8022994:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8022998:	f04f 30ff 	mov.w	r0, #4294967295
 802299c:	81a3      	strh	r3, [r4, #12]
 802299e:	e033      	b.n	8022a08 <__swsetup_r+0x98>
 80229a0:	0758      	lsls	r0, r3, #29
 80229a2:	d512      	bpl.n	80229ca <__swsetup_r+0x5a>
 80229a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80229a6:	b141      	cbz	r1, 80229ba <__swsetup_r+0x4a>
 80229a8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80229ac:	4299      	cmp	r1, r3
 80229ae:	d002      	beq.n	80229b6 <__swsetup_r+0x46>
 80229b0:	4628      	mov	r0, r5
 80229b2:	f7ff fbd5 	bl	8022160 <_free_r>
 80229b6:	2300      	movs	r3, #0
 80229b8:	6363      	str	r3, [r4, #52]	@ 0x34
 80229ba:	89a3      	ldrh	r3, [r4, #12]
 80229bc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80229c0:	81a3      	strh	r3, [r4, #12]
 80229c2:	2300      	movs	r3, #0
 80229c4:	6063      	str	r3, [r4, #4]
 80229c6:	6923      	ldr	r3, [r4, #16]
 80229c8:	6023      	str	r3, [r4, #0]
 80229ca:	89a3      	ldrh	r3, [r4, #12]
 80229cc:	f043 0308 	orr.w	r3, r3, #8
 80229d0:	81a3      	strh	r3, [r4, #12]
 80229d2:	6923      	ldr	r3, [r4, #16]
 80229d4:	b94b      	cbnz	r3, 80229ea <__swsetup_r+0x7a>
 80229d6:	89a3      	ldrh	r3, [r4, #12]
 80229d8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80229dc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80229e0:	d003      	beq.n	80229ea <__swsetup_r+0x7a>
 80229e2:	4621      	mov	r1, r4
 80229e4:	4628      	mov	r0, r5
 80229e6:	f000 f84c 	bl	8022a82 <__smakebuf_r>
 80229ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80229ee:	f013 0201 	ands.w	r2, r3, #1
 80229f2:	d00a      	beq.n	8022a0a <__swsetup_r+0x9a>
 80229f4:	2200      	movs	r2, #0
 80229f6:	60a2      	str	r2, [r4, #8]
 80229f8:	6962      	ldr	r2, [r4, #20]
 80229fa:	4252      	negs	r2, r2
 80229fc:	61a2      	str	r2, [r4, #24]
 80229fe:	6922      	ldr	r2, [r4, #16]
 8022a00:	b942      	cbnz	r2, 8022a14 <__swsetup_r+0xa4>
 8022a02:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8022a06:	d1c5      	bne.n	8022994 <__swsetup_r+0x24>
 8022a08:	bd38      	pop	{r3, r4, r5, pc}
 8022a0a:	0799      	lsls	r1, r3, #30
 8022a0c:	bf58      	it	pl
 8022a0e:	6962      	ldrpl	r2, [r4, #20]
 8022a10:	60a2      	str	r2, [r4, #8]
 8022a12:	e7f4      	b.n	80229fe <__swsetup_r+0x8e>
 8022a14:	2000      	movs	r0, #0
 8022a16:	e7f7      	b.n	8022a08 <__swsetup_r+0x98>
 8022a18:	200000a0 	.word	0x200000a0

08022a1c <memchr>:
 8022a1c:	b2c9      	uxtb	r1, r1
 8022a1e:	4603      	mov	r3, r0
 8022a20:	4402      	add	r2, r0
 8022a22:	b510      	push	{r4, lr}
 8022a24:	4293      	cmp	r3, r2
 8022a26:	4618      	mov	r0, r3
 8022a28:	d101      	bne.n	8022a2e <memchr+0x12>
 8022a2a:	2000      	movs	r0, #0
 8022a2c:	e003      	b.n	8022a36 <memchr+0x1a>
 8022a2e:	7804      	ldrb	r4, [r0, #0]
 8022a30:	3301      	adds	r3, #1
 8022a32:	428c      	cmp	r4, r1
 8022a34:	d1f6      	bne.n	8022a24 <memchr+0x8>
 8022a36:	bd10      	pop	{r4, pc}

08022a38 <__swhatbuf_r>:
 8022a38:	b570      	push	{r4, r5, r6, lr}
 8022a3a:	460c      	mov	r4, r1
 8022a3c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022a40:	b096      	sub	sp, #88	@ 0x58
 8022a42:	4615      	mov	r5, r2
 8022a44:	2900      	cmp	r1, #0
 8022a46:	461e      	mov	r6, r3
 8022a48:	da0c      	bge.n	8022a64 <__swhatbuf_r+0x2c>
 8022a4a:	89a3      	ldrh	r3, [r4, #12]
 8022a4c:	2100      	movs	r1, #0
 8022a4e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8022a52:	bf14      	ite	ne
 8022a54:	2340      	movne	r3, #64	@ 0x40
 8022a56:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8022a5a:	2000      	movs	r0, #0
 8022a5c:	6031      	str	r1, [r6, #0]
 8022a5e:	602b      	str	r3, [r5, #0]
 8022a60:	b016      	add	sp, #88	@ 0x58
 8022a62:	bd70      	pop	{r4, r5, r6, pc}
 8022a64:	466a      	mov	r2, sp
 8022a66:	f000 f849 	bl	8022afc <_fstat_r>
 8022a6a:	2800      	cmp	r0, #0
 8022a6c:	dbed      	blt.n	8022a4a <__swhatbuf_r+0x12>
 8022a6e:	9901      	ldr	r1, [sp, #4]
 8022a70:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8022a74:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8022a78:	4259      	negs	r1, r3
 8022a7a:	4159      	adcs	r1, r3
 8022a7c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8022a80:	e7eb      	b.n	8022a5a <__swhatbuf_r+0x22>

08022a82 <__smakebuf_r>:
 8022a82:	898b      	ldrh	r3, [r1, #12]
 8022a84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022a86:	079d      	lsls	r5, r3, #30
 8022a88:	4606      	mov	r6, r0
 8022a8a:	460c      	mov	r4, r1
 8022a8c:	d507      	bpl.n	8022a9e <__smakebuf_r+0x1c>
 8022a8e:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8022a92:	6023      	str	r3, [r4, #0]
 8022a94:	6123      	str	r3, [r4, #16]
 8022a96:	2301      	movs	r3, #1
 8022a98:	6163      	str	r3, [r4, #20]
 8022a9a:	b003      	add	sp, #12
 8022a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022a9e:	ab01      	add	r3, sp, #4
 8022aa0:	466a      	mov	r2, sp
 8022aa2:	f7ff ffc9 	bl	8022a38 <__swhatbuf_r>
 8022aa6:	9f00      	ldr	r7, [sp, #0]
 8022aa8:	4605      	mov	r5, r0
 8022aaa:	4630      	mov	r0, r6
 8022aac:	4639      	mov	r1, r7
 8022aae:	f7ff f86b 	bl	8021b88 <_malloc_r>
 8022ab2:	b948      	cbnz	r0, 8022ac8 <__smakebuf_r+0x46>
 8022ab4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022ab8:	059a      	lsls	r2, r3, #22
 8022aba:	d4ee      	bmi.n	8022a9a <__smakebuf_r+0x18>
 8022abc:	f023 0303 	bic.w	r3, r3, #3
 8022ac0:	f043 0302 	orr.w	r3, r3, #2
 8022ac4:	81a3      	strh	r3, [r4, #12]
 8022ac6:	e7e2      	b.n	8022a8e <__smakebuf_r+0xc>
 8022ac8:	89a3      	ldrh	r3, [r4, #12]
 8022aca:	6020      	str	r0, [r4, #0]
 8022acc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8022ad0:	81a3      	strh	r3, [r4, #12]
 8022ad2:	9b01      	ldr	r3, [sp, #4]
 8022ad4:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8022ad8:	b15b      	cbz	r3, 8022af2 <__smakebuf_r+0x70>
 8022ada:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022ade:	4630      	mov	r0, r6
 8022ae0:	f000 f81e 	bl	8022b20 <_isatty_r>
 8022ae4:	b128      	cbz	r0, 8022af2 <__smakebuf_r+0x70>
 8022ae6:	89a3      	ldrh	r3, [r4, #12]
 8022ae8:	f023 0303 	bic.w	r3, r3, #3
 8022aec:	f043 0301 	orr.w	r3, r3, #1
 8022af0:	81a3      	strh	r3, [r4, #12]
 8022af2:	89a3      	ldrh	r3, [r4, #12]
 8022af4:	431d      	orrs	r5, r3
 8022af6:	81a5      	strh	r5, [r4, #12]
 8022af8:	e7cf      	b.n	8022a9a <__smakebuf_r+0x18>
	...

08022afc <_fstat_r>:
 8022afc:	b538      	push	{r3, r4, r5, lr}
 8022afe:	2300      	movs	r3, #0
 8022b00:	4d06      	ldr	r5, [pc, #24]	@ (8022b1c <_fstat_r+0x20>)
 8022b02:	4604      	mov	r4, r0
 8022b04:	4608      	mov	r0, r1
 8022b06:	4611      	mov	r1, r2
 8022b08:	602b      	str	r3, [r5, #0]
 8022b0a:	f7de fae3 	bl	80010d4 <_fstat>
 8022b0e:	1c43      	adds	r3, r0, #1
 8022b10:	d102      	bne.n	8022b18 <_fstat_r+0x1c>
 8022b12:	682b      	ldr	r3, [r5, #0]
 8022b14:	b103      	cbz	r3, 8022b18 <_fstat_r+0x1c>
 8022b16:	6023      	str	r3, [r4, #0]
 8022b18:	bd38      	pop	{r3, r4, r5, pc}
 8022b1a:	bf00      	nop
 8022b1c:	20002dc8 	.word	0x20002dc8

08022b20 <_isatty_r>:
 8022b20:	b538      	push	{r3, r4, r5, lr}
 8022b22:	2300      	movs	r3, #0
 8022b24:	4d05      	ldr	r5, [pc, #20]	@ (8022b3c <_isatty_r+0x1c>)
 8022b26:	4604      	mov	r4, r0
 8022b28:	4608      	mov	r0, r1
 8022b2a:	602b      	str	r3, [r5, #0]
 8022b2c:	f7de fae2 	bl	80010f4 <_isatty>
 8022b30:	1c43      	adds	r3, r0, #1
 8022b32:	d102      	bne.n	8022b3a <_isatty_r+0x1a>
 8022b34:	682b      	ldr	r3, [r5, #0]
 8022b36:	b103      	cbz	r3, 8022b3a <_isatty_r+0x1a>
 8022b38:	6023      	str	r3, [r4, #0]
 8022b3a:	bd38      	pop	{r3, r4, r5, pc}
 8022b3c:	20002dc8 	.word	0x20002dc8

08022b40 <_init>:
 8022b40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022b42:	bf00      	nop
 8022b44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022b46:	bc08      	pop	{r3}
 8022b48:	469e      	mov	lr, r3
 8022b4a:	4770      	bx	lr

08022b4c <_fini>:
 8022b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022b4e:	bf00      	nop
 8022b50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022b52:	bc08      	pop	{r3}
 8022b54:	469e      	mov	lr, r3
 8022b56:	4770      	bx	lr
